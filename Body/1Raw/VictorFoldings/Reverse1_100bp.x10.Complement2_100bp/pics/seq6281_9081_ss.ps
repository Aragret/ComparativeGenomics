%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[157.52902222 418.43444824]
[164.68165588 405.20266724]
[174.08213806 393.46084595]
[185.42826843 383.58636475]
[198.35533142 375.89669800]
[193.10861206 361.84423828]
[187.86189270 347.79174805]
[174.24679565 341.86181641]
[168.72569275 327.68533325]
[175.03788757 313.44476318]
[169.79116821 299.39230347]
[164.54444885 285.33981323]
[152.84414673 276.12289429]
[155.26565552 260.48806763]
[150.01893616 246.43560791]
[144.77221680 232.38313293]
[139.52549744 218.33067322]
[127.82518768 209.11372375]
[130.24668884 193.47892761]
[124.96214294 188.31217957]
[125.02817535 179.17797852]
[119.57282257 165.20518494]
[113.70385742 151.40100098]
[107.83489990 137.59683228]
[101.96593475 123.79265594]
[96.09697723 109.98847961]
[88.24522400 97.20763397]
[78.58441162 85.73293304]
[68.92359924 74.25823212]
[65.05957794 88.75200653]
[51.38068771 94.90731812]
[37.97048950 88.18670654]
[34.71448898 73.54434967]
[44.01288605 61.77405930]
[59.00974655 61.55175781]
[50.22914505 49.39030075]
[41.44853973 37.22884750]
[32.66793823 25.06739044]
[23.88733292 12.90593433]
[15.10673046 0.74447846]
[6.32612753 -11.41697693]
[-6.25946856 -14.23931313]
[-13.32248497 -24.54938316]
[-11.52649879 -36.51186752]
[-20.12506294 -48.80270386]
[-34.37570190 -55.67510605]
[-35.33159256 -70.53900909]
[-43.93015671 -82.82984161]
[-58.18079376 -89.70224762]
[-59.13668442 -104.56614685]
[-67.73524475 -116.85697937]
[-73.55461884 -119.99488831]
[-76.47701263 -124.86896515]
[-76.40042877 -129.64424133]
[-84.62923431 -142.18563843]
[-92.85804749 -154.72703552]
[-101.08685303 -167.26843262]
[-114.44434357 -160.41207886]
[-128.45495605 -155.01440430]
[-142.95993042 -151.13658142]
[-157.79493713 -148.82252502]
[-172.79187012 -148.09846497]
[-187.78079224 -148.97262573]
[-202.59188843 -151.43507385]
[-217.05731201 -155.45791626]
[-231.01318359 -160.99557495]
[-244.30137634 -167.98530579]
[-256.77130127 -176.34791565]
[-268.28167725 -185.98863220]
[-278.70205688 -196.79823303]
[-287.91442871 -208.65422058]
[-295.81436157 -221.42227173]
[-302.31234741 -234.95771790]
[-307.33474731 -249.10719299]
[-310.82470703 -263.71035767]
[-312.74264526 -278.60174561]
[-313.06683350 -293.61264038]
[-311.79357910 -308.57296753]
[-308.93734741 -323.31317139]
[-304.53045654 -337.66625977]
[-298.62289429 -351.46963501]
[-291.28155518 -364.56683350]
[-282.58966064 -376.80950928]
[-272.64562988 -388.05889893]
[-261.56222534 -398.18756104]
[-249.46495056 -407.08071899]
[-236.49093628 -414.63763428]
[-222.78713989 -420.77264404]
[-208.50888062 -425.41622925]
[-193.81790161 -428.51580811]
[-178.88069153 -430.03625488]
[-163.86648560 -429.96035767]
[-148.94540405 -428.28890991]
[-134.28652954 -425.04092407]
[-120.05595398 -420.25314331]
[-106.41491699 -413.97985840]
[-93.51797485 -406.29214478]
[-81.51126862 -397.27709961]
[-70.53084564 -387.03686523]
[-60.70111465 -375.68746948]
[-52.13346100 -363.35754395]
[-44.92495728 -350.18676758]
[-39.15728378 -336.32437134]
[-34.89579391 -321.92742920]
[-32.18877029 -307.15905762]
[-31.06688881 -292.18664551]
[-31.54286003 -277.17980957]
[-33.61128998 -262.30856323]
[-37.24874496 -247.74143982]
[-42.41400528 -233.64349365]
[-49.04854965 -220.17445374]
[-57.07719803 -207.48693848]
[-66.40898132 -195.72471619]
[-76.93817139 -185.02105713]
[-88.54544830 -175.49723816]
[-80.31664276 -162.95584106]
[-72.08783722 -150.41444397]
[-63.85902786 -137.87304688]
[-55.44440842 -125.45554352]
[-46.84584427 -113.16471100]
[-33.21023560 -107.17143250]
[-31.63931656 -91.42840576]
[-23.04075241 -79.13757324]
[-9.40514183 -73.14429474]
[-7.83422470 -57.40126801]
[0.76433939 -45.11043167]
[17.04294968 -38.55499268]
[18.48758316 -20.19758034]
[27.26818657 -8.03612518]
[36.04878998 4.12533092]
[44.82939148 16.28678703]
[53.60999680 28.44824219]
[62.39059830 40.60969925]
[71.17120361 52.77115250]
[80.39830017 64.59742737]
[90.05911255 76.07212067]
[99.71992493 87.54682159]
[96.34522247 72.93137360]
[97.16735077 57.95392227]
[102.12147522 43.79565048]
[110.81688690 31.57313919]
[122.56784058 22.25030899]
[136.44760132 16.56239700]
[151.36154175 14.95797539]
[166.13349915 17.56357384]
[179.59851074 24.17370605]
[190.69462585 34.26706696]
[198.54679871 47.04765320]
[202.53576660 61.50753784]
[202.34692383 76.50634766]
[197.99517822 90.86122131]
[189.82373047 103.44006348]
[178.47700500 113.25086212]
[164.84985352 119.51989746]
[150.01696777 121.75276184]
[135.14814758 119.77336884]
[121.41598511 113.73781586]
[109.90115356 104.11951447]
[115.77011108 117.92369080]
[121.63907623 131.72787476]
[127.50803375 145.53204346]
[133.37699890 159.33622742]
[136.93704224 161.82218933]
[139.28474426 164.99281311]
[140.35369873 168.38290405]
[140.23545837 171.55349731]
[139.15721130 174.14106750]
[144.29916382 188.23220825]
[156.37475586 198.45428467]
[153.57797241 213.08395386]
[158.82469177 227.13642883]
[164.07141113 241.18888855]
[169.31811523 255.24136353]
[181.39370728 265.46343994]
[178.59692383 280.09310913]
[183.84364319 294.14556885]
[189.09036255 308.19805908]
[203.19087219 314.81719971]
[208.31161499 329.14315796]
[201.91436768 342.54504395]
[207.16108704 356.59750366]
[212.40780640 370.64999390]
[227.21128845 367.98599243]
[242.25253296 368.00830078]
[257.04803467 370.71618652]
[271.12219238 376.02258301]
[284.02258301 383.75692749]
[295.33450317 393.67056274]
[304.69427490 405.44485474]
[311.80108643 418.70129395]
[316.42648315 433.01373291]
[318.42172241 447.92208862]
[317.72271729 462.94708252]
[314.35189819 477.60580444]
[308.41766357 491.42694092]
[300.11074829 503.96627808]
[289.69818115 514.82067871]
[277.51470947 523.64129639]
[263.95193481 530.14447021]
[249.44590759 534.12121582]
[234.46289062 535.44372559]
[219.48454285 534.06939697]
[204.99234009 530.04248047]
[191.45216370 523.49243164]
[179.29927063 514.62976074]
[168.92433167 503.73934937]
[160.66084290 491.17135620]
[154.77444458 477.32974243]
[151.45437622 462.65948486]
[150.80734253 447.63214111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 182]
[6 181]
[7 180]
[10 177]
[11 176]
[12 175]
[14 173]
[15 172]
[16 171]
[17 170]
[19 168]
[21 167]
[22 162]
[23 161]
[24 160]
[25 159]
[26 158]
[27 137]
[28 136]
[29 135]
[35 134]
[36 133]
[37 132]
[38 131]
[39 130]
[40 129]
[41 128]
[44 126]
[45 125]
[47 123]
[48 122]
[50 120]
[51 119]
[54 118]
[55 117]
[56 116]
[57 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
