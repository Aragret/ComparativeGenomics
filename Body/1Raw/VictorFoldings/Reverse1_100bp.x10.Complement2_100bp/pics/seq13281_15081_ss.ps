%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[177.06454468 508.12918091]
[176.39476013 493.14413452]
[175.72497559 478.15908813]
[175.05519104 463.17407227]
[174.38540649 448.18902588]
[172.71386719 433.28244019]
[170.04806519 418.52124023]
[167.38227844 403.76000977]
[164.71647644 388.99880981]
[161.61236572 374.32348633]
[158.07269287 359.74713135]
[154.53302002 345.17074585]
[149.89988708 339.41262817]
[151.05087280 330.35101318]
[147.29457092 315.82894897]
[136.31221008 305.76730347]
[139.88986206 290.35592651]
[135.70285034 275.95214844]
[131.51583862 261.54833984]
[127.32882690 247.14457703]
[116.34645844 237.08293152]
[119.92411804 221.67153931]
[115.73710632 207.26776123]
[111.55009460 192.86396790]
[107.36308289 178.46018982]
[103.17607117 164.05641174]
[97.51153564 177.94572449]
[85.29859924 186.65457153]
[70.32157135 187.48443604]
[57.22125244 180.17817688]
[50.05691147 166.99969482]
[51.04850388 152.03250122]
[59.88877106 139.91435242]
[73.83845520 134.40017700]
[88.57510376 137.19859314]
[99.53253937 147.44273376]
[97.30741882 132.60868835]
[85.20040131 129.18128967]
[75.28208160 121.43830109]
[69.01928711 110.52480316]
[67.33821106 98.05480194]
[70.48747253 85.87247467]
[78.00132751 75.77945709]
[88.76855469 69.26840973]
[86.98608398 54.37469101]
[85.20362091 39.48097229]
[83.42115784 24.58725548]
[81.63868713 9.69353867]
[79.85622406 -5.20017862]
[77.96292877 -20.08021355]
[75.95891571 -34.94574356]
[66.44726562 -47.58848953]
[72.41482544 -61.23537445]
[62.90317154 -73.87812042]
[68.87073517 -87.52500153]
[66.86672211 -102.39053345]
[64.86270905 -117.25605774]
[62.85869217 -132.12158203]
[60.85467911 -146.98712158]
[51.34302902 -159.62986755]
[57.31058884 -173.27674866]
[55.30657578 -188.14227295]
[42.27781296 -203.52453613]
[50.39176941 -221.07591248]
[47.94604111 -235.87518311]
[45.50031281 -250.67445374]
[43.05458450 -265.47372437]
[40.60886002 -280.27297974]
[38.16313171 -295.07226562]
[32.96475983 -281.00183105]
[23.08933830 -269.71130371]
[9.83615017 -262.68612671]
[-5.05112076 -260.85061646]
[-19.61379814 -264.44622803]
[-31.93591118 -272.99990845]
[-40.39627457 -285.38629150]
[-43.88178253 -299.97570801]
[-41.93385315 -314.84869385]
[-34.80877304 -328.04843140]
[-23.44396973 -337.83828735]
[-9.33467579 -342.93020630]
[5.66278696 -342.65429688]
[19.57524490 -337.04684448]
[30.57227325 -326.84561157]
[37.20767212 -313.39044189]
[38.10049057 -328.36386108]
[26.28272438 -338.24548340]
[22.59272766 -353.01834106]
[28.24225426 -366.96633911]
[40.87046814 -374.81912231]
[41.76328278 -389.79254150]
[42.65610123 -404.76593018]
[43.54891586 -419.73934937]
[44.44173050 -434.71273804]
[45.33454895 -449.68615723]
[46.22736359 -464.65954590]
[47.12017822 -479.63296509]
[32.90087891 -484.73083496]
[20.69460869 -493.62936401]
[11.49087429 -505.60714722]
[6.03578138 -519.69329834]
[4.77155018 -534.74578857]
[7.80066586 -549.54449463]
[14.87757111 -562.88964844]
[25.42857552 -573.69952393]
[38.59835052 -581.09777832]
[53.31929016 -584.48455811]
[68.39802551 -583.58551025]
[82.61219788 -578.47332764]
[94.80952454 -569.56256104]
[104.00122070 -557.57550049]
[109.44216156 -543.48394775]
[110.69126892 -528.43017578]
[107.64728546 -513.63452148]
[100.55697632 -500.29644775]
[89.99511719 -489.49719238]
[76.81791687 -482.11221313]
[62.09358597 -478.74014282]
[61.20076752 -463.76675415]
[60.30795288 -448.79333496]
[59.41513824 -433.81994629]
[58.52231979 -418.84652710]
[57.62950516 -403.87310791]
[56.73669052 -388.89971924]
[55.84387207 -373.92630005]
[67.44945526 -364.62854004]
[71.40149689 -350.10803223]
[65.98217010 -335.87832642]
[53.07389450 -327.47103882]
[52.18107986 -312.49761963]
[52.96240234 -297.51797485]
[55.40813065 -282.71871948]
[57.85385513 -267.91943359]
[60.29958344 -253.12017822]
[62.74531174 -238.32090759]
[65.19104004 -223.52163696]
[73.99942017 -218.34231567]
[78.59951019 -208.97280884]
[77.25568390 -198.40048218]
[70.17210388 -190.14628601]
[72.17611694 -175.28076172]
[81.54443359 -163.70129395]
[75.72020721 -148.99113464]
[77.72422028 -134.12561035]
[79.72823334 -119.26007843]
[81.73224640 -104.39454651]
[83.73625946 -89.52901459]
[93.10457611 -77.94955444]
[87.28035736 -63.23938751]
[96.64866638 -51.65992355]
[90.82444763 -36.94975662]
[92.82846069 -22.08422661]
[96.83740997 -15.87535381]
[94.74993896 -6.98264456]
[96.53240204 7.91107273]
[98.31487274 22.80479050]
[100.09733582 37.69850922]
[101.87980652 52.59222412]
[103.66226959 67.48593903]
[119.59290314 73.79515076]
[130.15045166 87.29068756]
[132.43963623 104.27158356]
[125.83267975 120.08105469]
[112.14146423 130.38356018]
[114.36657715 145.21760559]
[117.57985687 159.86940002]
[121.76686859 174.27317810]
[125.95387268 188.67695618]
[130.14088440 203.08074951]
[134.32789612 217.48452759]
[145.60975647 228.57643127]
[141.73262024 242.95756531]
[145.91961670 257.36132812]
[150.10662842 271.76513672]
[154.29364014 286.16891479]
[165.57550049 297.26080322]
[161.69836426 311.64193726]
[164.93777466 314.53332520]
[166.89205933 317.96047974]
[167.55059814 321.45358276]
[167.05642700 324.58764648]
[165.67834473 327.02874756]
[169.10940552 341.63107300]
[172.64907837 356.20745850]
[176.18875122 370.78381348]
[179.29582214 373.81698608]
[181.09512329 377.32797241]
[181.59703064 380.84698486]
[180.96340942 383.95587158]
[179.47769165 386.33300781]
[182.14349365 401.09420776]
[184.80928040 415.85543823]
[187.47508240 430.61666870]
[194.55384827 417.39202881]
[207.60653687 410.00100708]
[222.58863831 410.73376465]
[234.85775757 419.36328125]
[240.61219788 433.21557617]
[238.06887817 447.99838257]
[228.01588440 459.13110352]
[213.56822205 463.16409302]
[199.20266724 458.84774780]
[189.37045288 447.51922607]
[190.04023743 462.50427246]
[190.71002197 477.48931885]
[191.37980652 492.47436523]
[192.04959106 507.45938110]
[201.32638550 520.98248291]
[194.01029968 535.65917969]
[177.62751770 536.39147949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 205]
[4 204]
[5 203]
[6 193]
[7 192]
[8 191]
[9 190]
[10 185]
[11 184]
[12 183]
[14 182]
[15 177]
[17 175]
[18 174]
[19 173]
[20 172]
[22 170]
[23 169]
[24 168]
[25 167]
[26 166]
[36 165]
[37 164]
[44 159]
[45 158]
[46 157]
[47 156]
[48 155]
[49 154]
[50 152]
[51 151]
[53 149]
[55 147]
[56 146]
[57 145]
[58 144]
[59 143]
[61 141]
[62 140]
[64 136]
[65 135]
[66 134]
[67 133]
[68 132]
[69 131]
[85 130]
[86 129]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
