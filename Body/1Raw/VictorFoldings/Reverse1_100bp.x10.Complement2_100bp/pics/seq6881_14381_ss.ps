%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[81.21533966 762.58837891]
[66.33296967 764.52618408]
[51.34368134 765.27545166]
[36.34225082 764.83148193]
[21.42351913 763.19696045]
[6.68180704 760.38238525]
[-7.78967953 756.40539551]
[-21.89944649 751.29125977]
[-35.55828857 745.07226562]
[-48.67984390 737.78771973]
[-61.18115997 729.48364258]
[-72.98319244 720.21258545]
[-84.01132202 710.03320312]
[-94.19583130 699.00976562]
[-103.47232819 687.21203613]
[-111.78215790 674.71453857]
[-119.07279205 661.59637451]
[-125.29812622 647.94042969]
[-130.41880798 633.83300781]
[-134.40245056 619.36334229]
[-137.22387695 604.62298584]
[-138.86526489 589.70495605]
[-139.31620789 574.70373535]
[-138.57386780 559.71411133]
[-136.64292908 544.83087158]
[-133.53562927 530.14807129]
[-129.27157593 515.75854492]
[-123.87775421 501.75329590]
[-117.38825226 488.22088623]
[-109.84410858 475.24682617]
[-101.29301453 462.91317749]
[-91.78903198 451.29791260]
[-81.39225769 440.47445679]
[-70.16841125 430.51126099]
[-58.18846893 421.47128296]
[-45.52816391 413.41171265]
[-32.26754379 406.38348389]
[-18.49044228 400.43103027]
[-4.28396797 395.59201050]
[10.26206017 391.89700317]
[25.05567741 389.36935425]
[40.00335312 388.02505493]
[55.01057816 387.87261963]
[69.98247528 388.91302490]
[72.20759583 374.07897949]
[66.44387817 360.34475708]
[76.14270782 347.84503174]
[78.36782074 333.01098633]
[80.37183380 318.14544678]
[82.15430450 303.25173950]
[83.93676758 288.35800171]
[85.71923065 273.46429443]
[87.50170135 258.57058716]
[89.28416443 243.67686462]
[90.28842163 228.71051025]
[90.51174927 213.71217346]
[90.73507690 198.71383667]
[83.18812561 185.87278748]
[91.13003540 172.18933105]
[91.35336304 157.19099426]
[91.57669067 142.19265747]
[91.80001831 127.19432068]
[88.75645447 120.45944977]
[92.13998413 111.97478485]
[85.68240356 99.57352448]
[92.86666870 87.57860565]
[93.31327820 72.58525848]
[93.75988007 57.59190750]
[94.20648956 42.59855652]
[92.01352692 38.85090637]
[91.20818329 34.98878860]
[91.65605927 31.46248627]
[93.09030914 28.63237572]
[95.15246582 26.73352432]
[96.49069977 11.79333878]
[97.82893372 -3.14684606]
[99.16716766 -18.08703041]
[100.50540161 -33.02721786]
[98.07468414 -39.17564011]
[98.97827911 -44.78639221]
[102.11239624 -48.39005280]
[103.89485931 -63.28377151]
[97.85227203 -77.90559387]
[107.04714203 -89.62325287]
[108.82961273 -104.51696777]
[110.61207581 -119.41069031]
[102.97434235 -136.16618347]
[114.03266907 -149.79263306]
[115.59319305 -164.71124268]
[117.15371704 -179.62985229]
[118.71424103 -194.54846191]
[120.27476501 -209.46705627]
[121.83528900 -224.38566589]
[115.57566833 -238.91589355]
[124.59506989 -250.76916504]
[126.15558624 -265.68777466]
[127.71611023 -280.60638428]
[129.27664185 -295.52496338]
[130.83715820 -310.44357300]
[116.92848969 -316.36306763]
[105.38362122 -326.12051392]
[97.22911835 -338.84823608]
[93.19006348 -353.41455078]
[93.62561035 -368.52420044]
[98.49703217 -382.83367920]
[107.37117004 -395.07055664]
[119.45893860 -404.14675903]
[133.68550110 -409.25521851]
[148.78582764 -409.94171143]
[163.41723633 -406.14520264]
[176.27868652 -398.20324707]
[186.22656250 -386.82208252]
[192.37629700 -373.01367188]
[194.18106079 -358.00585938]
[191.48037720 -343.13314819]
[184.51438904 -329.71798706]
[173.90251160 -318.95324707]
[160.58833313 -311.79614258]
[145.75576782 -308.88305664]
[144.19523621 -293.96444702]
[142.63471985 -279.04583740]
[141.07418823 -264.12722778]
[139.51367188 -249.20863342]
[145.88490295 -235.74548340]
[136.75389099 -222.82513428]
[135.19337463 -207.90653992]
[133.63284302 -192.98793030]
[132.07232666 -178.06932068]
[130.51179504 -163.15072632]
[128.95127869 -148.23211670]
[136.32240295 -138.64080811]
[135.14439392 -126.19910431]
[125.50579071 -117.62821960]
[123.72332764 -102.73450470]
[121.94086456 -87.84078979]
[128.11094666 -74.28426361]
[118.78857422 -61.50130463]
[117.00611115 -46.60758591]
[115.44558716 -31.68898201]
[114.10735321 -16.74879646]
[112.76911926 -1.80861187]
[111.43088531 13.13157272]
[110.09265137 28.07175827]
[109.19983673 43.04516220]
[108.75322723 58.03851318]
[108.30662537 73.03186035]
[107.86001587 88.02521515]
[114.31759644 100.42647552]
[107.13333130 112.42139435]
[106.79835510 127.41764832]
[106.57502747 142.41598511]
[106.35169983 157.41432190]
[106.12837219 172.41265869]
[113.65934753 186.32650757]
[105.73342133 198.93716431]
[105.51009369 213.93550110]
[105.28676605 228.93383789]
[115.98878479 218.42352295]
[130.93255615 217.12594604]
[143.28598022 225.63435364]
[147.40124512 240.05879211]
[141.39691162 253.80462646]
[128.01806641 260.58743286]
[113.38134003 257.30621338]
[104.17787933 245.45932007]
[102.39541626 260.35302734]
[100.61295319 275.24676514]
[98.83048248 290.14047241]
[97.04801941 305.03417969]
[95.26555634 319.92791748]
[97.51213074 326.14599609]
[96.44188690 331.72735596]
[93.20186615 335.23608398]
[90.97674561 350.07012939]
[96.58131409 364.86538696]
[87.04163361 376.30407715]
[84.81652069 391.13812256]
[99.43474579 394.53628540]
[113.73677826 399.08514404]
[127.63218689 404.75592041]
[141.03312683 411.51275635]
[153.85485840 419.31295776]
[166.01634216 428.10720825]
[177.44065857 437.83987427]
[188.05560303 448.44946289]
[197.79403687 459.86886597]
[206.59442139 472.02587891]
[214.40109253 484.84368896]
[221.16470337 498.24121094]
[226.84249878 512.13372803]
[231.39855957 526.43347168]
[234.80410767 541.04998779]
[237.03759766 555.89086914]
[238.08489990 570.86230469]
[237.93940735 585.86956787]
[236.60203552 600.81787109]
[234.08122253 615.61267090]
[230.39294434 630.16040039]
[225.56048584 644.36907959]
[219.61441040 658.14898682]
[212.59231567 671.41284180]
[204.53860474 684.07684326]
[195.50418091 696.06097412]
[185.54615784 707.28942871]
[174.72752380 717.69122314]
[163.11665344 727.20056152]
[150.78695679 735.75738525]
[137.81640625 743.30749512]
[124.28697968 749.80328369]
[110.28424072 755.20355225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 177]
[45 176]
[47 174]
[48 173]
[49 170]
[50 169]
[51 168]
[52 167]
[53 166]
[54 165]
[55 157]
[56 156]
[57 155]
[59 153]
[60 152]
[61 151]
[62 150]
[64 149]
[66 147]
[67 146]
[68 145]
[69 144]
[74 143]
[75 142]
[76 141]
[77 140]
[78 139]
[81 138]
[82 137]
[84 135]
[85 134]
[86 133]
[88 130]
[89 129]
[90 128]
[91 127]
[92 126]
[93 125]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
