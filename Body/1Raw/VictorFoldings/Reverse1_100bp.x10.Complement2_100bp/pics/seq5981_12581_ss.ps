%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[87.76288605 567.02673340]
[77.06890869 577.91711426]
[62.70587540 583.08105469]
[47.52557755 581.49316406]
[34.54207993 573.46875000]
[26.33326149 560.60101318]
[24.52898979 545.44488525]
[29.48750305 531.00970459]
[40.22428513 520.16143799]
[54.60754395 515.05413818]
[56.16806412 500.13552856]
[57.72858810 485.21691895]
[59.28911209 470.29830933]
[60.84963608 455.37969971]
[62.41015625 440.46109009]
[63.97068024 425.54251099]
[50.85213089 432.81597900]
[36.92866516 427.23593140]
[32.46414185 412.91574097]
[40.74964523 400.41171265]
[55.67741013 398.94137573]
[66.24269104 409.58703613]
[68.90848541 394.82580566]
[67.00376129 387.68481445]
[71.72542572 379.86538696]
[74.61069489 365.14547729]
[77.49597168 350.42559814]
[80.38124084 335.70568848]
[82.93707275 320.92504883]
[85.16219330 306.09100342]
[87.38730621 291.25695801]
[88.72554016 276.31677246]
[89.17214966 261.32342529]
[89.39547729 246.32508850]
[81.65818024 233.59780884]
[89.39547729 219.79763794]
[89.39547729 204.79763794]
[89.39547729 189.79763794]
[89.39547729 174.79763794]
[86.71179199 170.84709167]
[86.48133087 165.16871643]
[89.62545776 159.35269165]
[90.07205963 144.35934448]
[87.50718689 140.33064270]
[87.44589996 134.64791870]
[90.76178741 128.92810059]
[91.65460968 113.95469666]
[83.76233673 99.15306091]
[93.15166473 85.25281525]
[86.03829193 71.12091827]
[94.33618164 58.75183105]
[95.00596619 43.76679230]
[95.67575073 28.78175545]
[88.56237793 14.64985847]
[96.86026001 2.28076959]
[97.53004456 -12.70426941]
[98.19982910 -27.68930817]
[97.41851044 -42.66894531]
[95.19338989 -57.50299072]
[92.96827698 -72.33703613]
[90.63278961 -87.15409851]
[88.07695770 -101.93475342]
[85.41116333 -116.69596863]
[72.71145630 -125.71569061]
[70.21824646 -140.72364807]
[78.89543152 -152.77528381]
[76.22963715 -167.53649902]
[73.56384277 -182.29771423]
[70.89804840 -197.05892944]
[68.23225403 -211.82014465]
[65.56645966 -226.58135986]
[62.68118286 -241.30125427]
[59.46791077 -255.95304871]
[56.14564896 -270.58050537]
[52.82339096 -285.20797729]
[49.50112915 -299.83541870]
[35.39479828 -306.02554321]
[27.72786140 -319.18121338]
[29.25946808 -334.15179443]
[39.19375610 -345.21740723]
[35.87149811 -359.84484863]
[32.54923630 -374.47232056]
[17.51105881 -373.97265625]
[2.65012026 -376.32830811]
[-11.49636269 -381.45407104]
[-24.41700554 -389.16467285]
[-35.64473343 -399.18139648]
[-44.77367020 -411.14212036]
[-51.47381210 -424.61450195]
[-55.50295258 -439.11148071]
[-56.71544266 -454.10900879]
[-55.06744766 -469.06497192]
[-50.61854553 -483.43869019]
[-43.52956009 -496.71057129]
[-34.05675125 -508.40084839]
[-22.54255867 -518.08691406]
[-9.40321159 -525.41864014]
[4.88631105 -530.13092041]
[19.80945206 -532.05352783]
[34.82674789 -531.11688232]
[49.39533615 -527.35485840]
[62.98856735 -520.90350342]
[75.11505890 -511.99591064]
[85.33644104 -500.95419312]
[93.28321838 -488.17742920]
[98.66812134 -474.12756348]
[101.29649353 -459.31240845]
[101.07331085 -444.26760864]
[98.00664520 -429.53695679]
[92.20735931 -415.65298462]
[83.88509369 -403.11755371]
[73.34068298 -392.38388062]
[60.95531082 -383.83993530]
[47.17669678 -377.79458618]
[50.49895859 -363.16711426]
[53.82121658 -348.53967285]
[67.56082153 -342.85098267]
[75.40895081 -330.01077271]
[74.17702484 -314.83395386]
[64.12859344 -303.15768433]
[67.45085144 -288.53021240]
[70.77310944 -273.90277100]
[74.09536743 -259.27529907]
[78.64226532 -253.44885254]
[77.35648346 -244.40536499]
[80.79960632 -241.09568787]
[82.20016479 -235.58792114]
[80.32767487 -229.24716187]
[82.99346924 -214.48594666]
[85.65926361 -199.72473145]
[88.32505798 -184.96351624]
[90.99085236 -170.20228577]
[93.65665436 -155.44107056]
[106.00115204 -147.18583679]
[108.91492462 -132.25384521]
[100.17237854 -119.36177063]
[102.83817291 -104.60054779]
[107.12036896 -98.57688141]
[105.43206024 -89.59983063]
[109.62409210 -83.51306915]
[107.80231476 -74.56214905]
[110.02743530 -59.72810745]
[112.25255585 -44.89406204]
[118.12213898 -58.69797134]
[129.04313660 -68.98056793]
[143.17518616 -74.00904083]
[158.13674927 -72.93601990]
[171.40657043 -65.94231415]
[180.74844360 -54.20649719]
[184.58808899 -39.70625305]
[182.27848816 -24.88513184]
[174.20881653 -12.24074936]
[161.73896790 -3.90390754]
[146.97033691 -1.27951097]
[132.39167786 -4.80981636]
[120.45977783 -13.89990520]
[113.18486786 -27.01952362]
[112.51508331 -12.03448391]
[111.84529877 2.95055461]
[119.00657654 16.01062012]
[110.66078949 29.45153999]
[109.99100494 44.43658066]
[109.32122040 59.42161942]
[116.48249817 72.48168182]
[108.13670349 85.92259979]
[115.46391296 94.97541046]
[114.85726929 106.60610962]
[106.62801361 114.84751129]
[105.73519897 129.82090759]
[105.06541443 144.80595398]
[104.61880493 159.79930115]
[104.39547729 174.79763794]
[104.39547729 189.79763794]
[104.39547729 204.79763794]
[104.39547729 219.79763794]
[112.13277435 233.59780884]
[104.39547729 246.32508850]
[107.36503601 252.23213196]
[106.96561432 257.90112305]
[104.16549683 261.77001953]
[103.71889496 276.76336670]
[113.92572784 265.77154541]
[128.62138367 262.76528931]
[142.32476807 268.86590576]
[149.92483521 281.79800415]
[148.58695984 296.73822021]
[138.81011963 308.11422729]
[124.24085999 311.68307495]
[110.31314087 306.11364746]
[102.22135162 293.48208618]
[99.99623871 308.31613159]
[97.77111816 323.15017700]
[99.68323517 328.00720215]
[99.55400085 332.64794922]
[97.80764008 336.33105469]
[95.10113525 338.59097290]
[92.21585846 353.31085205]
[89.33058929 368.03076172]
[86.44531250 382.75064087]
[83.66970825 397.49160767]
[81.00390625 412.25283813]
[78.88928223 427.10302734]
[77.32876587 442.02163696]
[75.76824188 456.94024658]
[74.20771790 471.85882568]
[72.64719391 486.77743530]
[71.08666992 501.69604492]
[69.52614594 516.61462402]
[82.54114532 524.58789062]
[90.80057526 537.42315674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 208]
[11 207]
[12 206]
[13 205]
[14 204]
[15 203]
[16 202]
[22 201]
[23 200]
[25 199]
[26 198]
[27 197]
[28 196]
[29 192]
[30 191]
[31 190]
[32 181]
[33 180]
[34 177]
[36 175]
[37 174]
[38 173]
[39 172]
[42 171]
[43 170]
[46 169]
[47 168]
[49 165]
[51 163]
[52 162]
[53 161]
[55 159]
[56 158]
[57 157]
[58 143]
[59 142]
[60 141]
[61 139]
[62 137]
[63 136]
[66 133]
[67 132]
[68 131]
[69 130]
[70 129]
[71 128]
[72 125]
[73 123]
[74 122]
[75 121]
[76 120]
[80 116]
[81 115]
[82 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
