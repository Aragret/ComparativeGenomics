%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[127.94941711 717.47766113]
[116.84311676 707.38415527]
[106.55238342 696.46038818]
[97.13910675 684.77197266]
[88.65990448 672.38928223]
[81.16577911 659.38671875]
[74.70178986 645.84252930]
[69.30681610 631.83819580]
[65.01331329 617.45782471]
[61.84708786 602.78802490]
[59.82719040 587.91699219]
[58.96577072 572.93408203]
[59.26800537 557.92950439]
[60.73208237 542.99353027]
[63.34918976 528.21588135]
[67.10359192 513.68542480]
[71.97270203 499.48968506]
[77.92724609 485.71389771]
[84.93141174 472.44100952]
[92.94306946 459.75079346]
[101.91403198 447.71957397]
[111.79035950 436.41970825]
[122.51264191 425.91918945]
[134.01640320 416.28115845]
[146.23243713 407.56353760]
[159.08729553 399.81881714]
[172.50366211 393.09353638]
[166.84088135 379.20352173]
[161.17810059 365.31347656]
[155.51530457 351.42346191]
[151.32647705 365.82672119]
[140.08584595 375.75888062]
[125.27642059 378.14236450]
[111.48707581 372.23864746]
[102.99059296 359.87701416]
[102.41969299 344.88787842]
[109.95127869 331.91580200]
[123.25160980 324.98028564]
[138.19941711 326.23040771]
[150.16314697 335.27899170]
[146.40684509 320.75692749]
[142.65054321 306.23486328]
[129.69319153 294.39956665]
[134.76089478 276.69647217]
[130.78880310 262.23193359]
[126.81670380 247.76741028]
[122.84460449 233.30288696]
[118.87251282 218.83836365]
[114.90041351 204.37384033]
[104.06906128 194.14979553]
[107.87577820 178.79338074]
[103.90367889 164.32885742]
[96.56082916 177.40870667]
[82.57323456 182.82603455]
[68.33584595 178.10408020]
[60.35780334 165.40168762]
[62.28655624 150.52621460]
[73.24030304 140.27851868]
[88.21115112 139.34370422]
[100.35565948 148.15071106]
[97.90993500 133.35144043]
[95.46420288 118.55216217]
[83.74656677 110.02906799]
[81.38407135 95.73344421]
[89.73652649 83.89356232]
[87.29079437 69.09429169]
[84.84506989 54.29502106]
[82.39934540 39.49575043]
[76.07446289 53.09706879]
[64.20945740 62.27430344]
[49.45499420 64.97723389]
[35.10725784 60.60201645]
[24.37157440 50.12608719]
[19.64631844 35.88979721]
[21.98712540 21.07356834]
[30.87105370 8.98738480]
[44.31340790 2.33133030]
[59.31113815 2.59238482]
[72.51371002 9.71222782]
[80.97163391 22.10028839]
[80.97163391 7.10028887]
[80.97163391 -7.89971113]
[80.97163391 -22.89971161]
[77.84223175 -31.48135567]
[81.08496857 -38.12262344]
[81.30829620 -53.12096024]
[81.53162384 -68.11930084]
[81.75495148 -83.11763763]
[73.34783173 -92.89941406]
[73.84261322 -105.38696289]
[82.42906189 -113.90749359]
[75.10607910 -127.93191528]
[83.21888733 -140.42317200]
[83.66548920 -155.41651917]
[84.11209869 -170.40988159]
[84.55870056 -185.40322876]
[85.00531006 -200.39657593]
[85.45191193 -215.38992310]
[78.12892914 -229.41435242]
[86.24173737 -241.90560913]
[72.66976166 -248.88876343]
[63.47856903 -261.07418823]
[60.49306488 -276.04248047]
[64.30603027 -290.82165527]
[74.16040039 -302.47729492]
[88.09957123 -308.69519043]
[103.35592651 -308.24075317]
[116.90029144 -301.20419312]
[126.04343414 -288.98266602]
[128.96997070 -274.00274658]
[125.09883118 -259.23870850]
[115.19863892 -247.62194824]
[101.23508453 -241.45899963]
[108.59001923 -228.50700378]
[100.44526672 -214.94331360]
[99.99865723 -199.94996643]
[99.55205536 -184.95661926]
[99.10544586 -169.96327209]
[98.65883636 -154.96992493]
[98.21223450 -139.97656250]
[105.56716919 -127.02457428]
[97.42241669 -113.46088409]
[106.56109619 -98.47918701]
[96.75328827 -82.89431000]
[96.52996063 -67.89597321]
[96.30663300 -52.89763260]
[96.08330536 -37.89929581]
[95.97163391 -22.89971161]
[95.97163391 -7.89971113]
[95.97163391 7.10028887]
[95.97163391 22.10028839]
[97.19861603 37.05002213]
[99.64434052 51.84929276]
[102.09006500 66.64856720]
[104.53579712 81.44783783]
[116.25343323 89.97093201]
[118.61592865 104.26655579]
[110.26347351 116.10643768]
[112.70920563 130.90571594]
[115.15493011 145.70498657]
[118.36820221 160.35676575]
[122.34030151 174.82128906]
[133.45576477 186.07992554]
[129.36494446 200.40174866]
[133.33703613 214.86627197]
[137.30912781 229.33079529]
[141.28121948 243.79531860]
[145.25332642 258.25985718]
[149.22541809 272.72436523]
[160.02879333 279.77062988]
[163.03938293 291.89993286]
[157.17259216 302.47854614]
[160.92889404 317.00061035]
[164.68519592 331.52267456]
[169.40533447 345.76068115]
[175.06811523 359.65069580]
[180.73091125 373.54071045]
[186.39369202 387.43075562]
[200.68794250 382.85876465]
[215.29348755 379.40823364]
[230.12251282 377.09991455]
[245.08581543 375.94769287]
[260.09341431 375.95846558]
[275.05505371 377.13217163]
[289.88076782 379.46179199]
[304.48135376 382.93328857]
[318.76901245 387.52578735]
[332.65780640 393.21166992]
[346.06423950 399.95675659]
[358.90765381 407.72042847]
[371.11083984 416.45605469]
[382.60034180 426.11105347]
[393.30712891 436.62738037]
[403.16677856 447.94180298]
[412.11999512 459.98623657]
[420.11291504 472.68826294]
[427.09747314 485.97149658]
[433.03170776 499.75601196]
[437.87985229 513.95898438]
[441.61282349 528.49487305]
[444.20812988 543.27636719]
[445.65014648 558.21453857]
[445.93026733 573.21954346]
[445.04672241 588.20111084]
[443.00488281 603.06921387]
[439.81704712 617.73431396]
[435.50231934 632.10833740]
[430.08666992 646.10473633]
[423.60272217 659.63934326]
[416.08941650 672.63085938]
[407.59194946 685.00103760]
[398.16143799 696.67553711]
[387.85461426 707.58410645]
[376.73342896 717.66119385]
[364.86477661 726.84613037]
[352.32006836 735.08374023]
[339.17468262 742.32446289]
[325.50775146 748.52471924]
[311.40145874 753.64727783]
[296.94061279 757.66125488]
[282.21218872 760.54254150]
[267.30477905 762.27386475]
[252.30802917 762.84472656]
[237.31213379 762.25170898]
[222.40728760 760.49841309]
[207.68313599 757.59539795]
[193.22822571 753.56011963]
[179.12948608 748.41674805]
[165.47171021 742.19635010]
[152.33705139 734.93621826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 158]
[28 157]
[29 156]
[30 155]
[40 154]
[41 153]
[42 152]
[44 149]
[45 148]
[46 147]
[47 146]
[48 145]
[49 144]
[51 142]
[52 141]
[60 140]
[61 139]
[62 138]
[65 135]
[66 134]
[67 133]
[68 132]
[80 131]
[81 130]
[82 129]
[83 128]
[85 127]
[86 126]
[87 125]
[88 124]
[91 122]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
