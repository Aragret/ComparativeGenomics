%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[202.92282104 624.06109619]
[193.81646729 612.13354492]
[185.58421326 599.58666992]
[178.26803589 586.48449707]
[171.90519714 572.89379883]
[166.52812195 558.88378906]
[162.16421509 544.52587891]
[158.83572388 529.89324951]
[156.55958557 515.06042480]
[155.34741211 500.10299683]
[155.20539856 485.09722900]
[156.13423157 470.11956787]
[158.12921143 455.24633789]
[161.18014526 440.55331421]
[165.27151489 426.11535645]
[170.38244629 412.00610352]
[176.48690796 398.29739380]
[183.55378723 385.05908203]
[191.54707336 372.35867310]
[200.42604065 360.26083374]
[210.14543152 348.82727051]
[220.65571594 338.11621094]
[231.90336609 328.18222046]
[243.83102417 319.07595825]
[235.60221863 306.53454590]
[227.37341309 293.99316406]
[219.14460754 281.45175171]
[210.91578674 268.91036987]
[202.68698120 256.36895752]
[194.45817566 243.82756042]
[186.22937012 231.28616333]
[178.00056458 218.74475098]
[169.49372864 206.39024353]
[160.71313477 194.22879028]
[151.84223938 182.13304138]
[142.88154602 170.10366821]
[133.92085266 158.07427979]
[124.96015167 146.04490662]
[115.99945068 134.01553345]
[107.03875732 121.98615265]
[98.07806396 109.95677185]
[91.12003326 105.88758087]
[89.07508850 97.68093109]
[80.29448700 85.51947021]
[65.94310760 78.86000824]
[64.76602173 64.01198578]
[55.98541641 51.85052872]
[40.63547134 49.20157623]
[31.90393639 36.74304962]
[34.52390289 22.12554741]
[25.74329948 9.96409130]
[16.96269608 -2.19736457]
[8.18209267 -14.35881996]
[-4.79172182 -6.80587816]
[-18.44338989 -0.56097859]
[-32.64143372 4.31573486]
[-47.24911499 7.77729559]
[-62.12575531 9.79036617]
[-77.12807465 10.33555889]
[-92.11158752 9.40762329]
[-106.93199921 7.01549673]
[-121.44656372 3.18221617]
[-135.51551819 -2.05530024]
[-149.00334167 -8.64661121]
[-161.78013611 -16.52823639]
[-173.72288513 -25.62427139]
[-184.71652222 -35.84711456]
[-194.65521240 -47.09830856]
[-203.44320679 -59.26949692]
[-210.99589539 -72.24346161]
[-217.24052429 -85.89525604]
[-222.11694336 -100.09339905]
[-225.57821655 -114.70114899]
[-227.59098816 -129.57781982]
[-228.13587952 -144.58015442]
[-227.20764160 -159.56364441]
[-224.81523132 -174.38401794]
[-220.98165894 -188.89849854]
[-215.74385071 -202.96734619]
[-209.15228271 -216.45503235]
[-201.27040100 -229.23168945]
[-192.17411804 -241.17424011]
[-181.95106506 -252.16767883]
[-170.69966125 -262.10614014]
[-158.52830505 -270.89389038]
[-145.55418396 -278.44631958]
[-131.90226746 -284.69067383]
[-117.70403290 -289.56683350]
[-103.09620667 -293.02780151]
[-88.21949005 -295.04028320]
[-73.21714783 -295.58486938]
[-58.23367310 -294.65634155]
[-43.41336060 -292.26361084]
[-28.89894295 -288.42974854]
[-14.83020687 -283.19168091]
[-1.34264576 -276.59982300]
[11.43384457 -268.71768188]
[23.37621689 -259.62118530]
[34.36945724 -249.39788818]
[44.30768967 -238.14630127]
[53.09520340 -225.97476196]
[60.64736938 -213.00048828]
[66.89144897 -199.34844971]
[71.76731110 -185.15011597]
[75.22799683 -170.54222107]
[77.24017334 -155.66546631]
[77.78446198 -140.66311646]
[76.85562897 -125.67965698]
[74.46261597 -110.85939026]
[70.62846375 -96.34504700]
[65.39010620 -82.27642059]
[58.79798126 -68.78899384]
[50.91559219 -56.01265717]
[41.81884003 -44.07046509]
[31.59533882 -33.07743073]
[20.34354782 -23.13942337]
[29.12415123 -10.97796726]
[37.90475464 1.18348813]
[46.68535614 13.34494400]
[61.38471985 15.45784569]
[70.46274567 27.66620827]
[68.14687347 43.06992340]
[76.92747498 55.23138046]
[90.65081024 61.02098083]
[92.45594025 76.73886871]
[101.23654175 88.90032959]
[110.10743713 100.99607849]
[119.06813812 113.02545929]
[128.02882385 125.05483246]
[136.98953247 137.08421326]
[145.95022583 149.11358643]
[154.91091919 161.14295959]
[163.87161255 173.17234802]
[171.50776672 178.18502808]
[172.87458801 185.44818115]
[181.65519714 197.60964966]
[186.41816711 199.74534607]
[189.57041931 203.15364075]
[190.89695740 207.00791931]
[190.54196167 210.51594543]
[198.77076721 223.05734253]
[206.99957275 235.59875488]
[215.22839355 248.14015198]
[223.45719910 260.68154907]
[231.68600464 273.22296143]
[239.91481018 285.76434326]
[248.14361572 298.30575562]
[256.37243652 310.84713745]
[269.47442627 303.53067017]
[283.06500244 297.16751099]
[297.07489014 291.79013062]
[311.43267822 287.42587280]
[326.06524658 284.09704590]
[340.89801025 281.82055664]
[355.85540771 280.60806274]
[370.86117554 280.46569824]
[385.83883667 281.39419556]
[400.71212769 283.38882446]
[415.40524292 286.43942261]
[429.84326172 290.53045654]
[443.95266724 295.64105225]
[457.66149902 301.74520874]
[470.89996338 308.81176758]
[483.60058594 316.80477905]
[495.69860840 325.68347168]
[507.13238525 335.40258789]
[517.84368896 345.91262817]
[527.77795410 357.16006470]
[536.88446045 369.08749390]
[545.11694336 381.63421631]
[552.43328857 394.73626709]
[558.79632568 408.32690430]
[564.17364502 422.33682251]
[568.53778076 436.69467163]
[571.86651611 451.32727051]
[574.14282227 466.16003418]
[575.35522461 481.11743164]
[575.49749756 496.12319946]
[574.56890869 511.10089111]
[572.57415771 525.97418213]
[569.52343750 540.66723633]
[565.43231201 555.10522461]
[560.32159424 569.21459961]
[554.21734619 582.92340088]
[547.15063477 596.16180420]
[539.15753174 608.86230469]
[530.27874756 620.96026611]
[520.55957031 632.39404297]
[510.04943848 643.10522461]
[498.80194092 653.03936768]
[486.87442017 662.14581299]
[474.32763672 670.37817383]
[461.22552490 677.69445801]
[447.63485718 684.05743408]
[433.62487793 689.43457031]
[419.26699829 693.79858398]
[404.63439941 697.12719727]
[389.80157471 699.40344238]
[374.84420776 700.61572266]
[359.83843994 700.75787354]
[344.86074829 699.82916260]
[329.98748779 697.83428955]
[315.29443359 694.78344727]
[300.85647583 690.69219971]
[286.74716187 685.58142090]
[273.03839111 679.47705078]
[259.80004883 672.41027832]
[247.09957886 664.41705322]
[235.00167847 655.53820801]
[223.56803894 645.81890869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 148]
[25 147]
[26 146]
[27 145]
[28 144]
[29 143]
[30 142]
[31 141]
[32 140]
[33 136]
[34 135]
[35 133]
[36 132]
[37 131]
[38 130]
[39 129]
[40 128]
[41 127]
[43 126]
[44 125]
[46 123]
[47 122]
[50 119]
[51 118]
[52 117]
[53 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
