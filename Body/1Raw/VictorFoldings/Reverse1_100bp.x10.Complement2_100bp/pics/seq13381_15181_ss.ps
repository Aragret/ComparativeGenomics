%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGAUUACGAUCCGACGGUUACCACUCCCUCCAACUUCACUCUCCAUACCAAAACUCAUCAGGAGGAUAAAAAGCUUAUAGAACAAGUAACAAUUCCAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[-10.26839066 652.59313965]
[-19.27571106 664.63922119]
[-30.28933334 674.88323975]
[-42.95521545 682.99591064]
[-56.86620712 688.71636963]
[-71.57511902 691.86083984]
[-86.60912323 692.32818604]
[-101.48494720 690.10339355]
[-115.72438049 685.25793457]
[-128.86968994 677.94763184]
[-140.49832153 668.40747070]
[-150.23645020 656.94409180]
[-157.77102661 643.92608643]
[-162.85984802 629.77178955]
[-165.33935547 614.93627930]
[-165.12982178 599.89648438]
[-162.23797607 585.13580322]
[-156.75679016 571.12878418]
[-148.86245728 558.32568359]
[-138.80876160 547.13806152]
[-126.91886902 537.92559814]
[-113.57499695 530.98431396]
[-99.20609283 526.53747559]
[-84.27407074 524.72796631]
[-69.25891876 525.61395264]
[-65.71924591 511.03759766]
[-62.17957306 496.46121216]
[-58.63990021 481.88482666]
[-55.10022736 467.30847168]
[-51.56055450 452.73208618]
[-48.02088165 438.15570068]
[-59.84831619 447.38131714]
[-74.77584839 448.85400391]
[-88.17802429 442.11740112]
[-95.90203094 429.25894165]
[-95.55450439 414.26296997]
[-87.24312592 401.77615356]
[-73.54327393 395.66763306]
[-58.69998550 397.83023071]
[-47.31262207 407.59384155]
[-42.90967560 421.93334961]
[-37.45431900 407.96054077]
[-31.99896240 393.98773193]
[-26.54360580 380.01495361]
[-21.08824921 366.04214478]
[-31.99210358 357.85339355]
[-40.40861511 347.10815430]
[-45.75727081 334.53683472]
[-47.66638565 320.99612427]
[-45.99891663 307.41070557]
[-40.86227798 294.70999146]
[-32.60144424 283.76458740]
[-21.77580833 275.32666016]
[-9.12127399 269.97817993]
[4.49974060 268.09085083]
[18.15709305 269.80017090]
[24.02605438 255.99600220]
[29.89501381 242.19183350]
[35.76397705 228.38764954]
[41.63293457 214.58346558]
[47.50189590 200.77929688]
[53.37085724 186.97511292]
[53.09505463 179.58961487]
[59.43133163 173.01014709]
[65.50516510 159.29487610]
[71.57900238 145.57960510]
[77.65283203 131.86434937]
[83.72666931 118.14907837]
[89.80049896 104.43380737]
[75.45385742 108.81261444]
[62.14873886 101.88631439]
[57.50690842 87.62260437]
[64.18742371 74.19238281]
[78.36338043 69.28910065]
[91.91415405 75.72157288]
[97.07727051 89.80403900]
[104.25263214 76.63156128]
[111.32974243 63.40603638]
[97.29579163 68.70209503]
[82.79908752 64.84909821]
[73.24654388 53.28411484]
[72.20101929 38.32059479]
[80.05246735 25.53956604]
[93.87249756 19.70803261]
[108.50657654 23.00101471]
[118.49655914 34.19031143]
[120.11618805 49.10373306]
[128.71475220 36.81289673]
[137.31330872 24.52205849]
[145.91188049 12.23121929]
[154.51043701 -0.05961833]
[163.10900879 -12.35045624]
[171.70756531 -24.64129448]
[165.97714233 -40.55538177]
[170.81338501 -56.59009171]
[184.12072754 -66.48336029]
[200.53648376 -66.49518585]
[208.95111084 -78.91268158]
[217.36572266 -91.33017731]
[225.78034973 -103.74767303]
[214.45294189 -113.60907745]
[204.39682007 -124.76398468]
[195.75863647 -137.04971313]
[188.66435242 -150.28709412]
[183.21742249 -164.28311157]
[179.49728394 -178.83364868]
[177.55818176 -193.72650146]
[177.42840576 -208.74450684]
[179.10983276 -223.66865540]
[182.57794189 -238.28131104]
[187.78218079 -252.36935425]
[194.64663696 -265.72738647]
[203.07119751 -278.16055298]
[212.93302917 -289.48757935]
[224.08830261 -299.54330444]
[236.37435913 -308.18103027]
[249.61201477 -315.27481079]
[263.60821533 -320.72122192]
[278.15890503 -324.44079590]
[293.05181885 -326.37936401]
[308.06985474 -326.50857544]
[322.99392700 -324.82659912]
[337.60644531 -321.35794067]
[351.69430542 -316.15316772]
[365.05206299 -309.28820801]
[377.48492432 -300.86318970]
[388.81158447 -291.00091553]
[398.86688232 -279.84527588]
[407.50415039 -267.55889893]
[414.59744263 -254.32098389]
[420.04333496 -240.32455444]
[423.76239014 -225.77375793]
[425.70037842 -210.88075256]
[425.82901001 -195.86273193]
[424.14648438 -180.93870544]
[420.67727661 -166.32632446]
[415.47198486 -152.23864746]
[408.60653687 -138.88114929]
[400.18103027 -126.44860077]
[390.31835938 -115.12230682]
[379.16232300 -105.06743622]
[366.87564087 -96.43063354]
[353.63745117 -89.33782959]
[339.64080811 -83.89247131]
[325.08987427 -80.17396545]
[310.19680786 -78.23653412]
[295.17877197 -78.10843658]
[280.25482178 -79.79153442]
[265.64254761 -83.26129150]
[251.55508423 -88.46710205]
[238.19784546 -95.33305359]
[229.78321838 -82.91555786]
[221.36860657 -70.49806213]
[212.95397949 -58.08056641]
[218.63864136 -46.00055695]
[217.60366821 -32.58142853]
[210.01277161 -21.33653069]
[197.76004028 -15.26287842]
[183.99841309 -16.04273033]
[175.39984131 -3.75189233]
[166.80128479 8.53894520]
[158.20271301 20.82978439]
[149.60415649 33.12062073]
[141.00558472 45.41146088]
[132.40702820 57.70229721]
[124.55526733 70.48313904]
[117.47816467 83.70866394]
[117.09396362 91.08933258]
[110.19596100 97.07727051]
[103.51576996 110.50764465]
[97.44193268 124.22290802]
[91.36810303 137.93817139]
[85.29426575 151.65344238]
[79.22042847 165.36871338]
[73.14659882 179.08398438]
[67.17503357 192.84408569]
[61.30607224 206.64825439]
[55.43711472 220.45243835]
[49.56815338 234.25660706]
[43.69919205 248.06079102]
[37.83023071 261.86495972]
[31.96126938 275.66912842]
[44.48796844 286.33612061]
[53.09992599 300.33340454]
[56.96561432 316.28750610]
[55.71856689 332.63714600]
[49.49209213 347.78594971]
[38.90510941 360.25833130]
[25.00066948 368.84329224]
[9.14318562 372.71194458]
[-7.11545038 371.49749756]
[-12.57080746 385.47030640]
[-18.02616501 399.44311523]
[-23.48152161 413.41589355]
[-28.93687820 427.38870239]
[-33.44450760 441.69537354]
[-36.98418045 456.27175903]
[-40.52385330 470.84814453]
[-44.06352615 485.42449951]
[-47.60319519 500.00088501]
[-51.14286804 514.57727051]
[-54.68254089 529.15362549]
[-40.93330765 535.25268555]
[-28.49417305 543.70892334]
[-17.76500702 554.25048828]
[-9.09070873 566.53851318]
[-2.75011802 580.17803955]
[1.05293965 594.73059082]
[2.19621181 609.72833252]
[0.64294720 624.68920898]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 202]
[26 201]
[27 200]
[28 199]
[29 198]
[30 197]
[31 196]
[41 195]
[42 194]
[43 193]
[44 192]
[45 191]
[56 182]
[57 181]
[58 180]
[59 179]
[60 178]
[61 177]
[62 176]
[64 175]
[65 174]
[66 173]
[67 172]
[68 171]
[69 170]
[76 169]
[77 167]
[78 166]
[87 165]
[88 164]
[89 163]
[90 162]
[91 161]
[92 160]
[93 159]
[97 154]
[98 153]
[99 152]
[100 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
