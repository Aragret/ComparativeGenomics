%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGACGCUGAGGAACUGCAACUGUUAGCUCAUCAUGAGGGCUAACUUCGGGGGUAAGCAUAUUAUUAAUGUAGUGUUCUGCAGAACGUGAGUACUCGACAGG\
) } def
/len { sequence length } bind def

/coor [
[47.23496628 385.83065796]
[47.16128159 400.86737061]
[44.54727554 415.67532349]
[39.46815491 429.82843018]
[32.07005692 442.91949463]
[22.56583977 454.57186890]
[11.22896099 464.45028687]
[-1.61439693 472.27053833]
[-15.59470463 477.80758667]
[-30.30972099 480.90216064]
[-45.33606339 481.46517944]
[-60.24139786 479.48049927]
[-74.59686279 475.00515747]
[-87.98943329 468.16796875]
[-100.03376770 459.16561890]
[-110.38332367 448.25717163]
[-118.74034119 435.75643921]
[-124.86435699 422.02310181]
[-128.57917786 407.45230103]
[-129.77790833 392.46328735]
[-128.42607117 377.48727417]
[-124.56256866 362.95520020]
[-118.29854584 349.28515625]
[-109.81423950 336.87045288]
[-99.35375214 326.06832886]
[-87.21806335 317.18951416]
[-73.75633240 310.48953247]
[-59.35588455 306.16113281]
[-44.43104935 304.32882690]
[-29.41124344 305.04537964]
[-14.72861576 308.29013062]
[-9.06582928 294.40011597]
[-3.40304232 280.51007080]
[-9.39842701 266.92364502]
[-3.85342526 252.75653076]
[10.43791771 246.56013489]
[16.10070419 232.67010498]
[21.76349068 218.78007507]
[19.40352440 204.07362366]
[31.77810860 194.21562195]
[29.41814232 179.50917053]
[41.79272461 169.65115356]
[47.45551300 155.76112366]
[53.11829758 141.87110901]
[41.90115738 151.82980347]
[28.82717323 159.18310547]
[14.49112797 163.59646606]
[-0.45478609 164.86912537]
[-15.33062935 162.94317627]
[-29.45965004 157.90623474]
[-42.19906998 149.98744202]
[-52.96933746 139.54707336]
[-61.28046799 127.06007385]
[-66.75436401 113.09452820]
[-69.14200592 98.28577423]
[-68.33476257 83.30751038]
[-64.36936188 68.84114838]
[-57.42620468 55.54481506]
[-47.82115936 44.02339935]
[-35.99118423 34.80104828]
[-22.47447395 28.29731750]
[-7.88594103 24.80808830]
[7.11073017 24.49209213]
[21.83329201 27.36370850]
[35.61196518 33.29229355]
[47.81991577 42.00814438]
[57.90175629 53.11473846]
[65.39883423 66.10680389]
[69.97008514 80.39328766]
[71.40754700 95.32425690]
[69.64582062 110.22043610]
[64.76322174 124.40808868]
[75.40923309 113.84104156]
[86.05523682 103.27399445]
[89.90921021 89.83380890]
[103.37771606 86.08000183]
[113.94476318 75.43399048]
[124.43225861 64.70960999]
[134.91976929 53.98522949]
[145.40725708 43.26084900]
[155.89476013 32.53647232]
[166.38226318 21.81208992]
[170.49903870 6.53587532]
[184.92936707 2.84606504]
[195.41687012 -7.87831450]
[205.90437317 -18.60269356]
[216.23104858 -29.48202896]
[226.39459229 -40.51390457]
[236.55813599 -51.54578400]
[245.96029663 -63.23336411]
[254.55885315 -75.52420044]
[256.12976074 -91.26722717]
[269.76538086 -97.26050568]
[278.36395264 -109.55133820]
[286.96252441 -121.84217834]
[275.57891846 -131.62954712]
[265.22644043 -142.50173950]
[256.00790405 -154.35069275]
[248.01499939 -167.05863953]
[241.32713318 -180.49928284]
[236.01075745 -194.53903198]
[232.11874390 -209.03837585]
[229.68974304 -223.85317993]
[228.74792480 -238.83622742]
[229.30262756 -253.83859253]
[231.34834290 -268.71118164]
[234.86476135 -283.30615234]
[239.81689453 -297.47848511]
[246.15556335 -311.08731079]
[253.81773376 -323.99737549]
[262.72729492 -336.08035278]
[272.79565430 -347.21618652]
[283.92276001 -357.29415894]
[295.99804688 -366.21414185]
[308.90148926 -373.88748169]
[322.50482178 -380.23791504]
[336.67285156 -385.20230103]
[351.26480103 -388.73132324]
[366.13558960 -390.78991699]
[381.13748169 -391.35757446]
[396.12133789 -390.42871094]
[410.93823242 -388.01251221]
[425.44091797 -384.13302612]
[439.48529053 -378.82879639]
[452.93170166 -372.15255737]
[465.64654541 -364.17062378]
[477.50347900 -354.96237183]
[488.38461304 -344.61926270]
[498.18182373 -333.24414062]
[506.79772949 -320.95004272]
[514.14672852 -307.85919189]
[520.15570068 -294.10162354]
[524.76501465 -279.81411743]
[527.92889404 -265.13867188]
[529.61572266 -250.22113037]
[529.80889893 -235.20976257]
[528.50646973 -220.25373840]
[525.72131348 -205.50173950]
[521.48114014 -191.10035706]
[515.82812500 -177.19273376]
[508.81845093 -163.91708374]
[500.52175903 -151.40536499]
[491.02050781 -139.78190613]
[480.40911865 -129.16223145]
[468.79309082 -119.65190887]
[456.28784180 -111.34544373]
[443.01766968 -104.32539368]
[429.11447144 -98.66152954]
[414.71640015 -94.41014099]
[399.96658325 -91.61348724]
[385.01159668 -90.29934692]
[370.00006104 -90.48080444]
[355.08120728 -92.15603638]
[340.40328979 -95.30841064]
[326.11221313 -99.90657806]
[312.34994507 -105.90485382]
[299.25335693 -113.24361420]
[290.65478516 -100.95277405]
[282.05621338 -88.66194153]
[281.10034180 -73.79804230]
[266.84970093 -66.92563629]
[258.25112915 -54.63479996]
[272.62387085 -58.92711258]
[287.06475830 -54.86993408]
[297.09912109 -43.72042084]
[299.61770630 -28.93337250]
[293.84008789 -15.09071732]
[281.55651855 -6.48175192]
[266.57324219 -5.77405882]
[253.53292847 -13.18692398]
[246.47630310 -26.42338943]
[247.59001160 -41.38223648]
[237.42646790 -30.35035896]
[227.26292419 -19.31848145]
[226.55987549 -14.59462929]
[222.88188171 -10.26226997]
[216.62875366 -8.11519337]
[206.14125061 2.60918641]
[195.65374756 13.33356667]
[192.28712463 27.84270287]
[177.10664368 32.29959106]
[166.61914062 43.02397156]
[156.13163757 53.74835205]
[145.64414978 64.47273254]
[135.15664673 75.19711304]
[124.66914368 85.92149353]
[122.24002075 92.90154266]
[113.94476318 96.72600555]
[110.09078979 110.16619110]
[96.62228394 113.91999817]
[85.97628021 124.48705292]
[75.33026886 135.05409241]
[67.00832367 147.53388977]
[61.34553909 161.42391968]
[55.68275070 175.31394958]
[57.63767624 191.01390076]
[45.66813660 199.87840271]
[47.62305832 215.57836914]
[35.65351868 224.44287109]
[29.99073219 238.33290100]
[24.32794380 252.22291565]
[30.21335411 266.64511108]
[24.27261353 280.65090942]
[10.48698425 286.17288208]
[4.82419825 300.06289673]
[-0.83858860 313.95291138]
[11.92751122 321.89865112]
[23.16703224 331.88769531]
[32.55659485 343.63265991]
[39.82603836 356.79562378]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 206]
[32 205]
[33 204]
[36 201]
[37 200]
[38 199]
[40 197]
[42 195]
[43 194]
[44 193]
[72 192]
[73 191]
[74 190]
[76 188]
[77 186]
[78 185]
[79 184]
[80 183]
[81 182]
[82 181]
[84 179]
[85 178]
[86 177]
[87 174]
[88 173]
[89 172]
[90 162]
[91 161]
[93 159]
[94 158]
[95 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
