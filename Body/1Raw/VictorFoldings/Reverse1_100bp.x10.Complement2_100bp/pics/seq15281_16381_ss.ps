%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUAAGGAUCCCCCAACAAACUAGGGCAAAGCACGUUCUUAUCCUCCACCUCACAACGAUCCCGACGUUAUUACUUCCCGUUCUACUUCACUUUCCAUUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[49.00658035 606.51452637]
[34.26181412 603.53015137]
[20.31657219 597.88702393]
[7.64582396 589.77734375]
[-3.31886768 579.47735596]
[-12.20405102 567.33782959]
[-18.70709801 553.77227783]
[-22.60651970 539.24267578]
[-23.76950264 524.24389648]
[-22.15643692 509.28689575]
[-17.82225990 494.88101196]
[-10.91459370 481.51690674]
[-1.66871190 469.64981079]
[9.60047531 459.68386841]
[22.50914383 451.95852661]
[36.61762619 446.73690796]
[51.44540024 444.19683838]
[51.66872787 429.19851685]
[51.89205551 414.20016479]
[52.11538315 399.20184326]
[52.22704697 384.20223999]
[52.22704697 369.20223999]
[52.22704697 354.20223999]
[44.48974991 341.47497559]
[52.22704697 327.67480469]
[52.22704697 312.67480469]
[52.22704697 297.67480469]
[52.22704697 282.67480469]
[44.96904755 295.80194092]
[33.70458984 305.70709229]
[19.75701904 311.22662354]
[4.76487732 311.71209717]
[-9.51057243 307.10650635]
[-21.39226341 297.95086670]
[-29.48434830 285.32083130]
[-32.83617401 270.70010376]
[-31.05397606 255.80636597]
[-24.34712219 242.38928223]
[-13.50352573 232.02508545]
[0.20291543 225.93136597]
[15.16198349 224.82398987]
[29.61630249 228.83306885]
[41.86779404 237.48759460]
[50.47716141 249.77087402]
[54.43313980 264.24142456]
[57.97281265 249.66503906]
[61.51248550 235.08866882]
[64.94354248 220.48634338]
[60.21729660 206.36148071]
[70.81894684 194.61773682]
[74.14120483 179.99028015]
[77.46347046 165.36280823]
[80.78572845 150.73535156]
[76.05947876 136.61048889]
[86.66113281 124.86674500]
[89.98339081 110.23928070]
[86.03180695 96.82747650]
[95.38915253 86.43845367]
[98.71141052 71.81099701]
[85.52927399 62.60557938]
[76.90967560 49.07882690]
[74.14753723 33.31791687]
[77.63668060 17.74134254]
[86.81396484 4.72779703]
[100.24995422 -3.74706626]
[115.87146759 -6.41055107]
[118.97557831 -21.08585358]
[122.07968903 -35.76115417]
[125.18379974 -50.43645859]
[128.06907654 -65.15634918]
[130.73486328 -79.91756439]
[133.40066528 -94.67878723]
[128.23908997 -109.63434601]
[138.11511230 -120.78394318]
[140.78091431 -135.54516602]
[143.44670105 -150.30638123]
[130.39381409 -157.97760010]
[120.77114105 -169.62988281]
[115.72516632 -183.84461975]
[115.84674072 -198.89968872]
[121.10188293 -212.97821045]
[130.83824158 -224.38775635]
[143.86604309 -231.76379395]
[158.60337830 -234.23286438]
[161.26916504 -248.99407959]
[156.10760498 -263.94964600]
[165.98361206 -275.09924316]
[168.64941406 -289.86044312]
[162.02252197 -307.04083252]
[173.87231445 -319.98495483]
[176.31803894 -334.78421021]
[178.76376343 -349.58349609]
[181.20948792 -364.38275146]
[183.43460083 -379.21679688]
[185.43862915 -394.08233643]
[187.44264221 -408.94784546]
[189.44665527 -423.81338501]
[175.37619019 -429.20956421]
[162.92977905 -437.70565796]
[152.77864075 -448.84347534]
[145.47021484 -462.02239990]
[141.39863586 -476.53167725]
[140.78349304 -491.58883667]
[143.65792847 -506.38186646]
[149.86695862 -520.11303711]
[159.07571411 -532.04180908]
[170.78759766 -541.52490234]
[184.37098694 -548.05084229]
[199.09335327 -551.26776123]
[214.16073608 -551.00213623]
[228.76057434 -547.26831055]
[242.10552979 -540.26770020]
[253.47589111 -530.37768555]
[262.25851440 -518.13177490]
[267.97970581 -504.19033813]
[270.33099365 -489.30514526]
[269.18551636 -474.27902222]
[264.60507202 -459.92227173]
[256.83670044 -447.00912476]
[246.29933167 -436.23599243]
[233.56120300 -428.18386841]
[219.30929565 -423.28695679]
[204.31217957 -421.80935669]
[202.30816650 -406.94384766]
[200.30415344 -392.07830811]
[198.30014038 -377.21279907]
[200.43196106 -372.93911743]
[199.90171814 -367.28085327]
[196.00875854 -361.93701172]
[193.56303406 -347.13775635]
[191.11730957 -332.33847046]
[188.67158508 -317.53921509]
[195.45875549 -307.52618408]
[193.54229736 -295.17663574]
[183.41062927 -287.19467163]
[180.74482727 -272.43344116]
[186.09707642 -258.53369141]
[176.03038025 -246.32827759]
[173.36459351 -231.56706238]
[186.30735779 -224.09912109]
[195.93218994 -212.63215637]
[201.06268311 -198.53773499]
[201.06146240 -183.51037598]
[195.90937805 -169.36378479]
[186.21011353 -157.81196594]
[173.11952209 -150.26156616]
[158.20791626 -147.64057922]
[155.54212952 -132.87936401]
[152.87632751 -118.11814880]
[158.22857666 -104.21840668]
[148.16188049 -92.01298523]
[145.49609375 -77.25177002]
[142.83029175 -62.49055481]
[144.76916504 -58.12594223]
[143.98680115 -52.49700546]
[139.85910034 -47.33234787]
[136.75498962 -32.65704727]
[133.65087891 -17.98174286]
[130.54676819 -3.30644107]
[142.41383362 4.18436098]
[151.02954102 15.29958344]
[155.34284973 28.71654701]
[154.81620789 42.82983398]
[149.49253845 55.94338608]
[139.99240112 66.47432709]
[127.44184875 73.14400482]
[113.33886719 75.13325500]
[110.01660919 89.76071930]
[113.96819305 103.17252350]
[104.61084747 113.56154633]
[101.28858948 128.18901062]
[105.77721405 143.36012268]
[95.41318512 154.05761719]
[92.09092712 168.68507385]
[88.76866913 183.31253052]
[85.44641113 197.93998718]
[89.93502808 213.11111450]
[79.57100677 223.80860901]
[80.72199249 232.87022400]
[76.08885956 238.62834167]
[72.54918671 253.20471191]
[69.00951385 267.78109741]
[67.22705078 282.67480469]
[67.22705078 297.67480469]
[67.22705078 312.67480469]
[67.22705078 327.67480469]
[74.96434784 341.47497559]
[67.22705078 354.20223999]
[67.22705078 369.20223999]
[67.22705078 384.20223999]
[70.35646057 392.78390503]
[67.11371613 399.42517090]
[66.89038849 414.42349243]
[66.66706085 429.42184448]
[66.44373322 444.42016602]
[81.18930817 447.40057373]
[95.13607025 453.03994751]
[107.80899811 461.14620972]
[118.77646637 471.44326782]
[127.66492462 483.58038330]
[134.17163086 497.14422607]
[138.07496643 511.67276001]
[139.24198914 526.67120361]
[137.63294983 541.62866211]
[133.30265808 556.03570557]
[126.39859772 569.40167236]
[117.15591431 581.27124023]
[105.88941956 591.24023438]
[92.98283386 598.96905518]
[78.87575531 604.19445801]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 195]
[18 194]
[19 193]
[20 192]
[21 190]
[22 189]
[23 188]
[25 186]
[26 185]
[27 184]
[28 183]
[45 182]
[46 181]
[47 180]
[48 178]
[50 176]
[51 175]
[52 174]
[53 173]
[55 171]
[56 170]
[58 168]
[59 167]
[66 159]
[67 158]
[68 157]
[69 156]
[70 153]
[71 152]
[72 151]
[74 149]
[75 148]
[76 147]
[84 139]
[85 138]
[87 136]
[88 135]
[90 132]
[91 131]
[92 130]
[93 129]
[94 126]
[95 125]
[96 124]
[97 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
