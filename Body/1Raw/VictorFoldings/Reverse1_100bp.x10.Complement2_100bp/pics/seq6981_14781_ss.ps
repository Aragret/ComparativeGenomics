%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[18.85863686 738.03143311]
[4.49638510 733.52465820]
[-8.66450405 726.21881104]
[-20.08510208 716.41296387]
[-29.29774094 704.50866699]
[-35.92517090 690.99340820]
[-39.69599915 676.42065430]
[-40.45581436 661.38708496]
[-38.17350388 646.50836182]
[-32.94252777 632.39379883]
[-24.97708893 619.62127686]
[-14.60336781 608.71392822]
[-2.24616146 600.11828613]
[11.58851051 594.18646240]
[26.33412552 591.16131592]
[26.33412552 576.16131592]
[26.33412552 561.16131592]
[26.33412552 546.16131592]
[14.04345703 554.76007080]
[-0.38497636 550.65881348]
[-6.31507111 536.88079834]
[0.62461841 523.58264160]
[15.31841087 520.56732178]
[26.93388367 530.05603027]
[28.04953194 515.09759521]
[29.16518021 500.13912964]
[22.39592171 486.87164307]
[31.13820076 473.68515015]
[32.25384903 458.72668457]
[29.61654663 451.82260132]
[33.49909210 443.55438232]
[20.49028778 451.02236938]
[6.48528671 445.65023804]
[1.80805421 431.39810181]
[9.90647316 418.77209473]
[24.81068993 417.07968140]
[35.53329849 427.56686401]
[37.97902679 412.76757812]
[40.42475510 397.96832275]
[42.87048340 383.16903687]
[41.34953690 380.81427002]
[40.66970444 377.71517944]
[41.11915588 374.18908691]
[42.86598969 370.65170288]
[45.92756653 367.57260132]
[49.24982452 352.94515991]
[52.57208633 338.31768799]
[55.45735550 323.59780884]
[57.90308380 308.79852295]
[60.34881210 293.99926758]
[62.79454041 279.19998169]
[65.24026489 264.40072632]
[51.74675751 257.94296265]
[40.60841370 247.93453979]
[32.73362350 235.18019104]
[28.76785851 220.70907593]
[29.04075050 205.69169617]
[33.53873444 191.34526062]
[41.90543747 178.83500671]
[53.46990585 169.17953491]
[67.30040741 163.16790771]
[82.27948761 161.29518127]
[84.72521210 146.49591064]
[79.16661835 132.67739868]
[89.05047607 120.32345581]
[91.49620056 105.52418518]
[89.59895325 97.69009399]
[94.09008789 90.52346039]
[96.75588226 75.76224518]
[99.42167664 61.00102997]
[102.08747101 46.23981094]
[100.53301239 37.23862076]
[104.90441132 31.27937126]
[99.96607971 16.24862099]
[110.00700378 5.24729872]
[112.78261566 -9.49366379]
[115.44841003 -24.25488091]
[110.28684235 -39.21044159]
[120.16286469 -50.36003876]
[122.82865906 -65.12125397]
[125.49445343 -79.88247681]
[128.16024780 -94.64369202]
[121.53336334 -111.82408142]
[133.38314819 -124.76818085]
[135.82887268 -139.56744385]
[130.44520569 -154.44450378]
[140.15412903 -165.73989868]
[142.59985352 -180.53916931]
[145.04559326 -195.33845520]
[139.66192627 -210.21549988]
[149.37084961 -221.51091003]
[147.68254089 -230.48796082]
[151.96473694 -236.51162720]
[154.63052368 -251.27284241]
[157.29632568 -266.03405762]
[159.85215759 -280.81472778]
[162.29788208 -295.61398315]
[164.74360657 -310.41326904]
[167.18933105 -325.21252441]
[169.63507080 -340.01181030]
[155.95193481 -346.38946533]
[144.49765015 -356.22317505]
[136.12217712 -368.78320312]
[131.44703674 -383.13748169]
[130.81916809 -398.22085571]
[134.28514099 -412.91403198]
[141.58776855 -426.12670898]
[152.18515015 -436.87835693]
[165.29087830 -444.37118530]
[179.93243408 -448.04913330]
[195.02331543 -447.63931274]
[209.44366455 -443.17211914]
[222.12341309 -434.97903442]
[232.12164307 -423.66806030]
[238.69639587 -410.07852173]
[241.35980225 -395.21890259]
[239.91419983 -380.19180298]
[234.46688843 -366.11242676]
[225.42207336 -354.02548218]
[213.45094299 -344.82794189]
[199.44184875 -339.20233154]
[184.43434143 -337.56607056]
[181.98860168 -322.76678467]
[179.54287720 -307.96752930]
[177.09715271 -293.16824341]
[174.65142822 -278.36898804]
[176.66226196 -271.25714111]
[172.05754089 -263.36825562]
[169.39173889 -248.60704041]
[166.72595215 -233.84582520]
[164.17012024 -219.06517029]
[169.72871399 -205.24665833]
[159.84486389 -192.89271545]
[157.39912415 -178.09344482]
[154.95339966 -163.29417419]
[160.51199341 -149.47566223]
[150.62814331 -137.12171936]
[148.18241882 -122.32244873]
[154.96958923 -112.30941772]
[153.05313110 -99.95988464]
[142.92146301 -91.97789764]
[140.25567627 -77.21667480]
[137.58987427 -62.45545959]
[134.92407227 -47.69424438]
[140.27632141 -33.79450607]
[130.20962524 -21.58908653]
[127.54383087 -6.82786846]
[129.44856262 0.31312644]
[124.72689819 8.13257122]
[129.87159729 22.11045647]
[119.62430573 34.16464615]
[116.84869385 48.90560532]
[114.18289948 63.66682434]
[111.51709747 78.42803955]
[108.85130310 93.18926239]
[106.29547119 107.96990967]
[103.84974670 122.76918030]
[109.23340607 137.64624023]
[99.52448273 148.94163513]
[97.07875824 163.74090576]
[110.65888977 170.33332825]
[121.81988525 180.47505188]
[129.66299438 193.33781433]
[133.55987549 207.87475586]
[133.20298767 222.90554810]
[128.62977600 237.21224976]
[120.21902466 249.63803101]
[108.65943909 259.18066406]
[94.89327240 265.07336426]
[80.03953552 266.84643555]
[77.59381104 281.64572144]
[75.14808655 296.44497681]
[72.70235443 311.24426270]
[70.25662994 326.04351807]
[71.92924500 330.05056763]
[72.21138000 333.98565674]
[71.29640198 337.42050171]
[69.49691010 340.03363037]
[67.19954681 341.63995361]
[63.87728500 356.26742554]
[60.55502701 370.89486694]
[57.66975403 385.61477661]
[55.22402573 400.41403198]
[52.77829742 415.21331787]
[50.33256912 430.01257324]
[48.43927765 444.89260864]
[47.21230316 459.84234619]
[46.09665298 474.80081177]
[52.78611374 489.13821411]
[44.12363434 501.25476074]
[43.00798416 516.21319580]
[41.89233780 531.17169189]
[41.33412552 546.16131592]
[41.33412552 561.16131592]
[41.33412552 576.16131592]
[41.33412552 591.16131592]
[56.07974243 594.18646240]
[69.91441345 600.11828613]
[82.27162170 608.71392822]
[92.64533997 619.62127686]
[100.61077881 632.39379883]
[105.84175873 646.50836182]
[108.12406921 661.38708496]
[107.36425018 676.42065430]
[103.59342194 690.99340820]
[96.96599579 704.50866699]
[87.75335693 716.41296387]
[76.33275604 726.21881104]
[63.17186737 733.52465820]
[48.80961609 738.03143311]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 196]
[16 195]
[17 194]
[18 193]
[24 192]
[25 191]
[26 190]
[28 188]
[29 187]
[31 186]
[37 185]
[38 184]
[39 183]
[40 182]
[45 181]
[46 180]
[47 179]
[48 174]
[49 173]
[50 172]
[51 171]
[52 170]
[62 160]
[63 159]
[65 157]
[66 156]
[68 155]
[69 154]
[70 153]
[71 152]
[73 151]
[75 149]
[76 147]
[77 146]
[79 144]
[80 143]
[81 142]
[82 141]
[84 138]
[85 137]
[87 135]
[88 134]
[89 133]
[91 131]
[93 130]
[94 129]
[95 128]
[96 126]
[97 125]
[98 124]
[99 123]
[100 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
