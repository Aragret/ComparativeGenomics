%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[93.54504395 555.80621338]
[104.39383698 544.31359863]
[103.72404480 529.32855225]
[103.05426025 514.34356689]
[94.75637817 501.97445679]
[101.86975098 487.84255981]
[93.15739441 479.45080566]
[92.47674561 466.97201538]
[100.73729706 457.06613159]
[100.29068756 442.07278442]
[99.84408569 427.07943726]
[99.39747620 412.08609009]
[86.72678375 408.18133545]
[75.85717010 400.54919434]
[67.85449219 389.92089844]
[63.50874329 377.32229614]
[63.25611115 363.97485352]
[67.13520813 351.17724609]
[74.78198242 340.17889404]
[85.46379852 332.05819702]
[98.14965057 327.61654663]
[98.14965057 312.61654663]
[98.14965057 297.61654663]
[97.70304871 282.62319946]
[96.81023407 267.64978027]
[95.91741180 252.67637634]
[95.02459717 237.70297241]
[93.01988983 235.74356079]
[91.67053986 232.87200928]
[91.32785034 229.33392334]
[92.24782562 225.49749756]
[94.55139923 221.81680298]
[94.55139923 206.81680298]
[94.55139923 191.81680298]
[94.55139923 176.81680298]
[86.81410217 164.08953857]
[94.55139923 150.28936768]
[94.55139923 135.28936768]
[93.99318695 120.29975128]
[81.24493408 109.81882477]
[79.89497375 93.37055969]
[90.76372528 80.95130157]
[89.42549133 66.01111603]
[88.08725739 51.07093048]
[86.74902344 36.13074493]
[85.41078949 21.19056129]
[84.07255554 6.25037622]
[82.73432159 -8.68980885]
[81.39608765 -23.62999344]
[79.94667053 -38.55980301]
[70.81565857 -51.48014069]
[77.18688965 -64.94329834]
[75.62636566 -79.86190796]
[74.06584167 -94.78050995]
[71.07106781 -109.47851562]
[66.67007446 -123.81835938]
[55.22432327 -134.74105835]
[58.88692474 -149.17832947]
[54.48592377 -163.51817322]
[50.08492661 -177.85801697]
[45.68392944 -192.19787598]
[42.59685135 -177.51896667]
[34.73431396 -164.74476624]
[23.02000809 -155.37593079]
[8.83011436 -150.51312256]
[-6.16835213 -150.72761536]
[-20.21338654 -155.99420166]
[-31.65499115 -165.69418335]
[-39.14902115 -178.68801880]
[-41.81507874 -193.44918823]
[-39.33996582 -208.24357605]
[-32.01445007 -221.33314514]
[-20.69912910 -231.18014526]
[-6.72331572 -236.62776184]
[8.27112770 -237.03602600]
[22.52266693 -232.35696411]
[34.35704803 -223.14027405]
[42.38457489 -210.46726990]
[41.49176025 -225.44067383]
[32.94677734 -238.75584412]
[39.91281891 -251.92108154]
[39.02000046 -266.89450073]
[38.12718582 -281.86788940]
[37.23437119 -296.84130859]
[25.69647789 -307.30624390]
[25.00433731 -322.50411987]
[35.05215454 -333.43923950]
[34.15933609 -348.41265869]
[33.26652145 -363.38604736]
[32.37370682 -378.35946655]
[21.63311195 -367.88854980]
[6.63320398 -367.94137573]
[-4.03338766 -378.48764038]
[-4.25635576 -393.48599243]
[6.09202576 -404.34466553]
[21.08373451 -404.84335327]
[32.13043213 -394.69720459]
[32.57703781 -409.69058228]
[33.02364731 -424.68392944]
[19.14492607 -430.88467407]
[8.69922352 -441.92803955]
[3.27943349 -456.12997437]
[3.71203423 -471.32473755]
[9.93105698 -485.19528198]
[20.98814583 -495.62646484]
[35.19717789 -501.02755737]
[50.39137268 -500.57498169]
[64.25373077 -494.33770752]
[74.67034149 -483.26690674]
[80.05274963 -469.05078125]
[79.58017731 -453.85720825]
[73.32467651 -440.00305176]
[62.24018478 -429.60101318]
[48.01699448 -424.23730469]
[47.57038879 -409.24395752]
[47.12378311 -394.25061035]
[47.34711075 -379.25228882]
[48.23992538 -364.27886963]
[49.13274384 -349.30545044]
[50.02555847 -334.33206177]
[61.30161285 -324.66839600]
[62.42035675 -309.49597168]
[52.20777512 -297.73413086]
[53.10058975 -282.76071167]
[53.99340820 -267.78729248]
[54.88622284 -252.81390381]
[63.36734772 -240.56973267]
[56.46516418 -226.33349609]
[57.35798264 -211.36007690]
[60.02377701 -196.59886169]
[64.42477417 -182.25901794]
[68.82577515 -167.91917419]
[73.22676849 -153.57933044]
[84.35772705 -143.68231201]
[81.00991821 -128.21936035]
[85.41091919 -113.87950897]
[89.16787720 -128.40139771]
[98.44271851 -140.19026184]
[111.67247009 -147.25947571]
[126.62768555 -148.41773987]
[140.78814697 -143.46986389]
[151.76756287 -133.24967957]
[157.71572876 -119.47943878]
[157.63024902 -104.47968292]
[151.52554321 -90.77812958]
[140.43034363 -80.68373108]
[126.21441650 -75.89757538]
[111.27337646 -77.22621155]
[98.12505341 -84.44573212]
[88.98445129 -96.34103394]
[90.54497528 -81.42242432]
[92.10549164 -66.50382233]
[101.12489319 -54.65056229]
[94.86527252 -40.12032700]
[98.68758392 -33.79484558]
[96.33627319 -24.96822739]
[97.67450714 -10.02804279]
[99.01274109 4.91214180]
[100.35097504 19.85232735]
[101.68920898 34.79251099]
[103.02744293 49.73269653]
[104.36567688 64.67288208]
[105.70391083 79.61306763]
[116.32796478 86.52560425]
[121.09888458 98.26834106]
[118.30644226 110.63182831]
[108.95164490 119.18410492]
[120.56871796 109.69497681]
[135.26222229 112.71173096]
[142.20065308 126.01053619]
[136.26925659 139.78799438]
[121.84043884 143.88789368]
[109.55139923 135.28936768]
[109.55139923 150.28936768]
[117.28869629 164.08953857]
[109.55139923 176.81680298]
[109.55139923 191.81680298]
[109.55139923 206.81680298]
[109.55139923 221.81680298]
[109.99800873 236.81015015]
[110.89082336 251.78355408]
[111.78363800 266.75695801]
[112.67645264 281.73037720]
[115.19502258 285.26742554]
[116.34171295 289.04229736]
[116.21022797 292.59448242]
[115.03417969 295.54129028]
[113.14965057 297.61654663]
[113.14965057 312.61654663]
[113.14965057 327.61654663]
[128.83413696 333.83334351]
[140.90139771 345.57189941]
[147.51991272 361.01116943]
[147.70031738 377.77151489]
[141.44317627 393.28146362]
[129.73457336 405.17221069]
[114.39083099 411.63949585]
[114.83743286 426.63284302]
[115.28404236 441.62619019]
[115.73064423 456.61953735]
[125.76940155 472.05667114]
[116.85478973 487.17276001]
[125.20058441 500.61367798]
[118.03929901 513.67376709]
[118.70908356 528.65881348]
[119.37887573 543.64385986]
[131.20971680 554.12268066]
[132.08230591 569.90289307]
[121.47893524 581.62225342]
[105.69041443 582.32800293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 206]
[3 205]
[4 204]
[6 202]
[9 200]
[10 199]
[11 198]
[12 197]
[21 190]
[22 189]
[23 188]
[24 183]
[25 182]
[26 181]
[27 180]
[32 179]
[33 178]
[34 177]
[35 176]
[37 174]
[38 173]
[39 167]
[42 163]
[43 162]
[44 161]
[45 160]
[46 159]
[47 158]
[48 157]
[49 156]
[50 154]
[52 152]
[53 151]
[54 150]
[55 136]
[56 135]
[58 133]
[59 132]
[60 131]
[61 130]
[78 129]
[79 128]
[81 126]
[82 125]
[83 124]
[84 123]
[87 120]
[88 119]
[89 118]
[90 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
