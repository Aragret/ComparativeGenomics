%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[124.49744415 503.48208618]
[117.28433990 516.71337891]
[107.21386719 527.92419434]
[94.82910919 536.50994873]
[80.79795837 542.00750732]
[65.87710571 544.12054443]
[50.87120819 542.73498535]
[36.58951187 537.92565918]
[23.80221748 529.95184326]
[13.19892311 519.24353027]
[5.35145283 506.37832642]
[0.68300992 492.04995728]
[-0.55464166 477.03112793]
[1.70524287 462.13183594]
[7.34079075 448.15551758]
[16.04808426 435.85592651]
[27.35754967 425.89636230]
[40.65928268 418.81396484]
[55.23593521 414.99063110]
[70.30140686 414.63256836]
[73.40551758 399.95724487]
[76.50962830 385.28195190]
[79.61373901 370.60665894]
[82.71784973 355.93133545]
[77.78182220 341.87841797]
[88.20745850 329.97811890]
[91.31156921 315.30282593]
[94.41567993 300.62753296]
[95.64265442 285.67779541]
[94.97286987 270.69274902]
[94.30308533 255.70771790]
[93.63330078 240.72267151]
[90.19425964 234.18089294]
[93.06677246 225.50988770]
[92.62017059 210.51654053]
[92.17356110 195.52317810]
[91.72695923 180.52983093]
[91.28034973 165.53648376]
[90.83374786 150.54313660]
[78.80454254 159.50407410]
[64.26039886 155.83421326]
[57.92271042 142.23886108]
[64.46338654 128.73999023]
[79.06088257 125.28846741]
[90.95372009 134.42715454]
[91.62351227 119.44212341]
[82.01822662 111.17217255]
[78.85890961 98.89730072]
[83.27809143 87.01772308]
[93.69161987 79.79193115]
[94.58443451 64.81852722]
[95.47724915 49.84511948]
[96.37007141 34.87171555]
[97.26288605 19.89830971]
[81.97623444 12.75896740]
[70.62905884 0.32297033]
[64.94123840 -15.48286438]
[65.75875092 -32.22423172]
[72.92797852 -47.33424759]
[85.32357025 -58.50702667]
[101.02504730 -64.04955292]
[101.47164917 -79.04290009]
[101.91825867 -94.03624725]
[102.36486053 -109.02960205]
[95.04187775 -123.05402374]
[103.15468597 -135.54528809]
[103.60128784 -150.53863525]
[104.04789734 -165.53198242]
[88.98844910 -169.16984558]
[75.01566315 -175.84870911]
[62.73583984 -185.27616882]
[52.68128204 -197.04061890]
[45.28722000 -210.62918091]
[40.87297058 -225.45014954]
[39.62815094 -240.85865784]
[41.60453033 -256.18481445]
[46.71388626 -270.76278687]
[54.73192978 -283.95971680]
[65.30816650 -295.20324707]
[77.98120117 -304.00628662]
[92.19888306 -309.98815918]
[107.34233856 -312.89099121]
[107.56566620 -327.88934326]
[107.78899384 -342.88766479]
[108.01232147 -357.88601685]
[108.23564911 -372.88433838]
[100.70467377 -386.79818726]
[108.63059998 -399.40884399]
[96.21327209 -390.99398804]
[81.84750366 -395.30960083]
[76.12319946 -409.17437744]
[83.26010895 -422.36773682]
[97.99716949 -425.16400146]
[109.47007751 -415.50338745]
[110.80831146 -430.44357300]
[112.14654541 -445.38375854]
[113.48477936 -460.32394409]
[114.82301331 -475.26412964]
[100.76180267 -480.78308105]
[88.82588196 -490.04110718]
[79.98285675 -502.28762817]
[74.94957733 -516.52990723]
[74.13407135 -531.61340332]
[77.60246277 -546.31536865]
[85.07356262 -559.44390869]
[95.94174194 -569.93481445]
[109.32595062 -576.93768311]
[124.14120483 -579.88470459]
[139.18647766 -578.53704834]
[153.24214172 -573.00396729]
[165.16876221 -563.73394775]
[173.99948120 -551.47857666]
[179.01844788 -537.23120117]
[179.81878662 -522.14691162]
[176.33564758 -507.44848633]
[168.85134888 -494.32742310]
[157.97264099 -483.84741211]
[144.58140564 -476.85806274]
[129.76319885 -473.92590332]
[128.42497253 -458.98571777]
[127.08673096 -444.04553223]
[125.74849701 -429.10534668]
[124.41026306 -414.16516113]
[123.62894440 -399.18551636]
[131.17588806 -386.34445190]
[123.23398590 -372.66101074]
[123.01065826 -357.66268921]
[122.78733063 -342.66433716]
[122.56400299 -327.66601562]
[122.34067535 -312.66766357]
[136.55195618 -309.59078979]
[149.89114380 -303.79098511]
[161.84188843 -295.49057007]
[171.94113159 -285.00885010]
[179.79711914 -272.74960327]
[185.10456848 -259.18560791]
[187.65650940 -244.84043884]
[187.35238647 -230.26826477]
[184.20201111 -216.03236389]
[178.32527161 -202.68339539]
[169.94749451 -190.73815918]
[159.39096069 -180.65943909]
[147.06233215 -172.83824158]
[133.43710327 -167.57852173]
[119.04124451 -165.08537292]
[118.59464264 -150.09202576]
[118.14803314 -135.09867859]
[125.50296783 -122.14668274]
[117.35821533 -108.58299255]
[116.91160583 -93.58964539]
[116.46499634 -78.59629059]
[116.01839447 -63.60294342]
[128.43420410 -58.95095062]
[138.83027649 -50.68536758]
[146.18617249 -39.59957886]
[149.77432251 -26.76465034]
[149.23205566 -13.42583561]
[144.59809875 -0.88178581]
[136.31025696 9.64190388]
[125.16402435 17.11242676]
[112.23628998 20.79112434]
[111.34347534 35.76453018]
[110.45066071 50.73793793]
[109.55784607 65.71134186]
[108.66502380 80.68474579]
[119.89873505 92.77489471]
[119.03909302 109.25605774]
[106.60855103 120.11190796]
[105.93875885 135.09693909]
[105.82709503 150.09652710]
[106.27370453 165.08987427]
[106.72030640 180.08322144]
[107.16691589 195.07658386]
[107.61351776 210.06993103]
[108.06012726 225.06327820]
[108.61833954 240.05288696]
[109.28812408 255.03793335]
[109.95790863 270.02297974]
[110.62769318 285.00799561]
[117.15087128 271.50067139]
[127.65953827 260.79702759]
[141.04467773 254.02665710]
[155.89373779 251.90405273]
[170.63966370 254.65322876]
[183.72625732 261.98403931]
[193.77249146 273.12286377]
[199.71813965 286.89416504]
[200.93576050 301.84466553]
[197.29684448 316.39657593]
[189.18540955 329.01422119]
[177.45748901 338.36602783]
[163.35075378 343.46502686]
[148.35392761 343.77316284]
[134.04963684 339.25793457]
[121.94747162 330.39578247]
[113.32460022 318.12197876]
[109.09098053 303.73162842]
[105.98686981 318.40692139]
[102.88275909 333.08224487]
[107.59675598 348.18484497]
[97.39315033 359.03546143]
[94.28903961 373.71075439]
[91.18492889 388.38604736]
[88.08082581 403.06137085]
[84.97671509 417.73666382]
[98.60685730 424.16439819]
[110.38687897 433.56268311]
[119.68150330 445.42468262]
[125.98948669 459.11065674]
[128.97062683 473.88256836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[26 199]
[27 198]
[28 197]
[29 179]
[30 178]
[31 177]
[32 176]
[34 175]
[35 174]
[36 173]
[37 172]
[38 171]
[39 170]
[45 169]
[46 168]
[50 165]
[51 164]
[52 163]
[53 162]
[54 161]
[61 152]
[62 151]
[63 150]
[64 149]
[66 147]
[67 146]
[68 145]
[82 130]
[83 129]
[84 128]
[85 127]
[86 126]
[88 124]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
