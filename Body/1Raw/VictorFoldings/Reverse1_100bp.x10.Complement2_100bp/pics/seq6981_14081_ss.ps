%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[4.95867205 631.32397461]
[-9.95792675 633.12432861]
[-24.97991562 632.83105469]
[-39.81488800 630.44995117]
[-54.17407227 626.02728271]
[-67.77796936 619.64923096]
[-80.36177063 611.43981934]
[-91.68053436 601.55895996]
[-101.51393127 590.19891357]
[-109.67055511 577.58081055]
[-115.99163055 563.95037842]
[-120.35412598 549.57275391]
[-122.67311096 534.72796631]
[-122.90345764 519.70489502]
[-121.04067230 504.79592896]
[-117.12101746 490.29138184]
[-111.22079468 476.47351074]
[-103.45484924 463.61129761]
[-93.97434998 451.95513916]
[-82.96383667 441.73190308]
[-70.63763428 433.14056396]
[-57.23566818 426.34841919]
[-43.01882172 421.48760986]
[-28.26382446 418.65280151]
[-13.25788689 417.89913940]
[-11.91965294 402.95895386]
[-10.58141804 388.01876831]
[-9.24318409 373.07858276]
[-17.79943848 385.39889526]
[-30.18757629 393.85668945]
[-44.77772522 397.33914185]
[-59.65029907 395.38812256]
[-72.84855652 388.26028442]
[-82.63603973 376.89343262]
[-87.72503662 362.78308105]
[-87.44599915 347.78567505]
[-81.83564758 333.87438965]
[-71.63211060 322.87948608]
[-58.17784500 316.24755859]
[-43.24298859 314.85110474]
[-28.79248047 318.87390137]
[-16.72752953 327.78662109]
[-8.63549232 340.41671753]
[-5.58095837 355.10479736]
[-0.96694887 340.83206177]
[-4.41419363 326.34185791]
[7.19290924 315.59078979]
[11.80691910 301.31805420]
[16.42092705 287.04531860]
[21.03493690 272.77258301]
[13.62068176 262.23416138]
[13.63007927 249.15434265]
[21.28375244 238.30851746]
[33.97060776 233.78543091]
[38.79660416 219.58297729]
[43.62260437 205.38052368]
[48.44860077 191.17807007]
[53.27459717 176.97561646]
[40.99908447 185.59603882]
[26.06703568 187.02221680]
[12.38165760 180.88133240]
[3.52027297 168.77861023]
[1.79922664 153.87767029]
[7.66839600 140.07357788]
[19.59359550 130.97470093]
[34.45760345 128.95945740]
[48.37500763 134.55461121]
[57.70782852 146.29763794]
[60.01658630 161.11802673]
[66.89599609 147.78858948]
[73.77541351 134.45916748]
[80.65482330 121.12973785]
[72.69239044 108.66001892]
[72.01332855 93.88054657]
[78.79875183 80.73322296]
[91.23888397 72.72465515]
[106.01574707 71.99085236]
[105.46929932 56.17908478]
[118.18196106 48.41780472]
[125.06137848 35.08837509]
[131.94079590 21.75894737]
[138.82020569 8.42951870]
[138.27375793 -7.38224840]
[150.98641968 -15.14352798]
[157.86582947 -28.47295761]
[157.61804199 -33.68694687]
[159.23348999 -38.03937531]
[162.07199097 -40.96478653]
[165.36167908 -42.23376083]
[172.82940674 -55.24271393]
[180.29714966 -68.25166321]
[187.76489258 -81.26062012]
[189.32324219 -90.26113892]
[195.44189453 -94.40647125]
[203.10249329 -107.30280304]
[210.76309204 -120.19912720]
[218.42369080 -133.09545898]
[226.08428955 -145.99177551]
[233.74488831 -158.88810730]
[241.40548706 -171.78443909]
[229.60140991 -181.07522583]
[219.11103821 -191.82730103]
[210.11390686 -203.85670471]
[202.76394653 -216.95759583]
[197.18693542 -230.90577698]
[193.47828674 -245.46260071]
[191.70147705 -260.37896729]
[191.88690186 -275.39962769]
[194.03138733 -290.26760864]
[198.09825134 -304.72842407]
[204.01788330 -318.53469849]
[211.68901062 -331.45013428]
[220.98036194 -343.25378418]
[231.73294067 -353.74362183]
[243.76277161 -362.74020386]
[256.86401367 -370.08953857]
[270.81246948 -375.66589355]
[285.36944580 -379.37384033]
[300.28591919 -381.14993286]
[315.30657959 -380.96380615]
[330.17443848 -378.81860352]
[344.63507080 -374.75103760]
[358.44104004 -368.83074951]
[371.35614014 -361.15902710]
[383.15933228 -351.86709595]
[393.64865112 -341.11401367]
[402.64465332 -329.08377075]
[409.99337769 -315.98217773]
[415.56906128 -302.03344727]
[419.27630615 -287.47628784]
[421.05169678 -272.55975342]
[420.86483765 -257.53909302]
[418.71893311 -242.67134094]
[414.65072632 -228.21089172]
[408.72976685 -214.40519714]
[401.05740356 -201.49047852]
[391.76492310 -189.68772888]
[381.01135254 -179.19889832]
[368.98065186 -170.20347595]
[355.87872314 -162.85539246]
[341.92974854 -157.28036499]
[327.37240601 -153.57380676]
[312.45578003 -151.79911804]
[297.43511963 -151.98669434]
[282.56747437 -154.13330078]
[268.10723877 -158.20222473]
[254.30181885 -164.12384033]
[246.64122009 -151.22750854]
[238.98062134 -138.33117676]
[231.32002258 -125.43485260]
[223.65942383 -112.53852844]
[215.99882507 -99.64220428]
[208.33822632 -86.74587250]
[200.77384949 -73.79287720]
[193.30610657 -60.78392410]
[185.83836365 -47.77497101]
[178.37062073 -34.76602173]
[171.19525146 -21.59354401]
[164.31584167 -8.26411533]
[165.35435486 6.59424162]
[152.14962769 15.30893135]
[145.27021790 28.63836098]
[138.39080811 41.96778870]
[131.51139832 55.29721832]
[132.54989624 70.15557861]
[119.34517670 78.87026215]
[127.30760956 91.33998108]
[127.98667145 106.11945343]
[121.20124817 119.26677704]
[108.76111603 127.27534485]
[93.98425293 128.00915527]
[87.10484314 141.33857727]
[80.22542572 154.66799927]
[73.34601593 167.99743652]
[67.47705078 181.80160522]
[62.65105438 196.00407410]
[57.82505798 210.20652771]
[52.99906158 224.40898132]
[48.17306137 238.61143494]
[56.19138336 254.15896606]
[50.59458160 270.37594604]
[35.30767059 277.38659668]
[30.69366074 291.65933228]
[26.07965279 305.93206787]
[21.46564293 320.20480347]
[24.58286285 335.71588135]
[13.30578423 345.44607544]
[8.69177532 359.71881104]
[5.69700098 374.41680908]
[4.35876656 389.35699463]
[3.02053261 404.29718018]
[1.68229842 419.23736572]
[16.31541824 422.64587402]
[30.33173180 428.05783081]
[43.45840454 435.36785889]
[55.43991852 444.43368530]
[66.04306030 455.07885742]
[75.06142426 467.09613037]
[82.31947327 480.25161743]
[87.67592621 494.28924561]
[91.02651978 508.93572998]
[92.30603027 523.90600586]
[91.48954773 538.90863037]
[88.59297943 553.65167236]
[83.67269135 567.84802246]
[76.82446289 581.22143555]
[68.18160248 593.51153564]
[57.91234589 604.47918701]
[46.21658325 613.91076660]
[33.32197571 621.62280273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 192]
[26 191]
[27 190]
[28 189]
[44 188]
[45 187]
[47 185]
[48 184]
[49 183]
[50 182]
[54 179]
[55 178]
[56 177]
[57 176]
[58 175]
[69 174]
[70 173]
[71 172]
[72 171]
[77 166]
[79 164]
[80 163]
[81 162]
[82 161]
[84 159]
[85 158]
[89 157]
[90 156]
[91 155]
[92 154]
[94 153]
[95 152]
[96 151]
[97 150]
[98 149]
[99 148]
[100 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
