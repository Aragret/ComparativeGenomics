%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[241.71473694 460.96801758]
[244.66169739 446.24618530]
[249.13140869 431.91302490]
[255.07487488 418.12561035]
[262.42697144 405.03497314]
[271.10717773 392.78460693]
[281.02035522 381.50866699]
[292.05789185 371.33071899]
[283.09719849 359.30133057]
[274.13650513 347.27197266]
[260.32849121 341.68731689]
[258.28955078 325.99804688]
[249.32884216 313.96868896]
[240.36814880 301.93930054]
[231.40745544 289.90991211]
[222.44674683 277.88055420]
[205.98017883 271.81268311]
[203.98962402 253.50642395]
[194.85081482 241.61180115]
[185.71202087 229.71716309]
[179.14411926 226.32829285]
[176.52726746 217.57672119]
[167.56657410 205.54733276]
[153.75856018 199.96270752]
[151.71961975 184.27343750]
[142.75892639 172.24404907]
[133.79821777 160.21467590]
[124.83752441 148.18530273]
[120.32534027 146.62030029]
[116.74838257 142.20414734]
[115.79546356 135.66171265]
[107.19689941 123.37087250]
[98.59833527 111.08003235]
[89.90850830 98.85354614]
[81.12790680 86.69209290]
[65.77796173 84.04314423]
[57.04642868 71.58460999]
[59.66639328 56.96710968]
[50.88579178 44.80565643]
[42.10518646 32.64419937]
[33.32458496 20.48274422]
[24.54397964 8.32128716]
[15.76337719 -3.84016824]
[6.98277426 -16.00162315]
[-5.60282183 -18.82395935]
[-12.66583824 -29.13403130]
[-10.86985207 -41.09651184]
[-19.46841621 -53.38735199]
[-33.71905518 -60.25975037]
[-34.67494583 -75.12364960]
[-43.27350998 -87.41448975]
[-51.87207031 -99.70532990]
[-57.69144440 -102.84323883]
[-60.61383820 -107.71731567]
[-60.53725433 -112.49257660]
[-68.76605988 -125.03398132]
[-76.99486542 -137.57537842]
[-82.71823120 -140.88516235]
[-85.49421692 -145.84408569]
[-85.27548218 -150.61495972]
[-93.12724304 -163.39579773]
[-100.97899628 -176.17663574]
[-108.83074951 -188.95748901]
[-122.52928162 -182.79481506]
[-136.90342712 -178.43450928]
[-151.71716309 -175.94819641]
[-166.72720337 -175.37667847]
[-181.68710327 -176.72935486]
[-196.35119629 -179.98399353]
[-210.47868347 -185.08718872]
[-223.83758545 -191.95510864]
[-236.20851135 -200.47497559]
[-247.38835144 -210.50691223]
[-257.19351196 -221.88615417]
[-265.46295166 -234.42587280]
[-272.06094360 -247.92012024]
[-276.87908936 -262.14733887]
[-279.83828735 -276.87390137]
[-280.88995361 -291.85797119]
[-280.01681519 -306.85351562]
[-277.23318481 -321.61425781]
[-272.58480835 -335.89782715]
[-266.14801025 -349.46972656]
[-258.02844238 -362.10702515]
[-248.35951233 -373.60223389]
[-237.29992676 -383.76657104]
[-225.03132629 -392.43316650]
[-211.75517273 -399.45968628]
[-197.68946838 -404.73074341]
[-183.06517029 -408.15979004]
[-168.12243652 -409.69052124]
[-153.10664368 -409.29779053]
[-138.26435852 -406.98806763]
[-123.83930206 -402.79925537]
[-110.06835175 -396.80014038]
[-97.17764282 -389.08926392]
[-85.37884521 -379.79321289]
[-74.86570740 -369.06463623]
[-65.81085968 -357.07971191]
[-58.36300278 -344.03524780]
[-52.64442825 -330.14547729]
[-48.74904633 -315.63842773]
[-46.74081802 -300.75234985]
[-46.65272141 -285.73168945]
[-48.48620224 -270.82305908]
[-52.21115494 -256.27133179]
[-57.76641083 -242.31541443]
[-65.06074524 -229.18450928]
[-73.97438812 -217.09420776]
[-84.36096191 -206.24305725]
[-96.04991150 -196.80923462]
[-88.19815063 -184.02839661]
[-80.34639740 -171.24755859]
[-72.49464417 -158.46672058]
[-64.45346832 -145.80418396]
[-56.22465897 -133.26278687]
[-47.99585342 -120.72138977]
[-39.58123398 -108.30389404]
[-30.98266983 -96.01305389]
[-22.38410568 -83.72221375]
[-8.74849510 -77.72893524]
[-7.17757797 -61.98591614]
[1.42098618 -49.69507599]
[17.69959641 -43.13963699]
[19.14422989 -24.78222656]
[27.92483330 -12.62077141]
[36.70543671 -0.45931560]
[45.48603821 11.70213985]
[54.26664352 23.86359596]
[63.04724503 36.02505112]
[71.82785034 48.18650818]
[86.52721405 50.29940796]
[95.60523224 62.50777054]
[93.28936768 77.91149139]
[102.06996918 90.07294464]
[108.96664429 94.24528503]
[110.88917542 102.48146820]
[119.48773956 114.77230835]
[128.08630371 127.06314850]
[136.86691284 139.22459412]
[145.82760620 151.25398254]
[154.78829956 163.28335571]
[163.74899292 175.31272888]
[178.19793701 181.75779724]
[179.59594727 196.58663940]
[188.55664062 208.61602783]
[197.60664368 220.57835388]
[206.74545288 232.47299194]
[215.88424683 244.36763000]
[228.54829407 246.81399536]
[235.91514587 256.90921021]
[234.47613525 268.91986084]
[243.43682861 280.94921875]
[252.39752197 292.97860718]
[261.35821533 305.00799561]
[270.31890869 317.03735352]
[284.76785278 323.48242188]
[286.16586304 338.31127930]
[295.12655640 350.34063721]
[304.08724976 362.37002563]
[316.99899292 354.70812988]
[330.64089966 348.43786621]
[344.86349487 343.62792969]
[359.51095581 340.33105469]
[374.42282104 338.58331299]
[389.43566895 338.40390015]
[404.38500977 339.79476929]
[419.10708618 342.74066162]
[433.44058228 347.20932007]
[447.22842407 353.15179443]
[460.31958008 360.50292969]
[472.57058716 369.18225098]
[483.84725952 379.09460449]
[494.02600098 390.13137817]
[502.99530029 402.17172241]
[510.65689087 415.08364868]
[516.92681885 428.72567749]
[521.73638916 442.94839478]
[525.03295898 457.59594727]
[526.78027344 472.50784302]
[526.95935059 487.52069092]
[525.56811523 502.47000122]
[522.62188721 517.19201660]
[518.15283203 531.52539062]
[512.21008301 545.31311035]
[504.85858154 558.40405273]
[496.17898560 570.65484619]
[486.26635742 581.93127441]
[475.22930908 592.10974121]
[463.18878174 601.07879639]
[450.27667236 608.74005127]
[436.63446045 615.00964355]
[422.41162109 619.81890869]
[407.76400757 623.11505127]
[392.85208130 624.86206055]
[377.83920288 625.04077148]
[362.88992310 623.64916992]
[348.16799927 620.70251465]
[333.83474731 616.23321533]
[320.04718018 610.29003906]
[306.95639038 602.93829346]
[294.70578003 594.25836182]
[283.42959595 584.34545898]
[273.25140381 573.30816650]
[264.28268433 561.26739502]
[256.62170410 548.35510254]
[250.35244751 534.71276855]
[245.54354858 520.48980713]
[242.24774170 505.84210205]
[240.50109863 490.93014526]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 160]
[9 159]
[10 158]
[12 156]
[13 155]
[14 154]
[15 153]
[16 152]
[18 149]
[19 148]
[20 147]
[22 146]
[23 145]
[25 143]
[26 142]
[27 141]
[28 140]
[31 139]
[32 138]
[33 137]
[34 135]
[35 134]
[38 131]
[39 130]
[40 129]
[41 128]
[42 127]
[43 126]
[44 125]
[47 123]
[48 122]
[50 120]
[51 119]
[52 118]
[55 117]
[56 116]
[57 115]
[60 114]
[61 113]
[62 112]
[63 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
