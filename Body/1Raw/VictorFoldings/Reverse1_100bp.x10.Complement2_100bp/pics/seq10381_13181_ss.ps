%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[101.21135712 364.01168823]
[98.23130798 378.73492432]
[93.35492706 392.94323730]
[86.66565704 406.39346313]
[78.27796173 418.85546875]
[68.33535004 430.11599731]
[57.00797653 439.98239136]
[44.48965073 448.28579712]
[30.99458313 454.88415527]
[16.75369263 459.66452026]
[2.01065803 462.54513550]
[-12.98224735 463.47671509]
[-27.96847534 462.44326782]
[-42.69159317 459.46252441]
[-56.89966583 454.58544922]
[-70.34957886 447.89553833]
[-82.81118011 439.50726318]
[-94.07124329 429.56411743]
[-103.93708801 418.23626709]
[-112.23989105 405.71755981]
[-118.83760071 392.22216797]
[-123.61730194 377.98104858]
[-126.49721527 363.23788452]
[-127.42806244 348.24493408]
[-126.39391327 333.25875854]
[-123.41246796 318.53576660]
[-118.53472900 304.32794189]
[-111.84417725 290.87835693]
[-103.45529175 278.41714478]
[-93.51161957 267.15756226]
[-82.18330383 257.29223633]
[-69.66418457 248.99003601]
[-56.16849136 242.39297485]
[-41.92714310 237.61393738]
[-27.18383598 234.73472595]
[-12.19084167 233.80459595]
[2.79528785 234.83946228]
[17.51811981 237.82160950]
[31.72572899 242.70001221]
[38.40592194 229.26963806]
[45.08611679 215.83926392]
[51.76631165 202.40888977]
[58.44650650 188.97851562]
[65.12670135 175.54814148]
[71.80690002 162.11776733]
[77.36611938 148.18595886]
[81.76712036 133.84611511]
[86.16812134 119.50627136]
[90.56911469 105.16641998]
[92.12963867 90.24781799]
[90.79140472 75.30763245]
[89.45317078 60.36745071]
[86.83041382 56.90694427]
[85.57183838 53.16789246]
[85.59750366 49.61335373]
[86.68528748 46.63286209]
[88.50719452 44.50241470]
[88.06058502 29.50906563]
[87.61397552 14.51571465]
[87.16737366 -0.47763506]
[86.72076416 -15.47098541]
[86.27416229 -30.46433449]
[78.12940979 -44.02802277]
[85.48433685 -56.98001862]
[85.03773499 -71.97336578]
[84.59112549 -86.96672058]
[69.60224915 -87.72811890]
[54.72323608 -89.69316101]
[40.05059814 -92.84910583]
[25.67948723 -97.17547607]
[11.70310974 -102.64422607]
[-1.78789175 -109.21987915]
[-14.70602131 -116.85978699]
[-26.96749878 -125.51441193]
[-38.49280548 -135.12760925]
[-49.20718765 -145.63705444]
[-59.04116440 -156.97456360]
[-67.93095398 -169.06663513]
[-75.81890106 -181.83482361]
[-82.65385437 -195.19631958]
[-88.39147949 -209.06448364]
[-92.99456787 -223.34936523]
[-96.43326569 -237.95832825]
[-98.68527222 -252.79661560]
[-99.73597717 -267.76800537]
[-99.57857513 -282.77539062]
[-98.21408081 -297.72143555]
[-95.65135193 -312.50921631]
[-91.90699005 -327.04284668]
[-87.00530243 -341.22802734]
[-80.97806549 -354.97280884]
[-73.86436462 -368.18801880]
[-65.71035004 -380.78793335]
[-56.56888962 -392.69088745]
[-46.49927902 -403.81964111]
[-35.56682205 -414.10205078]
[-23.84242249 -423.47140503]
[-11.40211773 -431.86694336]
[1.67341292 -439.23422241]
[15.29936695 -445.52545166]
[29.38737297 -450.69985962]
[43.84606552 -454.72384644]
[58.58166885 -457.57135010]
[73.49861908 -459.22387695]
[88.50017548 -459.67074585]
[103.48904419 -458.90899658]
[118.36801147 -456.94363403]
[133.04057312 -453.78738403]
[147.41159058 -449.46069336]
[161.38784790 -443.99163818]
[174.87870789 -437.41567993]
[187.79666138 -429.77548218]
[200.05795288 -421.12057495]
[211.58305359 -411.50714111]
[222.29719543 -400.99746704]
[232.13092041 -389.65972900]
[241.02044678 -377.56747437]
[248.90811157 -364.79910278]
[255.74276733 -351.43743896]
[261.48010254 -337.56915283]
[266.08285522 -323.28417969]
[269.52124023 -308.67514038]
[271.77291870 -293.83679199]
[272.82330322 -278.86538696]
[272.66555786 -263.85803223]
[271.30075073 -248.91200256]
[268.73767090 -234.12426758]
[264.99301147 -219.59072876]
[260.09100342 -205.40563965]
[254.06346130 -191.66099548]
[246.94947815 -178.44595337]
[238.79518127 -165.84620667]
[229.65345764 -153.94345093]
[219.58360291 -142.81492615]
[208.65092468 -132.53276062]
[196.92631531 -123.16366577]
[184.48582458 -114.76840210]
[171.41012573 -107.40141296]
[157.78404236 -101.11046600]
[143.69592285 -95.93637848]
[129.23713684 -91.91270447]
[114.50146484 -89.06552887]
[99.58448029 -87.41332245]
[100.03108215 -72.41997528]
[100.47769165 -57.42662430]
[108.59049988 -44.93536377]
[101.26750946 -30.91094017]
[101.71411896 -15.91759109]
[102.16072083 -0.92424101]
[102.60733032 14.06910896]
[103.05393219 29.06245804]
[103.50054169 44.05580902]
[104.39335632 59.02921295]
[105.73159027 73.96939850]
[107.06982422 88.90958405]
[112.47209167 74.91617584]
[120.81465149 62.45015335]
[131.69046021 52.11976624]
[144.56884766 44.42905426]
[158.82145691 39.75326538]
[173.75288391 38.32054138]
[188.63456726 40.20078659]
[202.74041748 45.30226517]
[215.38217163 53.37605667]
[225.94299316 64.02822876]
[233.90763855 76.73903656]
[238.88745117 90.88829041]
[240.63948059 105.78562164]
[239.07823181 120.70414734]
[234.27987671 134.91596985]
[226.47854614 147.72766113]
[216.05488586 158.51409912]
[203.51748657 166.74900818]
[189.47807312 172.03056335]
[174.62167358 174.10108948]
[159.67314148 172.85955811]
[145.36186218 168.36653137]
[132.38610840 160.84124756]
[121.37900543 150.65087891]
[112.87760162 138.29263306]
[107.29671478 124.36949921]
[104.90896606 109.56742096]
[100.50796509 123.90727234]
[96.10697174 138.24711609]
[91.70597076 152.58695984]
[103.42630005 143.22566223]
[118.13677979 140.29278564]
[132.55105591 144.44354248]
[143.44892883 154.75064087]
[148.39579773 168.91145325]
[146.28651428 183.76240540]
[137.59230042 195.98577881]
[124.25547028 202.85081482]
[109.25549316 202.82386780]
[95.94341278 195.91094971]
[87.29317474 183.65641785]
[85.23727417 168.79795837]
[78.55707550 182.22833252]
[71.87688446 195.65870667]
[65.19668579 209.08908081]
[58.51649475 222.51945496]
[51.83629990 235.94984436]
[45.15610504 249.38021851]
[57.61850739 257.76733398]
[68.87951660 267.70938110]
[78.74643707 279.03628540]
[87.05043793 291.55422974]
[93.64942932 305.04898071]
[98.43048859 319.28964233]
[101.31180573 334.03253174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 203]
[40 202]
[41 201]
[42 200]
[43 199]
[44 198]
[45 197]
[46 185]
[47 184]
[48 183]
[49 182]
[50 155]
[51 154]
[52 153]
[57 152]
[58 151]
[59 150]
[60 149]
[61 148]
[62 147]
[64 145]
[65 144]
[66 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
