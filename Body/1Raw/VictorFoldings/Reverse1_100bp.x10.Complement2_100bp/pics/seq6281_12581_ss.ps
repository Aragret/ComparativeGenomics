%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[119.82413483 785.46728516]
[105.10653687 782.51635742]
[90.71826172 778.23937988]
[76.77853394 772.67169189]
[63.40285873 765.85943604]
[50.70207977 757.85913086]
[38.78144455 748.73693848]
[27.73972511 738.56860352]
[17.66842651 727.43829346]
[8.65099812 715.43823242]
[0.76216602 702.66784668]
[-5.93269968 689.23309326]
[-11.37812233 675.24511719]
[-15.52897930 660.81994629]
[-18.35087395 646.07708740]
[-19.82042122 631.13867188]
[-19.92544556 616.12854004]
[-18.66507721 601.17108154]
[-16.04975700 586.39013672]
[-12.10116100 571.90832520]
[-6.85200644 557.84552002]
[-0.34579077 544.31835938]
[7.36357212 531.43884277]
[16.21219826 519.31378174]
[26.12676430 508.04364014]
[37.02511215 497.72177124]
[48.81693649 488.43368530]
[61.40452194 480.25640869]
[74.68355560 473.25765991]
[88.54401398 467.49548340]
[102.87103271 463.01754761]
[117.54589844 459.86102295]
[132.44699097 458.05203247]
[132.00039673 443.05868530]
[131.55378723 428.06533813]
[131.10717773 413.07199097]
[130.66056824 398.07864380]
[129.54492188 383.12017822]
[127.76245880 368.22647095]
[125.97999573 353.33276367]
[124.19752502 338.43902588]
[122.41506195 323.54531860]
[107.73625183 320.70040894]
[94.63773346 313.44790649]
[84.40837860 302.48703003]
[78.05918121 288.88269043]
[76.22334290 273.96182251]
[79.09313965 259.18414307]
[86.39987183 245.99931335]
[97.43898773 235.70463562]
[111.13796997 229.31750488]
[109.35549927 214.42378235]
[107.57303619 199.53005981]
[90.75476837 191.37905884]
[82.17890930 174.60456848]
[85.47198486 155.90255737]
[99.48158264 142.86160278]
[97.03585052 128.06233215]
[94.59012604 113.26305389]
[85.86773682 102.33549500]
[90.61060333 89.18267059]
[88.16487122 74.38339996]
[85.71914673 59.58412933]
[83.27342224 44.78485870]
[80.82769012 29.98558807]
[77.28801727 15.40921211]
[72.67401123 1.13647878]
[68.06000519 -13.13625431]
[63.33986664 -27.37424278]
[58.51387024 -41.57669830]
[53.58227539 -55.74283600]
[48.54536057 -69.87186432]
[43.50844193 -84.00089264]
[38.47152710 -98.12992096]
[33.43461227 -112.25894928]
[18.64840508 -109.54523468]
[3.61836123 -109.23867798]
[-11.26620293 -111.34721375]
[-25.61974335 -115.81622314]
[-39.07046509 -122.52995300]
[-51.26996994 -131.31449890]
[-61.90225220 -141.94233704]
[-70.69191742 -154.13815308]
[-77.41128540 -167.58605957]
[-81.88631439 -181.93772888]
[-84.00109100 -196.82139587]
[-83.70082855 -211.85157776]
[-80.99331665 -226.63891602]
[-75.94867706 -240.80039978]
[-68.69757843 -253.96922302]
[-59.42784882 -265.80426025]
[-48.37958908 -275.99899292]
[-35.83898163 -284.28930664]
[-22.13085365 -290.46047974]
[-7.61028147 -294.35266113]
[7.34661818 -295.86505127]
[22.35242653 -294.95846558]
[37.01845551 -291.65637207]
[50.96482086 -286.04431152]
[63.83027649 -278.26766968]
[75.28157806 -268.52786255]
[85.02210999 -257.07717896]
[92.79956055 -244.21221924]
[98.41249084 -230.26620483]
[101.71549988 -215.60038757]
[102.62303162 -200.59463501]
[101.11158752 -185.63763428]
[97.22031403 -171.11682129]
[91.05000305 -157.40830994]
[82.76047516 -144.86717224]
[72.56645966 -133.81826782]
[60.73200226 -124.54779053]
[47.56364059 -117.29586792]
[52.60055542 -103.16683960]
[57.63747406 -89.03781128]
[62.67438889 -74.90878296]
[67.71130371 -60.77975082]
[72.91834259 -55.53489304]
[72.71632385 -46.40269852]
[77.54232025 -32.20024109]
[82.67070007 -26.87844086]
[82.33273315 -17.75026321]
[86.94674683 -3.47753048]
[91.56075287 10.79520321]
[96.25553894 -3.45116472]
[107.37845612 -13.51499748]
[122.02199554 -16.76563454]
[136.35838318 -12.35336494]
[146.64010620 -1.43154824]
[150.17956543 13.14488029]
[146.05152893 27.56567764]
[135.33508301 38.06128311]
[120.83146667 41.88816452]
[106.33188629 38.04599380]
[95.62696075 27.53985977]
[98.07269287 42.33913040]
[100.51841736 57.13840103]
[102.96414948 71.93767548]
[105.40987396 86.73694611]
[114.13226318 97.66450500]
[109.38939667 110.81732941]
[111.83512878 125.61660004]
[114.28085327 140.41587830]
[125.26681519 143.69044495]
[134.19711304 150.79609680]
[139.80543518 160.67631531]
[141.31486511 171.88481140]
[138.54525757 182.79719543]
[131.93386841 191.84637451]
[122.46675110 197.74760437]
[124.24921417 212.64131165]
[126.03168488 227.53503418]
[140.85099792 230.50912476]
[154.00767517 237.90808105]
[164.21939087 248.99632263]
[170.49534607 262.67944336]
[172.23234558 277.61212158]
[169.27279663 292.33053589]
[161.91885376 305.39575195]
[150.90170288 315.53442383]
[137.30877686 321.76284790]
[139.09124756 336.65658569]
[140.87371826 351.55029297]
[142.65617371 366.44400024]
[144.43864441 381.33773804]
[154.53695679 370.24609375]
[169.51341248 369.40600586]
[180.78881836 379.29870605]
[181.90411377 394.25717163]
[172.22039795 405.71255493]
[157.28494263 407.10266113]
[145.65393066 397.63204956]
[146.10052490 412.62539673]
[146.54713440 427.61874390]
[146.99374390 442.61209106]
[147.44035339 457.60543823]
[162.42269897 458.52429199]
[177.25942993 460.80175781]
[191.82757568 464.41897583]
[206.00642395 469.34597778]
[219.67849731 475.54193115]
[232.73048401 482.95547485]
[245.05424500 491.52520752]
[256.54763794 501.18011475]
[267.11544800 511.84017944]
[276.67007446 523.41705322]
[285.13235474 535.81481934]
[292.43218994 548.93078613]
[298.50906372 562.65618896]
[303.31265259 576.87731934]
[306.80310059 591.47637939]
[308.95153809 606.33233643]
[309.74011230 621.32208252]
[309.16232300 636.32147217]
[307.22293091 651.20617676]
[303.93804932 665.85284424]
[299.33483887 680.14007568]
[293.45150757 693.94958496]
[286.33676147 707.16680908]
[278.04959106 719.68231201]
[268.65863037 731.39233398]
[258.24169922 742.19989014]
[246.88516235 752.01544189]
[234.68310547 760.75756836]
[221.73661804 768.35382080]
[208.15298462 774.74139404]
[194.04479980 779.86718750]
[179.52893066 783.68884277]
[164.72569275 786.17462158]
[149.75773621 787.30401611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 176]
[34 175]
[35 174]
[36 173]
[37 172]
[38 165]
[39 164]
[40 163]
[41 162]
[42 161]
[51 152]
[52 151]
[53 150]
[57 143]
[58 142]
[59 141]
[61 139]
[62 138]
[63 137]
[64 136]
[65 135]
[66 124]
[67 123]
[68 122]
[69 120]
[70 119]
[71 117]
[72 116]
[73 115]
[74 114]
[75 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
