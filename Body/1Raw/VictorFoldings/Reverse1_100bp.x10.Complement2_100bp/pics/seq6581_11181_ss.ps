%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[116.35285950 461.62295532]
[101.77117920 457.79699707]
[88.52915192 450.59197998]
[77.39666748 440.42675781]
[69.02095032 427.89239502]
[63.88895035 413.71755981]
[62.29903793 398.72637939]
[64.34364319 383.79040527]
[69.90390778 369.77801514]
[78.65654755 357.50387573]
[90.09271240 347.68157959]
[103.54750824 340.88217163]
[118.23869324 337.50097656]
[118.46202087 322.50262451]
[118.68534851 307.50430298]
[111.13839722 294.66323853]
[119.08029938 280.97979736]
[117.96465302 266.02133179]
[115.51892853 251.22206116]
[113.07319641 236.42279053]
[110.62747192 221.62351990]
[100.91854858 210.32812500]
[106.30220795 195.45106506]
[96.59328461 184.15567017]
[101.97695160 169.27861023]
[99.53121948 154.47933960]
[97.08549500 139.68006897]
[94.88781738 137.93984985]
[93.24704742 135.22425842]
[92.53813934 131.74102783]
[93.05400085 127.82971191]
[94.96215057 123.92933655]
[93.40162659 109.01072693]
[91.73008728 94.10415649]
[89.94761658 79.21044159]
[88.16515350 64.31671906]
[86.38268280 49.42300415]
[84.60021973 34.52928543]
[82.81775665 19.63556862]
[73.49538422 6.85260963]
[79.66547394 -6.70391464]
[77.88300323 -21.59763145]
[76.10054016 -36.49134827]
[74.31806946 -51.38506699]
[59.72559738 -55.54864883]
[47.87086487 -64.95653534]
[40.54098892 -78.15071869]
[38.82570648 -93.10549927]
[42.95545578 -107.53844452]
[52.27099609 -119.25877380]
[65.32840729 -126.49987030]
[63.54594040 -141.39358521]
[61.76347351 -156.28730774]
[58.11301041 -161.79962158]
[57.83595276 -167.47590637]
[60.15648270 -171.65013123]
[58.81824875 -186.59031677]
[57.48001480 -201.53050232]
[56.14178085 -216.47068787]
[54.80354691 -231.41087341]
[53.46531296 -246.35105896]
[45.73178482 -233.49833679]
[32.65613937 -226.14799500]
[17.65631676 -226.22140503]
[4.65323925 -233.69937134]
[-2.95412350 -246.62716675]
[-3.17722440 -261.62551880]
[4.04225445 -274.77386475]
[16.81715965 -282.63528442]
[31.80815887 -283.15478516]
[45.09664536 -276.19662476]
[53.20876312 -263.58044434]
[54.10157776 -278.55386353]
[54.99439621 -293.52725220]
[55.88721085 -308.50067139]
[56.78002548 -323.47406006]
[57.67284393 -338.44747925]
[58.56565857 -353.42089844]
[59.45847321 -368.39428711]
[60.35129166 -383.36770630]
[51.72979736 -399.63888550]
[61.95745468 -413.89938354]
[62.62723923 -428.88442993]
[47.83003998 -431.46728516]
[33.48463058 -435.92120361]
[19.82657242 -442.17306519]
[7.08014870 -450.12020874]
[-4.54533482 -459.63214111]
[-14.85897732 -470.55261230]
[-23.69141960 -482.70236206]
[-30.89762306 -495.88186646]
[-36.35926056 -509.87466431]
[-39.98664093 -524.45104980]
[-41.72019958 -539.37158203]
[-41.53147507 -554.39135742]
[-39.42356110 -569.26361084]
[-35.43107605 -583.74426270]
[-29.61957741 -597.59539795]
[-22.08449554 -610.58966064]
[-12.94956493 -622.51367188]
[-2.36478662 -633.17156982]
[9.49602604 -642.38836670]
[22.43810844 -650.01269531]
[36.24893951 -655.91943359]
[50.70173264 -660.01153564]
[65.55915833 -662.22174072]
[80.57724762 -662.51385498]
[95.50938416 -660.88305664]
[110.11038208 -657.35614014]
[124.14046478 -651.99096680]
[137.36924744 -644.87567139]
[149.57951355 -636.12707520]
[160.57073975 -625.88885498]
[170.16246033 -614.32910156]
[178.19715881 -601.63769531]
[184.54290771 -588.02301025]
[189.09548950 -573.70861816]
[191.78015137 -558.92950439]
[192.55282593 -543.92846680]
[191.40080261 -528.95178223]
[188.34300232 -514.24542236]
[183.42964172 -500.05078125]
[176.74140930 -486.60101318]
[168.38812256 -474.11700439]
[158.50695801 -462.80368042]
[147.26016235 -452.84689331]
[134.83242798 -444.41009521]
[121.42782593 -437.63180542]
[107.26647186 -432.62338257]
[92.58090210 -429.46704102]
[77.61228180 -428.21463013]
[76.94249725 -413.22958374]
[84.87143707 -404.09402466]
[84.43606567 -391.60427856]
[75.32469940 -382.47488403]
[74.43187714 -367.50146484]
[73.53906250 -352.52807617]
[72.64624786 -337.55465698]
[71.75343323 -322.58126831]
[70.86061859 -307.60784912]
[69.96780396 -292.63446045]
[69.07498169 -277.66104126]
[68.18216705 -262.68762207]
[68.40549469 -247.68930054]
[69.74372864 -232.74911499]
[71.08196259 -217.80892944]
[72.42019653 -202.86874390]
[73.75843048 -187.92855835]
[75.09666443 -172.98837280]
[76.65718842 -158.06976318]
[78.43965912 -143.17605591]
[80.22212219 -128.28233337]
[94.61950684 -124.32700348]
[106.43770599 -115.13594055]
[113.85668182 -102.08513641]
[115.71884155 -87.14793396]
[111.70951080 -72.59667969]
[102.40963745 -60.65703201]
[89.21179199 -53.16753387]
[90.99425507 -38.27381516]
[92.77671814 -23.38009834]
[94.55918884 -8.48638058]
[103.75405884 3.23128057]
[97.71147156 17.85310364]
[99.49393463 32.74681854]
[101.27640533 47.64053726]
[103.05886841 62.53425598]
[104.84133911 77.42797089]
[106.62380219 92.32169342]
[110.63240051 99.31480408]
[108.32022858 107.45020294]
[109.88075256 122.36881256]
[111.88476562 137.23434448]
[114.33049011 152.03361511]
[116.77622223 166.83288574]
[126.66007996 179.18682861]
[121.10147858 193.00534058]
[130.98533630 205.35928345]
[125.42674255 219.17779541]
[127.87246704 233.97706604]
[130.31819153 248.77633667]
[132.76391602 263.57559204]
[138.72877502 249.81259155]
[150.01765442 239.93528748]
[164.45085144 235.85083008]
[179.24154663 238.34788513]
[191.53388977 246.94429016]
[198.95442200 259.98022461]
[200.07034302 274.93865967]
[194.66621399 288.93136597]
[183.78544617 299.25653076]
[169.52899170 303.92056274]
[154.64950562 302.02288818]
[142.02001953 293.92993164]
[134.07864380 281.20312500]
[141.60961914 295.11694336]
[133.68368530 307.72763062]
[133.46035767 322.72595215]
[133.23703003 337.72430420]
[147.82102966 341.54141235]
[161.06741333 348.73840332]
[172.20605469 358.89685059]
[180.58937073 371.42614746]
[185.72996521 385.59786987]
[187.32897949 400.58807373]
[185.29342651 415.52529907]
[179.74165344 429.54104614]
[170.99645996 441.82049561]
[159.56625366 451.64971924]
[146.11558533 458.45727539]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 199]
[14 198]
[15 197]
[17 195]
[18 182]
[19 181]
[20 180]
[21 179]
[23 177]
[25 175]
[26 174]
[27 173]
[32 172]
[33 171]
[34 169]
[35 168]
[36 167]
[37 166]
[38 165]
[39 164]
[41 162]
[42 161]
[43 160]
[44 159]
[51 152]
[52 151]
[53 150]
[56 149]
[57 148]
[58 147]
[59 146]
[60 145]
[61 144]
[72 143]
[73 142]
[74 141]
[75 140]
[76 139]
[77 138]
[78 137]
[79 136]
[80 135]
[82 132]
[83 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
