%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[65.19762421 630.85321045]
[51.41011047 624.88763428]
[38.54077530 617.13757324]
[26.81929016 607.74127197]
[16.45483971 596.86645508]
[7.63239193 584.70721436]
[0.50939071 571.48046875]
[-4.78704453 557.42230225]
[-8.16239262 542.78363037]
[-9.55641747 527.82568359]
[-8.94423962 512.81542969]
[-6.33678484 498.02069092]
[-1.78058600 483.70550537]
[4.64304590 470.12533569]
[12.81947327 457.52258301]
[22.60277939 446.12213135]
[33.81836700 436.12744141]
[46.26608658 427.71685791]
[59.72378540 421.04049683]
[73.95130157 416.21752930]
[88.69472504 413.33395386]
[87.80191040 398.36056519]
[86.90909576 383.38714600]
[86.01628113 368.41375732]
[85.12346649 353.44033813]
[84.23065186 338.46694946]
[83.33782959 323.49353027]
[82.44501495 308.52014160]
[81.55220032 293.54672241]
[80.65938568 278.57330322]
[79.76657104 263.59991455]
[78.87375641 248.62651062]
[70.27364349 260.91625977]
[56.43515396 266.70385742]
[41.64629364 264.19592285]
[30.48955345 254.16961670]
[26.42196846 239.73164368]
[30.70392609 225.35580444]
[42.00861359 215.49659729]
[56.83314896 213.20899963]
[70.58399200 219.20185852]
[79.00037384 231.61845398]
[80.11602020 216.66000366]
[81.23167419 201.70155334]
[82.34732056 186.74308777]
[83.46296692 171.78463745]
[84.57861328 156.82618713]
[85.69426727 141.86773682]
[74.38562775 151.72241211]
[59.39112091 152.12821960]
[47.56602478 142.89962769]
[44.31661224 128.25581360]
[51.12847900 114.89173126]
[64.88732147 108.91727448]
[79.30278778 113.06387329]
[87.78479004 125.43755341]
[90.45059204 110.67633820]
[85.90407562 97.45435333]
[94.78819275 86.65786743]
[97.45398712 71.89665222]
[85.24980927 66.43615723]
[74.58251953 58.38956070]
[65.99026489 48.16740799]
[59.90550232 36.28990173]
[56.63319016 23.36040115]
[56.33552933 10.03478813]
[59.02392197 -3.01181674]
[64.55857086 -15.11924648]
[72.65576935 -25.67569923]
[82.90239716 -34.14865112]
[94.77705383 -40.11172104]
[107.67654419 -43.26612473]
[120.94654083 -43.45563889]
[124.26879883 -58.08309937]
[127.59105682 -72.71055603]
[130.91331482 -87.33802032]
[134.23558044 -101.96547699]
[137.55783081 -116.59294128]
[140.88009644 -131.22039795]
[144.20236206 -145.84785461]
[137.37702942 -164.81565857]
[151.11756897 -178.42022705]
[154.00285339 -193.14012146]
[156.88812256 -207.86001587]
[158.55966187 -222.76658630]
[159.00627136 -237.75993347]
[159.45286560 -252.75328064]
[159.89947510 -267.74664307]
[145.14930725 -270.65905762]
[131.07972717 -275.95968628]
[118.07456970 -283.50396729]
[106.48863220 -293.08602905]
[96.63797760 -304.44448853]
[88.79135132 -317.26947021]
[83.16280365 -331.21109009]
[79.90588379 -345.88906860]
[79.10945892 -360.90289307]
[80.79523468 -375.84304810]
[84.91723633 -390.30191040]
[91.36301422 -403.88507080]
[99.95671082 -416.22192383]
[110.46389771 -426.97595215]
[122.59791565 -435.85375977]
[136.02775574 -442.61312866]
[150.38702393 -447.06973267]
[165.28401184 -449.10189819]
[180.31230164 -448.65426636]
[195.06192017 -445.73898315]
[209.13046265 -440.43563843]
[222.13417053 -432.88888550]
[233.71826172 -423.30459595]
[243.56672668 -411.94421387]
[251.41088867 -399.11773682]
[257.03674316 -385.17501831]
[260.29083252 -370.49642944]
[261.08438110 -355.48242188]
[259.39572144 -340.54260254]
[255.27091980 -326.08453369]
[248.82254028 -312.50262451]
[240.22645569 -300.16741943]
[229.71720886 -289.41540527]
[217.58146667 -280.53994751]
[204.15032959 -273.78314209]
[189.79020691 -269.32934570]
[174.89282227 -267.30001831]
[174.44622803 -252.30667114]
[173.99961853 -237.31332397]
[173.55300903 -222.31997681]
[182.37600708 -234.45071411]
[195.78471375 -241.17431641]
[210.78355408 -240.98872375]
[224.02178955 -233.93539429]
[232.54193115 -221.59007263]
[234.44058228 -206.71072388]
[229.29356384 -192.62142944]
[218.25073242 -182.46977234]
[203.77909851 -178.52368164]
[189.11164856 -181.66468811]
[177.52513123 -191.19111633]
[171.60801697 -204.97473145]
[168.72273254 -190.25483704]
[165.83746338 -175.53495789]
[172.27780151 -167.60179138]
[173.31004333 -157.21513367]
[168.35308838 -147.78067017]
[158.82981873 -142.52560425]
[155.50755310 -127.89813995]
[152.18530273 -113.27067566]
[148.86303711 -98.64321899]
[145.54077148 -84.01575470]
[142.21852112 -69.38829803]
[138.89625549 -54.76083755]
[135.57400513 -40.13337708]
[150.31394958 -32.26673508]
[162.26556396 -20.57233810]
[170.46417236 -5.98353052]
[174.24505615 10.33229446]
[173.29737854 27.06711960]
[167.68965149 42.87715912]
[157.86489868 56.49076843]
[144.60568237 66.81071472]
[128.97172546 73.00263214]
[112.21520996 74.56244659]
[109.54940796 89.32366180]
[114.09592438 102.54564667]
[105.21180725 113.34213257]
[102.54601288 128.10334778]
[100.65271759 142.98338318]
[99.53707123 157.94183350]
[98.42142487 172.90028381]
[97.30577087 187.85874939]
[96.19012451 202.81719971]
[95.07447815 217.77565002]
[93.95882416 232.73410034]
[93.84716034 247.73368835]
[94.73997498 262.70709229]
[95.63278961 277.68051147]
[96.52560425 292.65390015]
[97.41842651 307.62731934]
[98.31124115 322.60070801]
[99.20405579 337.57412720]
[100.09687042 352.54751587]
[100.98968506 367.52093506]
[101.88249969 382.49435425]
[102.77532196 397.46774292]
[103.66813660 412.44116211]
[118.64974976 413.55230713]
[133.34957886 416.65045166]
[147.50527954 421.68029785]
[160.86424255 428.55209351]
[173.18803406 437.14321899]
[184.25675964 447.30032349]
[193.87284851 458.84219360]
[201.86470032 471.56277466]
[208.08970642 485.23510742]
[212.43676758 499.61520386]
[214.82829285 514.44635010]
[215.22161865 529.46398926]
[213.60971069 544.40002441]
[210.02134705 558.98791504]
[204.52056885 572.96740723]
[197.20552063 586.08886719]
[188.20678711 598.11828613]
[177.68492126 608.84082031]
[165.82771301 618.06530762]
[152.84678650 625.62695312]
[138.97378540 631.39086914]
[124.45627594 635.25427246]
[109.55335999 637.14807129]
[94.53099823 637.03863525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 186]
[22 185]
[23 184]
[24 183]
[25 182]
[26 181]
[27 180]
[28 179]
[29 178]
[30 177]
[31 176]
[32 175]
[42 174]
[43 173]
[44 172]
[45 171]
[46 170]
[47 169]
[48 168]
[56 167]
[57 166]
[59 164]
[60 163]
[73 153]
[74 152]
[75 151]
[76 150]
[77 149]
[78 148]
[79 147]
[80 146]
[82 142]
[83 141]
[84 140]
[85 128]
[86 127]
[87 126]
[88 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
