%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACACCGGGGAGUCUUACUAUAAACCGGAGUGCCCUCCUGUAUCGGAUACUUCCGACAACGAUAUCAACGUUCGUCCUCCUAUUACGGCUACAAAGUCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[76.95013428 655.31066895]
[79.33366394 639.85583496]
[91.12775421 629.58776855]
[90.68115234 614.59442139]
[90.23454285 599.60107422]
[89.78794098 584.60772705]
[89.34133148 569.61437988]
[78.35800171 559.61926270]
[77.69149017 544.42022705]
[88.24974060 532.96765137]
[87.80313110 517.97430420]
[79.69032288 505.48306274]
[87.01331329 491.45864868]
[86.56670380 476.46530151]
[86.12010193 461.47192383]
[83.81829071 458.80099487]
[82.69581604 454.88241577]
[83.32498169 450.28268433]
[86.00344849 445.80242920]
[86.22677612 430.80407715]
[86.45010376 415.80575562]
[86.67343140 400.80740356]
[86.89675903 385.80908203]
[72.90956116 380.55136108]
[61.54383850 370.80715942]
[54.18393326 357.73785400]
[51.73495102 342.91140747]
[54.51151657 328.11407471]
[62.19747925 315.13540649]
[73.88180542 305.55163574]
[88.16651154 300.53442383]
[80.61956024 287.69335938]
[88.56146240 274.00991821]
[81.01451111 261.16885376]
[88.95642090 247.48539734]
[89.17974854 232.48706055]
[89.40307617 217.48872375]
[89.62640381 202.49038696]
[87.00183868 198.50032043]
[86.85594177 192.81913757]
[90.08631134 187.05058289]
[90.75609589 172.06555176]
[91.42588043 157.08050537]
[91.87248230 142.08715820]
[92.09580994 127.08882141]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.12918091 57.68951416]
[93.35250854 42.69117737]
[82.62491608 31.39708328]
[83.06505585 16.18981743]
[93.89836121 6.03230143]
[94.12168884 -8.96603584]
[94.34501648 -23.96437263]
[94.56834412 -38.96271133]
[94.79167175 -53.96104813]
[91.79038239 -62.58833313]
[95.13163757 -69.18058777]
[95.57824707 -84.17393494]
[82.14715576 -89.16468811]
[70.93078613 -98.04614258]
[63.01750946 -109.93959808]
[59.16998291 -123.67488861]
[59.75161743 -137.90554810]
[64.69229889 -151.24081421]
[73.49656677 -162.38150024]
[85.29323578 -170.24661255]
[98.92160034 -174.07818604]
[99.59138489 -189.06323242]
[96.84828949 -197.77604675]
[100.38434601 -204.26589966]
[101.27716064 -219.23930359]
[102.16997528 -234.21270752]
[103.06278992 -249.18611145]
[103.95560455 -264.15951538]
[104.84841919 -279.13293457]
[105.74123383 -294.10632324]
[106.63405609 -309.07974243]
[93.37533569 -316.56088257]
[84.71488190 -329.00610352]
[82.32648468 -343.91638184]
[86.63097382 -358.32583618]
[96.72325134 -369.39178467]
[110.56201172 -374.95544434]
[111.45482635 -389.92883301]
[112.34764099 -404.90225220]
[113.12895966 -419.88189697]
[106.01558685 -434.01379395]
[114.31347656 -446.38287354]
[114.98326111 -461.36791992]
[115.65304565 -476.35296631]
[102.34431458 -489.83596802]
[103.10413361 -508.44607544]
[116.98347473 -520.38256836]
[117.20680237 -535.38085938]
[117.43013000 -550.37921143]
[117.65345764 -565.37756348]
[103.81723022 -571.73986816]
[93.76986694 -583.18408203]
[89.25212097 -597.72747803]
[91.04673004 -612.85028076]
[98.84276581 -625.93237305]
[111.28951263 -634.70721436]
[126.23050690 -637.65454102]
[141.07711792 -634.26367188]
[153.25709534 -625.12213135]
[160.66017151 -611.81372070]
[162.00372314 -596.64416504]
[157.05496216 -582.24176025]
[146.67131042 -571.10174561]
[132.65179443 -565.15423584]
[132.42846680 -550.15588379]
[132.20513916 -535.15753174]
[131.98181152 -520.15924072]
[141.51371765 -513.88952637]
[146.89106750 -503.69149780]
[146.67562866 -492.04470825]
[140.80528259 -481.84472656]
[130.63809204 -475.68316650]
[129.96829224 -460.69812012]
[129.29850769 -445.71310425]
[136.45979309 -432.65301514]
[128.11399841 -419.21209717]
[130.95568848 -412.38958740]
[127.32104492 -404.00942993]
[126.42823029 -389.03604126]
[125.53541565 -374.06262207]
[138.61497498 -366.89392090]
[147.32077026 -354.70709229]
[149.88247681 -339.88821411]
[145.73919678 -325.36743164]
[135.66122437 -314.03952026]
[121.60746002 -308.18692017]
[120.71464539 -293.21350098]
[119.82183075 -278.24011230]
[118.92900848 -263.26669312]
[118.03619385 -248.29328918]
[117.14337921 -233.31988525]
[116.25056458 -218.34648132]
[115.35774994 -203.37307739]
[114.57642365 -188.39343262]
[113.90663910 -173.40840149]
[128.52140808 -167.55197144]
[140.26727295 -157.02725220]
[147.71182251 -143.09309387]
[149.93876648 -127.42556763]
[146.66062927 -111.91638947]
[138.25578308 -98.44451904]
[125.72486115 -88.64854431]
[110.57159424 -83.72733307]
[110.12498474 -68.73397827]
[109.79000854 -53.73772049]
[109.56668091 -38.73938370]
[109.34335327 -23.74104500]
[109.12002563 -8.74270821]
[108.89669800 6.25562906]
[119.42277527 16.73118973]
[119.40994263 31.94481850]
[108.35084534 42.91450500]
[108.12751770 57.91284180]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.09414673 127.31214905]
[106.87081909 142.31048584]
[109.75210571 148.26109314]
[109.26832581 153.92350769]
[106.41091919 157.75028992]
[105.74113464 172.73533630]
[105.07135010 187.72036743]
[104.62474060 202.71371460]
[104.40141296 217.71205139]
[104.17808533 232.71038818]
[103.95475769 247.70872498]
[111.48573303 261.62255859]
[103.55980682 274.23324585]
[111.09078217 288.14706421]
[103.16484833 300.75775146]
[117.29383850 306.19805908]
[128.68763733 316.12545776]
[135.98377991 329.32720947]
[138.31854248 344.20065308]
[135.42919922 358.94763184]
[127.68344116 371.79199219]
[116.03263855 381.19348145]
[101.89509583 386.03240967]
[101.67176819 401.03073120]
[101.44844055 416.02908325]
[101.22511292 431.02740479]
[101.00178528 446.02575684]
[101.11344910 461.02532959]
[101.56005859 476.01867676]
[102.00666046 491.01202393]
[110.15141296 504.57571411]
[102.79648590 517.52770996]
[103.24308777 532.52105713]
[114.46428680 543.32489014]
[114.70362091 558.53662109]
[104.33467865 569.16772461]
[104.78128815 584.16107178]
[105.22789764 599.15447998]
[105.67449951 614.14782715]
[106.12110901 629.14117432]
[118.50545502 638.68902588]
[121.80464935 653.97460938]
[114.46090698 667.78051758]
[99.94171906 673.58807373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 206]
[4 205]
[5 204]
[6 203]
[7 202]
[10 199]
[11 198]
[13 196]
[14 195]
[15 194]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[31 181]
[33 179]
[35 177]
[36 176]
[37 175]
[38 174]
[41 173]
[42 172]
[43 171]
[44 168]
[45 167]
[46 166]
[48 164]
[49 163]
[50 162]
[51 161]
[54 158]
[55 157]
[56 156]
[57 155]
[58 154]
[60 153]
[61 152]
[70 144]
[71 143]
[73 142]
[74 141]
[75 140]
[76 139]
[77 138]
[78 137]
[79 136]
[80 135]
[86 129]
[87 128]
[88 127]
[89 125]
[91 123]
[92 122]
[93 121]
[96 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
