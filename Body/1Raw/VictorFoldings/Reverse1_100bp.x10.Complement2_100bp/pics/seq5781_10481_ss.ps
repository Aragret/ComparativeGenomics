%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[31.90454292 601.44671631]
[22.88705635 613.45434570]
[12.55955791 624.35571289]
[1.05668867 634.00878906]
[-11.47158813 642.28771973]
[-24.86194038 649.08447266]
[-38.93979645 654.31054688]
[-53.52162552 657.89776611]
[-68.41732025 659.79931641]
[-83.43268585 659.99053955]
[-98.37196350 658.46881104]
[-113.04039764 655.25402832]
[-127.24674988 650.38806152]
[-140.80580139 643.93438721]
[-153.54080200 635.97717285]
[-165.28570557 626.62011719]
[-175.88740540 615.98516846]
[-185.20768738 604.21099854]
[-193.12503052 591.45117188]
[-199.53623962 577.87200928]
[-204.35769653 563.65051270]
[-207.52658081 548.97210693]
[-209.00154114 534.02813721]
[-208.76338196 519.01342773]
[-206.81518555 504.12374878]
[-203.18237305 489.55322266]
[-197.91227722 475.49179077]
[-191.07363892 462.12277222]
[-182.75556946 449.62045288]
[-173.06655884 438.14785767]
[-162.13288879 427.85452271]
[-150.09712219 418.87463379]
[-137.11616516 411.32531738]
[-123.35923767 405.30493164]
[-109.00570679 400.89202881]
[-94.24269867 398.14407349]
[-79.26267242 397.09692383]
[-64.26091766 397.76422119]
[-49.43302917 400.13729858]
[-34.97230911 404.18518066]
[-29.30952263 390.29513550]
[-23.64673615 376.40512085]
[-17.98394966 362.51507568]
[-12.32116318 348.62506104]
[-14.68112946 333.91860962]
[-2.30654645 324.06060791]
[-14.42560482 316.02593994]
[-24.74198532 305.77194214]
[-32.85556412 293.69360352]
[-38.45111084 280.25665283]
[-41.31054688 265.97976685]
[-41.32144165 251.41436768]
[-38.48143005 237.12344360]
[-32.89837265 223.65977478]
[-24.78627396 211.54450989]
[-14.45707512 201.24702454]
[-2.30864859 193.16668701]
[11.19051170 187.61749268]
[25.51936722 184.81568909]
[40.12444305 184.87152100]
[54.44121170 187.78474426]
[60.31016922 173.98056030]
[66.17913055 160.17639160]
[72.04809570 146.37220764]
[77.91705322 132.56803894]
[83.78601074 118.76386261]
[89.65497589 104.95967865]
[76.77230072 112.64321899]
[61.77553940 112.95484924]
[48.58480453 105.81310272]
[40.64812469 93.08482361]
[40.04012299 78.09715271]
[46.91973877 64.76782990]
[59.48865128 56.58110428]
[74.46138000 55.67697144]
[87.92408752 62.29176712]
[96.35765076 74.69640350]
[97.55772400 89.64746094]
[105.40947723 76.86661530]
[113.26123047 64.08576965]
[113.40193939 58.86779404]
[115.33663177 54.64757538]
[118.38483429 51.94138336]
[121.75979614 50.92059708]
[130.17440796 38.50310135]
[138.58903503 26.08560753]
[147.00364685 13.66811180]
[154.56802368 0.71511322]
[161.24822998 -12.71526241]
[167.92842102 -26.14563942]
[174.60861206 -39.57601547]
[169.81217957 -54.39599991]
[176.77816772 -67.92115021]
[190.93632507 -72.40248871]
[197.61651611 -85.83286285]
[204.29670715 -99.26323700]
[210.97689819 -112.69361115]
[217.65710449 -126.12399292]
[224.33729553 -139.55436707]
[211.94589233 -148.05137634]
[200.85769653 -158.19030762]
[191.28852844 -169.77380371]
[183.42466736 -182.57637024]
[177.41917419 -196.34881592]
[173.38896179 -210.82305908]
[171.41246033 -225.71733093]
[171.52816772 -240.74174500]
[173.73381042 -255.60382080]
[177.98646545 -270.01425171]
[184.20335388 -283.69259644]
[192.26345825 -296.37252808]
[202.00988770 -307.80725098]
[213.25292969 -317.77423096]
[225.77372742 -326.07937622]
[239.32855225 -332.56109619]
[253.65357971 -337.09320068]
[268.46994019 -339.58746338]
[283.48925781 -339.99530029]
[298.41915894 -338.30883789]
[312.96902466 -334.56088257]
[326.85568237 -328.82434082]
[339.80874634 -321.21093750]
[351.57614136 -311.86886597]
[361.92877197 -300.97991943]
[370.66516113 -288.75610352]
[377.61523438 -275.43536377]
[382.64370728 -261.27694702]
[385.65270996 -246.55647278]
[386.58361816 -231.56048584]
[385.41839600 -216.58088684]
[382.17965698 -201.90925598]
[376.93048096 -187.83119202]
[369.77301025 -174.62069702]
[360.84661865 -162.53494263]
[350.32501221 -151.80918884]
[338.41302490 -142.65219116]
[325.34249878 -135.24220276]
[311.36788940 -129.72346497]
[296.76119995 -126.20340729]
[281.80676270 -124.75053406]
[266.79565430 -125.39313507]
[252.02009583 -128.11869812]
[237.76766968 -132.87417603]
[231.08747864 -119.44379425]
[224.40727234 -106.01342010]
[217.72708130 -92.58304596]
[211.04689026 -79.15266418]
[204.36669922 -65.72229004]
[209.33496094 -51.72758102]
[202.75161743 -38.01210785]
[188.03898621 -32.89582062]
[181.35879517 -19.46544456]
[174.67860413 -6.03506804]
[167.99841309 7.39530802]
[181.57540894 1.01841259]
[196.45838928 2.88852739]
[208.03565979 12.42617702]
[212.71989441 26.67601776]
[209.05963135 41.22257996]
[198.18904114 51.55845261]
[183.47648621 54.48095703]
[169.48083496 49.08451843]
[160.53877258 37.04128647]
[159.42114258 22.08273125]
[151.00653076 34.50022507]
[142.59190369 46.91772079]
[134.17729187 59.33521652]
[126.04207611 71.93753052]
[118.19032288 84.71836853]
[110.33856201 97.49921417]
[103.45915222 110.82864380]
[97.59019470 124.63282013]
[91.72122955 138.43699646]
[85.85227203 152.24118042]
[79.98330688 166.04534912]
[74.11434937 179.84953308]
[68.24538422 193.65370178]
[80.95050049 202.51942444]
[91.53739166 213.82269287]
[99.54761505 227.07061768]
[104.63501740 241.68617249]
[106.58070374 257.03332520]
[105.30242157 272.44476318]
[100.85806274 287.25085449]
[93.44304657 300.80868530]
[83.38171387 312.53012085]
[71.11315155 321.90725708]
[57.17200851 328.53433228]
[42.16524506 332.12548828]
[26.74564743 332.52685547]
[11.58348083 329.72338867]
[13.53840542 345.42333984]
[1.56886339 354.28784180]
[-4.09392309 368.17788696]
[-9.75671005 382.06790161]
[-15.41949654 395.95791626]
[-21.08228302 409.84796143]
[-7.91332245 417.06433105]
[4.34717274 425.73486328]
[15.53936291 435.74649048]
[25.51733398 446.96868896]
[34.15100479 459.25518799]
[41.32781219 472.44573975]
[46.95419693 486.36843872]
[50.95680618 500.84176636]
[53.28345871 515.67700195]
[53.90382004 530.68078613]
[52.80980301 545.65747070]
[50.01567078 560.41180420]
[45.55784988 574.75146484]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 197]
[41 196]
[42 195]
[43 194]
[44 193]
[46 191]
[61 177]
[62 176]
[63 175]
[64 174]
[65 173]
[66 172]
[67 171]
[78 170]
[79 169]
[80 168]
[84 167]
[85 166]
[86 165]
[87 164]
[88 154]
[89 153]
[90 152]
[91 151]
[94 148]
[95 147]
[96 146]
[97 145]
[98 144]
[99 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
