%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[68.59346771 544.25268555]
[60.53472519 556.93957520]
[50.63369751 568.24755859]
[39.12247849 577.91149902]
[26.27091217 585.70495605]
[12.38025570 591.44519043]
[-2.22387576 594.99761963]
[-17.19913864 596.27899170]
[-32.19449234 595.25927734]
[-46.85842133 591.96240234]
[-60.84718704 586.46557617]
[-73.83287048 578.89770508]
[-85.51107025 569.43621826]
[-95.60802460 558.30285645]
[-103.88705444 545.75860596]
[-110.15408325 532.09753418]
[-114.26221466 517.63989258]
[-116.11512756 502.72451782]
[-115.66940308 487.70117188]
[-112.93548584 472.92190552]
[-107.97745514 458.73324585]
[-100.91155243 445.46774292]
[-91.90338898 433.43640137]
[-81.16414642 422.92120361]
[-68.94556427 414.16867065]
[-55.53405762 407.38400269]
[-41.24401855 402.72619629]
[-26.41042328 400.30444336]
[-11.38099098 400.17553711]
[3.49196458 402.34246826]
[7.89296293 388.00262451]
[12.29396057 373.66278076]
[16.69495964 359.32290649]
[15.65230083 352.00619507]
[21.26970100 344.80322266]
[25.88371086 330.53048706]
[30.49771881 316.25775146]
[35.11172867 301.98501587]
[39.72573853 287.71228027]
[44.33974838 273.43954468]
[48.95375824 259.16680908]
[45.50651169 244.67662048]
[57.11361694 233.92555237]
[61.72762299 219.65281677]
[66.34163666 205.38008118]
[70.95564270 191.10734558]
[67.50839996 176.61715698]
[79.11550140 165.86607361]
[83.72950745 151.59333801]
[88.34352112 137.32060242]
[91.11913300 122.57964325]
[92.01194763 107.60623169]
[79.23126221 115.45824432]
[65.07251740 110.50546265]
[59.97301865 96.39890289]
[67.69192505 83.53738403]
[82.53914642 81.40195465]
[93.56924438 91.56523132]
[95.57325745 76.69969940]
[97.57727051 61.83417130]
[99.58128357 46.96864319]
[101.58529663 32.10311508]
[103.58930969 17.23758698]
[105.59332275 2.37205935]
[99.76910400 -12.33810806]
[109.13741302 -23.91757202]
[99.39701080 -12.51035690]
[85.70696259 -6.37990522]
[70.71058655 -6.70991182]
[57.30346680 -13.43665600]
[48.07429886 -25.26131058]
[44.80509186 -39.90071869]
[48.12707901 -54.52824020]
[57.39883423 -66.31953430]
[70.83013153 -72.99787903]
[85.82759094 -73.27379608]
[99.49544525 -67.09400940]
[109.19464111 -55.65173340]
[113.05246735 -41.15502930]
[117.66648102 -55.42776108]
[122.28048706 -69.70049286]
[126.89450073 -83.97322845]
[121.72734833 -95.79115295]
[125.86420441 -107.58396149]
[136.57267761 -113.21023560]
[141.39868164 -127.41268921]
[146.22468567 -141.61514282]
[151.05067444 -155.81759644]
[155.87667847 -170.02005005]
[158.65228271 -184.76101685]
[148.26571655 -196.36950684]
[149.15844727 -211.55693054]
[160.28936768 -221.38739014]
[160.95915222 -236.37242126]
[161.62893677 -251.35746765]
[162.29872131 -266.34249878]
[162.96850586 -281.32754517]
[163.63829041 -296.31259155]
[149.54284668 -301.84402466]
[138.00878906 -311.65444946]
[130.28726196 -324.67968750]
[127.21583557 -339.50683594]
[129.12768555 -354.52761841]
[135.81541443 -368.11264038]
[146.55358887 -378.78833008]
[160.17742920 -385.39663696]
[175.20910645 -387.22079468]
[190.01809692 -384.06286621]
[202.99803162 -376.26544189]
[212.74095154 -364.67431641]
[218.19001770 -350.54681396]
[218.75416565 -335.41537476]
[214.37216187 -320.92132568]
[205.51937866 -308.63693237]
[193.15608215 -299.89465332]
[178.62333679 -295.64279175]
[177.95355225 -280.65774536]
[177.28376770 -265.67272949]
[176.61398315 -250.68768311]
[175.94419861 -235.70263672]
[175.27441406 -220.71760559]
[185.48391724 -209.93328857]
[185.01812744 -194.72679138]
[173.63732910 -184.09123230]
[181.13439941 -197.08329773]
[192.08694458 -207.33229065]
[205.54745483 -213.95155334]
[220.35145569 -216.36846924]
[235.21826172 -214.37394714]
[248.86174011 -208.14051819]
[260.10159302 -198.20745850]
[267.96545410 -185.43406677]
[271.77304077 -170.92536926]
[271.19494629 -155.93650818]
[266.28118896 -141.76417542]
[257.45681763 -129.63442993]
[245.48529053 -120.59660339]
[231.40222168 -115.43255615]
[216.42596436 -114.58903503]
[201.85209656 -118.13901520]
[188.94140625 -125.77538300]
[178.81080627 -136.83752441]
[172.33668518 -150.36843872]
[170.07913208 -165.19406128]
[165.25312805 -150.99160767]
[160.42713928 -136.78915405]
[155.60113525 -122.58669281]
[150.77513123 -108.38423920]
[155.11599731 -91.38059235]
[141.16723633 -79.35922241]
[136.55322266 -65.08648682]
[131.93920898 -50.81375122]
[127.32520294 -36.54101944]
[124.00294495 -21.91355896]
[129.97050476 -8.26667309]
[120.45885468 4.37607288]
[118.45484161 19.24160194]
[116.45082855 34.10712814]
[114.44681549 48.97265625]
[112.44279480 63.83818436]
[110.43878174 78.70371246]
[108.43476868 93.56924438]
[106.98535156 108.49905396]
[106.09253693 123.47245789]
[113.98554993 110.71705627]
[125.55074310 101.16475677]
[139.56761169 95.82365417]
[154.55691528 95.25738525]
[168.93681335 99.52572632]
[181.18974304 108.17822266]
[190.02262878 120.30175781]
[194.50332642 134.61691284]
[194.15895081 149.61294556]
[189.02587891 163.70733643]
[179.64579773 175.41262817]
[167.00860596 183.49356079]
[152.44793701 187.09732056]
[137.50042725 185.84359741]
[123.74350739 179.86470032]
[112.62898254 169.79159546]
[105.32980347 156.68731689]
[102.61625671 141.93461609]
[98.00224304 156.20735168]
[93.38823700 170.48008728]
[96.50545502 185.99114990]
[85.22837830 195.72135925]
[80.61436462 209.99409485]
[76.00035858 224.26681519]
[71.38634491 238.53955078]
[74.50357056 254.05062866]
[63.22649002 263.78082275]
[58.61248016 278.05355835]
[53.99847031 292.32629395]
[49.38446426 306.59902954]
[44.77045441 320.87176514]
[40.15644455 335.14450073]
[35.54243469 349.41723633]
[31.03480530 363.72390747]
[26.63380814 378.06375122]
[22.23280907 392.40362549]
[17.83181190 406.74346924]
[31.35973358 413.29293823]
[43.72927475 421.83081055]
[54.65047836 432.15686035]
[63.86733246 444.02911377]
[71.16378021 457.16921997]
[76.36878967 471.26916504]
[79.36033630 485.99841309]
[80.06830597 501.01171875]
[78.47608948 515.95709229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 201]
[31 200]
[32 199]
[33 198]
[35 197]
[36 196]
[37 195]
[38 194]
[39 193]
[40 192]
[41 191]
[43 189]
[44 188]
[45 187]
[46 186]
[48 184]
[49 183]
[50 182]
[51 164]
[52 163]
[58 162]
[59 161]
[60 160]
[61 159]
[62 158]
[63 157]
[64 156]
[66 154]
[79 153]
[80 152]
[81 151]
[82 150]
[85 148]
[86 147]
[87 146]
[88 145]
[89 144]
[90 124]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
