%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[32.03604507 580.36041260]
[21.78806877 591.32916260]
[10.55798340 601.29010010]
[-1.55552137 610.15557861]
[-14.44598770 617.84783936]
[-28.00013161 624.29913330]
[-42.09883499 629.45288086]
[-56.61819839 633.26373291]
[-71.43061829 635.69824219]
[-86.40592194 636.73492432]
[-101.41249847 636.36474609]
[-116.31847382 634.59094238]
[-130.99284363 631.42913818]
[-145.30665588 626.90704346]
[-159.13410950 621.06445312]
[-172.35369873 613.95269775]
[-184.84922791 605.63421631]
[-196.51087952 596.18225098]
[-207.23619080 585.67974854]
[-216.93089294 574.21911621]
[-225.50979614 561.90093994]
[-232.89749146 548.83355713]
[-239.02905273 535.13177490]
[-243.85061646 520.91607666]
[-247.31979370 506.31127930]
[-249.40609741 491.44583130]
[-250.09120178 476.45031738]
[-249.36907959 461.45657349]
[-247.24606323 446.59631348]
[-243.74082947 432.00015259]
[-238.88418579 417.79635620]
[-232.71879578 404.10977173]
[-225.29885864 391.06069946]
[-216.68955994 378.76376343]
[-206.96658325 367.32705688]
[-196.21537781 356.85107422]
[-184.53041077 347.42791748]
[-172.01437378 339.14035034]
[-158.77728271 332.06127930]
[-144.93544006 326.25283813]
[-130.61050415 321.76611328]
[-115.92836761 318.64050293]
[-101.01805878 316.90353394]
[-86.01060486 316.57040405]
[-71.03791046 317.64410400]
[-56.23154831 320.11514282]
[-41.72164154 323.96185303]
[-27.63570595 329.15039062]
[-21.15620995 315.62203979]
[-14.67671394 302.09368896]
[-19.85279083 288.17449951]
[-13.47437763 274.36254883]
[1.16044319 269.02777100]
[7.63993931 255.49942017]
[14.11943531 241.97106934]
[20.59893036 228.44273376]
[19.11849213 213.62187195]
[32.05789566 204.51789856]
[17.25867271 206.96391296]
[6.01742172 197.03244019]
[6.62077379 182.04458618]
[18.62396049 173.04882812]
[33.17868042 176.67652893]
[39.55574036 190.25180054]
[47.02348328 177.24285889]
[54.49122238 164.23390198]
[61.95896530 151.22494507]
[61.58494949 136.33503723]
[75.16563416 128.21867371]
[82.63337708 115.20971680]
[90.10112000 102.20075989]
[91.06393433 94.19791412]
[97.77812195 89.05490875]
[98.17377472 73.23864746]
[111.32585907 66.24780273]
[118.98645782 53.35147476]
[126.64705658 40.45514679]
[127.04270935 24.63888931]
[140.19479370 17.64804077]
[147.85539246 4.75171375]
[155.32313538 -8.25723839]
[162.59635925 -21.37593269]
[169.86959839 -34.49462509]
[177.14282227 -47.61331940]
[184.41604614 -60.73201370]
[191.19604492 -74.11228943]
[197.47340393 -87.73560333]
[203.75076294 -101.35891724]
[210.02812195 -114.98223877]
[216.30548096 -128.60556030]
[222.58283997 -142.22886658]
[228.86019897 -155.85218811]
[232.39987183 -170.42855835]
[233.06967163 -185.41360474]
[233.73945618 -200.39863586]
[234.40924072 -215.38368225]
[235.07902527 -230.36871338]
[235.74880981 -245.35375977]
[221.65335083 -250.88519287]
[210.11929321 -260.69561768]
[202.39776611 -273.72085571]
[199.32633972 -288.54800415]
[201.23818970 -303.56878662]
[207.92591858 -317.15380859]
[218.66409302 -327.82949829]
[232.28793335 -334.43780518]
[247.31961060 -336.26196289]
[262.12860107 -333.10403442]
[275.10855103 -325.30661011]
[284.85147095 -313.71548462]
[290.30053711 -299.58798218]
[290.86465454 -284.45654297]
[286.48266602 -269.96249390]
[277.62988281 -257.67810059]
[265.26657104 -248.93582153]
[250.73384094 -244.68397522]
[250.06405640 -229.69892883]
[249.39427185 -214.71389771]
[248.72448730 -199.72885132]
[248.05470276 -184.74382019]
[247.38491821 -169.75877380]
[254.60829163 -182.90498352]
[264.54153442 -194.14468384]
[276.69998169 -202.92944336]
[290.49041748 -208.83064270]
[305.23992920 -211.56034851]
[320.22891235 -210.98538208]
[334.72598267 -207.13378906]
[348.02383423 -200.19348145]
[359.47357178 -190.50312805]
[368.51660156 -178.53550720]
[374.71163940 -164.87457275]
[377.75646973 -150.18684387]
[377.50250244 -135.18899536]
[373.96209717 -120.61280060]
[367.30807495 -107.16944885]
[357.86502075 -95.51487732]
[346.09371948 -86.21775055]
[332.56854248 -79.73167419]
[317.94937134 -76.37313843]
[302.94952393 -76.30600739]
[288.30087280 -79.53354645]
[274.71813965 -85.89829254]
[262.86410522 -95.08969116]
[253.31712341 -106.65926361]
[246.54301453 -120.04251099]
[242.87229919 -134.58644104]
[242.48352051 -149.57482910]
[236.20616150 -135.95150757]
[229.92880249 -122.32819366]
[223.65144348 -108.70487213]
[217.37408447 -95.08155823]
[211.09672546 -81.45824432]
[204.81935120 -67.83493042]
[219.58052063 -70.50101471]
[230.96839905 -60.73800278]
[230.58825684 -45.74282074]
[218.72033691 -36.56935883]
[204.11322021 -39.97994995]
[197.53474426 -53.45878601]
[190.26152039 -40.34009171]
[182.98828125 -27.22139740]
[175.71505737 -14.10270309]
[168.44183350 -0.98400915]
[168.87336731 3.77233553]
[166.32157898 8.85027027]
[160.75172424 12.41231155]
[153.09112549 25.30863762]
[153.24340820 40.20246506]
[139.54338074 48.11574554]
[131.88278198 61.01206970]
[124.22219086 73.90840149]
[124.37447357 88.80222321]
[110.67445374 96.71550751]
[103.11006927 109.66850281]
[95.64233398 122.67745209]
[88.17459106 135.68640137]
[88.01445770 151.50680542]
[74.96791840 158.69268799]
[67.50017548 171.70164490]
[60.03243256 184.71060181]
[52.56469345 197.71954346]
[45.58623886 210.99739075]
[46.60322189 226.78588867]
[34.12727737 234.92222595]
[27.64778137 248.45057678]
[21.16828537 261.97891235]
[14.68878841 275.50726318]
[19.70533752 290.25418091]
[12.94149208 303.88156128]
[-1.14836884 308.57318115]
[-7.62786484 322.10153198]
[-14.10736084 335.62988281]
[-1.23539078 343.35302734]
[10.85680389 352.24758911]
[22.06295395 362.23541260]
[32.28458023 373.22872925]
[41.43184662 385.13088989]
[49.42436981 397.83737183]
[56.19190598 411.23641968]
[61.67498779 425.21032715]
[65.82541656 439.63629150]
[68.60673523 454.38754272]
[69.99447632 469.33438110]
[69.97647095 484.34552002]
[68.55285645 499.28900146]
[65.73615265 514.03350830]
[61.55111313 528.44946289]
[56.03451538 542.41021729]
[49.23484039 555.79296875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 193]
[49 192]
[50 191]
[53 188]
[54 187]
[55 186]
[56 185]
[58 183]
[64 182]
[65 181]
[66 180]
[67 179]
[69 177]
[70 176]
[71 175]
[73 174]
[75 172]
[76 171]
[77 170]
[79 168]
[80 167]
[81 164]
[82 163]
[83 162]
[84 161]
[85 160]
[86 154]
[87 153]
[88 152]
[89 151]
[90 150]
[91 149]
[92 148]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
