%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[156.73237610 492.18246460]
[151.97650146 477.94592285]
[148.49748230 463.34475708]
[146.32255554 448.49325562]
[145.46871948 433.50762939]
[145.94265747 418.50518799]
[147.74067688 403.60336304]
[150.84870911 388.91876221]
[155.24240112 374.56628418]
[160.88739014 360.65832520]
[167.73948669 347.30368042]
[175.74507141 334.60690308]
[184.84147644 322.66732788]
[194.95751953 311.57846069]
[206.01402283 301.42703247]
[217.92443848 292.29251099]
[209.88327026 279.62997437]
[201.84208679 266.96746826]
[193.80091858 254.30493164]
[185.75975037 241.64241028]
[169.79008484 234.36663818]
[169.16659546 215.96302795]
[152.56893921 213.25071716]
[142.87757874 199.09472656]
[146.49256897 181.97891235]
[138.07794189 169.56141663]
[129.66333008 157.14392090]
[115.16104889 162.57382202]
[99.78173065 164.38394165]
[84.41504669 162.46958923]
[69.94991302 156.94148254]
[57.22312164 148.11943054]
[46.97089005 136.51374817]
[39.78628922 122.79582214]
[36.08493805 107.75920868]
[36.08094788 92.27372742]
[39.77455139 77.23520660]
[46.95207977 63.51358032]
[57.19832993 51.90262222]
[48.59976578 39.61178589]
[39.90994263 27.38529968]
[31.12933922 15.22384357]
[22.34873581 3.06238770]
[13.56813335 -9.09906769]
[4.78752995 -21.26052284]
[-4.52735281 -33.01777649]
[-14.35793400 -44.34736633]
[-24.18851471 -55.67695999]
[-34.01909637 -67.00655365]
[-43.84967422 -78.33615112]
[-53.68025589 -89.66574097]
[-65.95655060 -81.02377319]
[-79.04415894 -73.66812897]
[-92.80879211 -67.67430115]
[-107.10919189 -63.10379028]
[-121.79861450 -60.00349808]
[-136.72633362 -58.40523529]
[-151.73915100 -58.32540894]
[-166.68301392 -59.76483154]
[-181.40457153 -62.70873642]
[-195.75276184 -67.12691498]
[-209.58035278 -72.97402954]
[-222.74545288 -80.19007111]
[-235.11296082 -88.70100403]
[-246.55595398 -98.41947937]
[-256.95703125 -109.24578094]
[-266.20944214 -121.06880188]
[-274.21823120 -133.76722717]
[-280.90124512 -147.21075439]
[-286.18991089 -161.26141357]
[-290.02990723 -175.77503967]
[-292.38189697 -190.60269165]
[-293.22167969 -205.59222412]
[-292.54067993 -220.58979797]
[-290.34585571 -235.44152832]
[-286.65979004 -249.99499512]
[-281.52023315 -264.10089111]
[-274.97994995 -277.61444092]
[-267.10607910 -290.39697266]
[-257.97940063 -302.31732178]
[-247.69357300 -313.25314331]
[-236.35414124 -323.09228516]
[-224.07745361 -331.73370361]
[-210.98951721 -339.08877563]
[-197.22462463 -345.08200073]
[-182.92402649 -349.65188599]
[-168.23446655 -352.75152588]
[-153.30668640 -354.34912109]
[-138.29386902 -354.42828369]
[-123.35006714 -352.98822021]
[-108.62863159 -350.04364014]
[-94.28063202 -345.62484741]
[-80.45330048 -339.77713013]
[-67.28852081 -332.56051636]
[-54.92139435 -324.04904175]
[-43.47882462 -314.33004761]
[-33.07823181 -303.50329590]
[-23.82634354 -291.67987061]
[-15.81809711 -278.98107910]
[-9.13567257 -265.53726196]
[-3.84764099 -251.48635864]
[-0.00826740 -236.97256470]
[2.34305024 -222.14480591]
[3.18218398 -207.15525818]
[2.50052238 -192.15771484]
[0.30506057 -177.30607605]
[-3.38167214 -162.75276184]
[-8.52184391 -148.64709473]
[-15.06270885 -135.13385010]
[-22.93714523 -122.35166168]
[-32.06435013 -110.43170929]
[-42.35066223 -99.49632263]
[-32.52008438 -88.16672516]
[-22.68950272 -76.83713531]
[-12.85892105 -65.50754547]
[-3.02834034 -54.17794800]
[6.80224037 -42.84835434]
[8.93983936 -57.69526291]
[20.86657715 -66.79212952]
[35.75027466 -64.92784882]
[45.06487656 -53.17037582]
[43.47455215 -38.25492096]
[31.89031601 -28.72573090]
[16.94898605 -30.04112625]
[25.72958946 -17.87967110]
[34.51019287 -5.71821547]
[43.29079437 6.44324017]
[52.07139969 18.60469627]
[58.53548813 22.18762016]
[60.89060593 31.01322174]
[69.48916626 43.30405807]
[82.89778137 37.92863464]
[97.16735840 35.67802429]
[111.57953644 36.66553116]
[125.40877533 40.84144592]
[137.95887756 47.99553680]
[148.59803772 57.76765442]
[156.79066467 69.66584778]
[162.12431335 83.09113312]
[164.33049011 97.36764526]
[163.29811096 111.77667999]
[159.07916260 125.59284973]
[151.88601685 138.12062073]
[142.08082581 148.72929382]
[150.49543762 161.14678955]
[158.91006470 173.56428528]
[172.34176636 174.56634521]
[182.59425354 182.99824524]
[186.06694031 195.60865784]
[181.70799255 207.73422241]
[194.15501404 211.11570740]
[200.75062561 221.73088074]
[198.42227173 233.60124207]
[206.46343994 246.26376343]
[214.50462341 258.92630005]
[222.54579163 271.58880615]
[230.58695984 284.25134277]
[243.91923523 277.35580444]
[257.80874634 271.66558838]
[272.14685059 267.22518921]
[286.82125854 264.06939697]
[301.71716309 262.22290039]
[316.71798706 261.70013428]
[331.70629883 262.50518799]
[346.56478882 264.63177490]
[361.17721558 268.06326294]
[375.42916870 272.77276611]
[389.20910645 278.72344971]
[402.40921021 285.86871338]
[414.92614746 294.15267944]
[426.66195679 303.51046753]
[437.52481079 313.86886597]
[447.42962646 325.14678955]
[456.29898071 337.25598145]
[464.06335449 350.10168457]
[470.66207886 363.58334351]
[476.04342651 377.59542847]
[480.16531372 392.02828979]
[482.99551392 406.76895142]
[484.51181030 421.70208740]
[484.70239258 436.71081543]
[483.56573486 451.67761230]
[481.11071777 466.48541260]
[477.35662842 481.01828003]
[472.33276367 495.16247559]
[466.07849121 508.80734253]
[458.64276123 521.84600830]
[450.08377075 534.17651367]
[440.46847534 545.70227051]
[429.87213135 556.33319092]
[418.37771606 565.98590088]
[406.07513428 574.58502197]
[393.06069946 582.06317139]
[379.43630981 588.36181641]
[365.30850220 593.43164062]
[350.78793335 597.23303223]
[335.98822021 599.73620605]
[321.02517700 600.92156982]
[306.01593018 600.77984619]
[291.07794189 599.31213379]
[276.32812500 596.52996826]
[261.88192749 592.45507812]
[247.85240173 587.11932373]
[234.34934998 580.56451416]
[221.47845459 572.84197998]
[209.34045410 564.01208496]
[198.03034973 554.14404297]
[187.63665771 543.31494141]
[178.24072266 531.60968018]
[169.91607666 519.11975098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 157]
[17 156]
[18 155]
[19 154]
[20 153]
[22 150]
[25 146]
[26 145]
[27 144]
[39 131]
[40 130]
[41 128]
[42 127]
[43 126]
[44 125]
[45 124]
[46 117]
[47 116]
[48 115]
[49 114]
[50 113]
[51 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
