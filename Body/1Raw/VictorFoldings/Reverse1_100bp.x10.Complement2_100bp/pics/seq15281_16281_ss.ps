%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUAAGGAUCCCCCAACAAACUAGGGCAAAGCACGUUCUUAUCCUCCACCUCACAACGAUCCCGACGUUAUUACUUCCCGUUCUACUUCACUUUCCAUUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[183.93583679 675.04327393]
[174.82110596 687.24334717]
[161.52900696 694.67572021]
[146.36247253 696.05267334]
[131.94918823 691.13562012]
[120.78634644 680.77655029]
[114.80798340 666.77014160]
[115.04988861 651.54315186]
[121.47013855 637.73370361]
[132.95639038 627.73443604]
[147.51858521 623.27770996]
[149.30105591 608.38397217]
[151.08351135 593.49029541]
[152.86598206 578.59655762]
[154.64845276 563.70281982]
[156.43090820 548.80914307]
[157.54656982 533.85064697]
[157.99316406 518.85729980]
[156.87751770 503.89886475]
[154.21173096 489.13766479]
[151.54592896 474.37643433]
[148.88012695 459.61520386]
[146.21434021 444.85400391]
[142.87129211 441.44326782]
[141.63533020 435.89624023]
[143.69578552 429.61404419]
[141.47067261 414.77999878]
[139.24554443 399.94595337]
[137.02043152 385.11190796]
[124.92719269 376.49279785]
[122.45928955 361.48068237]
[131.58181763 348.85461426]
[129.35668945 334.02056885]
[127.13157654 319.18652344]
[124.90645599 304.35247803]
[122.68134308 289.51843262]
[107.26489258 288.44250488]
[92.46525574 283.96920776]
[79.02182770 276.31875610]
[67.60695648 265.87020874]
[58.79235077 253.14271545]
[53.02038956 238.76959229]
[50.58197021 223.46690369]
[51.60181808 207.99777222]
[56.03213882 193.13430786]
[63.65481567 179.61909485]
[74.09217072 168.12803650]
[86.82567596 159.23664856]
[101.22169495 153.39112854]
[98.77596283 138.59185791]
[96.33023834 123.79258728]
[80.08567810 113.52678680]
[76.52984619 94.64218140]
[87.92840576 79.17139435]
[84.82429504 64.49608612]
[81.72018433 49.82078552]
[71.35536194 42.14399338]
[69.07205963 29.85699463]
[75.55809784 19.64632034]
[72.67282104 4.92642879]
[69.78755188 -9.79346275]
[54.35120392 -16.70831680]
[46.15942001 -31.31639671]
[48.26780319 -47.76378250]
[59.64895248 -59.59370041]
[56.54484177 -74.26900482]
[53.44073486 -88.94430542]
[50.33662415 -103.61960602]
[46.20893097 -108.78426361]
[45.42656326 -114.41320038]
[47.36543655 -118.77781677]
[44.69963837 -133.53903198]
[42.03384399 -148.30024719]
[31.96714973 -160.50566101]
[37.31939316 -174.40541077]
[34.65359879 -189.16662598]
[24.58690643 -201.37203979]
[29.93914986 -215.27177429]
[27.27335548 -230.03300476]
[24.60755920 -244.79421997]
[21.94176292 -259.55541992]
[16.48577118 -245.58288574]
[5.87576103 -234.97969055]
[-8.10029221 -229.53268433]
[-23.08717918 -230.15975952]
[-36.55934525 -236.75527954]
[-46.24649429 -248.20774841]
[-50.51617050 -262.58724976]
[-48.64886093 -277.47055054]
[-40.95923615 -290.34960938]
[-28.74313736 -299.05401611]
[-14.05918980 -302.11697388]
[0.61810458 -299.02227783]
[12.81536198 -290.29150391]
[20.47766876 -277.39428711]
[20.70099640 -292.39263916]
[20.92432404 -307.39096069]
[21.14765167 -322.38931274]
[7.06703377 -328.05505371]
[-4.01337624 -338.42755127]
[-10.59504414 -352.10403442]
[-11.78785229 -367.23486328]
[-7.43048525 -381.77368164]
[1.88776040 -393.75427246]
[14.90666771 -401.55636597]
[29.86553764 -404.12475586]
[44.74130249 -401.11212158]
[57.52214432 -392.92587280]
[66.47955322 -380.67315674]
[70.40210724 -366.01101685]
[68.75933075 -350.92242432]
[61.77338028 -337.44796753]
[50.38905334 -327.40997314]
[36.14598846 -322.16598511]
[35.92266083 -307.16763306]
[35.69933319 -292.16931152]
[35.47600555 -277.17095947]
[36.70298004 -262.22122192]
[39.36877823 -247.46000671]
[42.03457260 -232.69879150]
[44.70036697 -217.93757629]
[54.57638550 -206.78797913]
[49.41481781 -191.83241272]
[52.08061218 -177.07119751]
[61.95663071 -165.92160034]
[56.79506302 -150.96604919]
[59.46085739 -136.20483398]
[62.12665176 -121.44361115]
[65.01192474 -106.72371674]
[68.11603546 -92.04841614]
[71.22014618 -77.37311554]
[74.32425690 -62.69781113]
[86.96776581 -58.41017532]
[95.91337585 -48.35432053]
[98.74456024 -35.08578491]
[94.61721039 -22.04801178]
[84.50744629 -12.67873573]
[87.39271545 2.04115605]
[90.27798462 16.76104736]
[102.50791168 29.34659195]
[96.39548492 46.71667480]
[99.49959564 61.39197922]
[102.60370636 76.06728363]
[112.24913025 79.27529907]
[119.71072388 86.17821503]
[123.65819550 95.54534149]
[123.38777924 105.70666504]
[118.94768524 114.85057831]
[111.12950897 121.34686279]
[113.57523346 136.14613342]
[116.02096558 150.94540405]
[130.58110046 151.69155884]
[144.66000366 155.45480347]
[157.63980103 162.06735229]
[168.95138550 171.23641968]
[178.09939575 182.55725098]
[184.68389893 195.53086853]
[188.41789246 209.58615112]
[189.13975525 224.10498047]
[186.82031250 238.44935608]
[181.56394958 251.98948669]
[173.60397339 264.13143921]
[163.29219055 274.34313965]
[151.08341980 282.17779541]
[137.51538086 287.29330444]
[139.74050903 302.12734985]
[141.96562195 316.96139526]
[144.19073486 331.79544067]
[146.41584778 346.62948608]
[158.84136963 356.02334595]
[160.88664246 371.09884644]
[151.85447693 382.88681030]
[154.07958984 397.72085571]
[156.30471802 412.55490112]
[158.52983093 427.38894653]
[160.97555542 442.18820190]
[163.64135742 456.94943237]
[166.30714417 471.71063232]
[168.97294617 486.47186279]
[171.63873291 501.23306274]
[176.84051514 487.16390991]
[186.97383118 476.10424805]
[200.53547668 469.69476318]
[215.51367188 468.88623047]
[229.68647766 473.79861450]
[240.95146179 483.70318604]
[247.63749695 497.13064575]
[248.75277710 512.08911133]
[244.13185120 526.35961914]
[234.46020508 537.82519531]
[221.17256165 544.78497314]
[206.24008179 546.20654297]
[191.87789917 541.87902832]
[180.21655273 532.44433594]
[172.98652649 519.30395508]
[172.53991699 534.29730225]
[184.17184448 524.82635498]
[199.10722351 526.21722412]
[208.79039001 537.67303467]
[207.67437744 552.63146973]
[196.39849854 562.52362061]
[181.42208862 561.68280029]
[171.32463074 550.59161377]
[169.54216003 565.48529053]
[167.75970459 580.37902832]
[165.97723389 595.27276611]
[164.19476318 610.16644287]
[162.41230774 625.06018066]
[175.51155090 632.82739258]
[184.31379700 645.25482178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 208]
[12 207]
[13 206]
[14 205]
[15 204]
[16 203]
[17 196]
[18 195]
[19 180]
[20 179]
[21 178]
[22 177]
[23 176]
[26 175]
[27 174]
[28 173]
[29 172]
[32 169]
[33 168]
[34 167]
[35 166]
[36 165]
[49 151]
[50 150]
[51 149]
[54 143]
[55 142]
[56 141]
[59 139]
[60 138]
[61 137]
[65 132]
[66 131]
[67 130]
[68 129]
[71 128]
[72 127]
[73 126]
[75 124]
[76 123]
[78 121]
[79 120]
[80 119]
[81 118]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
