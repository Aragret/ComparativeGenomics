%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[232.47651672 333.01037598]
[235.32334900 318.27346802]
[239.42652893 303.83581543]
[244.75564575 289.80435181]
[251.27125549 276.28295898]
[258.92510986 263.37173462]
[267.66058350 251.16627502]
[256.25811768 241.42030334]
[244.85565186 231.67433167]
[233.45318604 221.92837524]
[222.05073547 212.18240356]
[207.34875488 209.79472351]
[201.88551331 194.94670105]
[190.48304749 185.20072937]
[173.78802490 187.22921753]
[160.53044128 176.34107971]
[159.22413635 158.89651489]
[147.67784119 149.32139587]
[136.13153076 139.74627686]
[124.58523560 130.17115784]
[113.03893280 120.59603119]
[101.49263000 111.02091217]
[101.80440521 126.01766968]
[91.52050018 136.93743896]
[76.53200531 137.52487183]
[65.42501831 127.44346619]
[64.56211090 112.46830750]
[74.43761444 101.17784882]
[89.39347076 100.03948212]
[78.74745941 89.47243500]
[68.10145569 78.90538788]
[57.45544434 68.33834076]
[46.80943680 57.77128983]
[36.16342926 47.20424271]
[25.51741982 36.63719559]
[29.32012367 51.14717102]
[27.35679626 66.01812744]
[19.91868782 79.04404449]
[8.10919476 88.29261017]
[-6.31981325 92.39184570]
[-21.22787857 90.73365784]
[-34.40348053 83.56402588]
[-43.89209366 71.94653320]
[-48.28614044 57.60455322]
[-46.93378830 42.66564178]
[-40.03565598 29.34589005]
[-28.61503410 19.62121010]
[-14.36610699 14.93419743]
[0.59738207 15.98014355]
[14.05416775 22.60272980]
[5.82536030 10.06132889]
[-2.40344763 -2.48007107]
[-10.63225555 -15.02147102]
[-11.38691521 -0.04046707]
[-19.44779396 12.60952282]
[-32.70779800 19.62182045]
[-47.70079041 19.16342926]
[-60.50764465 11.35417080]
[-67.78067780 -1.76463306]
[-67.61872864 -16.76375961]
[-60.06414413 -29.72247124]
[-47.09166718 -37.25339127]
[-32.09226990 -37.38795853]
[-18.98740005 -30.09161186]
[-25.26476097 -43.71492767]
[-31.54212189 -57.33824539]
[-37.81948471 -70.96156311]
[-44.09684372 -84.58487701]
[-50.37420273 -98.20819092]
[-64.76190186 -93.87917328]
[-79.61206818 -91.59474182]
[-94.63564301 -91.39936066]
[-109.54019928 -93.29684448]
[-124.03560638 -97.25023651]
[-137.83970642 -103.18260193]
[-150.68379211 -110.97846222]
[-162.31787109 -120.48606110]
[-172.51545715 -131.52033997]
[-181.07807922 -143.86650085]
[-187.83903503 -157.28424072]
[-192.66673279 -171.51235962]
[-195.46720886 -186.27391052]
[-196.18592834 -201.28157043]
[-194.80892944 -216.24317932]
[-191.36299133 -230.86753845]
[-185.91520691 -244.86994934]
[-178.57160950 -257.97787476]
[-169.47514343 -269.93615723]
[-158.80287170 -280.51202393]
[-146.76255798 -289.49963379]
[-133.58854675 -296.72399902]
[-119.53726959 -302.04449463]
[-104.88225555 -305.35760498]
[-89.90876007 -306.59881592]
[-74.90824890 -305.74395752]
[-60.17271042 -302.80966187]
[-45.98897552 -297.85305786]
[-32.63313675 -290.97064209]
[-20.36516953 -282.29638672]
[-9.42387009 -271.99908447]
[-0.02221716 -260.27923584]
[7.65678453 -247.36492920]
[13.46366119 -233.50758362]
[17.28537941 -218.97689819]
[19.04754829 -204.05574036]
[18.71586800 -189.03456116]
[16.29679298 -174.20571899]
[11.83741379 -159.85789490]
[5.42453051 -146.27037048]
[-2.81702662 -133.70761108]
[-12.72683334 -122.41416168]
[-24.11199188 -112.60986328]
[-36.75088882 -104.48555756]
[-30.47352791 -90.86223602]
[-24.19616699 -77.23892212]
[-17.91880608 -63.61560440]
[-11.64144516 -49.99229050]
[-5.36408472 -36.36897278]
[1.90914488 -23.25027847]
[10.13795280 -10.70887852]
[18.36676025 1.83252144]
[26.59556770 14.37392139]
[36.08446503 25.99118423]
[46.73047638 36.55823135]
[57.37648392 47.12528229]
[68.02249146 57.69232941]
[78.66850281 68.25937653]
[89.31451416 78.82642365]
[99.96051788 89.39347076]
[111.06775665 99.47460938]
[122.61405182 109.04972839]
[134.16035461 118.62484741]
[145.70666504 128.19996643]
[157.25296021 137.77508545]
[168.79925537 147.35020447]
[181.97679138 144.56318665]
[194.17538452 149.79812622]
[201.03004456 160.93795776]
[200.22901917 173.79827881]
[211.63148499 183.54423523]
[227.14904785 186.62902832]
[231.79669189 200.77993774]
[243.19915771 210.52590942]
[254.60162354 220.27188110]
[266.00408936 230.01783752]
[277.40655518 239.76380920]
[288.10305786 229.23449707]
[299.66513062 219.66371155]
[312.00714111 211.12228394]
[325.03775024 203.67347717]
[338.66046143 197.37242126]
[352.77438354 192.26576233]
[367.27508545 188.39134216]
[382.05517578 185.77780151]
[397.00521851 184.44453430]
[412.01452637 184.40138245]
[426.97201538 185.64866638]
[441.76687622 188.17716980]
[456.28961182 191.96817017]
[470.43267822 196.99357605]
[484.09140015 203.21620178]
[497.16461182 210.58996582]
[509.55554199 219.06028748]
[521.17242432 228.56443787]
[531.92932129 239.03205872]
[541.74652100 250.38565063]
[550.55133057 262.54116821]
[558.27862549 275.40856934]
[564.87115479 288.89263916]
[570.28015137 302.89352417]
[574.46545410 317.30755615]
[577.39624023 332.02801514]
[579.05065918 346.94595337]
[579.41650391 361.95086670]
[578.49114990 376.93167114]
[576.28137207 391.77749634]
[572.80352783 406.37838745]
[568.08343506 420.62625122]
[562.15594482 434.41561890]
[555.06494141 447.64437866]
[546.86303711 460.21456909]
[537.61090088 472.03317261]
[527.37701416 483.01263428]
[516.23712158 493.07168579]
[504.27374268 502.13586426]
[491.57546997 510.13806152]
[478.23626709 517.01898193]
[464.35494995 522.72778320]
[450.03424072 527.22210693]
[435.38018799 530.46868896]
[420.50131226 532.44354248]
[405.50772095 533.13195801]
[390.51046753 532.52893066]
[375.62057495 530.63885498]
[360.94827271 527.47583008]
[346.60217285 523.06317139]
[332.68856812 517.43353271]
[319.31039429 510.62869263]
[306.56674194 502.69894409]
[294.55194092 493.70306396]
[283.35494995 483.70761108]
[273.05865479 472.78662109]
[263.73934937 461.02093506]
[255.46595764 448.49765015]
[248.29975891 435.30950928]
[242.29382324 421.55413818]
[237.49261475 407.33337402]
[233.93167114 392.75253296]
[231.63735962 377.91955566]
[230.62666321 362.94424438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 146]
[8 145]
[9 144]
[10 143]
[11 142]
[13 140]
[14 139]
[17 135]
[18 134]
[19 133]
[20 132]
[21 131]
[22 130]
[29 129]
[30 128]
[31 127]
[32 126]
[33 125]
[34 124]
[35 123]
[50 122]
[51 121]
[52 120]
[53 119]
[64 118]
[65 117]
[66 116]
[67 115]
[68 114]
[69 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
