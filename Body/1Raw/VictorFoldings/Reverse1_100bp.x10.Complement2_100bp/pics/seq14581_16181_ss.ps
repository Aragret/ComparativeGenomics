%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUUAUUACUACAUACGAAACAAAGACAACUCACACCCAAAUCAUUACCCCAAACACCCCAAAAGAAGAUUCGGAAGAGGAUAAAUACCCCCAAAUCAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[115.44522858 704.70294189]
[103.47383881 695.62371826]
[92.88258362 684.96673584]
[83.87763214 672.93939209]
[76.63426971 659.77581787]
[71.29348755 645.73223877]
[67.95924377 631.08203125]
[66.69644165 616.11035156]
[67.52966309 601.10858154]
[70.44268799 586.36883545]
[75.37881470 572.17797852]
[82.24195862 558.81225586]
[90.89852905 546.53173828]
[101.18001556 535.57562256]
[112.88629913 526.15704346]
[125.78950500 518.45941162]
[139.63847351 512.63256836]
[154.16362000 508.78991699]
[152.38114929 493.89617920]
[150.59869385 479.00247192]
[148.81622314 464.10876465]
[147.03375244 449.21502686]
[144.91912842 434.36483765]
[142.47340393 419.56555176]
[140.02767944 404.76629639]
[130.31875610 393.47088623]
[135.70242310 378.59384155]
[125.99349213 367.29843140]
[131.37715149 352.42138672]
[128.93142700 337.62210083]
[126.48570251 322.82284546]
[124.03997040 308.02355957]
[121.59424591 293.22430420]
[119.03841400 278.44363403]
[116.37261963 263.68243408]
[113.70682526 248.92121887]
[111.04103088 234.15998840]
[108.37522888 219.39877319]
[100.35398102 215.59187317]
[94.90091705 208.41142273]
[93.33992767 199.39157104]
[96.14577484 190.53387451]
[102.80973053 183.86312866]
[100.80571747 168.99760437]
[98.80170441 154.13206482]
[96.79769135 139.26654053]
[93.61026764 135.70994568]
[92.62323761 130.11326599]
[94.96215057 123.92933655]
[93.40162659 109.01072693]
[91.73008728 94.10415649]
[89.94761658 79.21044159]
[88.16515350 64.31671906]
[86.38268280 49.42300415]
[84.60021973 34.52928543]
[82.48559570 19.67908859]
[80.03987122 4.87981796]
[77.48403931 -9.90083599]
[74.81824493 -24.66205215]
[61.99327087 -29.71289253]
[53.40685654 -40.35676193]
[51.21852112 -53.74633789]
[55.89431381 -66.36699677]
[66.11261749 -74.95934296]
[63.66689301 -89.75861359]
[53.78303528 -102.11255646]
[59.34163284 -115.93106842]
[56.89590836 -130.73034668]
[54.45018005 -145.52961731]
[44.56632233 -157.88356018]
[50.12491989 -171.70207214]
[47.67919159 -186.50134277]
[45.23346329 -201.30061340]
[42.78773880 -216.09988403]
[40.34201050 -230.89915466]
[32.44007492 -218.14927673]
[18.59709167 -212.37243652]
[3.97614980 -215.72326660]
[-5.96950102 -226.95198059]
[-7.53037882 -241.87054443]
[-0.12431493 -254.91470337]
[13.48641205 -261.21932983]
[28.22533798 -258.43292236]
[38.59571838 -247.59370422]
[37.92593384 -262.57873535]
[23.17395210 -270.04672241]
[14.25216103 -283.85604858]
[13.51610470 -300.18621826]
[21.07207870 -314.57592773]
[34.77393723 -323.14163208]
[33.88112259 -338.11505127]
[32.98830414 -353.08843994]
[32.09548950 -368.06185913]
[31.20267487 -383.03524780]
[30.30985832 -398.00866699]
[29.41704178 -412.98208618]
[15.04046059 -417.91992188]
[3.65117240 -427.98733521]
[-3.01403761 -441.64907837]
[-3.93877316 -456.82183838]
[1.01798058 -471.19192505]
[11.10035515 -482.56796265]
[24.77086067 -489.21517944]
[39.94484711 -490.11996460]
[54.30838776 -485.14431763]
[65.67115021 -475.04699707]
[72.30039215 -461.36773682]
[73.18520355 -446.19259644]
[68.19066620 -431.83560181]
[58.07839584 -420.48614502]
[44.39044952 -413.87487793]
[45.28326416 -398.90148926]
[46.17607880 -383.92807007]
[47.06889725 -368.95468140]
[47.96171188 -353.98126221]
[48.85452652 -339.00787354]
[49.74734497 -324.03445435]
[62.33660507 -318.74035645]
[71.46047211 -308.48931885]
[75.29580688 -295.24395752]
[73.03937531 -281.57330322]
[65.07528687 -270.15447998]
[52.91097260 -263.24853516]
[53.58075714 -248.26348877]
[55.14128113 -233.34487915]
[57.58700943 -218.54560852]
[60.03273392 -203.74633789]
[62.47846222 -188.94706726]
[64.92418671 -174.14779663]
[74.63311005 -162.85238647]
[69.24945068 -147.97534180]
[71.69517517 -133.17607117]
[74.14090729 -118.37679291]
[83.84983063 -107.08139801]
[78.46616364 -92.20433807]
[80.91189575 -77.40506744]
[95.81608582 -70.52448273]
[103.76184082 -55.97021484]
[101.44385529 -39.38322449]
[89.57946014 -27.32784843]
[92.24525452 -12.56663132]
[96.52745056 -6.54295969]
[94.83914185 2.43409061]
[97.28486633 17.23336220]
[99.92288971 19.57284737]
[101.55881500 23.30631638]
[101.54981995 27.94886017]
[99.49393463 32.74681854]
[101.27640533 47.64053726]
[103.05886841 62.53425598]
[104.84133911 77.42797089]
[106.62380219 92.32169342]
[110.63240051 99.31480408]
[108.32022858 107.45020294]
[109.88075256 122.36881256]
[111.66321564 137.26252747]
[113.66722870 152.12805176]
[115.67124939 166.99359131]
[117.67526245 181.85911560]
[131.78056335 197.99147034]
[123.13645172 216.73298645]
[125.80224609 231.49420166]
[128.46804810 246.25541687]
[131.13383484 261.01663208]
[133.79963684 275.77786255]
[138.40435791 283.66671753]
[136.39352417 290.77856445]
[138.83924866 305.57785034]
[141.28497314 320.37710571]
[143.73069763 335.17639160]
[146.17642212 349.97564697]
[156.06028748 362.32958984]
[150.50169373 376.14810181]
[160.38554382 388.50204468]
[154.82695007 402.32055664]
[157.27267456 417.11984253]
[159.71839905 431.91909790]
[163.03184509 435.95248413]
[164.33636475 440.40798950]
[163.80760193 444.44970703]
[161.92747498 447.43255615]
[163.70993042 462.32629395]
[165.49240112 477.22000122]
[167.27487183 492.11370850]
[169.05734253 507.00744629]
[184.07905579 507.31396484]
[198.91191101 509.70822144]
[213.26718140 514.14355469]
[226.86543274 520.53369141]
[239.44197083 528.75421143]
[250.75198364 538.64508057]
[260.57531738 550.01385498]
[268.72079468 562.63909912]
[275.02981567 576.27520752]
[279.37957764 590.65661621]
[281.68542480 605.50347900]
[281.90249634 620.52679443]
[280.02651978 635.43402100]
[276.09402466 649.93511963]
[270.18157959 663.74780273]
[262.40426636 676.60308838]
[252.91345215 688.25085449]
[241.89390564 698.46435547]
[229.56010437 707.04479980]
[216.15213013 713.82507324]
[201.93098450 718.67333984]
[187.17349243 721.49505615]
[172.16690063 722.23547363]
[157.20330811 720.88006592]
[142.57400513 717.45520020]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 185]
[19 184]
[20 183]
[21 182]
[22 181]
[23 177]
[24 176]
[25 175]
[27 173]
[29 171]
[30 170]
[31 169]
[32 168]
[33 167]
[34 165]
[35 164]
[36 163]
[37 162]
[38 161]
[43 159]
[44 158]
[45 157]
[46 156]
[49 155]
[50 154]
[51 152]
[52 151]
[53 150]
[54 149]
[55 148]
[56 144]
[57 143]
[58 141]
[59 140]
[64 136]
[65 135]
[67 133]
[68 132]
[69 131]
[71 129]
[72 128]
[73 127]
[74 126]
[75 125]
[84 124]
[85 123]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
