%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[57.14641190 546.35662842]
[45.38116455 555.67156982]
[32.98815536 564.13336182]
[20.02912521 571.69989014]
[6.56863785 578.33343506]
[-7.32624578 584.00097656]
[-21.58630180 588.67431641]
[-36.14048767 592.33007812]
[-50.91629410 594.95007324]
[-65.84011078 596.52130127]
[-80.83757782 597.03588867]
[-95.83399200 596.49127197]
[-110.75462341 594.89019775]
[-125.52516174 592.24060059]
[-140.07199097 588.55566406]
[-154.32266235 583.85382080]
[-168.20617676 578.15850830]
[-181.65335083 571.49798584]
[-194.59721375 563.90551758]
[-206.97325134 555.41888428]
[-218.71981812 546.08044434]
[-229.77841187 535.93664551]
[-240.09391785 525.03808594]
[-249.61494446 513.43896484]
[-258.29406738 501.19717407]
[-266.08804321 488.37362671]
[-272.95803833 475.03225708]
[-278.86981201 461.23953247]
[-283.79394531 447.06411743]
[-287.70590210 432.57669067]
[-290.58618164 417.84942627]
[-292.42041016 402.95562744]
[-293.19949341 387.96957397]
[-292.91952515 372.96588135]
[-291.58187866 358.01934814]
[-289.19326782 343.20434570]
[-285.76559448 328.59478760]
[-281.31585693 314.26336670]
[-275.86633301 300.28155518]
[-269.44406128 286.71896362]
[-262.08114624 273.64318848]
[-253.81417847 261.11935425]
[-244.68438721 249.20986938]
[-234.73725891 237.97406006]
[-224.02233887 227.46789551]
[-212.59301758 217.74372864]
[-200.50622559 208.85000610]
[-187.82218933 200.83102417]
[-174.60408020 193.72674561]
[-160.91778564 187.57255554]
[-146.83146667 182.39910889]
[-132.41529846 178.23220825]
[-117.74111176 175.09257507]
[-102.88201904 172.99588013]
[-87.91203308 171.95254517]
[-72.90574646 171.96778870]
[-57.93791199 173.04153442]
[-43.08310699 175.16842651]
[-28.41533279 178.33786011]
[-14.00766563 182.53405762]
[0.06811585 187.73609924]
[13.74188519 193.91809082]
[26.94552040 201.04920959]
[34.98669434 188.38668823]
[43.02786636 175.72415161]
[51.06903839 163.06163025]
[59.11021423 150.39910889]
[67.15138245 137.73658752]
[57.85160446 126.95540619]
[51.96533966 113.99116516]
[49.96931076 99.89380646]
[52.02516937 85.80504608]
[57.96641541 72.86590576]
[67.31188202 62.12430954]
[79.30469513 54.45018768]
[92.97357941 50.46505737]
[107.21151733 50.49166489]
[120.86541748 54.52785873]
[129.09422302 41.98645782]
[137.32302856 29.44505692]
[145.55183411 16.90365791]
[153.78063965 4.36225653]
[162.00946045 -8.17914391]
[150.10438538 -17.31570053]
[138.90660095 -27.30653191]
[128.47723389 -38.09706879]
[118.87327576 -49.62837601]
[110.14715576 -61.83747482]
[102.34654236 -74.65768433]
[95.51404572 -88.01897430]
[89.68697357 -101.84838104]
[84.89716339 -116.07036591]
[81.17076111 -130.60725403]
[78.52813721 -145.37965393]
[76.98370361 -160.30688477]
[76.54591370 -175.30740356]
[77.21714783 -190.29928589]
[78.99374390 -205.20065308]
[81.86599731 -219.93013000]
[85.81822968 -234.40725708]
[90.82884216 -248.55296326]
[96.87046814 -262.28997803]
[103.91011810 -275.54330444]
[111.90933990 -288.24053955]
[120.82444763 -300.31231689]
[130.60675049 -311.69274902]
[141.20280457 -322.31964111]
[152.55476379 -332.13494873]
[164.60060120 -341.08508301]
[177.27453613 -349.12115479]
[190.50735474 -356.19927979]
[204.22677612 -362.28079224]
[218.35786438 -367.33248901]
[232.82344055 -371.32675171]
[247.54450989 -374.24179077]
[262.44064331 -376.06164551]
[277.43054199 -376.77642822]
[292.43225098 -376.38223267]
[307.36389160 -374.88116455]
[322.14392090 -372.28146362]
[336.69155884 -368.59732056]
[350.92739868 -363.84884644]
[364.77368164 -358.06198120]
[378.15478516 -351.26831055]
[390.99758911 -343.50497437]
[403.23199463 -334.81436157]
[414.79113770 -325.24392700]
[425.61193848 -314.84597778]
[435.63525391 -303.67724609]
[444.80636597 -291.79876709]
[453.07516479 -279.27542114]
[460.39648438 -266.17559814]
[466.73037720 -252.57086182]
[472.04220581 -238.53549194]
[476.30297852 -224.14614868]
[479.48941040 -209.48143005]
[481.58410645 -194.62144470]
[482.57565308 -179.64732361]
[482.45858765 -164.64088440]
[481.23358154 -149.68405151]
[478.90731812 -134.85855103]
[475.49249268 -120.24532318]
[471.00778198 -105.92420959]
[465.47763062 -91.97340393]
[458.93228149 -78.46912384]
[451.40750122 -65.48510742]
[442.94433594 -53.09227371]
[433.58905029 -41.35831833]
[423.39273071 -30.34731865]
[412.41104126 -20.11941910]
[400.70397949 -10.73047829]
[388.33551025 -2.23177838]
[375.37313843 5.33026457]
[361.88772583 11.91434860]
[347.95285034 17.48451424]
[333.64465332 22.01033592]
[319.04132080 25.46709824]
[304.22253418 27.83592033]
[289.26928711 29.10386467]
[274.26324463 29.26400375]
[259.28634644 28.31546593]
[244.42039490 26.26342964]
[229.74659729 23.11910439]
[215.34507751 18.89966202]
[201.29452515 13.62814903]
[187.67164612 7.33335638]
[174.55085754 0.04966427]
[166.32205200 12.59106445]
[158.09323120 25.13246536]
[149.86442566 37.67386627]
[141.63562012 50.21526718]
[133.40681458 62.75666428]
[143.27590942 74.89468384]
[148.91384888 89.48728943]
[149.76939392 105.10773468]
[145.75889587 120.22879791]
[137.27449036 133.37205505]
[125.14568329 143.25245667]
[110.55834961 148.90400696]
[94.93870544 149.77413940]
[79.81391144 145.77775574]
[71.77273560 158.44027710]
[63.73156357 171.10281372]
[55.69039154 183.76533508]
[47.64921951 196.42785645]
[39.60804749 209.09037781]
[51.67700577 218.00828552]
[63.08683777 227.75532532]
[73.78070068 238.28291321]
[83.70531464 249.53862000]
[92.81124115 261.46636963]
[101.05310059 274.00671387]
[108.38985443 287.09722900]
[114.78492737 300.67263794]
[120.20647430 314.66534424]
[124.62747955 329.00561523]
[128.02592468 343.62203979]
[130.38487244 358.44177246]
[131.69256592 373.39096069]
[131.94248962 388.39517212]
[131.13340759 403.37966919]
[129.26934814 418.26971436]
[126.35960388 432.99121094]
[122.41866302 447.47079468]
[117.46615601 461.63629150]
[111.52675629 475.41717529]
[104.63006592 488.74475098]
[96.81044006 501.55264282]
[88.10682678 513.77703857]
[78.56259155 525.35705566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 186]
[64 185]
[65 184]
[66 183]
[67 182]
[68 181]
[78 172]
[79 171]
[80 170]
[81 169]
[82 168]
[83 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
