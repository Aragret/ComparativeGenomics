%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[156.10632324 468.36431885]
[163.31039429 455.18157959]
[172.20733643 443.07669067]
[182.63836670 432.26571655]
[194.41731262 422.94155884]
[186.75671387 410.04525757]
[179.09611511 397.14892578]
[171.43551636 384.25259399]
[163.77493286 371.35626221]
[156.11433411 358.45993042]
[148.45373535 345.56359863]
[140.79313660 332.66729736]
[133.13253784 319.77096558]
[133.59654236 334.76379395]
[128.97048950 349.03262329]
[119.79785156 360.90118408]
[107.15622711 368.97515869]
[92.53072357 372.30603027]
[77.63954163 370.50250244]
[64.23208618 363.77642822]
[53.88343811 352.91799927]
[47.80936050 339.20285034]
[46.72342300 324.24218750]
[50.75319672 309.79364014]
[59.42527771 297.55456543]
[71.72087097 288.96279907]
[86.19550323 285.02770996]
[101.14871216 286.21157837]
[114.82381439 292.37530518]
[125.61518097 302.79608154]
[121.21417999 288.45623779]
[116.81318665 274.11639404]
[112.41218567 259.77655029]
[108.01119232 245.43670654]
[103.61019135 231.09686279]
[99.20919037 216.75700378]
[94.80819702 202.41716003]
[92.19535828 217.18785095]
[85.57863617 230.64959717]
[75.47983551 241.74078369]
[62.69540405 249.58670044]
[48.23357010 253.56857300]
[33.23485184 253.37237549]
[18.88211441 249.01361084]
[6.30727339 240.83599854]
[-3.49796700 229.48446655]
[-9.76032448 215.85424805]
[-11.98592377 201.02026367]
[-9.99924374 186.15242004]
[-3.95696378 172.42321777]
[5.66439772 160.91542053]
[18.10606003 152.53657532]
[32.38682175 147.94747925]
[47.38043976 147.51002502]
[61.90446091 151.25874329]
[74.81345367 158.89797974]
[85.08936310 169.82527161]
[91.92292786 183.18211365]
[91.92292786 168.18211365]
[91.92292786 153.18211365]
[83.59397125 144.40971375]
[83.47120667 131.91296387]
[92.16584015 122.38584137]
[92.38916779 107.38750458]
[92.05419159 92.39124298]
[91.16137695 77.41783905]
[90.26856232 62.44443512]
[89.37574005 47.47102737]
[77.83785248 37.00609589]
[77.14571381 21.80821609]
[87.19352722 10.87309074]
[86.30071259 -4.10031509]
[85.40789795 -19.07372093]
[76.86291504 -32.38889313]
[83.82895660 -45.55413437]
[82.93613434 -60.52753830]
[71.39824677 -70.99246979]
[70.70610046 -86.19035339]
[80.75392151 -97.12547302]
[79.86110687 -112.09888458]
[78.96829224 -127.07228851]
[78.07546997 -142.04570007]
[77.18265533 -157.01910400]
[76.28984070 -171.99250793]
[61.32952118 -173.45376587]
[46.78200531 -177.23745728]
[33.00554657 -183.25041199]
[20.33940125 -191.34455872]
[9.09547997 -201.32057190]
[-0.44932130 -212.93276978]
[-8.05995464 -225.89520264]
[-13.54900169 -239.88867188]
[-16.78128815 -254.56854248]
[-17.67721939 -269.57333374]
[-16.21472740 -284.53353882]
[-12.42983150 -299.08074951]
[-6.41573668 -312.85668945]
[1.67945445 -325.52218628]
[11.65639114 -336.76528931]
[23.26938057 -346.30911255]
[36.23244476 -353.91870117]
[50.22635651 -359.40658569]
[64.90650177 -362.63766479]
[79.91136932 -363.53234863]
[94.87144470 -362.06863403]
[109.41833496 -358.28253174]
[123.19380188 -352.26730347]
[135.85861206 -344.17105103]
[147.10089111 -334.19320679]
[156.64376831 -322.57940674]
[164.25227356 -309.61572266]
[169.73899841 -295.62136841]
[172.96887207 -280.94094849]
[173.86231995 -265.93600464]
[172.39736938 -250.97604370]
[168.61006165 -236.42947388]
[162.59370422 -222.65449524]
[154.49641418 -209.99035645]
[144.51762390 -198.74891663]
[132.90306091 -189.20698547]
[119.93874359 -181.59956360]
[105.94392395 -176.11396790]
[91.26324463 -172.88531494]
[92.15605927 -157.91191101]
[93.04888153 -142.93850708]
[93.94169617 -127.96510315]
[94.83451080 -112.99169922]
[95.72732544 -98.01829529]
[107.00337982 -88.35463715]
[108.12212372 -73.18219757]
[97.90954590 -61.42035294]
[98.80236053 -46.44694901]
[107.28348541 -34.20277405]
[100.38130188 -19.96653748]
[101.27411652 -4.99313068]
[102.16693115 9.98027515]
[113.44298553 19.64392662]
[114.56172943 34.81637192]
[104.34915161 46.57821274]
[105.24196625 61.55162048]
[106.13478088 76.52502441]
[107.02759552 91.49842834]
[118.78466797 82.18331909]
[133.43162537 85.41850281]
[140.17129517 98.81913757]
[134.03543091 112.50676727]
[119.54716492 116.39138031]
[107.38750458 107.61083221]
[107.16417694 122.60916901]
[116.50361633 138.47915649]
[106.92292786 153.18211365]
[106.92292786 168.18211365]
[106.92292786 183.18211365]
[109.14804077 198.01615906]
[113.54904175 212.35601807]
[117.95003510 226.69586182]
[122.35103607 241.03570557]
[126.75203705 255.37554932]
[131.15303040 269.71539307]
[135.55403137 284.05523682]
[139.95503235 298.39508057]
[146.02886963 312.11035156]
[153.68945312 325.00668335]
[161.35005188 337.90301514]
[169.01065063 350.79934692]
[176.67124939 363.69567871]
[184.33184814 376.59201050]
[191.99244690 389.48831177]
[199.65304565 402.38464355]
[207.31364441 415.28097534]
[221.13633728 409.39739990]
[235.61991882 405.40875244]
[250.50590515 403.38623047]
[265.52865601 403.36590576]
[280.42007446 405.34820557]
[294.91436768 409.29769897]
[308.75292969 415.14389038]
[321.68872070 422.78250122]
[333.49096680 432.07717896]
[343.94897461 442.86203003]
[352.87612915 454.94464111]
[360.11315918 468.10931396]
[365.53085327 482.12118530]
[369.03253174 496.73013306]
[370.55572510 511.67547607]
[370.07327271 526.69049072]
[367.59371948 541.50720215]
[363.16137695 555.86120605]
[356.85531616 569.49633789]
[348.78805542 582.16931152]
[339.10363770 593.65386963]
[327.97479248 603.74505615]
[315.60021973 612.26287842]
[302.20068359 619.05523682]
[288.01538086 624.00097656]
[273.29742432 627.01177979]
[258.30947876 628.03399658]
[243.31901550 627.04925537]
[228.59356689 624.07525635]
[214.39593506 619.16497803]
[200.97947693 612.40612793]
[188.58363342 603.91931152]
[177.42961121 593.85589600]
[167.71649170 582.39562988]
[159.61759949 569.74291992]
[153.27746582 556.12353516]
[148.80924988 541.78070068]
[146.29267883 526.97021484]
[145.77267456 511.95642090]
[147.25851440 497.00732422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 170]
[6 169]
[7 168]
[8 167]
[9 166]
[10 165]
[11 164]
[12 163]
[13 162]
[30 161]
[31 160]
[32 159]
[33 158]
[34 157]
[35 156]
[36 155]
[37 154]
[58 153]
[59 152]
[60 151]
[63 149]
[64 148]
[65 142]
[66 141]
[67 140]
[68 139]
[71 136]
[72 135]
[73 134]
[75 132]
[76 131]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[84 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
