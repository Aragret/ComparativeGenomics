%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[148.74021912 434.80462646]
[142.81800842 448.71212769]
[133.05830383 460.25509644]
[120.32897186 468.40710449]
[105.76186371 472.44329834]
[90.65229797 472.00479126]
[76.34379578 467.13055420]
[64.10865784 458.25402832]
[55.03483200 446.16445923]
[49.92915344 431.93692017]
[49.24561310 416.83642578]
[53.04499817 402.20578003]
[60.98945999 389.34588623]
[72.37258911 379.40023804]
[86.18220520 373.25323486]
[101.19036865 371.45138550]
[103.85616302 356.69018555]
[106.52195740 341.92895508]
[109.18775177 327.16775513]
[111.85354614 312.40652466]
[114.51934052 297.64532471]
[116.74446106 282.81127930]
[110.57437897 269.25476074]
[119.89674377 256.47180176]
[121.67921448 241.57806396]
[121.00942230 226.59303284]
[117.90531921 211.91772461]
[114.80120850 197.24243164]
[104.83717346 190.38351440]
[102.13098907 178.18267822]
[108.66586304 167.06251526]
[105.78058624 152.34262085]
[102.89531708 137.62272644]
[99.24723053 123.07310486]
[94.84622955 108.73326111]
[89.65863037 102.56387329]
[90.48816681 94.14706421]
[86.30116272 79.74327850]
[82.11415100 65.33950043]
[70.83229065 54.24759674]
[74.70943451 39.86646271]
[70.52242279 25.46267891]
[66.33541107 11.05889797]
[52.75075150 -1.37245345]
[57.59594727 -18.23931503]
[53.19495010 -32.57916260]
[50.78904343 -17.77336502]
[45.49095154 -3.74018121]
[37.51169968 8.96145248]
[27.16909027 19.82563591]
[14.87507248 28.41965103]
[1.11930943 34.40120316]
[-13.55031204 37.53205109]
[-28.54950714 37.68749237]
[-43.28086090 34.86133194]
[-57.15763474 29.16614151]
[-69.62711334 20.82875633]
[-80.19265747 10.18124771]
[-88.43342590 -2.35229421]
[-94.02120209 -16.27266502]
[-96.73342896 -31.02542114]
[-96.46208191 -46.02296829]
[-93.21795654 -60.66795349]
[-87.13027954 -74.37708282]
[-78.44150543 -86.60431671]
[-67.49771881 -96.86265564]
[-54.73479843 -104.74350739]
[-40.66109085 -109.93299103]
[-25.83714294 -112.22440338]
[-10.85338879 -111.52648163]
[3.69337535 -107.86701965]
[17.22375679 -101.39177704]
[29.19884682 -92.35865784]
[39.14168167 -81.12744904]
[46.65624237 -68.14548492]
[51.44229126 -53.93390656]
[53.44630432 -68.79943848]
[55.45031738 -83.66496277]
[57.45433426 -98.53049469]
[43.06776428 -104.88389587]
[31.06249046 -115.02075958]
[22.40415382 -128.11502075]
[17.78617287 -143.10317993]
[17.57420540 -158.77067566]
[21.77722359 -173.85029602]
[30.04743004 -187.12469482]
[41.70904541 -197.52462769]
[55.81349564 -204.21511841]
[71.21659851 -206.66246033]
[72.99906158 -221.55618286]
[74.78153229 -236.44989014]
[67.14379883 -253.20538330]
[78.20212555 -266.83184814]
[79.76264954 -281.75045776]
[81.32317352 -296.66906738]
[67.02962494 -301.41339111]
[54.09038162 -309.11987305]
[43.11062622 -319.42807007]
[34.60390472 -331.85586548]
[28.96808815 -345.82196045]
[26.46677971 -360.67312622]
[27.21696472 -375.71478271]
[31.18355942 -390.24337769]
[38.18103790 -403.57940674]
[47.88211441 -415.09909058]
[59.83305359 -424.26364136]
[73.47488403 -430.64443970]
[88.16956329 -433.94302368]
[103.22978210 -434.00509644]
[117.95114899 -430.82778931]
[131.64512634 -424.55969238]
[143.67121887 -415.49395752]
[153.46693420 -404.05465698]
[160.57412720 -390.77676392]
[164.66036987 -376.28137207]
[165.53454590 -361.24642944]
[163.15576172 -346.37512207]
[157.63528442 -332.36303711]
[149.23130798 -319.86553955]
[138.33691406 -309.46716309]
[125.46165466 -301.65426636]
[111.20771027 -296.79223633]
[96.24177551 -295.10852051]
[94.68125153 -280.18994141]
[93.12072754 -265.27133179]
[100.49185181 -255.68002319]
[99.31385040 -243.23831177]
[89.67524719 -234.66743469]
[87.89278412 -219.77371216]
[86.11031342 -204.87998962]
[99.39877319 -199.50747681]
[110.85087585 -190.86776733]
[119.68050385 -179.54606628]
[125.27951813 -166.31190491]
[127.25965118 -152.06690979]
[125.47940063 -137.78332520]
[120.05414581 -124.43769073]
[111.34866333 -112.94404602]
[99.95265198 -104.09135437]
[86.64073944 -98.48933411]
[72.31986237 -96.52647400]
[70.31584930 -81.66094971]
[68.31183624 -66.79541779]
[66.30782318 -51.92989349]
[67.53479767 -36.98015976]
[71.93579102 -22.64031219]
[82.47201538 -16.69770050]
[86.25591278 -4.78695488]
[80.73919678 6.87188625]
[84.92620850 21.27566910]
[89.11321259 35.67945099]
[100.09558868 45.74109650]
[96.51792908 61.15248489]
[100.70494080 75.55626678]
[104.89195251 89.96005249]
[109.18607330 104.33226013]
[113.58707428 118.67211151]
[120.53723907 105.37943268]
[134.35733032 99.54805756]
[148.72900391 103.84400177]
[157.08171082 116.30323029]
[155.59671021 131.22953796]
[144.95292664 141.79882812]
[130.01655579 143.17895508]
[117.61520386 134.73745728]
[120.50048065 149.45735168]
[123.38574982 164.17723083]
[135.80717468 177.77098083]
[129.47650146 194.13832092]
[132.58061218 208.81361389]
[135.68472290 223.48892212]
[139.48384094 208.97799683]
[146.86296082 195.91857910]
[157.33268738 185.17684937]
[170.19859314 177.46525574]
[184.60731506 173.29530334]
[199.60319519 172.94354248]
[214.19158936 176.43333435]
[227.40492249 183.53318787]
[238.36679077 193.77221680]
[246.35012817 206.47128296]
[250.82543945 220.78810120]
[251.49588013 235.77311707]
[248.31700134 250.43240356]
[241.49961853 263.79367065]
[231.49594116 274.97070312]
[218.96945190 283.22219849]
[204.75097656 288.00082397]
[189.78361511 288.98965454]
[175.06005859 286.12310791]
[161.55690002 279.59130859]
[150.16972351 269.82748413]
[141.65382385 257.47921753]
[136.57292175 243.36053467]
[134.79046631 258.25424194]
[140.83305359 272.87606812]
[131.63818359 284.59375000]
[133.48805237 288.52209473]
[133.94561768 292.44064331]
[133.18492126 295.91293335]
[131.50390625 298.60382080]
[129.28056335 300.31109619]
[126.61476898 315.07232666]
[123.94896698 329.83355713]
[121.28317261 344.59475708]
[118.61737823 359.35598755]
[115.95158386 374.11718750]
[129.38145447 381.05477905]
[140.16862488 391.64382935]
[147.35389709 404.94284058]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 207]
[17 206]
[18 205]
[19 204]
[20 203]
[21 202]
[22 197]
[24 195]
[25 194]
[26 171]
[27 170]
[28 169]
[31 167]
[32 166]
[33 165]
[34 157]
[35 156]
[37 155]
[38 154]
[39 153]
[41 151]
[42 150]
[43 149]
[45 146]
[46 145]
[76 144]
[77 143]
[78 142]
[79 141]
[89 130]
[90 129]
[91 128]
[93 125]
[94 124]
[95 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
