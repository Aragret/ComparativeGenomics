%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[157.52297974 682.44500732]
[155.74052429 667.55126953]
[153.95805359 652.65759277]
[152.17558289 637.76385498]
[150.39312744 622.87011719]
[148.61065674 607.97644043]
[135.86688232 606.60137939]
[123.68740082 602.58489990]
[112.61365509 596.10247803]
[103.13858795 587.43933105]
[95.68468475 576.97772217]
[90.58513641 565.18029785]
[88.06893158 552.56958008]
[88.25059509 539.70458984]
[91.12496948 527.15637207]
[96.56730652 515.48254395]
[104.33870697 505.20242310]
[114.09657288 496.77395630]
[125.40972900 490.57348633]
[137.77746582 486.87869263]
[136.88465881 471.90527344]
[135.99183655 456.93188477]
[135.09901428 441.95846558]
[134.09475708 426.99212646]
[132.97911072 412.03369141]
[131.86346436 397.07522583]
[128.23118591 390.63873291]
[130.84425354 381.88604736]
[129.95143127 366.91262817]
[128.61320496 351.97244263]
[126.83073425 337.07873535]
[125.04827118 322.18502808]
[123.26580048 307.29129028]
[114.07093048 295.57363892]
[120.11351776 280.95181274]
[118.33105469 266.05810547]
[101.36222839 259.69967651]
[89.91656494 245.54129028]
[87.23001862 227.44841003]
[94.13184357 210.41738892]
[108.79135895 199.19572449]
[106.34563446 184.39645386]
[103.89990234 169.59718323]
[101.45417786 154.79791260]
[85.97698212 152.99322510]
[71.63286591 146.90663147]
[59.58082962 137.02995300]
[50.79469681 124.16121674]
[45.98439026 109.34024048]
[45.53858566 93.76456451]
[49.49330902 78.69271851]
[57.52901077 65.34251404]
[68.99639893 54.79266739]
[82.96891022 47.89560318]
[80.30310822 33.13438797]
[77.63731384 18.37316895]
[74.97151947 3.61195254]
[70.99942780 -1.67331374]
[70.38500214 -7.32304859]
[72.45296478 -11.62799644]
[70.22785187 -26.46203995]
[68.00273132 -41.29608536]
[58.11321259 -49.57619095]
[56.56529617 -61.97731018]
[63.64758301 -71.78382874]
[61.64356995 -86.64935303]
[59.63955688 -101.51488495]
[55.39168930 -109.60150146]
[57.71807480 -116.61646271]
[55.93561172 -131.51017761]
[53.93159485 -146.37571716]
[51.70647812 -161.20974731]
[42.00764847 -173.70948792]
[47.77136612 -187.44371033]
[45.54624939 -202.27775574]
[43.32113266 -217.11180115]
[41.09601593 -231.94583130]
[38.87089920 -246.77987671]
[36.64578247 -261.61392212]
[34.42066574 -276.44796753]
[32.19554901 -291.28201294]
[21.31641769 -280.95513916]
[6.43923092 -282.87066650]
[-1.46910286 -295.61657715]
[3.42114520 -309.79705811]
[17.50506592 -314.95874023]
[30.39959717 -307.29806519]
[29.28394890 -322.25650024]
[28.16830063 -337.21496582]
[18.92201805 -346.20767212]
[18.30074120 -358.68957520]
[26.09278870 -367.94216919]
[25.19997215 -382.91558838]
[10.47564030 -386.28762817]
[-2.70156312 -393.67260742]
[-13.26342010 -404.47186279]
[-20.35372925 -417.80993652]
[-23.39771080 -432.60559082]
[-22.14860153 -447.65936279]
[-16.70766258 -461.75094604]
[-7.51596451 -473.73800659]
[4.68136024 -482.64877319]
[18.89553070 -487.76092529]
[33.97426605 -488.66003418]
[48.69520569 -485.27319336]
[61.86498260 -477.87496948]
[72.41598511 -467.06509399]
[79.49288940 -453.71990967]
[82.52201080 -438.92123413]
[81.25777435 -423.86871338]
[75.80268097 -409.78259277]
[66.59894562 -397.80477905]
[54.39267731 -388.90628052]
[40.17337799 -383.80841064]
[41.06619263 -368.83499146]
[51.50503922 -354.72836304]
[43.12675476 -338.33059692]
[44.24240112 -323.37216187]
[45.35805130 -308.41369629]
[47.02959061 -293.50714111]
[49.25470734 -278.67309570]
[51.47982407 -263.83905029]
[53.70494461 -249.00500488]
[55.93006134 -234.17095947]
[58.15517807 -219.33691406]
[60.38029480 -204.50286865]
[62.60541153 -189.66882324]
[72.14508820 -178.23011780]
[66.54051971 -163.43487549]
[68.76564026 -148.60083008]
[72.00566101 -145.09208679]
[73.07590485 -139.51072693]
[70.82933044 -133.29264832]
[72.61179352 -118.39893341]
[74.50508881 -103.51889801]
[76.50910187 -88.65336609]
[78.51311493 -73.78784180]
[89.97224426 -60.49666977]
[82.83677673 -43.52120209]
[85.06188965 -28.68715668]
[87.28701019 -13.85311413]
[89.73273468 0.94615704]
[92.39853668 15.70737457]
[95.06433105 30.46859169]
[97.73012543 45.22980881]
[111.99369049 46.51095963]
[125.43866730 51.44281387]
[137.14741516 59.68877029]
[146.32080078 70.68602753]
[152.33273315 83.68400574]
[154.77285767 97.79557037]
[153.47467041 112.05760193]
[148.52674866 125.49667358]
[140.26681519 137.19557190]
[129.25860596 146.35580444]
[116.25344849 152.35218811]
[118.69917297 167.15145874]
[121.14490509 181.95072937]
[123.59062958 196.75000000]
[135.28901672 199.50605774]
[145.34391785 206.02651978]
[152.59028625 215.52807617]
[156.19790649 226.88363647]
[155.76643372 238.75602722]
[151.36975098 249.75547791]
[143.54450989 258.60229492]
[133.22477722 264.27563477]
[135.00723267 279.16934204]
[144.32960510 291.95230103]
[138.15951538 305.50885010]
[139.94198608 320.40255737]
[141.72445679 335.29626465]
[143.50691223 350.19000244]
[146.23155212 353.57086182]
[147.60089111 357.27078247]
[147.68107605 360.82452393]
[146.68251038 363.83609009]
[144.92483521 366.01983643]
[145.81765747 380.99322510]
[146.82191467 395.95956421]
[147.93756104 410.91802979]
[149.05320740 425.87649536]
[152.81222534 434.20159912]
[150.07243347 441.06567383]
[150.96524048 456.03906250]
[151.85806274 471.01248169]
[152.75086975 485.98587036]
[169.69403076 489.55374146]
[184.95075989 497.71353149]
[197.30581665 509.80697632]
[205.77742004 524.86291504]
[209.69522095 541.67517090]
[208.75334167 558.89904785]
[203.03433228 575.15924072]
[193.00186157 589.15936279]
[179.46322632 599.78527832]
[163.50437927 606.19396973]
[165.28683472 621.08770752]
[167.06930542 635.98138428]
[168.85177612 650.87512207]
[170.63423157 665.76885986]
[172.41670227 680.66253662]
[186.33880615 687.30926514]
[194.43792725 700.43963623]
[194.12963867 715.86395264]
[185.51232910 728.66027832]
[171.33575439 734.74536133]
[156.12361145 732.17749023]
[144.73002625 721.77606201]
[140.79064941 706.86010742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 202]
[2 201]
[3 200]
[4 199]
[5 198]
[6 197]
[20 187]
[21 186]
[22 185]
[23 184]
[24 182]
[25 181]
[26 180]
[28 179]
[29 178]
[30 173]
[31 172]
[32 171]
[33 170]
[35 168]
[36 167]
[41 159]
[42 158]
[43 157]
[44 156]
[54 145]
[55 144]
[56 143]
[57 142]
[60 141]
[61 140]
[62 139]
[65 137]
[66 136]
[67 135]
[69 134]
[70 133]
[71 130]
[72 129]
[74 127]
[75 126]
[76 125]
[77 124]
[78 123]
[79 122]
[80 121]
[81 120]
[87 119]
[88 118]
[89 117]
[92 115]
[93 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
