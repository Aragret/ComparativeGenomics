%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[38.24174500 261.37521362]
[46.03866959 274.22467041]
[51.78264999 288.11376953]
[55.33904648 302.71694946]
[56.62448502 317.69186401]
[55.60884094 332.68746948]
[52.31591415 347.35229492]
[46.82290268 361.34255981]
[39.25856400 374.33029175]
[29.80022240 386.01104736]
[18.66959381 396.11102295]
[6.12759495 404.39346313]
[-7.53177166 410.66421509]
[-21.98830986 414.77624512]
[-36.90314102 416.63320923]
[-51.92663193 416.19155884]
[-66.70661926 413.46163940]
[-80.89663696 408.50747681]
[-94.16404724 401.44515991]
[-106.19784546 392.44027710]
[-116.71594238 381.70388794]
[-125.47177887 369.48767090]
[-132.26010132 356.07800293]
[-136.92178345 341.78921509]
[-139.34756470 326.95629883]
[-139.48054504 311.92687988]
[-137.31764221 297.05334473]
[-132.90954590 282.68432617]
[-126.35958862 269.15661621]
[-117.82130432 256.78738403]
[-107.49484253 245.86654663]
[-95.62228394 236.65011597]
[-82.48192596 229.35412598]
[-68.38180542 224.14961243]
[-53.65243912 221.15858459]
[-38.63911438 220.45114136]
[-23.69375801 222.04386902]
[-9.16671562 225.89944458]
[4.60148001 231.92749023]
[12.64265251 219.26496887]
[20.68382645 206.60243225]
[28.72499847 193.93991089]
[36.76617050 181.27738953]
[36.61849594 176.50378418]
[39.46800232 171.58674622]
[45.24000931 168.36254883]
[53.65462875 155.94505310]
[62.06924438 143.52755737]
[70.48386383 131.11006165]
[78.80580902 118.63026428]
[87.03461456 106.08885956]
[88.02384186 92.14206696]
[100.42398071 85.68233490]
[108.65279388 73.14093018]
[106.79956055 60.37659073]
[113.91154480 50.10023880]
[125.72763062 47.51048660]
[134.14224243 35.09299088]
[142.55686951 22.67549515]
[150.97148132 10.25799942]
[159.38610840 -2.15949583]
[167.80072021 -14.57699108]
[170.02416992 -23.43667793]
[176.43420410 -27.11544609]
[185.03277588 -39.40628433]
[193.63133240 -51.69712067]
[186.69226074 -61.18204880]
[182.69070435 -72.21154785]
[181.93618774 -83.90091705]
[184.47822571 -95.31574249]
[190.10322571 -105.54653931]
[198.35244751 -113.78128815]
[208.55932617 -119.36982727]
[219.90336609 -121.87519836]
[231.47610474 -121.10779572]
[242.35383606 -117.13967896]
[251.66871643 -128.89692688]
[260.98361206 -140.65419006]
[270.29849243 -152.41143799]
[279.61337280 -164.16868591]
[288.92825317 -175.92593384]
[298.24313354 -187.68318176]
[307.55801392 -199.44044495]
[296.46682739 -209.54817200]
[286.09942627 -220.39703369]
[276.50521851 -231.93530273]
[267.72988892 -244.10798645]
[259.81527710 -256.85708618]
[252.79911804 -270.12185669]
[246.71482849 -283.83908081]
[241.59141541 -297.94338989]
[237.45327759 -312.36755371]
[234.32014465 -327.04284668]
[232.20693970 -341.89932251]
[231.12374878 -356.86618042]
[231.07572937 -371.87213135]
[232.06309509 -386.84564209]
[234.08116150 -401.71533203]
[237.12030029 -416.41040039]
[241.16601562 -430.86074829]
[246.19906616 -444.99755859]
[252.19541931 -458.75341797]
[259.12652588 -472.06283569]
[266.95938110 -484.86233521]
[275.65658569 -497.09094238]
[285.17675781 -508.69039917]
[295.47451782 -519.60540771]
[306.50076294 -529.78393555]
[318.20300293 -539.17749023]
[330.52539062 -547.74127197]
[343.40927124 -555.43457031]
[356.79321289 -562.22064209]
[370.61346436 -568.06713867]
[384.80410767 -572.94622803]
[399.29757690 -576.83471680]
[414.02478027 -579.71392822]
[428.91555786 -581.57031250]
[443.89889526 -582.39489746]
[458.90344238 -582.18377686]
[473.85763550 -580.93798828]
[488.69027710 -578.66345215]
[503.33065796 -575.37103271]
[517.70898438 -571.07641602]
[531.75677490 -565.79998779]
[545.40710449 -559.56701660]
[558.59484863 -552.40710449]
[571.25714111 -544.35443115]
[583.33374023 -535.44732666]
[594.76708984 -525.72827148]
[605.50262451 -515.24359131]
[615.48925781 -504.04321289]
[624.67932129 -492.18054199]
[633.02911377 -479.71209717]
[640.49871826 -466.69729614]
[647.05267334 -453.19818115]
[652.65966797 -439.27905273]
[657.29302979 -425.00625610]
[660.93060303 -410.44778442]
[663.55517578 -395.67306519]
[665.15411377 -380.75247192]
[665.71984863 -365.75711060]
[665.24969482 -350.75845337]
[663.74584961 -335.82800293]
[661.21557617 -321.03683472]
[657.67077637 -306.45550537]
[653.12854004 -292.15347290]
[647.61035156 -278.19888306]
[641.14257812 -264.65826416]
[633.75598145 -251.59611511]
[625.48583984 -239.07470703]
[616.37158203 -227.15370178]
[606.45654297 -215.88992310]
[595.78802490 -205.33702087]
[584.41687012 -195.54530334]
[572.39727783 -186.56143188]
[559.78649902 -178.42820740]
[546.64471436 -171.18441772]
[533.03442383 -164.86454773]
[519.02050781 -159.49871826]
[504.66983032 -155.11253357]
[490.05075073 -151.72686768]
[475.23291016 -149.35784912]
[460.28692627 -148.01679993]
[445.28405762 -147.71006775]
[430.29574585 -148.43916321]
[415.39346313 -150.20056152]
[400.64819336 -152.98590088]
[386.13024902 -156.78190613]
[371.90878296 -161.57048035]
[358.05157471 -167.32881165]
[344.62463379 -174.02943420]
[331.69198608 -181.64044189]
[319.31527710 -190.12554932]
[310.00039673 -178.36830139]
[300.68551636 -166.61105347]
[291.37060547 -154.85380554]
[282.05572510 -143.09655762]
[272.74084473 -131.33929443]
[263.42596436 -119.58204651]
[254.11108398 -107.82479858]
[262.87136841 -91.64196014]
[263.67172241 -73.20652771]
[256.30624390 -56.23185349]
[242.21838379 -44.15660095]
[224.21827698 -39.44815445]
[205.92216492 -43.09855652]
[197.32360840 -30.80772018]
[188.72503662 -18.51688194]
[180.21821594 -6.16237259]
[171.80360413 6.25512266]
[163.38897705 18.67261887]
[154.97436523 31.09011459]
[146.55973816 43.50761032]
[138.14512634 55.92510605]
[137.82833862 73.47122955]
[121.19419098 81.36973572]
[112.96538544 93.91114044]
[111.97615814 107.85793304]
[99.57601929 114.31766510]
[91.34720612 126.85906982]
[89.25590515 135.75088501]
[82.90135956 139.52467346]
[74.48674011 151.94216919]
[66.07212067 164.35966492]
[57.65750504 176.77716064]
[49.42869568 189.31855774]
[41.38752365 201.98107910]
[33.34635162 214.64361572]
[25.30517769 227.30613708]
[17.26400566 239.96865845]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 210]
[40 209]
[41 208]
[42 207]
[43 206]
[46 205]
[47 204]
[48 203]
[49 202]
[50 200]
[51 199]
[53 197]
[54 196]
[57 194]
[58 193]
[59 192]
[60 191]
[61 190]
[62 189]
[64 188]
[65 187]
[66 186]
[76 180]
[77 179]
[78 178]
[79 177]
[80 176]
[81 175]
[82 174]
[83 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
