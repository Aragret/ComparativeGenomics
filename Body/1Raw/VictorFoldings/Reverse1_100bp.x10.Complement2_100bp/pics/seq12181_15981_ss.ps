%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[56.15724182 455.96057129]
[52.25574493 470.59124756]
[43.81299591 483.16101074]
[31.74480057 492.30636597]
[17.36022568 497.03527832]
[2.21959949 496.83480835]
[-12.03473282 491.72671509]
[-23.85656929 482.26504517]
[-31.96356392 469.47616577]
[-35.47633362 454.74731445]
[-34.01383591 439.67614746]
[-27.73471260 425.89752197]
[-17.32007790 414.90594482]
[-3.89963222 407.89379883]
[11.07087517 405.62167358]
[13.73667049 390.86044312]
[16.40246582 376.09921265]
[19.06826210 361.33801270]
[21.73405647 346.57678223]
[10.00960827 355.93292236]
[-4.96941519 356.72592163]
[-17.61620712 348.66003418]
[-23.21382713 334.74362183]
[-19.67450142 320.16717529]
[-8.31831169 310.36730957]
[6.61916590 308.99920654]
[19.56661987 316.57305908]
[25.69509888 330.26522827]
[30.09609795 315.92535400]
[24.70752144 305.09533691]
[28.25670815 293.11254883]
[39.36394501 286.55572510]
[43.97795486 272.28298950]
[40.53070831 257.79278564]
[52.13781357 247.04170227]
[56.75182343 232.76896667]
[53.30457687 218.27877808]
[64.91168213 207.52769470]
[69.52568817 193.25495911]
[73.60535431 178.82040405]
[77.14502716 164.24403381]
[80.68470001 149.66764832]
[84.22437286 135.09127808]
[87.65543365 120.48896027]
[90.97769165 105.86149597]
[91.20101929 90.86315918]
[88.31575012 76.14326477]
[83.59408569 68.32382202]
[85.49880981 61.18282700]
[82.83301544 46.42161179]
[80.16722107 31.66039276]
[67.94956970 17.88322067]
[74.52321625 1.61195493]
[71.63793945 -13.10793686]
[68.75267029 -27.82782745]
[65.86740112 -42.54771805]
[62.21931076 -57.09733963]
[57.81831360 -71.43718719]
[44.05007172 -83.66490173]
[48.64360809 -100.60203552]
[44.02959824 -114.87476349]
[39.41559219 -129.14750671]
[34.80158234 -143.42022705]
[30.92648125 -146.91748047]
[28.97545242 -151.13017273]
[28.89881706 -155.20559692]
[30.31566620 -158.43435669]
[26.34357071 -172.89888000]
[22.37147522 -187.36340332]
[18.39937782 -201.82792664]
[14.42728233 -216.29244995]
[10.45518589 -230.75697327]
[6.26751900 -216.35339355]
[-3.35421085 -204.84590149]
[-16.78857422 -198.17372131]
[-31.77164268 -197.46124268]
[-45.77851105 -202.82852173]
[-56.44876862 -213.37109375]
[-61.98429489 -227.31231689]
[-61.45225525 -242.30288696]
[-54.94230652 -255.81660461]
[-43.55149078 -265.57617188]
[-29.19936180 -269.93695068]
[-14.30450153 -268.16406250]
[-1.37695849 -260.55624390]
[7.40542412 -248.39407349]
[6.28977537 -263.35253906]
[5.17412663 -278.31097412]
[4.05847788 -293.26943970]
[-7.63394356 -303.56143188]
[-8.55228043 -318.74731445]
[1.33161402 -329.83084106]
[0.21596539 -344.78927612]
[-0.89968330 -359.74774170]
[-15.55257320 -363.56500244]
[-28.17068672 -371.93530273]
[-37.38530350 -383.95068359]
[-42.19689178 -398.30783081]
[-42.08352661 -413.44937134]
[-37.05750656 -427.73284912]
[-27.66401482 -439.60891724]
[-14.92198563 -447.78933716]
[-0.21358098 -451.38677979]
[14.86574173 -450.01098633]
[28.68029022 -443.81124878]
[39.73156357 -433.46002197]
[46.82080841 -420.08013916]
[49.17903137 -405.12292480]
[46.55043030 -390.21087646]
[39.22013474 -376.96151733]
[27.98328590 -366.81204224]
[14.05877018 -360.86337280]
[15.17441845 -345.90493774]
[16.29006767 -330.94647217]
[27.70874977 -321.45178223]
[29.05326462 -306.29766846]
[19.01693153 -294.38510132]
[20.13257980 -279.42663574]
[21.24822807 -264.46817017]
[22.36387825 -249.50973511]
[24.91971016 -234.72908020]
[28.89180565 -220.26455688]
[32.86390305 -205.80003357]
[36.83599854 -191.33551025]
[40.80809402 -176.87098694]
[44.78018951 -162.40646362]
[49.07431412 -148.03424072]
[53.68832397 -133.76150513]
[58.30233383 -119.48877716]
[62.91634369 -105.21604156]
[73.53987122 -99.43096161]
[77.50068665 -87.57787323]
[72.15815735 -75.83818817]
[76.55915833 -61.49833679]
[83.50932312 -74.79101562]
[97.32941437 -80.62239075]
[111.70108032 -76.32643890]
[120.05378723 -63.86721802]
[118.56878662 -48.94090652]
[107.92500305 -38.37161636]
[92.98863220 -36.99148560]
[80.58728790 -45.43299103]
[83.47256470 -30.71310043]
[86.35783386 -15.99320889]
[89.24311066 -1.27331769]
[99.10391235 5.73318195]
[101.62815094 17.97295380]
[94.92843628 28.99459839]
[97.59423828 43.75581360]
[100.26003265 58.51703262]
[103.03564453 73.25799561]
[105.92091370 87.97789001]
[109.84189606 73.49942017]
[116.64913940 60.13299179]
[126.05319214 48.44694519]
[137.65419006 38.93817139]
[150.95886230 32.01099396]
[165.40147400 27.95995903]
[180.36793518 26.95731735]
[195.22184753 29.04570389]
[209.33161926 34.13631821]
[222.09729004 42.01270294]
[232.97607422 52.33995438]
[241.50538635 64.67894745]
[247.32255554 78.50502777]
[250.18025208 93.23030090]
[249.95693970 108.22863770]
[246.66212463 122.86230469]
[240.43591309 136.50906372]
[231.54302979 148.58866882]
[220.36161804 158.58746338]
[207.36709595 166.08030701]
[193.11203003 170.74859619]
[178.20252991 172.39384460]
[163.27256775 170.94607544]
[148.95695496 166.46685791]
[135.86441040 159.14665222]
[124.55164337 149.29670715]
[115.49966431 137.33587646]
[109.09337616 123.77270508]
[105.60515594 109.18375397]
[102.28289795 123.81121826]
[103.43388367 132.87284851]
[98.80075073 138.63095093]
[95.26107788 153.20732117]
[91.72140503 167.78370667]
[88.18173218 182.36007690]
[102.15441895 176.90444946]
[115.20756531 184.29467773]
[117.71887207 199.08294678]
[107.83709717 210.36791992]
[92.84671783 209.83071899]
[83.79842377 197.86897278]
[79.18441772 212.14170837]
[82.30163574 227.65277100]
[71.02455902 237.38298035]
[66.41054535 251.65571594]
[69.52776337 267.16677856]
[58.25068665 276.89697266]
[53.63668060 291.16970825]
[57.90884018 309.08145142]
[44.43594360 320.32635498]
[40.03494644 334.66619873]
[36.49527359 349.24258423]
[33.82947922 364.00381470]
[31.16368294 378.76501465]
[28.49788857 393.52624512]
[25.83209229 408.28744507]
[39.06218338 415.65246582]
[49.18215561 426.91589355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 208]
[16 207]
[17 206]
[18 205]
[19 204]
[28 203]
[29 202]
[32 200]
[33 199]
[35 197]
[36 196]
[38 194]
[39 193]
[40 187]
[41 186]
[42 185]
[43 184]
[44 182]
[45 181]
[46 152]
[47 151]
[49 150]
[50 149]
[51 148]
[53 145]
[54 144]
[55 143]
[56 142]
[57 134]
[58 133]
[60 130]
[61 129]
[62 128]
[63 127]
[67 126]
[68 125]
[69 124]
[70 123]
[71 122]
[72 121]
[86 120]
[87 119]
[88 118]
[89 117]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
