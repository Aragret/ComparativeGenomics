%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[107.64186859 594.24047852]
[119.12500763 583.62579346]
[118.23219299 568.65234375]
[117.33937836 553.67895508]
[116.44656372 538.70556641]
[115.55374908 523.73217773]
[114.54948425 508.76580811]
[113.43383789 493.80734253]
[100.69010925 486.14346313]
[94.83354187 472.28109741]
[98.30318451 457.45495605]
[109.97251892 447.39846802]
[108.85686493 432.44000244]
[107.74121857 417.48156738]
[104.10893250 411.04507446]
[106.72200775 402.29238892]
[105.82919312 387.31896973]
[104.93637085 372.34558105]
[104.04355621 357.37216187]
[103.15074158 342.39877319]
[102.14648438 327.43240356]
[93.48400116 315.31585693]
[100.17346191 300.97845459]
[99.05781555 286.01998901]
[97.94216156 271.06155396]
[95.52338409 268.49603271]
[94.22705841 264.63150024]
[94.65020752 260.00827026]
[97.12594604 255.41285706]
[89.01313782 242.92160034]
[96.33612823 228.89717102]
[95.88951874 213.90382385]
[95.44291687 198.91047668]
[87.33010864 186.41921997]
[94.65309143 172.39479065]
[94.20648956 157.40144348]
[93.75988007 142.40809631]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[83.54862213 59.46817780]
[90.90355682 46.51618195]
[90.45694733 31.52283096]
[88.89642334 16.60422516]
[86.23062897 1.84300828]
[83.56483459 -12.91820908]
[80.89904022 -27.67942619]
[78.23324585 -42.44064331]
[75.56745148 -57.20186234]
[72.90164948 -71.96308136]
[70.23585510 -86.72429657]
[60.10419083 -94.70628357]
[58.18773270 -107.05581665]
[64.97490692 -117.06885529]
[62.52917862 -131.86811829]
[60.08345032 -146.66738892]
[57.63772583 -161.46665955]
[53.15097046 -169.42321777]
[55.26746368 -176.50434875]
[53.04234695 -191.33837891]
[43.34351730 -203.83811951]
[49.10723495 -217.57234192]
[46.88211823 -232.40638733]
[44.54663086 -247.22344971]
[42.10090256 -262.02270508]
[39.65517807 -276.82199097]
[37.20944977 -291.62127686]
[34.76372147 -306.42053223]
[31.33266068 -321.02285767]
[26.93166351 -335.36270142]
[22.53066444 -349.70254517]
[18.02303696 -364.00924683]
[13.40902710 -378.28198242]
[8.79501724 -392.55471802]
[4.18100834 -406.82742310]
[-0.43300101 -421.10015869]
[-15.34066772 -419.09985352]
[-30.36592102 -419.79376221]
[-45.02576447 -423.15957642]
[-58.84894180 -429.08914185]
[-71.39109802 -437.39178467]
[-82.24904633 -447.80065918]
[-91.07376099 -459.98117065]
[-97.58155823 -473.54168701]
[-101.56324005 -488.04638672]
[-102.89080811 -503.02896118]
[-101.52158356 -518.00775146]
[-97.49959564 -532.50134277]
[-90.95412445 -546.04376221]
[-82.09558105 -558.19964600]
[-71.20873260 -568.57830811]
[-58.64353943 -576.84606934]
[-44.80393219 -582.73712158]
[-30.13478851 -586.06219482]
[-15.10766220 -586.71435547]
[-0.20561498 -584.67254639]
[14.09231472 -580.00256348]
[27.32650948 -572.85443115]
[39.07154083 -563.45794678]
[48.94985962 -552.11517334]
[56.64391327 -539.19073486]
[61.90637207 -525.10003662]
[64.56806946 -510.29617310]
[64.54344940 -495.25491333]
[61.83329391 -480.45983887]
[56.52472687 -466.38650513]
[48.78839493 -453.48730469]
[38.87299347 -442.17694092]
[27.09725952 -432.81893921]
[13.83973217 -425.71417236]
[18.45374107 -411.44143677]
[23.06775093 -397.16870117]
[27.68176079 -382.89596558]
[32.29576874 -368.62326050]
[37.34434128 -363.22567749]
[36.87051010 -354.10354614]
[41.27151108 -339.76370239]
[45.67250824 -325.42385864]
[51.12962341 -339.39596558]
[63.21154404 -348.28567505]
[78.17456055 -349.33843994]
[91.38220215 -342.22802734]
[98.74195862 -329.15768433]
[97.97332001 -314.17739868]
[89.31445312 -301.92895508]
[75.44841003 -296.20770264]
[60.67172623 -298.78640747]
[49.56299210 -308.86627197]
[52.00872040 -294.06698608]
[54.45444870 -279.26773071]
[56.90017319 -264.46844482]
[59.34590149 -249.66917419]
[63.53793716 -243.58241272]
[61.71616364 -234.63150024]
[63.94128036 -219.79745483]
[73.48095703 -208.35874939]
[67.87638855 -193.56350708]
[70.10150909 -178.72946167]
[72.43699646 -163.91239929]
[74.88272095 -149.11312866]
[77.32845306 -134.31384277]
[79.77417755 -119.51457977]
[91.62396240 -106.57048798]
[84.99707794 -89.39009094]
[87.66287231 -74.62887573]
[90.32866669 -59.86765671]
[92.99446106 -45.10643768]
[95.66025543 -30.34522247]
[98.32604980 -15.58400440]
[100.99184418 -0.82278728]
[103.65764618 13.93842983]
[110.21366882 0.44700575]
[122.58140564 -8.04057503]
[137.52796936 -9.30567932]
[151.14634705 -3.01761222]
[159.87672424 9.17994118]
[161.43702698 24.09856987]
[155.41937256 37.83857727]
[143.39677429 46.80836487]
[128.51190186 48.66324615]
[114.65562439 42.91836166]
[105.45030212 31.07622337]
[105.89690399 46.06957245]
[114.00971222 58.56083679]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[108.75322723 141.96148682]
[109.19983673 156.95483398]
[109.64643860 171.94818115]
[117.79119873 185.51187134]
[110.43626404 198.46386719]
[110.88286591 213.45721436]
[111.32947540 228.45057678]
[119.47422791 242.01425171]
[112.11929321 254.96624756]
[112.90061951 269.94589233]
[114.01626587 284.90435791]
[115.13191223 299.86279297]
[123.87419128 313.04928589]
[117.10493469 326.31677246]
[120.86395264 334.64187622]
[118.12414551 341.50595093]
[119.01696777 356.47933960]
[119.90978241 371.45275879]
[120.80259705 386.42614746]
[121.69541168 401.39956665]
[122.69966888 416.36590576]
[123.81532288 431.32437134]
[124.93096924 446.28280640]
[137.96298218 454.49700928]
[143.59356689 468.64443970]
[139.85815430 483.22216797]
[128.39228821 492.69171143]
[129.50793457 507.65014648]
[133.26695251 515.97528076]
[130.52714539 522.83935547]
[131.41996765 537.81274414]
[132.31278992 552.78613281]
[133.20559692 567.75958252]
[134.09841919 582.73297119]
[146.76155090 591.90789795]
[150.51438904 607.08843994]
[143.58496094 621.10693359]
[129.24511719 627.34411621]
[114.26570892 622.85510254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 205]
[3 204]
[4 203]
[5 202]
[6 201]
[7 199]
[8 198]
[12 194]
[13 193]
[14 192]
[16 191]
[17 190]
[18 189]
[19 188]
[20 187]
[21 185]
[23 183]
[24 182]
[25 181]
[29 180]
[31 178]
[32 177]
[33 176]
[35 174]
[36 173]
[37 172]
[38 171]
[39 170]
[41 168]
[42 167]
[44 165]
[45 164]
[46 153]
[47 152]
[48 151]
[49 150]
[50 149]
[51 148]
[52 147]
[53 146]
[56 144]
[57 143]
[58 142]
[59 141]
[61 140]
[62 139]
[64 137]
[65 136]
[66 134]
[67 133]
[68 132]
[69 131]
[70 130]
[71 120]
[72 119]
[73 118]
[74 116]
[75 115]
[76 114]
[77 113]
[78 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
