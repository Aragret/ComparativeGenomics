%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[116.18460846 542.94750977]
[104.99855804 553.03808594]
[91.84733582 560.38610840]
[77.39061737 564.62298584]
[62.35353470 565.53613281]
[47.49034500 563.07983398]
[33.54658127 557.37731934]
[21.22165489 548.71447754]
[11.13378048 537.52600098]
[3.78895998 524.37298584]
[-0.44439256 509.91525269]
[-1.35393405 494.87796021]
[1.10595775 480.01538086]
[6.81189537 466.07299805]
[15.47767162 453.75015259]
[26.66861534 443.66500854]
[39.82339096 436.32336426]
[54.28216553 432.09350586]
[69.31968689 431.18762207]
[71.76541901 416.38833618]
[74.21114349 401.58908081]
[72.20750427 397.25381470]
[72.90597534 391.61386108]
[76.95632172 386.38830566]
[79.84159088 371.66842651]
[82.72686005 356.94851685]
[85.61213684 342.22863770]
[79.03849030 325.95736694]
[91.25614166 312.18020630]
[93.92193604 297.41897583]
[96.25742340 282.60189819]
[98.26143646 267.73638916]
[100.26544952 252.87084961]
[102.26946259 238.00532532]
[102.93924713 223.02029419]
[102.26946259 208.03524780]
[101.59967804 193.05021667]
[100.92989349 178.06517029]
[100.26010895 163.08013916]
[98.92187500 148.13995361]
[96.91786194 133.27441406]
[94.91384888 118.40888977]
[83.45516968 109.54069519]
[81.51935577 95.18106842]
[90.22062683 83.59512329]
[88.21660614 68.72959137]
[86.21259308 53.86406326]
[84.20858002 38.99853516]
[75.18407440 50.98011780]
[60.59812164 54.48011398]
[47.11922455 47.89837265]
[40.90975189 34.24398041]
[44.80858994 19.75954056]
[57.03324890 11.06714153]
[71.99477386 12.14083290]
[82.85378265 22.49139595]
[82.40718079 7.49804544]
[81.96057129 -7.49530458]
[69.31631470 -13.47740173]
[60.52498627 -24.27224922]
[57.25802994 -37.73721313]
[60.09759903 -51.23113632]
[68.43375397 -62.13238525]
[80.59439087 -68.34817505]
[80.37106323 -83.34651184]
[80.14773560 -98.34484863]
[79.92440796 -113.34318542]
[79.70108032 -128.34152222]
[65.92266083 -134.81582642]
[56.36056519 -146.58244324]
[52.86980438 -161.27375793]
[56.09064484 -175.96345520]
[65.33192444 -187.74938965]
[78.71854401 -194.32691956]
[78.49521637 -209.32525635]
[69.80058289 -218.85238647]
[69.92334747 -231.34913635]
[78.25230408 -240.12153625]
[70.51499939 -253.92170715]
[78.25230408 -266.64898682]
[78.25230408 -281.64898682]
[78.25230408 -296.64898682]
[78.25230408 -311.64898682]
[63.36825180 -313.69317627]
[48.90119934 -317.74511719]
[35.12066269 -323.72930908]
[22.28336143 -331.53427124]
[10.62844658 -341.01458740]
[0.37304515 -351.99368286]
[-8.29179287 -364.26699829]
[-15.20464802 -377.60589600]
[-20.23673630 -391.76190186]
[-23.29431343 -406.47125244]
[-24.32041740 -421.45993042]
[-23.29593468 -436.44873047]
[-20.23995018 -451.15841675]
[-15.20939445 -465.31494141]
[-8.29798412 -478.65460205]
[0.36552596 -490.92883301]
[10.61973953 -501.90905762]
[22.27362633 -511.39065552]
[35.11008453 -519.19702148]
[48.88997269 -525.18267822]
[63.35658646 -529.23620605]
[78.24041748 -531.28198242]
[93.26419067 -531.28198242]
[108.14801788 -529.23620605]
[122.61463165 -525.18267822]
[136.39451599 -519.19702148]
[149.23097229 -511.39065552]
[160.88487244 -501.90905762]
[171.13908386 -490.92883301]
[179.80259705 -478.65460205]
[186.71400452 -465.31494141]
[191.74455261 -451.15841675]
[194.80053711 -436.44873047]
[195.82502747 -421.45993042]
[194.79891968 -406.47125244]
[191.74134827 -391.76190186]
[186.70925903 -377.60589600]
[179.79640198 -364.26699829]
[171.13156128 -351.99368286]
[160.87615967 -341.01458740]
[149.22125244 -331.53427124]
[136.38394165 -323.72930908]
[122.60340881 -317.74511719]
[108.13635254 -313.69317627]
[93.25230408 -311.64898682]
[93.25230408 -296.64898682]
[93.25230408 -281.64898682]
[93.25230408 -266.64898682]
[100.98960114 -253.92170715]
[93.25230408 -240.12153625]
[102.83300018 -225.41856384]
[93.49355316 -209.54858398]
[93.71688080 -194.55024719]
[107.29340363 -188.37420654]
[116.88150024 -176.86863708]
[120.53827667 -162.28135681]
[117.48648071 -147.49261475]
[108.27896118 -135.44651794]
[94.69941711 -128.56484985]
[94.92274475 -113.56651306]
[95.14607239 -98.56817627]
[95.36940002 -83.56983948]
[95.59272766 -68.57150269]
[109.89372253 -61.04860687]
[118.49902344 -47.26076508]
[118.97959137 -30.92105865]
[111.10960388 -16.48641968]
[96.95392609 -7.94191074]
[97.40052795 7.05143929]
[97.84713745 22.04479027]
[99.07411194 36.99452209]
[101.07812500 51.86005020]
[103.08213806 66.72557831]
[105.08615112 81.59111023]
[116.54483032 90.45930481]
[118.48064423 104.81893158]
[109.77937317 116.40487671]
[111.78339386 131.27040100]
[113.78740692 146.13594055]
[123.71945953 134.89518738]
[138.68174744 133.83221436]
[150.10319519 143.55593872]
[151.44107056 158.49615479]
[141.92898560 170.09443665]
[127.01588440 171.70677185]
[115.24514771 162.41035461]
[115.91493225 177.39538574]
[116.58471680 192.38043213]
[117.25450134 207.36546326]
[117.92428589 222.35050964]
[125.48234558 209.39381409]
[137.86497498 200.92796326]
[152.68125916 198.58757019]
[167.07043457 202.82452393]
[178.25416565 212.82073975]
[184.07302856 226.64610291]
[183.40353394 241.63114929]
[176.37490845 254.88250732]
[164.34429932 263.84155273]
[149.63461304 266.77841187]
[135.08607483 263.12603760]
[123.50775909 253.58966064]
[117.13499451 240.00933838]
[115.13098145 254.87486267]
[113.12696838 269.74038696]
[111.12295532 284.60592651]
[113.10717773 289.43395996]
[113.04705048 294.07614136]
[111.35571289 297.78482056]
[108.68315125 300.08477783]
[106.01735687 314.84600830]
[112.71707153 325.86764526]
[110.19283295 338.10742188]
[100.33202362 345.11392212]
[97.44675446 359.83380127]
[94.56148529 374.55368042]
[91.67620850 389.27359009]
[89.01041412 404.03479004]
[86.56468964 418.83407593]
[84.11895752 433.63333130]
[98.06548309 439.32913208]
[110.39460754 447.98596191]
[120.48789978 459.16955566]
[127.83909607 472.31900024]
[132.07945251 486.77468872]
[132.99627686 501.81155396]
[130.54359436 516.67535400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 203]
[20 202]
[21 201]
[24 200]
[25 199]
[26 198]
[27 197]
[29 194]
[30 193]
[31 189]
[32 188]
[33 187]
[34 186]
[35 173]
[36 172]
[37 171]
[38 170]
[39 169]
[40 162]
[41 161]
[42 160]
[45 157]
[46 156]
[47 155]
[48 154]
[56 153]
[57 152]
[58 151]
[64 146]
[65 145]
[66 144]
[67 143]
[68 142]
[74 136]
[75 135]
[78 133]
[80 131]
[81 130]
[82 129]
[83 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
