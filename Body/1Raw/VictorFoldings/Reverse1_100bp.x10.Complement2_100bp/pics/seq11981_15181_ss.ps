%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[-51.78520966 567.72381592]
[-53.12842560 582.71020508]
[-57.28382111 597.17150879]
[-64.10118103 610.58489990]
[-73.33406830 622.46557617]
[-84.64871216 632.38403320]
[-97.63609314 639.98168945]
[-111.82673645 644.98388672]
[-126.70764923 647.20989990]
[-141.74090576 646.57910156]
[-156.38304138 643.11444092]
[-170.10478210 636.94104004]
[-182.41007996 628.28216553]
[-192.85409546 617.45080566]
[-201.05931091 604.83843994]
[-206.72909546 590.90106201]
[-209.65847778 576.14251709]
[-209.74159241 561.09625244]
[-206.97541809 546.30627441]
[-201.45994568 532.30712891]
[-193.39456177 519.60491943]
[-183.07083130 508.65881348]
[-170.86193848 499.86450195]
[-157.20924377 493.53994751]
[-142.60626221 489.91372681]
[-127.58090210 489.11691284]
[-112.67630005 491.17834473]
[-107.85030365 476.97589111]
[-103.02430725 462.77343750]
[-98.19831085 448.57098389]
[-93.37231445 434.36853027]
[-88.54631805 420.16607666]
[-83.72031403 405.96362305]
[-78.89431763 391.76116943]
[-74.06832123 377.55871582]
[-84.71612549 388.12396240]
[-97.63096619 395.75329590]
[-112.02307892 399.98022461]
[-127.01239777 400.54626465]
[-141.68231201 397.41677856]
[-155.13574219 390.78314209]
[-166.55003357 381.05102539]
[-175.22717285 368.81552124]
[-180.63655090 354.82485962]
[-182.44738770 339.93457031]
[-180.54895020 325.05520630]
[-175.05732727 311.09661865]
[-166.30833435 298.91238403]
[-154.83699036 289.24761963]
[-141.34474182 282.69326782]
[-126.65666199 279.65017700]
[-111.67093658 280.30441284]
[-97.30394745 284.61596680]
[-84.43423462 292.32119751]
[-73.84878540 302.94891357]
[-66.19490814 315.84921265]
[-61.94064331 330.23327637]
[-61.34613419 345.22149658]
[-64.44775391 359.89733887]
[-55.13286972 348.14010620]
[-45.81798553 336.38284302]
[-36.50310135 324.62561035]
[-27.18822098 312.86834717]
[-17.87333679 301.11108398]
[-9.36651039 288.75659180]
[-1.70591295 275.86026001]
[5.95468426 262.96392822]
[13.61528206 250.06761169]
[21.27587891 237.17127991]
[21.98925781 229.81513977]
[29.14775467 224.14117432]
[36.99951172 211.36033630]
[44.85126495 198.57949829]
[52.70302200 185.79866028]
[59.68147278 172.52081299]
[65.75531006 158.80554199]
[71.82913971 145.09027100]
[77.90297699 131.37500000]
[83.97680664 117.65973663]
[90.05064392 103.94447327]
[94.34476471 89.57225800]
[96.79049683 74.77298737]
[99.23622131 59.97372055]
[101.57170868 45.15665054]
[103.79682922 30.32260704]
[98.19226074 15.52735615]
[107.73194122 4.08865595]
[108.84758759 -10.86979771]
[108.84758759 -25.86979675]
[108.84758759 -40.86979675]
[108.84758759 -55.86979675]
[108.84758759 -70.86979675]
[108.84758759 -85.86979675]
[101.11028290 -99.66996765]
[108.84758759 -112.39723969]
[108.84758759 -127.39723969]
[108.84758759 -142.39724731]
[108.84758759 -157.39724731]
[94.79039764 -163.18203735]
[84.02052307 -173.90950012]
[78.18029785 -187.94374084]
[78.16030121 -203.14466858]
[83.96358490 -217.19422913]
[94.70520020 -227.94998169]
[108.74711609 -233.77174377]
[123.94805145 -233.77174377]
[137.98997498 -227.94998169]
[148.73158264 -217.19422913]
[154.53486633 -203.14466858]
[154.51487732 -187.94374084]
[148.67465210 -173.90950012]
[137.90476990 -163.18203735]
[123.84758759 -157.39724731]
[123.84758759 -142.39724731]
[123.84758759 -127.39723969]
[123.84758759 -112.39723969]
[131.58488464 -99.66996765]
[123.84758759 -85.86979675]
[123.84758759 -70.86979675]
[123.84758759 -55.86979675]
[123.84758759 -40.86979675]
[123.84758759 -25.86979675]
[123.84758759 -10.86979771]
[132.69694519 -22.98131943]
[146.37620544 -29.13579559]
[161.30966187 -27.72446442]
[173.59373474 -19.11624146]
[180.01741028 -5.56129742]
[178.90153503 9.39713955]
[170.53779602 21.84896851]
[157.11248779 28.53931236]
[142.13490295 27.71932983]
[129.52018738 19.60336304]
[122.56597900 6.31377316]
[128.32969666 20.04799461]
[118.63086700 32.54772568]
[116.40575409 47.38176727]
[118.52224731 54.46288681]
[114.03549194 62.41944504]
[111.58976746 77.21871948]
[109.14403534 92.01799011]
[118.32122803 80.15294647]
[130.81744385 71.85567474]
[145.31390381 68.00179291]
[160.28079224 68.99800873]
[174.13859558 74.73919678]
[185.42486572 84.61947632]
[192.94856262 97.59615326]
[195.91566467 112.29976654]
[194.01306152 127.17861176]
[187.44152832 140.66249084]
[176.89457703 151.32841492]
[163.48526001 158.05078125]
[148.62869263 160.12017822]
[133.89271545 157.31819153]
[120.83246613 149.94053650]
[110.82621002 138.76579285]
[104.92993927 124.97326660]
[103.76590729 110.01831055]
[97.69207764 123.73357391]
[91.61824036 137.44883728]
[85.54441071 151.16410828]
[79.47057343 164.87937927]
[73.39674377 178.59463501]
[86.67546844 171.61785889]
[101.62709045 172.82154846]
[113.61869812 181.83273315]
[118.93454742 195.85920715]
[115.92747498 210.55468750]
[105.52925110 221.36566162]
[90.96187592 224.94219971]
[76.73921204 220.17607117]
[67.26830292 208.54414368]
[65.48386383 193.65040588]
[57.63210678 206.43124390]
[49.78035355 219.21209717]
[41.92859650 231.99293518]
[34.17220688 244.83187866]
[26.51160812 257.72821045]
[18.85101128 270.62454224]
[11.19041348 283.52084351]
[3.52981639 296.41717529]
[17.54351234 291.06774902]
[32.24616241 294.03964233]
[43.08199310 304.41195679]
[46.69339752 318.97073364]
[41.96134949 333.20474243]
[30.35212326 342.70349121]
[15.46296310 344.52362061]
[1.90743768 338.10119629]
[-6.11412525 325.42623901]
[-6.11608601 310.42596436]
[-15.43096924 322.18322754]
[-24.74585152 333.94049072]
[-34.06073380 345.69772339]
[-43.37561798 357.45498657]
[-52.69050217 369.21224976]
[-59.86586761 382.38470459]
[-64.69186401 396.58715820]
[-69.51786041 410.78961182]
[-74.34385681 424.99206543]
[-79.16986084 439.19451904]
[-83.99585724 453.39700317]
[-88.82185364 467.59945679]
[-93.64785004 481.80191040]
[-98.47384644 496.00436401]
[-85.39893341 503.45034790]
[-73.96963501 513.23645020]
[-64.59912109 525.00891113]
[-57.62612915 538.34210205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 206]
[28 205]
[29 204]
[30 203]
[31 202]
[32 201]
[33 200]
[34 199]
[35 198]
[59 197]
[60 196]
[61 195]
[62 194]
[63 193]
[64 192]
[65 182]
[66 181]
[67 180]
[68 179]
[69 178]
[71 177]
[72 176]
[73 175]
[74 174]
[75 164]
[76 163]
[77 162]
[78 161]
[79 160]
[80 159]
[81 141]
[82 140]
[83 139]
[84 137]
[85 136]
[87 134]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
[93 118]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
