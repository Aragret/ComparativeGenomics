%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[139.49855042 606.41333008]
[130.30732727 594.50982666]
[123.32292938 581.19110107]
[118.75759888 566.86181641]
[116.75006866 551.95739746]
[117.36134338 536.93084717]
[120.57285309 522.23876953]
[126.28700256 508.32760620]
[134.33013916 495.62017822]
[144.45785522 484.50259399]
[156.36236572 475.31274414]
[169.68191528 468.32983398]
[184.01173401 463.76614380]
[182.00772095 448.90060425]
[180.00370789 434.03506470]
[177.99969482 419.16955566]
[175.66419983 404.35247803]
[172.99841309 389.59124756]
[170.33261108 374.83004761]
[160.45658875 363.68045044]
[165.61816406 348.72488403]
[162.95236206 333.96365356]
[159.08805847 319.46997070]
[154.05114746 305.34094238]
[149.01423645 291.21191406]
[143.97731018 277.08288574]
[132.41552734 267.69274902]
[135.06954956 252.09574890]
[130.03262329 237.96672058]
[124.99571228 223.83769226]
[117.60482025 236.89045715]
[103.18638611 241.02671814]
[89.99993896 233.87705994]
[85.59928894 219.53710938]
[92.50531769 206.22143555]
[106.76194000 201.55789185]
[120.20168304 208.21722412]
[116.44538116 193.69517517]
[112.68908691 179.17311096]
[108.93278503 164.65104675]
[105.17648315 150.12899780]
[94.49855042 139.74482727]
[98.53347778 124.44678497]
[94.77717590 109.92472076]
[87.24040222 122.89379883]
[73.17370605 128.10226440]
[59.00819397 123.16886902]
[51.22015381 110.34910583]
[53.37016678 95.50399017]
[64.47528076 85.42050934]
[79.45838165 84.70870209]
[91.47042084 93.69553375]
[89.24530029 78.86149597]
[86.90981293 64.04442596]
[84.46408844 49.24515533]
[82.01836395 34.44588470]
[79.57263184 19.64661217]
[75.08587646 11.69005299]
[77.20236969 4.60893393]
[74.97725677 -10.22511005]
[72.75213623 -25.05915260]
[70.52702332 -39.89319611]
[60.82818985 -52.39292908]
[66.59191132 -66.12715149]
[64.36679077 -80.96118927]
[59.99899673 -88.98367310]
[62.22068405 -96.03249359]
[60.21667099 -110.89801788]
[58.21265793 -125.76354980]
[48.70100403 -138.40629578]
[54.66856766 -152.05317688]
[52.66455460 -166.91871643]
[43.15290070 -179.56146240]
[49.12046051 -193.20834351]
[47.11644745 -208.07386780]
[45.11243439 -222.93939209]
[30.09401512 -222.77601624]
[15.16935539 -224.45951843]
[0.56471020 -227.96435547]
[-13.49851894 -233.23742676]
[-26.80713654 -240.19877625]
[-39.15938568 -248.74285889]
[-50.36801147 -258.74017334]
[-60.26309586 -270.03915405]
[-68.69462585 -282.46850586]
[-75.53479004 -295.83981323]
[-80.67988586 -309.95037842]
[-84.05191040 -324.58624268]
[-85.59976196 -339.52560425]
[-85.29996490 -354.54190063]
[-83.15705872 -369.40756226]
[-79.20353699 -383.89718628]
[-73.49933624 -397.79113770]
[-66.13092041 -410.87875366]
[-57.21000290 -422.96166992]
[-46.87181854 -433.85668945]
[-35.27309418 -443.39868164]
[-22.58965683 -451.44293213]
[-9.01379013 -457.86752319]
[5.24870110 -462.57507324]
[19.98160172 -465.49420166]
[34.96156311 -466.58062744]
[49.96149445 -465.81796265]
[64.75399780 -463.21768188]
[79.11482239 -458.81924438]
[92.82627106 -452.68933105]
[105.68047333 -444.92083740]
[117.48255920 -435.63159180]
[128.05361938 -424.96237183]
[137.23339844 -413.07492065]
[144.88273621 -400.14947510]
[150.88565063 -386.38195801]
[155.15116882 -371.98107910]
[157.61460876 -357.16519165]
[158.23863220 -342.15884399]
[157.01377869 -327.18957520]
[153.95860291 -312.48428345]
[149.11943054 -298.26589966]
[142.56962585 -284.75000000]
[134.40849304 -272.14144897]
[124.75972748 -260.63140869]
[113.76961517 -250.39437866]
[101.60475922 -241.58551025]
[88.44958496 -234.33837891]
[74.50350952 -228.76283264]
[59.97796249 -224.94340515]
[61.98197556 -210.07788086]
[63.98598862 -195.21235657]
[73.35430145 -183.63288879]
[67.53008270 -168.92272949]
[69.53409576 -154.05718994]
[78.90240479 -142.47773743]
[73.07818604 -127.76756287]
[75.08219910 -112.90203857]
[77.08621216 -98.03650665]
[79.20083618 -83.18630981]
[81.42595673 -68.35226440]
[90.96562958 -56.91356659]
[85.36106873 -42.11831284]
[87.58618164 -27.28427124]
[89.81130219 -12.45022678]
[92.03641510 2.38381696]
[94.37190247 17.20088387]
[96.81763458 32.00015640]
[99.26335907 46.79942703]
[101.70908356 61.59869766]
[105.90112305 67.68545532]
[104.07934570 76.63637543]
[106.30446625 91.47042084]
[109.29924011 106.16842651]
[113.05554199 120.69048309]
[124.00214386 132.11337280]
[119.69853973 146.37269592]
[123.45484161 160.89474487]
[127.21114349 175.41680908]
[130.96743774 189.93887329]
[134.72373962 204.46092224]
[139.12474060 218.80078125]
[144.16165161 232.92980957]
[149.19857788 247.05883789]
[161.12063599 257.45956421]
[158.10633850 272.04595947]
[163.14326477 286.17498779]
[168.18017578 300.30401611]
[173.21708679 314.43304443]
[177.02406311 299.92419434]
[187.06921387 288.78442383]
[201.10844421 283.50234985]
[216.00534058 285.25805664]
[228.43190002 293.65927124]
[235.61201477 306.82916260]
[235.94160461 321.82553101]
[229.34704590 335.29818726]
[217.30158997 344.23724365]
[202.49621582 346.64572144]
[188.23847961 341.98559570]
[177.71357727 331.29788208]
[180.37937927 346.05908203]
[190.44607544 358.26449585]
[185.09382629 372.16424561]
[187.75962830 386.92547607]
[190.42541504 401.68667603]
[193.79855347 405.67028809]
[195.16926575 410.10586548]
[194.70072937 414.15499878]
[192.86521912 417.16552734]
[194.86923218 432.03106689]
[196.87324524 446.89657593]
[198.87725830 461.76211548]
[213.90402222 462.36828613]
[228.59719849 465.57479858]
[242.51028442 471.28421021]
[255.22045898 479.32302856]
[266.34149170 489.44696045]
[275.53540039 501.34832764]
[282.52282715 514.66552734]
[287.09140015 528.99377441]
[289.10232544 543.89770508]
[288.49444580 558.92437744]
[285.28625488 573.61724854]
[279.57528687 587.52966309]
[271.53500366 600.23889160]
[261.40982056 611.35876465]
[249.50740051 620.55133057]
[236.18943787 627.53729248]
[221.86065674 632.10424805]
[206.95649719 634.11346436]
[191.92985535 633.50390625]
[177.23741150 630.29400635]
[163.32563782 624.58148193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 189]
[14 188]
[15 187]
[16 186]
[17 182]
[18 181]
[19 180]
[21 178]
[22 177]
[23 165]
[24 164]
[25 163]
[26 162]
[28 160]
[29 159]
[30 158]
[37 157]
[38 156]
[39 155]
[40 154]
[41 153]
[43 151]
[44 150]
[52 149]
[53 148]
[54 146]
[55 145]
[56 144]
[57 143]
[59 142]
[60 141]
[61 140]
[62 139]
[64 137]
[65 136]
[67 135]
[68 134]
[69 133]
[71 131]
[72 130]
[74 128]
[75 127]
[76 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
