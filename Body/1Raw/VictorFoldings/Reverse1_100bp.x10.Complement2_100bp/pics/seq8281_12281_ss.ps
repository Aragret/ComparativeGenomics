%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[50.03350067 481.40835571]
[40.91877365 493.60839844]
[27.62667274 501.04077148]
[12.46013260 502.41772461]
[-1.95314932 497.50067139]
[-13.11598587 487.14157104]
[-19.09434891 473.13519287]
[-18.85244942 457.90820312]
[-12.43219948 444.09875488]
[-0.94594532 434.09948730]
[13.61625004 429.64276123]
[15.39871597 414.74902344]
[17.18118095 399.85531616]
[11.01109982 386.29879761]
[20.33346558 373.51583862]
[13.10595798 363.81585693]
[14.46906853 351.39306641]
[24.23421478 342.96664429]
[26.23822784 328.10110474]
[28.24224091 313.23556519]
[19.03557205 301.58340454]
[20.85616112 286.47909546]
[33.14044189 276.90130615]
[35.14445877 262.03576660]
[28.06216812 252.22926331]
[29.61008453 239.82815552]
[39.49960327 231.54803467]
[41.72472382 216.71398926]
[39.60822678 209.63287354]
[44.09498215 201.67631531]
[46.54071045 186.87704468]
[48.98643494 172.07777405]
[40.24884415 184.27017212]
[29.19627953 194.41120911]
[16.29870415 202.06971741]
[2.10453105 206.92001343]
[-12.78269672 208.75588989]
[-27.72996902 207.49926758]
[-42.10171509 203.20359802]
[-55.28684616 196.05151367]
[-66.72472382 186.34713745]
[-75.92900085 174.50308228]
[-82.50830841 161.02301025]
[-86.18288422 146.48005676]
[-86.79650116 131.49261475]
[-84.32304382 116.69794464]
[-78.86770630 102.72514343]
[-70.66243744 90.16832733]
[-60.05614090 79.56142426]
[-47.49979401 71.35543823]
[-33.52730179 65.89929962]
[-18.73278046 63.42500305]
[-3.74530172 64.03775787]
[10.79786015 67.71150970]
[24.27832222 74.29004669]
[36.12288666 83.49364471]
[45.82791901 94.93096924]
[52.98075867 108.11569214]
[57.27725601 122.48719788]
[58.53472900 137.43440247]
[56.69966507 152.32189941]
[64.92847443 139.78050232]
[73.15727997 127.23909760]
[81.38608551 114.69770050]
[89.61489868 102.15629578]
[97.17927551 89.20330048]
[104.05868530 75.87387085]
[110.93810272 62.54444122]
[117.81751251 49.21501160]
[113.24225616 34.32525635]
[120.40884399 20.90531921]
[134.63214111 16.63527298]
[141.51155090 3.30584407]
[148.39097595 -10.02358532]
[155.27038574 -23.35301399]
[162.14979553 -36.68244171]
[161.90200806 -41.89643478]
[163.51745605 -46.24885941]
[166.35595703 -49.17427444]
[169.64564514 -50.44324875]
[177.11337280 -63.45220184]
[184.58111572 -76.46115112]
[192.04885864 -89.47010803]
[198.52835083 -102.99845123]
[203.98371887 -116.97124481]
[209.43907166 -130.94404602]
[213.19537354 -145.46611023]
[215.19938660 -160.33163452]
[217.20339966 -175.19715881]
[219.20741272 -190.06268311]
[217.25257874 -198.98548889]
[221.35351562 -205.13398743]
[223.57864380 -219.96803284]
[225.80375671 -234.80207825]
[227.91838074 -249.65228271]
[229.92239380 -264.51779175]
[231.37181091 -279.44760132]
[232.26463318 -294.42102051]
[218.17419434 -299.92691040]
[206.47607422 -309.51904297]
[198.31636047 -322.25775146]
[194.49444580 -336.89495850]
[195.38476562 -351.99670410]
[200.90008545 -366.08343506]
[210.50007629 -377.77511597]
[223.24423218 -385.92630005]
[237.88400269 -389.73840332]
[252.98513794 -388.83798218]
[267.06817627 -383.31323242]
[278.75341797 -373.70538330]
[286.89605713 -360.95578003]
[290.69836426 -346.31344604]
[289.78781128 -331.21292114]
[284.25363159 -317.13357544]
[274.63796997 -305.45477295]
[261.88290405 -297.32067871]
[247.23803711 -293.52819824]
[246.34521484 -278.55480957]
[259.12591553 -286.40679932]
[273.28463745 -281.45401001]
[278.38415527 -267.34747314]
[270.66525269 -254.48594666]
[255.81802368 -252.35050964]
[244.78791809 -262.51379395]
[242.78390503 -247.64826965]
[245.00559998 -240.59944153]
[240.63780212 -232.57696533]
[238.41268921 -217.74291992]
[236.18756104 -202.90887451]
[234.07293701 -188.05867004]
[232.06892395 -173.19314575]
[230.06491089 -158.32762146]
[228.06089783 -143.46209717]
[237.00762939 -155.50186157]
[249.49444580 -163.81327820]
[264.05438232 -167.41992188]
[278.97698975 -165.89808655]
[292.50915527 -159.42655945]
[303.06112671 -148.76560974]
[309.39328003 -135.16767883]
[310.76171875 -120.23022461]
[307.00567627 -105.70809937]
[298.56640625 -93.30734253]
[286.43536377 -84.48477936]
[272.03765869 -80.27687073]
[257.06475830 -81.17797852]
[243.27563477 -87.08221436]
[232.29023743 -97.29597473]
[225.39910889 -110.61934662]
[223.41186523 -125.48868561]
[217.95651245 -111.51589203]
[212.50115967 -97.54309082]
[225.14935303 -105.60678864]
[240.13018799 -106.36479187]
[253.52770996 -99.61894989]
[261.83984375 -87.13262177]
[262.89379883 -72.16969299]
[256.41409302 -58.64144516]
[244.09451294 -50.08412552]
[229.15534973 -48.73460007]
[215.50166321 -54.94562912]
[206.70249939 -67.09366608]
[205.05781555 -82.00236511]
[197.59007263 -68.99340820]
[190.12232971 -55.98445892]
[182.65458679 -42.97550583]
[175.47921753 -29.80303192]
[168.59980774 -16.47360229]
[161.72039795 -3.14417267]
[154.84098816 10.18525696]
[147.96157837 23.51468658]
[152.72093201 37.58181381]
[145.93411255 51.19775009]
[131.14694214 56.09442139]
[124.26753235 69.42385101]
[117.38811493 82.75328064]
[110.50870514 96.08271027]
[124.77157593 91.43831635]
[138.72947693 96.93167877]
[146.00103760 110.05129242]
[143.26181030 124.79905701]
[131.76411438 134.43249512]
[116.76455688 134.54731750]
[105.12072754 125.09104156]
[102.15629578 110.38510132]
[93.92749023 122.92650604]
[85.69867706 135.46791077]
[77.46987152 148.00930786]
[69.24106598 160.55070496]
[63.78570938 174.52349854]
[61.33998108 189.32276917]
[58.89425278 204.12203979]
[56.55876541 218.93911743]
[54.33364868 233.77316284]
[61.46912003 250.74862671]
[50.00998688 264.03979492]
[48.00597000 278.90533447]
[57.31546021 291.39416504]
[55.07134247 306.44137573]
[43.10776901 315.23959351]
[41.10375595 330.10510254]
[39.09974289 344.97064209]
[46.48716354 361.83798218]
[35.22718430 375.29830933]
[41.26977158 389.92013550]
[32.07489777 401.63778687]
[30.29243279 416.53149414]
[28.50996780 431.42523193]
[41.60921478 439.19244385]
[50.41146469 451.61984253]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 208]
[12 207]
[13 206]
[15 204]
[18 202]
[19 201]
[20 200]
[23 197]
[24 196]
[27 194]
[28 193]
[30 192]
[31 191]
[32 190]
[61 189]
[62 188]
[63 187]
[64 186]
[65 185]
[66 177]
[67 176]
[68 175]
[69 174]
[72 171]
[73 170]
[74 169]
[75 168]
[76 167]
[80 166]
[81 165]
[82 164]
[83 163]
[84 152]
[85 151]
[86 150]
[87 133]
[88 132]
[89 131]
[90 130]
[92 129]
[93 128]
[94 127]
[95 125]
[96 124]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
