%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[79.81729126 605.00415039]
[67.06844330 613.00738525]
[52.96939468 618.28015137]
[38.09751129 620.60650635]
[23.06177902 619.89117432]
[8.47790432 616.16351318]
[-5.05691338 609.57617188]
[-16.98843193 600.39880371]
[-26.82806206 589.00726318]
[-34.17287827 575.86810303]
[-38.72211456 561.51922607]
[-40.28948212 546.54833984]
[-38.81079865 531.56842041]
[-34.34661484 517.19287109]
[-27.07973862 504.01040649]
[-17.30773926 492.56082153]
[-5.43077850 483.31295776]
[8.06479168 476.64553833]
[22.62633705 472.83157349]
[37.65756989 472.02725220]
[39.88268661 457.19320679]
[42.10780334 442.35916138]
[44.33292007 427.52511597]
[35.30075455 415.73718262]
[37.34602356 400.66165161]
[49.77154160 391.26782227]
[51.99665833 376.43377686]
[44.70301819 360.47225952]
[56.29330444 346.16329956]
[58.29731750 331.29776001]
[60.30133057 316.43222046]
[62.30534363 301.56671143]
[55.22305679 291.76019287]
[56.77097321 279.35906982]
[66.66049194 271.07894897]
[68.88561249 256.24490356]
[71.11072540 241.41087341]
[73.33584595 226.57682800]
[75.33985901 211.71130371]
[77.12232208 196.81758118]
[78.90479279 181.92385864]
[80.68725586 167.03015137]
[79.06268311 164.74565125]
[78.24514008 161.67999268]
[78.53669739 158.13734436]
[80.12384033 154.52548218]
[83.04486847 151.31277466]
[85.71067047 136.55155945]
[88.37646484 121.79033661]
[91.04225922 107.02912140]
[79.78491211 116.94235229]
[64.97150421 119.30091858]
[51.19211960 113.37397766]
[42.71645355 100.99806976]
[42.17078781 86.00799561]
[49.72420120 73.04859924]
[63.03618240 66.13549042]
[77.98187256 67.41076660]
[89.93019104 76.47927094]
[95.17883301 90.53128815]
[99.79283905 76.25855255]
[104.40684509 61.98582077]
[109.02085876 47.71308899]
[113.63486481 33.44035339]
[118.24887848 19.16761971]
[122.86288452 4.89488697]
[117.69573975 -6.92303896]
[121.83258820 -18.71584320]
[132.54107666 -24.34211731]
[137.36706543 -38.54457474]
[142.19306946 -52.74702835]
[146.70069885 -67.05371857]
[143.12303162 -82.46510315]
[154.10540771 -92.52674866]
[158.29241943 -106.93053436]
[162.47943115 -121.33431244]
[164.48344421 -136.19984436]
[164.26011658 -151.19818115]
[164.03678894 -166.19651794]
[163.81346130 -181.19485474]
[163.59013367 -196.19319153]
[163.36680603 -211.19152832]
[154.67218018 -220.71865845]
[154.79493713 -233.21540833]
[163.12388611 -241.98780823]
[163.12388611 -256.98779297]
[160.82032776 -260.66851807]
[159.90034485 -264.50494385]
[160.24302673 -268.04299927]
[161.59237671 -270.91458130]
[163.59709167 -272.87396240]
[164.48991394 -287.84738159]
[165.38272095 -302.82077026]
[166.27554321 -317.79418945]
[151.81213379 -322.00814819]
[138.64929199 -329.33535767]
[127.44728851 -339.40820312]
[118.76798248 -351.72152710]
[113.04673767 -365.65762329]
[110.57052612 -380.51751709]
[111.46355438 -395.55578613]
[115.68103027 -410.01818848]
[123.01140594 -423.17922974]
[133.08699036 -434.37881470]
[145.40238953 -443.05514526]
[159.33988953 -448.77301025]
[174.20036316 -451.24560547]
[189.23844910 -450.34893799]
[203.69981384 -446.12796021]
[216.85908508 -438.79440308]
[228.05621338 -428.71609497]
[236.72955322 -416.39859009]
[242.44404602 -402.45971680]
[244.91305542 -387.59863281]
[244.01274109 -372.56079102]
[239.78825378 -358.10043335]
[232.45150757 -344.94293213]
[222.37049866 -333.74826050]
[210.05088806 -325.07791138]
[196.11062622 -319.36679077]
[181.24894714 -316.90136719]
[180.35612488 -301.92797852]
[179.46331787 -286.95455933]
[178.57049561 -271.98117065]
[178.12388611 -256.98779297]
[178.12388611 -241.98780823]
[187.70458984 -227.28483582]
[178.36514282 -211.41485596]
[178.58847046 -196.41651917]
[178.81179810 -181.41818237]
[179.03512573 -166.41984558]
[179.25845337 -151.42150879]
[179.48178101 -136.42317200]
[186.11376953 -149.87742615]
[196.22512817 -160.95715332]
[209.01844788 -168.78855896]
[223.48478699 -172.75404358]
[238.48326111 -172.54084778]
[252.83105469 -168.16581726]
[265.39660645 -159.97395325]
[275.18899536 -148.61131287]
[281.43588257 -134.97399902]
[283.64468384 -120.13751984]
[281.64114380 -105.27192688]
[275.58331299 -91.54958344]
[265.94891357 -80.05269623]
[253.49775696 -71.68796539]
[239.21180725 -67.11505127]
[224.21769714 -66.69460297]
[209.69793701 -70.45977783]
[196.79760742 -78.11363983]
[186.53408813 -89.05256653]
[179.71679688 -102.41387939]
[176.88320923 -117.14730072]
[172.69619751 -102.74352264]
[168.50918579 -88.33973694]
[172.38633728 -73.95860291]
[161.10447693 -62.86670303]
[162.47309875 -59.61721039]
[162.33580017 -55.54336548]
[160.32226562 -51.36019135]
[156.39552307 -47.92103195]
[151.56951904 -33.71857452]
[146.74353027 -19.51612091]
[151.08438110 -2.51247740]
[137.13562012 9.50889683]
[132.52160645 23.78162956]
[127.90760040 38.05436325]
[123.29359436 52.32709503]
[118.67958069 66.59983063]
[114.06557465 80.87256622]
[109.45156097 95.14529419]
[105.80347443 109.69491577]
[103.13768005 124.45613098]
[100.47188568 139.21734619]
[97.80609131 153.97856140]
[95.58097076 168.81260681]
[93.79850769 183.70632935]
[92.01603699 198.60005188]
[90.23357391 213.49375916]
[92.48015594 219.71183777]
[91.40991211 225.29319763]
[88.16988373 228.80194092]
[85.94477081 243.63598633]
[83.71965027 258.47003174]
[81.49453735 273.30407715]
[88.63000488 290.27954102]
[77.17087555 303.57070923]
[75.16686249 318.43624878]
[73.16284180 333.30175781]
[71.15882874 348.16729736]
[78.34400177 358.87878418]
[76.36882019 371.21905518]
[66.83070374 378.65887451]
[64.60558319 393.49291992]
[73.72810364 406.11898804]
[71.26020050 421.13113403]
[59.16696548 429.75024414]
[56.94184494 444.58428955]
[54.71672821 459.41833496]
[52.49161148 474.25238037]
[66.62532806 479.43145752]
[79.42700195 487.34991455]
[90.37240601 497.68350220]
[99.01334381 510.00906372]
[104.99597168 523.82183838]
[108.07529449 538.55627441]
[108.12522888 553.60888672]
[105.14373016 568.36340332]
[99.25287628 582.21557617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 201]
[21 200]
[22 199]
[23 198]
[26 195]
[27 194]
[29 191]
[30 190]
[31 189]
[32 188]
[35 186]
[36 185]
[37 184]
[38 183]
[39 180]
[40 179]
[41 178]
[42 177]
[47 176]
[48 175]
[49 174]
[50 173]
[60 172]
[61 171]
[62 170]
[63 169]
[64 168]
[65 167]
[66 166]
[69 164]
[70 163]
[71 162]
[72 158]
[74 156]
[75 155]
[76 154]
[77 133]
[78 132]
[79 131]
[80 130]
[81 129]
[82 128]
[85 126]
[86 125]
[91 124]
[92 123]
[93 122]
[94 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
