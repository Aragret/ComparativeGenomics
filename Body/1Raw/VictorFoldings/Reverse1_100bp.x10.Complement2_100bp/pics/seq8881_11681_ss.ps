%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[148.81265259 423.23928833]
[155.78564453 409.90609741]
[165.15615845 398.13369751]
[176.58546448 388.34759521]
[189.66036987 380.90158081]
[184.83438110 366.69912720]
[180.00837708 352.49667358]
[175.18238831 338.29421997]
[170.35638428 324.09176636]
[165.00520325 310.07873535]
[159.13624573 296.27456665]
[153.26727295 282.47039795]
[147.39831543 268.66619873]
[135.29812622 259.98089600]
[137.01908875 244.25357056]
[131.15011597 230.44940186]
[126.48004150 244.70388794]
[114.39121246 253.58421326]
[99.39247131 253.77824402]
[87.07797241 245.21359253]
[82.04071808 231.08468628]
[86.15948486 216.66123962]
[97.89807129 207.32284546]
[112.87828064 206.55250549]
[125.51360321 214.63841248]
[121.32659149 200.23463440]
[117.13957977 185.83085632]
[112.95256805 171.42706299]
[108.76555634 157.02328491]
[104.57854462 142.61950684]
[100.39153290 128.21572876]
[96.20452118 113.81194305]
[86.24539948 103.99829865]
[89.39169312 90.37506866]
[85.20468140 75.97129059]
[73.92282867 64.87938690]
[77.79997253 50.49825287]
[73.61296082 36.09447098]
[70.98688507 50.86280441]
[65.48044586 64.81555176]
[57.31296921 77.39698029]
[46.80975723 88.10597229]
[34.38914871 96.51599884]
[20.54585457 102.29208374]
[5.83124590 105.20417786]
[-9.16860104 105.13628387]
[-23.85624504 102.09111023]
[-37.64668655 96.18994141]
[-49.99065399 87.66783142]
[-60.39649582 76.86419678]
[-68.44974518 64.20935059]
[-73.82965851 50.20732880]
[-76.32193756 35.41582870]
[-75.82732391 20.42398453]
[-72.36551666 5.82891941]
[-66.07440186 -7.78805065]
[-57.20455170 -19.88456726]
[-46.10924530 -29.97883224]
[-33.23040390 -37.66879272]
[-19.08099365 -42.64816284]
[-4.22457266 -44.71861649]
[10.74713039 -43.79768372]
[25.23779869 -39.92205048]
[38.67027283 -33.24607849]
[50.50954819 -24.03566933]
[60.28406143 -12.65767097]
[67.60450745 0.43473464]
[72.17843628 14.71599770]
[74.40355682 -0.11804622]
[76.62866974 -14.95209026]
[78.85379028 -29.78613281]
[81.07891083 -44.62017822]
[70.42512512 -58.49520111]
[73.05075073 -75.44869232]
[86.84838867 -85.06452179]
[88.85240173 -99.93005371]
[90.85641479 -114.79557800]
[92.86042786 -129.66110229]
[94.86444092 -144.52664185]
[96.86845398 -159.39216614]
[82.27452850 -162.91654968]
[68.12033844 -167.92285156]
[54.55593109 -174.35797119]
[41.72509384 -182.15371704]
[29.76384163 -191.22744751]
[18.79897118 -201.48295593]
[8.94671440 -212.81155396]
[0.31151265 -225.09313965]
[-7.01509666 -238.19752502]
[-12.95544815 -251.98579407]
[-17.44656944 -266.31176758]
[-20.44085312 -281.02362061]
[-21.90655708 -295.96536255]
[-21.82814598 -310.97860718]
[-20.20644951 -325.90423584]
[-17.05865860 -340.58398438]
[-12.41814137 -354.86230469]
[-6.33409119 -368.58776855]
[1.12899888 -381.61489868]
[9.89201546 -393.80560303]
[19.86206436 -405.03067017]
[30.93346024 -415.17111206]
[42.98883820 -424.11938477]
[55.90040588 -431.78070068]
[69.53128815 -438.07379150]
[83.73699951 -442.93194580]
[98.36694336 -446.30371094]
[113.26603699 -448.15332031]
[128.27635193 -448.46115112]
[143.23873901 -447.22393799]
[157.99462891 -444.45483398]
[172.38757324 -440.18316650]
[186.26499939 -434.45422363]
[199.47982788 -427.32873535]
[211.89193726 -418.88223267]
[223.36976624 -409.20422363]
[233.79165649 -398.39736938]
[243.04710388 -386.57617188]
[251.03802490 -373.86596680]
[257.67968750 -360.40148926]
[262.90170288 -346.32546997]
[266.64871216 -331.78710938]
[268.88095093 -316.94052124]
[269.57482910 -301.94308472]
[268.72296143 -286.95382690]
[266.33438110 -272.13159180]
[262.43438721 -257.63351440]
[257.06433105 -243.61329651]
[250.28114319 -230.21954346]
[242.15673828 -217.59425354]
[232.77722168 -205.87124634]
[222.24203491 -195.17480469]
[210.66285706 -185.61831665]
[198.16242981 -177.30307007]
[184.87326050 -170.31723022]
[170.93621826 -164.73483276]
[156.49905396 -160.61508179]
[141.71481323 -158.00161743]
[126.74021149 -156.92216492]
[111.73398590 -157.38815308]
[109.72997284 -142.52261353]
[107.72595215 -127.65708923]
[105.72193909 -112.79156494]
[103.71792603 -97.92603302]
[101.71391296 -83.06050873]
[110.88302612 -74.00750732]
[113.19832611 -61.13422012]
[107.59400177 -49.10084915]
[95.91294861 -42.39506149]
[93.68783569 -27.56101608]
[91.46271515 -12.72697258]
[89.23760223 2.10707092]
[87.01248169 16.94111443]
[88.01673889 31.90745926]
[92.20375061 46.31124115]
[103.18612671 56.37288666]
[99.60846710 71.78427887]
[103.79547882 86.18805695]
[113.75460052 96.00170135]
[110.60830688 109.62493134]
[114.79531860 124.02870941]
[118.98232269 138.43249512]
[123.16933441 152.83627319]
[127.35634613 167.24005127]
[131.54336548 181.64384460]
[135.73037720 196.04762268]
[139.91738892 210.45140076]
[144.95429993 224.58042908]
[150.82325745 238.38461304]
[163.34324646 248.05728149]
[161.20249939 262.79724121]
[167.07145691 276.60140991]
[172.94041443 290.40560913]
[178.80937195 304.20977783]
[186.75581360 291.48757935]
[201.63865662 289.61654663]
[212.48684692 299.97595215]
[211.30348206 314.92919922]
[198.96090698 323.45330811]
[184.55883789 319.26577759]
[189.38484192 333.46823120]
[194.21083069 347.67068481]
[199.03683472 361.87313843]
[203.86283875 376.07559204]
[218.76742554 374.01416016]
[233.79280090 374.81094360]
[248.39576721 378.43716431]
[262.04846191 384.76174927]
[274.25735474 393.55603027]
[284.58108521 404.50213623]
[292.64648438 417.20434570]
[298.16195679 431.20349121]
[300.92813110 445.99349976]
[300.84500122 461.03976440]
[297.91561890 475.79830933]
[292.24584961 489.73568726]
[284.04061890 502.34802246]
[273.59661865 513.17938232]
[261.29132080 521.83825684]
[247.56958008 528.01165771]
[232.92742920 531.47631836]
[217.89418030 532.10711670]
[203.01325989 529.88116455]
[188.82263184 524.87890625]
[175.83523560 517.28125000]
[164.52059937 507.36282349]
[155.28771973 495.48214722]
[148.47035217 482.06872559]
[144.31495667 467.60742188]
[142.97174072 452.62103271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 184]
[6 183]
[7 182]
[8 181]
[9 180]
[10 174]
[11 173]
[12 172]
[13 171]
[15 169]
[16 168]
[25 167]
[26 166]
[27 165]
[28 164]
[29 163]
[30 162]
[31 161]
[32 160]
[34 158]
[35 157]
[37 155]
[38 154]
[68 153]
[69 152]
[70 151]
[71 150]
[72 149]
[75 145]
[76 144]
[77 143]
[78 142]
[79 141]
[80 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
