%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[147.13328552 563.08795166]
[139.38346863 548.63549805]
[148.25352478 534.84222412]
[148.47685242 519.84393311]
[148.70018005 504.84558105]
[148.92350769 489.84722900]
[145.87994385 483.11236572]
[149.26347351 474.62768555]
[149.71008301 459.63433838]
[142.35514832 446.68234253]
[150.49989319 433.11865234]
[150.94650269 418.12530518]
[151.39311218 403.13195801]
[151.83972168 388.13861084]
[150.50148010 373.19842529]
[147.39736938 358.52313232]
[144.29325867 343.84780884]
[141.18914795 329.17251587]
[138.08503723 314.49722290]
[134.98092651 299.82189941]
[131.87681580 285.14660645]
[128.77270508 270.47131348]
[124.31306458 264.57778931]
[125.73334503 255.55445862]
[122.84807587 240.83457947]
[112.80715179 229.83325195]
[117.74548340 214.80250549]
[114.86020660 200.08261108]
[111.97493744 185.36271667]
[108.76165771 170.71093750]
[105.22198486 156.13455200]
[101.68231201 141.55818176]
[98.14264679 126.98180389]
[94.60297394 112.40543365]
[91.32007599 127.04177856]
[85.19610596 140.73472595]
[76.47498322 152.93890381]
[65.50406647 163.16822815]
[52.72032166 171.01525879]
[38.63291550 176.16744995]
[23.80295181 178.41958618]
[8.82109928 177.68199158]
[-5.71592236 173.98400879]
[-19.22910881 167.47296143]
[-31.18023300 158.40815735]
[-41.09328842 147.15065002]
[-48.57343674 134.14883423]
[-53.32275391 119.92055511]
[-55.15207291 105.03251648]
[-53.98853302 90.07771301]
[-49.87847900 75.65178680]
[-42.98560715 62.32931137]
[-33.58446503 50.64091873]
[-22.04949379 41.05215454]
[-8.84012508 33.94493103]
[5.51751471 29.60233307]
[20.45156860 28.19732094]
[35.36721420 29.78585434]
[49.67037582 34.30466461]
[62.79135513 41.57377243]
[74.20755005 51.30364227]
[83.46426392 63.10674667]
[90.19280243 76.51296997]
[94.12448120 90.98422241]
[89.18614960 75.95347595]
[99.22707367 64.95215607]
[102.11234283 50.23226166]
[93.36131287 39.99341202]
[92.12314606 26.77685356]
[98.62678528 15.42851448]
[110.30344391 9.98010921]
[113.40755463 -4.69519329]
[116.51166534 -19.37049484]
[119.61577606 -34.04579926]
[114.90177917 -49.14840698]
[125.10537720 -59.99901581]
[128.20948792 -74.67431641]
[131.31359863 -89.34961700]
[132.98513794 -104.25619507]
[133.20846558 -119.25453186]
[133.43179321 -134.25286865]
[133.65512085 -149.25120544]
[123.22375488 -157.77183533]
[119.65645599 -170.55795288]
[124.03973389 -182.88146973]
[134.56222534 -190.31831360]
[135.00883484 -205.31166077]
[135.45544434 -220.30500793]
[135.90205383 -235.29835510]
[136.34864807 -250.29171753]
[128.08810425 -260.19757080]
[128.76875305 -272.67636108]
[137.48110962 -281.06811523]
[138.15089417 -296.05316162]
[130.03874207 -306.08090210]
[130.90510559 -318.54818726]
[139.74143982 -326.80929565]
[140.63424683 -341.78268433]
[141.52706909 -356.75610352]
[127.60685730 -362.75640869]
[116.58050537 -373.15811157]
[109.77947235 -386.70513916]
[108.02503967 -401.76162720]
[111.52905273 -416.50942993]
[119.86837769 -429.16766357]
[132.03601074 -438.20782471]
[146.56265259 -442.53823853]
[161.69413757 -441.63598633]
[175.60327148 -435.61004639]
[186.61044312 -425.18804932]
[193.38648987 -411.62850952]
[195.11317444 -396.56881714]
[191.58198547 -381.82751465]
[183.21934509 -369.18463135]
[171.03506470 -360.16693115]
[156.50047302 -355.86328125]
[155.60765076 -340.88989258]
[154.71484375 -325.91647339]
[163.40341187 -310.66931152]
[153.13592529 -295.38336182]
[152.46614075 -280.39834595]
[161.38076782 -265.28222656]
[151.34199524 -249.84510803]
[150.89540100 -234.85176086]
[150.44879150 -219.85839844]
[150.00218201 -204.86505127]
[149.55557251 -189.87170410]
[161.60072327 -178.13487244]
[161.42697144 -160.98014832]
[148.65345764 -149.02787781]
[148.43013000 -134.02954102]
[148.20680237 -119.03120422]
[147.98347473 -104.03286743]
[156.02522278 -116.69502258]
[168.47665405 -125.05936432]
[183.23945618 -127.71634674]
[197.82585144 -124.21821594]
[209.77778625 -115.15447998]
[217.08114624 -102.05253601]
[218.50517273 -87.12027740]
[213.80989075 -72.87406921]
[203.78656006 -61.71464539]
[190.12428284 -55.52255630]
[175.12538147 -55.34128189]
[161.31742859 -61.20137024]
[151.02732849 -72.11529541]
[145.98890686 -86.24551392]
[142.88479614 -71.57020569]
[139.78068542 -56.89490509]
[144.71670532 -42.84197235]
[134.29107666 -30.94168854]
[131.18696594 -16.26638603]
[128.08285522 -1.59108305]
[124.97874451 13.08421898]
[134.74627686 26.77487373]
[131.52656555 43.62563705]
[116.83223724 53.11753464]
[113.94696045 67.83742523]
[119.09166718 81.81530762]
[108.84436798 93.86949921]
[109.17934418 108.86576080]
[112.71901703 123.44213104]
[116.25868988 138.01850891]
[119.79836273 152.59487915]
[123.33803558 167.17126465]
[126.94229126 170.94703674]
[128.57458496 175.29316711]
[128.34790039 179.36300659]
[126.69482422 182.47744751]
[129.58009338 197.19734192]
[132.46537781 211.91723633]
[142.71267700 223.97142029]
[137.56796265 237.94929504]
[140.45323181 252.66918945]
[143.44801331 267.36718750]
[146.55212402 282.04251099]
[149.65623474 296.71780396]
[152.76034546 311.39309692]
[155.86445618 326.06842041]
[158.96856689 340.74371338]
[162.07267761 355.41900635]
[165.17678833 370.09429932]
[169.56114197 355.74935913]
[178.53198242 343.72756958]
[191.03541565 335.44119263]
[205.60256958 331.86373901]
[220.52209473 333.41546631]
[234.04125977 339.91409302]
[244.57183838 350.59616089]
[250.87673950 364.20675659]
[252.21524048 379.14691162]
[248.43009949 393.66149902]
[239.96600342 406.04531860]
[227.81730652 414.84353638]
[213.41120911 419.02258301]
[198.44012451 418.09149170]
[184.66287231 412.15960693]
[173.69795227 401.92385864]
[166.83306885 388.58520508]
[166.38645935 403.57855225]
[165.93984985 418.57192993]
[165.49324036 433.56527710]
[172.81623840 447.58969116]
[164.70343018 460.08096313]
[164.25682068 475.07431030]
[163.92184448 490.07055664]
[163.69851685 505.06890869]
[163.47518921 520.06726074]
[163.25186157 535.06555176]
[171.70730591 549.11682129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 209]
[4 208]
[5 207]
[6 206]
[8 205]
[9 204]
[11 202]
[12 201]
[13 200]
[14 199]
[15 182]
[16 181]
[17 180]
[18 179]
[19 178]
[20 177]
[21 176]
[22 175]
[24 174]
[25 173]
[27 171]
[28 170]
[29 169]
[30 165]
[31 164]
[32 163]
[33 162]
[34 161]
[64 160]
[66 158]
[67 157]
[71 154]
[72 153]
[73 152]
[74 151]
[76 149]
[77 148]
[78 147]
[79 133]
[80 132]
[81 131]
[82 130]
[86 127]
[87 126]
[88 125]
[89 124]
[90 123]
[93 121]
[94 120]
[97 118]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
