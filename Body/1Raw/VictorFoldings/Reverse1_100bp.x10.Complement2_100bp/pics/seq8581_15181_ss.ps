%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[142.27459717 523.05566406]
[129.10748291 530.40948486]
[114.52502441 534.25689697]
[99.44387817 534.35607910]
[84.81205750 530.70086670]
[71.54933929 523.52093506]
[60.48941803 513.26770020]
[52.32753754 500.58566284]
[47.57675934 486.27200317]
[46.53571701 471.22650146]
[49.26985550 456.39492798]
[55.60730743 442.70962524]
[65.14968872 431.03085327]
[77.29715729 422.09274292]
[91.28611755 416.45715332]
[106.23720551 414.47836304]
[108.01967621 399.58462524]
[109.80213928 384.69091797]
[102.03649902 368.95364380]
[113.19561768 354.30593872]
[114.75613403 339.38732910]
[116.31665802 324.46871948]
[117.87718201 309.55010986]
[119.43770599 294.63150024]
[120.99822998 279.71289062]
[121.44483185 264.71954346]
[120.77504730 249.73451233]
[120.10526276 234.74948120]
[111.80738068 222.38038635]
[118.92075348 208.24848938]
[118.25096893 193.26344299]
[117.58118439 178.27841187]
[114.69590759 163.55851746]
[103.13412476 154.16839600]
[105.78813934 138.57138062]
[100.75122833 124.44235229]
[95.71430969 110.31332397]
[90.57234955 96.22218323]
[85.32563019 82.16971588]
[80.07891083 68.11724091]
[74.31288147 54.26975632]
[68.03552246 40.64643860]
[61.65691376 27.07023239]
[55.17741776 13.54188633]
[48.69792175 0.01354100]
[42.21842575 -13.51480484]
[35.73892975 -27.04314995]
[29.25943565 -40.57149506]
[26.51006508 -25.82561684]
[16.83139992 -14.36597157]
[2.75342083 -9.18808556]
[-12.04392338 -11.64544582]
[-23.69264221 -21.09570312]
[-29.14778709 -35.06858444]
[-26.98339844 -49.91160965]
[-17.76524162 -61.74485016]
[-3.90291953 -67.47512054]
[10.97998905 -65.60455322]
[22.99257660 -56.62279129]
[18.59157753 -70.96263885]
[14.19058037 -85.30248260]
[9.68295193 -99.60916901]
[5.06894207 -113.88190460]
[0.45493302 -128.15463257]
[-4.15907621 -142.42736816]
[-6.33780241 -127.58644104]
[-11.83614349 -113.63050842]
[-20.36566925 -101.29165649]
[-31.47893333 -91.21716309]
[-44.59296036 -83.93552399]
[-59.01981354 -79.82871246]
[-74.00269318 -79.11216736]
[-88.75561523 -81.82347107]
[-102.50468445 -87.82040405]
[-114.52864075 -96.78836823]
[-124.19674683 -108.25692749]
[-131.00181580 -121.62445831]
[-134.58688354 -136.18974304]
[-134.76385498 -151.18869019]
[-131.52348328 -165.83451843]
[-125.03574371 -179.35890198]
[-115.64095306 -191.05239868]
[-103.83195496 -200.30158997]
[-90.22821808 -206.62127686]
[-75.54338074 -209.67994690]
[-60.54776764 -209.31713867]
[-46.02802277 -205.55189514]
[-32.74582672 -198.58172607]
[-21.39793205 -188.77227783]
[-12.57962799 -176.63813782]
[-6.75304079 -162.81423950]
[-5.86022520 -177.78764343]
[-4.96740913 -192.76104736]
[-4.07459307 -207.73445129]
[-18.53800201 -211.94842529]
[-31.70083427 -219.27560425]
[-42.90284348 -229.34846497]
[-51.58214951 -241.66177368]
[-57.30339432 -255.59788513]
[-59.77960587 -270.45776367]
[-58.88657761 -285.49606323]
[-54.66910172 -299.95843506]
[-47.33872986 -313.11950684]
[-37.26314926 -324.31906128]
[-24.94774246 -332.99539185]
[-11.01024818 -338.71325684]
[3.85023427 -341.18588257]
[18.88830948 -340.28918457]
[33.34967422 -336.06820679]
[46.50895309 -328.73464966]
[57.70608139 -318.65637207]
[66.37941742 -306.33886719]
[72.09391022 -292.39996338]
[74.56291962 -277.53887939]
[73.66260529 -262.50103760]
[69.43811798 -248.04069519]
[62.10137177 -234.88319397]
[52.02036285 -223.68850708]
[39.70075226 -215.01815796]
[25.76049042 -209.30703735]
[10.89881229 -206.84162903]
[10.00599670 -191.86822510]
[9.11318111 -176.89482117]
[8.22036457 -161.92141724]
[10.11365700 -147.04138184]
[14.72766685 -132.76864624]
[19.34167480 -118.49591827]
[23.95568466 -104.22318268]
[29.00425720 -98.82561493]
[28.53042793 -89.70348358]
[32.93142700 -75.36363983]
[37.33242416 -61.02378845]
[42.78778076 -47.05099106]
[49.26727676 -33.52264786]
[55.74677277 -19.99430084]
[62.22626877 -6.46595478]
[68.70576477 7.06239080]
[75.18525696 20.59073639]
[80.90969086 25.26541901]
[81.65883636 34.36907959]
[87.93619537 47.99239349]
[95.50032043 35.03924561]
[110.32086182 32.72592926]
[121.47267914 42.75773239]
[120.73505402 57.73958588]
[108.65174866 66.62742615]
[94.13138580 62.87052155]
[99.37810516 76.92299652]
[104.62482452 90.97546387]
[110.17043304 96.82514191]
[109.84333801 105.27640533]
[114.88025665 119.40544128]
[119.91716766 133.53446960]
[131.83923340 143.93519592]
[128.82493591 158.52160645]
[130.77561951 143.64898682]
[136.78465271 129.90519714]
[146.37812805 118.37414551]
[158.79946899 109.96520996]
[173.06907654 105.34155273]
[188.06159973 104.86781311]
[202.59465027 108.58135986]
[215.52209473 116.18932343]
[225.82443237 127.09170532]
[232.68916321 140.42869568]
[235.57492065 155.14849854]
[234.25410461 170.09022522]
[228.83088684 184.07553101]
[219.73297119 196.00146484]
[207.67785645 204.92750549]
[193.61625671 210.14970398]
[178.65711975 211.25621033]
[163.98019409 208.15975952]
[150.74296570 201.10456848]
[139.98937988 190.64701843]
[132.56622314 177.60862732]
[133.23600769 192.59365845]
[133.90579224 207.57870483]
[142.25158691 221.01962280]
[135.09030151 234.07968140]
[135.76008606 249.06472778]
[136.42987061 264.04977417]
[144.72959900 251.55517578]
[158.12040710 244.79603577]
[173.10198975 245.53913879]
[185.75819397 253.59027100]
[192.78070068 266.84484863]
[192.33387756 281.83819580]
[184.53448486 294.65106201]
[171.42129517 301.93420410]
[156.42205811 301.78384399]
[143.45751953 294.23922729]
[135.91683960 281.27343750]
[134.35630798 296.19201660]
[132.79579163 311.11062622]
[131.23526001 326.02923584]
[129.67474365 340.94784546]
[128.11421204 355.86645508]
[135.61512756 366.35925293]
[134.00823975 378.75286865]
[124.69585419 386.47338867]
[122.91339111 401.36709595]
[121.13092804 416.26083374]
[135.19282532 421.71185303]
[147.45683289 430.48937988]
[157.15203857 442.04159546]
[163.66899109 455.64233398]
[166.59803772 470.43664551]
[165.75502014 485.49453735]
[161.19297791 499.86947632]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 203]
[17 202]
[18 201]
[20 198]
[21 197]
[22 196]
[23 195]
[24 194]
[25 193]
[26 182]
[27 181]
[28 180]
[30 178]
[31 177]
[32 176]
[33 155]
[35 153]
[36 152]
[37 151]
[38 149]
[39 148]
[40 147]
[41 141]
[42 140]
[43 138]
[44 137]
[45 136]
[46 135]
[47 134]
[48 133]
[59 132]
[60 131]
[61 130]
[62 128]
[63 127]
[64 126]
[65 125]
[91 124]
[92 123]
[93 122]
[94 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
