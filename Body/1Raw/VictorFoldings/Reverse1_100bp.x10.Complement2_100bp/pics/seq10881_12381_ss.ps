%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[149.08659363 684.60693359]
[135.92755127 677.38989258]
[123.39192200 669.13732910]
[111.56100464 659.90283203]
[100.51151276 649.74633789]
[90.31513214 638.73358154]
[81.03797150 626.93609619]
[72.74020386 614.43035889]
[65.47563934 601.29748535]
[59.29140091 587.62268066]
[54.22759628 573.49450684]
[50.31705856 559.00476074]
[47.58515167 544.24725342]
[46.04959869 529.31781006]
[45.72035599 514.31323242]
[46.59955597 499.33078003]
[48.68149948 484.46768188]
[51.95267868 469.82031250]
[56.39188766 455.48364258]
[61.97032928 441.55068970]
[68.65182495 428.11178589]
[76.39305115 415.25411987]
[85.14378357 403.06103516]
[94.84729004 391.61166382]
[105.44062805 380.98022461]
[116.85509491 371.23568726]
[129.01666260 362.44122314]
[141.84645081 354.65386963]
[155.26127625 347.92416382]
[169.17411804 342.29571533]
[183.49473572 337.80508423]
[180.17248535 323.17761230]
[176.85021973 308.55014038]
[173.52795410 293.92269897]
[170.20570374 279.29522705]
[166.88343811 264.66778564]
[162.26942444 250.39503479]
[156.40046692 236.59086609]
[150.53150940 222.78668213]
[144.66255188 208.98251343]
[138.79359436 195.17832947]
[132.92462158 181.37416077]
[127.05566406 167.56997681]
[121.18670654 153.76580811]
[114.50650787 140.33541870]
[107.03877258 127.32646942]
[99.57102966 114.31752014]
[87.57736206 107.13116455]
[87.42002106 93.15022278]
[71.28548431 84.27563477]
[72.01363373 66.74176025]
[64.35303497 53.84543610]
[56.69243622 40.94910812]
[49.03184128 28.05278015]
[44.28968048 42.28345108]
[30.93611145 49.11588669]
[16.62066269 44.63616180]
[9.54387474 31.41046333]
[13.75965214 17.01507378]
[26.85300636 9.69632626]
[41.32271576 13.64615154]
[34.84321976 0.11780628]
[28.36372375 -13.41053963]
[21.88422775 -26.93888474]
[15.40473270 -40.46723175]
[1.17676246 -35.65867233]
[-13.52708626 -32.60020828]
[-28.49238777 -31.33644104]
[-43.50090408 -31.88579941]
[-58.33376694 -34.24027252]
[-72.77466583 -38.36552048]
[-86.61302185 -44.20139313]
[-99.64701843 -51.66278076]
[-111.68658447 -60.64087296]
[-122.55615234 -71.00475311]
[-132.09719849 -82.60327148]
[-140.17060852 -95.26729584]
[-146.65863037 -108.81214142]
[-151.46665955 -123.04029083]
[-154.52456665 -137.74424744]
[-155.78778076 -152.70960999]
[-155.23785400 -167.71809387]
[-152.88282776 -182.55087280]
[-148.75704956 -196.99162292]
[-142.92065430 -210.82975769]
[-135.45878601 -223.86347961]
[-126.48023224 -235.90270996]
[-116.11595154 -246.77188110]
[-104.51707458 -256.31250000]
[-91.85275269 -264.38543701]
[-78.30766296 -270.87295532]
[-64.07933044 -275.68045044]
[-49.37525558 -278.73779297]
[-34.40985870 -280.00045776]
[-19.40138245 -279.44998169]
[-4.56869602 -277.09439087]
[9.87189770 -272.96807861]
[23.70981216 -267.13116455]
[36.74325180 -259.66879272]
[48.78214645 -250.68980408]
[59.65093613 -240.32511902]
[69.19112396 -228.72587585]
[77.26358032 -216.06124878]
[83.75059509 -202.51591492]
[88.55755615 -188.28741455]
[91.61436462 -173.58322144]
[92.87645721 -158.61778259]
[92.32541656 -143.60931396]
[89.96927643 -128.77671814]
[85.84240723 -114.33628082]
[80.00498199 -100.49858856]
[72.54213715 -87.46542358]
[63.56269073 -75.42686462]
[53.19759750 -64.55846405]
[41.59800720 -55.01871109]
[28.93307877 -46.94672775]
[35.41257477 -33.41838074]
[41.89207077 -19.89003563]
[48.37156677 -6.36168957]
[54.85106277 7.16665602]
[61.92816544 20.39218330]
[69.58876801 33.28850937]
[77.24935913 46.18483734]
[84.90995789 59.08116531]
[96.55094147 62.36962891]
[103.03865814 73.05107880]
[100.42897034 85.68247986]
[112.42263794 92.86883545]
[112.57997894 106.84977722]
[120.04772186 119.85873413]
[127.51546478 132.86769104]
[130.45857239 118.15924835]
[141.40649414 107.90531158]
[156.27590942 105.93034363]
[169.52088928 112.97095490]
[176.20141602 126.40116882]
[173.82577515 141.21185303]
[163.28005981 151.87898254]
[148.49752808 154.42399597]
[134.99087524 147.89683533]
[140.85984802 161.70101929]
[146.72880554 175.50518799]
[152.59776306 189.30937195]
[158.46672058 203.11354065]
[164.33569336 216.91772461]
[170.20465088 230.72190857]
[176.07360840 244.52607727]
[178.62222290 229.74418640]
[187.26145935 217.48188782]
[200.32321167 210.10687256]
[215.28543091 209.04312134]
[229.25918579 214.49603271]
[239.54635620 225.41273499]
[244.16062927 239.68537903]
[242.21107483 254.55815125]
[234.07412720 267.15933228]
[221.32089233 275.05587769]
[206.41381836 276.72302246]
[192.23124695 271.83892822]
[181.51089478 261.34552002]
[184.83316040 275.97296143]
[188.15542603 290.60043335]
[191.47767639 305.22790527]
[194.79994202 319.85534668]
[198.12219238 334.48281860]
[212.97763062 332.34686279]
[227.95677185 331.41320801]
[242.96246338 331.68792725]
[257.89739990 333.16918945]
[272.66470337 335.84744263]
[287.16860962 339.70529175]
[301.31506348 344.71771240]
[315.01229858 350.85220337]
[328.17150879 358.06896973]
[340.70730591 366.32122803]
[352.53842163 375.55545044]
[363.58813477 385.71176147]
[373.78475952 396.72424316]
[383.06219482 408.52151489]
[391.36022949 421.02706909]
[398.62509155 434.15979004]
[404.80963135 447.83450317]
[409.87374878 461.96252441]
[413.78460693 476.45223999]
[416.51681519 491.20965576]
[418.05270386 506.13906860]
[418.38229370 521.14361572]
[417.50341797 536.12609863]
[415.42181396 550.98925781]
[412.15093994 565.63671875]
[407.71203613 579.97344971]
[402.13391113 593.90655518]
[395.45269775 607.34558105]
[387.71176147 620.20343018]
[378.96130371 632.39666748]
[369.25805664 643.84625244]
[358.66494751 654.47796631]
[347.25070190 664.22277832]
[335.08932495 673.01751709]
[322.25970459 680.80511475]
[308.84503174 687.53509521]
[294.93231201 693.16387939]
[280.61178589 697.65484619]
[265.97631836 700.97888184]
[251.12084961 703.11450195]
[236.14167786 704.04785156]
[221.13600159 703.77282715]
[206.20109558 702.29119873]
[191.43385315 699.61260986]
[176.93002319 695.75445557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 165]
[32 164]
[33 163]
[34 162]
[35 161]
[36 160]
[37 147]
[38 146]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[44 140]
[45 131]
[46 130]
[47 129]
[49 127]
[51 124]
[52 123]
[53 122]
[54 121]
[61 120]
[62 119]
[63 118]
[64 117]
[65 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
