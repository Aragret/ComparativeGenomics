%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[78.65203857 572.45495605]
[64.22460938 576.73693848]
[49.23900223 578.12176514]
[34.27120590 576.55609131]
[19.89654732 572.10015869]
[6.66755295 564.92517090]
[-4.90729189 555.30700684]
[-14.38308048 543.61535645]
[-21.39558983 530.29949951]
[-25.67527580 515.87139893]
[-27.05764198 500.88555908]
[-25.48954964 485.91802979]
[-21.03127670 471.54406738]
[-13.85418320 458.31625366]
[-4.23413992 446.74295044]
[7.45908546 437.26907349]
[20.77603531 430.25869751]
[35.20484543 425.98135376]
[50.19090271 424.60140991]
[51.75142670 409.68280029]
[53.31195068 394.76422119]
[45.94082642 385.17291260]
[47.11882782 372.73120117]
[56.75743484 364.16030884]
[58.53989792 349.26660156]
[60.32236481 334.37289429]
[54.15228271 320.81634521]
[63.47464752 308.03338623]
[65.25711823 293.13967896]
[59.08703232 279.58316040]
[68.40940094 266.80020142]
[66.08300781 259.78524780]
[70.33087921 251.69860840]
[72.33489227 236.83308411]
[74.33890533 221.96755981]
[67.25662231 212.16104126]
[68.80453491 199.75991821]
[78.69405365 191.47981262]
[80.91917419 176.64576721]
[83.14428711 161.81172180]
[85.36940765 146.97767639]
[70.19251251 139.14678955]
[58.60662842 126.59973145]
[52.00754929 110.84812164]
[51.19028854 93.78959656]
[56.25330734 77.47926331]
[66.58663940 63.88207626]
[80.94539642 54.63614655]
[97.59973145 50.85535812]
[99.16025543 35.93675613]
[100.72077942 21.01815033]
[102.28130341 6.09954500]
[94.39495087 -10.54037762]
[105.24917603 -24.32996750]
[106.58740997 -39.27015305]
[107.92564392 -54.21033859]
[109.26387787 -69.15052032]
[110.60211182 -84.09070587]
[111.94034576 -99.03089142]
[112.83316040 -114.00429535]
[113.16813660 -129.00056458]
[113.39146423 -143.99890137]
[113.50313568 -158.99847412]
[113.50313568 -173.99847412]
[113.50313568 -188.99847412]
[106.73413086 -175.61264038]
[96.64550781 -164.51220703]
[83.96556854 -156.49851990]
[69.60969543 -152.15010071]
[54.61423874 -151.78085327]
[40.06174088 -155.41744995]
[27.00275993 -162.79736328]
[16.38003349 -173.38781738]
[8.96042538 -186.42427063]
[5.27956295 -200.96563721]
[5.60317135 -215.96214294]
[9.90788841 -230.33119202]
[17.88295364 -243.03546143]
[28.95264053 -253.15780640]
[42.31781769 -259.96749878]
[57.01364517 -262.97296143]
[71.97920990 -261.95718384]
[86.13414764 -256.99353027]
[98.45658875 -248.44033813]
[108.05696869 -236.91502380]
[114.24223328 -223.24964905]
[116.56588745 -208.42955017]
[121.17989349 -222.70228577]
[125.79390717 -236.97502136]
[130.40791321 -251.24775696]
[135.02192688 -265.52047729]
[139.63592529 -279.79321289]
[144.24993896 -294.06594849]
[146.36456299 -308.91616821]
[145.91795349 -323.90951538]
[145.47135925 -338.90286255]
[145.02474976 -353.89620972]
[130.80155945 -359.25991821]
[119.71706390 -369.66195679]
[113.46157074 -383.51608276]
[112.98899078 -398.70968628]
[118.37139893 -412.92578125]
[128.78800964 -423.99661255]
[142.65037537 -430.23385620]
[157.84457397 -430.68646240]
[172.05360413 -425.28533936]
[183.11068726 -414.85418701]
[189.32971191 -400.98364258]
[189.76231384 -385.78884888]
[184.34251404 -371.58694458]
[173.89682007 -360.54357910]
[160.01809692 -354.34280396]
[160.46470642 -339.34945679]
[160.91131592 -324.35610962]
[161.35791016 -309.36276245]
[167.63758850 -322.98501587]
[177.06800842 -334.64978027]
[189.07249451 -343.64379883]
[202.91697693 -349.41705322]
[217.75485229 -351.61651611]
[232.67877197 -350.10769653]
[246.77613831 -344.98284912]
[259.18490601 -336.55532837]
[269.14624023 -325.34054565]
[276.05102539 -312.02426147]
[279.47705078 -297.42074585]
[279.21478271 -282.42303467]
[275.28027344 -267.94824219]
[267.91409302 -254.88151550]
[257.56671143 -244.02186584]
[244.87089539 -236.03338623]
[230.60295105 -231.40455627]
[215.63540649 -230.41845703]
[200.88351440 -233.13536072]
[187.24935913 -239.38916016]
[175.56668091 -248.79739380]
[166.54986572 -260.78475952]
[160.75032043 -274.61825562]
[158.52267456 -289.45193481]
[153.90866089 -275.17919922]
[149.29466248 -260.90649414]
[144.68064880 -246.63374329]
[140.06663513 -232.36100769]
[135.45262146 -218.08828735]
[130.83862305 -203.81555176]
[128.50312805 -188.99847412]
[128.50312805 -173.99847412]
[128.50312805 -158.99847412]
[131.64663696 -152.30966187]
[128.38980103 -143.77557373]
[128.16647339 -128.77723694]
[131.21003723 -122.04235840]
[127.82651520 -113.55769348]
[129.64842224 -111.42724609]
[130.73620605 -108.44675446]
[130.76187134 -104.89221191]
[129.50329590 -101.15316010]
[126.88053131 -97.69265747]
[125.54229736 -82.75247192]
[124.20406342 -67.81228638]
[122.86582947 -52.87210464]
[121.52759552 -37.93191910]
[120.18936157 -22.99173355]
[127.70246887 -13.51123905]
[126.70983887 -1.05337214]
[117.19990540 7.66006804]
[115.63938141 22.57867241]
[114.07885742 37.49727631]
[112.51833344 52.41588211]
[124.40907288 57.27817917]
[134.63589478 65.05272675]
[142.50166321 75.20956421]
[147.47018433 87.05631256]
[149.20275879 99.78540039]
[147.58128357 112.52912140]
[142.71629333 124.41875458]
[134.93942261 134.64381409]
[124.78080750 142.50727844]
[112.93292999 147.47311401]
[100.20345306 149.20280457]
[97.97833252 164.03684998]
[95.75321960 178.87089539]
[93.52809906 193.70492554]
[100.66357422 210.68040466]
[89.20443726 223.97157288]
[87.20042419 238.83709717]
[85.19641113 253.70262146]
[83.30311584 268.58267212]
[89.34570312 283.20449829]
[80.15083313 294.92214966]
[78.36837006 309.81585693]
[84.41095734 324.43768311]
[75.21607971 336.15533447]
[73.43361664 351.04907227]
[71.65115356 365.94277954]
[79.28887939 382.69827271]
[68.23055267 396.32473755]
[66.67002869 411.24334717]
[65.10951233 426.16195679]
[79.48561096 430.61325073]
[92.71692657 437.78390503]
[104.29488373 447.39831543]
[113.77445221 459.08694458]
[120.79127502 472.40048218]
[125.07563019 486.82723999]
[126.46284485 501.81262207]
[124.89960480 516.78063965]
[120.44598389 531.15606689]
[113.27317047 544.38616943]
[103.65687561 555.96258545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 199]
[20 198]
[21 197]
[24 195]
[25 194]
[26 193]
[28 191]
[29 190]
[31 188]
[33 187]
[34 186]
[35 185]
[38 183]
[39 182]
[40 181]
[41 180]
[49 169]
[50 168]
[51 167]
[52 166]
[54 163]
[55 162]
[56 161]
[57 160]
[58 159]
[59 158]
[60 153]
[61 151]
[62 150]
[63 148]
[64 147]
[65 146]
[87 145]
[88 144]
[89 143]
[90 142]
[91 141]
[92 140]
[93 139]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
