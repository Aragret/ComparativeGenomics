%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[25.41273880 386.84933472]
[25.90834618 401.85714722]
[24.72046471 416.82608032]
[21.86403275 431.56787109]
[17.37497139 445.89715576]
[11.30973721 459.63372803]
[3.74460530 472.60479736]
[-5.22528362 484.64724731]
[-15.48712444 495.60968018]
[-26.91186333 505.35418701]
[-39.35582352 513.75823975]
[-52.66250610 520.71612549]
[-66.66456604 526.14031982]
[-81.18591309 529.96270752]
[-96.04393005 532.13513184]
[-111.05175018 532.63031006]
[-126.02065277 531.44195557]
[-140.76237488 528.58508301]
[-155.09152222 524.09558105]
[-168.82789612 518.02996826]
[-181.79873657 510.46441650]
[-193.84094238 501.49417114]
[-204.80305481 491.23202515]
[-214.54722595 479.80697632]
[-222.95088196 467.36276245]
[-229.90837097 454.05587769]
[-235.33219910 440.05364990]
[-239.15411377 425.53219604]
[-241.32609558 410.67410278]
[-241.82080078 395.66629028]
[-240.63203430 380.69741821]
[-237.77471924 365.95578003]
[-233.28480530 351.62677002]
[-227.21875000 337.89056396]
[-219.65283203 324.91995239]
[-210.68222046 312.87802124]
[-200.41972351 301.91619873]
[-188.99441528 292.17239380]
[-176.54994202 283.76910400]
[-163.24284363 276.81201172]
[-149.24046326 271.38861084]
[-134.71888733 267.56710815]
[-119.86074066 265.39556885]
[-104.85288239 264.90130615]
[-89.88406372 266.09054565]
[-75.14250946 268.94830322]
[-60.81363297 273.43865967]
[-47.07762146 279.50509644]
[-34.10722351 287.07141113]
[-25.14652824 275.04202271]
[-16.18583298 263.01266479]
[-7.31493711 250.91690063]
[1.46566617 238.75544739]
[10.24626923 226.59399414]
[11.08531857 209.06507874]
[27.94726753 201.66532898]
[28.90315819 186.80142212]
[43.15379715 179.92903137]
[51.75236130 167.63818359]
[59.79353333 154.97566223]
[67.26127625 141.96670532]
[74.72901154 128.95776367]
[82.19675446 115.94880676]
[89.66449738 102.93984985]
[94.70141602 88.81082153]
[97.14714050 74.01155090]
[99.59286499 59.21228027]
[102.03859711 44.41300964]
[104.48432159 29.61374092]
[106.93005371 14.81446934]
[109.37577820 0.01519862]
[111.82150269 -14.78407192]
[112.71432495 -29.75747871]
[112.04453278 -44.74251556]
[111.37474823 -59.72755432]
[110.70496368 -74.71259308]
[110.03517914 -89.69763184]
[109.25386047 -104.67726898]
[108.36104584 -119.65067291]
[107.46822357 -134.62408447]
[106.57540894 -149.59748840]
[105.68259430 -164.57089233]
[104.78977966 -179.54429626]
[96.24479675 -192.85946655]
[103.21083832 -206.02471924]
[102.31802368 -220.99812317]
[93.50839233 -225.06268311]
[86.82434082 -232.01492310]
[83.15367126 -240.87060547]
[82.96166992 -250.39706421]
[86.23256683 -259.28479004]
[92.47745514 -266.32739258]
[100.80690002 -270.58541870]
[100.80690002 -285.58541870]
[100.80690002 -300.58541870]
[100.80690002 -315.58541870]
[100.80690002 -330.58541870]
[100.80690002 -345.58541870]
[86.74971771 -351.37020874]
[75.97984314 -362.09765625]
[70.13961029 -376.13192749]
[70.11961365 -391.33282471]
[75.92290497 -405.38241577]
[86.66451263 -416.13815308]
[100.70643616 -421.95993042]
[115.90737152 -421.95993042]
[129.94929504 -416.13815308]
[140.69090271 -405.38241577]
[146.49418640 -391.33282471]
[146.47419739 -376.13192749]
[140.63395691 -362.09765625]
[129.86408997 -351.37020874]
[115.80690002 -345.58541870]
[115.80690002 -330.58541870]
[115.80690002 -315.58541870]
[115.80690002 -300.58541870]
[115.80690002 -285.58541870]
[115.80690002 -270.58541870]
[131.42352295 -257.39779663]
[132.23985291 -236.67997742]
[117.29142761 -221.89093018]
[118.18424225 -206.91752625]
[126.66536713 -194.67335510]
[119.76318359 -180.43711853]
[120.65599823 -165.46371460]
[121.54882050 -150.49031067]
[122.44163513 -135.51689148]
[123.33444977 -120.54349518]
[124.22726440 -105.57008362]
[127.76331329 -99.08023834]
[125.02021790 -90.36741638]
[125.69000244 -75.38237762]
[126.35978699 -60.39733887]
[127.02957153 -45.41230011]
[127.69936371 -30.42726326]
[134.73414612 -43.67534637]
[146.25421143 -53.28202820]
[160.55059814 -57.82220840]
[175.50253296 -56.62238693]
[188.89198303 -49.86054611]
[198.73271179 -38.53976440]
[203.56489563 -24.33941269]
[202.67172241 -9.36602783]
[196.18566895 4.15917540]
[185.06890869 14.22981453]
[170.97055054 19.35197067]
[155.98200989 18.76580048]
[142.32673645 12.55826187]
[132.03042603 1.65020418]
[126.62077332 -12.33834457]
[124.17504883 2.46092606]
[121.72932434 17.26019669]
[119.28359222 32.05946732]
[116.83786774 46.85873795]
[114.39213562 61.65800858]
[111.94641113 76.45728302]
[109.50068665 91.25655365]
[118.25904846 79.07907104]
[129.64515686 69.31400299]
[143.01507568 62.51362610]
[157.61268616 59.06252289]
[172.61239624 59.15587234]
[187.16590881 62.78839493]
[200.45014954 69.75465393]
[211.71383667 79.66067505]
[220.31996155 91.94622040]
[225.78179932 105.91648865]
[227.79043579 120.78139496]
[226.23229980 135.70025635]
[221.19551086 149.82931519]
[212.96490479 162.36953735]
[202.00598145 172.61170959]
[188.93850708 179.97656250]
[174.50151062 184.04760742]
[159.51148987 184.59457397]
[144.81619263 181.58656311]
[131.24670410 175.19366455]
[119.57045746 165.77745056]
[110.44779205 153.87043762]
[104.39463806 140.14604187]
[101.75333405 125.38041687]
[102.67344666 110.40759277]
[95.20571136 123.41654968]
[87.73796844 136.42550659]
[80.27022552 149.43444824]
[72.80248260 162.44340515]
[87.52682495 159.58091736]
[100.03916931 167.85382080]
[103.17189026 182.52305603]
[95.13040924 195.18537903]
[80.52126312 198.58726501]
[67.71322632 190.77995300]
[64.04319763 176.23675537]
[55.44463348 188.52758789]
[53.87371445 204.27061462]
[40.23810577 210.26388550]
[41.71046829 223.07774353]
[34.29567337 233.13780212]
[22.40772438 235.37458801]
[13.62712193 247.53604126]
[4.84651852 259.69750977]
[2.36026239 268.48706055]
[-4.15645504 271.97335815]
[-13.11715126 284.00271606]
[-22.07784653 296.03210449]
[-11.11512089 306.29360962]
[-1.37027502 317.71804810]
[7.03413820 330.16177368]
[13.99242496 343.46823120]
[19.41707611 357.47015381]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 205]
[50 204]
[51 203]
[52 201]
[53 200]
[54 199]
[56 196]
[58 194]
[59 193]
[60 186]
[61 185]
[62 184]
[63 183]
[64 182]
[65 157]
[66 156]
[67 155]
[68 154]
[69 153]
[70 152]
[71 151]
[72 150]
[73 135]
[74 134]
[75 133]
[76 132]
[77 131]
[78 129]
[79 128]
[80 127]
[81 126]
[82 125]
[83 124]
[85 122]
[86 121]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
