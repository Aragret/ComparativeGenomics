%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[88.87566376 527.41125488]
[88.23795319 512.06561279]
[95.37271118 498.46447754]
[108.36074066 490.26647949]
[107.69095612 475.28146362]
[104.25191498 468.73968506]
[107.12442780 460.06866455]
[106.67782593 445.07531738]
[106.23121643 430.08197021]
[105.78461456 415.08862305]
[105.33800507 400.09527588]
[101.99674988 393.50302124]
[104.99804688 384.87573242]
[104.77471924 369.87738037]
[101.53197479 363.23611450]
[104.66138458 354.65447998]
[104.66138458 339.65447998]
[96.92408752 326.92721558]
[104.66138458 313.12704468]
[104.66138458 298.12704468]
[104.66138458 283.12704468]
[104.66138458 268.12704468]
[104.21478271 253.13368225]
[95.73365784 240.88951111]
[102.63584137 226.65327454]
[101.74302673 211.67987061]
[91.30418396 197.57321167]
[99.68246460 181.17547607]
[98.45549011 166.22573853]
[97.11725616 151.28555298]
[95.77902222 136.34536743]
[94.44078827 121.40518951]
[93.10255432 106.46500397]
[89.94332886 102.27773285]
[89.35504150 96.61846924]
[91.95368195 91.06113434]
[91.06086731 76.08772278]
[90.16805267 61.11431885]
[89.27523804 46.14091492]
[85.95934296 40.42108917]
[86.02063751 34.73837280]
[88.58550262 30.70966530]
[88.13890076 15.71631527]
[87.69229126 0.72296566]
[79.54753876 -12.84072018]
[86.90247345 -25.79271889]
[86.45586395 -40.78606796]
[79.42427826 -27.53628540]
[68.12895966 -17.66633797]
[54.05601501 -12.47478676]
[39.05698013 -12.64466858]
[25.10522842 -18.15363312]
[14.03636169 -28.27688217]
[7.30667448 -41.68252563]
[5.80157518 -56.60682297]
[9.71908474 -71.08622742]
[18.54378700 -83.21572113]
[31.11464119 -91.39945984]
[45.77773666 -94.56073761]
[60.60388947 -92.28363037]
[73.64246368 -84.86772919]
[83.17800903 -73.28872681]
[87.95629883 -59.06768036]
[90.84157562 -73.78757477]
[93.72684479 -88.50746155]
[96.61212158 -103.22735596]
[88.06248474 -116.24816132]
[91.19824982 -131.13513184]
[103.66429138 -139.20565796]
[106.54956055 -153.92553711]
[109.32517242 -168.66650391]
[111.99096680 -183.42771912]
[114.54680634 -198.20837402]
[116.99253082 -213.00764465]
[115.02584076 -219.31983948]
[116.34423828 -224.84783936]
[119.73770142 -228.20840454]
[122.62297821 -242.92829895]
[125.50824738 -257.64819336]
[115.34420013 -246.61677551]
[101.60448456 -240.59844971]
[86.60449219 -240.60740662]
[72.87197113 -246.64213562]
[62.72110748 -257.68569946]
[57.86249161 -271.87701416]
[59.11488724 -286.82464600]
[66.26724243 -300.00961304]
[78.11426544 -309.21008301]
[92.65951538 -312.87551880]
[107.45187378 -310.38830566]
[119.99855804 -302.16757202]
[128.18524170 -289.59863281]
[130.63223267 -274.79791260]
[136.29502869 -288.68795776]
[141.95780945 -302.57797241]
[140.00288391 -318.27792358]
[151.97242737 -327.14242554]
[157.63520813 -341.03247070]
[163.29800415 -354.92248535]
[168.96078491 -368.81253052]
[156.16107178 -376.70028687]
[144.83432007 -386.58737183]
[135.28952026 -398.20404053]
[127.78707123 -411.23336792]
[122.53164673 -425.31988525]
[119.66661835 -440.07934570]
[119.27013397 -455.10906982]
[121.35302734 -469.99905396]
[125.85846710 -484.34307861]
[132.66354370 -497.74981689]
[141.58261108 -509.85354614]
[152.37234497 -520.32403564]
[164.73838806 -528.87567139]
[178.34339905 -535.27520752]
[192.81622314 -539.34796143]
[207.76202393 -540.98284912]
[222.77307129 -540.13531494]
[237.43984985 -536.82843018]
[251.36224365 -531.15246582]
[264.16043091 -523.26220703]
[275.48529053 -513.37292480]
[285.02786255 -501.75442505]
[292.52780151 -488.72366333]
[297.78051758 -474.63610840]
[300.64270020 -459.87612915]
[301.03628540 -444.84631348]
[298.95050049 -429.95672607]
[294.44232178 -415.61358643]
[287.63464355 -402.20816040]
[278.71325684 -390.10614014]
[267.92150879 -379.63772583]
[255.55380249 -371.08847046]
[241.94757080 -364.69158936]
[227.47395325 -360.62161255]
[212.52784729 -358.98959351]
[197.51695251 -359.84002686]
[182.85081482 -363.14971924]
[177.18803406 -349.25970459]
[171.52523804 -335.36968994]
[165.86245728 -321.47964478]
[168.22242737 -306.77319336]
[155.84783936 -296.91519165]
[150.18505859 -283.02514648]
[144.52226257 -269.13513184]
[140.22813416 -254.76292419]
[137.34286499 -240.04302979]
[134.45759583 -225.32313538]
[131.79179382 -210.56192017]
[129.34606934 -195.76264954]
[131.35690308 -188.65080261]
[126.75218964 -180.76193237]
[124.08639526 -166.00071716]
[125.99111938 -158.85971069]
[121.26945496 -151.04026794]
[118.38418579 -136.32037354]
[126.88098145 -124.14089203]
[124.16459656 -109.17172241]
[111.33200836 -100.34207916]
[108.44673920 -85.62219238]
[105.56146240 -70.90229797]
[102.67619324 -56.18240738]
[101.44921875 -41.23267365]
[101.89582062 -26.23932457]
[110.00862885 -13.74806309]
[102.68564606 0.27635971]
[103.13224792 15.26970959]
[103.57885742 30.26305962]
[104.24864197 45.24810028]
[105.14145660 60.22150421]
[106.03427124 75.19490814]
[106.92708588 90.16831207]
[108.04273987 105.12677002]
[109.38097382 120.06695557]
[110.71920776 135.00714111]
[112.05744171 149.94732666]
[113.39567566 164.88751221]
[117.27822113 173.15574646]
[114.64091492 180.05982971]
[123.88719940 189.05255127]
[124.50847626 201.53445435]
[116.71643066 210.78704834]
[117.60924530 225.76045227]
[126.15422821 239.07562256]
[119.18818665 252.24085999]
[121.70675659 255.77792358]
[122.85344696 259.55279541]
[122.72196198 263.10498047]
[121.54591370 266.05178833]
[119.66138458 268.12704468]
[119.66138458 283.12704468]
[119.66138458 298.12704468]
[119.66138458 313.12704468]
[127.39868927 326.92721558]
[119.66138458 339.65447998]
[119.66138458 354.65447998]
[119.77305603 369.65405273]
[119.99638367 384.65240479]
[120.33135986 399.64865112]
[120.77796173 414.64199829]
[121.22457123 429.63534546]
[121.67117310 444.62869263]
[122.11778259 459.62207031]
[122.67599487 474.61166382]
[123.34577942 489.59671021]
[137.01339722 496.60324097]
[145.33314514 509.51361084]
[146.06704712 524.85498047]
[139.01768494 538.50054932]
[126.08131409 546.77978516]
[110.73773956 547.46557617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 204]
[5 203]
[7 202]
[8 201]
[9 200]
[10 199]
[11 198]
[13 197]
[14 196]
[16 195]
[17 194]
[19 192]
[20 191]
[21 190]
[22 189]
[23 184]
[25 182]
[26 181]
[28 178]
[29 176]
[30 175]
[31 174]
[32 173]
[33 172]
[36 171]
[37 170]
[38 169]
[39 168]
[42 167]
[43 166]
[44 165]
[46 163]
[47 162]
[63 161]
[64 160]
[65 159]
[66 158]
[69 155]
[70 154]
[71 152]
[72 151]
[73 149]
[74 148]
[77 147]
[78 146]
[79 145]
[93 144]
[94 143]
[95 142]
[97 140]
[98 139]
[99 138]
[100 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
