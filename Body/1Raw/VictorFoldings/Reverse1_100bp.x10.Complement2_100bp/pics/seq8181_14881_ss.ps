%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[80.59925842 695.59350586]
[66.62464905 690.10583496]
[53.28835678 683.21038818]
[40.73176575 674.98016357]
[29.08797264 665.50250244]
[18.48041344 654.87786865]
[9.02153301 643.21881104]
[0.81160152 630.64892578]
[-6.06235218 617.30157471]
[-11.52746010 603.31811523]
[-15.52578926 588.84686279]
[-18.01495552 574.04119873]
[-18.96857071 559.05804443]
[-18.37652588 544.05621338]
[-16.24510002 529.19482422]
[-12.59688473 514.63140869]
[-7.47055387 500.52023315]
[-0.92044955 487.01095581]
[6.98399353 474.24679565]
[16.15898323 462.36303711]
[26.50726128 451.48568726]
[37.91912842 441.73001099]
[50.27361298 433.19943237]
[63.43975067 425.98437500]
[77.27797699 420.16134644]
[91.64158630 415.79208374]
[106.37833405 412.92285156]
[105.04010010 397.98266602]
[103.70186615 383.04248047]
[102.36363220 368.10229492]
[101.02539062 353.16210938]
[86.75215912 348.77987671]
[75.21285248 339.24099731]
[68.18572998 325.97509766]
[66.76913452 310.98907471]
[71.20993042 296.56365967]
[80.86117554 284.90618896]
[94.27616119 277.81295776]
[85.43424225 265.82672119]
[91.90950012 251.39129639]
[90.57126617 236.45111084]
[89.23303223 221.51092529]
[79.68251801 233.07759094]
[64.95483398 235.92279053]
[51.78326797 228.74575806]
[46.18968582 214.82771301]
[50.73140335 200.53181458]
[63.33200073 192.39393616]
[78.23065948 194.13462830]
[88.61666870 204.95974731]
[88.83999634 189.96141052]
[89.06332397 174.96307373]
[89.17498779 159.96348572]
[89.17498779 144.96348572]
[77.83020020 154.77653503]
[62.86002731 153.83099365]
[52.84007263 142.66853333]
[53.51021576 127.68351746]
[64.48657227 117.46002960]
[79.48138428 117.85456085]
[89.90458679 128.64021301]
[91.24282074 113.70003510]
[84.32715607 104.32907867]
[85.45252991 92.73706818]
[94.04157257 84.87134552]
[95.60209656 69.95273590]
[97.16262054 55.03413391]
[94.94298553 46.17348862]
[98.85904694 39.90561676]
[100.64151764 25.01189995]
[93.00378418 8.25640583]
[104.06211090 -5.37005186]
[105.62263489 -20.28865623]
[107.18315887 -35.20726013]
[107.85294342 -50.19229889]
[107.62961578 -65.19063568]
[107.40628815 -80.18897247]
[107.18296051 -95.18730927]
[106.95963287 -110.18564606]
[106.73630524 -125.18399048]
[105.95497894 -140.16362000]
[104.61674500 -155.10380554]
[102.72345734 -169.98384094]
[100.27772522 -184.78311157]
[97.83200073 -199.58238220]
[95.38627625 -214.38165283]
[92.94054413 -229.18092346]
[90.49481964 -243.98019409]
[88.04908752 -258.77947998]
[73.04158783 -260.41574097]
[59.03248596 -266.04135132]
[47.06135941 -275.23889160]
[38.01654434 -287.32583618]
[32.56922531 -301.40521240]
[31.12363052 -316.43228149]
[33.78703308 -331.29193115]
[40.36178970 -344.88143921]
[50.36000824 -356.19241333]
[63.03975677 -364.38549805]
[77.46011353 -368.85269165]
[92.55099487 -369.26254272]
[107.19255066 -365.58456421]
[120.29828644 -358.09176636]
[130.89566040 -347.34008789]
[138.19828796 -334.12744141]
[141.66426086 -319.43426514]
[141.03639221 -304.35089111]
[136.36125183 -289.99658203]
[127.98577881 -277.43658447]
[116.53148651 -267.60287476]
[102.84835815 -261.22518921]
[105.29409027 -246.42593384]
[107.73981476 -231.62664795]
[110.18554688 -216.82737732]
[112.63127136 -202.02810669]
[115.07699585 -187.22883606]
[117.52272797 -172.42956543]
[128.24690247 -182.91728210]
[143.15095520 -181.22344971]
[151.24818420 -168.59669495]
[146.56959534 -154.34498596]
[132.56408691 -148.97416687]
[119.55693054 -156.44204712]
[120.89516449 -141.50186157]
[132.36967468 -151.16290283]
[147.10647583 -148.36523438]
[154.24212646 -135.17120361]
[148.51652527 -121.30696106]
[134.15034485 -116.99269867]
[121.73464203 -125.40731812]
[121.95796967 -110.40897369]
[122.18129730 -95.41063690]
[122.40462494 -80.41230011]
[122.62795258 -65.41396332]
[122.85128021 -50.41562653]
[132.55711365 -61.85226440]
[147.10389709 -65.51170349]
[161.06600952 -60.02905655]
[169.23594666 -47.44922638]
[168.56651306 -32.46417236]
[159.30740356 -20.66294861]
[144.91201782 -16.44712257]
[130.74951172 -21.38909149]
[122.10176086 -33.64673996]
[120.54123688 -18.72813416]
[118.98071289 -3.80952883]
[126.35183716 5.78177309]
[125.17383575 18.22348022]
[115.53523254 26.79436684]
[113.75276947 41.68808365]
[112.08122253 56.59465790]
[110.52070618 71.51325989]
[108.96018219 86.43186951]
[116.18365479 101.57114410]
[106.18300629 115.03826904]
[104.84477234 129.97845459]
[104.17498779 144.96348572]
[104.17498779 159.96348572]
[107.30439758 168.54513550]
[104.06166077 175.18640137]
[103.83833313 190.18473816]
[103.61500549 205.18307495]
[104.17321777 220.17268372]
[105.51145172 235.11286926]
[106.84968567 250.05305481]
[115.78732300 263.10791016]
[109.21634674 276.47473145]
[123.67838287 281.07092285]
[135.24775696 290.82760620]
[142.18153381 304.23419189]
[143.45080566 319.23339844]
[138.89315796 333.53698730]
[129.23278809 344.97476196]
[115.96557617 351.82388306]
[117.30381012 366.76406860]
[118.64204407 381.70425415]
[119.98028564 396.64443970]
[121.31851959 411.58462524]
[136.33058167 411.78915405]
[151.24205017 413.53619385]
[165.89485168 416.80718994]
[180.13365173 421.56750488]
[193.80752563 427.76663208]
[206.77149963 435.33889771]
[218.88816833 444.20404053]
[230.02908325 454.26803589]
[240.07614136 465.42422485]
[248.92283630 477.55435181]
[256.47540283 490.52981567]
[262.65374756 504.21310425]
[267.39239502 518.45910645]
[270.64114380 533.11688232]
[272.36550903 548.03100586]
[272.54721069 563.04333496]
[271.18435669 577.99481201]
[268.29138184 592.72692871]
[263.89895630 607.08349609]
[258.05361938 620.91229248]
[250.81736755 634.06677246]
[242.26689148 646.40747070]
[232.49281311 657.80358887]
[221.59877014 668.13433838]
[209.70024109 677.29016113]
[196.92335510 685.17401123]
[183.40354919 691.70233154]
[169.28414917 696.80590820]
[154.71481323 700.43060303]
[139.85000610 702.53808594]
[124.84729004 703.10595703]
[109.86569977 702.12817383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 178]
[28 177]
[29 176]
[30 175]
[31 174]
[38 167]
[40 165]
[41 164]
[42 163]
[50 162]
[51 161]
[52 160]
[53 158]
[54 157]
[61 156]
[62 155]
[65 153]
[66 152]
[67 151]
[69 150]
[70 149]
[72 146]
[73 145]
[74 144]
[75 135]
[76 134]
[77 133]
[78 132]
[79 131]
[80 130]
[81 124]
[82 123]
[83 117]
[84 116]
[85 115]
[86 114]
[87 113]
[88 112]
[89 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
