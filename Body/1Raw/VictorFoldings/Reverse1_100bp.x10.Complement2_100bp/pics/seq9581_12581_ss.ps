%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[95.02721405 717.84527588]
[89.20292664 703.69122314]
[90.63501740 688.45288086]
[98.99440765 675.63183594]
[112.36017609 668.17431641]
[111.91356659 653.18096924]
[111.46696472 638.18756104]
[111.02035522 623.19421387]
[102.90754700 610.70300293]
[110.23053741 596.67852783]
[109.78392792 581.68518066]
[109.33732605 566.69183350]
[108.77911377 551.70227051]
[108.10932922 536.71722412]
[97.88166809 522.45672607]
[106.50315857 506.18551636]
[105.61034393 491.21212769]
[104.71752930 476.23870850]
[96.23640442 463.99453735]
[103.13858795 449.75830078]
[102.24577332 434.78488159]
[101.35295868 419.81149292]
[89.15410614 416.72210693]
[78.29956055 410.32009888]
[69.66918945 401.11276245]
[63.96587753 389.83523560]
[61.65822601 377.39184570]
[62.94210052 364.78359985]
[67.72404480 353.02761841]
[75.62799072 343.07510376]
[86.02482605 335.73440552]
[98.08246613 331.60531616]
[97.85913849 316.60699463]
[97.63581085 301.60864258]
[97.41248322 286.61032104]
[97.18915558 271.61196899]
[82.37167358 265.99340820]
[70.81674194 255.09237671]
[64.31401062 240.55657959]
[63.88619995 224.59973145]
[69.62839508 209.66444397]
[80.68891907 198.04827881]
[95.39556885 191.55036926]
[94.94895935 176.55702209]
[94.50235748 161.56367493]
[94.05574799 146.57032776]
[85.94293976 134.07905579]
[93.26593018 120.05464172]
[92.81932068 105.06128693]
[90.78607178 102.79074097]
[89.53404236 99.73019409]
[89.35742950 96.16757202]
[90.43993378 92.49546051]
[92.81932068 89.16807556]
[93.26593018 74.17472839]
[93.60090637 59.17846680]
[93.82423401 44.18013000]
[81.57701874 34.83604431]
[77.23105621 20.24269104]
[82.25213623 6.05633259]
[94.51711273 -2.35249925]
[94.74044037 -17.35083580]
[94.96376801 -32.34917450]
[84.23617554 -43.64326859]
[84.67632294 -58.85053253]
[95.50962067 -69.00804901]
[95.73294830 -84.00638580]
[95.95627594 -99.00472260]
[95.62129974 -114.00098419]
[87.07631683 -127.31615448]
[94.04235840 -140.48139954]
[93.14954376 -155.45480347]
[92.25672913 -170.42820740]
[91.36391449 -185.40161133]
[90.47109985 -200.37501526]
[76.09696198 -209.29019165]
[69.93027496 -224.86174011]
[74.21714020 -240.88000488]
[87.07674408 -251.08332825]
[85.96109772 -266.04177856]
[84.84545135 -281.00024414]
[83.61847687 -295.94998169]
[82.28024292 -310.89016724]
[80.94200897 -325.83035278]
[79.60377502 -340.77053833]
[64.61906433 -342.04705811]
[50.08371735 -345.90646362]
[36.43945694 -352.23144531]
[24.10091209 -360.82977295]
[13.44303703 -371.44018555]
[4.78971195 -383.74023438]
[-1.59609783 -397.35614014]
[-5.52033472 -411.87408447]
[-6.86374617 -426.85296631]
[-5.58550644 -441.83752441]
[-1.72446048 -456.37243652]
[4.60205936 -470.01596069]
[13.20179653 -482.35354614]
[23.81341553 -493.01022339]
[36.11444092 -501.66213989]
[49.73106003 -508.04641724]
[64.24947357 -511.96899414]
[79.22849274 -513.31072998]
[94.21291351 -512.03076172]
[108.74737549 -508.16809082]
[122.39020538 -501.84002686]
[134.72679138 -493.23889160]
[145.38226318 -482.62603760]
[154.03280640 -470.32403564]
[160.41552734 -456.70669556]
[164.33647156 -442.18783569]
[165.67648315 -427.20867920]
[164.39483643 -412.22439575]
[160.53050232 -397.69036865]
[154.20088196 -384.04824829]
[145.59835815 -371.71264648]
[134.98431396 -361.05838013]
[122.68132782 -352.40924072]
[109.06326294 -346.02807617]
[94.54396057 -342.10876465]
[95.88219452 -327.16857910]
[97.22042847 -312.22839355]
[98.55866241 -297.28820801]
[102.28636932 -290.90652466]
[99.80390167 -282.11587524]
[100.91955566 -267.15744019]
[102.03520203 -252.19898987]
[113.99253082 -246.26060486]
[121.51447296 -235.09974670]
[122.54758453 -221.57191467]
[116.71538544 -209.20243835]
[105.44450378 -201.26783752]
[106.33731842 -186.29443359]
[107.23013306 -171.32102966]
[108.12294769 -156.34761047]
[109.01576996 -141.37420654]
[117.49688721 -129.13003540]
[110.59471130 -114.89379883]
[122.35177612 -124.20891571]
[136.99873352 -120.97372437]
[143.73840332 -107.57308960]
[137.60253906 -93.88546753]
[123.11427307 -90.00085449]
[110.95462036 -98.78139496]
[110.73128510 -83.78305817]
[110.50795746 -68.78472137]
[121.03403473 -58.30916214]
[121.02120209 -43.09553146]
[109.96210480 -32.12584686]
[109.73877716 -17.12750816]
[109.51544952 -2.12917137]
[121.52462006 6.64110661]
[126.12109375 20.97067070]
[121.34256744 35.42816162]
[108.82257080 44.40345764]
[108.59924316 59.40179443]
[111.64280701 66.13666534]
[108.25927734 74.62133026]
[107.81267548 89.61468506]
[107.81267548 104.61468506]
[108.25927734 119.60803223]
[116.40402985 133.17172241]
[109.04910278 146.12371826]
[109.49570465 161.11706543]
[109.94231415 176.11041260]
[110.38891602 191.10375977]
[123.84590149 195.76860046]
[134.87916565 204.72784424]
[142.17625427 216.88949585]
[144.87811279 230.78218079]
[142.68019104 244.73321533]
[135.86665344 257.06997681]
[125.27381897 266.32037354]
[112.18749237 271.38864136]
[112.41082001 286.38699341]
[112.63414764 301.38531494]
[112.85747528 316.38366699]
[113.08080292 331.38198853]
[129.56156921 337.49029541]
[142.40693665 349.43536377]
[149.66535950 365.36544800]
[150.24827576 382.82623291]
[144.09338379 399.13897705]
[132.16996765 411.81143188]
[116.32636261 418.91867065]
[117.21917725 433.89208984]
[118.11199188 448.86547852]
[126.65697479 462.18066406]
[119.69093323 475.34588623]
[120.58374786 490.31930542]
[121.47657013 505.29269409]
[130.58793640 514.42211914]
[131.02330017 526.91186523]
[123.09436798 536.04742432]
[123.76415253 551.03247070]
[127.27362823 559.46582031]
[124.33067322 566.24523926]
[124.77727509 581.23858643]
[125.22388458 596.23193359]
[133.36863708 609.79565430]
[126.01370239 622.74761963]
[126.46031189 637.74096680]
[126.90691376 652.73431396]
[127.35352325 667.72766113]
[141.13946533 674.37646484]
[150.24716187 686.67718506]
[152.58372498 701.80334473]
[147.61221313 716.27893066]
[136.47506714 726.77758789]
[121.73151398 730.88684082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 204]
[6 203]
[7 202]
[8 201]
[10 199]
[11 198]
[12 197]
[13 195]
[14 194]
[16 191]
[17 190]
[18 189]
[20 187]
[21 186]
[22 185]
[32 178]
[33 177]
[34 176]
[35 175]
[36 174]
[43 166]
[44 165]
[45 164]
[46 163]
[48 161]
[49 160]
[54 159]
[55 158]
[56 156]
[57 155]
[61 151]
[62 150]
[63 149]
[66 146]
[67 145]
[68 144]
[69 138]
[71 136]
[72 135]
[73 134]
[74 133]
[75 132]
[79 127]
[80 126]
[81 125]
[82 123]
[83 122]
[84 121]
[85 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
