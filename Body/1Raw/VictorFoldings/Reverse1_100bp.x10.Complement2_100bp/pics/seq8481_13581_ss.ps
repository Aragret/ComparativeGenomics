%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[23.05074692 640.84008789]
[17.47048569 626.88275146]
[14.14245510 612.22424316]
[13.14861202 597.22564697]
[14.51342964 582.25622559]
[18.20329857 567.68463135]
[24.12735367 553.86968994]
[32.13970947 541.15167236]
[42.04304886 529.84368896]
[53.59350204 520.22424316]
[66.50662231 512.53021240]
[80.46441650 506.95111084]
[77.14215851 492.32366943]
[73.81990051 477.69619751]
[71.04730988 475.51788330]
[69.19206238 471.88839722]
[68.92471313 467.25357056]
[70.69136810 462.34173584]
[68.02557373 447.58050537]
[65.35977936 432.81930542]
[62.69398117 418.05807495]
[60.02818680 403.29687500]
[57.36239243 388.53564453]
[50.80636597 402.02706909]
[38.43862534 410.51464844]
[23.49207115 411.77975464]
[9.87369442 405.49169922]
[1.14330542 393.29412842]
[-0.41699204 378.37551880]
[5.60065985 364.63549805]
[17.62326241 355.66571045]
[32.50813293 353.81082153]
[46.36440659 359.55572510]
[55.56973648 371.39785767]
[55.12313080 356.40451050]
[54.67652512 341.41116333]
[54.22991943 326.41781616]
[53.78331375 311.42446899]
[53.33670807 296.43109131]
[46.82669830 309.94479370]
[36.66677475 320.98001099]
[23.73586464 328.58209229]
[9.15262604 332.09338379]
[-5.82134628 331.21011353]
[-19.89065361 326.00872803]
[-31.83816147 316.93914795]
[-40.63029099 304.78601074]
[-45.50643158 290.60070801]
[-46.04475403 275.61035156]
[-42.19868469 261.11181641]
[-34.30094528 248.35934448]
[-23.03477097 238.45614624]
[-9.37480068 232.25895691]
[5.49724436 230.30387878]
[20.29478264 232.76007080]
[33.73767853 239.41503906]
[44.66298676 249.69305420]
[52.12556076 262.70498657]
[55.47953796 277.32162476]
[59.23583984 262.79956055]
[62.99213791 248.27751160]
[66.74844360 233.75544739]
[70.17950439 219.15312195]
[73.28360748 204.47782898]
[76.16888428 189.75793457]
[78.83467865 174.99671936]
[81.50047302 160.23548889]
[84.16626740 145.47427368]
[86.83206177 130.71305847]
[89.49786377 115.95184326]
[81.32261658 103.98892212]
[83.89768982 89.73005676]
[95.74092102 81.38236237]
[89.04120636 70.36071777]
[91.56544495 58.12094498]
[101.42625427 51.11444473]
[96.48792267 36.08369446]
[106.52884674 25.08237076]
[109.41412354 10.36248016]
[112.29939270 -4.35741186]
[115.18466187 -19.07730293]
[101.20176697 -26.27575111]
[89.82112885 -37.10920715]
[81.95753479 -50.69560242]
[78.23984528 -65.93206024]
[78.96080017 -81.58438873]
[84.05392456 -96.38710785]
[93.09957886 -109.14572144]
[105.35952759 -118.83310699]
[119.83719635 -124.67221832]
[135.35865784 -126.19841003]
[138.02445984 -140.95962524]
[140.69024658 -155.72084045]
[143.24607849 -170.50149536]
[145.69180298 -185.30076599]
[148.02729797 -200.11784363]
[150.25241089 -214.95188904]
[152.47752380 -229.78593445]
[154.70265198 -244.61996460]
[140.86457825 -250.63414001]
[129.05520630 -260.02569580]
[120.07972717 -272.15429688]
[114.55010223 -286.19302368]
[112.84334564 -301.18466187]
[115.07582855 -316.10708618]
[121.09533691 -329.94284058]
[130.49143982 -341.74856567]
[142.62351990 -350.71936035]
[156.66436768 -356.24356079]
[171.65667725 -357.94454956]
[186.57823181 -355.70629883]
[200.41165161 -349.68145752]
[212.21376038 -340.28076172]
[221.17987061 -328.14523315]
[226.69865417 -314.10226440]
[228.39384460 -299.10928345]
[226.14982605 -284.18859863]
[220.11964417 -270.35751343]
[210.71441650 -258.55902100]
[198.57542419 -249.59761047]
[184.53030396 -244.08424377]
[169.53669739 -242.39485168]
[167.31156921 -227.56080627]
[165.08645630 -212.72676086]
[162.86134338 -197.89273071]
[164.97782898 -190.81159973]
[160.49107361 -182.85504150]
[158.04534912 -168.05577087]
[160.05618286 -160.94392395]
[155.45146179 -153.05505371]
[152.78567505 -138.29383850]
[150.11987305 -123.53261566]
[163.06500244 -117.37868500]
[173.98254395 -108.07265472]
[182.12265015 -96.24547577]
[186.92402649 -82.70151520]
[188.05276489 -68.36392212]
[185.42550659 -54.21162415]
[179.21551514 -41.21256256]
[169.84135437 -30.25745583]
[157.93862915 -22.09876251]
[144.31687927 -17.29901505]
[129.90455627 -16.19202995]
[127.01928711 -1.47213900]
[124.13401031 13.24775219]
[121.24874115 27.96764374]
[126.39344025 41.94552994]
[116.14614868 53.99971771]
[122.71979523 70.27098083]
[110.50213623 84.04815674]
[118.67738342 96.01107788]
[116.10231018 110.26994324]
[104.25907898 118.61763763]
[101.59328461 133.37886047]
[98.92749023 148.14007568]
[96.26168823 162.90129089]
[93.59589386 177.66250610]
[90.93009949 192.42372131]
[92.80258942 198.76449585]
[91.40203857 204.27226257]
[87.95891571 207.58192444]
[84.85480499 222.25723267]
[86.47443390 227.21948242]
[86.06920624 231.84431458]
[84.10671997 235.41694641]
[81.27050018 237.51174927]
[77.51419830 252.03381348]
[73.75789642 266.55587769]
[70.00159454 281.07791138]
[68.33005524 295.98449707]
[68.77666473 310.97784424]
[69.22326660 325.97119141]
[69.66987610 340.96453857]
[70.11647797 355.95788574]
[70.56308746 370.95126343]
[72.12361145 385.86984253]
[74.78940582 400.63107300]
[77.45520020 415.39230347]
[80.12099457 430.15350342]
[82.78678894 444.91473389]
[85.45258331 459.67593384]
[88.44735718 474.37393188]
[91.76962280 489.00140381]
[95.09188080 503.62887573]
[110.09025574 502.63131714]
[125.06002045 503.99243164]
[139.63253784 507.67868042]
[153.44891357 513.59930420]
[166.16894531 521.60852051]
[177.47937012 531.50909424]
[187.10166931 543.05712891]
[194.79887390 555.96838379]
[200.38143921 569.92474365]
[203.71188354 584.58270264]
[204.70820618 599.58117676]
[203.34585571 614.55078125]
[199.65838623 629.12298584]
[193.73661804 642.93890381]
[185.72636414 655.65826416]
[175.82489014 666.96789551]
[164.27601624 676.58923340]
[151.36416626 684.28533936]
[137.40728760 689.86676025]
[122.74909973 693.19598389]
[107.75055695 694.19110107]
[92.78101349 692.82751465]
[78.20912170 689.13885498]
[64.39370728 683.21594238]
[51.67500305 675.20465088]
[40.36621094 665.30224609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 184]
[13 183]
[14 182]
[18 181]
[19 180]
[20 179]
[21 178]
[22 177]
[23 176]
[34 175]
[35 174]
[36 173]
[37 172]
[38 171]
[39 170]
[59 169]
[60 168]
[61 167]
[62 166]
[63 162]
[64 161]
[65 158]
[66 157]
[67 156]
[68 155]
[69 154]
[70 153]
[73 150]
[76 148]
[78 146]
[79 145]
[80 144]
[81 143]
[91 132]
[92 131]
[93 130]
[94 128]
[95 127]
[96 125]
[97 124]
[98 123]
[99 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
