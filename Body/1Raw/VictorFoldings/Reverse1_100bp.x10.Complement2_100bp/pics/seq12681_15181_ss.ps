%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[208.28863525 501.19699097]
[217.16049194 489.03210449]
[228.36796570 478.97793579]
[241.42109680 471.47396851]
[236.80708313 457.20126343]
[232.19306946 442.92852783]
[227.57907104 428.65579224]
[222.33235168 414.60330200]
[216.46337891 400.79913330]
[210.59442139 386.99496460]
[196.72810364 381.67886353]
[190.57949829 367.76306152]
[196.24954224 353.25485229]
[190.38056946 339.45065308]
[184.51161194 325.64648438]
[178.64265442 311.84231567]
[172.77369690 298.03814697]
[166.69985962 284.32287598]
[160.42250061 270.69955444]
[146.40405273 265.79867554]
[139.84384155 252.07211304]
[145.07939148 237.40150452]
[138.80203247 223.77818298]
[132.52467346 210.15486145]
[126.24731445 196.53155518]
[119.96995544 182.90823364]
[115.72635651 197.29544067]
[103.90728760 206.53176880]
[88.92096710 207.17227173]
[76.35692596 198.97808838]
[70.90123749 185.00541687]
[74.58873749 170.46572876]
[86.04408264 160.78198242]
[100.99471283 159.56594849]
[113.86518097 167.27207947]
[109.25116730 152.99934387]
[104.63716125 138.72662354]
[100.02315521 124.45388794]
[95.40914154 110.18115234]
[90.68901062 95.94316101]
[85.86301422 81.74070740]
[81.03701019 67.53825378]
[74.75965118 53.91493607]
[67.09905243 41.01860809]
[59.43845749 28.12228012]
[51.77786255 15.22595406]
[44.11726379 2.32962704]
[36.45666504 -10.56669998]
[21.40425873 -14.57454205]
[13.81903648 -27.76237869]
[17.73266411 -42.08784866]
[4.03264332 -50.00112915]
[4.18492651 -64.89495850]
[-3.47567105 -77.79128265]
[-11.13626862 -90.68760681]
[-18.79686546 -103.58393860]
[-32.49688721 -111.49721527]
[-32.34460449 -126.39104462]
[-40.00519943 -139.28736877]
[-47.07842636 -145.06727600]
[-47.68220520 -152.43322754]
[-55.14994812 -165.44218445]
[-62.61768723 -178.45112610]
[-76.46309662 -172.63009644]
[-90.91890717 -168.55467224]
[-105.76598358 -166.28663635]
[-120.77923584 -165.86036682]
[-135.73107910 -167.28233337]
[-150.39485168 -170.53096008]
[-164.54823303 -175.55702209]
[-177.97668457 -182.28431702]
[-190.47660828 -190.61085510]
[-201.85853577 -200.41041565]
[-211.94990540 -211.53443909]
[-220.59773254 -223.81428528]
[-227.67092896 -237.06379700]
[-233.06225586 -251.08212280]
[-236.69000244 -265.65673828]
[-238.49914551 -280.56668091]
[-238.46226501 -295.58593750]
[-236.57994080 -310.48681641]
[-232.88067627 -325.04345703]
[-227.42057800 -339.03512573]
[-220.28240967 -352.24972534]
[-211.57438660 -364.48696899]
[-201.42852783 -375.56130981]
[-189.99862671 -385.30487061]
[-177.45794678 -393.56994629]
[-163.99664307 -400.23120117]
[-149.81874084 -405.18771362]
[-135.13920593 -408.36431885]
[-120.18055725 -409.71282959]
[-105.16957855 -409.21286011]
[-90.33381653 -406.87194824]
[-75.89818573 -402.72558594]
[-62.08153152 -396.83663940]
[-49.09330368 -389.29440308]
[-37.13040543 -380.21316528]
[-26.37418365 -369.73065186]
[-16.98770714 -358.00573730]
[-9.11327076 -345.21615601]
[-2.87024689 -331.55584717]
[1.64672005 -317.23187256]
[4.36915445 -302.46136475]
[5.25578451 -287.46823120]
[4.29316998 -272.47979736]
[1.49590290 -257.72329712]
[-3.09361029 -243.42237854]
[-9.40579414 -229.79388428]
[-17.34495735 -217.04440308]
[-26.79074287 -205.36721802]
[-37.59995651 -194.93934631]
[-49.60873413 -185.91886902]
[-42.14099503 -172.90991211]
[-34.67325211 -159.90097046]
[-27.10887527 -146.94796753]
[-19.44827652 -134.05163574]
[-6.29619312 -127.06079102]
[-5.90053892 -111.24453735]
[1.76005852 -98.34820557]
[9.42065620 -85.45188141]
[17.08125305 -72.55555725]
[30.23333740 -65.56470490]
[30.62899208 -49.74844742]
[45.08123398 -46.33255768]
[53.03388214 -33.36297607]
[49.35299301 -18.22729683]
[57.01359177 -5.33097029]
[64.67418671 7.56535625]
[72.33478546 20.46168327]
[79.99538422 33.35800934]
[87.65598297 46.25433731]
[87.60803223 31.25441360]
[93.23278809 17.34894180]
[103.69584656 6.60071754]
[117.44508362 0.60417420]
[132.44087219 0.24886374]
[146.45867920 5.58749437]
[157.41905212 15.82811260]
[163.69607544 29.45158195]
[164.35859680 44.43694305]
[159.30833435 58.56120682]
[149.29446411 69.72912598]
[135.80247498 76.28399658]
[120.83383942 77.25344849]
[106.60905457 72.49367523]
[95.23947144 62.71225357]
[100.06546783 76.91471100]
[104.89146423 91.11716461]
[110.26045227 97.12936401]
[109.68187714 105.56713867]
[114.29588318 119.83987427]
[118.90989685 134.11260986]
[123.52390289 148.38534546]
[128.13790894 162.65808105]
[133.59327698 176.63087463]
[139.87063599 190.25419617]
[146.14799500 203.87750244]
[152.42535400 217.50082397]
[158.70271301 231.12413025]
[173.25648499 236.67620850]
[179.42855835 250.58160400]
[174.04580688 264.42218018]
[180.32318115 278.04550171]
[185.49223328 282.16769409]
[187.50189209 287.48352051]
[186.57786560 292.16918945]
[192.44682312 305.97335815]
[198.31579590 319.77752686]
[204.18475342 333.58169556]
[210.05371094 347.38589478]
[224.43572998 353.36880493]
[230.19104004 367.45181274]
[224.39860535 381.12600708]
[230.26756287 394.93017578]
[236.13652039 408.73434448]
[242.73739624 395.26480103]
[256.88406372 390.27767944]
[270.47268677 396.62979126]
[275.71908569 410.68240356]
[269.61785889 424.38549805]
[255.66409302 429.88934326]
[241.85179138 424.04177856]
[246.46580505 438.31451416]
[251.07981873 452.58724976]
[255.69383240 466.85998535]
[270.66946411 465.30294800]
[285.64151001 466.89395142]
[299.95547485 471.56344604]
[312.98559570 479.10726929]
[324.16229248 489.19564819]
[332.99691772 501.38757324]
[339.10330200 515.15002441]
[342.21444702 529.88146973]
[342.19439697 544.93780518]
[339.04403687 559.66082764]
[332.90103149 573.40704346]
[324.03396606 585.57537842]
[312.83044434 595.63397217]
[299.78027344 603.14306641]
[285.45391846 607.77441406]
[270.47769165 609.32550049]
[255.50625610 607.72863770]
[241.19412231 603.05352783]
[228.16696167 595.50457764]
[216.99424744 585.41180420]
[208.16441345 573.21643066]
[202.06344604 559.45153809]
[198.95808411 544.71887207]
[198.98405457 529.66253662]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 186]
[5 185]
[6 184]
[7 183]
[8 176]
[9 175]
[10 174]
[13 171]
[14 170]
[15 169]
[16 168]
[17 167]
[18 164]
[19 163]
[22 160]
[23 159]
[24 158]
[25 157]
[26 156]
[35 155]
[36 154]
[37 153]
[38 152]
[39 151]
[40 149]
[41 148]
[42 147]
[43 132]
[44 131]
[45 130]
[46 129]
[47 128]
[48 127]
[51 124]
[53 122]
[54 121]
[55 120]
[56 119]
[58 117]
[59 116]
[61 115]
[62 114]
[63 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
