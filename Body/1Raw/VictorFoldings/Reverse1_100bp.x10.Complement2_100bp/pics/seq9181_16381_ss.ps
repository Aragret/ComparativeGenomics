%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[106.78292084 578.19708252]
[93.00273895 584.34277344]
[78.10134125 586.71148682]
[63.09473419 585.14172363]
[49.00608444 579.74060059]
[36.79598236 570.87628174]
[27.29693413 559.15319824]
[21.15660095 545.37066650]
[18.79364204 530.46838379]
[20.36916351 515.46234131]
[25.77574730 501.37579346]
[34.64476395 489.16909790]
[46.37150574 479.67459106]
[60.15642929 473.53958130]
[75.05964661 471.18237305]
[76.62017059 456.26376343]
[78.18069458 441.34515381]
[79.74121857 426.42654419]
[80.85686493 411.46810913]
[81.52664948 396.48306274]
[82.19643402 381.49801636]
[82.86621857 366.51300049]
[83.53601074 351.52795410]
[76.37472534 338.46789551]
[84.72052002 325.02697754]
[85.39030457 310.04193115]
[86.06008911 295.05688477]
[83.21839905 288.23437500]
[86.85304260 279.85421753]
[76.80522919 268.91909790]
[77.49736786 253.72120667]
[89.03526306 243.25628662]
[89.92807770 228.28286743]
[90.70939636 213.30323792]
[91.37918854 198.31819153]
[82.46456909 183.20210266]
[92.50332642 167.76496887]
[92.94993591 152.77162170]
[93.06159973 137.77203369]
[92.83827209 122.77369690]
[80.85852814 114.26659393]
[76.12940216 100.35543823]
[80.44224548 86.30963898]
[92.16339111 77.44963074]
[91.94006348 62.45129395]
[91.71673584 47.45295334]
[81.03630066 39.24668503]
[77.08988953 26.57244682]
[81.10430908 14.12389278]
[91.40071869 6.37704992]
[91.40071869 -8.62294960]
[79.01573944 -17.78365517]
[74.45298767 -32.31068802]
[79.26229858 -46.57023239]
[91.40071869 -55.16073608]
[91.40071869 -70.16073608]
[83.66341400 -83.96090698]
[91.40071869 -96.68817902]
[91.40071869 -111.68817902]
[81.82602692 -127.41735840]
[91.18675232 -142.26133728]
[90.96342468 -157.25967407]
[90.74009705 -172.25801086]
[90.51676941 -187.25634766]
[89.06735229 -202.18615723]
[86.40155792 -216.94737244]
[83.73576355 -231.70858765]
[81.06996918 -246.46980286]
[78.40417480 -261.23101807]
[75.73837280 -275.99224854]
[71.13365936 -283.88113403]
[73.14449310 -290.99295044]
[70.69876099 -305.79223633]
[68.25303650 -320.59149170]
[63.80977249 -306.26470947]
[55.85486603 -293.54779053]
[44.91593933 -283.28427124]
[31.71853065 -276.15487671]
[17.13797569 -272.63244629]
[2.14135075 -272.95065308]
[-12.27667141 -277.08837891]
[-25.15979576 -284.77114868]
[-35.65353012 -295.48944092]
[-43.06186295 -308.53231812]
[-46.89342880 -323.03469849]
[-46.89408875 -338.03469849]
[-43.06380081 -352.53741455]
[-35.65661621 -365.58093262]
[-25.16382790 -376.30014038]
[-12.28138065 -383.98406982]
[2.13627648 -388.12304688]
[17.13287354 -388.44256592]
[31.71373749 -384.92141724]
[44.91177750 -377.79318237]
[55.85160828 -367.53063965]
[63.80763245 -354.81442261]
[68.25303650 -340.48297119]
[70.69876099 -355.28222656]
[73.14449310 -370.08151245]
[59.34002304 -376.15499878]
[47.48017883 -385.47137451]
[38.31047440 -397.44500732]
[32.40732574 -411.32318115]
[30.14181328 -426.23352051]
[31.65634537 -441.23873901]
[36.85571671 -455.39562988]
[45.41309357 -467.81423950]
[56.79055405 -477.71395874]
[70.27289581 -484.47247314]
[85.01260376 -487.66488647]
[100.08313751 -487.09060669]
[114.53714752 -482.78567505]
[127.46604156 -475.02072144]
[138.05709839 -464.28384399]
[145.64456177 -451.25000000]
[149.75144958 -436.73846436]
[150.11964417 -421.66149902]
[146.72596741 -406.96682739]
[139.78375244 -393.57815552]
[129.72941589 -382.33709717]
[117.19494629 -373.95031738]
[102.96829987 -368.94500732]
[87.94376373 -367.63577271]
[85.49803162 -352.83651733]
[83.05230713 -338.03723145]
[83.05230713 -323.03723145]
[85.49803162 -308.23797607]
[87.94376373 -293.43869019]
[90.49959564 -278.65805054]
[93.16539001 -263.89682007]
[95.83118439 -249.13560486]
[98.49697876 -234.37438965]
[101.16277313 -219.61317444]
[103.82856750 -204.85194397]
[109.95024109 -218.54592896]
[121.67729950 -227.89880371]
[136.38989258 -230.82110596]
[150.80117798 -226.65998840]
[161.69163513 -216.34506226]
[166.62832642 -202.18069458]
[164.50837708 -187.33125305]
[155.80537415 -175.11415100]
[142.46360779 -168.25869751]
[127.46365356 -168.29643250]
[114.15653992 -175.21891785]
[105.51510620 -187.47967529]
[105.73843384 -172.48133850]
[105.96176147 -157.48300171]
[106.18508911 -142.48466492]
[114.64373779 -133.83723450]
[114.95253754 -121.34370422]
[106.40071869 -111.68817902]
[106.40071869 -96.68817902]
[114.13801575 -83.96090698]
[106.40071869 -70.16073608]
[106.40071869 -55.16073608]
[118.53913116 -46.57023239]
[123.34844208 -32.31068802]
[118.78569031 -17.78365517]
[106.40071869 -8.62294960]
[106.40071869 6.37704992]
[118.78997040 17.75004768]
[119.12705994 34.90234375]
[106.71507263 47.22962570]
[106.93840027 62.22796631]
[107.16172791 77.22630310]
[119.14147186 85.73340607]
[123.87059784 99.64456177]
[119.55775452 113.69036102]
[107.83660889 122.55036926]
[108.05993652 137.54870605]
[110.73840332 142.02899170]
[111.36756134 146.62870789]
[110.24509430 150.54727173]
[107.94328308 153.21823120]
[107.49668121 168.21157837]
[115.75723267 178.11743164]
[115.07658386 190.59623718]
[106.36422729 198.98797607]
[105.69443512 213.97302246]
[108.43753815 222.68583679]
[104.90148163 229.17568970]
[104.00866699 244.14909363]
[114.22125244 255.91093445]
[113.10250854 271.08337402]
[101.82645416 280.74703979]
[101.04512787 295.72668457]
[100.37534332 310.71170044]
[99.70555878 325.69674683]
[106.81893158 339.82864380]
[98.52104950 352.19772339]
[97.85125732 367.18276978]
[97.18147278 382.16781616]
[96.51168823 397.15286255]
[95.84190369 412.13787842]
[97.97882843 415.91778564]
[98.72657776 419.79144287]
[98.22625732 423.31069946]
[96.75002289 426.11914062]
[94.65982056 427.98709106]
[93.09929657 442.90570068]
[91.53878021 457.82427979]
[89.97825623 472.74288940]
[104.07106781 478.13314819]
[116.28800964 486.98803711]
[125.79611206 498.70376587]
[131.94708252 512.48156738]
[134.32154846 527.38208008]
[132.75761414 542.38928223]
[127.36191559 556.47998047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 203]
[16 202]
[17 201]
[18 200]
[19 195]
[20 194]
[21 193]
[22 192]
[23 191]
[25 189]
[26 188]
[27 187]
[29 186]
[32 183]
[33 182]
[34 180]
[35 179]
[37 176]
[38 175]
[39 171]
[40 170]
[44 166]
[45 165]
[46 164]
[50 161]
[51 160]
[55 156]
[56 155]
[58 153]
[59 152]
[61 149]
[62 148]
[63 147]
[64 146]
[65 134]
[66 133]
[67 132]
[68 131]
[69 130]
[70 129]
[72 128]
[73 127]
[74 126]
[97 125]
[98 124]
[99 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
