%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[160.88414001 439.43563843]
[152.40493774 427.05725098]
[144.63963318 414.21896362]
[137.61308289 400.96194458]
[131.34782410 387.32861328]
[125.86389160 373.36267090]
[121.17887878 359.10882568]
[117.30777740 344.61276245]
[114.26299286 329.92092896]
[112.05428314 315.08032227]
[110.68872070 300.13858032]
[110.17067719 285.14346313]
[110.50180817 270.14309692]
[111.68106842 255.18547058]
[113.70466614 240.31851196]
[116.56611633 225.58985901]
[120.25627136 211.04667664]
[124.76329041 196.73556519]
[130.07275391 182.70236206]
[136.16763306 168.99201965]
[143.02842712 155.64845276]
[150.63313293 142.71440125]
[138.15333557 134.39245605]
[125.67354584 126.07051849]
[113.19375610 117.74857330]
[100.71395874 109.42662811]
[95.47112274 109.26358032]
[90.69284058 106.17467499]
[87.99156952 100.66648865]
[75.76508331 91.97666931]
[63.53860092 83.28684235]
[51.31211472 74.59702301]
[39.08562851 65.90719604]
[26.85914230 57.21736908]
[17.23205185 68.73054504]
[6.73131990 79.45289612]
[-4.57831287 89.31829834]
[-16.62711716 98.26595306]
[-29.34080887 106.24066925]
[-42.64099884 113.19329834]
[-56.44569016 119.08096313]
[-70.66976929 123.86736298]
[-85.22554016 127.52299500]
[-100.02325439 130.02532959]
[-114.97168732 131.35891724]
[-129.97866821 131.51553345]
[-144.95169067 130.49424744]
[-159.79840088 128.30131531]
[-174.42730713 124.95028687]
[-188.74818420 120.46180725]
[-202.67276001 114.86354828]
[-216.11515808 108.19004059]
[-228.99253845 100.48241425]
[-241.22546387 91.78819275]
[-252.73854065 82.16098785]
[-263.46078491 71.66014099]
[-273.32608032 60.35041046]
[-282.27359009 48.30151367]
[-290.24819946 35.58774185]
[-297.20068359 22.28747940]
[-303.08819580 8.48272800]
[-307.87445068 -5.74139977]
[-311.52993774 -20.29720688]
[-314.03213501 -35.09495163]
[-315.36557007 -50.04339600]
[-315.52203369 -65.05038452]
[-314.50057983 -80.02338409]
[-312.30749512 -94.87007904]
[-308.95632935 -109.49894714]
[-304.46768188 -123.81977844]
[-298.86929321 -137.74429321]
[-292.19564819 -151.18663025]
[-284.48788452 -164.06391907]
[-275.79354858 -176.29676819]
[-266.16622925 -187.80975342]
[-255.66526794 -198.53187561]
[-244.35543823 -208.39704895]
[-232.30645752 -217.34445190]
[-219.59259033 -225.31892395]
[-206.29226685 -232.27127075]
[-192.48745728 -238.15866089]
[-178.26327515 -242.94476318]
[-163.70742798 -246.60011292]
[-148.90966797 -249.10212708]
[-133.96119690 -250.43540955]
[-118.95421600 -250.59173584]
[-103.98122406 -249.57012939]
[-89.13455200 -247.37690735]
[-74.50572205 -244.02557373]
[-60.18492889 -239.53680420]
[-46.26047516 -233.93826294]
[-32.81820297 -227.26446533]
[-19.94099236 -219.55657959]
[-7.70823669 -210.86212158]
[3.80464435 -201.23466492]
[14.52666950 -190.73361206]
[24.39173126 -179.42367554]
[33.33901215 -167.37460327]
[41.31334305 -154.66065979]
[48.26556015 -141.36026001]
[54.15280151 -127.55538940]
[58.93877029 -113.33116150]
[62.59395599 -98.77527618]
[65.09582520 -83.97748566]
[66.42895508 -69.02900696]
[66.58512878 -54.02202225]
[65.56336975 -39.04904175]
[63.36999130 -24.20238686]
[60.01851273 -9.57359219]
[55.52959061 4.74715185]
[49.93091202 18.67155075]
[43.25698853 32.11375427]
[35.54896545 44.99088669]
[47.77545166 53.68070984]
[60.00193787 62.37053299]
[72.22842407 71.06035614]
[84.45491028 79.75018311]
[96.68139648 88.44001007]
[109.03590393 96.94683075]
[121.51570129 105.26877594]
[133.99549866 113.59072113]
[146.47528076 121.91266632]
[158.95507812 130.23460388]
[167.97207642 118.24232483]
[177.65309143 106.77938080]
[187.96713257 95.88250732]
[198.88113403 85.58660126]
[210.36015320 75.92464447]
[222.36741638 66.92759705]
[234.86445618 58.62427139]
[247.81124878 51.04126740]
[261.16629028 44.20287323]
[274.88684082 38.13100052]
[288.92895508 32.84509277]
[303.24758911 28.36208534]
[317.79693604 24.69634056]
[332.53039551 21.85959816]
[347.40069580 19.86094475]
[362.36029053 18.70678520]
[377.36120605 18.40081596]
[392.35540771 18.94401550]
[407.29486084 20.33464622]
[422.13171387 22.56825066]
[436.81845093 25.63767624]
[451.30798340 29.53308868]
[465.55395508 34.24201202]
[479.51068115 39.74935913]
[493.13348389 46.03749084]
[506.37869263 53.08626556]
[519.20391846 60.87310028]
[531.56805420 69.37305450]
[543.43151855 78.55889130]
[554.75628662 88.40119934]
[565.50610352 98.86843872]
[575.64648438 109.92709351]
[585.14495850 121.54172516]
[593.97113037 133.67512512]
[602.09674072 146.28845215]
[609.49572754 159.34127808]
[616.14440918 172.79179382]
[622.02148438 186.59690857]
[627.10809326 200.71241760]
[631.38800049 215.09309387]
[634.84741211 229.69287109]
[637.47534180 244.46498108]
[639.26330566 259.36212158]
[640.20556641 274.33651733]
[640.29919434 289.34027100]
[639.54382324 304.32528687]
[637.94183350 319.24356079]
[635.49847412 334.04730225]
[632.22143555 348.68911743]
[628.12133789 363.12207031]
[623.21124268 377.29995728]
[617.50689697 391.17733765]
[611.02655029 404.70974731]
[603.79101562 417.85388184]
[595.82342529 430.56759644]
[587.14929199 442.81018066]
[577.79644775 454.54244995]
[567.79486084 465.72674561]
[557.17651367 476.32730103]
[545.97540283 486.31015015]
[534.22747803 495.64328003]
[521.97039795 504.29684448]
[509.24331665 512.24310303]
[496.08706665 519.45660400]
[482.54379272 525.91418457]
[468.65686035 531.59527588]
[454.47076416 536.48156738]
[440.03094482 540.55749512]
[425.38366699 543.80993652]
[410.57583618 546.22845459]
[395.65490723 547.80535889]
[380.66864014 548.53564453]
[365.66506958 548.41687012]
[350.69226074 547.44946289]
[335.79815674 545.63647461]
[321.03045654 542.98376465]
[306.43649292 539.49987793]
[292.06301880 535.19586182]
[277.95608521 530.08557129]
[264.16082764 524.18536377]
[250.72149658 517.51416016]
[237.68110657 510.09326172]
[225.08143616 501.94650269]
[212.96284485 493.09997559]
[201.36416626 483.58200073]
[190.32254028 473.42306519]
[179.87335205 462.65573120]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 123]
[23 122]
[24 121]
[25 120]
[26 119]
[29 118]
[30 117]
[31 116]
[32 115]
[33 114]
[34 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
