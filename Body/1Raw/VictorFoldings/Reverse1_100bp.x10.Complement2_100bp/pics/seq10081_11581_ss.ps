%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[145.59712219 490.49368286]
[154.38903809 478.26599121]
[165.60430908 468.21453857]
[178.71835327 460.80941772]
[174.31735229 446.46957397]
[169.91635132 432.12973022]
[165.51535034 417.78988647]
[161.11436462 403.45001221]
[156.60673523 389.14334106]
[151.99272156 374.87060547]
[147.37870789 360.59786987]
[142.65856934 346.35989380]
[137.83258057 332.15744019]
[134.02056885 329.28036499]
[131.97543335 323.97805786]
[133.08117676 317.45968628]
[128.68017578 303.11984253]
[124.27918243 288.77999878]
[119.87818146 274.44015503]
[114.97180939 288.61505127]
[103.70029449 298.51214600]
[89.00997162 301.54440308]
[74.74087524 296.91918945]
[64.62289429 285.84548950]
[61.30085754 271.21798706]
[65.64312744 256.86026001]
[76.51465607 246.52536011]
[91.07364655 242.91484070]
[105.51441193 246.97245789]
[116.06172943 257.63681030]
[113.83660889 242.80276489]
[111.61149597 227.96871948]
[109.38637543 213.13467407]
[107.16126251 198.30064392]
[104.93614197 183.46659851]
[102.71102142 168.63255310]
[100.48590851 153.79850769]
[98.26078796 138.96446228]
[96.03567505 124.13041687]
[93.81055450 109.29637146]
[91.47506714 94.47930908]
[89.02934265 79.68003845]
[86.58361816 64.88076782]
[84.13788605 50.08149338]
[78.68253326 36.10869598]
[70.45372009 23.56729698]
[62.22491455 11.02589607]
[53.90296936 -1.45389736]
[45.48835373 -13.87139320]
[31.34161377 -20.95520210]
[30.60713005 -35.83168793]
[22.19251251 -48.24918365]
[13.77789307 -60.66667938]
[5.36327457 -73.08417511]
[-8.78346348 -80.16798401]
[-9.51794720 -95.04447174]
[-17.93256569 -107.46196747]
[-31.19985008 -100.43157196]
[-45.14949036 -94.87686920]
[-59.61793518 -90.86297607]
[-74.43554688 -88.43695068]
[-89.42860413 -87.62724304]
[-104.42131042 -88.44333649]
[-119.23788452 -90.87567902]
[-133.70462036 -94.89573669]
[-147.65188599 -100.45639038]
[-160.91618347 -107.49243164]
[-173.34196472 -115.92137909]
[-184.78355408 -125.64439392]
[-195.10682678 -136.54748535]
[-204.19071960 -148.50282288]
[-211.92874146 -161.37023926]
[-218.23016357 -174.99885559]
[-223.02110291 -189.22889709]
[-226.24540710 -203.89352417]
[-227.86524963 -218.82078552]
[-227.86164856 -233.83569336]
[-226.23463440 -248.76217651]
[-223.00329590 -263.42526245]
[-218.20552063 -277.65298462]
[-211.89756775 -291.27859497]
[-204.15336609 -304.14227295]
[-195.06373596 -316.09326172]
[-184.73522949 -326.99139404]
[-173.28897095 -336.70892334]
[-160.85914612 -345.13189697]
[-147.59147644 -352.16156006]
[-133.64154053 -357.71551514]
[-119.17287445 -361.72863770]
[-104.35513306 -364.15386963]
[-89.36203766 -364.96276855]
[-74.36937714 -364.14587402]
[-59.55292892 -361.71273804]
[-45.08641434 -357.69189453]
[-31.13944054 -352.13049316]
[-17.87553215 -345.09375000]
[-5.45019913 -336.66412354]
[5.99087620 -326.94049072]
[16.31355286 -316.03683472]
[25.39680481 -304.08102417]
[33.13413239 -291.21319580]
[39.43482208 -277.58422852]
[44.22500229 -263.35394287]
[47.44850922 -248.68913269]
[49.06754684 -233.76177979]
[49.06313324 -218.74687195]
[47.43532562 -203.82048035]
[44.20320129 -189.15757751]
[39.40466309 -174.93009949]
[33.09596252 -161.30484009]
[25.35107613 -148.44155884]
[16.26079941 -136.49107361]
[5.93171692 -125.59349060]
[-5.51507044 -115.87657928]
[2.89954829 -103.45908356]
[16.44441795 -97.26345825]
[17.78076935 -81.49879456]
[26.19538879 -69.08129883]
[34.61000824 -56.66380310]
[43.02462769 -44.24630737]
[56.56949615 -38.05067825]
[57.90584564 -22.28601074]
[66.32046509 -9.86851597]
[72.67501068 -6.09472084]
[74.76631165 2.79708838]
[82.99512482 15.33848858]
[91.22393036 27.87988853]
[89.38887024 12.99256039]
[90.64630890 -1.95464182]
[94.94277191 -16.32615471]
[102.09557343 -29.51089478]
[111.80058289 -40.94824219]
[123.64512634 -50.15187073]
[137.12556458 -56.73043823]
[151.66873169 -60.40422440]
[166.65620422 -61.01701355]
[181.45072937 -58.54275513]
[195.42323303 -53.08665085]
[207.97959900 -44.88069916]
[218.58592224 -34.27381897]
[226.79122925 -21.71702385]
[232.24659729 -7.74423170]
[234.72007751 7.05042458]
[234.10650635 22.03787041]
[230.43196106 36.58082962]
[223.85269165 50.06093216]
[214.64843750 61.90499496]
[203.21058655 71.60940552]
[190.02546692 78.76152039]
[175.65373230 83.05722809]
[160.70646667 84.31388855]
[145.81922913 82.47805023]
[131.62504578 77.62777710]
[118.72745514 69.96931458]
[107.67486572 59.82829285]
[98.93715668 47.63576889]
[101.38288879 62.43503952]
[103.82861328 77.23430634]
[106.27433777 92.03357697]
[110.59120178 98.84072876]
[108.64459991 107.07125854]
[110.86972046 121.90530396]
[113.09483337 136.73934937]
[115.31995392 151.57339478]
[117.54506683 166.40744019]
[119.77018738 181.24147034]
[121.99530029 196.07551575]
[124.22042084 210.90956116]
[126.44554138 225.74360657]
[128.67065430 240.57765198]
[130.89576721 255.41169739]
[134.21803284 270.03915405]
[138.61903381 284.37899780]
[143.02003479 298.71884155]
[147.42102051 313.05868530]
[152.03503418 327.33142090]
[156.86103821 341.53387451]
[162.58505249 348.65240479]
[161.65144348 355.98385620]
[166.26545715 370.25659180]
[170.87945557 384.52932739]
[176.49685669 391.73229980]
[175.45420837 399.04904175]
[179.85520935 413.38888550]
[184.25619507 427.72872925]
[188.65719604 442.06857300]
[193.05819702 456.40841675]
[208.06852722 455.18197632]
[222.99150085 457.21142578]
[237.12916565 462.40185547]
[249.82026672 470.51049805]
[260.47122192 481.15811157]
[268.58383179 493.84664917]
[273.77871704 507.98269653]
[275.81286621 522.90502930]
[274.59115601 537.91571045]
[270.17068481 552.31274414]
[262.75827026 565.42266846]
[252.70056152 576.63232422]
[240.46797180 585.41741943]
[226.63267517 591.36706543]
[211.84173584 594.20300293]
[196.78698730 593.79260254]
[182.17254639 590.15496826]
[168.68196106 583.46032715]
[156.94621277 574.02178955]
[147.51420593 562.28076172]
[140.82708740 548.78643799]
[137.19761658 534.16998291]
[136.79557800 519.11499023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 187]
[5 186]
[6 185]
[7 184]
[8 183]
[9 181]
[10 180]
[11 179]
[12 177]
[13 176]
[16 175]
[17 174]
[18 173]
[19 172]
[30 171]
[31 170]
[32 169]
[33 168]
[34 167]
[35 166]
[36 165]
[37 164]
[38 163]
[39 162]
[40 161]
[41 159]
[42 158]
[43 157]
[44 156]
[45 127]
[46 126]
[47 125]
[48 123]
[49 122]
[51 120]
[52 119]
[53 118]
[54 117]
[56 115]
[57 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
