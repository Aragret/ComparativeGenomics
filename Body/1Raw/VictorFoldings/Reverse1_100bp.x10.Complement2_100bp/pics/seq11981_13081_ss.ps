%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[86.93367004 658.48071289]
[71.98144531 660.13775635]
[56.97935486 659.01885986]
[42.43836212 655.16217041]
[28.85373116 648.69897461]
[16.68814468 639.84948730]
[6.35596037 628.91516113]
[-1.79091203 616.26824951]
[-7.47499275 602.33966064]
[-10.50268459 587.60375977]
[-10.77086449 572.56237793]
[-8.27039909 557.72790527]
[-3.08645296 543.60552979]
[4.60441017 530.67626953]
[14.54024220 519.38049316]
[26.38263321 510.10299683]
[39.72823715 503.15969849]
[54.12250137 498.78707886]
[69.07517242 497.13409424]
[70.19081879 482.17562866]
[71.30646515 467.21719360]
[72.42211914 452.25872803]
[73.53776550 437.30029297]
[59.05207443 433.47863770]
[45.51170349 427.05850220]
[33.37842941 418.25720215]
[23.06632996 407.37329102]
[14.92766762 394.77645874]
[9.24085426 380.89486694]
[6.20091915 366.20077515]
[5.91282892 351.19427490]
[8.38786030 336.38647461]
[13.54316807 322.28186035]
[21.20455360 309.36135864]
[31.11235428 298.06567383]
[42.93024445 288.78054810]
[56.25664520 281.82330322]
[70.63838196 277.43218994]
[85.58609009 275.75814819]
[86.70173645 260.79971313]
[87.81738281 245.84124756]
[88.59870911 230.86161804]
[89.04531097 215.86827087]
[89.49192047 200.87490845]
[89.93852234 185.88156128]
[82.58359528 172.92956543]
[90.72834778 159.36587524]
[91.17494965 144.37252808]
[77.91275024 139.48361206]
[66.80647278 130.74072266]
[58.94019699 118.99725342]
[55.08175659 105.39945984]
[55.60776138 91.27462769]
[60.46687317 78.00148010]
[69.18479919 66.87559509]
[80.91058350 58.98296738]
[94.49967194 55.09399414]
[95.16945648 40.10895538]
[95.83924103 25.12391663]
[96.50902557 10.13887882]
[87.64623260 -6.00213861]
[97.66044617 -20.41333389]
[97.99542236 -35.40959549]
[98.21875000 -50.40793228]
[98.33041382 -65.40751648]
[98.33041382 -80.40751648]
[98.33041382 -95.40751648]
[98.33041382 -110.40751648]
[98.33041382 -125.40751648]
[90.59311676 -139.20768738]
[98.33041382 -151.93496704]
[98.33041382 -166.93496704]
[83.38358307 -168.31950378]
[68.62826538 -171.07727051]
[54.19035339 -175.18473816]
[40.19302368 -180.60685730]
[26.75570107 -187.29737854]
[13.99303055 -195.19920349]
[2.01390052 -204.24491882]
[-9.07948494 -214.35736084]
[-19.19248009 -225.45024109]
[-28.23880005 -237.42892456]
[-36.14126587 -250.19119263]
[-42.83245087 -263.62817383]
[-48.25527191 -277.62524414]
[-52.36346054 -292.06295776]
[-55.12196732 -306.81811523]
[-56.50725174 -321.76489258]
[-56.50750351 -336.77569580]
[-55.12271500 -351.72250366]
[-52.36470032 -366.47778320]
[-48.25699234 -380.91561890]
[-42.83463669 -394.91287231]
[-36.14389801 -408.35006714]
[-28.24185944 -421.11260986]
[-19.19593811 -433.09158325]
[-9.08331394 -444.18481445]
[2.00973487 -454.29763794]
[13.98856354 -463.34375000]
[26.75097084 -471.24600220]
[40.18807220 -477.93695068]
[54.18522263 -483.35955811]
[68.62300110 -487.46749878]
[83.37821960 -490.22576904]
[98.32500458 -491.61077881]
[113.33582306 -491.61077881]
[128.28260803 -490.22576904]
[143.03782654 -487.46749878]
[157.47560120 -483.35955811]
[171.47276306 -477.93695068]
[184.90985107 -471.24600220]
[197.67227173 -463.34375000]
[209.65109253 -454.29763794]
[220.74414062 -444.18481445]
[230.85676575 -433.09158325]
[239.90269470 -421.11260986]
[247.80473328 -408.35006714]
[254.49546814 -394.91287231]
[259.91781616 -380.91561890]
[264.02554321 -366.47778320]
[266.78353882 -351.72250366]
[268.16833496 -336.77569580]
[268.16809082 -321.76489258]
[266.78280640 -306.81811523]
[264.02429199 -292.06295776]
[259.91610718 -277.62524414]
[254.49328613 -263.62817383]
[247.80209351 -250.19119263]
[239.89962769 -237.42892456]
[230.85330200 -225.45024109]
[220.74031067 -214.35736084]
[209.64692688 -204.24491882]
[197.66780090 -195.19920349]
[184.90512085 -187.29737854]
[171.46780396 -180.60685730]
[157.47047424 -175.18473816]
[143.03256226 -171.07727051]
[128.27723694 -168.31950378]
[113.33041382 -166.93496704]
[113.33041382 -151.93496704]
[121.06771088 -139.20768738]
[113.33041382 -125.40751648]
[113.33041382 -110.40751648]
[113.33041382 -95.40751648]
[113.33041382 -80.40751648]
[113.33041382 -65.40751648]
[116.47391510 -58.71870422]
[113.21708679 -50.18460464]
[112.99375916 -35.18626785]
[116.03732300 -28.45139503]
[112.65379333 -19.96672821]
[120.71787262 -10.95023155]
[120.46850586 1.54463065]
[111.49406433 10.80866337]
[110.82427979 25.79370308]
[110.15449524 40.77873993]
[109.48471069 55.76377869]
[124.04759216 61.67877579]
[135.70774841 72.21943665]
[143.05770874 86.11342621]
[145.21026611 101.68362427]
[141.90560913 117.05059814]
[133.54261780 130.35943604]
[121.13078308 140.00366211]
[106.16830444 144.81913757]
[105.72169495 159.81248474]
[113.04468536 173.83691406]
[104.93187714 186.32817078]
[104.48526764 201.32151794]
[104.03866577 216.31486511]
[103.59205627 231.30821228]
[106.06779480 235.90362549]
[106.49094391 240.52685547]
[105.19461823 244.39138794]
[102.77584076 246.95689392]
[101.66018677 261.91534424]
[100.54454041 276.87380981]
[115.07853699 280.74667358]
[128.64978027 287.22259521]
[140.79669189 296.07974243]
[151.10646057 307.01522827]
[159.22903442 319.65563965]
[164.88900757 333.56973267]
[167.89498901 348.28302002]
[168.14602661 363.29415894]
[165.63505554 378.09185791]
[160.44900513 392.17245483]
[152.76589966 405.05685425]
[142.84866333 416.30703735]
[131.03611755 425.54083252]
[117.73148346 432.44488525]
[103.38854980 436.78540039]
[88.49621582 438.41592407]
[87.38056946 453.37438965]
[86.26492310 468.33282471]
[85.14927673 483.29129028]
[84.03362274 498.24975586]
[98.57565308 502.10253906]
[112.16203308 508.56201172]
[124.33000183 517.40820312]
[134.66513062 528.33978271]
[142.81541443 540.98449707]
[148.50325012 554.91156006]
[151.53491211 569.64666748]
[151.80714417 584.68792725]
[149.31068420 599.52313232]
[144.13053894 613.64691162]
[136.44316101 626.57818604]
[126.51037598 637.87664795]
[114.67048645 647.15734863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 197]
[20 196]
[21 195]
[22 194]
[23 193]
[39 177]
[40 176]
[41 175]
[42 171]
[43 170]
[44 169]
[45 168]
[47 166]
[48 165]
[57 157]
[58 156]
[59 155]
[60 154]
[62 151]
[63 149]
[64 148]
[65 146]
[66 145]
[67 144]
[68 143]
[69 142]
[71 140]
[72 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
