%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[12.19230461 573.45477295]
[5.76796484 559.86151123]
[1.66877460 545.39611816]
[0.00656279 530.45336914]
[0.82667571 515.44079590]
[4.10674000 500.76797485]
[9.75727367 486.83523560]
[17.62412453 474.02264404]
[27.49268150 462.67974854]
[39.09371948 453.11596680]
[52.11075974 445.59222412]
[66.18868256 440.31378174]
[63.30340576 425.59390259]
[60.41813660 410.87399292]
[55.97082138 425.19955444]
[47.16621017 437.34365845]
[34.93347931 446.02468872]
[20.56357765 450.32650757]
[5.57299042 449.79519653]
[-8.45628738 444.48675537]
[-20.04371262 434.96145630]
[-27.96643639 422.22448730]
[-31.38835335 407.62002563]
[-29.94834518 392.68930054]
[-23.79837418 379.00799561]
[-13.58746433 368.01995850]
[-0.39319667 360.88473511]
[14.39200687 358.35534668]
[29.20782661 360.69873047]
[42.49071503 367.66757202]
[52.83890152 378.52645874]
[59.16036224 392.12957764]
[60.05317688 377.15615845]
[60.94599152 362.18276978]
[61.83880615 347.20935059]
[62.73162460 332.23596191]
[54.93957520 322.98336792]
[55.56085205 310.50146484]
[64.80713654 301.50872803]
[65.92278290 286.55029297]
[67.03842926 271.59182739]
[68.15408325 256.63336182]
[65.51677704 249.72927856]
[69.39932251 241.46105957]
[70.73755646 226.52087402]
[58.56253052 235.28263855]
[43.73641586 233.00531006]
[34.75228119 220.99342346]
[36.75664902 206.12794495]
[48.60132980 196.92448425]
[63.50114822 198.65521240]
[72.92053986 210.32777405]
[75.58633423 195.56655884]
[78.25212860 180.80534363]
[80.91792297 166.04412842]
[83.58372498 151.28291321]
[86.24951935 136.52169800]
[88.80535126 121.74104309]
[91.25107574 106.94177246]
[93.58656311 92.12470245]
[95.81168365 77.29065704]
[97.92630768 62.44046021]
[99.93032074 47.57493210]
[101.93433380 32.70940399]
[103.93834686 17.84387589]
[105.94235992 2.97834706]
[107.94637299 -11.88718128]
[102.12215424 -26.59734917]
[111.49046326 -38.17681122]
[113.49447632 -53.04233932]
[115.49848938 -67.90786743]
[116.94791412 -82.83767700]
[117.84072876 -97.81108093]
[118.73354340 -112.78449249]
[119.62635803 -127.75789642]
[117.54595184 -131.56918335]
[116.85595703 -135.45355225]
[117.40862274 -138.96496582]
[118.92649841 -141.75111389]
[121.04428101 -143.58772278]
[122.82674408 -158.48144531]
[124.60921478 -173.37516785]
[126.39167786 -188.26887512]
[114.19546509 -195.41024780]
[105.66812134 -206.62669373]
[102.07082367 -220.20478821]
[103.91475677 -234.08609009]
[110.88880920 -246.17915344]
[121.91143799 -254.67465210]
[135.29829407 -258.31610107]
[137.30230713 -273.18164062]
[139.30632019 -288.04718018]
[141.31033325 -302.91268921]
[143.31434631 -317.77822876]
[129.05134583 -322.57022095]
[115.95310211 -329.97512817]
[104.49313354 -339.72528076]
[95.08569336 -351.46820068]
[88.07086945 -364.77944946]
[83.70223236 -379.17776489]
[82.13770294 -394.14266968]
[83.43385315 -409.13320923]
[87.54381561 -423.60748291]
[94.31901550 -437.04226685]
[103.51454926 -448.95187378]
[114.79798889 -458.90579224]
[127.76144409 -466.54418945]
[141.93630981 -471.59094238]
[156.81016541 -473.86364746]
[171.84532166 -473.28009033]
[186.49827576 -469.86138916]
[200.23931885 -463.73117065]
[212.57174683 -455.11096191]
[223.04974365 -444.31243896]
[231.29450989 -431.72592163]
[237.00804138 -417.80642700]
[239.98376465 -403.05715942]
[240.11412048 -388.01123047]
[237.39440918 -373.21258545]
[231.92292786 -359.19619751]
[223.89747620 -346.46871948]
[213.60816956 -335.49026489]
[201.42695618 -326.65768433]
[187.79418945 -320.29025269]
[173.20266724 -316.61819458]
[158.17988586 -315.77420044]
[156.17587280 -300.90869141]
[154.17184448 -286.04315186]
[152.16783142 -271.17761230]
[150.16381836 -256.31210327]
[163.67164612 -247.77458191]
[172.13482666 -234.15148926]
[173.81588745 -218.14344788]
[168.32781982 -202.94998169]
[156.72160339 -191.63011169]
[141.28540039 -186.48641968]
[139.50292969 -171.59269714]
[137.72045898 -156.69897461]
[135.93800354 -141.80526733]
[134.59976196 -126.86508179]
[133.70695496 -111.89167023]
[132.81413269 -96.91826630]
[131.92131042 -81.94486237]
[144.70201111 -89.79686737]
[158.86074829 -84.84408569]
[163.96025085 -70.73752594]
[156.24133301 -57.87601471]
[141.39411926 -55.74058151]
[130.36401367 -65.90385437]
[128.36000061 -51.03832626]
[126.35599518 -36.17279816]
[132.32354736 -22.52591324]
[122.81190491 -9.88316727]
[120.80789185 4.98236084]
[118.80387115 19.84788895]
[116.79985809 34.71341705]
[114.79584503 49.57894516]
[112.79183197 64.44447327]
[115.01351929 71.49329376]
[110.64572906 79.51577759]
[108.42060852 94.34981537]
[110.43428040 102.15479279]
[106.05034637 109.38749695]
[103.60462189 124.18676758]
[105.29293060 133.16381836]
[101.01073456 139.18748474]
[98.34494019 153.94869995]
[95.67914581 168.70993042]
[93.01335144 183.47114563]
[90.34754944 198.23236084]
[87.68175507 212.99357605]
[85.67774200 227.85910034]
[84.33950806 242.79928589]
[83.11253357 257.74902344]
[81.99688721 272.70748901]
[80.88123322 287.66592407]
[79.76558685 302.62438965]
[88.14387512 319.02212524]
[77.70503235 333.12875366]
[76.81221008 348.10217285]
[75.91939545 363.07559204]
[75.02658081 378.04898071]
[74.13376617 393.02239990]
[75.13802338 407.98873901]
[78.02330017 422.70861816]
[80.90856934 437.42852783]
[95.93746948 437.00167847]
[110.83161926 439.05450439]
[125.18470764 443.53094482]
[138.60517883 450.30892944]
[150.72688293 459.20352173]
[161.21917725 469.97207642]
[169.79577637 482.32083130]
[176.22273254 495.91290283]
[180.32470703 510.37747192]
[181.98980713 525.31994629]
[181.17257690 540.33264160]
[177.89533997 555.00610352]
[172.24749756 568.93994141]
[164.38311768 581.75402832]
[154.51673889 593.09881592]
[142.91754150 602.66485596]
[129.90196228 610.19110107]
[115.82505798 615.47222900]
[101.07086182 618.36425781]
[86.04188538 618.78814697]
[71.14812469 616.73248291]
[56.79589844 612.25329590]
[43.37673950 605.47271729]
[31.25673866 596.57580566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 186]
[13 185]
[14 184]
[32 183]
[33 182]
[34 181]
[35 180]
[36 179]
[39 177]
[40 176]
[41 175]
[42 174]
[44 173]
[45 172]
[52 171]
[53 170]
[54 169]
[55 168]
[56 167]
[57 166]
[58 164]
[59 163]
[60 161]
[61 160]
[62 158]
[63 157]
[64 156]
[65 155]
[66 154]
[67 153]
[69 151]
[70 150]
[71 149]
[72 143]
[73 142]
[74 141]
[75 140]
[80 139]
[81 138]
[82 137]
[83 136]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
