%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[6.46889734 503.04513550]
[14.40747261 515.82086182]
[19.93708229 529.80883789]
[22.87997437 544.55938721]
[23.14154434 559.59838867]
[20.71338654 574.44238281]
[15.67355251 588.61419678]
[8.18405628 601.65820312]
[-1.51434863 613.15521240]
[-13.10989761 622.73553467]
[-26.22984123 630.09130859]
[-40.45243073 634.98596191]
[-55.32046509 637.26220703]
[-70.35599518 636.84686279]
[-85.07569885 633.75335693]
[-99.00640106 628.08099365]
[-111.70027161 620.01220703]
[-122.74926758 609.80633545]
[-131.79821777 597.79150391]
[-138.55621338 584.35388184]
[-142.80601501 569.92547607]
[-144.41104126 554.97009277]
[-143.31965637 539.96850586]
[-139.56697083 525.40289307]
[-133.27360535 511.74148560]
[-124.64186859 499.42349243]
[-113.94924164 488.84487915]
[-101.53943634 480.34564209]
[-87.81138611 474.19909668]
[-73.20638275 470.60272217]
[-58.19392395 469.67221069]
[-43.25659561 471.43743896]
[-28.87457275 475.84164429]
[-21.99516106 462.51223755]
[-15.11574745 449.18280029]
[-8.23633480 435.85336304]
[-1.35692251 422.52392578]
[5.52249002 409.19451904]
[11.28852367 395.34701538]
[15.90253258 381.07427979]
[20.51654243 366.80154419]
[17.06929779 352.31137085]
[28.67640114 341.56027222]
[33.29040909 327.28753662]
[37.58453369 312.91534424]
[41.55662918 298.45080566]
[45.52872467 283.98629761]
[41.43789673 269.66445923]
[52.55336380 258.40582275]
[56.52545929 243.94129944]
[60.49755478 229.47677612]
[64.46965027 215.01225281]
[68.44174957 200.54772949]
[72.41384125 186.08320618]
[76.06193542 171.53358459]
[71.33567810 157.40872192]
[81.93733215 145.66497803]
[85.25959778 131.03752136]
[71.56501007 119.28881073]
[65.71188354 102.22086334]
[69.31433105 84.54047394]
[81.37890625 71.12332916]
[98.57859039 65.66944885]
[101.24438477 50.90823364]
[103.91017914 36.14701462]
[106.57597351 21.38579941]
[109.24176788 6.62458134]
[111.90756226 -8.13663578]
[114.57336426 -22.89785385]
[104.32521820 -32.11557007]
[100.00421906 -45.09045029]
[102.63753510 -58.39966583]
[111.43244171 -68.58759308]
[124.01071167 -73.06299591]
[126.89598083 -87.78289032]
[129.78125000 -102.50277710]
[132.22697449 -117.30204773]
[134.23100281 -132.16757202]
[136.23501587 -147.03311157]
[138.23902893 -161.89863586]
[127.37984467 -175.61351013]
[129.75276184 -192.60420227]
[143.40570068 -202.42439270]
[145.18817139 -217.31811523]
[146.08099365 -232.29151917]
[146.08099365 -247.29151917]
[135.18643188 -258.42465210]
[135.40011597 -273.63677979]
[146.08099365 -283.95446777]
[146.08099365 -298.95446777]
[146.08099365 -313.95446777]
[146.08099365 -328.95446777]
[146.08099365 -343.95446777]
[146.08099365 -358.95446777]
[146.08099365 -373.95446777]
[137.52915955 -383.60998535]
[137.83796692 -396.10351562]
[146.29661560 -404.75094604]
[146.51994324 -419.74926758]
[146.74327087 -434.74761963]
[133.26795959 -442.00534058]
[124.71859741 -454.70050049]
[123.05979156 -469.91583252]
[128.67269897 -484.15499878]
[140.26753235 -494.14593506]
[155.17987061 -497.59277344]
[169.98297119 -493.70346069]
[181.27520752 -483.37176514]
[186.46166992 -468.97177124]
[184.35057068 -453.81256104]
[175.42703247 -441.37756348]
[161.74160767 -434.52429199]
[161.51828003 -419.52593994]
[161.29495239 -404.52761841]
[170.65567017 -389.68362427]
[161.08099365 -373.95446777]
[161.08099365 -358.95446777]
[161.08099365 -343.95446777]
[161.08099365 -328.95446777]
[161.08099365 -313.95446777]
[161.08099365 -298.95446777]
[161.08099365 -283.95446777]
[171.76185608 -273.63677979]
[171.97554016 -258.42465210]
[161.08099365 -247.29151917]
[161.08099365 -232.29151917]
[170.95602417 -243.58238220]
[185.55566406 -247.02482605]
[199.43460083 -241.33491516]
[207.41633606 -228.63484192]
[206.52388000 -213.66142273]
[197.09008789 -201.99935913]
[182.63354492 -197.99832153]
[168.54617310 -203.15060425]
[160.08189392 -215.53564453]
[158.29942322 -200.64192200]
[167.60231018 -191.72644043]
[170.10900879 -178.88905334]
[164.68446350 -166.77357483]
[153.10455322 -159.89462280]
[151.10054016 -145.02909851]
[149.09652710 -130.16355896]
[147.09251404 -115.29803467]
[148.68289185 -112.98960876]
[149.45469666 -109.91212463]
[149.11042786 -106.37419891]
[147.46968079 -102.78637695]
[144.50114441 -99.61750793]
[141.61587524 -84.89761353]
[138.73060608 -70.17772675]
[150.28662109 -58.51856613]
[152.63964844 -42.10439301]
[144.66625977 -27.37597084]
[129.33457947 -20.23205757]
[126.66878510 -5.47084045]
[124.00299072 9.29037666]
[121.33718872 24.05159378]
[118.67139435 38.81281281]
[116.00559998 53.57402802]
[113.33980560 68.33524323]
[123.21890259 74.67235565]
[130.38877869 83.96474457]
[134.01281738 95.12815094]
[133.66819763 106.86002350]
[129.39509583 117.79145050]
[121.69211578 126.64693451]
[111.45806122 132.39320374]
[99.88705444 134.35977173]
[96.56479645 148.98724365]
[101.05341339 164.15835571]
[90.68939209 174.85585022]
[92.23496246 179.84165955]
[91.76092529 184.45994568]
[89.74546051 188.00296021]
[86.87836456 190.05529785]
[82.90627289 204.51982117]
[78.93417358 218.98434448]
[74.96208191 233.44886780]
[70.98998260 247.91340637]
[67.01788330 262.37792969]
[70.82460022 277.73434448]
[59.99324799 287.95837402]
[56.02115250 302.42291260]
[52.04905701 316.88742065]
[53.37046051 321.93728638]
[52.69067383 326.52978516]
[50.51901627 329.97927856]
[47.56314468 331.90155029]
[42.94913483 346.17428589]
[46.06635284 361.68536377]
[34.78927612 371.41555786]
[30.17526627 385.68829346]
[25.56125641 399.96102905]
[37.41966248 390.77526855]
[52.17218018 388.06173706]
[66.52305603 392.42663574]
[77.26626587 402.89483643]
[82.00175476 417.12774658]
[79.67160034 431.94564819]
[70.79636383 444.03820801]
[57.35879517 450.70391846]
[42.36088181 450.45364380]
[29.15319824 443.34329224]
[20.68637276 430.96133423]
[18.85191917 416.07391357]
[11.97250652 429.40335083]
[5.09309435 442.73278809]
[-1.78631842 456.06219482]
[-8.66573143 469.39163208]
[-15.54514313 482.72106934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 210]
[34 209]
[35 208]
[36 207]
[37 206]
[38 205]
[39 193]
[40 192]
[41 191]
[43 189]
[44 188]
[45 184]
[46 183]
[47 182]
[49 180]
[50 179]
[51 178]
[52 177]
[53 176]
[54 175]
[55 171]
[57 169]
[58 168]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 155]
[69 154]
[74 150]
[75 149]
[76 148]
[77 143]
[78 142]
[79 141]
[80 140]
[83 136]
[84 135]
[85 126]
[86 125]
[89 122]
[90 121]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
