%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUUAACCGGUGGUUACCAUGACUUGGAUGCUCAUGUGGCUGAUGCCGCCUGAUUAGAAGUUGAGGAUGUAUGAAGGGGGUAAUAAGGAUCUUGGUCCGCUG\
) } def
/len { sequence length } bind def

/coor [
[26.17859268 493.26296997]
[33.61076355 506.37249756]
[37.81875610 520.84277344]
[38.57563782 535.89349365]
[35.84059525 550.71295166]
[29.76111794 564.50195312]
[20.66506958 576.51690674]
[9.04298878 586.10980225]
[-4.47836208 592.76336670]
[-19.16979408 596.11871338]
[-34.23901367 595.99499512]
[-48.87335968 592.39880371]
[-62.28361893 585.52404785]
[-73.74659729 575.74157715]
[-82.64410400 563.57891846]
[-88.49630737 549.69189453]
[-90.98760986 534.82952881]
[-89.98365784 519.79327393]
[-85.53859711 505.39404297]
[-77.89213562 492.40835571]
[-67.45664215 481.53649902]
[-54.79489517 473.36480713]
[-40.58971405 468.33392334]
[-25.60717583 466.71520996]
[-10.65526676 468.59594727]
[-13.45205212 453.96627808]
[-1.37646472 443.74420166]
[3.87025332 429.69171143]
[9.11697197 415.63925171]
[14.36368942 401.58679199]
[19.50564957 387.49563599]
[24.54256630 373.36660767]
[29.57948112 359.23757935]
[33.22756958 344.68795776]
[35.45268631 329.85391235]
[37.67780304 315.01986694]
[39.90291977 300.18582153]
[42.12803650 285.35177612]
[40.01154327 278.27066040]
[44.49829865 270.31411743]
[46.94402695 255.51483154]
[34.80129623 264.32131958]
[19.83037376 263.38775635]
[8.87576580 253.14097595]
[6.94577026 238.26565552]
[14.92275524 225.56260681]
[29.15974998 220.83946228]
[43.14779282 226.25561523]
[50.49204636 239.33668518]
[54.46414185 224.87216187]
[58.43623734 210.40763855]
[62.40833664 195.94311523]
[61.14829254 188.66065979]
[66.54874420 181.29364014]
[70.73575592 166.88986206]
[69.26147461 162.34722900]
[70.62520599 156.83023071]
[75.26779938 152.12301636]
[79.88181305 137.85028076]
[84.49581909 123.57754517]
[89.10983276 109.30481720]
[86.37054443 95.59394836]
[96.61743927 86.08117676]
[101.23144531 71.80844116]
[105.84545898 57.53570938]
[110.45946503 43.26297379]
[105.29231262 31.44504929]
[109.42916870 19.65224648]
[120.13764954 14.02597046]
[124.96364594 -0.17648500]
[129.15066528 -14.58026695]
[132.69033813 -29.15664291]
[131.67437744 -38.23439789]
[136.39273071 -43.92288971]
[140.14903259 -58.44495010]
[143.90533447 -72.96701050]
[147.11860657 -87.61879730]
[149.78440857 -102.38001251]
[152.45019531 -117.14122772]
[155.11599731 -131.90245056]
[157.67182922 -146.68310547]
[160.11755371 -161.48237610]
[158.42924500 -170.45942688]
[162.71144104 -176.48309326]
[165.37724304 -191.24430847]
[168.04302979 -206.00552368]
[159.30049133 -218.89759827]
[162.21426392 -233.82960510]
[174.55876160 -242.08483887]
[177.22454834 -256.84606934]
[179.89035034 -271.60726929]
[182.55615234 -286.36849976]
[175.92926025 -303.54888916]
[187.77903748 -316.49298096]
[190.22477722 -331.29223633]
[192.67050171 -346.09152222]
[178.61546326 -351.48046875]
[165.93310547 -359.58865356]
[155.14276123 -370.08404541]
[146.68627930 -382.53686523]
[140.90997314 -396.43719482]
[138.05036926 -411.21582031]
[138.22454834 -426.26754761]
[141.42539978 -440.97604370]
[147.52183533 -454.73898315]
[156.26420593 -466.99276733]
[167.29454041 -477.23565674]
[180.16114807 -485.04818726]
[194.33712769 -490.11041260]
[209.24200439 -492.21511841]
[224.26541138 -491.27603149]
[238.79217529 -487.33163452]
[252.22741699 -480.54348755]
[264.02096558 -471.18951416]
[273.68991089 -459.65274048]
[280.83828735 -446.40567017]
[285.17340088 -431.99066162]
[286.51770020 -416.99807739]
[284.81613159 -402.04183960]
[280.13842773 -387.73434448]
[272.67608643 -374.66152954]
[262.73471069 -363.35873413]
[250.72137451 -354.28872681]
[237.12802124 -347.82296753]
[222.51130676 -344.22622681]
[207.46977234 -343.64578247]
[205.02404785 -328.84652710]
[202.57830811 -314.04724121]
[209.36549377 -304.03421021]
[207.44903564 -291.68469238]
[197.31736755 -283.70269775]
[194.65156555 -268.94146729]
[191.98577881 -254.18025208]
[189.31997681 -239.41903687]
[197.99716187 -227.36740112]
[195.50395203 -212.35945129]
[182.80424500 -203.33973694]
[180.13845825 -188.57852173]
[177.47265625 -173.81730652]
[174.91682434 -159.03665161]
[172.47109985 -144.23738098]
[174.48193359 -137.12553406]
[169.87721252 -129.23664856]
[167.21142578 -114.47543335]
[164.54562378 -99.71421814]
[161.87982178 -84.95300293]
[175.50302124 -91.23062897]
[188.97290039 -84.63044739]
[192.35997009 -70.01785278]
[183.16740417 -58.16471863]
[168.17163086 -57.80872726]
[158.42739868 -69.21070862]
[154.67109680 -54.68864822]
[150.91479492 -40.16659164]
[147.26670837 -25.61697006]
[143.72703552 -11.04059505]
[157.06709290 -17.89937401]
[171.39135742 -13.44791222]
[178.49423218 -0.23620851]
[174.30686951 14.16747284]
[161.22799683 21.51205063]
[146.74975586 17.59021378]
[139.16610718 4.64951277]
[134.34010315 18.85196877]
[138.68096924 35.85560989]
[124.73220062 47.87698364]
[120.11818695 62.14971924]
[115.50418091 76.42245483]
[110.89016724 90.69518280]
[113.62945557 104.40605164]
[103.38256073 113.91882324]
[98.76855469 128.19155884]
[94.15454102 142.46429443]
[89.54053497 156.73703003]
[85.13953400 171.07687378]
[80.95252228 185.48065186]
[76.87285614 199.91520691]
[72.90076447 214.37973022]
[68.92866516 228.84425354]
[64.95657349 243.30877686]
[61.74329758 257.96057129]
[59.29756927 272.75982666]
[56.96208191 287.57690430]
[54.73696518 302.41094971]
[52.51184845 317.24499512]
[50.28673172 332.07904053]
[48.06161499 346.91308594]
[57.72294617 335.43881226]
[71.18022156 328.81298828]
[86.16565704 328.15216064]
[100.15394592 333.56765747]
[110.78780365 344.14694214]
[116.27525330 358.10717773]
[115.69155121 373.09579468]
[109.13507080 386.58700562]
[97.71068573 396.30728149]
[83.34361267 400.61856079]
[68.45494843 398.79434204]
[55.55370331 391.14202881]
[46.81395721 378.95117188]
[43.70851135 364.27450562]
[38.67159653 378.40353394]
[33.63467789 392.53256226]
[33.70071030 401.66674805]
[28.41616058 406.83349609]
[23.16944313 420.88598633]
[17.92272377 434.93844604]
[12.67600632 448.99090576]
[15.09751129 464.62570190]
[3.39720488 473.84265137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 210]
[27 208]
[28 207]
[29 206]
[30 205]
[31 203]
[32 202]
[33 201]
[34 187]
[35 186]
[36 185]
[37 184]
[38 183]
[40 182]
[41 181]
[49 180]
[50 179]
[51 178]
[52 177]
[54 176]
[55 175]
[58 174]
[59 173]
[60 172]
[61 171]
[63 169]
[64 168]
[65 167]
[66 166]
[69 164]
[70 163]
[71 156]
[72 155]
[74 154]
[75 153]
[76 152]
[77 146]
[78 145]
[79 144]
[80 143]
[81 141]
[82 140]
[84 139]
[85 138]
[86 137]
[89 134]
[90 133]
[91 132]
[92 131]
[94 128]
[95 127]
[96 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
