%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[120.40924835 558.52581787]
[106.74097443 552.19128418]
[94.82526398 542.97375488]
[85.25981903 531.33544922]
[78.52442932 517.86016846]
[74.95694733 503.22390747]
[74.73630524 488.16073608]
[77.87357330 473.42623901]
[84.21138763 459.75949097]
[93.43185425 447.84603882]
[105.07247162 438.28341675]
[118.54934692 431.55126953]
[133.18649292 427.98733521]
[132.96316528 412.98901367]
[132.73983765 397.99066162]
[132.51651001 382.99234009]
[132.29318237 367.99398804]
[132.06985474 352.99566650]
[131.84652710 337.99731445]
[130.73088074 323.03884888]
[128.72686768 308.17333984]
[126.72285461 293.30780029]
[113.54555511 286.41601562]
[106.87426758 272.92681885]
[109.45529175 257.92044067]
[120.50536346 247.18722534]
[118.50135040 232.32168579]
[116.49733734 217.45616150]
[107.07104492 209.87515259]
[105.27980804 197.50683594]
[112.62366486 186.90351868]
[110.84119415 172.00979614]
[109.05873108 157.11607361]
[105.84545898 142.46429443]
[101.23144531 128.19155884]
[96.61743927 113.91882324]
[86.37054443 104.40605164]
[89.10983276 90.69518280]
[84.49581909 76.42245483]
[79.88181305 62.14971924]
[75.26779938 47.87698364]
[70.33620453 33.71084976]
[65.08949280 19.65837860]
[59.84277344 5.60590744]
[44.77568817 2.97338057]
[33.12618256 -6.78294277]
[27.95858192 -20.96611214]
[30.56662560 -35.73276520]
[40.15127563 -47.13452148]
[34.90455627 -61.18699265]
[29.65783882 -75.23946381]
[15.18620300 -86.62600708]
[18.76347923 -103.80651855]
[13.30812263 -117.77931213]
[7.85276604 -131.75210571]
[2.39740896 -145.72491455]
[-3.05794811 -159.69770813]
[-8.72073460 -173.58773804]
[-14.58969593 -187.39190674]
[-20.45865631 -201.19609070]
[-26.69627190 -207.86917114]
[-26.31053925 -215.24975586]
[-31.97332573 -229.13977051]
[-37.63611221 -243.02980042]
[-52.07108307 -238.89714050]
[-66.86825562 -236.34942627]
[-81.85414886 -235.41651917]
[-96.85305023 -236.10937500]
[-111.68911743 -238.41987610]
[-126.18840027 -242.32090759]
[-140.18090820 -247.76673889]
[-153.50256348 -254.69354248]
[-165.99720764 -263.02008057]
[-177.51832581 -272.64874268]
[-187.93084717 -283.46661377]
[-197.11268616 -295.34689331]
[-204.95619202 -308.15029907]
[-211.36940002 -321.72665405]
[-216.27713013 -335.91683960]
[-219.62184143 -350.55447388]
[-221.36430359 -365.46792603]
[-221.48410034 -380.48236084]
[-219.97981262 -395.42172241]
[-216.86909485 -410.11083984]
[-212.18840027 -424.37753296]
[-205.99263000 -438.05450439]
[-198.35441589 -450.98141479]
[-189.36331177 -463.00668335]
[-179.12472534 -473.98934937]
[-167.75871277 -483.80059814]
[-155.39851379 -492.32543945]
[-142.18907166 -499.46392822]
[-128.28524780 -505.13232422]
[-113.85005951 -509.26422119]
[-99.05274963 -511.81115723]
[-84.06680298 -512.74322510]
[-69.06793976 -512.04956055]
[-54.23199463 -509.73828125]
[-39.73292160 -505.83645630]
[-25.74071503 -500.38986206]
[-12.41942501 -493.46237183]
[0.07476500 -485.13516235]
[11.59536552 -475.50585938]
[22.00730324 -464.68743896]
[31.18850327 -452.80664062]
[39.03132248 -440.00283813]
[45.44380569 -426.42611694]
[50.35077286 -412.23568726]
[53.69468689 -397.59786987]
[55.43634796 -382.68432617]
[55.55533600 -367.66989136]
[54.05024719 -352.73062134]
[50.93873978 -338.04165649]
[46.25728607 -323.77520752]
[40.06077957 -310.09857178]
[32.42186356 -297.17208862]
[23.43010902 -285.14727783]
[13.19093323 -274.16519165]
[1.82438898 -264.35452271]
[-10.53625870 -255.83035278]
[-23.74608612 -248.69259644]
[-18.08329964 -234.80256653]
[-12.42051315 -220.91253662]
[-6.65447950 -207.06504822]
[-0.78551859 -193.26087952]
[5.08344221 -179.45669556]
[9.09888840 -176.87110901]
[11.53271866 -171.73559570]
[10.91484928 -165.15306091]
[16.37020683 -151.18026733]
[21.82556343 -137.20747375]
[27.28092003 -123.23467255]
[32.73627853 -109.26187134]
[43.68530655 -104.11936951]
[48.34460831 -92.52304840]
[43.71031189 -80.48618317]
[48.95702744 -66.43371582]
[54.20374680 -52.38124084]
[68.91548920 -50.05093384]
[80.56301117 -40.60683060]
[85.95513916 -26.50749207]
[83.55022430 -11.50372124]
[73.89524078 0.35918912]
[79.14196014 14.41166019]
[84.38867950 28.46413231]
[87.42743683 30.25250435]
[89.75096130 33.60158157]
[90.63513184 38.15916061]
[89.54053497 43.26297379]
[94.15454102 57.53570938]
[98.76855469 71.80844116]
[103.38256073 86.08117676]
[113.62945557 95.59394836]
[110.89016724 109.30481720]
[115.50418091 123.57754517]
[120.11818695 137.85028076]
[123.65852356 123.27407074]
[132.75682068 111.34841919]
[145.87985229 104.08303070]
[160.81616211 102.70223236]
[175.04872131 107.43872070]
[186.17909241 117.49431610]
[192.33160400 131.17446899]
[192.46946716 146.17382812]
[186.56942749 159.96475220]
[175.62576294 170.22322083]
[161.48266602 175.22050476]
[146.52349854 174.11447144]
[133.26913452 167.09150696]
[123.95244598 155.33361816]
[125.73491669 170.22732544]
[127.51737976 185.12104797]
[138.89334106 199.60099792]
[131.36286926 215.45214844]
[133.36688232 230.31767273]
[135.37089539 245.18321228]
[148.86871338 252.60714722]
[155.33139038 266.39434814]
[152.47027588 281.16857910]
[141.58837891 291.30380249]
[143.59239197 306.16931152]
[145.59640503 321.03485107]
[153.87445068 308.52587891]
[167.88330078 303.16378784]
[182.39799500 306.94842529]
[192.00491333 318.46829224]
[193.12091064 333.42672729]
[185.32975769 346.24459839]
[171.53735352 352.14117432]
[156.88792419 348.91717529]
[146.84486389 337.77398682]
[147.06819153 352.77233887]
[147.29151917 367.77066040]
[147.51484680 382.76901245]
[147.73817444 397.76733398]
[147.96150208 412.76568604]
[148.18482971 427.76400757]
[162.92160034 430.89056396]
[176.59294128 437.21844482]
[188.51312256 446.43026733]
[198.08419800 458.06390381]
[204.82612610 471.53588867]
[208.40069580 486.17044067]
[208.62864685 501.23352051]
[205.49850464 515.96954346]
[199.16731262 529.63934326]
[189.95262146 541.55725098]
[178.31665039 551.12554932]
[164.84303284 557.86419678]
[150.20761108 561.43524170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 197]
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[19 191]
[20 182]
[21 181]
[22 180]
[26 176]
[27 175]
[28 174]
[31 172]
[32 171]
[33 170]
[34 156]
[35 155]
[36 154]
[38 152]
[39 151]
[40 150]
[41 149]
[42 145]
[43 144]
[44 143]
[49 138]
[50 137]
[51 136]
[53 133]
[54 132]
[55 131]
[56 130]
[57 129]
[58 126]
[59 125]
[60 124]
[62 123]
[63 122]
[64 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
