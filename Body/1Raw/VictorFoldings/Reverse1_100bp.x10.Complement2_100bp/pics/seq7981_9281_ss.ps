%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[-61.00360489 864.88037109]
[-75.74033356 867.69256592]
[-90.59049988 869.82611084]
[-105.52286530 871.27661133]
[-120.50602722 872.04095459]
[-135.50848389 872.11761475]
[-150.49867249 871.50634766]
[-165.44506836 870.20849609]
[-180.31625366 868.22674561]
[-195.08094788 865.56530762]
[-209.70809937 862.22979736]
[-224.16694641 858.22711182]
[-238.42707825 853.56579590]
[-252.45851135 848.25555420]
[-266.23171997 842.30761719]
[-279.71777344 835.73449707]
[-292.88827515 828.54998779]
[-305.71554565 820.76922607]
[-318.17260742 812.40850830]
[-330.23327637 803.48553467]
[-341.87216187 794.01898193]
[-353.06478882 784.02874756]
[-363.78762817 773.53588867]
[-374.01815796 762.56250000]
[-383.73480225 751.13153076]
[-392.91717529 739.26715088]
[-401.54595947 726.99426270]
[-409.60299683 714.33868408]
[-417.07131958 701.32702637]
[-423.93527222 687.98669434]
[-430.18038940 674.34564209]
[-435.79354858 660.43261719]
[-440.76293945 646.27691650]
[-445.07812500 631.90820312]
[-448.72998047 617.35681152]
[-451.71090698 602.65332031]
[-454.01455688 587.82855225]
[-455.63613892 572.91381836]
[-456.57223511 557.94036865]
[-456.82083130 542.93981934]
[-456.38146973 527.94360352]
[-455.25503540 512.98327637]
[-453.44390869 498.09036255]
[-450.95187378 483.29614258]
[-447.78421021 468.63171387]
[-443.94757080 454.12792969]
[-439.45001221 439.81530762]
[-434.30099487 425.72393799]
[-428.51132202 411.88342285]
[-422.09323120 398.32290649]
[-415.06018066 385.07092285]
[-407.42697144 372.15530396]
[-399.20962524 359.60321045]
[-390.42547607 347.44104004]
[-381.09295654 335.69442749]
[-371.23168945 324.38800049]
[-360.86245728 313.54556274]
[-350.00701904 303.18994141]
[-338.68823242 293.34286499]
[-326.92990112 284.02511597]
[-314.75674438 275.25619507]
[-302.19433594 267.05462646]
[-289.26916504 259.43762207]
[-276.00833130 252.42118835]
[-262.43978882 246.02011108]
[-248.59204102 240.24783325]
[-234.49420166 235.11650085]
[-220.17594910 230.63690186]
[-205.66735840 226.81845093]
[-190.99897766 223.66918945]
[-176.20162964 221.19572449]
[-161.30644226 219.40328979]
[-146.34474182 218.29562378]
[-131.34799194 217.87506104]
[-116.34772491 218.14250183]
[-101.37549591 219.09736633]
[-86.46278381 220.73765564]
[-71.64096069 223.05992126]
[-56.94118881 226.05926514]
[-42.39438248 229.72940063]
[-28.03113556 234.06259155]
[-13.88165379 239.04974365]
[0.02430461 244.68035889]
[13.65749645 250.94258118]
[20.53690910 237.61315918]
[27.41632080 224.28372192]
[34.29573441 210.95429993]
[41.17514801 197.62486267]
[48.05455780 184.29544067]
[47.01604843 169.43707275]
[60.22077560 160.72239685]
[67.10018921 147.39295959]
[73.97959900 134.06353760]
[80.85900879 120.73410034]
[87.73842621 107.40467072]
[87.27133179 93.43064117]
[98.93214417 85.71591187]
[98.38569641 69.90415192]
[111.09835815 62.14286804]
[117.97777557 48.81343842]
[105.74085999 40.09342575]
[94.86953735 29.72061539]
[85.58514404 17.90618324]
[78.07669830 4.89065409]
[72.49706268 -9.06098938]
[68.95981598 -23.66471100]
[67.53699493 -38.62319946]
[68.25754547 -53.63191605]
[71.10681915 -68.38529968]
[76.02678680 -82.58300018]
[82.91729736 -95.93596649]
[91.63806915 -108.17234039]
[102.01155090 -119.04301453]
[113.82656097 -128.32667542]
[126.84255219 -135.83432007]
[140.79454041 -141.41310120]
[155.39848328 -144.94943237]
[170.35705566 -146.37133789]
[185.36573792 -145.64984131]
[200.11894226 -142.79966736]
[214.31632996 -137.87881470]
[227.66886902 -130.98747253]
[239.90470886 -122.26595306]
[250.77474976 -111.89179230]
[260.05767822 -100.07621002]
[267.56451416 -87.05975342]
[273.14242554 -73.10742188]
[276.67785645 -58.50326157]
[278.09881592 -43.54459763]
[277.37640381 -28.53597069]
[274.52532959 -13.78293705]
[269.60360718 0.41415223]
[262.71142578 13.76626205]
[253.98915100 26.00156021]
[243.61431885 36.87095261]
[231.79815674 46.15314865]
[218.78123474 53.65917969]
[204.82855225 59.23623276]
[190.22418213 62.77075958]
[175.26542664 64.19081116]
[160.25685120 63.46746826]
[145.50398254 60.61545944]
[131.30720520 55.69285202]
[124.42778778 69.02227783]
[125.46630096 83.88063812]
[112.26157379 92.59532928]
[112.72866821 106.56935883]
[101.06785583 114.28408813]
[94.18843842 127.61351776]
[87.30902863 140.94294739]
[80.42961884 154.27236938]
[73.55020142 167.60180664]
[74.09664917 183.41357422]
[61.38398743 191.17485046]
[54.50457764 204.50427246]
[47.62516403 217.83370972]
[40.74575043 231.16313171]
[33.86633682 244.49256897]
[26.98692513 257.82199097]
[39.98926544 265.30654907]
[52.63479233 273.37936401]
[64.89691162 282.02340698]
[76.74983215 291.22058105]
[88.16863251 300.95147705]
[99.12930298 311.19564819]
[109.60877991 321.93157959]
[119.58502960 333.13665771]
[129.03707886 344.78732300]
[137.94503784 356.85910034]
[146.29019165 369.32656860]
[154.05496216 382.16354370]
[161.22305298 395.34298706]
[167.77935791 408.83721924]
[173.71011353 422.61785889]
[179.00283813 436.65588379]
[183.64639282 450.92181396]
[187.63102722 465.38565063]
[190.94834900 480.01693726]
[193.59140015 494.78494263]
[195.55459595 509.65856934]
[196.83381653 524.60656738]
[197.42637634 539.59753418]
[197.33103943 554.59985352]
[196.54798889 569.58209229]
[195.07887268 584.51263428]
[192.92680359 599.36010742]
[190.09626770 614.09332275]
[186.59326172 628.68127441]
[182.42510986 643.09326172]
[177.60061646 657.29901123]
[172.12989807 671.26867676]
[166.02447510 684.97277832]
[159.29718018 698.38262939]
[151.96215820 711.46990967]
[144.03485107 724.20715332]
[135.53192139 736.56756592]
[126.47124481 748.52508545]
[116.87187958 760.05468750]
[106.75402069 771.13208008]
[96.13893890 781.73394775]
[85.04895782 791.83801270]
[73.50740051 801.42297363]
[61.53853607 810.46875000]
[49.16754532 818.95623779]
[36.42043686 826.86767578]
[23.32401657 834.18640137]
[9.90583324 840.89697266]
[-3.80589890 846.98529053]
[-17.78234291 852.43859863]
[-31.99410629 857.24536133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[84 159]
[85 158]
[86 157]
[87 156]
[88 155]
[89 154]
[91 152]
[92 151]
[93 150]
[94 149]
[95 148]
[97 146]
[99 144]
[100 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
