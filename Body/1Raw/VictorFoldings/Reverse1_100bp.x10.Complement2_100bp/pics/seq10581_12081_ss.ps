%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[114.89596558 643.25866699]
[106.64280701 655.80914307]
[96.85244751 667.20111084]
[85.68566132 677.24755859]
[73.32580566 685.78350830]
[59.97584915 692.66876221]
[45.85500717 697.79028320]
[31.19515610 701.06402588]
[16.23702621 702.43615723]
[1.22624338 701.88409424]
[-13.59070301 699.41705322]
[-27.97050476 695.07543945]
[-41.67703247 688.93054199]
[-54.48521042 681.08331299]
[-66.18472290 671.66265869]
[-76.58345032 660.82312012]
[-85.51062775 648.74279785]
[-92.81967163 635.62005615]
[-98.39056396 621.67041016]
[-102.13182068 607.12286377]
[-103.98200989 592.21630859]
[-103.91073608 577.19555664]
[-101.91918945 562.30725098]
[-98.04006195 547.79583740]
[-92.33705902 533.89965820]
[-84.90382385 520.84686279]
[-75.86241150 508.85180664]
[-65.36130524 498.11145020]
[-53.57292938 488.80218506]
[-40.69086456 481.07684326]
[-26.92664528 475.06231689]
[-12.50629425 470.85733032]
[2.33339429 468.53097534]
[17.34873962 468.12142944]
[32.29317474 469.63540649]
[46.92130280 473.04806519]
[52.16801834 458.99560547]
[57.41473770 444.94314575]
[62.66145706 430.89065552]
[67.90817261 416.83819580]
[73.15489197 402.78570557]
[78.08648682 388.61959839]
[82.27349854 374.21578979]
[86.02980042 359.69375610]
[89.78610229 345.17169189]
[93.54239655 330.64962769]
[97.29869843 316.12756348]
[101.05500031 301.60549927]
[103.39048767 286.78845215]
[104.28330231 271.81503296]
[105.17611694 256.84161377]
[106.06893921 241.86822510]
[106.96175385 226.89482117]
[107.85456848 211.92140198]
[107.29635620 196.93179321]
[105.29234314 182.06626892]
[103.17771912 167.21607971]
[100.95259857 152.38203430]
[98.61711121 137.56495667]
[96.17138672 122.76569366]
[93.72566223 107.96642303]
[89.40879822 101.15927124]
[91.35540009 92.92874146]
[89.13027954 78.09469604]
[86.90516663 63.26065445]
[84.68004608 48.42660904]
[82.45493317 33.59256744]
[80.22981262 18.75852394]
[78.00469971 3.92447948]
[75.77957916 -10.90956402]
[66.08074951 -23.40929413]
[71.84446716 -37.14351654]
[69.61935425 -51.97755814]
[59.92052078 -64.47728729]
[65.68424225 -78.21150970]
[63.45912170 -93.04555511]
[61.23400497 -107.87960052]
[59.00888824 -122.71363831]
[49.24529266 -111.32627106]
[34.30048752 -110.04064941]
[22.73553658 -119.59323883]
[21.17537117 -134.51188660]
[30.51372337 -146.25050354]
[45.40116119 -148.08468628]
[57.30900192 -138.96455383]
[48.76401901 -152.27972412]
[55.73006058 -165.44496155]
[54.83724594 -180.41836548]
[53.94443130 -195.39176941]
[53.05161285 -210.36517334]
[52.15879822 -225.33857727]
[49.28294754 -229.69479370]
[48.44902802 -234.26184082]
[49.39540482 -238.22660828]
[51.57565689 -240.99768066]
[43.63374710 -254.68112183]
[51.18070221 -267.52218628]
[50.95737457 -282.52050781]
[50.73404694 -297.51885986]
[37.04861450 -304.37216187]
[28.12507248 -316.80712891]
[26.01397896 -331.96636963]
[31.20044899 -346.36633301]
[42.49267197 -356.69802856]
[57.29577637 -360.58734131]
[72.20811462 -357.14050293]
[83.80294800 -347.14959717]
[89.41586304 -332.91043091]
[87.75704956 -317.69506836]
[79.20769501 -304.99990845]
[65.73238373 -297.74218750]
[65.95571136 -282.74383545]
[66.17903900 -267.74551392]
[74.10497284 -255.13484192]
[66.57398987 -241.22100830]
[67.13220215 -226.23139954]
[68.02501678 -211.25799561]
[68.91783905 -196.28459167]
[69.81065369 -181.31118774]
[70.70346832 -166.33776855]
[79.18459320 -154.09359741]
[72.28240967 -139.85736084]
[73.84293365 -124.93875885]
[76.06804657 -110.10471344]
[78.29316711 -95.27066803]
[80.51828003 -80.43663025]
[90.05796051 -68.99792480]
[84.45339203 -54.20267487]
[86.67851257 -39.36863327]
[96.21818542 -27.92993164]
[90.61362457 -13.13468170]
[92.83873749 1.69936240]
[95.06385803 16.53340530]
[97.28897858 31.36745071]
[99.51409149 46.20149231]
[101.73921204 61.03553772]
[103.96432495 75.86958313]
[106.18944550 90.70362854]
[108.52493286 105.52069092]
[110.97065735 120.31996155]
[113.41638184 135.11923218]
[117.90313721 143.07579041]
[115.78664398 150.15690613]
[118.01176453 164.99095154]
[122.37956238 173.01342773]
[120.15786743 180.06225586]
[122.16188812 194.92778015]
[128.23634338 181.21279907]
[139.30923462 171.09393311]
[153.51455688 166.27642822]
[168.45849609 167.57208252]
[181.62272644 174.76257324]
[190.78883362 186.63618469]
[194.41217041 201.19198608]
[191.88214111 215.97708130]
[183.62512207 228.49992371]
[171.03253174 236.65017700]
[156.22645569 239.05439758]
[141.70198059 235.30743408]
[129.90675354 226.04069519]
[122.82797241 212.81422424]
[121.93515778 227.78762817]
[121.04234314 242.76103210]
[120.14952850 257.73443604]
[119.25670624 272.70785522]
[118.36389160 287.68124390]
[126.96302032 275.39080811]
[139.77549744 267.59078979]
[154.64222717 265.59567261]
[169.05787659 269.74160767]
[180.59317017 279.32998657]
[187.30421448 292.74499512]
[188.06005859 307.72592163]
[182.73333740 321.74826050]
[172.22171021 332.44900513]
[158.29656982 338.02487183]
[143.30453491 337.53622437]
[129.77201843 331.06542969]
[119.97951508 319.70291138]
[115.57705688 305.36181641]
[111.82076263 319.88388062]
[108.06446075 334.40591431]
[104.30815887 348.92797852]
[100.55185699 363.45004272]
[96.79555511 377.97210693]
[98.10401154 382.11239624]
[98.03395081 386.05694580]
[96.81618500 389.39648438]
[94.79072571 391.83862305]
[92.35922241 393.23358154]
[93.45381927 398.33740234]
[92.56964111 402.89498901]
[90.24612427 406.24407959]
[87.20736694 408.03244019]
[81.96064758 422.08489990]
[76.71392822 436.13739014]
[71.46720886 450.18984985]
[66.22048950 464.24230957]
[60.97377396 478.29479980]
[74.25904846 485.30404663]
[86.53890228 493.95471191]
[97.61167145 504.10467529]
[107.29554749 515.58728027]
[115.43151093 528.21405029]
[121.88594818 541.77752686]
[126.55288696 556.05505371]
[129.35568237 570.81219482]
[130.24832153 585.80657959]
[129.21612549 600.79199219]
[126.27606201 615.52239990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 199]
[37 198]
[38 197]
[39 196]
[40 195]
[41 194]
[42 190]
[43 185]
[44 184]
[45 183]
[46 182]
[47 181]
[48 180]
[49 166]
[50 165]
[51 164]
[52 163]
[53 162]
[54 161]
[55 147]
[56 146]
[57 144]
[58 143]
[59 141]
[60 140]
[61 139]
[63 138]
[64 137]
[65 136]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[72 129]
[73 128]
[75 126]
[76 125]
[77 124]
[78 123]
[85 122]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[95 115]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
