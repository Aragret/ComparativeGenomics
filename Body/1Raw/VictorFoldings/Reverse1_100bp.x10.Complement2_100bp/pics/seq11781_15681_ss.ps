%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[88.41735840 532.04852295]
[74.42344666 526.59417725]
[61.20590210 519.46142578]
[48.96509933 510.75839233]
[37.88660049 500.61706543]
[28.13836098 489.19116211]
[19.86815643 476.65390015]
[13.20136166 463.19531250]
[8.23904419 449.01943970]
[5.05643129 434.34121704]
[3.70177126 419.38311768]
[4.19559956 404.37191772]
[6.53043079 389.53521729]
[10.67086792 375.09786987]
[16.55414581 361.27880859]
[24.09107208 348.28750610]
[33.16738892 336.32086182]
[43.64550781 325.56036377]
[55.36657333 316.16906738]
[68.15290833 308.28939819]
[81.81066132 302.04077148]
[96.13279724 297.51794434]
[110.90219116 294.78945923]
[110.00937653 279.81604004]
[109.11656189 264.84262085]
[108.22373962 249.86923218]
[107.33092499 234.89582825]
[106.43811035 219.92240906]
[105.54529572 204.94900513]
[104.42964935 189.99055481]
[103.09141541 175.05036926]
[101.75318146 160.11018372]
[100.41494751 145.16999817]
[98.30032349 130.31980896]
[95.41504669 115.59991455]
[86.15850830 108.53182983]
[84.00343323 97.08644867]
[90.05548859 87.13587189]
[87.38969421 72.37465668]
[84.72389221 57.61344147]
[82.05809784 42.85222244]
[79.39230347 28.09100533]
[76.72650909 13.32978916]
[74.06071472 -1.43142831]
[71.39492035 -16.19264603]
[68.72912598 -30.95386314]
[66.06332397 -45.71508026]
[63.39752960 -60.47629547]
[53.33083725 -72.68171692]
[58.68308258 -86.58145142]
[56.01728821 -101.34267426]
[53.35149002 -116.10388947]
[50.68569565 -130.86511230]
[48.01990128 -145.62632751]
[44.80662537 -160.27810669]
[41.05032730 -174.80017090]
[37.29402542 -189.32223511]
[33.53772354 -203.84428406]
[29.18353653 -208.81948853]
[28.15060425 -214.40786743]
[29.89265060 -218.85470581]
[26.57039070 -233.48216248]
[23.24813271 -248.10961914]
[19.92587280 -262.73709106]
[16.60361290 -277.36453247]
[13.28135300 -291.99200439]
[9.95909405 -306.61947632]
[-4.93891335 -304.76797485]
[-19.94723701 -304.40908813]
[-34.91671753 -305.54632568]
[-49.69857025 -308.16842651]
[-64.14588928 -312.24929810]
[-78.11508179 -317.74841309]
[-91.46732330 -324.61108398]
[-104.06989288 -332.76913452]
[-115.79754639 -342.14147949]
[-126.53372955 -352.63494873]
[-136.17172241 -364.14529419]
[-144.61575317 -376.55804443]
[-151.78190613 -389.74990845]
[-157.59893799 -403.58972168]
[-162.00903320 -417.93997192]
[-164.96838379 -432.65802002]
[-166.44755554 -447.59759521]
[-166.43185425 -462.61019897]
[-164.92144775 -477.54663086]
[-161.93133545 -492.25848389]
[-157.49122620 -506.59945679]
[-151.64527893 -520.42712402]
[-144.45156860 -533.60394287]
[-135.98159790 -545.99902344]
[-126.31954193 -557.48919678]
[-115.56144714 -567.96014404]
[-103.81421661 -577.30798340]
[-91.19461823 -585.43963623]
[-77.82805634 -592.27441406]
[-63.84739685 -597.74426270]
[-49.39157486 -601.79492188]
[-34.60427094 -604.38610840]
[-19.63244629 -605.49206543]
[-4.62490463 -605.10180664]
[10.26919842 -603.21911621]
[24.90183449 -599.86285400]
[39.12757492 -595.06634521]
[52.80503464 -588.87713623]
[65.79827118 -581.35687256]
[77.97815704 -572.58026123]
[89.22364044 -562.63452148]
[99.42295074 -551.61853027]
[108.47471619 -539.64172363]
[116.28897858 -526.82312012]
[122.78807831 -513.29016113]
[127.90741730 -499.17739868]
[131.59611511 -484.62500000]
[133.81752014 -469.77764893]
[134.54953003 -454.78289795]
[133.78489685 -439.78976440]
[131.53121948 -424.94726562]
[127.81087494 -410.40292358]
[122.66085815 -396.30130005]
[116.13233948 -382.78253174]
[108.29021454 -369.98098755]
[99.21241760 -358.02389526]
[88.98917389 -347.03009033]
[77.72209167 -337.10882568]
[65.52314758 -328.35870361]
[52.51358032 -320.86672974]
[38.82269287 -314.70733643]
[24.58655357 -309.94171143]
[27.90881348 -295.31427002]
[31.23107338 -280.68679810]
[34.55333328 -266.05935669]
[37.87559128 -251.43188477]
[41.19785309 -236.80442810]
[44.52011108 -222.17697144]
[48.05978394 -207.60058594]
[51.81608582 -193.07853699]
[55.57238388 -178.55647278]
[59.32868576 -164.03440857]
[69.07442474 -175.43707275]
[84.07016754 -175.07965088]
[93.26160431 -163.22564697]
[89.87315369 -148.61338806]
[76.40265656 -142.01446533]
[62.78111649 -148.29211426]
[65.44691467 -133.53089905]
[68.11270905 -118.76968384]
[70.77850342 -104.00846863]
[73.44429779 -89.24725342]
[83.32032013 -78.09765625]
[78.15875244 -63.14209366]
[80.82454681 -48.38087463]
[83.49034119 -33.61965942]
[86.15613556 -18.85844040]
[88.82192993 -4.09722376]
[91.48772430 10.66399384]
[94.15351868 25.42521095]
[96.81932068 40.18642807]
[99.48511505 54.94764328]
[102.15090942 69.70886230]
[104.81670380 84.47007751]
[115.97894287 96.99128723]
[110.13494110 112.71463776]
[113.02021027 127.43453217]
[121.31555939 114.93704224]
[135.66732788 110.57508087]
[149.51408386 116.34287262]
[156.52526855 129.60346985]
[153.49546814 144.29429626]
[141.80987549 153.69889832]
[126.81096649 153.51763916]
[115.35513306 143.83177185]
[116.69336700 158.77195740]
[118.03160095 173.71214294]
[119.36983490 188.65232849]
[122.85455322 194.27088928]
[122.96248627 199.95291138]
[120.51869965 204.05619812]
[121.41151428 219.02960205]
[122.30433655 234.00300598]
[123.19715118 248.97640991]
[124.08996582 263.94982910]
[124.98278046 278.92321777]
[125.87559509 293.89663696]
[140.86456299 294.85070801]
[155.62268066 297.63958740]
[169.92619324 302.22097778]
[183.55827332 308.52542114]
[196.31227112 316.45733643]
[207.99482727 325.89648438]
[218.42884827 336.69976807]
[227.45614624 348.70339966]
[234.93986511 361.72543335]
[240.76657104 375.56845093]
[244.84791565 390.02261353]
[247.12203979 404.86874390]
[247.55447388 419.88183594]
[246.13864136 434.83425903]
[242.89601135 449.49935913]
[237.87574768 463.65478516]
[231.15396118 477.08599854]
[222.83255005 489.58935547]
[213.03765869 500.97528076]
[201.91777039 511.07119751]
[189.64146423 519.72406006]
[176.39485168 526.80267334]
[162.37875366 532.19976807]
[147.80563354 535.83349609]
[132.89642334 537.64874268]
[117.87715149 537.61804199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 184]
[24 183]
[25 182]
[26 181]
[27 180]
[28 179]
[29 178]
[30 175]
[31 174]
[32 173]
[33 172]
[34 164]
[35 163]
[38 161]
[39 160]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[45 154]
[46 153]
[47 152]
[48 151]
[50 149]
[51 148]
[52 147]
[53 146]
[54 145]
[55 139]
[56 138]
[57 137]
[58 136]
[61 135]
[62 134]
[63 133]
[64 132]
[65 131]
[66 130]
[67 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
