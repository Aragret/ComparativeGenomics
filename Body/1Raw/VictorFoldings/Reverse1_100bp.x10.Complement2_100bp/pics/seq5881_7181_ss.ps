%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGGUGUUGUGAAAGAGCCGGAUAGGCCUUACGGGGCUGCAAUGAGCCUGAUGGGGCUACGUAUGUGGUGUACUUUGUAGGAUAGUAGACAUCCGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[69.08237457 663.98724365]
[54.41944504 659.19116211]
[44.69487381 647.21472168]
[43.01173401 631.87939453]
[49.90710831 618.07879639]
[63.18070984 610.21655273]
[63.62731552 595.22320557]
[64.07392120 580.22985840]
[56.71899033 567.27783203]
[64.86374664 553.71417236]
[65.31034851 538.72082520]
[65.75695801 523.72747803]
[58.40202332 510.77545166]
[66.54677582 497.21176147]
[66.65843964 482.21218872]
[66.43511200 467.21386719]
[66.21178436 452.21551514]
[65.98845673 437.21716309]
[65.76512909 422.21884155]
[65.54180145 407.22048950]
[65.31847382 392.22216797]
[65.09514618 377.22381592]
[61.85240936 370.58255005]
[64.98181915 362.00091553]
[62.76055145 359.26260376]
[61.75524902 355.31237793]
[62.52108383 350.73342896]
[65.33175659 346.33486938]
[66.00154114 331.34982300]
[66.67132568 316.36480713]
[67.34111023 301.37976074]
[68.01089478 286.39471436]
[68.68067932 271.40966797]
[69.35047150 256.42465210]
[58.34025955 266.61166382]
[43.36447906 267.46371460]
[31.26985359 258.59127808]
[27.58588219 244.05072021]
[33.99682999 230.48974609]
[47.57169342 224.10829163]
[62.10422897 227.82383728]
[70.95088196 239.93949890]
[73.17600250 225.10545349]
[75.40111542 210.27140808]
[77.62623596 195.43736267]
[79.85134888 180.60331726]
[82.07646942 165.76928711]
[80.00850677 161.46432495]
[80.62293243 155.81459045]
[84.59502411 150.52932739]
[87.26081848 135.76811218]
[89.92661285 121.00689697]
[91.93062592 106.14136505]
[89.45596313 98.47008514]
[93.40162659 90.98927307]
[94.96215057 76.07066345]
[96.52267456 61.15206146]
[98.08319092 46.23345566]
[99.64371490 31.31485176]
[101.20423889 16.39624596]
[102.76476288 1.47764182]
[104.32528687 -13.44096279]
[105.32954407 -28.40730667]
[105.77615356 -43.40065765]
[106.22275543 -58.39400864]
[106.66936493 -73.38735962]
[103.79685211 -82.05837250]
[107.23588562 -88.60014343]
[107.90567017 -103.58518219]
[108.57545471 -118.57022095]
[109.24523926 -133.55526733]
[102.13186646 -147.68716431]
[110.42975616 -160.05624390]
[107.72691345 -166.08999634]
[108.37907410 -171.73550415]
[111.34915161 -175.47550964]
[112.46480560 -190.43397522]
[113.58045197 -205.39242554]
[102.42895508 -213.49395752]
[96.78156281 -225.94889832]
[98.01596832 -239.45985413]
[105.70324707 -250.50746155]
[117.74766541 -256.26718140]
[119.08589935 -271.20736694]
[120.09016418 -286.17370605]
[120.75994873 -301.15872192]
[110.37338257 -312.76721191]
[111.26610565 -327.95465088]
[122.39703369 -337.78509521]
[123.06681824 -352.77014160]
[123.73660278 -367.75518799]
[121.03376770 -373.78894043]
[121.68592834 -379.43444824]
[124.65600586 -383.17446899]
[125.77165222 -398.13290405]
[126.88729858 -413.09136963]
[128.00294495 -428.04980469]
[129.11859131 -443.00827026]
[130.23425293 -457.96673584]
[116.30973053 -463.91537476]
[105.07288361 -474.06484985]
[97.74259186 -487.31420898]
[95.11399078 -502.22625732]
[97.47220612 -517.18347168]
[104.56145477 -530.56335449]
[115.61272430 -540.91455078]
[129.42727661 -547.11431885]
[144.50659180 -548.49011230]
[159.21499634 -544.89270020]
[171.95703125 -536.71221924]
[181.35052490 -524.83618164]
[186.37654114 -510.55270386]
[186.48991394 -495.41116333]
[181.67831421 -481.05401611]
[172.46369934 -469.03863525]
[159.84559631 -460.66833496]
[145.19270325 -456.85107422]
[144.07705688 -441.89260864]
[142.96141052 -426.93417358]
[141.84574890 -411.97570801]
[140.73010254 -397.01727295]
[139.61445618 -382.05880737]
[138.72163391 -367.08538818]
[138.05184937 -352.10037231]
[137.38206482 -337.11532593]
[147.59158325 -326.33099365]
[147.12579346 -311.12451172]
[135.74497986 -300.48895264]
[135.07519531 -285.50390625]
[137.17198181 -282.66915894]
[137.99989319 -278.67794800]
[137.03036499 -274.13778687]
[134.02609253 -269.86911011]
[132.68785095 -254.92893982]
[145.39411926 -244.53526306]
[149.44203186 -228.45497131]
[143.04417419 -212.97695923]
[128.53890991 -204.27677917]
[127.42325592 -189.31832886]
[126.30760956 -174.35986328]
[125.41479492 -159.38645935]
[132.57608032 -146.32640076]
[124.23027802 -132.88548279]
[123.56049347 -117.90043640]
[122.89070892 -102.91539764]
[122.22092438 -87.93035889]
[121.66271210 -72.94075012]
[121.21611023 -57.94740295]
[120.76950073 -42.95405197]
[120.32289886 -27.96070099]
[132.86413574 -36.18975830]
[147.16406250 -31.66073036]
[152.68130493 -17.71225166]
[145.34875488 -4.62662172]
[130.57170105 -2.05007792]
[119.24388885 -11.88043976]
[117.68336487 3.03816485]
[116.12284851 17.95676994]
[114.56232452 32.87537384]
[113.00180054 47.79397964]
[111.44127655 62.71258545]
[109.88075256 77.63118744]
[108.32022858 92.54979706]
[106.87081146 107.47959900]
[119.04583740 98.71782684]
[133.87194824 100.99516296]
[142.85609436 113.00704193]
[140.85171509 127.87252808]
[129.00703430 137.07597351]
[114.10722351 135.34524536]
[104.68782806 123.67269135]
[102.02203369 138.43391418]
[99.35623932 153.19512939]
[96.91051483 167.99440002]
[94.68539429 182.82844543]
[92.46027374 197.66249084]
[90.23516083 212.49652100]
[88.01004028 227.33056641]
[85.78492737 242.16461182]
[84.33551025 257.09442139]
[83.66571808 272.07946777]
[82.99593353 287.06451416]
[82.32614899 302.04953003]
[81.65636444 317.03457642]
[80.98657990 332.01962280]
[80.31679535 347.00466919]
[79.98181915 362.00091553]
[80.09348297 377.00048828]
[80.31681061 391.99884033]
[80.54013824 406.99716187]
[80.76346588 421.99551392]
[80.98680115 436.99383545]
[81.21012878 451.99218750]
[81.43345642 466.99053955]
[81.65678406 481.98886108]
[84.33524323 486.46914673]
[84.96440887 491.06887817]
[83.84193420 494.98742676]
[81.54012299 497.65838623]
[88.86311340 511.68280029]
[80.75030518 524.17407227]
[80.30369568 539.16741943]
[79.85709381 554.16076660]
[87.18008423 568.18518066]
[79.06727600 580.67645264]
[78.62066650 595.66979980]
[78.17405701 610.66314697]
[90.95616150 619.30151367]
[97.01788330 633.48809814]
[94.42495728 648.69598389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 207]
[7 206]
[8 205]
[10 203]
[11 202]
[12 201]
[14 199]
[15 195]
[16 194]
[17 193]
[18 192]
[19 191]
[20 190]
[21 189]
[22 188]
[24 187]
[28 186]
[29 185]
[30 184]
[31 183]
[32 182]
[33 181]
[34 180]
[42 179]
[43 178]
[44 177]
[45 176]
[46 175]
[47 174]
[50 173]
[51 172]
[52 171]
[53 164]
[55 163]
[56 162]
[57 161]
[58 160]
[59 159]
[60 158]
[61 157]
[62 156]
[63 150]
[64 149]
[65 148]
[66 147]
[68 146]
[69 145]
[70 144]
[71 143]
[73 141]
[76 140]
[77 139]
[78 138]
[83 134]
[84 133]
[85 129]
[86 128]
[89 125]
[90 124]
[91 123]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
