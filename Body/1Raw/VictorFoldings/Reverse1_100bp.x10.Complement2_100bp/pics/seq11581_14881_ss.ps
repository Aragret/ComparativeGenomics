%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[50.34167480 719.54333496]
[35.70187378 722.87622070]
[20.79074287 724.63415527]
[5.77723074 724.79711914]
[-9.16854572 723.36328125]
[-23.87724113 720.34893799]
[-38.18218994 715.78814697]
[-51.92131424 709.73272705]
[-64.93893433 702.25115967]
[-77.08754730 693.42828369]
[-88.22950745 683.36401367]
[-98.23855591 672.17248535]
[-107.00129700 659.98040771]
[-114.41843414 646.92596436]
[-120.40592957 633.15710449]
[-124.89593506 618.82977295]
[-127.83757782 604.10638428]
[-129.19752502 589.15368652]
[-128.96037292 574.14117432]
[-127.12880707 559.23889160]
[-123.72357178 544.61578369]
[-118.78326416 530.43743896]
[-112.36385345 516.86450195]
[-104.53807831 504.05087280]
[-95.39460754 492.14169312]
[-85.03704834 481.27185059]
[-73.58276367 471.56457520]
[-61.16152954 463.12982178]
[-47.91409302 456.06317139]
[-33.99055481 450.44470215]
[-19.54868698 446.33807373]
[-4.75211906 443.78979492]
[10.23148918 442.82876587]
[25.23236275 443.46585083]
[27.45747948 428.63180542]
[29.68259621 413.79776001]
[31.90771484 398.96371460]
[29.83975220 394.65878296]
[30.45417786 389.00903320]
[34.42626953 383.72378540]
[29.07402420 369.82403564]
[39.14071655 357.61862183]
[41.80651474 342.85739136]
[44.47230911 328.09619141]
[47.13810349 313.33496094]
[49.80389786 298.57376099]
[52.46969604 283.81253052]
[55.02552795 269.03189087]
[53.01469421 261.92004395]
[57.61941147 254.03115845]
[60.28520966 239.26994324]
[62.95100403 224.50872803]
[65.61679840 209.74751282]
[68.28259277 194.98628235]
[70.94838715 180.22506714]
[58.04022598 187.86570740]
[43.47640228 184.27473450]
[35.59974289 171.50921631]
[38.92235565 156.88183594]
[51.54089355 148.77182007]
[66.22689056 151.82493591]
[74.56734467 164.29130554]
[78.53943634 149.82678223]
[74.44860840 135.50497437]
[85.56407928 124.24633026]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[95.25408173 77.14212036]
[100.13970947 71.59662628]
[104.32672119 57.19284821]
[108.51373291 42.78906631]
[112.70074463 28.38528442]
[116.88775635 13.98150158]
[121.07476807 -0.42228016]
[115.55804443 -12.08112144]
[119.34194946 -23.99186707]
[129.87817383 -29.93447876]
[134.27915955 -44.27432632]
[138.68016052 -58.61417389]
[142.86717224 -73.01795197]
[146.83926392 -87.48248291]
[150.81137085 -101.94700623]
[154.78346252 -116.41152954]
[149.09376526 -127.98693848]
[152.69992065 -139.95269775]
[163.14649963 -146.05152893]
[167.33351135 -160.45530701]
[161.81678772 -172.11415100]
[165.60069275 -184.02488708]
[176.13690186 -189.96749878]
[180.53790283 -204.30735779]
[184.93890381 -218.64720154]
[189.33990479 -232.98704529]
[193.63401794 -247.35925293]
[197.82102966 -261.76303101]
[202.00804138 -276.16680908]
[188.48458862 -282.74133301]
[176.26684570 -291.50686646]
[165.70634460 -302.21124268]
[157.10694885 -314.54650879]
[150.71606445 -328.15768433]
[146.71755981 -342.65319824]
[145.22650146 -357.61599731]
[146.28578186 -372.61550903]
[149.86492920 -387.22024536]
[155.86096191 -401.00994873]
[164.10134888 -413.58786011]
[174.34899902 -424.59210205]
[186.30909729 -433.70605469]
[199.63749695 -440.66751099]
[213.95071411 -445.27615356]
[228.83694458 -447.39938354]
[243.86787415 -446.97613525]
[258.61102295 -444.01855469]
[272.64224243 -438.61178589]
[285.55776978 -430.91131592]
[296.98602295 -421.13876343]
[306.59820557 -409.57528687]
[314.11773682 -396.55358887]
[319.32827759 -382.44833374]
[322.07989502 -367.66534424]
[322.29342651 -352.62997437]
[319.96270752 -337.77481079]
[315.15484619 -323.52725220]
[308.00811768 -310.29727173]
[298.72821045 -298.46548462]
[287.58206177 -288.37234497]
[274.89041138 -280.30822754]
[261.01843262 -274.50515747]
[246.36520386 -271.13009644]
[231.35235596 -270.28015137]
[216.41183472 -271.97979736]
[212.22482300 -257.57601929]
[208.03781128 -243.17224121]
[209.18928528 -235.87184143]
[203.67974854 -228.58604431]
[199.27874756 -214.24620056]
[194.87774658 -199.90635681]
[190.47676086 -185.56651306]
[195.32194519 -168.69964600]
[181.73728943 -156.26829529]
[177.55027771 -141.86451721]
[182.64605713 -125.07166290]
[169.24798584 -112.43943024]
[165.27589417 -97.97490692]
[161.30380249 -83.51038361]
[157.33169556 -69.04586029]
[158.87344360 -64.52567291]
[157.59201050 -58.98898315]
[153.02000427 -54.21317673]
[148.61901855 -39.87332916]
[144.21801758 -25.53348160]
[149.06321716 -8.66662025]
[135.47854614 3.76473117]
[131.29153442 18.16851234]
[127.10453033 32.57229614]
[122.91751862 46.97607803]
[118.73050690 61.37985992]
[114.54349518 75.78363800]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[100.02860260 128.21842957]
[103.83531952 143.57484436]
[93.00395966 153.79888916]
[89.03186798 168.26341248]
[85.70960999 182.89086914]
[83.04381561 197.65208435]
[80.37801361 212.41329956]
[77.71221924 227.17451477]
[75.04642487 241.93572998]
[72.38063049 256.69696045]
[69.82479858 271.47760010]
[71.51310730 280.45465088]
[67.23091125 286.47833252]
[64.56511688 301.23953247]
[61.89932251 316.00076294]
[59.23352432 330.76199341]
[56.56772995 345.52319336]
[53.90193558 360.28442383]
[59.06350327 375.23995972]
[49.18748474 386.38958740]
[46.74175644 401.18884277]
[44.51663971 416.02288818]
[42.29152298 430.85693359]
[40.06640625 445.69097900]
[54.59401321 449.48315430]
[68.63622284 454.79809570]
[82.03392792 461.57553101]
[94.63532257 469.73867798]
[106.29762268 479.19503784]
[116.88867950 489.83749390]
[126.28849792 501.54541016]
[134.39056396 514.18615723]
[141.10307312 527.61651611]
[146.34999084 541.68426514]
[150.07182312 556.23004150]
[152.22644043 571.08905029]
[152.78939819 586.09289551]
[151.75433350 601.07159424]
[149.13298035 615.85534668]
[144.95501709 630.27679443]
[139.26780701 644.17236328]
[132.13577271 657.38470459]
[123.63973999 669.76409912]
[113.87597656 681.17028809]
[102.95510101 691.47399902]
[91.00085449 700.55853271]
[78.14870453 708.32086182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 187]
[35 186]
[36 185]
[37 184]
[40 183]
[42 181]
[43 180]
[44 179]
[45 178]
[46 177]
[47 176]
[48 174]
[50 173]
[51 172]
[52 171]
[53 170]
[54 169]
[55 168]
[62 167]
[63 166]
[65 164]
[66 163]
[68 161]
[70 160]
[71 159]
[72 158]
[73 157]
[74 156]
[75 155]
[78 153]
[79 152]
[80 151]
[81 148]
[82 147]
[83 146]
[84 145]
[87 143]
[88 142]
[91 140]
[92 139]
[93 138]
[94 137]
[95 135]
[96 134]
[97 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
