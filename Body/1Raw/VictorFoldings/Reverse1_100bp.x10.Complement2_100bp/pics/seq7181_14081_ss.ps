%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[69.87109375 486.19387817]
[69.37407684 501.21163940]
[66.74478149 516.00579834]
[62.03673935 530.27520752]
[55.34579849 543.72924805]
[46.80817413 556.09411621]
[36.59769058 567.11804199]
[24.92221069 576.57659912]
[12.01943779 584.27716064]
[-1.84794521 590.06304932]
[-16.39761734 593.81646729]
[-31.33336258 595.46087646]
[-46.35111237 594.96295166]
[-61.14512253 592.33276367]
[-75.41420746 587.62377930]
[-88.86786652 580.93200684]
[-101.23220062 572.39361572]
[-112.25548553 562.18249512]
[-121.71330261 550.50640869]
[-129.41310120 537.60314941]
[-135.19812012 523.73541260]
[-138.95060730 509.18551636]
[-140.59413147 494.24966431]
[-140.09524536 479.23196411]
[-137.46412659 464.43811035]
[-132.75431824 450.16931152]
[-126.06170654 436.71606445]
[-117.52255249 424.35226440]
[-107.31070709 413.32962036]
[-95.63405609 403.87252808]
[-82.73033142 396.17352295]
[-68.86222839 390.38934326]
[-54.31209564 386.63778687]
[-39.37614441 384.99517822]
[-24.35845757 385.49496460]
[-9.56477261 388.12701416]
[4.70372868 392.83770752]
[11.38392353 379.40734863]
[18.06411743 365.97695923]
[24.74431229 352.54656982]
[30.61327362 338.74240112]
[35.65018845 324.61337280]
[40.68710709 310.48434448]
[39.97219849 303.12835693]
[45.90562439 296.18341064]
[51.15234375 282.13092041]
[56.39905930 268.07846069]
[61.64577866 254.02598572]
[66.89249420 239.97352600]
[72.13921356 225.92105103]
[75.67888641 211.34466553]
[77.46134949 196.45095825]
[79.24382019 181.55723572]
[77.36368561 178.57438660]
[76.83492279 174.53266907]
[78.13945007 170.07716370]
[81.45288849 166.04377747]
[83.89862061 151.24450684]
[86.34434509 136.44523621]
[88.79006958 121.64596558]
[91.23580170 106.84669495]
[78.44282532 114.67866516]
[63.82715225 111.30492401]
[55.76130295 98.65810394]
[58.86576462 83.98287201]
[71.36215973 75.68587494]
[86.09197998 78.52000427]
[94.61711884 90.86081696]
[98.37342072 76.33876038]
[102.12972260 61.81669998]
[105.88602448 47.29464340]
[104.48957825 42.26502609]
[105.10091400 37.66289902]
[107.22097778 34.18146515]
[110.14790344 32.21539307]
[106.80008698 16.75244522]
[117.93105316 6.85542536]
[122.33204651 -7.48442221]
[126.73304749 -21.82426834]
[131.13404846 -36.16411591]
[123.98542023 -50.00373077]
[128.65293884 -64.48368073]
[141.89094543 -71.21351624]
[146.29194641 -85.55335999]
[142.94413757 -101.01630402]
[154.07508850 -110.91333008]
[157.93939209 -125.40702057]
[161.26165771 -140.03448486]
[164.58392334 -154.66194153]
[167.90617371 -169.28939819]
[171.22843933 -183.91685486]
[174.55068970 -198.54432678]
[160.53675842 -203.96900940]
[147.46203613 -211.37641907]
[135.60523987 -220.60867310]
[125.21909332 -231.46894836]
[116.52497101 -243.72578430]
[109.70819092 -257.11791992]
[104.91405487 -271.35989380]
[102.24475098 -286.14816284]
[101.75716400 -301.16748047]
[103.46170807 -316.09774780]
[107.32202911 -330.62069702]
[113.25585938 -344.42675781]
[121.13671112 -357.22167969]
[130.79661560 -368.73272705]
[142.02964783 -378.71453857]
[154.59638977 -386.95437622]
[168.22898865 -393.27658081]
[182.63685608 -397.54638672]
[197.51287842 -399.67279053]
[212.53999329 -399.61050415]
[227.39787292 -397.36080933]
[241.76983643 -392.97167969]
[255.34954834 -386.53665161]
[267.84753418 -378.19293213]
[278.99743652 -368.11831665]
[288.56155396 -356.52755737]
[296.33602905 -343.66772461]
[302.15518188 -329.81292725]
[305.89495850 -315.25848389]
[307.47564697 -300.31460571]
[306.86355591 -285.29983521]
[304.07171631 -270.53424072]
[299.15966797 -256.33248901]
[292.23205566 -242.99732971]
[283.43661499 -230.81300354]
[272.96078491 -220.03921509]
[261.02783203 -210.90559387]
[247.89215088 -203.60685730]
[233.83370972 -198.29853821]
[219.15217590 -195.09381104]
[204.16047668 -194.06098938]
[189.17816162 -195.22206116]
[185.85589600 -180.59460449]
[182.53363037 -165.96714783]
[179.21138000 -151.33967590]
[175.88911438 -136.71221924]
[172.56686401 -122.08476257]
[186.45677185 -127.74781799]
[199.61849976 -120.55275726]
[202.34970093 -105.80350494]
[192.63703918 -94.37265778]
[177.64033508 -94.68661499]
[168.41494751 -106.51232910]
[172.07754517 -92.07506561]
[160.63179016 -81.15235901]
[156.23078918 -66.81251526]
[163.41439819 -53.81515121]
[159.15542603 -39.20981216]
[145.47389221 -31.76311874]
[141.07289124 -17.42327118]
[136.67189026 -3.08342385]
[132.27090454 11.25642300]
[135.93350220 25.69368744]
[124.48774719 36.61639023]
[120.40808105 51.05094147]
[116.65177917 65.57299805]
[112.89547729 80.09506226]
[109.13918304 94.61711884]
[106.03507233 109.29241943]
[103.58934021 124.09169006]
[101.14361572 138.89096069]
[98.69789124 153.69023132]
[96.25215912 168.48950195]
[94.13753510 183.33970642]
[92.35507202 198.23341370]
[90.57260132 213.12713623]
[99.33908844 200.95550537]
[111.70076752 192.45910645]
[126.20540619 188.63607788]
[141.14901733 189.93557739]
[154.77603149 196.20491028]
[165.48556519 206.70756531]
[172.01947021 220.20971680]
[173.61015320 235.12513733]
[170.07073975 249.70158386]
[161.81703186 262.22662354]
[149.81867981 271.22882080]
[135.48522949 275.65060425]
[120.50057220 274.97253418]
[106.62506866 269.27423096]
[95.48881531 259.22515869]
[88.40008545 246.00587463]
[86.19168854 231.16777039]
[80.94496918 245.22023010]
[75.69824982 259.27270508]
[70.45153046 273.32516479]
[65.20481110 287.37765503]
[59.95809555 301.43011475]
[54.81613541 315.52127075]
[49.77922058 329.65029907]
[44.74230194 343.77932739]
[57.83536148 336.46005249]
[72.74323273 338.11996460]
[83.90565491 348.13995361]
[87.15931702 362.78283691]
[81.29068756 376.58712769]
[68.48860931 384.40423584]
[53.52795792 383.31851196]
[41.98867035 373.73495483]
[38.17469025 359.22677612]
[31.49449348 372.65716553]
[24.81429863 386.08752441]
[18.13410568 399.51791382]
[30.49949455 408.05474854]
[41.52404022 418.26455688]
[50.98330307 429.93945312]
[58.68470001 442.84176636]
[64.47144318 456.70877075]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 205]
[38 204]
[39 203]
[40 202]
[41 193]
[42 192]
[43 191]
[45 190]
[46 189]
[47 188]
[48 187]
[49 186]
[50 185]
[51 168]
[52 167]
[53 166]
[57 165]
[58 164]
[59 163]
[60 162]
[61 161]
[68 160]
[69 159]
[70 158]
[71 157]
[75 156]
[77 154]
[78 153]
[79 152]
[80 151]
[83 148]
[84 147]
[86 145]
[87 139]
[88 138]
[89 137]
[90 136]
[91 135]
[92 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
