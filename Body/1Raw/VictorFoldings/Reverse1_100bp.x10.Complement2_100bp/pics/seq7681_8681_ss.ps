%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[266.88537598 345.68994141]
[276.69830322 334.32315063]
[266.53475952 323.29125977]
[256.37121582 312.25936890]
[246.20767212 301.22750854]
[236.04412842 290.19561768]
[225.71745300 279.31628418]
[215.22994995 268.59191895]
[216.78860474 283.51071167]
[210.12933350 296.95147705]
[197.31559753 304.74945068]
[182.31787109 304.48831177]
[169.78335571 296.24902344]
[163.59602356 282.58456421]
[165.67306519 267.72906494]
[175.37091064 256.28564453]
[189.68455505 251.80017090]
[204.17900085 255.66264343]
[195.21829224 243.63327026]
[186.25759888 231.60389709]
[177.29690552 219.57450867]
[160.83033752 213.50665283]
[158.83976746 195.20039368]
[149.70097351 183.30575562]
[140.56216431 171.41113281]
[131.42337036 159.51649475]
[122.28456116 147.62185669]
[119.26705170 162.31521606]
[106.81999969 170.68606567]
[92.07365417 167.93919373]
[83.47538757 155.64814758]
[85.95067596 140.85379028]
[98.08155823 132.03100586]
[112.91810608 134.23339844]
[104.87693024 121.57086945]
[96.83576202 108.90834808]
[92.10798645 106.63632202]
[88.98972321 101.87714386]
[88.75019836 95.74692535]
[81.08960724 82.85060120]
[73.42900848 69.95427704]
[65.76840973 57.05794907]
[53.48479843 53.12403488]
[47.36976624 42.22494507]
[50.22583008 30.47039413]
[42.75808716 17.46144295]
[35.29034805 4.45248985]
[27.82260704 -8.55646229]
[10.85571384 -12.81602478]
[2.38573647 -27.73495102]
[7.22919893 -43.84021759]
[-0.43139836 -56.73654556]
[-8.09199619 -69.63287354]
[-15.75259304 -82.52919769]
[-23.41319084 -95.42552948]
[-31.07378769 -108.32185364]
[-44.77380753 -116.23513031]
[-44.62152481 -131.12895203]
[-52.28212357 -144.02528381]
[-59.94272232 -156.92161560]
[-67.60331726 -169.81794739]
[-74.67654419 -175.59783936]
[-75.28031921 -182.96379089]
[-82.74806213 -195.97274780]
[-90.21580505 -208.98170471]
[-104.12456512 -203.30456543]
[-118.66592407 -199.53199768]
[-133.58038330 -197.73132324]
[-148.60177612 -197.93469238]
[-163.46200562 -200.13847351]
[-177.89591980 -204.30331421]
[-191.64587402 -210.35491943]
[-204.46653748 -218.18527222]
[-216.12905884 -227.65461731]
[-226.42535400 -238.59399414]
[-235.17164612 -250.80816650]
[-242.21183777 -264.07916260]
[-247.42031860 -278.17010498]
[-250.70411682 -292.82958984]
[-252.00463867 -307.79595947]
[-251.29866028 -322.80212402]
[-248.59880066 -337.58029175]
[-243.95323181 -351.86669922]
[-237.44485474 -365.40646362]
[-229.18983459 -377.95785522]
[-219.33546448 -389.29696655]
[-208.05763245 -399.22137451]
[-195.55760193 -407.55398560]
[-182.05844116 -414.14611816]
[-167.80107117 -418.88009644]
[-153.03990173 -421.67144775]
[-138.03840637 -422.47036743]
[-123.06426239 -421.26257324]
[-108.38473511 -418.06964111]
[-94.26177979 -412.94854736]
[-80.94744110 -405.99069214]
[-68.67932892 -397.32025146]
[-57.67638016 -387.09191895]
[-48.13495636 -375.48828125]
[-40.22534180 -362.71636963]
[-34.08868408 -349.00415039]
[-29.83450317 -334.59634399]
[-27.53871918 -319.75003052]
[-27.24230385 -304.73019409]
[-28.95054626 -289.80487061]
[-32.63296127 -275.24041748]
[-38.22383118 -261.29675293]
[-45.62337875 -248.22271729]
[-54.69955444 -236.25164795]
[-65.29038239 -225.59718323]
[-77.20685577 -216.44944763]
[-69.73911285 -203.44049072]
[-62.27136993 -190.43153381]
[-54.70699310 -177.47853088]
[-47.04639435 -164.58221436]
[-39.38579559 -151.68588257]
[-31.72519875 -138.78955078]
[-18.57311440 -131.79870605]
[-18.17746162 -115.98245239]
[-10.51686382 -103.08612061]
[-2.85626626 -90.18979645]
[4.80433130 -77.29347229]
[12.46492863 -64.39714050]
[20.12552643 -51.50081635]
[32.93427658 -50.09886932]
[42.74325180 -41.44635391]
[45.82312393 -28.53415489]
[40.83155823 -16.02420425]
[48.29930115 -3.01525116]
[55.76704025 9.99370098]
[63.23478317 23.00265312]
[78.86363220 30.98425674]
[78.66473389 49.39735031]
[86.32533264 62.29367828]
[93.98593140 75.19000244]
[101.64653015 88.08633423]
[109.49828339 100.86717224]
[117.53945923 113.52970123]
[125.58062744 126.19222260]
[134.17919922 138.48306274]
[143.31799316 150.37770081]
[152.45680237 162.27232361]
[161.59559631 174.16696167]
[170.73440552 186.06159973]
[183.39845276 188.50794983]
[190.76530457 198.60316467]
[189.32627869 210.61381531]
[198.28697205 222.64318848]
[207.24768066 234.67257690]
[216.20837402 246.70195007]
[225.95433044 258.10440063]
[236.44183350 268.82879639]
[242.69496155 270.97586060]
[246.37297058 275.30822754]
[247.07600403 280.03207397]
[257.23956299 291.06396484]
[267.40310669 302.09582520]
[277.56665039 313.12771606]
[287.73019409 324.15957642]
[299.86157227 315.30932617]
[312.92276001 307.89962769]
[326.74346924 302.02716064]
[341.14349365 297.76843262]
[355.93511963 295.17895508]
[370.92550659 294.29254150]
[385.91925049 295.12069702]
[400.72082520 297.65264893]
[415.13729858 301.85537720]
[428.98071289 307.67413330]
[442.07061768 315.03298950]
[454.23629761 323.83602905]
[465.31918335 333.96850586]
[475.17480469 345.29833984]
[483.67462158 357.67776489]
[490.70788574 370.94543457]
[496.18286133 384.92837524]
[500.02819824 399.44427490]
[502.19372559 414.30389404]
[502.65124512 429.31350708]
[501.39477539 444.27743530]
[498.44070435 459.00057983]
[493.82754517 473.29101562]
[487.61544800 486.96243286]
[479.88537598 499.83657837]
[470.73809814 511.74563599]
[460.29293823 522.53430176]
[448.68600464 532.06201172]
[436.06860352 540.20446777]
[422.60528564 546.85552979]
[408.47155762 551.92852783]
[393.85165405 555.35729980]
[378.93621826 557.09716797]
[363.91964722 557.12536621]
[348.99777222 555.44165039]
[334.36508179 552.06787109]
[320.21237183 547.04803467]
[306.72415161 540.44763184]
[294.07623291 532.35266113]
[282.43356323 522.86871338]
[271.94787598 512.11938477]
[262.75592041 500.24478149]
[254.97749329 487.39981079]
[248.71401978 473.75183105]
[244.04716492 459.47885132]
[241.03775024 444.76690674]
[239.72503662 429.80783081]
[240.12611389 414.79660034]
[242.23574829 399.92892456]
[246.02647400 385.39868164]
[251.44882202 371.39526367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 159]
[3 158]
[4 157]
[5 156]
[6 155]
[7 152]
[8 151]
[18 150]
[19 149]
[20 148]
[21 147]
[23 144]
[24 143]
[25 142]
[26 141]
[27 140]
[34 139]
[35 138]
[36 137]
[39 136]
[40 135]
[41 134]
[42 133]
[45 131]
[46 130]
[47 129]
[48 128]
[51 124]
[52 123]
[53 122]
[54 121]
[55 120]
[56 119]
[58 117]
[59 116]
[60 115]
[61 114]
[63 113]
[64 112]
[65 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
