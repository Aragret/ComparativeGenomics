%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[74.89748383 864.81347656]
[59.90899658 864.14355469]
[44.97610855 862.69012451]
[30.13975716 860.45709229]
[15.44060230 857.45068359]
[0.91893709 853.67913818]
[-13.38543701 849.15270996]
[-27.43331146 843.88385010]
[-41.18618393 837.88696289]
[-54.60635757 831.17858887]
[-67.65704346 823.77703857]
[-80.30248260 815.70257568]
[-92.50800323 806.97735596]
[-104.24015045 797.62536621]
[-115.46677399 787.67211914]
[-126.15710449 777.14501953]
[-136.28182983 766.07281494]
[-145.81320190 754.48590088]
[-154.72511292 742.41601562]
[-162.99310303 729.89630127]
[-170.59454346 716.96099854]
[-177.50857544 703.64562988]
[-183.71626282 689.98663330]
[-189.20057678 676.02142334]
[-193.94648743 661.78839111]
[-197.94100952 647.32647705]
[-201.17315674 632.67529297]
[-203.63410950 617.87506104]
[-205.31709290 602.96624756]
[-206.21749878 587.98986816]
[-206.33287048 572.98687744]
[-205.66288757 557.99835205]
[-204.20938110 543.06549072]
[-201.97634888 528.22912598]
[-198.96989441 513.52996826]
[-195.19825745 499.00833130]
[-190.67178345 484.70397949]
[-185.40289307 470.65612793]
[-179.40600586 456.90325928]
[-172.69755554 443.48309326]
[-165.29595947 430.43243408]
[-157.22148132 417.78701782]
[-148.49624634 405.58154297]
[-139.14419556 393.84942627]
[-129.19094849 382.62283325]
[-118.66378021 371.93252563]
[-107.59155273 361.80783081]
[-96.00461578 352.27648926]
[-83.93472290 343.36462402]
[-71.41495514 335.09664917]
[-58.47964096 327.49526978]
[-45.16422272 320.58126831]
[-31.50520325 314.37362671]
[-17.54001999 308.88937378]
[-3.30694842 304.14349365]
[11.15499687 300.14901733]
[25.80617714 296.91690063]
[40.60643387 294.45599365]
[55.51520157 292.77307129]
[70.49161530 291.87268066]
[85.49462891 291.75735474]
[86.16441345 276.77233887]
[86.83419800 261.78729248]
[87.50398254 246.80224609]
[88.17376709 231.81721497]
[80.24482727 222.68165588]
[80.68019867 210.19189453]
[89.79156494 201.06250000]
[82.82552338 187.89726257]
[91.37050629 174.58209229]
[92.26332092 159.60867310]
[93.15613556 144.63526917]
[93.37946320 129.63693237]
[92.93286133 114.64358521]
[83.75152588 100.60508728]
[91.86329651 85.92259979]
[91.19351196 70.93756104]
[90.52372742 55.95252609]
[82.17793274 42.51160812]
[89.33921051 29.45153999]
[88.66942596 14.46650124]
[87.99964142 -0.51853746]
[87.32985687 -15.50357628]
[86.66007233 -30.48861504]
[77.68563843 -39.75264740]
[77.43627167 -52.24750900]
[85.50034332 -61.26400757]
[85.05374146 -76.25735474]
[74.25231171 -84.30370331]
[70.11763763 -96.91777802]
[73.94627380 -109.42472076]
[84.12619781 -117.32400513]
[83.90287018 -132.32234192]
[83.67954254 -147.32067871]
[83.45621490 -162.31901550]
[83.23288727 -177.31735229]
[68.83318329 -182.00001526]
[56.73564911 -191.10650635]
[48.25253677 -203.64906311]
[44.30403137 -218.26713562]
[45.31843567 -233.37507629]
[51.18571472 -247.33407593]
[61.26942825 -258.62997437]
[74.47577667 -266.03747559]
[89.37222290 -268.75308228]
[104.34292603 -266.48220825]
[117.76396179 -259.47119141]
[128.17953491 -248.48052979]
[134.45982361 -234.70239258]
[135.92358398 -219.63136292]
[132.41206360 -204.90220642]
[124.30615997 -192.11265564]
[112.48512268 -182.64999390]
[98.23122406 -177.54067993]
[98.45455170 -162.54234314]
[98.67787933 -147.54400635]
[98.90120697 -132.54566956]
[99.12453461 -117.54733276]
[111.68174744 -106.36005402]
[112.27416229 -89.21467590]
[100.04708862 -76.70396423]
[100.49369812 -61.71061325]
[110.50790405 -47.29941559]
[101.64511108 -31.15839958]
[102.31489563 -16.17336082]
[102.98468018 -1.18832254]
[103.65446472 13.79671574]
[104.32424927 28.78175545]
[112.62213898 41.15084457]
[105.50876617 55.28274155]
[106.17855072 70.26777649]
[106.84833527 85.25281525]
[114.95397186 93.61582184]
[115.38739014 105.25426483]
[107.92620850 114.19698334]
[108.37281799 129.19032288]
[119.42041016 119.04386139]
[134.41209412 119.54325867]
[144.75994873 130.40243530]
[144.53627014 145.40077209]
[133.86917114 155.94653320]
[118.86926270 155.99862671]
[108.12954712 145.52809143]
[107.23673248 160.50149536]
[106.34391022 175.47489929]
[113.24609375 189.71113586]
[104.76496887 201.95530701]
[113.38646698 218.22650146]
[103.15880585 232.48699951]
[102.48902130 247.47203064]
[101.81923676 262.45706177]
[101.14945221 277.44210815]
[100.47966766 292.42715454]
[115.41255951 293.88052368]
[130.24893188 296.11343384]
[144.94810486 299.11975098]
[159.46978760 302.89126587]
[173.77418518 307.41760254]
[187.82209778 312.68637085]
[201.57499695 318.68313599]
[214.99520874 325.39144897]
[228.04594421 332.79293823]
[240.69143677 340.86730957]
[252.89700317 349.59240723]
[264.62921143 358.94436646]
[275.85589600 368.89752197]
[286.54629517 379.42459106]
[296.67108154 390.49670410]
[306.20251465 402.08355713]
[315.11450195 414.15338135]
[323.38256836 426.67306519]
[330.98410034 439.60830688]
[337.89819336 452.92367554]
[344.10595703 466.58264160]
[349.59036255 480.54776001]
[354.33636475 494.78079224]
[358.33096313 509.24270630]
[361.56323242 523.89385986]
[364.02426147 538.69409180]
[365.70733643 553.60284424]
[366.60781860 568.57922363]
[366.72329712 583.58227539]
[366.05340576 598.57073975]
[364.59997559 613.50366211]
[362.36703491 628.34002686]
[359.36065674 643.03918457]
[355.58911133 657.56085205]
[351.06274414 671.86523438]
[345.79391479 685.91314697]
[339.79711914 699.66601562]
[333.08877563 713.08618164]
[325.68722534 726.13690186]
[317.61282349 738.78234863]
[308.88769531 750.98791504]
[299.53570557 762.72009277]
[289.58251953 773.94677734]
[279.05541992 784.63708496]
[267.98324585 794.76190186]
[256.39636230 804.29327393]
[244.32652283 813.20520020]
[231.80680847 821.47326660]
[218.87153625 829.07470703]
[205.55616760 835.98883057]
[191.89718628 842.19653320]
[177.93202209 847.68090820]
[163.69898987 852.42687988]
[149.23706055 856.42138672]
[134.58590698 859.65362549]
[119.78565979 862.11462402]
[104.87690735 863.79760742]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[61 153]
[62 152]
[63 151]
[64 150]
[65 149]
[68 147]
[70 145]
[71 144]
[72 143]
[73 136]
[74 135]
[76 132]
[77 131]
[78 130]
[80 128]
[81 127]
[82 126]
[83 125]
[84 124]
[87 122]
[88 121]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
