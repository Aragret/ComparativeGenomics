%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[153.28341675 577.35382080]
[163.75053406 566.44824219]
[176.96789551 559.11389160]
[173.86378479 544.43859863]
[170.75967407 529.76330566]
[167.65556335 515.08801270]
[155.23960876 502.68594360]
[161.09274292 485.22677612]
[157.77047729 470.59930420]
[154.44822693 455.97186279]
[151.12596130 441.34439087]
[137.46762085 438.91177368]
[125.73101044 431.43353271]
[117.70587921 420.01089478]
[114.63086700 406.34945679]
[117.00244141 392.50457764]
[124.49509430 380.57208252]
[136.00555420 372.37109375]
[132.90144348 357.69580078]
[129.79733276 343.02047729]
[126.69322968 328.34518433]
[116.44805145 339.30130005]
[101.48322296 338.27465820]
[92.83026123 326.02206421]
[96.86780548 311.57565308]
[110.61952972 305.58480835]
[123.94716644 312.46444702]
[121.94315338 297.59890747]
[119.82852936 282.74871826]
[117.60341644 267.91467285]
[115.37829590 253.08062744]
[113.15318298 238.24658203]
[110.92806244 223.41253662]
[101.38838959 211.97383118]
[106.99295044 197.17858887]
[104.76783752 182.34454346]
[95.22815704 170.90583801]
[100.83272552 156.11059570]
[98.60760498 141.27655029]
[96.38248444 126.44250488]
[94.15737152 111.60845947]
[91.49157715 96.84724426]
[88.38746643 82.17194366]
[85.28335571 67.49663544]
[82.17924500 52.82133484]
[75.49736023 66.25086975]
[62.67051315 74.02725220]
[47.67324829 73.74087524]
[35.15262604 65.48048401]
[28.98830032 51.80565262]
[31.09035301 36.95367050]
[40.80744171 25.52658653]
[55.12862015 21.06521034]
[69.61631012 24.95194626]
[79.78147125 35.98267746]
[78.66582489 21.02422333]
[77.55017090 6.06577063]
[64.51815796 -2.14840961]
[58.88757324 -16.29584503]
[62.62298584 -30.87359047]
[74.08885193 -40.34311676]
[72.97320557 -55.30157089]
[71.85755157 -70.26002502]
[70.74190521 -85.21847534]
[61.99962616 -98.40495300]
[68.76888275 -111.67244720]
[67.65323639 -126.63089752]
[58.91095734 -139.81738281]
[65.68021393 -153.08486938]
[55.33407593 -158.94097900]
[49.16263199 -168.96166992]
[48.60052490 -180.59687805]
[53.67185974 -190.95048523]
[63.01286697 -197.50119019]
[62.34307861 -212.48623657]
[61.67329407 -227.47126770]
[61.00350952 -242.45631409]
[60.11069489 -257.42971802]
[58.99504471 -272.38818359]
[57.87939835 -287.34661865]
[56.76374817 -302.30508423]
[55.20322418 -317.22369385]
[53.19921112 -332.08920288]
[51.19519806 -346.95474243]
[49.19118500 -361.82028198]
[47.18717194 -376.68579102]
[45.18315506 -391.55133057]
[43.17914200 -406.41683960]
[28.18202972 -407.89443970]
[13.93011570 -412.79135132]
[1.19199252 -420.84347534]
[-9.34539032 -431.61660767]
[-17.11376572 -444.52975464]
[-21.69419479 -458.88650513]
[-22.83965874 -473.91262817]
[-20.48838806 -488.79782104]
[-14.76717949 -502.73928833]
[-5.98457336 -514.98516846]
[5.38579607 -524.87518311]
[18.73073959 -531.87579346]
[33.33058167 -535.60961914]
[48.39796829 -535.87524414]
[63.12033844 -532.65832520]
[76.70372772 -526.13238525]
[88.41561127 -516.64929199]
[97.62436676 -504.72052002]
[103.83338928 -490.98934937]
[106.70783234 -476.19631958]
[106.09268188 -461.13916016]
[102.02110291 -446.62988281]
[94.71268463 -433.45095825]
[84.56154633 -422.31314087]
[72.11513519 -413.81704712]
[58.04467010 -408.42086792]
[60.04868698 -393.55532837]
[62.05270004 -378.68981934]
[64.05670929 -363.82427979]
[66.06072235 -348.95874023]
[68.06474304 -334.09323120]
[70.06875610 -319.22769165]
[72.21364594 -317.42282104]
[73.77283478 -314.65957642]
[74.37772369 -311.15679932]
[73.74563599 -307.26257324]
[71.72219849 -303.42071533]
[72.83785248 -288.46228027]
[73.95349884 -273.50381470]
[75.06914520 -258.54537964]
[78.03923035 -254.80535889]
[78.69138336 -249.15985107]
[75.98854828 -243.12609863]
[76.65833282 -228.14105225]
[77.32811737 -213.15602112]
[77.99790192 -198.17097473]
[92.22648621 -186.65303040]
[93.54006195 -168.07382202]
[80.63867188 -154.20051575]
[89.30114746 -142.08396912]
[82.61168671 -127.74655151]
[83.72734070 -112.78809357]
[92.38981628 -100.67154694]
[85.70035553 -86.33412933]
[86.81600952 -71.37567139]
[87.93165588 -56.41722107]
[89.04730225 -41.45876694]
[101.79103088 -33.79486847]
[107.64759827 -19.93252182]
[104.17795563 -5.10636282]
[92.50862885 4.95012188]
[93.62427521 19.90857506]
[94.73992157 34.86702728]
[96.85454559 49.71722794]
[99.95865631 64.39253235]
[103.06276703 79.06783295]
[106.16687775 93.74313354]
[108.57128143 95.61618805]
[110.34730530 98.40550232]
[111.15425110 101.88002014]
[110.74158478 105.68606567]
[108.99141693 109.38334656]
[111.21652985 124.21738434]
[113.44165039 139.05143738]
[115.66676331 153.88546753]
[125.36559296 166.38520813]
[119.60187531 180.11943054]
[121.82699585 194.95347595]
[131.52581787 207.45320129]
[125.76210785 221.18742371]
[127.98722076 236.02146912]
[130.21234131 250.85551453]
[132.43745422 265.68954468]
[134.66258240 280.52359009]
[139.03036499 288.54608154]
[136.80868530 295.59490967]
[138.81269836 310.46041870]
[141.36853027 325.24108887]
[144.47264099 339.91638184]
[147.57675171 354.59167480]
[150.68086243 369.26699829]
[166.51440430 373.01300049]
[179.08424377 383.25228882]
[185.90592957 397.89553833]
[185.65972900 413.98974609]
[178.44570923 428.31353760]
[165.75341797 438.02212524]
[169.07568359 452.64959717]
[172.39794922 467.27703857]
[175.72019958 481.90451050]
[186.19818115 489.42614746]
[188.66415405 501.67779541]
[182.33085632 511.98388672]
[185.43496704 526.65917969]
[188.53907776 541.33447266]
[191.64318848 556.00982666]
[206.69834900 557.36395264]
[220.68486023 563.09710693]
[232.35905457 572.69940186]
[240.68289185 585.31707764]
[244.91619873 599.82812500]
[244.68255615 614.94226074]
[240.00274658 629.31555176]
[231.29289246 641.66986084]
[219.32748413 650.90673828]
[205.17044067 656.20483398]
[190.08062744 657.09301758]
[175.39981079 653.49230957]
[162.43339539 645.72296143]
[152.33435059 634.47570801]
[146.00067139 620.75067139]
[143.99555969 605.76831055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 194]
[4 193]
[5 192]
[6 191]
[8 188]
[9 187]
[10 186]
[11 185]
[18 179]
[19 178]
[20 177]
[21 176]
[27 175]
[28 174]
[29 172]
[30 171]
[31 170]
[32 169]
[33 168]
[35 166]
[36 165]
[38 163]
[39 162]
[40 161]
[41 160]
[42 155]
[43 154]
[44 153]
[45 152]
[55 151]
[56 150]
[57 149]
[61 145]
[62 144]
[63 143]
[64 142]
[66 140]
[67 139]
[69 137]
[74 134]
[75 133]
[76 132]
[77 131]
[78 128]
[79 127]
[80 126]
[81 125]
[82 120]
[83 119]
[84 118]
[85 117]
[86 116]
[87 115]
[88 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
