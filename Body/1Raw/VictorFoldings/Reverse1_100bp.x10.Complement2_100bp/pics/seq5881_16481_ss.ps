%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[102.03087616 530.20654297]
[96.97879028 544.37402344]
[89.47801208 557.41156006]
[79.76966858 568.90014648]
[68.16584015 578.47045898]
[55.03953552 585.81488037]
[40.81272125 590.69720459]
[25.94272232 592.96063232]
[10.90755367 592.53228760]
[-3.80946922 589.42602539]
[-17.73525429 583.74163818]
[-30.42214584 575.66186523]
[-41.46231079 565.44647217]
[-50.50085831 553.42376709]
[-57.24723053 539.98034668]
[-61.48456192 525.54827881]
[-63.07664108 510.59149170]
[-61.97229004 495.59082031]
[-58.20700455 481.02844238]
[-51.90182495 467.37252808]
[-43.25944138 455.06201172]
[-32.55766296 444.49261475]
[-20.14051247 436.00415039]
[-6.40714979 429.86944580]
[8.20095539 426.28573608]
[23.21421242 425.36819458]
[38.15000916 427.14633179]
[42.55100632 412.80648804]
[46.95200348 398.46664429]
[43.28940582 384.02938843]
[54.73515320 373.10668945]
[59.13615036 358.76681519]
[63.53715134 344.42697144]
[67.93814850 330.08712769]
[71.80245209 315.59344482]
[75.12471008 300.96597290]
[78.44697571 286.33853149]
[81.76923370 271.71105957]
[85.09149170 257.08358765]
[88.41374969 242.45614624]
[91.73600769 227.82867432]
[93.51847839 212.93496704]
[93.74180603 197.93663025]
[93.96513367 182.93829346]
[94.18846130 167.93995667]
[94.41178894 152.94161987]
[94.18846130 137.94328308]
[93.51867676 122.95823669]
[92.84889221 107.97319794]
[90.18309021 93.21198273]
[85.56908417 78.93924713]
[80.95507812 64.66651154]
[76.34106445 50.39378357]
[70.72366333 43.19082260]
[71.76632690 35.87408447]
[67.36532593 21.53423691]
[62.96432877 7.19438934]
[49.19608688 -5.03332806]
[53.78962326 -21.97045708]
[49.17561340 -36.24319077]
[39.62883377 -37.97213745]
[31.41677666 -43.02904892]
[25.64542389 -50.68335342]
[23.07392693 -59.85818863]
[24.01493835 -69.28181458]
[28.29723358 -77.66387939]
[35.29499435 -83.87208557]
[31.53869247 -98.39414215]
[27.78239250 -112.91619873]
[24.02609062 -127.43826294]
[20.26979065 -141.96031189]
[7.95448685 -147.41447449]
[1.12868690 -158.79951477]
[2.09214902 -171.84381104]
[10.26968002 -181.80160522]
[6.73000765 -196.37797546]
[3.19033527 -210.95434570]
[-0.56596535 -225.47640991]
[-4.53806162 -239.94093323]
[-8.51015759 -254.40545654]
[-23.50155449 -253.15139771]
[-38.46810150 -254.67359924]
[-52.90004730 -258.92019653]
[-66.30583954 -265.74658203]
[-78.22888184 -274.92022705]
[-88.26309204 -286.12866211]
[-96.06668854 -298.99017334]
[-101.37390137 -313.06668091]
[-104.00395966 -327.87875366]
[-103.86728668 -342.92190552]
[-100.96853638 -357.68374634]
[-95.40644073 -371.66149902]
[-87.37043762 -384.37908936]
[-77.13423920 -395.40338135]
[-65.04648590 -404.35888672]
[-51.51887512 -410.94055176]
[-37.01215363 -414.92422485]
[-22.02042007 -416.17425537]
[-7.05428267 -414.64801025]
[7.37651587 -410.39752197]
[20.78046799 -403.56753540]
[32.70103836 -394.39068604]
[42.73222351 -383.17953491]
[50.53235626 -370.31591797]
[55.83576965 -356.23797607]
[58.46183777 -341.42517090]
[58.32110596 -326.38208008]
[55.41837692 -311.62103271]
[49.85251617 -297.64477539]
[41.81309128 -284.92932129]
[31.57392120 -273.90780640]
[19.48375130 -264.95556641]
[5.95436621 -258.37756348]
[9.92646217 -243.91302490]
[13.89855862 -229.44850159]
[17.53257179 -226.34963989]
[19.25847244 -220.93499756]
[17.76671028 -214.49401855]
[21.30638313 -199.91764832]
[24.84605598 -185.34127808]
[39.56919861 -177.21305847]
[43.94433212 -160.62471008]
[34.79185104 -145.71661377]
[38.54814911 -131.19456482]
[42.30445099 -116.67250061]
[46.06075287 -102.15044403]
[49.81705093 -87.62837982]
[68.23852539 -78.77169037]
[74.21700287 -58.91841125]
[63.44834900 -40.85720062]
[68.06235504 -26.58446693]
[78.68588257 -20.79938126]
[82.64670563 -8.94629383]
[77.30417633 2.79339147]
[81.70516968 17.13323784]
[86.10617065 31.47308540]
[90.61380005 45.77977371]
[95.22780609 60.05250549]
[99.84181976 74.32524109]
[104.45582581 88.59796906]
[107.04079437 73.82238770]
[114.00955200 60.53944778]
[124.69787598 50.01520157]
[138.08702087 43.25275040]
[152.90083313 40.89665222]
[167.72732544 43.17147064]
[181.15336609 49.86038589]
[191.89924622 60.32585144]
[198.94075012 73.57037354]
[201.60671997 88.33155823]
[199.64305115 103.20246887]
[193.23690796 116.76570892]
[182.99888611 127.72850800]
[169.90481567 135.04595947]
[155.20272827 138.02062988]
[140.29394531 136.36897278]
[126.59945679 130.24842834]
[115.42455292 120.24235535]
[107.83393097 107.30341339]
[108.50371552 122.28845215]
[109.17350006 137.27349854]
[111.63912201 140.84765625]
[112.72948456 144.63917542]
[112.54512787 148.18902588]
[111.32534027 151.11798096]
[109.41012573 153.16494751]
[109.18679810 168.16328430]
[108.96347046 183.16162109]
[108.74014282 198.15995789]
[108.51681519 213.15829468]
[116.32767487 200.35241699]
[128.39910889 191.44845581]
[142.94038391 187.76725769]
[157.79440308 189.85490417]
[170.75764465 197.40171814]
[179.90708923 209.28814697]
[183.88549805 223.75094604]
[182.10266113 238.64462280]
[174.82307434 251.75978088]
[163.12661743 261.15087891]
[148.74838257 265.42480469]
[133.82130432 263.94754028]
[120.55971527 256.93823242]
[110.93090820 245.43667603]
[106.36347198 231.15093994]
[103.04121399 245.77839661]
[99.71894836 260.40585327]
[96.39669037 275.03332520]
[93.07443237 289.66076660]
[89.75217438 304.28823853]
[86.42991638 318.91571045]
[100.31983185 313.25265503]
[113.48155212 320.44769287]
[116.21276093 335.19696045]
[106.50009918 346.62780762]
[91.50337982 346.31384277]
[82.27799225 334.48812866]
[77.87699890 348.82797241]
[73.47599792 363.16781616]
[69.07500458 377.50765991]
[72.42281342 392.97061157]
[61.29185104 402.86764526]
[56.89085388 417.20748901]
[52.48985672 431.54733276]
[65.85169220 438.45391846]
[77.76544952 447.63555908]
[87.84814453 458.79705811]
[95.77567291 471.57962036]
[101.29318237 485.57235718]
[104.22331238 500.32546997]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 204]
[28 203]
[29 202]
[31 200]
[32 199]
[33 198]
[34 197]
[35 191]
[36 190]
[37 189]
[38 188]
[39 187]
[40 186]
[41 185]
[42 170]
[43 169]
[44 168]
[45 167]
[46 166]
[47 161]
[48 160]
[49 159]
[50 140]
[51 139]
[52 138]
[53 137]
[55 136]
[56 135]
[57 134]
[59 131]
[60 130]
[67 127]
[68 126]
[69 125]
[70 124]
[71 123]
[75 120]
[76 119]
[77 118]
[78 115]
[79 114]
[80 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
