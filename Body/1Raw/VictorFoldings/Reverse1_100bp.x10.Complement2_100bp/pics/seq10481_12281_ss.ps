%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[80.78175354 374.72543335]
[83.81341553 389.62100220]
[80.90911865 404.54190063]
[72.51174164 417.21282959]
[59.90183258 425.70156860]
[45.00230789 428.71362305]
[30.08523178 425.78970337]
[17.42535591 417.37567139]
[8.95321560 404.75460815]
[5.96075296 389.85113525]
[8.90429592 374.93792725]
[17.33497620 362.28912354]
[29.96717644 353.83358765]
[44.87457657 350.86074829]
[47.75984955 336.14083862]
[50.64512253 321.42095947]
[53.53039169 306.70104980]
[48.38568878 292.72317505]
[58.63298798 280.66897583]
[56.83478928 273.50042725]
[61.67235184 265.75213623]
[64.77645874 251.07684326]
[67.88056946 236.40153503]
[70.87534332 221.70353699]
[73.76062012 206.98364258]
[76.64588928 192.26374817]
[79.53116608 177.54385376]
[82.19696045 162.78263855]
[84.64268494 147.98336792]
[87.08841705 133.18409729]
[89.53414154 118.38483429]
[91.97986603 103.58556366]
[90.42132568 100.96630859]
[89.78137970 97.72208405]
[90.29333496 94.19202423]
[92.06196594 90.79669952]
[95.03694916 87.98913574]
[98.35920715 73.36167908]
[101.68147278 58.73421860]
[89.55094147 67.55749512]
[74.55145264 67.68086243]
[62.27743149 59.05830765]
[57.30679703 44.90582275]
[61.49346542 30.50194168]
[73.27591705 21.21895409]
[88.25958252 20.51918411]
[100.85593414 28.66362762]
[106.36691284 42.61577988]
[111.40383148 28.48674774]
[116.44074249 14.35771942]
[121.47766113 0.22868957]
[118.82364655 -15.36832237]
[130.38542175 -24.75844574]
[135.42234802 -38.88747787]
[140.45925903 -53.01650620]
[145.49617004 -67.14553833]
[133.09367371 -58.70882797]
[118.14205170 -57.50513077]
[104.54962158 -63.84908676]
[95.86940765 -76.08239746]
[94.37040710 -91.00730896]
[100.44444275 -104.72248840]
[112.50379181 -113.64280701]
[127.39615631 -115.43653107]
[141.22871399 -109.63478088]
[150.38566589 -97.75411224]
[152.47351074 -82.90099335]
[159.55061340 -96.12651825]
[166.62773132 -109.35204315]
[163.64311218 -121.90014648]
[169.80992126 -132.77001953]
[181.34783936 -136.40362549]
[188.62106323 -149.52232361]
[195.89428711 -162.64102173]
[203.16752625 -175.75970459]
[210.44075012 -188.87840271]
[197.83230591 -197.01452637]
[185.79547119 -205.97463989]
[174.38397217 -215.71870422]
[163.64878845 -226.20323181]
[153.63787842 -237.38137817]
[144.39593506 -249.20321655]
[135.96424866 -261.61593628]
[128.38047791 -274.56414795]
[121.67848969 -287.98995972]
[115.88822174 -301.83343506]
[111.03552246 -316.03274536]
[107.14207458 -330.52450562]
[104.22526550 -345.24392700]
[102.29812622 -360.12530518]
[101.36926270 -375.10217285]
[101.44281769 -390.10760498]
[102.51847076 -405.07464600]
[104.59140778 -419.93643188]
[107.65238190 -434.62655640]
[111.68771362 -449.07940674]
[116.67938232 -463.23046875]
[122.60509491 -477.01654053]
[129.43838501 -490.37600708]
[137.14872742 -503.24920654]
[145.70170593 -515.57867432]
[155.05909729 -527.30938721]
[165.17910767 -538.38879395]
[176.01657104 -548.76757812]
[187.52304077 -558.39935303]
[199.64715576 -567.24102783]
[212.33474731 -575.25311279]
[225.52917480 -582.39990234]
[239.17147827 -588.64947510]
[253.20074463 -593.97381592]
[267.55432129 -598.34924316]
[282.16809082 -601.75616455]
[296.97677612 -604.17938232]
[311.91424561 -605.60809326]
[326.91378784 -606.03588867]
[341.90838623 -605.46087646]
[356.83111572 -603.88562012]
[371.61529541 -601.31713867]
[386.19491577 -597.76690674]
[400.50485229 -593.25079346]
[414.48117065 -587.78900146]
[428.06149292 -581.40582275]
[441.18511963 -574.12988281]
[453.79345703 -565.99359131]
[465.83016968 -557.03332520]
[477.24154663 -547.28912354]
[487.97659302 -536.80444336]
[497.98736572 -525.62615967]
[507.22915649 -513.80419922]
[515.66070557 -501.39138794]
[523.24432373 -488.44308472]
[529.94610596 -475.01718140]
[535.73620605 -461.17364502]
[540.58874512 -446.97427368]
[544.48199463 -432.48248291]
[547.39862061 -417.76303101]
[549.32556152 -402.88162231]
[550.25427246 -387.90472412]
[550.18054199 -372.89929199]
[549.10467529 -357.93225098]
[547.03155518 -343.07049561]
[543.97039795 -328.38043213]
[539.93487549 -313.92761230]
[534.94305420 -299.77661133]
[529.01715088 -285.99063110]
[522.18371582 -272.63125610]
[514.47320557 -259.75811768]
[505.92004395 -247.42875671]
[496.56250000 -235.69821167]
[486.44235229 -224.61888123]
[475.60476685 -214.24023438]
[464.09817505 -204.60865784]
[451.97393799 -195.76713562]
[439.28625488 -187.75517273]
[426.09173584 -180.60855103]
[412.44937134 -174.35917664]
[398.42001343 -169.03498840]
[384.06640625 -164.65974426]
[369.45260620 -161.25299072]
[354.64389038 -158.82994080]
[339.70639038 -157.40142822]
[324.70684814 -156.97381592]
[309.71221924 -157.54902649]
[294.78952026 -159.12448120]
[280.00537109 -161.69314575]
[265.42581177 -165.24356079]
[251.11592102 -169.75984192]
[237.13966370 -175.22184753]
[223.55944824 -181.60517883]
[216.28622437 -168.48648071]
[209.01298523 -155.36778259]
[201.73976135 -142.24908447]
[194.46652222 -129.13040161]
[195.71640015 -111.62597656]
[179.85325623 -102.27494049]
[172.77615356 -89.04941559]
[165.69903564 -75.82388306]
[159.62521362 -62.10861969]
[154.58828735 -47.97958755]
[149.55137634 -33.85055923]
[144.51446533 -19.72153091]
[147.52874756 -5.13512135]
[135.60668945 5.26560593]
[130.56977844 19.39463615]
[125.53285980 33.52366638]
[120.49594116 47.65269470]
[116.30892944 62.05647659]
[112.98667145 76.68393707]
[109.66441345 91.31139374]
[106.77913666 106.03128815]
[104.33341217 120.83055878]
[101.88768768 135.62983704]
[99.44195557 150.42910767]
[96.99623108 165.22837830]
[98.96292114 171.54055786]
[97.64451599 177.06855774]
[94.25105286 180.42913818]
[91.36578369 195.14903259]
[88.48050690 209.86891174]
[85.59523773 224.58880615]
[87.01551819 233.61215210]
[82.55587006 239.50564575]
[79.45175934 254.18095398]
[76.34765625 268.85626221]
[73.35287476 283.55426025]
[78.29120636 298.58502197]
[68.25028229 309.58633423]
[65.36501312 324.30621338]
[62.47974014 339.02612305]
[59.59446716 353.74600220]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 210]
[15 209]
[16 208]
[17 207]
[19 205]
[21 204]
[22 203]
[23 202]
[24 200]
[25 199]
[26 198]
[27 197]
[28 194]
[29 193]
[30 192]
[31 191]
[32 190]
[37 189]
[38 188]
[39 187]
[48 186]
[49 185]
[50 184]
[51 183]
[53 181]
[54 180]
[55 179]
[56 178]
[67 177]
[68 176]
[69 175]
[72 173]
[73 172]
[74 171]
[75 170]
[76 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
