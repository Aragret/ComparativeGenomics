%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[130.95155334 475.04086304]
[128.06628418 460.32095337]
[125.18100739 445.60107422]
[122.29573822 430.88116455]
[119.41046143 416.16128540]
[116.52519226 401.44140625]
[113.63991547 386.72149658]
[109.26851654 380.76226807]
[110.82298279 371.76107788]
[108.15718842 356.99984741]
[95.81268311 348.74459839]
[92.89891052 333.81262207]
[101.64145660 320.92053223]
[98.97566223 306.15933228]
[88.40882874 316.80554199]
[73.48120117 315.33380127]
[65.19688416 302.82897949]
[69.66275787 288.50921631]
[83.58675385 282.93048096]
[96.70365143 290.20385742]
[95.14312744 275.28524780]
[93.58260345 260.36663818]
[92.02208710 245.44804382]
[90.46156311 230.52943420]
[88.90103912 215.61082458]
[87.34051514 200.69221497]
[80.56704712 214.07580566]
[68.71028137 223.26367188]
[54.05955887 226.48179626]
[39.44371033 223.10882568]
[27.68482971 213.79598999]
[21.05336952 200.34149170]
[20.82976151 185.34315491]
[27.05718040 171.69694519]
[38.53321075 162.03770447]
[53.04201126 158.23051453]
[67.78215790 161.01045227]
[79.90755463 169.84077454]
[87.07733917 183.01771545]
[88.19298553 168.05926514]
[79.73238373 152.68443298]
[90.22631836 137.55303955]
[91.11913300 122.57964325]
[92.01194763 107.60623169]
[79.23126221 115.45824432]
[65.07251740 110.50546265]
[59.97301865 96.39890289]
[67.69192505 83.53738403]
[82.53914642 81.40195465]
[93.56924438 91.56523132]
[95.57325745 76.69969940]
[97.57727051 61.83417130]
[99.58128357 46.96864319]
[93.75706482 32.25847626]
[103.12537384 20.67901230]
[105.01866913 5.79897738]
[106.80113220 -9.09473991]
[95.65435791 0.94266045]
[80.74909210 2.62582898]
[67.64463043 -4.67301416]
[61.22861481 -18.23158073]
[63.89405823 -32.99286270]
[74.64682007 -43.45126343]
[89.47637939 -45.70606232]
[102.85168457 -38.91627121]
[109.78427124 -25.61316299]
[113.32394409 -40.18953705]
[116.86361694 -54.76591492]
[120.40328979 -69.34229279]
[123.94296265 -83.91866302]
[127.48263550 -98.49504089]
[126.46668243 -107.57279968]
[131.18504333 -113.26129150]
[134.94132996 -127.78334808]
[138.69763184 -142.30540466]
[140.03587341 -157.24559021]
[138.92022705 -172.20404053]
[137.80458069 -187.16250610]
[136.68891907 -202.12095642]
[135.57327271 -217.07940674]
[134.45762634 -232.03785706]
[122.22771454 -238.39553833]
[114.79522705 -249.87493896]
[114.01174927 -263.41952515]
[119.97515869 -275.48526001]
[131.03192139 -282.96789551]
[130.13909912 -297.94131470]
[129.24629211 -312.91470337]
[128.35346985 -327.88812256]
[127.46065521 -342.86154175]
[126.56784058 -357.83493042]
[125.67502594 -372.80834961]
[110.89192200 -375.82867432]
[97.39469147 -382.57308960]
[86.10359955 -392.58175659]
[77.78849030 -405.17227173]
[73.01629639 -419.48620605]
[72.11239624 -434.54760742]
[75.13842010 -449.32952881]
[81.88805389 -462.82415771]
[91.90109253 -474.11138916]
[104.49481964 -482.42163086]
[118.81059265 -487.18829346]
[133.87232971 -488.08639526]
[148.65309143 -485.05465698]
[162.14511108 -478.29980469]
[173.42846680 -468.28240967]
[181.73385620 -455.68548584]
[186.49499512 -441.36785889]
[187.38726807 -426.30578613]
[184.34982300 -411.52618408]
[177.58976746 -398.03677368]
[167.56802368 -386.75729370]
[154.96788025 -378.45675659]
[140.64843750 -373.70117188]
[141.54124451 -358.72775269]
[142.43406677 -343.75433350]
[143.32687378 -328.78094482]
[144.21969604 -313.80752563]
[145.11250305 -298.83413696]
[146.00532532 -283.86071777]
[160.11282349 -275.46691895]
[166.50131226 -260.16497803]
[162.47027588 -243.90916443]
[149.41607666 -233.15350342]
[150.53172302 -218.19505310]
[151.64738464 -203.23660278]
[152.76303101 -188.27815247]
[153.87867737 -173.31970215]
[154.99432373 -158.36123657]
[160.69804382 -172.23451233]
[169.75576782 -184.19099426]
[181.56674194 -193.43766785]
[195.34757996 -199.36122131]
[210.18424988 -201.56878662]
[225.09268188 -199.91392517]
[239.08406067 -194.50639343]
[251.23039246 -185.70487976]
[260.72604370 -174.09312439]
[266.94119263 -160.44132996]
[269.46365356 -145.65493774]
[268.12606812 -130.71469116]
[263.01718140 -116.61152649]
[254.47586060 -104.28084564]
[243.06858826 -94.54051208]
[229.55198669 -88.03655243]
[214.82257080 -85.20035553]
[199.85726929 -86.22003937]
[185.64868164 -91.02796936]
[173.13922119 -99.30525970]
[163.15859985 -110.50289154]
[156.36877441 -123.87818146]
[153.21969604 -138.54910278]
[149.46339417 -124.02704620]
[145.70709229 -109.50498962]
[142.05900574 -94.95536804]
[138.51933289 -80.37899017]
[134.97966003 -65.80261993]
[131.43998718 -51.22624207]
[127.90031433 -36.64986801]
[124.36064911 -22.07349205]
[121.69484711 -7.31227398]
[119.91238403 7.58144331]
[122.23876953 14.59640694]
[117.99090576 22.68302536]
[123.95846558 36.32991028]
[114.44681549 48.97265625]
[112.44279480 63.83818436]
[110.43878174 78.70371246]
[108.43476868 93.56924438]
[106.98535156 108.49905396]
[106.09253693 123.47245789]
[105.19972229 138.44586182]
[113.16167450 148.59327698]
[112.10978699 161.04627991]
[103.15144348 169.17491150]
[102.03578949 184.13336182]
[102.25911713 199.13169861]
[103.81964111 214.05030823]
[105.38016510 228.96890259]
[106.94068909 243.88751221]
[108.50121307 258.80612183]
[110.06173706 273.72473145]
[111.62226105 288.64334106]
[113.73688507 303.49353027]
[116.40267944 318.25473022]
[129.10237122 327.27447510]
[131.59559631 342.28240967]
[122.91840363 354.33404541]
[125.58419800 369.09527588]
[128.35981750 383.83624268]
[131.24508667 398.55612183]
[134.13035583 413.27600098]
[137.01562500 427.99591064]
[139.90089417 442.71578979]
[142.78617859 457.43569946]
[145.67144775 472.15557861]
[160.57884216 475.12844849]
[173.21104431 483.58395386]
[181.64172363 496.23275757]
[184.58526611 511.14596558]
[181.59280396 526.04943848]
[173.12066650 538.67053223]
[160.46078491 547.08453369]
[145.54371643 550.00848389]
[130.64418030 546.99639893]
[118.03427887 538.50769043]
[109.63690186 525.83673096]
[106.73260498 510.91583252]
[109.76426697 496.02029419]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[4 194]
[5 193]
[6 192]
[7 191]
[9 190]
[10 189]
[13 186]
[14 185]
[20 184]
[21 183]
[22 182]
[23 181]
[24 180]
[25 179]
[26 178]
[39 177]
[40 176]
[42 173]
[43 172]
[44 171]
[50 170]
[51 169]
[52 168]
[53 167]
[55 165]
[56 163]
[57 162]
[66 161]
[67 160]
[68 159]
[69 158]
[70 157]
[71 156]
[73 155]
[74 154]
[75 153]
[76 130]
[77 129]
[78 128]
[79 127]
[80 126]
[81 125]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
