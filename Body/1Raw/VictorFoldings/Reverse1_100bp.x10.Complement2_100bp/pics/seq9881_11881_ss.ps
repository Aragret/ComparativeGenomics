%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[-13.29666519 348.93420410]
[-10.39044666 363.66567993]
[-9.12248230 378.62750244]
[-9.50816536 393.63796997]
[-11.54281235 408.51492310]
[-15.20172501 423.07772827]
[-20.44048882 437.14962769]
[-27.19550896 450.55981445]
[-35.38478470 463.14547729]
[-44.90890503 474.75384521]
[-55.65225983 485.24401855]
[-67.48443604 494.48861694]
[-80.26179504 502.37545776]
[-93.82923126 508.80880737]
[-108.02205658 513.71051025]
[-122.66797638 517.02117920]
[-137.58920288 518.70050049]
[-152.60461426 518.72814941]
[-167.53192139 517.10375977]
[-182.18992615 513.84710693]
[-196.40071106 508.99768066]
[-209.99174500 502.61434937]
[-222.79806519 494.77462769]
[-234.66419983 485.57363892]
[-245.44612122 475.12310791]
[-255.01292419 463.54989624]
[-263.24850464 450.99447632]
[-270.05285645 437.60928345]
[-275.34341431 423.55676270]
[-279.05593872 409.00750732]
[-281.14535522 394.13815308]
[-281.58630371 379.12921143]
[-280.37347412 364.16284180]
[-277.52151489 349.42074585]
[-273.06509399 335.08184814]
[-267.05831909 321.32025146]
[-259.57406616 308.30300903]
[-250.70320129 296.18807983]
[-240.55342102 285.12258911]
[-229.24794006 275.24084473]
[-216.92396545 266.66278076]
[-203.73112488 259.49255371]
[-189.82957458 253.81718445]
[-175.38803101 249.70558167]
[-160.58183289 247.20764160]
[-145.59069824 246.35371399]
[-130.59661865 247.15412903]
[-115.78160095 249.59919739]
[-101.32548523 253.65922546]
[-87.40375519 259.28494263]
[-74.18540192 266.40802002]
[-61.83089828 274.94204712]
[-52.00031662 263.61245728]
[-42.16973877 252.28285217]
[-32.33915710 240.95326233]
[-22.50857544 229.62367249]
[-20.01150894 214.93986511]
[-5.12322998 209.58732605]
[4.70735073 198.25773621]
[14.53793144 186.92813110]
[24.36851311 175.59854126]
[26.86557961 160.91474915]
[41.75385666 155.56219482]
[51.58443832 144.23260498]
[61.41501999 132.90301514]
[63.91208649 118.21921539]
[78.80036926 112.86666870]
[88.63094330 101.53707886]
[74.00942230 104.88536835]
[59.64391327 100.56887054]
[49.28952789 89.71591187]
[45.65287781 75.16342926]
[49.68457413 60.71540451]
[60.33074188 50.14851761]
[74.80850220 46.22492981]
[89.33339691 49.97025299]
[100.10865021 60.40547180]
[104.31764984 74.80284119]
[100.86058044 89.39814758]
[112.26304626 79.65218353]
[123.66550446 69.90621948]
[128.15568542 61.95159149]
[135.31105042 60.10157013]
[146.85736084 50.52644730]
[158.40365601 40.95132828]
[169.94995117 31.37620926]
[181.49626160 21.80109024]
[184.14764404 15.74454498]
[188.76632690 12.43325043]
[193.53186035 12.11896992]
[205.35813904 2.89187169]
[216.90443420 -6.68324804]
[228.16053772 -16.59789848]
[239.41662598 -26.51255035]
[250.67271423 -36.42720032]
[261.92880249 -46.34185410]
[272.65319824 -56.82935333]
[282.81674194 -67.86122894]
[292.98028564 -78.89310455]
[303.14382935 -89.92498779]
[293.18768311 -101.16178894]
[284.41940308 -113.34820557]
[276.92904663 -126.35917664]
[270.79342651 -140.06118774]
[266.07550049 -154.31362915]
[262.82369995 -168.97026062]
[261.07141113 -183.88067627]
[260.83657837 -198.89187622]
[262.12164307 -213.84980774]
[264.91339111 -228.60096741]
[269.18319702 -242.99401855]
[274.88723755 -256.88125610]
[281.96694946 -270.12014771]
[290.34976196 -282.57485962]
[299.94955444 -294.11758423]
[310.66790771 -304.62988281]
[322.39477539 -314.00387573]
[335.00982666 -322.14334106]
[348.38363647 -328.96481323]
[362.37893677 -334.39825439]
[376.85214233 -338.38790894]
[391.65472412 -340.89282227]
[406.63479614 -341.88735962]
[421.63858032 -341.36123657]
[436.51217651 -339.31988525]
[451.10293579 -335.78424072]
[465.26113892 -330.79058838]
[478.84149170 -324.39019775]
[491.70465088 -316.64871216]
[503.71859741 -307.64559937]
[514.76007080 -297.47323608]
[524.71569824 -286.23599243]
[533.48345947 -274.04919434]
[540.97320557 -261.03787231]
[547.10827637 -247.33560181]
[551.82556152 -233.08294678]
[555.07672119 -218.42617798]
[556.82830811 -203.51568604]
[557.06250000 -188.50448608]
[555.77679443 -173.54661560]
[552.98437500 -158.79556274]
[548.71392822 -144.40269470]
[543.00927734 -130.51573181]
[535.92901611 -117.27713776]
[527.54565430 -104.82279205]
[517.94531250 -93.28048706]
[507.22653198 -82.76866913]
[495.49926758 -73.39520264]
[482.88381958 -65.25627136]
[469.50973511 -58.43539810]
[455.51416016 -53.00257874]
[441.04080200 -49.01355743]
[426.23809814 -46.50927353]
[411.25799561 -45.51542282]
[396.25421143 -46.04220200]
[381.38070679 -48.08420944]
[366.79010010 -51.62048721]
[352.63214111 -56.61474991]
[339.05206299 -63.01574326]
[326.18927002 -70.75778961]
[314.17572021 -79.76143646]
[304.01217651 -68.72956085]
[293.84863281 -57.69768524]
[283.68508911 -46.66580582]
[298.66864014 -47.36750031]
[310.67361450 -38.37410355]
[314.21142578 -23.79727936]
[307.66467285 -10.30135345]
[294.02642822 -4.05648184]
[279.53192139 -7.91773558]
[270.80783081 -20.11980247]
[271.84347534 -35.08575821]
[260.58737183 -25.17110634]
[249.33128357 -15.25645447]
[238.07518005 -5.34180355]
[226.81909180 4.57284784]
[226.50743103 7.35870695]
[225.07348633 10.18897247]
[222.49479675 12.63556099]
[218.90417480 14.27017593]
[214.58523560 14.71814156]
[202.75895691 23.94524002]
[191.07138062 33.34738922]
[179.52508545 42.92251205]
[167.97877502 52.49763107]
[156.43247986 62.07275009]
[144.88616943 71.64787292]
[133.41146851 81.30867767]
[122.00901031 91.05464935]
[110.60654449 100.80061340]
[99.96054077 111.36766052]
[90.12995911 122.69725037]
[86.92974091 138.19142151]
[72.74461365 142.73359680]
[62.91403198 154.06318665]
[53.08345032 165.39277649]
[49.88323593 180.88694763]
[35.69810486 185.42912292]
[25.86752510 196.75871277]
[16.03694344 208.08831787]
[6.20636272 219.41790771]
[3.00614643 234.91206360]
[-11.17898273 239.45425415]
[-21.00956345 250.78384399]
[-30.84014511 262.11343384]
[-40.67072678 273.44302368]
[-50.50130463 284.77261353]
[-40.31084442 295.80065918]
[-31.39543152 307.88281250]
[-23.86329269 320.87243652]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 207]
[53 206]
[54 205]
[55 204]
[56 203]
[58 201]
[59 200]
[60 199]
[61 198]
[63 196]
[64 195]
[65 194]
[67 192]
[68 191]
[79 190]
[80 189]
[81 188]
[83 187]
[84 186]
[85 185]
[86 184]
[87 183]
[90 182]
[91 181]
[92 176]
[93 175]
[94 174]
[95 173]
[96 172]
[97 164]
[98 163]
[99 162]
[100 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
