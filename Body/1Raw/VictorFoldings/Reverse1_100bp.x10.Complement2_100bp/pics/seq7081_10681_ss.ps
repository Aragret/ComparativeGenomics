%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[45.37986755 676.65881348]
[33.12114716 685.32080078]
[20.13531876 692.84906006]
[6.52693462 699.18292236]
[-7.59443617 704.27148438]
[-22.11509514 708.07366943]
[-36.91812515 710.55895996]
[-51.88434219 711.70721436]
[-66.89324188 711.50933838]
[-81.82398224 709.96685791]
[-96.55634308 707.09216309]
[-110.97171021 702.90844727]
[-124.95401001 697.44940186]
[-138.39067078 690.75891113]
[-151.17350769 682.89093018]
[-163.19958496 673.90875244]
[-174.37210083 663.88470459]
[-184.60107422 652.89953613]
[-193.80415344 641.04162598]
[-201.90722656 628.40649414]
[-208.84507751 615.09588623]
[-214.56182861 601.21697998]
[-219.01145935 586.88140869]
[-222.15814209 572.20477295]
[-223.97651672 557.30511475]
[-224.45198059 542.30242920]
[-223.58068848 527.31756592]
[-221.36964417 512.47106934]
[-217.83666992 497.88256836]
[-213.01020813 483.66949463]
[-206.92910767 469.94628906]
[-199.64233398 456.82345581]
[-191.20857239 444.40661621]
[-181.69569397 432.79577637]
[-171.18032837 422.08441162]
[-159.74713135 412.35876465]
[-147.48814392 403.69714355]
[-134.50209045 396.16931152]
[-120.89350891 389.83581543]
[-106.77198792 384.74774170]
[-92.25121307 380.94598389]
[-77.44810486 378.46115112]
[-62.48185349 377.31332397]
[-47.47296143 377.51165771]
[-32.54226685 379.05459595]
[-17.80999374 381.92974854]
[-3.39475608 386.11389160]
[2.06060100 372.14108276]
[7.51595783 358.16830444]
[12.97131538 344.19549561]
[10.39265347 329.52581787]
[22.61909294 319.48464966]
[28.07445145 305.51187134]
[33.52980804 291.53906250]
[38.98516464 277.56625366]
[44.44052124 263.59347534]
[49.89587784 249.62066650]
[55.35123444 235.64787292]
[60.80659485 221.67506409]
[66.15777588 207.66204834]
[71.40449524 193.60957336]
[76.65121460 179.55709839]
[80.62331390 165.09257507]
[83.28910828 150.33135986]
[85.95490265 135.57014465]
[88.62069702 120.80892944]
[91.28649139 106.04771423]
[93.29050446 91.18218231]
[94.62873840 76.24199677]
[95.96697235 61.30181122]
[97.30520630 46.36162949]
[98.30947113 31.39528275]
[98.97925568 16.41024399]
[91.86588287 2.27834845]
[100.16376495 -10.09074020]
[100.83354950 -25.07577896]
[101.50333405 -40.06081772]
[102.17312622 -55.04585648]
[102.84291077 -70.03089905]
[103.51269531 -85.01593781]
[103.84767151 -100.01219177]
[103.84767151 -115.01219177]
[103.84767151 -130.01219177]
[103.84767151 -145.01219177]
[103.84767151 -160.01219177]
[103.84767151 -175.01219177]
[89.00084686 -177.36131287]
[74.70433807 -182.00418091]
[61.31019974 -188.82647705]
[49.14828110 -197.66017151]
[38.51807785 -208.28773499]
[29.68136978 -220.44747925]
[22.85576630 -233.83992004]
[18.20935822 -248.13528442]
[15.85656261 -262.98153687]
[15.85532284 -278.01303101]
[18.20566750 -292.85968018]
[22.84971809 -307.15579224]
[29.67310905 -320.54937744]
[38.50781250 -332.71057129]
[49.13626099 -343.33987427]
[61.29672241 -352.17559814]
[74.68973541 -359.00009155]
[88.98547363 -363.64532471]
[103.83190918 -365.99688721]
[118.86342621 -365.99688721]
[133.70986938 -363.64532471]
[148.00559998 -359.00009155]
[161.39862061 -352.17559814]
[173.55908203 -343.33987427]
[184.18753052 -332.71057129]
[193.02223206 -320.54937744]
[199.84562683 -307.15579224]
[204.48966980 -292.85968018]
[206.84001160 -278.01303101]
[206.83877563 -262.98153687]
[204.48597717 -248.13528442]
[199.83956909 -233.83992004]
[193.01396179 -220.44747925]
[184.17726135 -208.28773499]
[173.54705811 -197.66017151]
[161.38513184 -188.82647705]
[147.99099731 -182.00418091]
[133.69448853 -177.36131287]
[118.84767151 -175.01219177]
[118.84767151 -160.01219177]
[118.84767151 -145.01219177]
[118.84767151 -130.01219177]
[118.84767151 -115.01219177]
[118.84767151 -100.01219177]
[121.06893921 -97.27388763]
[122.07424164 -93.32364655]
[121.30840302 -88.74469757]
[118.49773407 -84.34615326]
[117.82794952 -69.36110687]
[117.15816498 -54.37607193]
[116.48837280 -39.39103317]
[115.81858826 -24.40599442]
[115.14880371 -9.42095566]
[122.31008911 3.63911057]
[113.96429443 17.08003044]
[113.29450989 32.06506729]
[115.39128876 34.89982605]
[116.21920013 38.89101791]
[115.24967194 43.43120575]
[112.24539185 47.69986343]
[110.90715790 62.64004898]
[109.56892395 77.58023071]
[108.23069000 92.52041626]
[120.40572357 83.75864410]
[135.23184204 86.03598022]
[144.21597290 98.04785919]
[142.21159363 112.91333771]
[130.36692810 122.11679840]
[115.46710205 120.38607025]
[106.04771423 108.71350861]
[103.38191223 123.47472382]
[100.71611786 138.23594666]
[98.05032349 152.99716187]
[95.38452911 167.75837708]
[105.62457275 156.79747009]
[119.57471466 151.28442383]
[134.54138184 152.28372192]
[147.63478088 159.60241699]
[156.32673645 171.82739258]
[158.93899536 186.59817505]
[154.96717834 201.06277466]
[145.17816162 212.42829895]
[131.46205139 218.50024414]
[116.46723175 218.10620117]
[103.08895111 211.32228088]
[93.91035461 199.45832825]
[90.70368958 184.80381775]
[85.45697021 198.85629272]
[80.21025085 212.90876770]
[80.14028168 222.04292297]
[74.77938843 227.13043213]
[69.32403564 241.10322571]
[63.86867523 255.07601929]
[58.41331863 269.04882812]
[52.95796204 283.02160645]
[47.50260544 296.99441528]
[42.04724884 310.96722412]
[36.59189224 324.94000244]
[38.78034973 340.60913086]
[26.94411278 349.65084839]
[21.48875618 363.62365723]
[16.03339958 377.59643555]
[10.57804203 391.56924438]
[24.01490784 398.25930786]
[36.79798126 406.12692261]
[48.82434082 415.10873413]
[59.99715424 425.13241577]
[70.22646332 436.11730957]
[79.42990112 447.97491455]
[87.53337097 460.60977173]
[94.47162628 473.92019653]
[100.18879700 487.79895020]
[104.63886261 502.13433838]
[107.78598785 516.81091309]
[109.60483551 531.71051025]
[110.08074951 546.71313477]
[109.20991516 561.69805908]
[106.99932861 576.54461670]
[103.46679688 591.13323975]
[98.64076233 605.34643555]
[92.56008148 619.06982422]
[85.27371216 632.19293213]
[76.84032440 644.60998535]
[67.32781219 656.22113037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 189]
[48 188]
[49 187]
[50 186]
[52 184]
[53 183]
[54 182]
[55 181]
[56 180]
[57 179]
[58 178]
[59 177]
[60 175]
[61 174]
[62 173]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 149]
[69 148]
[70 147]
[71 146]
[72 142]
[73 141]
[75 139]
[76 138]
[77 137]
[78 136]
[79 135]
[80 134]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[86 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
