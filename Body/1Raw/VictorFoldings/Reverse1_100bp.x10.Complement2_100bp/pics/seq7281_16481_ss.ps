%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[138.67379761 486.32043457]
[141.82469177 471.61523438]
[147.48144531 457.68063354]
[155.47212219 444.94015503]
[165.55389404 433.78091431]
[177.42042542 424.54202271]
[190.71105957 417.50427246]
[186.09704590 403.23153687]
[181.48304749 388.95880127]
[176.86903381 374.68606567]
[173.91316223 372.76379395]
[171.74150085 369.31430054]
[171.06172180 364.72180176]
[172.38311768 359.67193604]
[168.41102600 345.20742798]
[164.43893433 330.74288940]
[160.46682739 316.27838135]
[143.39189148 315.33023071]
[127.64844513 308.58929443]
[115.14221191 296.85317993]
[107.39334869 281.52526855]
[105.35165405 264.44696045]
[109.28017426 247.67633057]
[118.72144318 233.24028015]
[132.55070496 222.88940430]
[127.93669891 208.61666870]
[123.32269287 194.34393311]
[118.70868683 180.07119751]
[114.09467316 165.79846191]
[109.48066711 151.52574158]
[104.76052856 137.28775024]
[99.93453217 123.08528900]
[95.10853577 108.88283539]
[89.73954773 102.87063599]
[90.31812286 94.43286133]
[85.70411682 80.16012573]
[81.09010315 65.88739014]
[76.47609711 51.61465836]
[64.86899567 40.86357880]
[68.31623840 26.37338257]
[63.70222855 12.10064888]
[58.98209381 -2.13734031]
[45.08490372 -9.17338181]
[40.39297485 -23.64543915]
[47.18640900 -36.85092545]
[42.36041260 -51.05337906]
[37.53441620 -65.25583649]
[32.70841599 -79.45829010]
[27.88241959 -93.66075134]
[23.05642128 -107.86320496]
[18.34425545 -112.50077057]
[16.89853859 -117.99685669]
[18.30502129 -122.56093597]
[13.90402222 -136.90078735]
[9.50302505 -151.24063110]
[-5.13882113 -147.94834900]
[-19.98972702 -145.78656006]
[-34.96254349 -144.76794434]
[-49.96939850 -144.89848328]
[-64.92222595 -146.17741394]
[-79.73327637 -148.59722900]
[-94.31563568 -152.14370728]
[-108.58372498 -156.79606628]
[-122.45380402 -162.52699280]
[-135.84449768 -169.30285645]
[-148.67720032 -177.08389282]
[-160.87660217 -185.82443237]
[-172.37113953 -195.47319031]
[-183.09333801 -205.97354126]
[-192.98027039 -217.26385498]
[-201.97392273 -229.27789307]
[-210.02151489 -241.94512939]
[-217.07582092 -255.19123840]
[-223.09544373 -268.93850708]
[-228.04505920 -283.10620117]
[-231.89559937 -297.61123657]
[-234.62449646 -312.36846924]
[-236.21572876 -327.29129028]
[-236.65995789 -342.29214478]
[-235.95455933 -357.28298950]
[-234.10368347 -372.17584229]
[-231.11820984 -386.88330078]
[-227.01564026 -401.31909180]
[-221.82005310 -415.39843750]
[-215.56193542 -429.03878784]
[-208.27801514 -442.16003418]
[-200.01104736 -454.68521118]
[-190.80952454 -466.54080200]
[-180.72747803 -477.65722656]
[-169.82405090 -487.96923828]
[-158.16322327 -497.41635132]
[-145.81344604 -505.94311523]
[-132.84718323 -513.49951172]
[-119.34052277 -520.04113770]
[-105.37274170 -525.52966309]
[-91.02579498 -529.93280029]
[-76.38388824 -533.22479248]
[-61.53293991 -535.38635254]
[-46.56010818 -536.40466309]
[-31.55325317 -536.27386475]
[-16.60044861 -534.99462891]
[-1.78944242 -532.57452393]
[12.79284763 -529.02777100]
[27.06084633 -524.37512207]
[40.93082047 -518.64392090]
[54.32137680 -511.86782837]
[67.15393066 -504.08654785]
[79.35317993 -495.34579468]
[90.84753418 -485.69680786]
[101.56952667 -475.19625854]
[111.45624542 -463.90576172]
[120.44966888 -451.89154053]
[128.49702454 -439.22415161]
[135.55108643 -425.97790527]
[141.57043457 -412.23056030]
[146.51977539 -398.06274414]
[150.37005615 -383.55764771]
[153.09867859 -368.80035400]
[154.68962097 -353.87750244]
[155.13356018 -338.87664795]
[154.42788696 -323.88580322]
[152.57673645 -308.99301147]
[149.59097290 -294.28558350]
[145.48812866 -279.84988403]
[140.29226685 -265.77062988]
[134.03388977 -252.13040161]
[126.74973297 -239.00929260]
[118.48252106 -226.48426819]
[109.28078461 -214.62886047]
[99.19851685 -203.51261902]
[88.29489136 -193.20080566]
[76.63388824 -183.75390625]
[64.28395081 -175.22738647]
[51.31753922 -167.67124939]
[37.81076050 -161.12986755]
[23.84287262 -155.64163208]
[28.24386978 -141.30178833]
[32.64486694 -126.96193695]
[37.25887680 -112.68920135]
[42.08487320 -98.48674774]
[46.91087341 -84.28428650]
[51.73686981 -70.08183289]
[56.56286621 -55.87937927]
[61.38886642 -41.67692184]
[74.82138062 -35.34421921]
[79.91794586 -21.00965881]
[73.18454742 -6.96333790]
[78.31292725 -1.64153659]
[77.97496033 7.48663950]
[82.58897400 21.75937271]
[93.86605072 31.48957253]
[90.74883270 47.00064850]
[95.36283875 61.27338028]
[99.97684479 75.54611206]
[104.59085846 89.81884766]
[109.31098938 104.05683899]
[114.13698578 118.25929260]
[118.96298981 132.46174622]
[124.68700409 139.58027649]
[123.75339508 146.91172791]
[128.36740112 161.18446350]
[132.98141479 175.45719910]
[137.59542847 189.72991943]
[142.20944214 204.00265503]
[146.82344055 218.27539062]
[159.81498718 217.93148804]
[172.43913269 220.96115112]
[183.83586121 227.15081787]
[193.23068237 236.07188416]
[199.98713684 247.11036682]
[203.65008545 259.50921631]
[203.97621155 272.42022705]
[200.95024109 284.96194458]
[194.78550720 296.28005981]
[185.90890503 305.60540771]
[174.93135071 312.30627441]
[178.90345764 326.77081299]
[182.87554932 341.23532104]
[186.84764099 355.69985962]
[191.14176941 370.07208252]
[195.75578308 384.34478760]
[200.36978149 398.61752319]
[204.98379517 412.89025879]
[219.87907410 410.81622314]
[234.90821838 411.36044312]
[249.61448669 414.50631714]
[263.55099487 420.15832520]
[276.29418945 428.14468384]
[287.45687866 438.22265625]
[296.69979858 450.08602905]
[303.74206543 463.37426758]
[308.36968994 477.68359375]
[310.44204712 492.57910156]
[309.89611816 507.60818481]
[306.74856567 522.31408691]
[301.09497070 536.24993896]
[293.10717773 548.99224854]
[283.02795410 560.15380859]
[271.16351318 569.39538574]
[257.87448120 576.43615723]
[243.56463623 581.06213379]
[228.66888428 583.13281250]
[213.63987732 582.58520508]
[198.93431091 579.43591309]
[184.99909973 573.78076172]
[172.25769043 565.79156494]
[161.09730530 555.71105957]
[151.85708618 543.84558105]
[144.81782532 530.55572510]
[140.19345093 516.24536133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 183]
[8 182]
[9 181]
[10 180]
[14 179]
[15 178]
[16 177]
[17 176]
[25 165]
[26 164]
[27 163]
[28 162]
[29 161]
[30 160]
[31 158]
[32 157]
[33 156]
[35 155]
[36 154]
[37 153]
[38 152]
[40 150]
[41 149]
[42 147]
[45 144]
[46 143]
[47 142]
[48 141]
[49 140]
[50 139]
[53 138]
[54 137]
[55 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
