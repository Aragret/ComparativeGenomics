%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[210.00971985 327.25927734]
[222.10932922 318.32781982]
[215.42913818 304.89746094]
[208.74894714 291.46707153]
[202.06874084 278.03671265]
[194.60101318 265.02774048]
[186.37219238 252.48634338]
[178.14338684 239.94494629]
[169.91458130 227.40354919]
[161.68577576 214.86215210]
[153.45697021 202.32073975]
[145.22816467 189.77934265]
[136.99934387 177.23794556]
[123.54822540 170.84133911]
[122.44673920 155.05851746]
[114.21792603 142.51712036]
[105.98912048 129.97572327]
[106.43504333 144.96910095]
[100.81952667 158.87829590]
[90.08889008 169.35939026]
[76.05142212 174.64613342]
[61.07269287 173.84759521]
[47.67687607 167.09837341]
[38.12140656 155.53579712]
[34.01654434 141.10839844]
[36.05403137 126.24741364]
[43.89051819 113.45720673]
[56.20541763 104.89313507]
[70.92345428 101.99840546]
[85.56437683 105.26082611]
[97.66204071 114.13185883]
[86.73600006 105.40756226]
[88.44792938 91.53092957]
[82.78514862 77.64090729]
[77.12236023 63.75087738]
[71.45957184 49.86085129]
[65.79678345 35.97082138]
[60.13399887 22.08079720]
[54.47121429 8.19076920]
[48.80842590 -5.69925737]
[43.04239273 -19.54674339]
[37.17343140 -33.35092163]
[31.30447197 -47.15509796]
[26.26043129 -51.42934418]
[24.40993881 -56.80267715]
[25.47306442 -61.45872879]
[20.01770592 -75.43152618]
[14.56234932 -89.40431976]
[9.10699272 -103.37712097]
[6.70858574 -88.57010651]
[-1.10816538 -75.76782990]
[-13.18369293 -66.86942291]
[-27.72666359 -63.19491577]
[-42.57971573 -65.28939819]
[-55.53948593 -72.84217072]
[-64.68347168 -84.73282623]
[-68.65521240 -99.19744110]
[-66.86552429 -114.09029388]
[-59.57990265 -127.20211029]
[-47.87912369 -136.58782959]
[-33.49892426 -140.85513306]
[-18.57252693 -139.37100220]
[-5.31417131 -132.35559082]
[4.30842304 -120.85127258]
[1.86269581 -135.65054321]
[-0.58303159 -150.44981384]
[-3.02875900 -165.24908447]
[-5.47448635 -180.04835510]
[-8.25009727 -194.78932190]
[-11.35420704 -209.46463013]
[-14.45831776 -224.13992310]
[-17.56242752 -238.81523132]
[-32.51591110 -237.43325806]
[-47.52872086 -237.79667664]
[-62.39782715 -239.90054321]
[-76.92213440 -243.71641541]
[-90.90522766 -249.19270325]
[-104.15799713 -256.25531006]
[-116.50121307 -264.80877686]
[-127.76795197 -274.73736572]
[-137.80584717 -285.90686035]
[-146.47912598 -298.16616821]
[-153.67051697 -311.34948730]
[-159.28276062 -325.27859497]
[-163.23994446 -339.76504517]
[-165.48855591 -354.61294556]
[-165.99819946 -369.62149048]
[-164.76197815 -384.58773804]
[-161.79658508 -399.30923462]
[-157.14216614 -413.58694458]
[-150.86163330 -427.22775269]
[-143.03993225 -440.04718018]
[-133.78285217 -451.87185669]
[-123.21557617 -462.54187012]
[-111.48101807 -471.91290283]
[-98.73786926 -479.85827637]
[-85.15847015 -486.27047729]
[-70.92646790 -491.06283569]
[-56.23432541 -494.17050171]
[-41.28075027 -495.55145264]
[-26.26796532 -495.18704224]
[-11.39900112 -493.08218384]
[3.12505460 -489.26535034]
[17.10778236 -483.78811646]
[30.36007881 -476.72463989]
[42.70272446 -468.17034912]
[53.96879959 -458.24099731]
[64.00594330 -447.07083130]
[72.67841339 -434.81097412]
[79.86891937 -421.62713623]
[85.48023224 -407.69769287]
[89.43644714 -393.21096802]
[91.68408203 -378.36291504]
[92.19271851 -363.35433960]
[90.95549011 -348.38818359]
[87.98912811 -333.66683960]
[83.33374786 -319.38946533]
[77.05229950 -305.74908447]
[69.22975159 -292.93017578]
[59.97187805 -281.10610962]
[49.40388870 -270.43682861]
[37.66870499 -261.06655884]
[24.92502594 -253.12203979]
[11.34519863 -246.71073914]
[-2.88712525 -241.91934204]
[0.21698476 -227.24403381]
[3.32109499 -212.56874084]
[6.42520523 -197.89343262]
[9.16505623 -195.67407227]
[10.96606255 -192.01737976]
[11.16437817 -187.37905884]
[9.32478428 -182.49407959]
[11.77051163 -167.69480896]
[14.21623898 -152.89553833]
[16.66196632 -138.09626770]
[19.10769463 -123.29700470]
[23.07979012 -108.83248138]
[28.53514671 -94.85968018]
[33.99050522 -80.88687897]
[39.44586182 -66.91408539]
[45.10864639 -53.02405930]
[50.97760773 -39.21987915]
[56.84656906 -25.41570473]
[62.35655594 -20.49007416]
[62.69845200 -11.36204433]
[68.36123657 2.52798271]
[74.02402496 16.41800880]
[79.68681335 30.30803680]
[85.34960175 44.19806290]
[91.01238251 58.08808899]
[96.67517090 71.97811890]
[102.33795929 85.86814117]
[113.26399994 94.59243774]
[111.55207062 108.46907043]
[118.53051758 121.74691772]
[126.75933075 134.28831482]
[134.98812866 146.82971191]
[149.02783203 154.12336731]
[149.54075623 169.00914001]
[157.76956177 181.55053711]
[165.99836731 194.09193420]
[174.22717285 206.63333130]
[182.45597839 219.17474365]
[190.68478394 231.71614075]
[198.91360474 244.25753784]
[207.14241028 256.79895020]
[209.20483398 241.94140625]
[219.52301025 231.05401611]
[234.24851990 228.19750977]
[247.88908386 234.43727112]
[255.35714722 247.44604492]
[253.86726379 262.37188721]
[243.97515869 273.64779663]
[229.37033081 277.06814575]
[215.49913025 271.35650635]
[222.17932129 284.78686523]
[228.85951233 298.21725464]
[235.53970337 311.64764404]
[249.96252441 307.38696289]
[264.90612793 305.69570923]
[279.91635132 306.62524414]
[294.53707886 310.14736938]
[308.32400513 316.15499878]
[320.85815430 324.46560669]
[331.75863647 334.82662964]
[340.69418335 346.92318726]
[347.39328003 360.38772583]
[351.65231323 374.81100464]
[353.34188843 389.75479126]
[352.41061401 404.76492310]
[348.88687134 419.38525391]
[342.87765503 433.17150879]
[334.56564331 445.70471191]
[324.20336914 456.60400391]
[312.10580444 465.53820801]
[298.64050293 472.23574829]
[284.21673584 476.49316406]
[269.27276611 478.18103027]
[254.26274109 477.24807739]
[239.64280701 473.72265625]
[225.85723877 467.71188354]
[213.32496643 459.39843750]
[202.42683411 449.03494263]
[193.49403381 436.93634033]
[186.79800415 423.47030640]
[182.54223633 409.04602051]
[180.85606384 394.10186768]
[181.79071045 379.09194946]
[185.31779480 364.47241211]
[191.33012390 350.68753052]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 178]
[3 177]
[4 176]
[5 175]
[6 166]
[7 165]
[8 164]
[9 163]
[10 162]
[11 161]
[12 160]
[13 159]
[15 157]
[16 156]
[17 155]
[31 154]
[33 152]
[34 151]
[35 150]
[36 149]
[37 148]
[38 147]
[39 146]
[40 145]
[41 143]
[42 142]
[43 141]
[46 140]
[47 139]
[48 138]
[49 137]
[64 136]
[65 135]
[66 134]
[67 133]
[68 132]
[69 128]
[70 127]
[71 126]
[72 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
