%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[94.36309052 676.78411865]
[79.50872803 673.84704590]
[66.41413116 666.24377441]
[56.49971390 654.79895020]
[50.84091187 640.75415039]
[50.05155563 625.63281250]
[54.21726608 611.07513428]
[62.88617706 598.66027832]
[75.11795044 589.73486328]
[89.58577728 585.26715088]
[90.03238678 570.27380371]
[90.47898865 555.28045654]
[90.92559814 540.28710938]
[91.37220001 525.29376221]
[76.40557098 516.78265381]
[67.76669312 501.78656006]
[67.91366577 484.39166260]
[76.89620972 469.39086914]
[92.31712341 460.96301270]
[92.31712341 445.96301270]
[92.31712341 430.96301270]
[92.31712341 415.96301270]
[91.98214722 400.96676636]
[91.31236267 385.98171997]
[90.64257812 370.99667358]
[89.97279358 356.01162720]
[89.30300903 341.02661133]
[88.63322449 326.04156494]
[87.96343994 311.05651855]
[84.52439880 304.51473999]
[87.39691925 295.84371948]
[84.05565643 289.25149536]
[87.05695343 280.62420654]
[86.83362579 265.62585449]
[86.61029816 250.62751770]
[84.34850311 247.92259216]
[83.28450012 243.98776245]
[83.98207855 239.39790344]
[86.72695160 234.95800781]
[87.17355347 219.96466064]
[87.62016296 204.97129822]
[80.26522827 192.01930237]
[88.40998077 178.45562744]
[88.85659027 163.46226501]
[81.50165558 150.51026917]
[89.64640808 136.94659424]
[87.82450104 134.81614685]
[86.73671722 131.83564758]
[86.71105194 128.28111267]
[87.96962738 124.54206085]
[90.59239197 121.08155060]
[91.93062592 106.14136505]
[89.45596313 98.47008514]
[93.40162659 90.98927307]
[94.96215057 76.07066345]
[96.52267456 61.15206146]
[98.08319092 46.23345566]
[99.64371490 31.31485176]
[100.20192719 16.32524109]
[99.75532532 1.33189154]
[99.08553314 -13.65314770]
[98.19271851 -28.62655258]
[97.29990387 -43.59996033]
[96.40708923 -58.57336426]
[93.88851929 -62.11042404]
[92.74182892 -65.88529205]
[92.87331390 -69.43749237]
[94.04936218 -72.38427734]
[95.93389130 -74.45953369]
[95.93389130 -89.45953369]
[95.93389130 -104.45953369]
[88.19658661 -118.25970459]
[95.93389130 -130.98696899]
[95.93389130 -145.98696899]
[95.93389130 -160.98696899]
[95.82221985 -175.98655701]
[95.59889221 -190.98489380]
[81.51876068 -196.64401245]
[70.70710754 -207.23414612]
[64.78965759 -221.11930847]
[64.63950348 -236.17138672]
[70.24837494 -250.09637451]
[80.73268890 -260.78396606]
[94.47256470 -266.62734985]
[94.24923706 -281.62567139]
[94.02590942 -296.62402344]
[93.80258179 -311.62234497]
[93.57925415 -326.62069702]
[93.35592651 -341.61901855]
[93.13259888 -356.61737061]
[90.45413208 -361.09762573]
[89.82497406 -365.69735718]
[90.94744110 -369.61593628]
[93.24925232 -372.28686523]
[93.69586182 -387.28024292]
[85.43531036 -397.18609619]
[86.11595917 -409.66488647]
[94.82831573 -418.05664062]
[95.49810028 -433.04168701]
[96.16788483 -448.02670288]
[82.52722168 -454.79812622]
[72.82504272 -466.53643799]
[68.74231720 -481.20788574]
[70.98638916 -496.27053833]
[79.16847229 -509.11474609]
[91.87096405 -517.51513672]
[106.89308167 -520.01629639]
[121.63215637 -516.18487549]
[133.53454590 -506.68475342]
[140.53810120 -493.16180420]
[141.42939758 -477.95898438]
[136.05403137 -463.71029663]
[125.34330750 -452.88439941]
[111.15292358 -447.35693359]
[110.48313904 -432.37188721]
[109.81335449 -417.38684082]
[118.72796631 -402.27075195]
[108.68920898 -386.83361816]
[108.24260712 -371.84027100]
[108.13093567 -356.84069824]
[108.35426331 -341.84234619]
[108.57759094 -326.84402466]
[108.80091858 -311.84567261]
[109.02424622 -296.84735107]
[109.24757385 -281.84899902]
[109.47090149 -266.85067749]
[123.37866974 -261.41897583]
[134.17654419 -251.04827881]
[140.19752502 -237.29644775]
[140.49559021 -222.24658203]
[134.99418640 -208.19139099]
[124.50263214 -197.28404236]
[110.59722900 -191.20822144]
[110.82055664 -176.20988464]
[114.06330109 -169.56861877]
[110.93389130 -160.98696899]
[110.93389130 -145.98696899]
[110.93389130 -130.98696899]
[118.67118835 -118.25970459]
[110.93389130 -104.45953369]
[110.93389130 -89.45953369]
[110.93389130 -74.45953369]
[111.38049316 -59.46617889]
[112.27330780 -44.49277496]
[113.16613007 -29.51936913]
[114.05894470 -14.54596329]
[116.97300720 -10.76214790]
[117.54104614 -5.10756016]
[114.74867249 0.88528562]
[115.19527435 15.87863541]
[124.15748596 3.85038638]
[138.16215515 -1.52261770]
[152.86979675 1.42450702]
[163.72306824 11.77856159]
[167.35897827 26.33123016]
[162.65089417 40.57321167]
[151.05767822 50.09146881]
[136.17160034 51.93666840]
[122.60528564 45.53705597]
[114.56232452 32.87537384]
[113.00180054 47.79397964]
[111.44127655 62.71258545]
[109.88075256 77.63118744]
[108.32022858 92.54979706]
[106.87081146 107.47959900]
[105.53257751 122.41978455]
[104.63976288 137.39318848]
[111.96274567 151.41761780]
[103.84993744 163.90887451]
[103.40333557 178.90222168]
[110.72631836 192.92665100]
[102.61351013 205.41790771]
[102.16690826 220.41125488]
[101.72029877 235.40461731]
[101.60863495 250.40419006]
[101.83196259 265.40252686]
[102.05529022 280.40087891]
[102.39026642 295.39712524]
[102.94847870 310.38674927]
[103.61826324 325.37176514]
[104.28804779 340.35681152]
[104.95783234 355.34185791]
[105.62761688 370.32690430]
[106.29740143 385.31192017]
[106.96718597 400.29696655]
[109.77786255 404.69552612]
[110.54369354 409.27447510]
[109.53839111 413.22470093]
[107.31712341 415.96301270]
[107.31712341 430.96301270]
[107.31712341 445.96301270]
[107.31712341 460.96301270]
[119.06412506 466.32843018]
[127.87734985 475.70404053]
[132.47328186 487.67285156]
[132.20214844 500.44412231]
[127.13955688 512.12139893]
[118.07000732 520.98388672]
[106.36555481 525.74035645]
[105.91894531 540.73370361]
[105.47234344 555.72705078]
[105.02573395 570.72039795]
[104.57912445 585.71374512]
[118.75537872 591.03472900]
[130.43421936 600.67230225]
[138.34881592 613.58111572]
[141.64065552 628.36096191]
[139.95265198 643.40850830]
[133.46792603 657.09161377]
[122.88987732 667.92596436]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 203]
[11 202]
[12 201]
[13 200]
[14 199]
[19 192]
[20 191]
[21 190]
[22 189]
[23 185]
[24 184]
[25 183]
[26 182]
[27 181]
[28 180]
[29 179]
[31 178]
[33 177]
[34 176]
[35 175]
[39 174]
[40 173]
[41 172]
[43 170]
[44 169]
[46 167]
[51 166]
[52 165]
[54 164]
[55 163]
[56 162]
[57 161]
[58 160]
[59 150]
[60 149]
[61 146]
[62 145]
[63 144]
[64 143]
[69 142]
[70 141]
[71 140]
[73 138]
[74 137]
[75 136]
[76 134]
[77 133]
[84 126]
[85 125]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[94 119]
[95 118]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
