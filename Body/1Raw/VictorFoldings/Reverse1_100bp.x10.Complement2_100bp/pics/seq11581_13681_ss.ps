%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[178.07473755 661.21081543]
[184.39927673 647.45294189]
[194.85012817 636.49578857]
[208.29364014 629.52795410]
[206.06851196 614.69390869]
[203.84339905 599.85986328]
[201.61828613 585.02581787]
[199.39315796 570.19177246]
[197.16804504 555.35772705]
[182.36795044 548.25604248]
[174.63975525 533.58508301]
[177.20445251 517.03442383]
[189.24702454 505.15704346]
[186.80128479 490.35775757]
[184.35556030 475.55850220]
[174.64663696 464.26309204]
[180.03030396 449.38604736]
[177.58457947 434.58676147]
[173.39254761 428.50000000]
[175.21430969 419.54910278]
[172.98919678 404.71505737]
[170.76408386 389.88101196]
[168.53897095 375.04696655]
[159.00085449 367.60714722]
[157.02566528 355.26687622]
[164.21083069 344.55535889]
[162.20681763 329.68984985]
[160.20280457 314.82431030]
[158.19879150 299.95877075]
[156.19477844 285.09326172]
[152.76371765 270.49093628]
[147.93772888 256.28848267]
[143.11172485 242.08602905]
[138.28572083 227.88356018]
[133.45973206 213.68110657]
[128.63372803 199.47865295]
[113.19878387 187.83180237]
[117.42881012 168.12217712]
[112.18209076 154.06970215]
[106.93537140 140.01722717]
[101.68865204 125.96475983]
[88.69655609 123.43613434]
[78.62938690 114.84307861]
[74.09216309 102.40917206]
[76.25895691 89.35185242]
[84.56907654 79.04989624]
[79.53216553 64.92086792]
[74.49524689 50.79183578]
[69.45832825 36.66280746]
[64.42141724 22.53377724]
[49.67945480 18.06379128]
[40.50354004 5.91241121]
[40.24532700 -9.13409424]
[48.79428482 -21.30180931]
[46.17926025 -6.53151321]
[38.46759415 6.33434153]
[26.67389107 15.60303020]
[12.34981728 20.05509949]
[-2.62005019 19.10479927]
[-16.26616859 12.87716198]
[-26.79315376 2.19153786]
[-32.81600189 -11.54619503]
[-33.54230499 -26.52860069]
[-28.87650299 -40.78448486]
[-19.43246269 -52.43824768]
[-6.45271158 -59.95662689]
[8.35504246 -62.35045624]
[23.04258347 -59.30478287]
[35.67751694 -51.22032166]
[44.59853745 -39.15858078]
[42.81607056 -54.05229950]
[41.03360367 -68.94601440]
[31.71123886 -81.72897339]
[37.88132095 -95.28549957]
[36.09885406 -110.17921448]
[24.72289658 -124.65917206]
[32.25337219 -140.51031494]
[30.24935722 -155.37585449]
[28.24534225 -170.24137878]
[26.24132919 -185.10690308]
[23.04944611 -189.23715210]
[21.87815285 -193.72952271]
[22.52702141 -197.75369263]
[24.49513245 -200.67926025]
[23.15689659 -215.61944580]
[21.81866264 -230.55963135]
[18.33394051 -236.17819214]
[18.22600937 -241.86021423]
[20.66979408 -245.96350098]
[12.12481022 -259.27868652]
[19.09085274 -272.44390869]
[18.19803619 -287.41732788]
[17.30522156 -302.39071655]
[16.41240501 -317.36413574]
[15.51958942 -332.33752441]
[0.98499233 -336.64117432]
[-11.19928360 -345.65890503]
[-19.56192780 -358.30175781]
[-23.09311104 -373.04306030]
[-21.36642456 -388.10275269]
[-14.59037590 -401.66229248]
[-3.58320475 -412.08428955]
[10.32591915 -418.11026001]
[25.45740128 -419.01248169]
[39.98404312 -414.68206787]
[52.15167999 -405.64190674]
[60.49101257 -392.98367310]
[63.99502182 -378.23587036]
[62.24058533 -363.17938232]
[55.43955994 -349.63235474]
[44.41320038 -339.23065186]
[30.49299431 -333.23034668]
[31.38581085 -318.25695801]
[32.27862549 -303.28353882]
[33.17144394 -288.31011963]
[34.06425858 -273.33673096]
[42.54537964 -261.09255981]
[35.64319992 -246.85630798]
[36.75885010 -231.89785767]
[38.09708405 -216.95767212]
[39.43531799 -202.01748657]
[41.10685730 -187.11091614]
[43.11087036 -172.24539185]
[45.11488342 -157.37986755]
[47.11890030 -142.51432800]
[56.54518890 -134.93333435]
[58.33642578 -122.56501007]
[50.99257278 -111.96168518]
[52.77503967 -97.06796265]
[61.96990967 -85.35030365]
[55.92732239 -70.72848511]
[57.70978928 -55.83476639]
[59.49225616 -40.94104767]
[62.92331696 -26.33872414]
[77.24156189 -22.32303619]
[86.55989838 -10.50640965]
[87.14017487 4.70926237]
[78.55044556 17.49686050]
[83.58736420 31.62588882]
[88.62427521 45.75492096]
[93.66119385 59.88394928]
[98.69811249 74.01297760]
[114.37720490 78.31322479]
[124.44306946 91.08054352]
[124.96572876 107.33025360]
[115.74112701 120.71804047]
[120.98784637 134.77050781]
[126.23456573 148.82298279]
[131.48127747 162.87545776]
[141.62126160 166.81109619]
[147.79423523 175.49871826]
[148.15892029 185.93017578]
[142.83618164 194.65266418]
[147.66218567 208.85511780]
[152.48818970 223.05757141]
[157.31417847 237.26002502]
[162.14018250 251.46247864]
[166.96617126 265.66494751]
[170.28910828 251.03762817]
[179.20883179 238.97784424]
[192.22224426 231.51786804]
[207.13633728 229.91485596]
[221.43783569 234.43890381]
[232.71669006 244.32766724]
[239.07218933 257.91470337]
[239.43334961 272.91036987]
[233.73930359 286.78759766]
[222.94958496 297.20785522]
[208.88244629 302.41516113]
[193.90847778 301.53195190]
[180.55102539 294.70712280]
[171.06030273 283.08923340]
[173.06431580 297.95477295]
[175.06834412 312.82031250]
[177.07235718 327.68582153]
[179.07637024 342.55136108]
[190.66664124 356.86032104]
[183.37300110 372.82183838]
[185.59812927 387.65588379]
[187.82324219 402.48992920]
[190.04835510 417.32397461]
[192.38385010 432.14105225]
[194.82957458 446.94030762]
[204.71342468 459.29425049]
[199.15483093 473.11276245]
[201.60055542 487.91204834]
[204.04629517 502.71130371]
[216.79463196 507.95254517]
[225.22163391 518.72308350]
[227.21037292 532.14373779]
[222.34719849 544.69335938]
[212.00209045 553.13262939]
[214.22720337 567.96667480]
[216.45233154 582.80072021]
[218.67744446 597.63476562]
[220.90255737 612.46881104]
[223.12767029 627.30285645]
[238.02389526 630.01971436]
[251.22961426 637.42834473]
[261.31237793 648.72509766]
[267.17846680 662.68457031]
[268.19158936 677.79260254]
[264.24185181 692.41033936]
[255.75767517 704.95220947]
[243.65937805 714.05767822]
[229.25927734 718.73907471]
[214.11938477 718.48870850]
[199.88198853 713.33355713]
[188.09143066 703.83294678]
[180.02667236 691.01739502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 197]
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[13 187]
[14 186]
[15 185]
[17 183]
[18 182]
[20 181]
[21 180]
[22 179]
[23 178]
[26 176]
[27 175]
[28 174]
[29 173]
[30 172]
[31 158]
[32 157]
[33 156]
[34 155]
[35 154]
[36 153]
[38 149]
[39 148]
[40 147]
[41 146]
[46 142]
[47 141]
[48 140]
[49 139]
[50 138]
[54 134]
[70 133]
[71 132]
[72 131]
[74 129]
[75 128]
[77 125]
[78 124]
[79 123]
[80 122]
[84 121]
[85 120]
[86 119]
[89 118]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
