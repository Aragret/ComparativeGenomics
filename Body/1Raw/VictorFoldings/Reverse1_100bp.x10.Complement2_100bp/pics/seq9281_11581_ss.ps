%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[52.44597244 592.86694336]
[50.46245193 607.81115723]
[44.95953369 621.84619141]
[36.25714874 634.15600586]
[24.86124420 644.02496338]
[11.43436337 650.87933350]
[-3.24287415 654.32061768]
[-18.31715202 654.14862061]
[-32.91207123 650.37347412]
[-46.17910767 643.21466064]
[-57.34692383 633.08825684]
[-65.76624298 620.58312988]
[-70.94757843 606.42626953]
[-72.58969116 591.44067383]
[-70.59710693 576.49768066]
[-65.08568573 562.46606445]
[-56.37583923 550.16149902]
[-44.97395325 540.29943848]
[-31.54291725 533.45318604]
[-16.86359596 530.02087402]
[-1.78942525 530.20196533]
[1.96687543 515.67987061]
[-2.33672953 501.42056274]
[8.60987949 489.99768066]
[4.30627441 475.73834229]
[15.25288296 464.31546021]
[19.00918388 449.79339600]
[22.76548386 435.27133179]
[26.41357231 420.72171021]
[29.95324516 406.14535522]
[33.38430405 391.54302979]
[28.65805626 377.41815186]
[39.25970840 365.67440796]
[42.58197021 351.04696655]
[33.01934814 337.21240234]
[36.48959351 320.41143799]
[51.32361221 311.13937378]
[54.42771912 296.46408081]
[57.53182983 281.78875732]
[43.39761353 273.35559082]
[32.98851013 260.57318115]
[27.57622910 244.97526550]
[27.83152008 228.44134521]
[33.74110413 212.97000122]
[44.60715485 200.43742371]
[59.12966156 192.36984253]
[75.56192780 189.75769043]
[78.22772217 174.99647522]
[80.89352417 160.23526001]
[83.55931854 145.47404480]
[81.65458679 138.33305359]
[86.37625122 130.51361084]
[89.26152802 115.79371643]
[81.26529694 103.71039581]
[84.05237579 89.49145508]
[96.01858521 81.32101440]
[98.90385437 66.60112000]
[101.78913116 51.88122940]
[104.67440033 37.16133881]
[107.55966949 22.44144630]
[101.02480316 11.32127476]
[103.73098755 -0.87955749]
[113.69502258 -7.73846817]
[116.79913330 -22.41377068]
[119.57473755 -37.15473175]
[122.02046967 -51.95400238]
[124.46619415 -66.75327301]
[126.91192627 -81.55254364]
[114.06166840 -89.62389374]
[105.30419159 -101.96689606]
[101.94861603 -116.68265533]
[104.47589874 -131.52180481]
[112.47023010 -144.22831726]
[124.68703461 -152.88250732]
[139.24667358 -156.19100952]
[141.69239807 -170.99028015]
[140.00408936 -179.96733093]
[144.28628540 -185.99101257]
[146.95208740 -200.75222778]
[149.61787415 -215.51344299]
[152.17370605 -230.29409790]
[154.61944580 -245.09336853]
[156.51272583 -259.97338867]
[157.85096741 -274.91357422]
[159.18919373 -289.85375977]
[160.52743530 -304.79394531]
[161.86566162 -319.73413086]
[162.31227112 -334.72747803]
[161.86566162 -349.72085571]
[153.72091675 -363.28451538]
[161.07585144 -376.23651123]
[160.62924194 -391.22988892]
[160.18263245 -406.22323608]
[156.79910278 -414.70788574]
[159.84266663 -421.44274902]
[159.61933899 -436.44110107]
[145.21963501 -441.12374878]
[133.12210083 -450.23025513]
[124.63899994 -462.77279663]
[120.69049072 -477.39086914]
[121.70489502 -492.49880981]
[127.57217407 -506.45782471]
[137.65588379 -517.75372314]
[150.86222839 -525.16125488]
[165.75868225 -527.87683105]
[180.72938538 -525.60595703]
[194.15042114 -518.59490967]
[204.56599426 -507.60427856]
[210.84628296 -493.82614136]
[212.31004333 -478.75509644]
[208.79852295 -464.02597046]
[200.69261169 -451.23638916]
[188.87158203 -441.77374268]
[174.61767578 -436.66442871]
[174.84100342 -421.66607666]
[175.17597961 -406.66983032]
[175.62258911 -391.67648315]
[176.06919861 -376.68313599]
[184.18200684 -364.19186401]
[176.85902405 -350.16744995]
[177.30561829 -335.17410278]
[186.84011841 -346.75396729]
[201.33079529 -350.62957764]
[215.37298584 -345.35543823]
[223.72930908 -332.89862061]
[223.28306580 -317.90527344]
[214.20068359 -305.96749878]
[199.86965942 -301.53781128]
[185.63513184 -306.26837158]
[176.80584717 -318.39590454]
[175.46762085 -303.45571899]
[174.12937927 -288.51553345]
[172.79115295 -273.57534790]
[171.45291138 -258.63516235]
[184.46171570 -266.10317993]
[198.46672058 -260.73101807]
[203.14395142 -246.47888184]
[195.04553223 -233.85289001]
[180.14132690 -232.16046143]
[169.41871643 -242.64764404]
[166.97297668 -227.84837341]
[168.98381042 -220.73652649]
[164.37910461 -212.84764099]
[161.71330261 -198.08642578]
[159.04750061 -183.32521057]
[156.49166870 -168.54455566]
[154.04594421 -153.74528503]
[166.76699829 -145.92837524]
[175.54991150 -133.80377197]
[179.03108215 -119.20082092]
[176.64973450 -104.33754730]
[168.73802185 -91.48381805]
[156.47502136 -82.61466217]
[141.71119690 -79.10681915]
[139.26547241 -64.30754852]
[136.81973267 -49.50827789]
[134.37400818 -34.70900726]
[136.11907959 -31.64517021]
[136.46684265 -27.58387756]
[134.96467590 -23.19106865]
[131.47442627 -19.30965996]
[128.37031555 -4.63435793]
[134.70098877 11.73297691]
[122.27956390 25.32671928]
[119.39429474 40.04661179]
[116.50901794 54.76650238]
[113.62374878 69.48639679]
[110.73847198 84.20628357]
[118.73470306 96.28960419]
[115.94762421 110.50854492]
[103.98141479 118.67898560]
[101.09614563 133.39888000]
[98.32053375 148.13984680]
[95.65473938 162.90106201]
[92.98894501 177.66227722]
[90.32315063 192.42349243]
[102.38512421 198.74826050]
[112.16548920 208.20239258]
[118.87902832 220.01371765]
[121.99047852 233.22135925]
[121.25715637 246.75387573]
[116.74788666 259.51623535]
[108.83664703 270.47839355]
[98.17159271 278.75842285]
[85.62194061 283.69348145]
[72.20713043 284.89288330]
[69.10301971 299.56817627]
[65.99891663 314.24346924]
[74.59653473 324.61148071]
[75.63778687 337.84500122]
[68.96591187 349.09527588]
[57.20943069 354.36920166]
[53.88716888 368.99667358]
[58.37578964 384.16778564]
[48.01176453 394.86529541]
[49.16275787 403.92691040]
[44.52962112 409.68502808]
[40.98994827 424.26138306]
[42.00589752 433.33914185]
[37.28754425 439.02764893]
[33.53124237 453.54971313]
[29.77494240 468.07177734]
[33.80987167 483.36981201]
[23.13193893 493.75396729]
[27.16686821 509.05200195]
[16.48893547 519.43615723]
[12.73263359 533.95825195]
[26.00400543 541.10906982]
[37.17795944 551.22863770]
[45.60485840 563.72869873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 207]
[22 206]
[24 204]
[26 202]
[27 201]
[28 200]
[29 198]
[30 197]
[31 195]
[33 193]
[34 192]
[37 188]
[38 187]
[39 186]
[47 176]
[48 175]
[49 174]
[50 173]
[52 172]
[53 171]
[56 168]
[57 167]
[58 166]
[59 165]
[60 164]
[63 162]
[64 161]
[65 157]
[66 156]
[67 155]
[68 154]
[75 147]
[76 146]
[78 145]
[79 144]
[80 143]
[81 141]
[82 140]
[83 134]
[84 133]
[85 132]
[86 131]
[87 130]
[88 121]
[89 120]
[91 118]
[92 117]
[93 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
