%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[217.95211792 439.50573730]
[225.82421875 426.71722412]
[235.12777710 414.92907715]
[245.73698425 404.30075073]
[236.42210388 392.54348755]
[227.10722351 380.78622437]
[217.79232788 369.02899170]
[208.47744751 357.27172852]
[199.16256714 345.51449585]
[189.84768677 333.75723267]
[190.43257141 348.74581909]
[183.53240967 362.06451416]
[170.95089722 370.23187256]
[155.97679138 371.11291504]
[142.52430725 364.47735596]
[134.10986328 352.05972290]
[132.93301392 337.10598755]
[139.30136108 323.52496338]
[151.55023193 314.86669922]
[166.47781372 313.39450073]
[180.18136597 319.49258423]
[172.71362305 306.48364258]
[165.24588013 293.47470093]
[157.77813721 280.46572876]
[150.21376038 267.51272583]
[142.55316162 254.61640930]
[134.89256287 241.72007751]
[127.23197174 228.82376099]
[119.57137299 215.92742920]
[111.91077423 203.03109741]
[113.08321381 217.98521423]
[110.94404602 232.83189392]
[105.59764862 246.84674072]
[97.30489349 259.34594727]
[86.47039032 269.71963501]
[73.62277985 277.46166992]
[59.38893890 282.19430542]
[44.46335220 283.68658447]
[29.57427979 281.86572266]
[15.44819164 276.82055664]
[2.77433014 268.79727173]
[-7.82891846 258.18731689]
[-15.84419823 245.50837708]
[-20.88042641 231.37910461]
[-22.69187355 216.48889160]
[-21.19015503 201.56423950]
[-16.44854355 187.33338928]
[-8.69839287 174.49069214]
[1.68215013 163.66275024]
[14.18659592 155.37788391]
[28.20482445 150.04035950]
[43.05285645 147.91056824]
[58.00622177 149.09246826]
[72.33531189 153.52835083]
[85.34098053 161.00181580]
[96.38865662 171.14817810]
[104.93614197 183.46659851]
[102.71102142 168.63255310]
[100.48590851 153.79850769]
[98.26078796 138.96446228]
[96.03567505 124.13041687]
[93.81055450 109.29637146]
[91.47506714 94.47930908]
[89.02934265 79.68003845]
[82.27317810 93.07235718]
[69.78044128 101.37485504]
[54.81670761 102.41728973]
[41.29345703 95.92716217]
[32.74563980 83.60098267]
[31.40763283 68.66077423]
[37.62918472 55.01188278]
[49.78400040 46.22208786]
[64.69483948 44.58902740]
[78.46404266 50.53957367]
[87.49204254 62.51745224]
[87.26871490 47.51911545]
[87.04538727 32.52077866]
[86.82205963 17.52243996]
[84.14359283 13.04216003]
[83.51443481 8.44243622]
[84.63690186 4.52387667]
[86.93871307 1.85292149]
[87.38531494 -13.14042854]
[84.51280212 -21.81144142]
[87.95184326 -28.35321808]
[88.62162781 -43.33825684]
[89.29141235 -58.32329559]
[89.96119690 -73.30833435]
[90.63098145 -88.29337311]
[91.30076599 -103.27841187]
[91.97055054 -118.26345062]
[77.33689880 -121.76383972]
[63.63026047 -127.97064972]
[51.34611893 -136.65951538]
[40.92854309 -147.51634216]
[32.75411987 -160.14865112]
[27.11834717 -174.09980774]
[24.22495842 -188.86546326]
[24.17854500 -203.91186523]
[26.98078728 -218.69509888]
[32.53038406 -232.68075562]
[40.62672043 -245.36325073]
[50.97711945 -256.28414917]
[63.20742035 -265.04861450]
[76.87550354 -271.33987427]
[91.48728943 -274.93048096]
[106.51454926 -275.69064331]
[121.41407776 -273.59286499]
[135.64724731 -268.71298218]
[148.69955444 -261.22738647]
[160.09915161 -251.40672302]
[169.43397522 -239.60597229]
[176.36654663 -226.25172424]
[180.64627075 -211.82673645]
[182.11843872 -196.85244751]
[180.72984314 -181.87017822]
[176.53065491 -167.42153931]
[169.67269897 -154.02880859]
[160.40386963 -142.17616272]
[149.05923462 -132.29203796]
[136.04890442 -124.73376465]
[121.84317780 -119.77454376]
[106.95558929 -117.59366608]
[106.28580475 -102.60862732]
[105.61602020 -87.62358856]
[104.94623566 -72.63854980]
[104.27645111 -57.65351105]
[103.60666656 -42.66847229]
[102.93688202 -27.68343163]
[102.37866974 -12.69382286]
[101.93206024 2.29952741]
[101.82039642 17.29911232]
[102.04372406 32.29745102]
[102.26705170 47.29578781]
[102.49037933 62.29412460]
[103.82861328 77.23430634]
[106.27433777 92.03357697]
[110.59120178 98.84072876]
[108.64459991 107.07125854]
[110.86972046 121.90530396]
[113.09483337 136.73934937]
[115.31995392 151.57339478]
[117.54506683 166.40744019]
[119.77018738 181.24147034]
[124.80710602 195.37049866]
[132.46769714 208.26683044]
[140.12829590 221.16316223]
[147.78889465 234.05949402]
[155.44949341 246.95581055]
[163.11009216 259.85214233]
[170.18331909 265.63204956]
[170.78709412 272.99798584]
[178.25483704 286.00695801]
[185.72257996 299.01589966]
[193.19032288 312.02484131]
[201.60493469 324.44235229]
[210.91981506 336.19958496]
[220.23469543 347.95684814]
[229.54959106 359.71411133]
[238.86447144 371.47134399]
[248.17935181 383.22860718]
[257.49423218 394.98587036]
[270.26751709 387.08901978]
[283.87118530 380.72851562]
[298.12133789 375.99032593]
[312.82516479 372.93853760]
[327.78390503 371.61447144]
[342.79519653 372.03598022]
[357.65603638 374.19735718]
[372.16546631 378.06942749]
[386.12725830 383.59979248]
[399.35260010 390.71362305]
[411.66262817 399.31478882]
[422.89086914 409.28692627]
[432.88543701 420.49517822]
[441.51123047 432.78793335]
[448.65155029 445.99902344]
[454.20983887 459.94970703]
[458.11093140 474.45135498]
[460.30206299 489.30786133]
[460.75360107 504.31826782]
[459.45947266 519.27960205]
[456.43713379 533.98956299]
[451.72750854 548.24914551]
[445.39422607 561.86553955]
[437.52297974 574.65460205]
[428.22018433 586.44335938]
[417.61169434 597.07238770]
[405.84097290 606.39794922]
[393.06716919 614.29394531]
[379.46304321 620.65356445]
[365.21261597 625.39074707]
[350.50854492 628.44158936]
[335.54974365 629.76464844]
[320.53848267 629.34216309]
[305.67776489 627.17974854]
[291.16860962 623.30670166]
[277.20718384 617.77545166]
[263.98229980 610.66070557]
[251.67286682 602.05871582]
[240.44529724 592.08587646]
[230.45146179 580.87695312]
[221.82650757 568.58355713]
[214.68707275 555.37200928]
[209.12971497 541.42095947]
[205.22958374 526.91906738]
[203.03942871 512.06243896]
[202.58888245 497.05197144]
[203.88401794 482.09069824]
[206.90733337 467.38098145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 162]
[5 161]
[6 160]
[7 159]
[8 158]
[9 157]
[10 156]
[21 155]
[22 154]
[23 153]
[24 152]
[25 150]
[26 149]
[27 148]
[28 147]
[29 146]
[30 145]
[57 144]
[58 143]
[59 142]
[60 141]
[61 140]
[62 139]
[63 137]
[64 136]
[75 135]
[76 134]
[77 133]
[78 132]
[82 131]
[83 130]
[85 129]
[86 128]
[87 127]
[88 126]
[89 125]
[90 124]
[91 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
