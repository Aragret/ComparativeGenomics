%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[199.80865479 456.49932861]
[205.36070251 442.52899170]
[213.08197021 429.63021851]
[222.77246094 418.13714600]
[234.18116760 408.34747314]
[247.01257324 400.51477051]
[241.34979248 386.62475586]
[235.68699646 372.73474121]
[230.02421570 358.84469604]
[217.56513977 355.55819702]
[209.14820862 345.54632568]
[208.01783752 332.32012939]
[214.80990601 320.68902588]
[209.35455322 306.71624756]
[203.89920044 292.74343872]
[192.06295776 283.70172119]
[194.25141907 268.03259277]
[188.79606628 254.05979919]
[183.34069824 240.08700562]
[177.88534546 226.11421204]
[171.20515442 212.68383789]
[163.35339355 199.90298462]
[155.50164795 187.12214661]
[147.64988708 174.34130859]
[139.05131531 162.05046082]
[129.73643494 150.29321289]
[120.42155457 138.53596497]
[108.44558716 136.83222961]
[100.58898163 127.11329651]
[101.48770905 114.24647522]
[88.64146423 108.72691345]
[86.61766052 94.89232635]
[77.47885895 82.99768829]
[64.01132965 82.79688263]
[53.27513885 74.99017334]
[49.05802917 62.60881424]
[52.68751144 50.24530411]
[43.72681427 38.21592712]
[34.76611710 26.18654823]
[25.80542183 14.15717030]
[11.35648441 7.71211147]
[9.95846462 -7.11673927]
[0.99776816 -19.14611626]
[-7.96292782 -31.17549515]
[-16.92362404 -43.20487213]
[-31.37256050 -49.64993286]
[-32.77058029 -64.47878265]
[-41.73127747 -76.50815582]
[-50.69197464 -88.53753662]
[-56.60219193 -91.50078583]
[-59.66841125 -96.28569794]
[-59.73403549 -101.06112671]
[-68.33260345 -113.35195923]
[-67.44046783 -98.37851715]
[-72.63936615 -84.30828094]
[-83.05318451 -73.51234436]
[-96.92701721 -67.81000519]
[-111.92288208 -68.16220856]
[-125.51371002 -74.50960541]
[-135.40921021 -85.78254700]
[-139.94180298 -100.08133698]
[-138.34768677 -114.99639130]
[-130.89549255 -128.01425171]
[-118.84103394 -136.94117737]
[-104.21571350 -140.27284241]
[-89.48414612 -137.44778442]
[-77.12771606 -128.94087219]
[-83.20155334 -142.65614319]
[-89.27539062 -156.37141418]
[-95.34922028 -170.08668518]
[-109.81383514 -166.01780701]
[-124.71028900 -164.04896545]
[-139.73532104 -164.22023010]
[-154.58302307 -166.52812195]
[-168.95112610 -170.92564392]
[-182.54711914 -177.32328796]
[-195.09419250 -185.59078979]
[-206.33691406 -195.55984497]
[-216.04640198 -207.02748108]
[-224.02496338 -219.76025391]
[-230.11016846 -233.49891663]
[-234.17814636 -247.96379089]
[-236.14607239 -262.86035156]
[-235.97387695 -277.88537598]
[-233.66506958 -292.73294067]
[-229.26664734 -307.10076904]
[-222.86816406 -320.69638062]
[-214.59988403 -333.24295044]
[-204.63014221 -344.48504639]
[-193.16189575 -354.19381714]
[-180.42863464 -362.17156982]
[-166.68959045 -368.25595093]
[-152.22447205 -372.32302856]
[-137.32777405 -374.29003906]
[-122.30277252 -374.11691284]
[-107.45534515 -371.80715942]
[-93.08778381 -367.40786743]
[-79.49258423 -361.00854492]
[-66.94653320 -352.73947144]
[-55.70504761 -342.76904297]
[-45.99699020 -331.30020142]
[-38.02000427 -318.56643677]
[-31.93648911 -304.82702637]
[-27.87030220 -290.36166382]
[-25.90422440 -275.46484375]
[-26.07828140 -260.43984985]
[-28.38892937 -245.59255981]
[-32.78912735 -231.22528076]
[-39.18929291 -217.63047791]
[-47.45912552 -205.08493042]
[-57.43026352 -193.84405518]
[-68.89971161 -184.13670349]
[-81.63395691 -176.16050720]
[-75.56011963 -162.44525146]
[-69.48628998 -148.72998047]
[-63.41245270 -135.01470947]
[-56.04176331 -121.95052338]
[-47.44319916 -109.65969086]
[-38.66259384 -97.49822998]
[-29.70190048 -85.46885681]
[-20.74120331 -73.43947601]
[-6.93319559 -67.85484314]
[-4.89424610 -52.16556931]
[4.06644964 -40.13619232]
[13.02714539 -28.10681343]
[21.98784256 -16.07743454]
[35.79584885 -10.49279785]
[37.83480072 5.19647455]
[46.79549408 17.22585297]
[55.75619125 29.25522995]
[64.71688843 41.28460693]
[81.44655609 43.00418854]
[91.96331787 56.55825043]
[89.37348938 73.85888672]
[98.51229095 85.75352478]
[111.35853577 91.27308655]
[113.38233948 105.10767365]
[130.55789185 111.74711609]
[132.17880249 129.22108459]
[141.49368286 140.97833252]
[150.80857849 152.73558044]
[151.53726196 137.75329590]
[160.84297180 125.98877716]
[175.25489807 121.82991791]
[189.39776611 126.82785034]
[197.99661255 139.11848450]
[197.84429932 154.11770630]
[188.99763489 166.23118591]
[174.75619507 170.94090271]
[160.43072510 166.48954773]
[168.28248596 179.27038574]
[176.13423157 192.05123901]
[183.98599243 204.83207703]
[184.31365967 189.83566284]
[191.03829956 176.42749023]
[202.86151123 167.19647217]
[217.50041199 163.92497253]
[232.12844849 167.24467468]
[243.92118835 176.51458740]
[250.60163879 189.94483948]
[250.87989807 204.94224548]
[244.70225525 218.61106873]
[233.26148987 228.31205750]
[218.76666260 232.17210388]
[204.01649475 229.44589233]
[191.85813904 220.65884399]
[197.31350708 234.63165283]
[202.76885986 248.60444641]
[208.22421265 262.57723999]
[220.45065308 272.61840820]
[217.87199402 287.28808594]
[223.32734680 301.26089478]
[228.78271484 315.23367310]
[244.93000793 321.96301270]
[251.09318542 337.97332764]
[243.91424561 353.18191528]
[249.57702637 367.07192993]
[255.23982239 380.96197510]
[260.90258789 394.85198975]
[275.55288696 391.48074341]
[290.55426025 390.50335693]
[305.51812744 391.94515991]
[320.05688477 395.76879883]
[333.79397583 401.87524414]
[346.37356567 410.10629272]
[357.46981812 420.24874878]
[366.79528809 432.03991699]
[374.10842896 445.17437744]
[379.21981812 459.31192017]
[381.99707031 474.08633423]
[382.36825562 489.11489868]
[380.32373047 504.00839233]
[375.91647339 518.38104248]
[369.26062012 531.86047363]
[360.52859497 544.09765625]
[349.94656372 554.77551270]
[337.78866577 563.61755371]
[324.36975098 570.39465332]
[310.03747559 574.93133545]
[295.16302490 577.11004639]
[280.13168335 576.87445068]
[265.33285522 574.23052979]
[251.14979553 569.24676514]
[237.94993591 562.05236816]
[226.07514954 552.83361816]
[215.83303833 541.82928467]
[207.48889160 529.32440186]
[201.25883484 515.64294434]
[197.30426025 501.13925171]
[195.72758484 486.18899536]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 179]
[7 178]
[8 177]
[9 176]
[13 173]
[14 172]
[15 171]
[17 169]
[18 168]
[19 167]
[20 166]
[21 153]
[22 152]
[23 151]
[24 150]
[25 141]
[26 140]
[27 139]
[30 137]
[32 135]
[33 134]
[37 131]
[38 130]
[39 129]
[40 128]
[42 126]
[43 125]
[44 124]
[45 123]
[47 121]
[48 120]
[49 119]
[52 118]
[53 117]
[67 116]
[68 115]
[69 114]
[70 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
