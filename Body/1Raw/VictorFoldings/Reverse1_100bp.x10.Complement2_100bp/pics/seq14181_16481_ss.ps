%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGUCCCAACUAAGCCCUCCUAGGAUAACCACGCCCCCGAAACAUACUAAUACCCGCAACUAAUCAUCAUCAAUGACCAACUUGUAACAAACAACCACAUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[122.08014679 748.32702637]
[108.41381073 742.11987305]
[95.34954834 734.72912598]
[82.98960876 726.21270752]
[71.43072510 716.63720703]
[60.76336670 706.07763672]
[51.07101822 694.61657715]
[42.42953873 682.34375000]
[34.90655899 669.35516357]
[28.56095886 655.75256348]
[23.44239998 641.64239502]
[19.59094620 627.13500977]
[17.03673935 612.34399414]
[15.79977036 597.38513184]
[15.88971901 582.37548828]
[17.30588150 567.43249512]
[20.03717613 552.67321777]
[24.06222534 538.21301270]
[29.34952736 524.16516113]
[35.85770035 510.63958740]
[43.53580856 497.74212646]
[52.32375717 485.57376099]
[62.15277100 474.22967529]
[72.94592285 463.79870605]
[84.61873627 454.36242676]
[97.07985687 445.99475098]
[110.23175812 438.76113892]
[123.97151184 432.71820068]
[138.19157410 427.91326904]
[152.78065491 424.38391113]
[150.55552673 409.54986572]
[148.33041382 394.71582031]
[146.10530090 379.88177490]
[143.88017273 365.04772949]
[141.65505981 350.21368408]
[139.42994690 335.37963867]
[136.43516541 320.68164062]
[132.67886353 306.15957642]
[128.92256165 291.63751221]
[125.16626740 277.11544800]
[121.40996552 262.59341431]
[117.65366364 248.07135010]
[114.06619263 244.91871643]
[112.42109680 239.47897339]
[114.00859070 233.06092834]
[110.68633270 218.43347168]
[107.36407471 203.80599976]
[104.04181671 189.17854309]
[96.12223816 201.91748047]
[81.90670776 206.70480347]
[67.89436340 201.35183716]
[60.49146652 188.30587769]
[63.08251953 173.53135681]
[74.48293304 163.78298950]
[89.48058319 163.51760864]
[101.21972656 172.85809326]
[89.38847351 163.88273621]
[87.36862946 148.80378723]
[96.86302948 136.45494080]
[95.08056641 121.56121826]
[93.29809570 106.66750336]
[90.01560211 102.57614136]
[89.25907898 96.93690491]
[91.69110870 91.30466461]
[90.35287476 76.36447906]
[89.01464081 61.42429352]
[87.67640686 46.48410797]
[86.33817291 31.54392242]
[79.36619568 44.82517242]
[67.37394714 53.83549500]
[52.67693329 56.83514023]
[38.11292648 53.24492264]
[26.49400139 43.75805664]
[20.06359291 30.20631027]
[20.06331253 15.20631123]
[26.49321556 1.65432346]
[38.11178589 -7.83297539]
[52.67565918 -11.42373657]
[67.37277985 -8.42464066]
[79.36537170 0.58523470]
[86.33817291 13.86745453]
[87.67640686 -1.07273030]
[89.01464081 -16.01291466]
[90.35287476 -30.95310020]
[80.58412933 -40.22597885]
[77.97769928 -53.24200439]
[83.26541901 -65.20536804]
[94.31189728 -71.83898926]
[86.81098938 -82.33180237]
[88.41787720 -94.72541809]
[97.73025513 -102.44592285]
[99.51272583 -117.33964539]
[101.29518890 -132.23336792]
[95.25260162 -146.85517883]
[104.44747162 -158.57284546]
[106.22993469 -173.46656799]
[92.04299164 -178.53393555]
[79.33962250 -186.63159180]
[68.75701904 -197.35336304]
[60.82600403 -210.16143799]
[55.94439316 -224.41337585]
[54.35704803 -239.39428711]
[56.14358902 -254.35276794]
[61.21440125 -268.53848267]
[69.31513977 -281.23989868]
[80.03946686 -291.81991577]
[92.84946442 -299.74780273]
[107.10257721 -304.62597656]
[122.08388519 -306.20968628]
[137.04193115 -304.41952515]
[151.22640991 -299.34527588]
[163.92585754 -291.24145508]
[174.50326538 -280.51455688]
[182.42807007 -267.70263672]
[187.30278015 -253.44834900]
[188.88285828 -238.46665955]
[187.08908081 -223.50904846]
[182.01138306 -209.32579041]
[173.90449524 -196.62831116]
[163.17504883 -186.05349731]
[150.36120605 -178.13180542]
[136.10572815 -173.26054382]
[121.12365723 -171.68409729]
[119.34118652 -156.79037476]
[125.51126862 -143.23385620]
[116.18890381 -130.45089722]
[114.40644073 -115.55717468]
[112.62397003 -100.66345978]
[120.38961029 -84.92618561]
[109.23049927 -70.27846527]
[120.36933899 -57.67826843]
[118.92015839 -40.58397675]
[105.29306030 -29.61486626]
[103.95482635 -14.67468071]
[102.61659241 0.26550391]
[101.27835846 15.20568943]
[101.27835846 30.20568848]
[102.61659241 45.14587402]
[103.95482635 60.08605957]
[105.29306030 75.02624512]
[106.63129425 89.96643066]
[108.19181824 104.88503265]
[109.97428131 119.77874756]
[111.75674438 134.67247009]
[123.89706421 144.43209839]
[125.49257660 159.56184387]
[116.11344147 171.07563782]
[118.66927338 185.85629272]
[121.99153137 200.48374939]
[125.31379700 215.11120605]
[128.63604736 229.73866272]
[132.17572021 244.31504822]
[135.93202209 258.83709717]
[139.68832397 273.35916138]
[143.44462585 287.88122559]
[147.20092773 302.40328979]
[150.95722961 316.92532349]
[158.49400330 303.95626831]
[172.56069946 298.74780273]
[186.72621155 303.68118286]
[194.51425171 316.50094604]
[192.36424255 331.34606934]
[181.25912476 341.42956543]
[166.27603149 342.14135742]
[154.26399231 333.15454102]
[156.48910522 347.98855591]
[158.71421814 362.82260132]
[160.93934631 377.65664673]
[163.16445923 392.49069214]
[165.38957214 407.32473755]
[167.61468506 422.15878296]
[182.59721375 421.25238037]
[197.60122681 421.67370605]
[212.50927734 423.41943359]
[227.20469666 426.47592163]
[241.57247925 430.81924438]
[255.50016785 436.41543579]
[268.87875366 443.22064209]
[281.60354614 451.18161011]
[293.57495117 460.23608398]
[304.69924927 470.31317139]
[314.88940430 481.33398438]
[324.06564331 493.21231079]
[332.15615845 505.85513306]
[339.09762573 519.16351318]
[344.83572388 533.03332520]
[349.32556152 547.35601807]
[352.53195190 562.01947021]
[354.42984009 576.90893555]
[355.00433350 591.90783691]
[354.25097656 606.89886475]
[352.17565918 621.76458740]
[348.79461670 636.38873291]
[344.13427734 650.65686035]
[338.23117065 664.45727539]
[331.13146973 677.68194580]
[322.89074707 690.22735596]
[313.57348633 701.99536133]
[303.25262451 712.89385986]
[292.00891113 722.83758545]
[279.93038940 731.74859619]
[267.11157227 739.55731201]
[253.65275574 746.20245361]
[239.65931702 751.63208008]
[225.24075317 755.80377197]
[210.50991821 758.68475342]
[195.58210754 760.25256348]
[180.57414246 760.49493408]
[165.60350037 759.40991211]
[150.78733826 757.00598145]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 171]
[31 170]
[32 169]
[33 168]
[34 167]
[35 166]
[36 165]
[37 157]
[38 156]
[39 155]
[40 154]
[41 153]
[42 152]
[45 151]
[46 150]
[47 149]
[48 148]
[56 147]
[59 144]
[60 143]
[61 142]
[64 141]
[65 140]
[66 139]
[67 138]
[68 137]
[81 136]
[82 135]
[83 134]
[84 133]
[88 130]
[91 128]
[92 127]
[93 126]
[95 124]
[96 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
