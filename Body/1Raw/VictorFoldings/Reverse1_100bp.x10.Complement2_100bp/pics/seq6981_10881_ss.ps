%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[-29.66402435 546.94458008]
[-23.59790993 560.70355225]
[-19.94449806 575.28991699]
[-18.80890465 590.28387451]
[-20.22380447 605.25402832]
[-24.14848900 619.76971436]
[-30.47003365 633.41320801]
[-39.00655746 645.79205322]
[-49.51244736 656.55004883]
[-61.68542862 665.37768555]
[-75.17526245 672.02087402]
[-89.59381104 676.28863525]
[-104.52622986 678.05804443]
[-119.54288483 677.27819824]
[-134.21171570 673.97161865]
[-148.11067200 668.23345947]
[-160.83984375 660.22869873]
[-172.03300476 650.18768311]
[-181.36808777 638.39941406]
[-188.57652283 625.20294189]
[-193.45088196 610.97802734]
[-195.85093689 596.13391113]
[-195.70764160 581.09765625]
[-193.02511597 566.30200195]
[-187.88052368 552.17254639]
[-180.42189026 539.11590576]
[-170.86383057 527.50762939]
[-159.48133850 517.68182373]
[-146.60191345 509.92111206]
[-132.59613037 504.44882202]
[-117.86694336 501.42242432]
[-102.83815002 500.92895508]
[-87.94216919 502.98266602]
[-73.60757446 507.52438354]
[-66.72815704 494.19497681]
[-59.84874725 480.86553955]
[-52.96933365 467.53610229]
[-46.08992004 454.20666504]
[-39.21051025 440.87725830]
[-32.33109665 427.54782104]
[-25.65090179 414.11743164]
[-19.17140579 400.58911133]
[-12.89404488 386.96578979]
[-6.82021093 373.25051880]
[-0.74637717 359.53524780]
[5.32745695 345.81997681]
[10.57417488 331.76751709]
[14.97517300 317.42767334]
[19.37617111 303.08782959]
[23.77716827 288.74795532]
[28.17816734 274.40811157]
[24.51556778 259.97085571]
[35.96131516 249.04815674]
[40.36231232 234.70831299]
[44.76331329 220.36845398]
[49.16431046 206.02861023]
[34.89166641 210.64289856]
[22.30154037 202.48884583]
[20.67490005 187.57730103]
[31.21084785 176.90051270]
[46.14267349 178.32901001]
[54.46295166 190.80812073]
[59.91830826 176.83532715]
[65.37366486 162.86251831]
[64.31053925 158.20646667]
[66.16103363 152.83314514]
[71.20507812 148.55889893]
[77.07403564 134.75471497]
[74.93328857 120.01475525]
[87.45326996 110.34207916]
[84.98957062 93.74971771]
[98.50133514 83.80947876]
[104.16412354 69.91944885]
[109.82690430 56.02942276]
[115.48969269 42.13939667]
[115.83158875 33.01136780]
[121.34157562 28.08573532]
[121.81933594 18.96380806]
[127.40204620 14.12075901]
[133.47589111 0.40549269]
[137.12397766 -14.14412785]
[138.23962402 -29.10258102]
[131.55015564 -43.44000244]
[140.21264648 -55.55654907]
[133.52317810 -69.89397430]
[142.18565369 -82.01052094]
[143.30131531 -96.96897125]
[144.41696167 -111.92742920]
[142.39352417 -115.76925659]
[141.76144409 -119.66348267]
[142.36631775 -123.16627502]
[143.92552185 -125.92951965]
[146.07040405 -127.73439789]
[148.07441711 -142.59992981]
[142.25019836 -157.31008911]
[151.61851501 -168.88955688]
[153.62252808 -183.75508118]
[155.62654114 -198.62060547]
[141.64735413 -204.28041077]
[129.51539612 -213.23954773]
[119.99325562 -224.93484497]
[113.67951965 -238.63110352]
[110.97106934 -253.46737671]
[112.03816986 -268.51104736]
[116.81373596 -282.81646729]
[124.99756622 -295.48437500]
[136.07522583 -305.71844482]
[149.35037231 -312.87536621]
[163.98849487 -316.50524902]
[179.06944275 -316.37991333]
[193.64521790 -312.50723267]
[206.79957581 -305.13064575]
[217.70561218 -294.71389771]
[225.67776489 -281.91171265]
[230.21492004 -267.52890015]
[231.03182983 -252.46957397]
[228.07717896 -237.68037415]
[221.53668213 -224.09094238]
[211.82147217 -212.55552673]
[199.54228210 -203.79927063]
[185.47096252 -198.37258911]
[170.49206543 -196.61659241]
[168.48805237 -181.75106812]
[166.48403931 -166.88554382]
[172.45159912 -153.23866272]
[162.93994141 -140.59591675]
[160.93592834 -125.73038483]
[159.37541199 -110.81177521]
[158.25976562 -95.85332489]
[157.14411926 -80.89487457]
[163.91337585 -67.62738037]
[155.17109680 -54.44090271]
[161.94035339 -41.17340851]
[153.19807434 -27.98693275]
[152.08242798 -13.02847958]
[159.74520874 -25.92350197]
[170.33801270 -36.54389572]
[183.21304321 -44.24021912]
[197.58302307 -48.54183960]
[212.56918335 -49.18571091]
[227.25515747 -46.13246155]
[240.74287415 -39.56879425]
[252.20753479 -29.89608574]
[260.94808960 -17.70582199]
[266.43008423 -3.74344277]
[268.31820679 11.13724613]
[266.49710083 26.02628517]
[261.07803345 40.01320267]
[252.39244080 52.24269485]
[240.97143555 61.96692657]
[227.51341248 68.59124756]
[212.84135437 71.71058655]
[197.85243225 71.13419342]
[183.46322632 66.89731598]
[170.55368042 59.25904083]
[159.91317749 48.68644333]
[152.19239807 35.82605362]
[147.86349487 21.46427917]
[147.19114685 6.47932673]
[141.11730957 20.19459343]
[135.14575195 33.95469666]
[129.37971497 47.80218124]
[123.71693420 61.69220734]
[118.05414581 75.58223724]
[112.39135742 89.47225952]
[116.25323486 100.45985413]
[111.77629089 111.21151733]
[101.25744629 116.21104431]
[102.97840881 131.93836975]
[90.87821198 140.62367249]
[85.00925446 154.42785645]
[79.34646606 168.31788635]
[73.89110565 182.29067993]
[68.43575287 196.26347351]
[63.50415802 210.42961121]
[59.10316086 224.76945496]
[54.70215988 239.10931396]
[50.30116272 253.44915771]
[53.64897537 268.91210938]
[42.51801300 278.80911255]
[38.11701584 293.14895630]
[33.71601868 307.48880005]
[29.31501961 321.82867432]
[24.91402245 336.16851807]
[37.66719818 328.27188110]
[52.63431931 329.26446533]
[64.23302460 338.77606201]
[68.13728333 353.25903320]
[62.89089584 367.31164551]
[50.45064545 375.69256592]
[35.45643234 375.27597046]
[23.50072670 366.21722412]
[19.04272270 351.89382935]
[12.96888924 365.60906982]
[6.89505577 379.32434082]
[0.82122159 393.03961182]
[1.14454865 399.64318848]
[-1.51616669 404.66488647]
[-5.64306021 407.06860352]
[-12.12255573 420.59695435]
[-11.99598503 427.20718384]
[-14.80503559 432.14746094]
[-19.00166702 434.42724609]
[-25.88107872 447.75665283]
[-32.76049042 461.08609009]
[-39.63990402 474.41552734]
[-46.51931763 487.74493408]
[-53.39873123 501.07437134]
[-60.27814102 514.40380859]
[-48.27183533 523.45678711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 209]
[35 208]
[36 207]
[37 206]
[38 205]
[39 204]
[40 203]
[41 200]
[42 199]
[43 196]
[44 195]
[45 194]
[46 193]
[47 184]
[48 183]
[49 182]
[50 181]
[51 180]
[53 178]
[54 177]
[55 176]
[56 175]
[62 174]
[63 173]
[64 172]
[67 171]
[68 170]
[70 168]
[72 165]
[73 164]
[74 163]
[75 162]
[77 161]
[79 160]
[80 159]
[81 135]
[82 134]
[84 132]
[86 130]
[87 129]
[88 128]
[93 127]
[94 126]
[96 124]
[97 123]
[98 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
