%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[95.03036499 438.59088135]
[101.58524323 425.03628540]
[110.81536102 413.14096069]
[122.31720734 403.42492676]
[135.58798218 396.31292725]
[131.40097046 381.90914917]
[127.21395111 367.50537109]
[123.02693939 353.10159302]
[118.83992767 338.69781494]
[114.65291595 324.29403687]
[104.20634460 318.19522095]
[100.60019684 306.22943115]
[106.28988647 294.65402222]
[102.31779480 280.18951416]
[98.34569550 265.72497559]
[94.37359619 251.26046753]
[90.85084534 265.84094238]
[82.61145782 278.37539673]
[70.62339783 287.39129639]
[56.29501343 291.82946777]
[41.30958176 291.16848755]
[27.42757988 285.48605347]
[16.27985191 275.44973755]
[9.17602158 262.23852539]
[6.95063877 247.40452576]
[9.86513996 232.69039917]
[17.57713127 219.82473755]
[29.18061829 210.31900024]
[43.31243134 205.28990173]
[58.31238174 205.32826233]
[72.41828918 210.42956543]
[83.97300720 219.99452209]
[91.61965942 232.90092468]
[91.17304993 217.90757751]
[90.72644043 202.91423035]
[90.27983856 187.92088318]
[89.83322906 172.92752075]
[77.80403137 181.88845825]
[63.25988388 178.21861267]
[56.92219543 164.62326050]
[63.46287155 151.12438965]
[78.06037140 147.67286682]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[87.13761902 70.63284302]
[77.49219513 82.12048340]
[65.81629181 91.53713989]
[52.54643250 98.53076172]
[38.17871094 102.83989716]
[23.25028229 104.30343628]
[8.31925011 102.86666870]
[-6.05617428 98.58331299]
[-19.33855629 91.61349487]
[-31.03132439 82.21779633]
[-40.69733429 70.74747467]
[-47.97521973 57.63136673]
[-52.59288788 43.35981369]
[-54.37770081 28.46637917]
[-53.26293945 13.50785923]
[-49.29027176 -0.95650816]
[-42.60822678 -14.38596344]
[-33.46661377 -26.27843475]
[-22.20719910 -36.18931580]
[-9.25092220 -43.74808121]
[4.91783428 -48.67213821]
[19.76936150 -50.77739716]
[34.74842453 -49.98515701]
[49.29502106 -46.32502747]
[62.86531830 -39.93385315]
[74.95197296 -31.05056953]
[85.10312653 -20.00728226]
[92.93925476 -7.21685791]
[98.16741943 6.84252787]
[100.59214783 21.64525414]
[100.12357330 36.63185883]
[107.20067596 23.40633011]
[114.27778625 10.18080330]
[121.35488892 -3.04472446]
[127.22385406 -16.84890175]
[131.83786011 -31.12163544]
[128.72064209 -46.63271332]
[139.99771118 -56.36291122]
[144.61172485 -70.63564301]
[149.22573853 -84.90837860]
[153.83975220 -99.18111420]
[158.45375061 -113.45384216]
[163.06776428 -127.72657776]
[167.68177795 -141.99931335]
[154.16700745 -148.56416321]
[141.69746399 -156.94609070]
[130.51586914 -166.98191833]
[120.83985901 -178.47630310]
[112.85778809 -191.20552063]
[106.72503662 -204.92176819]
[102.56098175 -219.35806274]
[100.44666290 -234.23341370]
[100.42325592 -249.25823975]
[102.49119568 -264.14010620]
[106.61024475 -278.58929443]
[112.70021820 -292.32461548]
[120.64257050 -305.07861328]
[130.28271484 -316.60311890]
[141.43298340 -326.67373657]
[153.87634277 -335.09448242]
[167.37057495 -341.70144653]
[181.65301514 -346.36596680]
[196.44566345 -348.99731445]
[211.46055603 -349.54421997]
[226.40542603 -347.99606323]
[240.98937988 -344.38296509]
[254.92854309 -338.77526855]
[267.95153809 -331.28210449]
[279.80493164 -322.04937744]
[290.25796509 -311.25677490]
[299.10714722 -299.11437988]
[306.18026733 -285.85852051]
[311.33959961 -271.74728394]
[314.48477173 -257.05529785]
[315.55450439 -242.06858826]
[314.52801514 -227.07884216]
[311.42526245 -212.37785339]
[306.30664062 -198.25178528]
[299.27182007 -184.97558594]
[290.45770264 -172.80770874]
[280.03585815 -161.98498535]
[268.20916748 -152.71807861]
[255.20780945 -145.18739319]
[241.28489685 -139.53950500]
[226.71144104 -135.88435364]
[211.77108765 -134.29307556]
[196.75468445 -134.79666138]
[181.95451355 -137.38529968]
[177.34049988 -123.11257172]
[172.72648621 -108.83983612]
[168.11247253 -94.56710052]
[163.49847412 -80.29436493]
[158.88446045 -66.02163696]
[154.27044678 -51.74890137]
[157.71769714 -37.25870514]
[146.11059570 -26.50762558]
[141.49658203 -12.23489189]
[153.10922241 -21.72945595]
[167.67083740 -25.32932472]
[182.36984253 -22.33942223]
[194.36805725 -13.33705044]
[201.34883118 -0.06042552]
[201.96429443 14.92694283]
[196.09558105 28.73122978]
[184.87588501 38.68704224]
[170.47152710 42.87207031]
[155.66377258 40.47824860]
[143.31176758 31.96779060]
[135.80047607 18.98392868]
[134.58041382 4.03238106]
[127.50331116 17.25790787]
[120.42620850 30.48343658]
[113.34909821 43.70896530]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[104.82658386 172.48092651]
[105.27318573 187.47427368]
[105.71979523 202.46762085]
[106.16639709 217.46096802]
[106.61300659 232.45431519]
[108.83811951 247.28836060]
[112.81021881 261.75289917]
[116.78231812 276.21740723]
[120.75440979 290.68194580]
[134.15248108 303.31417847]
[129.05670166 320.10702515]
[133.24371338 334.51080322]
[137.43072510 348.91458130]
[141.61773682 363.31835938]
[145.80474854 377.72213745]
[149.99176025 392.12591553]
[165.00709534 391.01547241]
[179.92515564 393.05154419]
[194.09373474 398.14514160]
[206.89349365 406.07357788]
[217.76484680 416.49026489]
[226.23257446 428.93981934]
[231.92646790 442.87799072]
[234.59765625 457.69549561]
[234.12933350 472.74456787]
[230.54197693 487.36730957]
[223.99243164 500.92449951]
[214.76699829 512.82342529]
[203.26896667 522.54400635]
[190.00100708 529.66119385]
[175.54310608 533.86395264]
[160.52732849 534.96850586]
[145.61007690 532.92657471]
[131.44349670 527.82739258]
[118.64686584 519.89392090]
[107.77960205 509.47296143]
[99.31678772 497.02008057]
[93.62836456 483.07965088]
[90.96302032 468.26107788]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 187]
[6 186]
[7 185]
[8 184]
[9 183]
[10 182]
[13 180]
[14 179]
[15 178]
[16 177]
[33 176]
[34 175]
[35 174]
[36 173]
[37 172]
[43 171]
[44 170]
[45 169]
[46 168]
[48 166]
[49 165]
[50 164]
[81 163]
[82 162]
[83 161]
[84 160]
[85 147]
[86 146]
[88 144]
[89 143]
[90 142]
[91 141]
[92 140]
[93 139]
[94 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
