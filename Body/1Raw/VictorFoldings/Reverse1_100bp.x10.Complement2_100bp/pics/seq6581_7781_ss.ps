%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[165.39984131 609.30328369]
[151.73156738 602.96875000]
[139.81587219 593.75115967]
[130.25042725 582.11285400]
[123.51502991 568.63763428]
[119.94754791 554.00134277]
[119.72690582 538.93817139]
[122.86417389 524.20367432]
[129.20199585 510.53695679]
[138.42245483 498.62347412]
[150.06306458 489.06085205]
[163.53994751 482.32873535]
[178.17709351 478.76477051]
[177.95376587 463.76644897]
[177.73043823 448.76809692]
[177.50711060 433.76977539]
[177.28378296 418.77142334]
[177.06045532 403.77310181]
[174.83534241 388.93905640]
[170.64833069 374.53527832]
[166.46131897 360.13150024]
[162.27430725 345.72772217]
[151.29193115 335.66607666]
[154.86959839 320.25466919]
[144.42301941 314.15585327]
[140.81686401 302.19009399]
[146.50656128 290.61468506]
[142.53446960 276.15014648]
[138.56236267 261.68563843]
[125.53060150 254.56463623]
[121.29627228 239.95213318]
[128.85379028 226.33149719]
[124.88169098 211.86697388]
[120.80202484 197.43241882]
[116.61501312 183.02864075]
[112.42800140 168.62486267]
[108.24098969 154.22106934]
[104.05397797 139.81729126]
[99.75985718 125.44507599]
[95.35885620 111.10523224]
[92.27177429 125.78412628]
[84.40924072 138.55833435]
[72.69493866 147.92716980]
[58.50504303 152.78997803]
[43.50657654 152.57548523]
[29.46154213 147.30889893]
[18.01993752 137.60891724]
[10.52590847 124.61508942]
[7.85984898 109.85391998]
[10.33496284 95.05953217]
[17.66047859 81.96996307]
[28.97579765 72.12295532]
[42.95161057 66.67533112]
[57.94605637 66.26706696]
[72.19759369 70.94612885]
[84.03197479 80.16282654]
[92.05950165 92.83583069]
[91.16668701 77.86242676]
[90.27387238 62.88902283]
[81.72888947 49.57384872]
[88.69493103 36.40860748]
[87.80211639 21.43520355]
[79.25713348 8.12003040]
[86.22317505 -5.04520941]
[85.33035278 -20.01861572]
[84.43753815 -34.99201965]
[81.91897583 -38.52907944]
[80.77228546 -42.30394745]
[80.90377045 -45.85614777]
[82.07981110 -48.80292892]
[83.96434021 -50.87818527]
[76.22704315 -64.67835999]
[83.96434021 -77.40563202]
[83.96434021 -92.40563202]
[83.96434021 -107.40563202]
[74.38965607 -123.13480377]
[83.75038147 -137.97879028]
[83.52705383 -152.97712708]
[83.30372620 -167.97546387]
[83.08039856 -182.97380066]
[82.74542236 -197.97006226]
[82.29881287 -212.96340942]
[74.15406036 -226.52708435]
[81.50899506 -239.47909546]
[81.06238556 -254.47244263]
[80.61578369 -269.46578979]
[65.71840668 -271.49511719]
[51.35827637 -275.94891357]
[37.92713547 -282.70571899]
[25.79140472 -291.58117676]
[15.28215027 -302.33319092]
[6.68607426 -314.66839600]
[0.23768374 -328.25027466]
[-3.88710451 -342.70837402]
[-5.57576323 -357.64819336]
[-4.78222513 -372.66220093]
[-1.52813768 -387.34075928]
[4.09772491 -401.28350830]
[11.94188499 -414.10998535]
[21.79034805 -425.47033691]
[33.37443924 -435.05462646]
[46.37813950 -442.60140991]
[60.44669724 -447.90475464]
[75.19631195 -450.82000732]
[90.22460175 -451.26766968]
[105.12158203 -449.23547363]
[119.48085785 -444.77890015]
[132.91069031 -438.01950073]
[145.04470825 -429.14172363]
[155.55189514 -418.38769531]
[164.14559937 -406.05084229]
[170.59136963 -392.46768188]
[174.71337891 -378.00881958]
[176.39915466 -363.06866455]
[175.60272217 -348.05480957]
[172.34580994 -333.37686157]
[166.71725464 -319.43521118]
[158.87063599 -306.61022949]
[149.01997375 -295.25177002]
[137.43403625 -285.66970825]
[124.42888641 -278.12545776]
[110.35930634 -272.82482910]
[95.60913086 -269.91238403]
[96.05574036 -254.91905212]
[96.50234222 -239.92568970]
[104.61515045 -227.43443298]
[97.29216766 -213.41001892]
[97.73876953 -198.41665649]
[101.08002472 -191.82440186]
[98.07873535 -183.19712830]
[98.30206299 -168.19879150]
[98.52539062 -153.20045471]
[98.74871826 -138.20211792]
[107.20735931 -129.55468750]
[107.51616669 -117.06114960]
[98.96434021 -107.40563202]
[98.96434021 -92.40563202]
[98.96434021 -77.40563202]
[106.70163727 -64.67835999]
[98.96434021 -50.87818527]
[99.41094971 -35.88483810]
[100.30376434 -20.91143036]
[101.19657898 -5.93802500]
[109.67770386 6.30614948]
[102.77552032 20.54238701]
[103.66833496 35.51579285]
[112.14945984 47.75996780]
[105.24727631 61.99620438]
[106.14009094 76.96961212]
[107.03290558 91.94301605]
[109.69870758 106.70423126]
[114.09970093 121.04408264]
[119.60923767 128.32987976]
[118.45776367 135.63027954]
[122.64477539 150.03405762]
[126.83178711 164.43785095]
[131.01879883 178.84162903]
[135.20581055 193.24540710]
[140.60626221 200.61242676]
[139.34622192 207.89488220]
[143.31831360 222.35940552]
[156.77206421 230.21014404]
[160.59428406 244.93580627]
[153.02688599 257.71353149]
[156.99899292 272.17807007]
[160.97108459 286.64257812]
[174.36915588 299.27481079]
[169.27337646 316.06765747]
[180.55523682 327.15957642]
[176.67808533 341.54071045]
[180.86509705 355.94448853]
[185.05210876 370.34826660]
[189.23912048 384.75204468]
[192.26286316 370.05996704]
[199.62402344 356.99041748]
[210.62094116 346.78906250]
[224.20550537 340.42825317]
[239.08288574 338.51425171]
[253.83508301 341.22952271]
[267.05603027 348.31521606]
[277.48553467 359.09597778]
[284.12957764 372.54428101]
[286.35485840 387.37829590]
[283.94931030 402.18414307]
[277.14218140 415.55062866]
[266.58230591 426.20373535]
[253.27616882 433.12811279]
[238.49203491 435.66372681]
[223.63902283 433.56890869]
[210.13284302 427.04333496]
[199.26080322 416.70898438]
[192.05879211 403.54977417]
[192.28211975 418.54809570]
[192.50544739 433.54644775]
[192.72877502 448.54476929]
[192.95210266 463.54312134]
[193.17543030 478.54144287]
[207.91220093 481.66802979]
[221.58354187 487.99591064]
[233.50372314 497.20770264]
[243.07479858 508.84136963]
[249.81671143 522.31335449]
[253.39129639 536.94787598]
[253.61924744 552.01092529]
[250.48910522 566.74694824]
[244.15791321 580.41674805]
[234.94322205 592.33471680]
[223.30725098 601.90295410]
[209.83363342 608.64166260]
[195.19821167 612.21264648]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 197]
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[19 173]
[20 172]
[21 171]
[22 170]
[24 168]
[27 166]
[28 165]
[29 164]
[32 161]
[33 160]
[34 158]
[35 157]
[36 156]
[37 155]
[38 154]
[39 152]
[40 151]
[57 150]
[58 149]
[59 148]
[61 146]
[62 145]
[64 143]
[65 142]
[66 141]
[71 140]
[73 138]
[74 137]
[75 136]
[77 133]
[78 132]
[79 131]
[80 130]
[81 128]
[82 127]
[84 125]
[85 124]
[86 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
