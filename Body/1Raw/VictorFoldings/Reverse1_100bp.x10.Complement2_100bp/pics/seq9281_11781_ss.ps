%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[71.78449249 469.67608643]
[64.57138824 482.90740967]
[54.50091934 494.11822510]
[42.11616135 502.70394897]
[28.08501244 508.20153809]
[13.16415691 510.31454468]
[-1.84174228 508.92901611]
[-16.12343597 504.11965942]
[-28.91073227 496.14584351]
[-39.51402664 485.43759155]
[-47.36149597 472.57235718]
[-52.02994156 458.24398804]
[-53.26759338 443.22515869]
[-51.00770569 428.32583618]
[-45.37215805 414.34954834]
[-36.66486740 402.04995728]
[-25.35540009 392.09039307]
[-12.05366802 385.00796509]
[2.52298522 381.18463135]
[17.58845901 380.82656860]
[20.69256973 366.15127563]
[23.79668045 351.47598267]
[26.90078926 336.80065918]
[30.00489998 322.12536621]
[25.06887436 308.07244873]
[35.49450684 296.17214966]
[29.16120911 285.86602783]
[31.62719154 273.61441040]
[42.10516739 266.09277344]
[45.42742538 251.46531677]
[48.74968338 236.83786011]
[47.16572189 229.61892700]
[52.23183060 222.01811218]
[50.55618286 217.54583740]
[51.67220306 211.97344971]
[56.09998322 207.06362915]
[60.07207870 192.59910583]
[64.04417419 178.13458252]
[68.01627350 163.67005920]
[55.02325058 171.16549683]
[40.23069000 168.67950439]
[30.40154839 157.34866333]
[30.02957726 142.35327148]
[39.28483582 130.54902649]
[53.93594742 127.33267212]
[67.28461456 134.17466736]
[73.22813416 147.94880676]
[78.68348694 133.97601318]
[84.13884735 120.00321960]
[89.59420013 106.03041840]
[94.84091949 91.97795105]
[99.87783813 77.84892273]
[104.91475677 63.71989059]
[109.95166779 49.59086227]
[97.55996704 40.99546432]
[87.82305145 29.49424744]
[81.40007782 15.87509441]
[78.72344971 1.06893694]
[79.96970367 -13.91387081]
[85.04790497 -28.05249977]
[93.60623932 -40.38519669]
[105.05638123 -50.07471085]
[118.61392975 -56.46511841]
[133.35215759 -59.12624741]
[148.26533508 -57.88260651]
[153.30224609 -72.01163483]
[158.33915710 -86.14066315]
[163.37608337 -100.26969147]
[168.41299438 -114.39871979]
[163.19087219 -123.94011688]
[164.06398010 -134.56169128]
[170.50343323 -142.77642822]
[180.19294739 -146.02082825]
[185.64831543 -159.99362183]
[191.10366821 -173.96641541]
[196.55902100 -187.93920898]
[194.37057495 -203.60833740]
[206.20680237 -212.65005493]
[200.10733032 -226.98303223]
[205.83888245 -241.07571411]
[219.54077148 -246.80230713]
[224.99612427 -260.77511597]
[230.45147705 -274.74789429]
[235.90682983 -288.72070312]
[227.64366150 -305.76870728]
[234.35055542 -323.14483643]
[251.33230591 -329.98123169]
[248.67829895 -345.57824707]
[260.24008179 -354.96835327]
[265.27697754 -369.09738159]
[270.31390381 -383.22640991]
[275.35083008 -397.35543823]
[261.93008423 -404.09811401]
[249.43971252 -412.43899536]
[238.06903076 -422.25158691]
[227.99041748 -433.38717651]
[219.35665894 -445.67691040]
[212.29866028 -458.93450928]
[206.92338562 -472.95901489]
[203.31236267 -487.53775024]
[201.52030945 -502.44976807]
[201.57438660 -517.46899414]
[203.47380066 -532.36767578]
[207.18972778 -546.92004395]
[212.66586304 -560.90545654]
[219.81916809 -574.11193848]
[228.54121399 -586.33917236]
[238.69976807 -597.40185547]
[250.14082336 -607.13232422]
[262.69094849 -615.38299561]
[276.15988159 -622.02886963]
[290.34347534 -626.96911621]
[305.02664185 -630.12884521]
[319.98681641 -631.46026611]
[334.99722290 -630.94305420]
[349.83029175 -628.58514404]
[364.26113892 -624.42224121]
[378.07104492 -618.51751709]
[391.05062866 -610.96038818]
[403.00311279 -601.86541748]
[413.74731445 -591.37060547]
[423.12033081 -579.63494873]
[430.98010254 -566.83636475]
[437.20748901 -553.16888428]
[441.70803833 -538.83972168]
[444.41354370 -524.06610107]
[445.28298950 -509.07199097]
[444.30319214 -494.08468628]
[441.48901367 -479.33135986]
[436.88311768 -465.03573608]
[430.55532837 -451.41445923]
[422.60156250 -438.67410278]
[413.14239502 -427.00775146]
[402.32122803 -416.59225464]
[390.30212402 -407.58557129]
[377.26727295 -400.12417603]
[363.41427612 -394.32122803]
[348.95315552 -390.26464844]
[334.10314941 -388.01599121]
[319.08935547 -387.60931396]
[304.13937378 -389.05075073]
[289.47985840 -392.31854248]
[284.44293213 -378.18951416]
[279.40603638 -364.06045532]
[274.36911011 -349.93142700]
[277.38339233 -335.34503174]
[265.46133423 -324.94430542]
[272.46926880 -315.94125366]
[274.27966309 -304.55535889]
[270.32852173 -293.59713745]
[261.48861694 -285.82818604]
[249.87963867 -283.26535034]
[244.42427063 -269.29254150]
[238.96891785 -255.31974792]
[233.51356506 -241.34695435]
[239.71057129 -227.85130310]
[234.37710571 -213.60317993]
[220.17959595 -207.19470215]
[222.75827026 -192.52500916]
[210.53182983 -182.48385620]
[205.07646179 -168.51106262]
[199.62110901 -154.53826904]
[194.16575623 -140.56546021]
[198.47196960 -121.71491241]
[182.54202271 -109.36180878]
[177.50511169 -95.23278046]
[172.46818542 -81.10374451]
[167.43127441 -66.97471619]
[162.39436340 -52.84568787]
[174.73109436 -44.37489700]
[184.46220398 -32.99059296]
[190.91978455 -19.46490860]
[193.65821838 -4.71725321]
[192.48493958 10.24817181]
[187.47392273 24.41075325]
[178.96110535 36.80307388]
[167.52182007 46.57699203]
[153.93194580 53.06167984]
[139.11526489 55.80968475]
[124.08069611 54.62777710]
[119.04378510 68.75680542]
[114.00686646 82.88583374]
[108.96994781 97.01486206]
[110.08689117 102.13993835]
[108.25283813 107.52599335]
[103.56700134 111.48577881]
[98.11164093 125.45857239]
[92.65628815 139.43136597]
[87.20092773 153.40417480]
[82.48079681 167.64216614]
[78.50869751 182.10668945]
[74.53660583 196.57121277]
[70.56450653 211.03573608]
[66.80820465 225.55778503]
[63.37714386 240.16011047]
[60.05488586 254.78756714]
[56.73262787 269.41503906]
[62.58575439 286.87420654]
[50.16981125 299.27627563]
[54.88380814 314.37887573]
[44.68020248 325.22949219]
[41.57609177 339.90478516]
[38.47198105 354.58007812]
[35.36787033 369.25540161]
[32.26376343 383.93069458]
[45.89390564 390.35842896]
[57.67393112 399.75671387]
[66.96855927 411.61871338]
[73.27653503 425.30468750]
[76.25768280 440.07659912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[26 199]
[29 197]
[30 196]
[31 195]
[33 194]
[36 193]
[37 192]
[38 191]
[39 190]
[47 189]
[48 188]
[49 187]
[50 186]
[51 183]
[52 182]
[53 181]
[54 180]
[65 169]
[66 168]
[67 167]
[68 166]
[69 165]
[73 163]
[74 162]
[75 161]
[76 160]
[78 158]
[81 155]
[82 154]
[83 153]
[84 152]
[87 147]
[89 145]
[90 144]
[91 143]
[92 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
