%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[64.57106781 622.10504150]
[50.29929733 617.29559326]
[37.39531326 609.53021240]
[26.46265984 599.17205811]
[18.01267433 586.70562744]
[12.44057751 572.71398926]
[10.00698853 557.85156250]
[10.82572937 542.81347656]
[14.85850716 528.30310059]
[21.91670036 514.99914551]
[31.67018509 503.52380371]
[43.66277313 494.41381836]
[57.33354950 488.09527588]
[72.04310608 484.86370850]
[72.04310608 469.86370850]
[72.04310608 454.86370850]
[70.15857697 452.78845215]
[68.98253632 449.84167480]
[68.85105133 446.28945923]
[69.99774170 442.51458740]
[72.51630402 438.97753906]
[73.40912628 424.00411987]
[74.30194092 409.03073120]
[75.19475555 394.05731201]
[67.40270996 384.80471802]
[68.02398682 372.32281494]
[77.27026367 363.33010864]
[78.38591766 348.37164307]
[79.50156403 333.41320801]
[76.86425781 326.50912476]
[80.74680328 318.24087524]
[82.08503723 303.30068970]
[83.42327118 288.36050415]
[84.76151276 273.42031860]
[85.76576996 258.45397949]
[86.43555450 243.46893311]
[87.10533905 228.48390198]
[87.77512360 213.49885559]
[88.44490814 198.51382446]
[89.11469269 183.52877808]
[89.78447723 168.54374695]
[90.45426178 153.55870056]
[91.12405396 138.57366943]
[91.68225861 123.58406067]
[92.12886810 108.59070587]
[83.62806702 120.94936371]
[70.65008545 128.47079468]
[55.70075607 129.70272827]
[41.66656876 124.40728760]
[31.25730705 113.60695648]
[26.48283005 99.38710022]
[28.26501656 84.49334717]
[36.25975800 71.80145264]
[48.92338943 63.76202393]
[63.81076431 61.92734528]
[78.04736328 66.65166473]
[88.88432312 77.02279663]
[94.22937775 91.03948975]
[97.33348846 76.36418152]
[100.43759918 61.68888474]
[103.54170990 47.01358032]
[101.92208099 42.05133438]
[102.32730865 37.42650223]
[104.28979492 33.85387421]
[107.12601471 31.75906754]
[110.88231659 17.23700905]
[114.63861847 2.71494889]
[118.39492035 -11.80710983]
[122.15121460 -26.32917023]
[123.93368530 -41.22288513]
[123.71035767 -56.22122574]
[123.37538147 -71.21748352]
[122.92877197 -86.21083069]
[122.48217010 -101.20418549]
[122.03556061 -116.19753265]
[121.58895874 -131.19088745]
[121.03074646 -146.18049622]
[120.36096191 -161.16552734]
[118.24633789 -176.01573181]
[114.70666504 -190.59210205]
[111.16699219 -205.16848755]
[107.62731934 -219.74485779]
[92.59124756 -219.11027527]
[77.72032928 -221.42156982]
[63.58617401 -226.58993530]
[50.73205566 -234.41667175]
[39.65205002 -244.60095215]
[30.77204704 -256.75134277]
[24.43337059 -270.40078735]
[20.87965965 -285.02465820]
[20.24751091 -300.06082153]
[22.56122208 -314.93136597]
[27.73185921 -329.06469727]
[35.56068039 -341.91754150]
[45.74676132 -352.99588013]
[57.89858246 -361.87393188]
[71.54905701 -368.21038818]
[86.17349243 -371.76174927]
[101.20977020 -372.39144897]
[116.07993317 -370.07534790]
[130.21241760 -364.90240479]
[143.06401062 -357.07150269]
[154.14071655 -346.88363647]
[163.01678467 -334.73037720]
[169.35104370 -321.07888794]
[172.90000916 -306.45385742]
[173.52729797 -291.41748047]
[171.20877075 -276.54769897]
[166.03355408 -262.41604614]
[158.20057678 -249.56573486]
[148.01091003 -238.49067688]
[135.85621643 -229.61657715]
[122.20369720 -223.28453064]
[125.74337006 -208.70814514]
[129.28303528 -194.13177490]
[132.82270813 -179.55540466]
[137.43737793 -193.82792664]
[147.39746094 -205.04383850]
[161.02452087 -211.31306458]
[176.02215576 -211.57911682]
[189.86300659 -205.79718018]
[200.21464539 -194.94160461]
[205.33264160 -180.84173584]
[204.35450745 -165.87367249]
[197.44509888 -152.55976868]
[185.76875305 -143.14366150]
[171.29315186 -139.21214294]
[156.45767212 -141.42771912]
[143.76237488 -149.41705322]
[135.34599304 -161.83531189]
[136.01577759 -146.85028076]
[139.45481873 -140.30850220]
[136.58230591 -131.63748169]
[137.02891541 -116.64414215]
[137.47552490 -101.65078735]
[137.92211914 -86.65744019]
[138.36872864 -71.66409302]
[141.70999146 -65.07183838]
[138.70869446 -56.44455338]
[138.93202209 -41.44621277]
[145.73838806 -54.81309509]
[156.29765320 -65.46681976]
[169.60339355 -72.39193726]
[184.38739014 -74.92839813]
[199.24050903 -72.83443451]
[212.74705505 -66.30963898]
[223.61968994 -55.97590637]
[230.82208252 -42.81818390]
[233.66773987 -28.09058380]
[231.88545227 -13.19684696]
[225.64508057 0.44345352]
[215.54142761 11.53020859]
[202.53749084 19.00670052]
[187.87275696 22.16031837]
[172.94494629 20.69047737]
[159.17687988 14.73727417]
[147.88085938 4.86813116]
[140.13354492 -7.97628880]
[136.67327881 -22.57286835]
[132.91697693 -8.05080986]
[129.16067505 6.47124958]
[125.40437317 20.99330902]
[121.64807129 35.51536942]
[118.21701050 50.11769104]
[115.11289978 64.79299164]
[112.00879669 79.46829224]
[108.90468597 94.14360046]
[107.12221527 109.03731537]
[106.67561340 124.03066254]
[109.54812622 132.70167542]
[106.10909271 139.24345398]
[105.43930054 154.22850037]
[104.76951599 169.21353149]
[104.09973145 184.19857788]
[103.42994690 199.18360901]
[102.76016235 214.16865540]
[102.09037781 229.15368652]
[101.42059326 244.13873291]
[100.75080872 259.12377930]
[103.15785217 263.75552368]
[103.51212311 268.38455200]
[102.15840149 272.22933960]
[99.70169067 274.75854492]
[98.36345673 289.69873047]
[97.02522278 304.63891602]
[95.68698883 319.57910156]
[94.46001434 334.52883911]
[93.34436798 349.48730469]
[92.22872162 364.44573975]
[100.60700226 380.84350586]
[90.16815948 394.95013428]
[89.27534485 409.92355347]
[88.38253021 424.89694214]
[87.48971558 439.87036133]
[87.04310608 454.86370850]
[87.04310608 469.86370850]
[87.04310608 484.86370850]
[101.75266266 488.09527588]
[115.42343903 494.41381836]
[127.41603088 503.52380371]
[137.16950989 514.99914551]
[144.22770691 528.30310059]
[148.26048279 542.81347656]
[149.07922363 557.85156250]
[146.64562988 572.71398926]
[141.07353210 586.70562744]
[132.62355042 599.17205811]
[121.69089508 609.53021240]
[108.78691101 617.29559326]
[94.51514435 622.10504150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 197]
[15 196]
[16 195]
[21 194]
[22 193]
[23 192]
[24 191]
[27 189]
[28 188]
[29 187]
[31 186]
[32 185]
[33 184]
[34 183]
[35 179]
[36 178]
[37 177]
[38 176]
[39 175]
[40 174]
[41 173]
[42 172]
[43 171]
[44 169]
[45 168]
[58 167]
[59 166]
[60 165]
[61 164]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
[70 140]
[71 139]
[72 137]
[73 136]
[74 135]
[75 134]
[76 133]
[77 131]
[78 130]
[79 116]
[80 115]
[81 114]
[82 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
