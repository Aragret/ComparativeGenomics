%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[63.75131989 437.70144653]
[63.25560760 452.78976440]
[58.70640564 467.18444824]
[50.44129181 479.81738281]
[39.07359314 489.75103760]
[25.44686890 496.24835205]
[10.57231140 498.82714844]
[-4.44628763 497.29605103]
[-18.49444771 491.76867676]
[-30.52970505 482.65521240]
[-39.65895844 470.63192749]
[-45.20476151 456.59103394]
[-46.75557709 441.57446289]
[-44.19632339 426.69653320]
[-37.71691895 413.06127930]
[-27.79817009 401.68057251]
[-15.17611980 393.39886475]
[-0.78740698 388.83078003]
[14.30023098 388.31524658]
[17.83990288 373.73889160]
[21.37957573 359.16250610]
[15.53903580 342.61392212]
[28.35968590 329.39605713]
[31.68194580 314.76858521]
[34.89521790 300.11679077]
[37.99932861 285.44149780]
[41.10343933 270.76620483]
[44.20755005 256.09091187]
[35.89302826 243.78625488]
[38.83198166 228.85919189]
[51.79460144 220.22158813]
[54.89871216 205.54627991]
[58.00282288 190.87097168]
[47.16440201 201.24058533]
[32.77424240 205.47416687]
[18.04713631 202.62594604]
[6.27316189 193.33219910]
[0.08265360 179.66920471]
[0.85858679 164.68928528]
[8.42761612 151.73899841]
[21.09880066 143.71148682]
[36.04136658 142.40008545]
[49.91710281 148.09779358]
[59.62614059 159.53172302]
[62.99945068 174.14752197]
[68.45481110 160.17471313]
[73.91016388 146.20191956]
[79.36552429 132.22912598]
[84.82087708 118.25632477]
[90.27623749 104.28353119]
[94.78386688 89.97684479]
[98.32353973 75.40046692]
[101.86321259 60.82409286]
[105.40288544 46.24771500]
[108.94255829 31.67134094]
[112.48223114 17.09496498]
[102.54540253 28.33149147]
[89.65467072 36.00150299]
[75.03870392 39.37394714]
[60.09058762 38.12738037]
[46.23509216 32.38061905]
[34.79283524 22.68140602]
[26.85441399 9.95421219]
[23.17647171 -4.58789062]
[24.10956573 -19.55883980]
[29.56475830 -33.53170013]
[39.02209854 -45.17467117]
[51.58016968 -53.37801361]
[66.04201508 -57.35984039]
[81.02922821 -56.74063110]
[95.11332703 -51.57939911]
[106.95189667 -42.36808395]
[115.41655731 -29.98464966]
[119.70052338 -15.60940456]
[119.39526367 -0.61138946]
[126.66849518 -13.73008347]
[133.94172668 -26.84877777]
[133.86628723 -42.66980362]
[146.80439758 -50.04914093]
[154.07763672 -63.16783142]
[161.35086060 -76.28652954]
[168.62409973 -89.40522003]
[175.50350952 -102.73464966]
[181.98300171 -116.26299286]
[188.46249390 -129.79133606]
[178.18916321 -142.40849304]
[174.45989990 -158.18620300]
[177.97192383 -173.95408630]
[187.97259521 -186.56639099]
[202.41998291 -193.52964783]
[218.39962769 -193.49549866]
[224.67700195 -207.11882019]
[230.95436096 -220.74214172]
[237.23171997 -234.36544800]
[243.50907898 -247.98876953]
[247.26538086 -262.51083374]
[248.38102722 -277.46926880]
[249.49667358 -292.42773438]
[235.41792297 -297.93048096]
[223.58766174 -307.33987427]
[215.05781555 -319.81918335]
[210.58686829 -334.25875854]
[210.57234192 -349.37469482]
[215.01556396 -363.82284546]
[223.52142334 -376.31851196]
[235.33360291 -385.75057983]
[249.40176392 -391.28036499]
[264.47494507 -392.41616821]
[279.21292114 -389.05694580]
[292.30511475 -381.50146484]
[302.58743286 -370.42150879]
[309.14556885 -356.80233765]
[311.39639282 -341.85491943]
[309.13970947 -326.90838623]
[302.57623291 -313.29177856]
[292.28958130 -302.21585083]
[279.19439697 -294.66549683]
[264.45513916 -291.31207275]
[263.33947754 -276.35363770]
[262.22384644 -261.39517212]
[269.86083984 -274.30548096]
[280.33035278 -285.04742432]
[293.04025269 -293.01348877]
[307.27175903 -297.75317383]
[322.22000122 -298.99841309]
[337.03955078 -296.67877197]
[350.89230347 -290.92544556]
[362.99487305 -282.06381226]
[372.66271973 -270.59506226]
[379.34915161 -257.16778564]
[382.67596436 -242.54136658]
[382.45504761 -227.54298401]
[378.69885254 -213.02090454]
[371.61987305 -199.79638672]
[361.61840820 -188.61735535]
[349.26010132 -180.11604309]
[335.24386597 -174.77323914]
[320.36242676 -172.89109802]
[305.45736694 -174.57606506]
[291.37164307 -179.73284912]
[278.90188599 -188.06982422]
[268.75329590 -199.11546326]
[261.49984741 -212.24511719]
[257.55175781 -226.71620178]
[257.13238525 -241.71141052]
[250.85502625 -228.08808899]
[244.57766724 -214.46476746]
[238.30030823 -200.84146118]
[232.02294922 -187.21813965]
[241.37161255 -176.96772766]
[246.12229919 -163.88711548]
[245.52674866 -149.93989563]
[239.64189148 -137.23324585]
[229.32623291 -127.69947815]
[216.11482239 -122.80223083]
[201.99084473 -123.31184387]
[195.51135254 -109.78350067]
[189.03184509 -96.25515747]
[189.83505249 -93.56945038]
[189.62280273 -90.40376282]
[188.20695496 -87.14327240]
[185.54214478 -84.23409271]
[181.74278259 -82.13198853]
[174.46955872 -69.01329803]
[167.19633484 -55.89460373]
[159.92309570 -42.77590942]
[160.51875305 -27.89321899]
[147.06042480 -19.57554817]
[139.78718567 -6.45685387]
[132.51396179 6.66183996]
[127.05860138 20.63463783]
[123.51892853 35.21101379]
[119.97925568 49.78738785]
[116.43958282 64.36376190]
[112.89990997 78.94013977]
[109.36023712 93.51651764]
[121.18767548 84.29090881]
[136.11520386 82.81823730]
[149.51737976 89.55483246]
[157.24139404 102.41327667]
[156.89385986 117.40924835]
[148.58248901 129.89608765]
[134.88262939 136.00459290]
[120.03934479 133.84199524]
[108.65197754 124.07839203]
[104.24903107 109.73888397]
[98.79367828 123.71168518]
[93.33831787 137.68447876]
[87.88296509 151.65727234]
[82.42760468 165.63008118]
[76.97225189 179.60287476]
[72.67812347 193.97508240]
[69.57401276 208.65039062]
[66.46990204 223.32569885]
[74.82472992 236.47235107]
[71.46766663 251.31097412]
[58.88285065 259.19500732]
[55.77873993 273.87030029]
[52.67463303 288.54562378]
[49.57052231 303.22091675]
[50.85629654 312.26440430]
[46.30940628 318.09085083]
[42.98714447 332.71832275]
[49.18803406 344.02810669]
[46.11978149 356.14297485]
[35.95595169 362.70217896]
[32.41627884 377.27856445]
[28.87660599 391.85491943]
[42.04748154 399.23263550]
[52.73864746 409.89105225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 208]
[20 207]
[21 206]
[23 203]
[24 202]
[25 200]
[26 199]
[27 198]
[28 197]
[31 194]
[32 193]
[33 192]
[45 191]
[46 190]
[47 189]
[48 188]
[49 187]
[50 186]
[51 176]
[52 175]
[53 174]
[54 173]
[55 172]
[56 171]
[75 170]
[76 169]
[77 168]
[79 166]
[80 165]
[81 164]
[82 163]
[83 158]
[84 157]
[85 156]
[91 149]
[92 148]
[93 147]
[94 146]
[95 145]
[96 120]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
