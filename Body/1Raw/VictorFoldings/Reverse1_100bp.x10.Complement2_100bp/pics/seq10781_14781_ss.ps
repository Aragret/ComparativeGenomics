%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[183.62194824 541.51641846]
[183.30108643 526.50762939]
[184.45289612 511.53964233]
[187.06629944 496.75662231]
[191.11611938 482.30099487]
[196.56336975 468.31192017]
[203.35556030 454.92413330]
[211.42730713 442.26657104]
[220.70085144 430.46112061]
[231.08688354 419.62152100]
[242.48538208 409.85214233]
[233.88682556 397.56130981]
[225.28825378 385.27047729]
[218.87823486 381.59170532]
[216.65476990 372.73202515]
[208.24015808 360.31451416]
[199.82553101 347.89703369]
[191.41091919 335.47952271]
[182.99630737 323.06204224]
[174.58168030 310.64453125]
[172.74069214 325.53112793]
[162.58575439 336.57092285]
[147.90440369 339.64636230]
[134.17243958 333.61038208]
[126.51154327 320.71423340]
[127.77902222 305.76788330]
[137.50215149 294.34594727]
[152.05444336 290.70849609]
[166.00915527 296.21301270]
[159.12974548 282.88357544]
[146.41706848 275.12228394]
[146.96351624 259.31051636]
[140.08410645 245.98109436]
[134.22303772 241.47892761]
[133.20317078 232.40161133]
[126.52297974 218.97123718]
[119.84278107 205.54086304]
[113.16259003 192.11047363]
[106.48239136 178.68009949]
[99.80220032 165.24972534]
[99.85517883 180.24963379]
[96.83045959 194.94151306]
[90.85665894 208.70063782]
[82.18777466 220.94198608]
[71.19242859 231.14503479]
[58.33812714 238.87594604]
[44.17145920 243.80601501]
[29.29479408 245.72558594]
[14.34069061 244.55305481]
[-0.05499057 240.33827209]
[-13.28013992 233.26046753]
[-24.77241516 223.62057495]
[-34.04316330 211.82849121]
[-40.69818115 198.38562012]
[-44.45449829 183.86355591]
[-45.15239716 168.87980652]
[-42.76219559 154.07147217]
[-37.38552856 140.06819153]
[-29.25101852 127.46543121]
[-18.70454407 116.79904175]
[-6.19454908 108.52256775]
[7.74703550 102.98793030]
[22.52740669 100.43046570]
[37.51809311 100.95891571]
[52.08168793 104.55081177]
[65.59893799 111.05342102]
[77.49507904 120.19026184]
[87.26428986 131.57281494]
[94.49123383 144.71725464]
[93.82144928 129.73222351]
[93.15166473 114.74718475]
[85.04602814 106.38417816]
[84.61260986 94.74573517]
[92.07379150 85.80301666]
[91.62718201 70.80966949]
[91.18058014 55.81631851]
[90.62236786 40.82670975]
[89.95258331 25.84167099]
[89.28279877 10.85663319]
[88.38997650 -4.11677313]
[79.64769745 -17.30324745]
[86.41696167 -30.57074165]
[85.30130768 -45.52919388]
[84.18566132 -60.48764801]
[83.07001495 -75.44610596]
[81.95436096 -90.40455627]
[80.83871460 -105.36300659]
[77.43803406 -111.03282928]
[77.41471100 -116.71582794]
[79.91931152 -120.78227997]
[79.24952698 -135.76731873]
[78.57974243 -150.75234985]
[77.90995789 -165.73739624]
[74.40048218 -174.17074585]
[77.34343719 -180.95018005]
[76.89682770 -195.94352722]
[76.45022583 -210.93688965]
[76.00361633 -225.93023682]
[62.04006577 -232.09318542]
[52.13987732 -243.70993042]
[48.26874161 -258.47396851]
[51.19527435 -273.45391846]
[60.33841324 -285.67544556]
[73.88278198 -292.71197510]
[89.13912964 -293.16641235]
[103.07830811 -286.94851685]
[112.93267059 -275.29287720]
[116.74563599 -260.51370239]
[113.76013947 -245.54541016]
[104.56893921 -233.35998535]
[90.99697113 -226.37684631]
[91.44357300 -211.38348389]
[91.89018250 -196.39013672]
[92.33678436 -181.39678955]
[92.89499664 -166.40718079]
[93.56478119 -151.42213440]
[94.23456573 -136.43710327]
[94.90435028 -121.45206451]
[95.79717255 -106.47866058]
[96.91281891 -91.52020264]
[98.02846527 -76.56175232]
[99.14411926 -61.60329819]
[100.25976562 -46.64484406]
[101.37541199 -31.68639183]
[110.03789520 -19.56984520]
[103.34843445 -5.23242188]
[106.31851196 -1.49241161]
[106.97067261 4.15309191]
[104.26783752 10.18684769]
[104.93762207 25.17188644]
[105.60740662 40.15692520]
[109.04644012 46.69869995]
[106.17392731 55.36971283]
[106.62053680 70.36306763]
[107.06713867 85.35641479]
[116.24847412 99.39491272]
[108.13670349 114.07740021]
[108.80648804 129.06243896]
[109.47627258 144.04747009]
[113.23257446 158.56953430]
[119.91277313 171.99990845]
[126.59296417 185.43028259]
[133.27316284 198.86065674]
[139.95335388 212.29103088]
[146.63354492 225.72142029]
[153.41354370 239.10168457]
[160.29295349 252.43112183]
[173.49768066 261.14581299]
[172.45916748 276.00415039]
[179.33857727 289.33358765]
[186.99917603 302.22991943]
[195.41380310 314.64739990]
[203.82841492 327.06491089]
[212.24302673 339.48239136]
[220.65765381 351.89990234]
[229.07226562 364.31738281]
[237.57910156 376.67190552]
[246.17765808 388.96273804]
[254.77622986 401.25357056]
[267.86105347 393.89462280]
[281.60418701 387.85366821]
[295.87326050 383.18890381]
[310.53085327 379.94522095]
[325.43582153 378.15383911]
[340.44461060 377.83209229]
[355.41262817 378.98300171]
[370.19580078 381.59552002]
[384.65167236 385.64447021]
[398.64108276 391.09088135]
[412.02926636 397.88226318]
[424.68731689 405.95324707]
[436.49331665 415.22607422]
[447.33352661 425.61148071]
[457.10360718 437.00939941]
[465.70941162 449.31005859]
[473.06811523 462.39505005]
[479.10879517 476.13830566]
[483.77328491 490.40747070]
[487.01666260 505.06512451]
[488.80773926 519.97015381]
[489.12921143 534.97888184]
[487.97799683 549.94689941]
[485.36517334 564.73004150]
[481.31594849 579.18585205]
[475.86926270 593.17510986]
[469.07760620 606.56317139]
[461.00634766 619.22106934]
[451.73327637 631.02685547]
[441.34768677 641.86688232]
[429.94955444 651.63671875]
[417.64871216 660.24230957]
[404.56359863 667.60070801]
[390.82022095 673.64111328]
[376.55096436 678.30535889]
[361.89321899 681.54846191]
[346.98818970 683.33917236]
[331.97940063 683.66040039]
[317.01141357 682.50885010]
[302.22836304 679.89575195]
[287.77264404 675.84619141]
[273.78344727 670.39923096]
[260.39553833 663.60729980]
[247.73780823 655.53582764]
[235.93218994 646.26251221]
[225.09237671 635.87670898]
[215.32276917 624.47839355]
[206.71745300 612.17736816]
[199.35928345 599.09210205]
[193.31915283 585.34863281]
[188.65522766 571.07928467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 159]
[12 158]
[13 157]
[15 156]
[16 155]
[17 154]
[18 153]
[19 152]
[20 151]
[29 150]
[30 149]
[32 147]
[33 146]
[35 145]
[36 144]
[37 143]
[38 142]
[39 141]
[40 140]
[69 139]
[70 138]
[71 137]
[74 135]
[75 134]
[76 133]
[77 131]
[78 130]
[79 129]
[80 126]
[82 124]
[83 123]
[84 122]
[85 121]
[86 120]
[87 119]
[90 118]
[91 117]
[92 116]
[93 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
