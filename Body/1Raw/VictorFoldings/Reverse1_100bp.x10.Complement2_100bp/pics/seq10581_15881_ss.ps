%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[160.55381775 624.58624268]
[156.61445618 639.50219727]
[145.22085571 649.90362549]
[130.00871277 652.47149658]
[115.83213043 646.38641357]
[107.21482849 633.59008789]
[106.90654755 618.16577148]
[115.00566101 605.03540039]
[128.92776489 598.38867188]
[130.71023560 583.49499512]
[132.49269104 568.60125732]
[134.27516174 553.70751953]
[136.05763245 538.81384277]
[137.50704956 523.88403320]
[138.62269592 508.92553711]
[139.73834229 493.96710205]
[140.85398865 479.00863647]
[141.96963501 464.05020142]
[143.08529663 449.09173584]
[144.20094299 434.13327026]
[145.31658936 419.17483521]
[124.55168915 407.97119141]
[112.08880615 387.86264038]
[111.29053497 364.15560913]
[122.43149567 343.14297485]
[142.60881042 330.43365479]
[140.60479736 315.56811523]
[138.60078430 300.70260620]
[129.23246765 289.12313843]
[135.05668640 274.41296387]
[133.05267334 259.54742432]
[123.68436432 247.96797180]
[129.50859070 233.25781250]
[127.50457001 218.39227295]
[125.50055695 203.52674866]
[123.49654388 188.66122437]
[119.84845734 174.11160278]
[114.60173798 160.05912781]
[109.35501862 146.00665283]
[104.10830688 131.95419312]
[92.40799713 122.73724365]
[94.82949829 107.10244751]
[92.17384338 105.60678101]
[90.00370789 103.11178589]
[88.69026947 99.79541016]
[88.53377533 95.97026062]
[89.71612549 92.05426788]
[85.31513214 77.71442413]
[80.86410522 92.03881836]
[70.33155060 102.71895599]
[56.07046890 107.36885834]
[41.26682663 104.94973755]
[29.22779274 96.00202179]
[22.64291573 82.52465820]
[22.98327637 67.52851868]
[30.17283630 54.36378098]
[42.60543060 45.97148895]
[57.50358200 44.22649002]
[71.53900909 49.51863098]
[81.57617188 60.66564941]
[79.57215881 45.80012131]
[77.56814575 30.93459320]
[75.56413269 16.06906509]
[73.56011963 1.20353639]
[60.36212540 -3.43065572]
[50.49546051 -13.25232124]
[45.84540939 -26.30434227]
[47.26573181 -40.02045822]
[54.42254257 -51.72980118]
[65.87052917 -59.17699432]
[64.08806610 -74.07070923]
[62.30559921 -88.96443176]
[53.10370255 -77.11853790]
[38.46725845 -73.83609009]
[25.08784676 -80.61778259]
[19.08235550 -94.36311340]
[23.19641495 -108.78790283]
[35.54913330 -117.29733276]
[50.49301147 -116.00099945]
[61.19671631 -105.48991394]
[60.97338867 -120.48825073]
[51.16558075 -136.07312012]
[60.30426407 -151.05482483]
[59.85765839 -166.04817200]
[59.41105270 -181.04153442]
[51.26630020 -194.60520935]
[58.62123108 -207.55720520]
[58.17462540 -222.55056763]
[50.02987289 -236.11424255]
[57.38480377 -249.06623840]
[56.93819809 -264.05960083]
[53.55466843 -272.54425049]
[56.59823608 -279.27914429]
[56.37490845 -294.27746582]
[56.15158081 -309.27581787]
[41.63804245 -313.50057983]
[29.01549149 -321.81698608]
[19.40631104 -333.48553467]
[13.66494560 -347.46865845]
[12.30191231 -362.52301025]
[15.43841267 -377.30996704]
[22.79554939 -390.51464844]
[33.71913147 -400.96295166]
[47.23784256 -407.72576904]
[62.14960861 -410.20181274]
[77.12847900 -408.17086792]
[90.84255219 -401.81353760]
[102.07238007 -391.69509888]
[109.81940460 -378.71530151]
[113.39477539 -364.02832031]
[112.48057556 -348.94006348]
[107.15808105 -334.79217529]
[97.90058136 -322.84268188]
[85.53123474 -314.15414429]
[71.14991760 -309.49914551]
[71.37324524 -294.50079346]
[71.59657288 -279.50247192]
[71.93154907 -264.50619507]
[72.37815857 -249.51284790]
[80.49096680 -237.02159119]
[73.16797638 -222.99716187]
[73.61457825 -208.00381470]
[81.72739410 -195.51255798]
[74.40440369 -181.48812866]
[74.85100555 -166.49478149]
[75.29761505 -151.50143433]
[83.88406372 -142.98091125]
[84.37884521 -130.49334717]
[75.97172546 -120.71157837]
[76.19505310 -105.71324158]
[77.19931793 -90.74689484]
[78.98178101 -75.85317993]
[80.76424408 -60.95946121]
[95.77028656 -54.96518707]
[105.76330566 -42.14741516]
[107.94116211 -25.94636917]
[101.61558533 -10.77130413]
[88.42565155 -0.80047733]
[90.42966461 14.06505108]
[92.43367767 28.93057823]
[94.43769073 43.79610825]
[96.44170380 58.66163635]
[99.65497589 73.31342316]
[104.05597687 87.65326691]
[108.88197327 101.85572815]
[120.95755768 112.07779694]
[118.16077423 126.70746613]
[123.40749359 140.75993347]
[128.65420532 154.81240845]
[133.90092468 168.86488342]
[136.29576111 154.05729675]
[143.81501770 141.07804871]
[155.46940613 131.63479614]
[169.72561646 126.96995544]
[184.70797729 127.69727325]
[198.44529724 133.72105408]
[209.13020325 144.24874878]
[215.35691833 157.89529419]
[216.30621338 172.86521912]
[211.85317993 187.18899536]
[202.58369446 198.98207092]
[189.71731567 206.69287109]
[174.94683838 209.30690002]
[160.21559143 206.48023987]
[147.46168518 198.58479309]
[138.36207581 186.65721130]
[140.36608887 201.52273560]
[142.37010193 216.38825989]
[144.37411499 231.25379944]
[153.88577271 243.89654541]
[147.91821289 257.54342651]
[149.92222595 272.40896606]
[159.43386841 285.05169678]
[153.46630859 298.69857788]
[155.47032166 313.56411743]
[157.47433472 328.42962646]
[164.78958130 329.25582886]
[171.87661743 331.22912598]
[178.55691528 334.29812622]
[184.66239929 338.38381958]
[190.03976440 343.38168335]
[194.55429077 349.16430664]
[198.09324646 355.58465576]
[200.56864929 362.47973633]
[201.91950989 369.67489624]
[202.11329651 376.98809814]
[201.14674377 384.23455811]
[199.04585266 391.23147583]
[195.86524963 397.80264282]
[191.68670654 403.78271484]
[186.61711121 409.02163696]
[180.78567505 413.38818359]
[174.34063721 416.77340698]
[167.44552612 419.09317017]
[160.27503967 420.29046631]
[159.15939331 435.24893188]
[158.04374695 450.20739746]
[156.92810059 465.16583252]
[155.81245422 480.12429810]
[154.69679260 495.08273315]
[153.58114624 510.04119873]
[152.46549988 524.99963379]
[154.73358154 529.70104980]
[154.94985962 534.33856201]
[153.48226929 538.14135742]
[150.95133972 540.59625244]
[149.16888428 555.48999023]
[147.38641357 570.38372803]
[145.60394287 585.27740479]
[143.82148743 600.17114258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 210]
[10 209]
[11 208]
[12 207]
[13 206]
[14 202]
[15 201]
[16 200]
[17 199]
[18 198]
[19 197]
[20 196]
[21 195]
[26 176]
[27 175]
[28 174]
[30 172]
[31 171]
[33 169]
[34 168]
[35 167]
[36 166]
[37 150]
[38 149]
[39 148]
[40 147]
[42 145]
[47 144]
[48 143]
[60 142]
[61 141]
[62 140]
[63 139]
[64 138]
[70 133]
[71 132]
[72 131]
[80 130]
[81 129]
[83 126]
[84 125]
[85 124]
[87 122]
[88 121]
[90 119]
[91 118]
[93 117]
[94 116]
[95 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
