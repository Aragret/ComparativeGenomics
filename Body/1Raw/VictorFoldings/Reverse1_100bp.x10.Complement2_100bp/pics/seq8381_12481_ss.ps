%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[132.22450256 552.61639404]
[134.18463135 537.60186768]
[140.91600037 524.03839111]
[151.68843079 513.39727783]
[165.33345032 506.83279419]
[163.55097961 491.93908691]
[161.76850891 477.04534912]
[159.98605347 462.15164185]
[158.20358276 447.25793457]
[156.42111206 432.36419678]
[143.08995056 428.52383423]
[132.19503784 419.86517334]
[125.40180206 407.66961670]
[123.76473999 393.76239014]
[127.56380463 380.23934937]
[136.25720215 369.15112305]
[148.55838013 362.19213867]
[146.99786377 347.27352905]
[145.43733215 332.35491943]
[136.41793823 320.50167847]
[142.67755127 305.97143555]
[141.11703491 291.05282593]
[139.55651855 276.13421631]
[137.99598694 261.21560669]
[136.43547058 246.29701233]
[127.41606903 234.44375610]
[133.67568970 219.91351318]
[132.11515808 204.99490356]
[130.55464172 190.07630920]
[126.58254242 175.61178589]
[120.30518341 161.98846436]
[114.02782440 148.36514282]
[107.75046539 134.74183655]
[101.47309875 121.11851501]
[89.14474487 118.17484283]
[80.70769501 108.71599579]
[79.18640900 96.13270569]
[85.12622070 84.93572998]
[79.05238342 71.22045898]
[67.32328033 65.85475159]
[62.54672623 54.30622864]
[66.77935791 42.97435379]
[60.91039658 29.17017746]
[55.04143906 15.36600113]
[49.17247772 1.56182408]
[32.23496246 3.33327699]
[15.59366703 -0.19854729]
[0.86682177 -8.67889786]
[-10.51698971 -21.27237129]
[-17.45741653 -36.74519348]
[-19.28869438 -53.58609390]
[-15.84348774 -70.15390778]
[-7.46812296 -84.83750916]
[5.01219606 -96.21248627]
[-1.46729958 -109.74082947]
[-7.94679546 -123.26918030]
[-14.42629147 -136.79753113]
[-20.90578651 -150.32586670]
[-33.84518814 -159.42985535]
[-32.36474991 -174.25070190]
[-38.84424591 -187.77903748]
[-45.32374191 -201.30738831]
[-51.31658936 -187.55654907]
[-65.22647095 -181.94270325]
[-79.08517456 -187.68171692]
[-84.95380402 -201.48603821]
[-79.47054291 -215.44790649]
[-65.77645111 -221.56933594]
[-51.71683121 -216.34434509]
[-56.96354675 -230.39682007]
[-62.21026611 -244.44927979]
[-67.45698547 -258.50177002]
[-72.70370483 -272.55422974]
[-77.95042419 -286.60668945]
[-83.19713593 -300.65917969]
[-97.95532227 -297.78759766]
[-112.98487091 -297.38449097]
[-127.87577057 -299.46078491]
[-142.22178650 -303.95986938]
[-155.63153076 -310.75900269]
[-167.73921204 -319.67272949]
[-178.21449280 -330.45782471]
[-186.77160645 -342.82009888]
[-193.17710876 -356.42227173]
[-197.25627136 -370.89328003]
[-198.89779663 -385.83834839]
[-198.05688477 -400.84979248]
[-194.75651550 -415.51803589]
[-189.08668518 -429.44293213]
[-181.20210266 -442.24462891]
[-171.31784058 -453.57385254]
[-159.70358276 -463.12155151]
[-146.67613220 -470.62722778]
[-132.59091187 -475.88619995]
[-117.83217621 -478.75491333]
[-102.80255127 -479.15515137]
[-87.91205597 -477.07595825]
[-73.56690979 -472.57412720]
[-60.15846634 -465.77239990]
[-48.05250931 -456.85635376]
[-37.57930756 -446.06924438]
[-29.02457237 -433.70532227]
[-22.62168312 -420.10189819]
[-18.54531479 -405.63009644]
[-16.90667725 -390.68472290]
[-17.75046921 -375.67346191]
[-21.05367470 -361.00585938]
[-26.72617912 -347.08203125]
[-34.61323166 -334.28186035]
[-44.49966812 -322.95452881]
[-56.11577606 -313.40908813]
[-69.14466858 -305.90588379]
[-63.89794922 -291.85342407]
[-58.65122986 -277.80093384]
[-53.40451431 -263.74847412]
[-48.15779495 -249.69599915]
[-42.91107559 -235.64353943]
[-37.66436005 -221.59106445]
[-31.79539680 -207.78688049]
[-25.31590080 -194.25854492]
[-18.83640671 -180.73019409]
[-6.36046076 -172.59385681]
[-7.37744141 -156.80535889]
[-0.89794570 -143.27702332]
[5.58155012 -129.74867249]
[12.06104565 -116.22032928]
[18.54054260 -102.69198608]
[31.39175224 -105.15820312]
[44.46961212 -104.46642303]
[57.00888062 -100.65210724]
[68.27463531 -93.93358612]
[77.60533142 -84.69953918]
[84.45166016 -73.48654175]
[88.40888977 -60.94787979]
[89.24075317 -47.81547546]
[86.89360809 -34.85717392]
[81.49980927 -22.83184624]
[73.37030029 -12.44494820]
[62.97665405 -4.30713654]
[68.84561157 9.49703979]
[74.71457672 23.30121613]
[80.58353424 37.10539246]
[95.15318298 46.88763809]
[92.76765442 65.14662933]
[98.84148407 78.86189270]
[114.36894989 84.45346069]
[121.16376495 99.49334717]
[115.09642029 114.84115601]
[121.37377930 128.46446228]
[127.65113831 142.08778381]
[133.92849731 155.71110535]
[140.20585632 169.33441162]
[140.69667053 154.34245300]
[145.00009155 139.97302246]
[152.83067322 127.17918396]
[163.66903687 116.80953217]
[176.79632568 109.55183411]
[191.34185791 105.88747406]
[206.34088135 106.05949402]
[220.79853821 110.05647278]
[233.75593567 117.61331940]
[244.35363770 128.22880554]
[251.88874817 141.19886780]
[255.86148071 155.66320801]
[256.00833130 170.66249084]
[252.31959534 185.20185852]
[245.03990173 198.31695557]
[234.65208435 209.13792419]
[221.84513855 216.94703674]
[207.46850586 221.22634888]
[192.47573853 221.69201660]
[177.86125183 218.31317139]
[164.59436035 211.31391907]
[153.55502319 201.15847778]
[145.47325134 188.51577759]
[147.03376770 203.43438721]
[148.59428406 218.35298157]
[157.72531128 231.27333069]
[151.35406494 244.73648071]
[152.91459656 259.65509033]
[154.47511292 274.57369995]
[156.03564453 289.49230957]
[157.59616089 304.41091919]
[166.72717285 317.33123779]
[160.35594177 330.79440308]
[161.91645813 345.71301270]
[163.47698975 360.63162231]
[178.83489990 366.00454712]
[190.27128601 377.49597168]
[195.53254700 392.76947021]
[193.61332703 408.75070190]
[184.94827271 422.24627686]
[171.31483459 430.58172607]
[173.09729004 445.47546387]
[174.87976074 460.36917114]
[176.66223145 475.26287842]
[178.44470215 490.15661621]
[180.22715759 505.05032349]
[195.03588867 508.20950317]
[208.01516724 516.00799561]
[217.75711060 527.59997559]
[223.20497131 541.72796631]
[223.76783752 556.85943604]
[219.38461304 571.35308838]
[210.53079224 583.63677979]
[198.16674805 592.37799072]
[183.63363647 596.62860107]
[168.50793457 595.92755127]
[154.43032837 590.35083008]
[142.92787170 580.50335693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 198]
[6 197]
[7 196]
[8 195]
[9 194]
[10 193]
[17 187]
[18 186]
[19 185]
[21 183]
[22 182]
[23 181]
[24 180]
[25 179]
[27 177]
[28 176]
[29 175]
[30 152]
[31 151]
[32 150]
[33 149]
[34 148]
[38 145]
[39 144]
[42 142]
[43 141]
[44 140]
[45 139]
[54 127]
[55 126]
[56 125]
[57 124]
[58 123]
[60 121]
[61 120]
[62 119]
[69 118]
[70 117]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
