%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAACCCAACUCCACUACUACCUCCACCUCUAAACCACGACACUUUAACAAAAUCCAUUAUCGAAAAGAUCAGUCCAAUCCAGAUCCUCCUCAUCCCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[107.80403137 518.67523193]
[93.69695282 513.44982910]
[80.79036713 505.72100830]
[69.52386475 495.75201416]
[60.28118515 483.88241577]
[53.37712097 470.51647949]
[49.04682541 456.10940552]
[47.43779373 441.15194702]
[48.60481644 426.15353394]
[52.50815582 411.62500000]
[59.01485825 398.06115723]
[67.90331268 385.92401123]
[78.87078094 375.62698364]
[91.54371643 367.52072144]
[105.49047852 361.88134766]
[120.23604584 358.90093994]
[120.01271820 343.90261841]
[119.78939056 328.90426636]
[119.56606293 313.90594482]
[119.34273529 298.90759277]
[119.11940765 283.90927124]
[117.78117371 268.96908569]
[108.07225037 257.67367554]
[113.45591736 242.79661560]
[111.01018524 227.99734497]
[108.56446075 213.19807434]
[96.71467590 200.25398254]
[103.34156036 183.07357788]
[100.67576599 168.31236267]
[98.00997162 153.55114746]
[88.58975220 165.22416687]
[73.68984985 166.95417786]
[61.84560776 157.75016785]
[59.84195328 142.88458252]
[68.82666016 130.87313843]
[83.65288544 128.59651184]
[95.82698822 137.35806274]
[94.48875427 122.41787720]
[93.15052032 107.47769165]
[89.35191345 100.36832428]
[91.90528107 92.30537415]
[90.78962708 77.34691620]
[89.67398071 62.38846588]
[86.73359680 58.07555389]
[85.83176422 53.52143478]
[86.71900940 49.54301071]
[88.85776520 46.73978424]
[77.81017303 56.88624954]
[62.81848907 56.38685608]
[52.47062683 45.52767563]
[52.69431305 30.52934265]
[63.36141205 19.98358345]
[78.36132050 19.93148804]
[89.10103607 30.40202522]
[89.99385071 15.42862034]
[90.88666534 0.45521438]
[91.77947998 -14.51819134]
[92.67230225 -29.49159622]
[80.76354218 -20.37121010]
[65.87619019 -22.20610619]
[56.53840256 -33.94517517]
[58.09928131 -48.86374283]
[69.66468811 -58.41577530]
[84.60942841 -57.12944031]
[94.37218475 -45.74250412]
[96.59729767 -60.57654572]
[98.82241821 -75.41059113]
[101.04753876 -90.24463654]
[103.27265167 -105.07867432]
[88.83993530 -110.97337341]
[76.23982239 -120.13939667]
[66.19915771 -132.04283142]
[59.29590225 -145.99203491]
[55.92589188 -161.17776489]
[56.28010559 -176.72018433]
[60.33387756 -191.71977234]
[67.84854126 -205.30944824]
[78.38551331 -216.70465088]
[91.33184052 -225.24867249]
[105.93589783 -230.45045471]
[121.35099792 -232.01284790]
[123.35501099 -246.87837219]
[125.35902405 -261.74389648]
[127.36303711 -276.60943604]
[112.82131195 -280.36105347]
[98.82538605 -285.80627441]
[85.57173920 -292.86865234]
[73.24642944 -301.44903564]
[62.02248764 -311.42697144]
[52.05747986 -322.66241455]
[43.49129486 -334.99761963]
[36.44419479 -348.25936890]
[31.01510620 -362.26156616]
[27.28024673 -376.80761719]
[25.29204750 -391.69329834]
[25.07842064 -406.70962524]
[26.64236259 -421.64584351]
[29.96192169 -436.29223633]
[34.99049377 -450.44320679]
[41.65748215 -463.90008545]
[49.86930084 -476.47396851]
[59.51066589 -487.98834229]
[70.44622040 -498.28152466]
[82.52246094 -507.20904541]
[95.56983948 -514.64562988]
[109.40520477 -520.48675537]
[123.83432007 -524.65051270]
[138.65463257 -527.07843018]
[153.65808105 -527.73645020]
[168.63403320 -526.61529541]
[183.37226868 -523.73071289]
[197.66587830 -519.12316895]
[211.31419373 -512.85742188]
[224.12561035 -505.02136230]
[235.92030334 -495.72503662]
[246.53266907 -485.09893799]
[255.81373596 -473.29223633]
[263.63320923 -460.47067261]
[269.88131714 -446.81427002]
[274.47033691 -432.51470947]
[277.33584595 -417.77276611]
[278.43765259 -402.79537964]
[277.76025391 -387.79278564]
[275.31314087 -372.97561646]
[271.13073730 -358.55191040]
[265.27166748 -344.72412109]
[257.81826782 -331.68637085]
[248.87512207 -319.62167358]
[238.56777954 -308.69946289]
[227.04096985 -299.07299805]
[214.45648193 -290.87744141]
[200.99098206 -284.22787476]
[186.83352661 -279.21759033]
[172.18284607 -275.91699219]
[157.24462891 -274.37237549]
[142.22856140 -274.60540771]
[140.22454834 -259.73989868]
[138.22053528 -244.87435913]
[136.21652222 -230.00883484]
[149.73902893 -224.90495300]
[161.78900146 -216.90972900]
[171.75761414 -206.42311096]
[179.14033508 -193.97097778]
[183.56239319 -180.17883301]
[184.79788208 -165.74037170]
[182.78121948 -151.38256836]
[177.61067200 -137.82910156]
[169.54353333 -125.76382446]
[158.98335266 -115.79634094]
[146.45977783 -108.43115997]
[132.60188293 -104.04214478]
[118.10669708 -102.85356140]
[115.88157654 -88.01951599]
[113.65646362 -73.18547058]
[111.43134308 -58.35142899]
[109.20623016 -43.51738739]
[107.64570618 -28.59878159]
[106.75289154 -13.62537575]
[105.86006927 1.34803021]
[104.96725464 16.32143593]
[104.07444000 31.29484177]
[103.85111237 46.29317856]
[104.63243866 61.27281570]
[105.74808502 76.23126984]
[106.86373138 91.18972015]
[108.09070587 106.13945770]
[109.42893982 121.07964325]
[110.76717377 136.01982117]
[112.77118683 150.88536072]
[115.43698883 165.64657593]
[118.10278320 180.40779114]
[128.23445129 188.38978577]
[130.15090942 200.73931885]
[123.36373138 210.75234985]
[125.80945587 225.55162048]
[128.25518799 240.35089111]
[138.13903809 252.70483398]
[132.58044434 266.52334595]
[139.33660889 253.13102722]
[151.82934570 244.82852173]
[166.79307556 243.78608704]
[180.31632996 250.27621460]
[188.86415100 262.60238647]
[190.20216370 277.54260254]
[183.98060608 291.19149780]
[171.82579041 299.98129272]
[156.91494751 301.61434937]
[143.14575195 295.66381836]
[134.11775208 283.68594360]
[134.34107971 298.68426514]
[134.56440735 313.68261719]
[134.78773499 328.68093872]
[135.01106262 343.67929077]
[135.23439026 358.67761230]
[150.06216431 361.21765137]
[164.17063904 366.43927002]
[177.07931519 374.16464233]
[188.34849548 384.13058472]
[197.59437561 395.99768066]
[204.50204468 409.36178589]
[208.83622742 423.76766968]
[210.44929504 438.72467041]
[209.28630066 453.72341919]
[205.38688660 468.25302124]
[198.88383484 481.81860352]
[189.99865723 493.95812988]
[179.03396606 504.25814819]
[166.36322021 512.36779785]
[152.41796875 518.01092529]
[137.67320251 520.99530029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 194]
[17 193]
[18 192]
[19 191]
[20 190]
[21 189]
[22 178]
[24 176]
[25 175]
[26 174]
[28 171]
[29 170]
[30 169]
[37 168]
[38 167]
[39 166]
[41 165]
[42 164]
[43 163]
[47 162]
[54 161]
[55 160]
[56 159]
[57 158]
[58 157]
[65 156]
[66 155]
[67 154]
[68 153]
[69 152]
[81 139]
[82 138]
[83 137]
[84 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
