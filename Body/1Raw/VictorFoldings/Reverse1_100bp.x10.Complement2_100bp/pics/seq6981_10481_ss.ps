%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[48.47565842 521.38092041]
[41.83520889 534.87445068]
[32.95236206 547.00982666]
[22.09705734 557.41815186]
[9.59917450 565.78320312]
[-4.16148949 571.85076904]
[-18.76676369 575.43640137]
[-33.77280807 576.43127441]
[-48.72360992 574.80499268]
[-63.16482925 570.60711670]
[-76.65761566 563.96514893]
[-88.79193115 555.08093262]
[-99.19903564 544.22442627]
[-107.56266785 531.72558594]
[-113.62866974 517.96423340]
[-117.21269226 503.35858154]
[-118.20582581 488.35241699]
[-116.57788849 473.40179443]
[-112.37835693 458.96105957]
[-105.73484802 445.46902466]
[-96.84925079 433.33572388]
[-85.99158478 422.92984009]
[-73.49180603 414.56762695]
[-59.72976303 408.50320435]
[-45.12367630 404.92083740]
[-30.11740494 403.92938232]
[-15.16697311 405.55902100]
[-10.97996140 391.15524292]
[-6.79295063 376.75146484]
[-2.60593939 362.34768677]
[-9.79034996 355.01586914]
[-13.31065464 345.28741455]
[-12.46861649 334.89492798]
[-7.34936810 325.71905518]
[1.18190551 319.44812012]
[11.62553596 317.26766968]
[16.45153427 303.06521606]
[21.27753067 288.86276245]
[26.10352898 274.66030884]
[25.27918053 267.31576538]
[31.10854912 260.28323364]
[36.14546585 246.15422058]
[41.18238068 232.02519226]
[46.21929550 217.89616394]
[51.25621414 203.76713562]
[56.29312897 189.63810730]
[55.12034607 186.31291199]
[55.49988556 182.25445557]
[57.75883865 178.19854736]
[61.88331985 174.99920654]
[67.54610443 161.10917664]
[65.18614197 146.40272522]
[77.56072235 136.54472351]
[83.11994934 122.61292267]
[88.57530212 108.64012146]
[86.65695953 94.79051971]
[97.45189667 85.90451813]
[102.90725708 71.93172455]
[90.75008392 80.71825409]
[76.00000763 83.44502258]
[61.50503540 79.58551788]
[50.06391525 69.88495636]
[43.88575363 56.21636963]
[44.16345596 41.21894073]
[50.84339905 27.78844070]
[62.63579178 18.51808739]
[77.26371002 15.19784164]
[91.90273285 18.46879196]
[103.72628784 27.69936752]
[110.45143890 41.10728836]
[110.77940369 56.10494614]
[118.63115692 43.32410431]
[115.17602539 28.13529968]
[123.32089233 15.28555870]
[137.82238770 12.08522129]
[145.67414856 -0.69562161]
[153.52589417 -13.47646427]
[161.37765503 -26.25730705]
[169.22941589 -39.03815079]
[166.99696350 -51.74165344]
[173.79983521 -62.22520065]
[185.53356934 -65.16561127]
[193.57473755 -77.82814026]
[201.61590576 -90.49066162]
[209.65708923 -103.15319061]
[217.69825745 -115.81571198]
[213.57527161 -132.81631470]
[222.84085083 -147.25457764]
[239.35040283 -150.45985413]
[247.20214844 -163.24069214]
[255.05390930 -176.02154541]
[262.90567017 -188.80238342]
[270.75741577 -201.58322144]
[277.93280029 -214.75569153]
[284.41229248 -228.28404236]
[290.68963623 -241.90736389]
[296.76348877 -255.62263489]
[302.83731079 -269.33789062]
[308.91113281 -283.05316162]
[296.22912598 -291.11691284]
[284.89068604 -300.98083496]
[275.14907837 -312.42456055]
[267.22195435 -325.19244385]
[261.28643799 -338.99923706]
[257.47509766 -353.53646851]
[255.87310791 -368.47940063]
[256.51623535 -383.49420166]
[259.39010620 -398.24542236]
[264.43054199 -412.40350342]
[271.52493286 -425.65219116]
[280.51477051 -437.69546509]
[291.19921875 -448.26428223]
[303.33959961 -457.12255859]
[316.66467285 -464.07235718]
[330.87680054 -468.95843506]
[345.65841675 -471.67163086]
[360.67932129 -472.15136719]
[375.60391235 -470.38687134]
[390.09884644 -466.41757202]
[403.84020996 -460.33218384]
[416.52108765 -452.26660156]
[427.85812378 -442.40106201]
[437.59811401 -430.95596313]
[445.52340698 -418.18695068]
[451.45693970 -404.37933350]
[455.26620483 -389.84155273]
[456.86608887 -374.89837646]
[456.22082520 -359.88366699]
[453.34484863 -345.13287354]
[448.30239868 -330.97549438]
[441.20611572 -317.72781372]
[432.21456909 -305.68582153]
[421.52862549 -295.11853027]
[409.38696289 -286.26199341]
[396.06088257 -279.31408691]
[381.84811401 -274.43002319]
[367.06610107 -271.71893311]
[352.04513550 -271.24136353]
[337.12075806 -273.00796509]
[322.62640381 -276.97933960]
[316.55258179 -263.26406860]
[310.47875977 -249.54879761]
[304.40490723 -235.83352661]
[305.25906372 -231.13464355]
[303.17050171 -225.84930420]
[297.94064331 -221.80455017]
[291.46112061 -208.27619934]
[305.57940674 -213.34320068]
[319.69467163 -208.26785278]
[327.35363770 -195.37054443]
[325.05471802 -180.54776001]
[313.84893799 -170.57627869]
[298.85943604 -170.01490784]
[286.93923950 -179.12031555]
[283.53826904 -193.73146057]
[275.68652344 -180.95062256]
[267.83474731 -168.16978455]
[259.98300171 -155.38894653]
[252.13124084 -142.60809326]
[256.84927368 -130.61769104]
[253.75358582 -117.90947723]
[243.75668335 -109.17606354]
[230.36077881 -107.77453613]
[222.31961060 -95.11201477]
[214.27842712 -82.44949341]
[206.23725891 -69.78696442]
[198.19609070 -57.12443924]
[198.40187073 -39.57666016]
[182.01025391 -31.18639374]
[174.15849304 -18.40555191]
[166.30674744 -5.62470865]
[158.45498657 7.15613365]
[150.60322571 19.93697548]
[154.30314636 34.31912613]
[146.52241516 47.39257050]
[131.41200256 51.17586136]
[123.56024933 63.95670319]
[116.88005066 77.38707733]
[111.42469788 91.35987854]
[113.34304047 105.20948029]
[102.54810333 114.09548187]
[97.09274292 128.06828308]
[96.88678741 137.20039368]
[91.45075226 142.20750427]
[93.40567017 157.90747070]
[81.43613434 166.77197266]
[75.77334595 180.66198730]
[70.42215729 194.67501831]
[65.38524628 208.80404663]
[60.34832764 222.93307495]
[55.31140900 237.06210327]
[50.27449417 251.19113159]
[45.23757935 265.32015991]
[40.30598450 279.48629761]
[35.47998810 293.68875122]
[30.65398979 307.89120483]
[25.82799149 322.09365845]
[35.65154266 339.62014771]
[29.51320839 358.43035889]
[11.79784298 366.53469849]
[7.61083126 380.93847656]
[3.42382026 395.34225464]
[-0.76319104 409.74603271]
[12.73109913 416.38494873]
[24.86743355 425.26641846]
[35.27700043 436.12054443]
[43.64346695 448.61749268]
[49.71258545 462.37747192]
[53.29991913 476.98233032]
[54.29645920 491.98825073]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 203]
[28 202]
[29 201]
[30 200]
[36 197]
[37 196]
[38 195]
[39 194]
[41 193]
[42 192]
[43 191]
[44 190]
[45 189]
[46 188]
[50 187]
[51 186]
[53 184]
[54 182]
[55 181]
[57 179]
[58 178]
[71 177]
[72 176]
[75 173]
[76 172]
[77 171]
[78 170]
[79 169]
[82 167]
[83 166]
[84 165]
[85 164]
[86 163]
[89 159]
[90 158]
[91 157]
[92 156]
[93 155]
[94 147]
[95 146]
[96 143]
[97 142]
[98 141]
[99 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
