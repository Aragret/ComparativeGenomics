%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[31.68990707 505.49014282]
[16.18830872 504.79727173]
[4.07552671 495.09881592]
[0.00917332 480.12402344]
[5.55284405 465.63101196]
[18.57488441 457.19262695]
[19.24466896 442.20761108]
[19.91445541 427.22256470]
[20.58423996 412.23751831]
[10.75223255 423.56588745]
[-3.61327481 427.88238525]
[-18.06097412 423.84951782]
[-28.11408615 412.71691895]
[-30.65754890 397.93411255]
[-24.90323830 384.08175659]
[-12.63419247 375.45211792]
[2.34789085 374.71920776]
[15.40065193 382.11010742]
[22.47960281 395.33493042]
[25.14539719 380.57373047]
[27.81119347 365.81250000]
[30.47698975 351.05126953]
[33.14278412 336.29006958]
[35.80857849 321.52883911]
[22.18538666 327.80648804]
[8.71551228 321.20629883]
[5.32844400 306.59368896]
[14.52100468 294.74057007]
[29.51677895 294.38458252]
[39.26101303 305.78656006]
[37.89268494 298.52368164]
[43.18285370 291.07705688]
[47.15494919 276.61254883]
[51.12704468 262.14801025]
[55.09914017 247.68350220]
[45.10334778 232.34727478]
[49.56844330 214.26480103]
[66.11175537 205.03260803]
[69.65142822 190.45623779]
[73.19110107 175.87986755]
[76.73077393 161.30348206]
[80.27044678 146.72711182]
[83.81011963 132.15074158]
[82.13446808 127.67845917]
[83.25048828 122.10607147]
[87.67826843 117.19625854]
[91.65036774 102.73172760]
[90.37277222 99.96455383]
[90.07381439 96.67135620]
[90.95024109 93.21370697]
[93.06250763 90.02081299]
[96.31343079 87.53797913]
[101.13942719 73.33552551]
[105.96542358 59.13307190]
[110.79142761 44.93061447]
[115.61742401 30.72815895]
[110.62680054 18.83461189]
[114.93876648 7.10470724]
[125.72982788 1.63848913]
[130.76673889 -12.49054050]
[135.80366516 -26.61956978]
[140.84057617 -40.74860001]
[140.77455139 -49.88278961]
[146.05909729 -55.04954147]
[151.30581665 -69.10201263]
[148.88430786 -84.73680878]
[160.58460999 -93.95375824]
[165.83132935 -108.00622559]
[152.95608521 -115.78208923]
[141.73191833 -125.78881073]
[132.54014587 -137.68450928]
[125.69263458 -151.06314087]
[121.42128754 -165.46842957]
[119.87017822 -180.40933228]
[121.09066010 -195.37687683]
[125.03971863 -209.86143494]
[131.58143616 -223.37007141]
[140.49171448 -235.44337463]
[151.46591187 -245.67103577]
[164.12928772 -253.70581055]
[178.04975891 -259.27529907]
[192.75273132 -262.19116211]
[207.73713684 -262.35552979]
[222.49267578 -259.76431274]
[219.02458191 -277.84893799]
[232.98614502 -288.48101807]
[238.02305603 -302.61004639]
[243.05998230 -316.73907471]
[248.09689331 -330.86810303]
[253.13380432 -344.99716187]
[250.47979736 -360.59414673]
[262.04156494 -369.98428345]
[267.07849121 -384.11331177]
[272.11541748 -398.24234009]
[258.76290894 -405.12667847]
[246.44715881 -413.72933960]
[235.38796997 -423.89682007]
[225.78269958 -435.44769287]
[217.80276489 -448.17575073]
[211.59057617 -461.85394287]
[207.25700378 -476.23806763]
[204.87937927 -491.07150269]
[204.50013733 -506.08947754]
[206.12605286 -521.02398682]
[209.72808838 -535.60852051]
[215.24197388 -549.58282471]
[222.56930542 -562.69744873]
[231.57933044 -574.71838379]
[242.11123657 -585.43109131]
[253.97706604 -594.64440918]
[266.96508789 -602.19390869]
[280.84350586 -607.94488525]
[295.36462402 -611.79461670]
[310.26928711 -613.67449951]
[325.29153442 -613.55090332]
[340.16329956 -611.42608643]
[354.61911011 -607.33801270]
[368.40103149 -601.35949707]
[381.26309204 -593.59735107]
[392.97576904 -584.19012451]
[403.33001709 -573.30560303]
[412.14105225 -561.13806152]
[419.25164795 -547.90466309]
[424.53491211 -533.84155273]
[427.89654541 -519.19970703]
[429.27655029 -504.24047852]
[428.65029907 -489.23077393]
[426.02896118 -474.43847656]
[421.45935059 -460.12756348]
[415.02297974 -446.55343628]
[406.83474731 -433.95837402]
[397.04077148 -422.56707764]
[385.81582642 -412.58291626]
[373.36022949 -404.18399048]
[359.89627075 -397.52026367]
[345.66424561 -392.71060181]
[330.91812134 -389.84088135]
[315.92105103 -388.96231079]
[300.94073486 -390.09051514]
[286.24444580 -393.20541382]
[281.20751953 -379.07638550]
[276.17059326 -364.94735718]
[279.18490601 -350.36096191]
[267.26284790 -339.96023560]
[262.22592163 -325.83120728]
[257.18899536 -311.70217896]
[252.15208435 -297.57315063]
[247.11517334 -283.44412231]
[252.01478577 -272.38424683]
[247.93408203 -260.57189941]
[236.54515076 -254.51757812]
[249.38830566 -246.80438232]
[260.59838867 -236.85986328]
[269.79266357 -225.02159119]
[276.65679932 -211.69183350]
[280.95574951 -197.32389832]
[282.54171753 -182.40670776]
[281.35919189 -167.44810486]
[277.44702148 -152.95768738]
[270.93701172 -139.42932129]
[262.04953003 -127.32437134]
[251.08610535 -117.05596161]
[238.41911316 -108.97488403]
[224.47915649 -103.35758209]
[209.74044800 -100.39672089]
[194.70465088 -100.19458008]
[179.88380432 -102.75950623]
[174.63708496 -88.70703888]
[177.43386841 -74.07736969]
[165.35829163 -63.85529709]
[160.11157227 -49.80282593]
[154.96960449 -35.71168137]
[149.93269348 -21.58265305]
[144.89578247 -7.45362425]
[139.85885620 6.67540550]
[143.94607544 23.74179268]
[129.81987000 35.55415726]
[124.99388123 49.75661469]
[120.16788483 63.95906830]
[115.34188080 78.16152191]
[110.51588440 92.36398315]
[106.11489105 106.70382690]
[102.14279175 121.16835022]
[98.38648987 135.69041443]
[94.84681702 150.26678467]
[91.30714417 164.84315491]
[87.76747131 179.41954041]
[84.22779846 193.99591064]
[80.68813324 208.57228088]
[88.73130035 217.32695007]
[91.52115631 228.76013184]
[88.47701263 240.00410461]
[80.46678162 248.29577637]
[69.56366730 251.65559387]
[65.59156799 266.12011719]
[61.61947250 280.58462524]
[57.64737701 295.04916382]
[53.78306961 309.54284668]
[50.56979752 324.19464111]
[47.90400314 338.95587158]
[45.23820496 353.71707153]
[42.57241058 368.47830200]
[39.90661621 383.23950195]
[37.24081802 398.00073242]
[35.56927872 412.90731812]
[34.89949417 427.89233398]
[34.22970963 442.87738037]
[33.55992508 457.86242676]
[45.77720261 467.42892456]
[50.00576401 482.35870361]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 208]
[7 207]
[8 206]
[9 205]
[19 204]
[20 203]
[21 202]
[22 201]
[23 200]
[24 199]
[30 198]
[32 197]
[33 196]
[34 195]
[35 194]
[38 189]
[39 188]
[40 187]
[41 186]
[42 185]
[43 184]
[46 183]
[47 182]
[52 181]
[53 180]
[54 179]
[55 178]
[56 177]
[59 175]
[60 174]
[61 173]
[62 172]
[64 171]
[65 170]
[67 168]
[68 167]
[84 151]
[86 148]
[87 147]
[88 146]
[89 145]
[90 144]
[92 142]
[93 141]
[94 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
