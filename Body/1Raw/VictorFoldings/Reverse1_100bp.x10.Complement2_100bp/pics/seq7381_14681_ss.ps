%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[54.50788498 478.16229248]
[39.45326614 479.52236938]
[24.66693306 476.38296509]
[11.46368313 469.02325439]
[1.01753604 458.09762573]
[-5.74264240 444.57757568]
[-8.21574211 429.66531372]
[-6.18185616 414.68685913]
[0.17816265 400.97402954]
[10.29878616 389.74618530]
[23.28009605 382.00170898]
[37.96780396 378.42922974]
[38.86061859 363.45581055]
[39.75343323 348.48239136]
[40.64625168 333.50900269]
[41.53906631 318.53558350]
[42.43188095 303.56219482]
[43.32469940 288.58877563]
[36.35865402 275.42355347]
[44.90364075 262.10836792]
[35.72336960 273.97103882]
[22.12043381 280.29241943]
[7.13375664 279.66033936]
[-5.88859701 272.21600342]
[-14.03740025 259.62246704]
[-15.49219036 244.69317627]
[-9.92796230 230.76338196]
[1.41222012 220.94502258]
[15.99493122 217.43153381]
[30.56235695 221.00787354]
[41.86009598 230.87504578]
[47.36420822 244.82872009]
[50.68647003 230.20126343]
[54.00872803 215.57380676]
[57.33098602 200.94635010]
[60.65324783 186.31889343]
[59.06928253 179.09996033]
[64.13539124 171.49914551]
[52.67790604 181.18037415]
[37.93264008 183.93302917]
[23.75397110 179.03758240]
[13.84817028 167.77369690]
[10.80459023 153.08572388]
[15.41881561 138.81306458]
[26.48469734 128.68653870]
[41.10964203 125.35323334]
[55.47072601 129.68443298]
[65.81398773 140.54798889]
[69.43575287 155.10330200]
[75.09853363 141.21327209]
[80.76132202 127.32324982]
[86.42411041 113.43321991]
[80.90144348 100.03746033]
[86.37151337 86.62014008]
[99.68585968 80.90399170]
[105.34864807 67.01396179]
[111.01143646 53.12393570]
[116.67422485 39.23390961]
[121.39435577 24.99592018]
[125.15065765 10.47386169]
[128.90695190 -4.04819775]
[132.66325378 -18.57025719]
[134.77787781 -33.42045593]
[135.22448730 -48.41380310]
[135.67109680 -63.40715408]
[125.11284637 -74.85971832]
[125.77935791 -90.05873871]
[136.76268005 -100.05384064]
[137.20928955 -115.04718781]
[135.75987244 -129.97700500]
[132.43762207 -144.60446167]
[129.11535645 -159.23191833]
[125.79309845 -173.85937500]
[122.47083282 -188.48684692]
[118.45201874 -174.03523254]
[110.01288605 -161.63438416]
[98.04404449 -152.59298706]
[83.80859375 -147.86520386]
[68.80883789 -147.94996643]
[54.62772751 -152.83833313]
[42.76183319 -162.01441956]
[34.46339417 -174.50985718]
[30.60816574 -189.00596619]
[31.60299301 -203.97294617]
[37.34289169 -217.83128357]
[47.22212219 -229.11848450]
[60.19809723 -236.64337158]
[74.90143585 -239.61184692]
[89.78046417 -237.71061707]
[103.26495361 -231.14033508]
[113.93185425 -220.59439087]
[120.65552521 -207.18551636]
[121.10213470 -222.17886353]
[121.54873657 -237.17221069]
[121.99534607 -252.16555786]
[122.44194794 -267.15890503]
[122.88855743 -282.15225220]
[123.33516693 -297.14559937]
[109.24247742 -302.72879028]
[97.91130829 -312.79757690]
[90.70995331 -326.13610840]
[88.50801086 -341.13369751]
[91.57136536 -355.97927856]
[99.53012085 -368.88021851]
[111.42320251 -378.27862549]
[125.81446838 -383.03964233]
[140.96611023 -382.58831787]
[155.04847717 -376.97918701]
[166.36106873 -366.88952637]
[173.53784180 -353.53775024]
[175.71214294 -338.53613281]
[172.62142944 -323.69622803]
[164.63891602 -310.80996704]
[152.72853088 -301.43350220]
[138.32850647 -296.69900513]
[137.88191223 -281.70565796]
[137.43530273 -266.71231079]
[136.98869324 -251.71896362]
[136.54208374 -236.72560120]
[136.09548950 -221.73225403]
[135.64888000 -206.73890686]
[137.09829712 -191.80909729]
[140.42056274 -177.18164062]
[143.74281311 -162.55418396]
[147.06507874 -147.92671204]
[150.38732910 -133.29925537]
[154.40615845 -147.75086975]
[162.84527588 -160.15171814]
[174.81411743 -169.19311523]
[189.04957581 -173.92089844]
[204.04933167 -173.83613586]
[218.23043823 -168.94776917]
[230.09634399 -159.77168274]
[238.39477539 -147.27624512]
[242.25000000 -132.78013611]
[241.25517273 -117.81315613]
[235.51527405 -103.95481873]
[225.63604736 -92.66761780]
[212.66007996 -85.14272308]
[197.95674133 -82.17425537]
[183.07771301 -84.07547760]
[169.59321594 -90.64575958]
[158.92631531 -101.19171143]
[152.20263672 -114.60058594]
[151.75604248 -99.60723114]
[162.12498474 -88.97612000]
[161.88563538 -73.76436615]
[150.66444397 -62.96054840]
[150.21783447 -47.96719742]
[149.77124023 -32.97385025]
[157.57899475 -45.78161240]
[169.44175720 -54.96175003]
[183.79875183 -59.30646133]
[198.76109314 -58.24412155]
[212.36019897 -51.91450119]
[222.80690002 -41.15037155]
[228.72674561 -27.36793518]
[229.34086609 -12.38051224]
[224.56846619 1.84004521]
[215.03744507 13.42277813]
[202.00178528 20.84378052]
[187.17651367 23.12668800]
[172.51219177 19.97114754]
[159.93814087 11.79232597]
[151.10868835 -0.33371493]
[147.18531799 -14.81395626]
[143.42901611 -0.29189721]
[139.67271423 14.23016167]
[135.91641235 28.75222206]
[147.87989807 19.70372772]
[162.82769775 18.45347023]
[176.12808228 25.38885498]
[183.65980530 38.36087799]
[183.08905029 53.35001373]
[174.59268188 65.71171570]
[160.80339050 71.61558533]
[145.99394226 69.23223114]
[134.75321960 59.30016708]
[130.56425476 44.89669800]
[124.90146637 58.78672409]
[119.23867798 72.67675018]
[113.57588959 86.56678009]
[119.09855652 99.96253967]
[113.62848663 113.37985992]
[100.31414032 119.09600830]
[94.65135193 132.98603821]
[88.98856354 146.87606812]
[83.32577515 160.76608276]
[78.71176910 175.03881836]
[75.28070831 189.64114380]
[71.95845032 204.26860046]
[68.63618469 218.89607239]
[65.31392670 233.52352905]
[61.99166870 248.15098572]
[59.87704468 263.00119019]
[66.77922821 277.23742676]
[58.29810333 289.48159790]
[57.40528870 304.45501709]
[56.51247025 319.42840576]
[55.61965561 334.40182495]
[54.72684097 349.37521362]
[53.83402252 364.34863281]
[52.94120789 379.32202148]
[67.10031891 384.61456299]
[79.06936646 393.84677124]
[87.78406525 406.19769287]
[92.46951294 420.56912231]
[92.70907593 435.68313599]
[88.48146057 450.19586182]
[80.16258240 462.81677246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 203]
[13 202]
[14 201]
[15 200]
[16 199]
[17 198]
[18 197]
[20 195]
[32 194]
[33 193]
[34 192]
[35 191]
[36 190]
[38 189]
[49 188]
[50 187]
[51 186]
[52 185]
[55 182]
[56 181]
[57 180]
[58 179]
[59 169]
[60 168]
[61 167]
[62 166]
[63 150]
[64 149]
[65 148]
[68 145]
[69 144]
[70 126]
[71 125]
[72 124]
[73 123]
[74 122]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
