%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxAGUUCGGUUGGGGUACCGGAGGUACUGAAAAAGUUUUUCCAUAAUCUUUUUGGUAAAGUAUUGAAACAGUUUCAAUUUAAUAUCCGAUUUAGGAUAUAUA\
) } def
/len { sequence length } bind def

/coor [
[92.20944214 681.36199951]
[77.95543671 676.66479492]
[64.11968994 670.84997559]
[50.78966904 663.95428467]
[38.04965591 656.02130127]
[25.98019981 647.10119629]
[14.65760612 637.25036621]
[4.15346003 626.53106689]
[-5.46582556 615.01110840]
[-14.13943386 602.76330566]
[-21.81252670 589.86511230]
[-28.43659210 576.39807129]
[-33.96974945 562.44726562]
[-38.37701416 548.10101318]
[-41.63052750 533.44989014]
[-43.70971298 518.58660889]
[-44.60142899 503.60513306]
[-44.30003357 488.60015869]
[-42.80743790 473.66656494]
[-40.13307571 458.89874268]
[-36.29385757 444.39010620]
[-31.31405258 430.23236084]
[-25.22514725 416.51504517]
[-18.06563950 403.32482910]
[-9.88079166 390.74514771]
[-0.72235376 378.85552979]
[9.35177135 367.73114014]
[20.27789116 357.44232178]
[31.98692513 348.05410767]
[44.40484619 339.62585449]
[57.45314026 332.21084595]
[71.04930878 325.85598755]
[85.10739899 320.60147095]
[99.53852844 316.48046875]
[114.25144958 313.51904297]
[112.46898651 298.62533569]
[110.68651581 283.73159790]
[106.77045441 277.46374512]
[108.99008942 268.60308838]
[107.42956543 253.68447876]
[105.86904144 238.76588440]
[104.30852509 223.84727478]
[102.74800110 208.92866516]
[101.18747711 194.01007080]
[90.14099884 187.37644958]
[84.85327911 175.41308594]
[87.45970917 162.39704895]
[97.22845459 153.12417603]
[95.89022064 138.18399048]
[94.55198669 123.24380493]
[93.21375275 108.30361938]
[89.67407990 93.72724152]
[84.01129150 79.83721924]
[78.34850311 65.94718933]
[72.68572235 52.05716324]
[67.02293396 38.16713715]
[61.36014557 24.27710915]
[55.69736099 10.38708210]
[40.55857468 8.20432568]
[28.62375259 -1.20082319]
[23.03615570 -15.22384548]
[25.20338631 -30.06160355]
[34.44431305 -41.74367905]
[28.78152847 -55.63370514]
[23.11874199 -69.52372742]
[17.45595551 -83.41375732]
[5.08137178 -93.27176666]
[7.44133759 -107.97821808]
[1.77855098 -121.86824799]
[-12.75254536 -118.06006622]
[-27.65640068 -116.18120575]
[-42.67798996 -116.26382446]
[-57.56027985 -118.30651093]
[-72.04860687 -122.27430725]
[-85.89505768 -128.09931946]
[-98.86270905 -135.68186951]
[-110.72966003 -144.89221191]
[-121.29284668 -155.57275391]
[-130.37153625 -167.54074097]
[-137.81036377 -180.59136963]
[-143.48205566 -194.50132751]
[-147.28953552 -209.03260803]
[-149.16769409 -223.93655396]
[-149.08435059 -238.95812988]
[-147.04095459 -253.84031677]
[-143.07247925 -268.32846069]
[-137.24681091 -282.17465210]
[-129.66363525 -295.14193726]
[-120.45272064 -307.00842285]
[-109.77167511 -317.57113647]
[-97.80326843 -326.64923096]
[-84.75228882 -334.08743286]
[-70.84205627 -339.75845337]
[-56.31059647 -343.56527710]
[-41.40656281 -345.44271851]
[-26.38498116 -345.35864258]
[-11.50288868 -343.31454468]
[2.98506117 -339.34536743]
[16.83095932 -333.51904297]
[29.79788589 -325.93527222]
[41.66395950 -316.72378540]
[52.22613525 -306.04223633]
[61.30368042 -294.07339478]
[68.74126434 -281.02206421]
[74.41162872 -267.11157227]
[78.21773529 -252.57992554]
[80.09446716 -237.67579651]
[80.00969696 -222.65422058]
[77.96488953 -207.77221680]
[73.99502563 -193.28446960]
[68.16803741 -179.43884277]
[60.58363342 -166.47227478]
[51.37158966 -154.60664368]
[40.68954086 -144.04496765]
[28.72026634 -134.96800232]
[15.66857815 -127.53103638]
[21.33136368 -113.64100647]
[33.30090714 -104.77650452]
[31.34598160 -89.07654572]
[37.00876617 -75.18651581]
[42.67155457 -61.29648972]
[48.33434296 -47.40646362]
[63.10894012 -45.51521301]
[75.03248596 -36.42208481]
[80.84201813 -22.48954391]
[78.88488007 -7.42082024]
[69.58738708 4.72429562]
[75.25017548 18.61432266]
[80.91295624 32.50434875]
[86.57574463 46.39437485]
[92.23853302 60.28440475]
[97.90132141 74.17443085]
[103.56410217 88.06446075]
[104.84874725 73.11956787]
[110.23809052 59.12117767]
[119.30710602 47.17325211]
[131.34057617 38.21805954]
[145.38951111 32.96184158]
[160.34591675 31.81912613]
[175.03028870 34.88003159]
[188.28456116 41.90316391]
[199.06343079 52.33464813]
[206.51684570 65.35181427]
[210.05699158 79.92807770]
[209.40467834 94.91388702]
[204.61134338 109.12740326]
[196.05502319 121.44768524]
[184.41050720 130.90310669]
[170.59611511 136.74797058]
[155.70130920 138.52134705]
[140.90075684 136.08334351]
[127.36170197 129.62626648]
[116.15188599 119.65931702]
[108.15393829 106.96538544]
[109.49217224 121.90557098]
[110.83040619 136.84574890]
[112.16864014 151.78593445]
[125.79573822 162.75505066]
[127.24491882 179.84933472]
[116.10607910 192.44953918]
[117.66660309 207.36814880]
[119.22712708 222.28674316]
[120.78765106 237.20535278]
[122.34817505 252.12396240]
[123.90869904 267.04257202]
[125.58023834 281.94912720]
[127.36270142 296.84286499]
[129.14517212 311.73657227]
[144.14140320 311.14242554]
[159.13743591 311.74160767]
[174.03846741 313.53036499]
[188.75025940 316.49734497]
[203.17982483 320.62380981]
[217.23593140 325.88366699]
[230.82969666 332.24368286]
[243.87518311 339.66360474]
[256.28991699 348.09655762]
[267.99539185 357.48919678]
[278.91760254 367.78216553]
[288.98751831 378.91036987]
[298.14144897 390.80346680]
[306.32153320 403.38623047]
[313.47607422 416.57913208]
[319.55978394 430.29879761]
[324.53421021 444.45840454]
[328.36795044 458.96850586]
[331.03671265 473.73730469]
[332.52365112 488.67147827]
[332.81936646 503.67654419]
[331.92199707 518.65771484]
[329.83718872 533.52020264]
[326.57812500 548.17004395]
[322.16540527 562.51470947]
[316.62698364 576.46337891]
[309.99783325 589.92791748]
[302.31985474 602.82324219]
[293.64160156 615.06774902]
[284.01794434 626.58404541]
[273.50976562 637.29937744]
[262.18344116 647.14593506]
[250.11059570 656.06146240]
[237.36758423 663.98962402]
[224.03495789 670.88024902]
[210.19700623 676.68981934]
[195.94122314 681.38165283]
[181.35774231 684.92596436]
[166.53877258 687.30041504]
[151.57798767 688.48999023]
[136.56999207 688.48712158]
[121.60965729 687.29187012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 168]
[36 167]
[37 166]
[39 165]
[40 164]
[41 163]
[42 162]
[43 161]
[44 160]
[48 157]
[49 156]
[50 155]
[51 154]
[52 133]
[53 132]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[63 122]
[64 121]
[65 120]
[66 119]
[68 117]
[69 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
