%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[128.67593384 661.60668945]
[115.48950195 654.44714355]
[102.76408386 646.49700928]
[90.54700470 637.78588867]
[78.88372040 628.34613037]
[67.81761169 618.21289062]
[57.38985443 607.42388916]
[47.63923264 596.01922607]
[38.60202408 584.04138184]
[30.31184578 571.53479004]
[22.79953957 558.54614258]
[16.09305000 545.12359619]
[10.21732807 531.31719971]
[5.19423103 517.17828369]
[1.04244494 502.75942993]
[-2.22258520 488.11425781]
[-4.58871269 473.29730225]
[-6.04713583 458.36367798]
[-6.59242868 443.36886597]
[-6.22256327 428.36874390]
[-4.93891525 413.41906738]
[-2.74625945 398.57543945]
[0.34724647 383.89309692]
[4.33009481 369.42666626]
[9.18746948 355.22994995]
[14.90129948 341.35577393]
[21.45032883 327.85571289]
[28.81019592 314.78005981]
[36.95352173 302.17739868]
[45.85000992 290.09460449]
[55.46656799 278.57669067]
[65.76741791 267.66644287]
[76.71424103 257.40447998]
[88.26631927 247.82896423]
[100.38066864 238.97552490]
[113.01222229 230.87710571]
[126.11400604 223.56381226]
[139.63725281 217.06285095]
[133.97447205 203.17282104]
[128.31169128 189.28280640]
[122.64890289 175.39277649]
[116.98611450 161.50274658]
[105.01657104 152.63824463]
[106.97149658 136.93829346]
[101.30870819 123.04825592]
[95.64591980 109.15823364]
[89.92860413 103.47626495]
[90.00392914 95.01900482]
[84.54856873 81.04620361]
[76.22687531 93.52616119]
[61.29491043 94.95324707]
[50.75997543 84.27545929]
[52.38802338 69.36407471]
[64.97891998 61.21120453]
[79.24992371 65.82571411]
[74.84893036 51.48586655]
[70.44792938 37.14601898]
[66.04693604 22.80617142]
[61.64593506 8.46632385]
[49.09937286 3.56750822]
[41.77201462 -7.50137806]
[42.15205383 -20.57569122]
[49.87679291 -30.88869095]
[45.68978119 -45.29247284]
[41.50276947 -59.69625473]
[26.74137878 -56.96130753]
[11.78102493 -55.70972824]
[-3.22960305 -55.95396042]
[-18.14131927 -57.69157410]
[-32.80592346 -60.90530014]
[-47.07766342 -65.56319427]
[-60.81470108 -71.61897278]
[-73.88050842 -79.01244354]
[-86.14521790 -87.67012024]
[-97.48694611 -97.50596619]
[-107.79296875 -108.42221832]
[-116.96084595 -120.31038666]
[-124.89948273 -133.05232239]
[-131.52995300 -146.52136230]
[-136.78637695 -160.58367920]
[-140.61651611 -175.09948730]
[-142.98228455 -189.92453003]
[-143.86018372 -204.91145325]
[-143.24148560 -219.91131592]
[-141.13232422 -234.77502441]
[-137.55369568 -249.35487366]
[-132.54113770 -263.50595093]
[-126.14447784 -277.08761597]
[-118.42729950 -289.96487427]
[-109.46628571 -302.00973511]
[-99.35050201 -313.10250854]
[-88.18049622 -323.13293457]
[-76.06726837 -332.00131226]
[-63.13122559 -339.61953735]
[-49.50092316 -345.91189575]
[-35.31182861 -350.81579590]
[-20.70497131 -354.28253174]
[-5.82551908 -356.27764893]
[9.17864513 -356.78131104]
[24.15839767 -355.78854370]
[38.96485901 -353.30917358]
[53.45087433 -349.36785889]
[67.47246552 -344.00375366]
[80.89028931 -337.27020264]
[93.57097626 -329.23410034]
[105.38849640 -319.97534180]
[116.22540283 -309.58590698]
[125.97399902 -298.16909790]
[134.53738403 -285.83837891]
[141.83045959 -272.71624756]
[147.78073120 -258.93319702]
[152.32905579 -244.62615967]
[155.43025208 -229.93734741]
[157.05348206 -215.01274109]
[157.18260193 -200.00068665]
[155.81636047 -185.05036926]
[152.96830750 -170.31037903]
[148.66676331 -155.92721558]
[142.95446777 -142.04383850]
[135.88821411 -128.79821777]
[127.53820801 -116.32199097]
[117.98745728 -104.73917389]
[107.33087158 -94.16487122]
[95.67436981 -84.70418549]
[83.13379669 -76.45114136]
[69.83379364 -69.48777008]
[55.90655136 -63.88326645]
[60.09356308 -49.47948456]
[64.28057098 -35.07570267]
[79.35197449 -27.61301994]
[84.46345520 -11.23658276]
[75.98577881 4.06532526]
[80.38677979 18.40517235]
[84.78778076 32.74501801]
[89.18877411 47.08486557]
[93.58977509 61.42471313]
[98.52136993 75.59085083]
[103.97672272 89.56364441]
[109.53594971 103.49544525]
[115.19873810 117.38547516]
[120.86152649 131.27549744]
[133.23609924 141.13349915]
[130.87614441 155.83996582]
[136.53892517 169.72998047]
[142.20172119 183.62001038]
[147.86450195 197.51004028]
[153.52728271 211.40007019]
[167.74110413 206.59297180]
[182.22154236 202.66134644]
[196.91474915 199.61982727]
[211.76603699 197.47970581]
[226.72016907 196.24897766]
[241.72151184 195.93220520]
[256.71426392 196.53056335]
[271.64266968 198.04182434]
[286.45117188 200.46038818]
[301.08465576 203.77722168]
[315.48873901 207.98001099]
[329.60980225 213.05311584]
[343.39532471 218.97767639]
[356.79403687 225.73161316]
[369.75604248 233.28985596]
[382.23318481 241.62423706]
[394.17901611 250.70378113]
[405.54907227 260.49472046]
[416.30111694 270.96057129]
[426.39511108 282.06246948]
[435.79351807 293.75909424]
[444.46133423 306.00692749]
[452.36639404 318.76040649]
[459.47921753 331.97210693]
[465.77337646 345.59283447]
[471.22546387 359.57192993]
[475.81518555 373.85745239]
[479.52545166 388.39617920]
[482.34246826 403.13406372]
[484.25576782 418.01626587]
[485.25823975 432.98742676]
[485.34616089 447.99188232]
[484.51913452 462.97375488]
[482.78033447 477.87734985]
[480.13616943 492.64724731]
[476.59646606 507.22842407]
[472.17443848 521.56671143]
[466.88650513 535.60876465]
[460.75234985 549.30230713]
[453.79479980 562.59637451]
[446.03973389 575.44165039]
[437.51596069 587.79016113]
[428.25524902 599.59606934]
[418.29202271 610.81549072]
[407.66333008 621.40661621]
[396.40875244 631.33007812]
[384.57012939 640.54895020]
[372.19149780 649.02893066]
[359.31890869 656.73852539]
[346.00027466 663.64898682]
[332.28509521 669.73461914]
[318.22445679 674.97283936]
[303.87060547 679.34411621]
[289.27694702 682.83215332]
[274.49780273 685.42401123]
[259.58816528 687.11010742]
[244.60342407 687.88403320]
[229.59939575 687.74304199]
[214.63186646 686.68762207]
[199.75653076 684.72167969]
[185.02870178 681.85247803]
[170.50318909 678.09075928]
[156.23403931 673.45056152]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 147]
[39 146]
[40 145]
[41 144]
[42 143]
[44 141]
[45 140]
[46 139]
[48 138]
[49 137]
[55 136]
[56 135]
[57 134]
[58 133]
[59 132]
[63 129]
[64 128]
[65 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
