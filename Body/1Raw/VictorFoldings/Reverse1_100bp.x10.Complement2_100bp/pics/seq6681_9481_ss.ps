%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[189.25064087 282.33474731]
[191.73867798 267.53378296]
[195.44047546 252.98880005]
[200.33076477 238.79920959]
[206.37612915 225.06192017]
[213.53526306 211.87077332]
[221.75926208 199.31588745]
[209.93299866 190.08877563]
[198.10673523 180.86167908]
[186.28045654 171.63458252]
[167.17343140 175.43400574]
[151.18568420 163.77658081]
[148.89073181 143.81629944]
[136.66424561 135.12648010]
[124.43775177 126.43664551]
[112.21126556 117.74682617]
[99.98477936 109.05699921]
[96.12954712 109.15457153]
[92.25002289 107.55233765]
[89.10632324 104.27755737]
[87.41812897 99.69609070]
[75.59185791 90.46898651]
[59.95203400 88.08017731]
[54.67714691 74.15090179]
[42.85087585 64.92380524]
[31.02460670 55.69670486]
[19.19833755 46.46960449]
[7.37206745 37.24250793]
[-4.45420218 28.01540947]
[-16.28047180 18.78831100]
[-31.75970268 20.52934265]
[-43.62177658 11.00328445]
[-45.18619156 -3.76452541]
[-57.01246262 -12.99162388]
[-68.83872986 -22.21872139]
[-80.66500092 -31.44581985]
[-90.80770874 -20.38392258]
[-101.79723358 -10.16283989]
[-113.56407928 -0.84719265]
[-126.03387451 7.50412130]
[-139.12776184 14.83830166]
[-152.76295471 21.10897827]
[-166.85327148 26.27650642]
[-181.30960083 30.30821228]
[-196.04054260 33.17860794]
[-210.95298767 34.86954880]
[-225.95262146 35.37033844]
[-240.94464111 34.67781067]
[-255.83424377 32.79634857]
[-270.52728271 29.73784447]
[-284.93087769 25.52163506]
[-298.95397949 20.17437744]
[-312.50787354 13.72988129]
[-325.50692749 6.22888947]
[-337.86892700 -2.28117418]
[-349.51571655 -11.74650478]
[-360.37365723 -22.10725975]
[-370.37411499 -33.29793167]
[-379.45382690 -45.24777222]
[-387.55541992 -57.88122559]
[-394.62768555 -71.11841583]
[-400.62588501 -84.87566376]
[-405.51208496 -99.06597900]
[-409.25540161 -113.59964752]
[-411.83218384 -128.38478088]
[-413.22613525 -143.32791138]
[-413.42846680 -158.33454895]
[-412.43783569 -173.30981445]
[-410.26052856 -188.15904236]
[-406.91033936 -202.78834534]
[-402.40844727 -217.10522461]
[-396.78329468 -231.01916504]
[-390.07043457 -244.44218445]
[-382.31234741 -257.28945923]
[-373.55804443 -269.47970581]
[-363.86291504 -280.93588257]
[-353.28820801 -291.58557129]
[-341.90081787 -301.36141968]
[-329.77270508 -310.20162964]
[-316.98059082 -318.05032349]
[-303.60531616 -324.85784912]
[-289.73147583 -330.58117676]
[-275.44677734 -335.18414307]
[-260.84152222 -338.63760376]
[-246.00804138 -340.91976929]
[-231.04014587 -342.01617432]
[-216.03245544 -341.91992188]
[-201.07984924 -340.63159180]
[-186.27688599 -338.15933228]
[-171.71711731 -334.51879883]
[-157.49263000 -329.73297119]
[-143.69334412 -323.83215332]
[-130.40650940 -316.85360718]
[-117.71613312 -308.84146118]
[-105.70243073 -299.84640503]
[-94.44137573 -289.92529297]
[-84.00415802 -279.14080811]
[-74.45677185 -267.56121826]
[-65.85957336 -255.25964355]
[-58.26691437 -242.31393433]
[-51.72681046 -228.80589294]
[-46.28060150 -214.82093811]
[-41.96272278 -200.44749451]
[-38.80047226 -185.77642822]
[-36.81385040 -170.90048218]
[-36.01540756 -155.91374207]
[-36.41019821 -140.91093445]
[-37.99572372 -125.98691559]
[-40.76196289 -111.23605347]
[-44.69142151 -96.75160217]
[-49.75925827 -82.62512970]
[-55.93343353 -68.94596100]
[-63.17490768 -55.80057907]
[-71.43790436 -43.27209091]
[-59.61163330 -34.04499054]
[-47.78536606 -24.81789398]
[-35.95909500 -15.59079552]
[-21.25421906 -17.66497040]
[-9.12925529 -8.47584915]
[-7.05337381 6.96204138]
[4.77289581 16.18914032]
[16.59916496 25.41623688]
[28.42543602 34.64333725]
[40.25170517 43.87043381]
[52.07797623 53.09753418]
[63.90424347 62.32463074]
[78.69817352 64.05345917]
[84.81896210 78.64272308]
[96.64522552 87.86981964]
[108.67460632 96.83051300]
[120.90109253 105.52033997]
[133.12757874 114.21015930]
[145.35406494 122.89998627]
[157.58055115 131.58981323]
[167.32424927 127.24421692]
[177.91192627 127.33447266]
[187.43374634 131.77728271]
[194.19993591 139.71022034]
[197.04057312 149.65840149]
[195.50755310 159.80831909]
[207.33383179 169.03541565]
[219.16009521 178.26251221]
[230.98635864 187.48960876]
[241.16416931 176.45910645]
[252.21809387 166.30676270]
[264.07266235 157.10192871]
[276.64685059 148.90748596]
[289.85479736 141.77940369]
[303.60629272 135.76638794]
[317.80734253 130.90950012]
[332.36099243 127.24192047]
[347.16778564 124.78871155]
[362.12658691 123.56662750]
[377.13525391 123.58401489]
[392.09118652 124.84075928]
[406.89224243 127.32826996]
[421.43734741 131.02955627]
[435.62713623 135.91932678]
[449.36462402 141.96420288]
[462.55603027 149.12286377]
[475.11120605 157.34642029]
[486.94442749 166.57870483]
[497.97479248 176.75662231]
[508.12701416 187.81068420]
[517.33172607 199.66535950]
[525.52600098 212.23965454]
[532.65393066 225.44769287]
[538.66680908 239.19923401]
[543.52349854 253.40036011]
[547.19091797 267.95404053]
[549.64392090 282.76086426]
[550.86584473 297.71969604]
[550.84826660 312.72833252]
[549.59136963 327.68426514]
[547.10363770 342.48532104]
[543.40222168 357.03036499]
[538.51226807 371.22009277]
[532.46722412 384.95751953]
[525.30841064 398.14883423]
[517.08471680 410.70391846]
[507.85229492 422.53698730]
[497.67422485 433.56726074]
[486.62005615 443.71932983]
[474.76525879 452.92388916]
[462.19085693 461.11804199]
[448.98275757 468.24581909]
[435.23114014 474.25851440]
[421.02993774 479.11505127]
[406.47622681 482.78228760]
[391.66937256 485.23513794]
[376.71051025 486.45684814]
[361.70187378 486.43911743]
[346.74597168 485.18200684]
[331.94494629 482.69415283]
[317.39993286 478.99252319]
[303.21029663 474.10241699]
[289.47293091 468.05722046]
[276.28170776 460.89822388]
[263.72671509 452.67437744]
[251.89372253 443.44180298]
[240.86358643 433.26361084]
[230.71163940 422.20932007]
[221.50723267 410.35443115]
[213.31323242 397.77993774]
[206.18562317 384.57174683]
[200.17309570 370.82003784]
[195.31671143 356.61880493]
[191.64965820 342.06503296]
[189.19699097 327.25814819]
[187.97543335 312.29928589]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 143]
[8 142]
[9 141]
[10 140]
[13 134]
[14 133]
[15 132]
[16 131]
[17 130]
[21 129]
[22 128]
[24 126]
[25 125]
[26 124]
[27 123]
[28 122]
[29 121]
[30 120]
[33 117]
[34 116]
[35 115]
[36 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
