%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[133.69131470 478.98706055]
[146.65971375 471.10131836]
[143.99392700 456.34008789]
[141.32812500 441.57888794]
[138.44285583 426.85897827]
[135.33874512 412.18368530]
[130.87910461 406.29019165]
[132.29937744 397.26684570]
[129.41410828 382.54696655]
[126.52883911 367.82705688]
[123.64356232 353.10717773]
[120.75829315 338.38726807]
[110.71736908 327.38595581]
[115.65570068 312.35519409]
[105.24853516 323.15756226]
[90.30065918 321.90823364]
[81.83107758 309.52816772]
[86.08325958 295.14349365]
[99.92264557 289.35803223]
[113.14638519 296.43533325]
[111.36392212 281.54162598]
[109.58145142 266.64788818]
[107.79898834 251.75418091]
[106.01652527 236.86045837]
[104.23405457 221.96675110]
[95.03918457 210.24908447]
[101.08177185 195.62725830]
[99.29930878 180.73355103]
[96.16519165 177.12988281]
[95.26159668 171.51913452]
[97.69231415 165.37071228]
[96.35408020 150.43052673]
[92.62636566 144.04882812]
[95.10884094 135.25820923]
[93.99318695 120.29975128]
[83.47323608 113.22980499]
[78.87767029 101.41733551]
[81.85388184 89.09679413]
[91.33497620 80.68474579]
[90.44215393 65.71134186]
[89.54933929 50.73793793]
[88.65652466 35.76453018]
[87.76371002 20.79112434]
[85.75969696 5.92559671]
[82.65558624 -8.74970531]
[79.55147552 -23.42500877]
[76.44736481 -38.10031128]
[73.34325409 -52.77561188]
[69.69516754 -67.32523346]
[65.50815582 -81.72901917]
[61.32114410 -96.13279724]
[57.13413239 -110.53658295]
[46.22704315 -117.42121124]
[43.03620148 -129.50434875]
[48.74483871 -140.16915894]
[44.77274323 -154.63368225]
[40.80064774 -169.09820557]
[35.51047897 -176.54479980]
[36.87880707 -183.80769348]
[33.12250519 -198.32974243]
[23.37676430 -186.92709351]
[8.38102341 -187.28450012]
[-0.81041628 -199.13850403]
[2.57803321 -213.75077820]
[16.04853249 -220.34968567]
[29.67007256 -214.07203674]
[19.60338020 -226.27746582]
[24.95562363 -240.17720032]
[22.28982925 -254.93841553]
[19.62403297 -269.69964600]
[16.95823669 -284.46084595]
[13.31015015 -299.01046753]
[8.69614029 -313.28320312]
[4.08213139 -327.55593872]
[-0.53187793 -341.82867432]
[-5.25201225 -356.06665039]
[-10.07800961 -370.26910400]
[-24.94076347 -367.97354126]
[-39.97633743 -368.29391479]
[-54.72781754 -371.22052002]
[-68.74692535 -376.66439819]
[-81.60762787 -384.46011353]
[-92.91911316 -394.37078857]
[-102.33762360 -406.09524536]
[-109.57696533 -419.27716064]
[-114.41711426 -433.51599121]
[-116.71100616 -448.37899780]
[-116.38892365 -463.41455078]
[-113.46065521 -478.16567993]
[-108.01518250 -492.18417358]
[-100.21799469 -505.04400635]
[-90.30603790 -516.35437012]
[-78.58052826 -525.77154541]
[-65.39778137 -533.00939941]
[-51.15840912 -537.84790039]
[-36.29513550 -540.14013672]
[-21.25963402 -539.81634521]
[-6.50881863 -536.88641357]
[7.50905085 -531.43933105]
[20.36798668 -523.64068604]
[31.67722130 -513.72747803]
[41.09307861 -502.00088501]
[48.32942581 -488.81729126]
[53.16635132 -474.57739258]
[55.45687103 -459.71386719]
[55.13137436 -444.67837524]
[52.19976044 -429.92791748]
[46.75111008 -415.91064453]
[38.95100784 -403.05261230]
[29.03648376 -391.74450684]
[17.30883408 -382.32995605]
[4.12444592 -375.09512329]
[8.95044327 -360.89266968]
[14.07881737 -355.57086182]
[13.74085522 -346.44268799]
[18.35486412 -332.16995239]
[22.96887398 -317.89721680]
[27.58288383 -303.62448120]
[32.83137131 -317.67630005]
[44.77959824 -326.74490356]
[59.72527695 -328.02032471]
[73.03732300 -321.10736084]
[80.59085846 -308.14801025]
[80.04534149 -293.15795898]
[71.56979370 -280.78195190]
[57.79046631 -274.85488892]
[42.97703171 -277.21331787]
[31.71945572 -287.12664795]
[34.38525009 -272.36541748]
[37.05104446 -257.60421753]
[39.71684265 -242.84300232]
[49.59286118 -231.69340515]
[44.43128967 -216.73783875]
[47.64456558 -202.08604431]
[51.40086365 -187.56399536]
[55.26517105 -173.07029724]
[59.23726654 -158.60577393]
[63.20936203 -144.14125061]
[76.34148407 -132.50018311]
[71.53791809 -114.72358704]
[75.72492981 -100.31980896]
[79.91194153 -85.91602325]
[84.09895325 -71.51224518]
[93.50086975 -83.20001221]
[108.50060272 -83.28923798]
[118.04090881 -71.71414948]
[115.08901978 -57.00747299]
[101.82096863 -50.01042175]
[88.01855469 -55.87972260]
[91.12266541 -41.20442200]
[94.22677612 -26.52911758]
[97.33088684 -11.85381603]
[100.43499756 2.82148671]
[106.58642578 -10.85915375]
[118.69597626 -19.71120644]
[133.59823608 -21.42076302]
[147.39779663 -15.54095364]
[156.48748779 -3.60874438]
[158.49127197 11.25681400]
[152.88537598 25.16990089]
[141.13517761 34.49366760]
[126.31212616 36.79090500]
[112.29094696 31.46111679]
[102.73711395 19.89830971]
[103.62992859 34.87171555]
[104.52275085 49.84511948]
[105.41556549 64.81852722]
[106.30838013 79.79193115]
[118.89916992 90.46150208]
[120.00409698 106.92803955]
[108.95164490 119.18410492]
[110.06729126 134.14254761]
[111.29426575 149.09228516]
[112.63249969 164.03247070]
[114.19302368 178.95108032]
[115.97548676 193.84480286]
[125.29785919 206.62776184]
[119.12777710 220.18428040]
[120.91024017 235.07800293]
[122.69270325 249.97171021]
[124.47517395 264.86541748]
[126.25763702 279.75915527]
[128.04010010 294.65286255]
[130.37559509 309.46994019]
[140.62289429 321.52410889]
[135.47817993 335.50201416]
[138.36344910 350.22189331]
[141.24873352 364.94180298]
[144.13400269 379.66168213]
[147.01927185 394.38156128]
[150.01405334 409.07958984]
[153.11816406 423.75488281]
[157.24584961 428.91952515]
[158.02821350 434.54846191]
[156.08934021 438.91308594]
[158.75514221 453.67431641]
[161.42094421 468.43551636]
[176.32843018 471.28701782]
[189.19709778 479.33450317]
[198.28654480 491.48959351]
[202.36750793 506.10842896]
[200.88807678 521.21392822]
[194.04833984 534.76318359]
[182.77328491 544.92376709]
[168.58778381 550.32153320]
[153.41032410 550.22656250]
[139.29351807 544.65161133]
[128.14654541 534.35064697]
[121.47695923 520.71685791]
[120.18674469 505.59399414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 197]
[3 196]
[4 195]
[5 192]
[6 191]
[8 190]
[9 189]
[10 188]
[11 187]
[12 186]
[14 184]
[20 183]
[21 182]
[22 181]
[23 180]
[24 179]
[25 178]
[27 176]
[28 175]
[31 174]
[32 173]
[34 172]
[35 171]
[39 168]
[40 167]
[41 166]
[42 165]
[43 164]
[44 153]
[45 152]
[46 151]
[47 150]
[48 149]
[49 143]
[50 142]
[51 141]
[52 140]
[55 138]
[56 137]
[57 136]
[59 135]
[60 134]
[66 133]
[68 131]
[69 130]
[70 129]
[71 128]
[72 118]
[73 117]
[74 116]
[75 115]
[76 113]
[77 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
