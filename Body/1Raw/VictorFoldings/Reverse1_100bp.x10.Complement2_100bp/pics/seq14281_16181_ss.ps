%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCCAUCCUAACCACGACACCCACUUUCUCAUACUACCCCACCACCAACACCAUUUGAAAUUAUCACAUCCUUCGACUUAUUAAAUACUUCCUCUCCCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[47.15554810 573.60711670]
[48.11450577 588.84002686]
[42.36121368 602.97729492]
[31.03798103 613.21191406]
[16.39305305 617.51177979]
[1.33418536 615.02313232]
[-11.14867115 606.24017334]
[-18.57703590 592.90667725]
[-19.47600174 577.67004395]
[-13.66707993 563.55554199]
[-2.30363393 553.36560059]
[12.35811424 549.12347412]
[14.80384254 534.32415771]
[17.24956894 519.52490234]
[19.69529724 504.72564697]
[22.14102364 489.92636108]
[8.26647758 477.40478516]
[4.71381521 458.90322876]
[13.09636879 441.86380005]
[30.18929100 433.25173950]
[31.97175598 418.35803223]
[33.75422287 403.46429443]
[35.53668976 388.57058716]
[37.31915283 373.67687988]
[39.10161972 358.78317261]
[40.88408661 343.88943481]
[42.66655350 328.99572754]
[32.79648209 340.29092407]
[18.84140396 345.79147339]
[3.91892076 344.26849365]
[-8.63724899 336.06222534]
[-16.02202415 323.00601196]
[-16.58562851 308.01660156]
[-10.20214939 294.44268799]
[1.70232701 285.31671143]
[16.46830940 282.67742920]
[30.79704094 287.11447144]
[41.48744583 297.63662720]
[46.15126038 311.89318848]
[50.33827209 297.48937988]
[54.52528381 283.08560181]
[58.71229553 268.68182373]
[62.89930725 254.27804565]
[67.08631897 239.87426758]
[71.27333069 225.47047424]
[75.13763428 210.97679138]
[78.67730713 196.40040588]
[82.21697998 181.82403564]
[84.88277435 167.06282043]
[86.66523743 152.16909790]
[88.44770813 137.27539062]
[90.11924744 122.36881256]
[91.67977142 107.45020294]
[93.12918854 92.52040100]
[94.46742249 77.58021545]
[95.80565643 62.64002609]
[84.35155487 72.32524872]
[69.35266876 72.50776672]
[57.66627884 63.10412979]
[54.63525391 48.41355896]
[61.64533234 35.15238571]
[75.49160767 29.38343620]
[89.84373474 33.74419785]
[98.14057159 46.24279022]
[101.02584839 31.52290154]
[103.91111755 16.80300903]
[106.79639435 2.08311796]
[109.68166351 -12.63677311]
[101.13202667 -25.65758324]
[104.26779938 -40.54454422]
[116.73384094 -48.61507416]
[119.61911011 -63.33496475]
[122.50437927 -78.05485535]
[122.95098877 -93.04820251]
[120.94697571 -107.91373444]
[118.94296265 -122.77925873]
[116.93894958 -137.64479065]
[114.82432556 -152.49497986]
[112.59920502 -167.32902527]
[110.37409210 -182.16307068]
[104.20498657 -168.49038696]
[92.77030182 -158.78225708]
[78.27789307 -154.91314697]
[63.52601242 -157.63012695]
[51.36301804 -166.40859985]
[44.13739777 -179.55358887]
[43.24430084 -194.52697754]
[48.85617447 -208.43765259]
[59.88945007 -218.59967041]
[74.21377563 -223.05093384]
[89.06335449 -220.93193054]
[101.57095337 -212.65184021]
[109.32196808 -199.80819702]
[109.76856995 -214.80155945]
[110.21517944 -229.79490662]
[110.66178131 -244.78825378]
[111.10839081 -259.78161621]
[111.55500031 -274.77496338]
[112.00160217 -289.76831055]
[112.44821167 -304.76165771]
[98.87623596 -311.74481201]
[89.68504333 -323.93023682]
[86.69953918 -338.89852905]
[90.51250458 -353.67770386]
[100.36687469 -365.33334351]
[114.30604553 -371.55123901]
[129.56239319 -371.09680176]
[143.10676575 -364.06024170]
[152.24990845 -351.83871460]
[155.17643738 -336.85879517]
[151.30529785 -322.09475708]
[141.40510559 -310.47799683]
[127.44155884 -304.31503296]
[126.99494934 -289.32168579]
[126.54834747 -274.32833862]
[126.10173798 -259.33499146]
[125.65513611 -244.34164429]
[125.20852661 -229.34829712]
[124.76192474 -214.35494995]
[124.31531525 -199.36160278]
[125.20812988 -184.38819885]
[127.43325043 -169.55415344]
[129.65837097 -154.72010803]
[133.75930786 -148.57160950]
[131.80447388 -139.64880371]
[133.80848694 -124.78327179]
[135.81250000 -109.91774750]
[137.81651306 -95.05221558]
[142.68437195 -109.24037933]
[151.01437378 -121.71479797]
[162.25404358 -131.64807129]
[175.65786743 -138.38137817]
[190.33683777 -141.46810913]
[205.31733704 -140.70355225]
[219.60577393 -136.13839722]
[232.25444031 -128.07543945]
[242.42439270 -117.04947662]
[249.44111633 -103.79181671]
[252.83918762 -89.18177795]
[252.39324951 -74.18840790]
[248.13285828 -59.80615997]
[240.34060669 -46.98895645]
[229.53330994 -36.58691025]
[216.42779541 -29.28996086]
[201.89329529 -25.58208275]
[186.89382935 -25.70920944]
[172.42427063 -29.66290665]
[159.44432068 -37.18094254]
[148.81489563 -47.76466751]
[141.24099731 -60.71210861]
[137.22427368 -75.16958618]
[134.33900452 -60.44969177]
[131.45373535 -45.72980118]
[139.95053101 -33.55030823]
[137.23414612 -18.58114243]
[124.40155792 -9.75150108]
[121.51628113 4.96839046]
[118.63101196 19.68828201]
[115.74574280 34.40817261]
[112.86046600 49.12806320]
[110.74584198 63.97826385]
[109.40760803 78.91844940]
[108.06937408 93.85863495]
[110.54403687 101.52991486]
[106.59837341 109.01072693]
[105.03784943 123.92933655]
[107.25749207 132.78997803]
[103.34142303 139.05784607]
[101.55895996 153.95156860]
[99.77648926 168.84529114]
[110.92326355 158.80789185]
[125.82852936 157.12471008]
[138.93299866 164.42355347]
[145.34901428 177.98213196]
[142.68356323 192.74340820]
[131.93080139 203.20181274]
[117.10124207 205.45660400]
[103.72593689 198.66680908]
[96.79335785 185.36370850]
[93.25368500 199.94007874]
[89.71401215 214.51646423]
[91.18518066 219.52473450]
[90.64243317 224.13545227]
[88.57444000 227.64805603]
[85.67710876 229.65748596]
[81.49009705 244.06127930]
[77.30308533 258.46505737]
[73.11607361 272.86883545]
[68.92906952 287.27261353]
[64.74205780 301.67639160]
[60.55504227 316.08016968]
[57.56026840 330.77819824]
[55.77780151 345.67190552]
[53.99533844 360.56561279]
[52.21287155 375.45935059]
[50.43040466 390.35305786]
[48.64793777 405.24676514]
[46.86547470 420.14050293]
[45.08300781 435.03421021]
[54.71825790 441.24517822]
[61.31016541 450.56115723]
[63.93766785 461.61413574]
[62.25841522 472.79843140]
[56.55287933 482.50399780]
[47.67834473 489.34802246]
[36.94029617 492.37210083]
[34.49456787 507.17135620]
[32.04883957 521.97064209]
[29.60311317 536.76989746]
[27.15738487 551.56915283]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 210]
[13 209]
[14 208]
[15 207]
[16 206]
[20 199]
[21 198]
[22 197]
[23 196]
[24 195]
[25 194]
[26 193]
[27 192]
[39 191]
[40 190]
[41 189]
[42 188]
[43 187]
[44 186]
[45 185]
[46 181]
[47 180]
[48 179]
[49 170]
[50 169]
[51 168]
[52 166]
[53 165]
[54 163]
[55 162]
[56 161]
[64 160]
[65 159]
[66 158]
[67 157]
[68 156]
[71 153]
[72 152]
[73 151]
[74 128]
[75 127]
[76 126]
[77 125]
[78 123]
[79 122]
[80 121]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
