%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[263.76980591 316.47937012]
[249.45571899 312.36157227]
[245.79559326 296.96954346]
[235.63204956 285.93765259]
[220.78576660 285.58648682]
[210.32133484 274.54336548]
[210.79034424 258.97360229]
[200.62680054 247.94172668]
[190.46325684 236.90983582]
[180.29971313 225.87796021]
[181.41346741 240.83656311]
[174.35697937 254.07308960]
[161.31674194 261.48608398]
[146.33345032 260.77853394]
[134.04980469 252.16969299]
[128.27204895 238.32708740]
[130.79048157 223.54000854]
[140.82473755 212.39041138]
[155.26557922 208.33308411]
[169.63859558 212.62539673]
[161.04003906 200.33456421]
[152.44146729 188.04373169]
[143.84291077 175.75288391]
[135.24433899 163.46205139]
[126.64577484 151.17121887]
[118.04721069 138.88037109]
[109.44864655 126.58953857]
[100.85008240 114.29869843]
[88.26311493 108.21102142]
[86.85907745 94.29986572]
[78.26051331 82.00902557]
[68.85836029 70.32144928]
[58.69481277 59.28956985]
[48.53126907 48.25769424]
[38.36772156 37.22581482]
[27.96034813 26.42365837]
[17.31433868 15.85661125]
[6.51218224 5.44923830]
[-4.44372702 -4.79615355]
[-15.39963627 -15.04154491]
[-26.35554504 -25.28693581]
[-37.31145477 -35.53232956]
[-48.46744919 -25.49115372]
[-60.44534302 -16.44618034]
[-73.15644836 -8.46437645]
[-86.50666046 -1.60483754]
[-100.39714050 4.08164978]
[-114.72503662 8.55298424]
[-129.38427734 11.77606106]
[-144.26631165 13.72701740]
[-159.26098633 14.39140892]
[-174.25724792 13.76431656]
[-189.14410400 11.85038280]
[-203.81130981 8.66377735]
[-218.15028381 4.22809505]
[-232.05485535 -1.42382455]
[-245.42208862 -8.25013542]
[-258.15301514 -16.20029831]
[-270.15338135 -25.21545029]
[-281.33432007 -35.22884750]
[-291.61303711 -46.16634750]
[-300.91348267 -57.94697952]
[-309.16677856 -70.48351288]
[-316.31179810 -83.68314362]
[-322.29565430 -97.44812775]
[-327.07403564 -111.67656708]
[-330.61157227 -126.26310730]
[-332.88208008 -141.09976196]
[-333.86877441 -156.07667542]
[-333.56427002 -171.08296204]
[-331.97088623 -186.00752258]
[-329.10040283 -200.73986816]
[-324.97409058 -215.17089844]
[-319.62246704 -229.19380188]
[-313.08514404 -242.70472717]
[-305.41058350 -255.60365295]
[-296.65554810 -267.79507446]
[-286.88488770 -279.18875122]
[-276.17095947 -289.70028687]
[-264.59301758 -299.25189209]
[-252.23686218 -307.77285767]
[-239.19392395 -315.20004272]
[-225.56079102 -321.47851562]
[-211.43838501 -326.56173706]
[-196.93128967 -330.41213989]
[-182.14688110 -333.00115967]
[-167.19465637 -334.30963135]
[-152.18528748 -334.32788086]
[-137.22990417 -333.05578613]
[-122.43925476 -330.50277710]
[-107.92282867 -326.68771362]
[-93.78810120 -321.63885498]
[-80.13972473 -315.39358521]
[-67.07875824 -307.99813843]
[-54.70188522 -299.50729370]
[-43.10075760 -289.98388672]
[-32.36125565 -279.49844360]
[-22.56290054 -268.12857056]
[-13.77823162 -255.95849609]
[-6.07229185 -243.07827759]
[0.49786732 -229.58329773]
[5.88360167 -215.57347107]
[10.04503536 -201.15252686]
[12.95135975 -186.42721558]
[14.58105564 -171.50657654]
[14.92205811 -156.50106812]
[13.97184277 -141.52178955]
[11.73744297 -126.67966461]
[8.23540306 -112.08455658]
[3.49165130 -97.84453583]
[-2.45869088 -84.06502533]
[-9.57156849 -70.84805298]
[-17.79431915 -58.29146576]
[-27.06606293 -46.48823929]
[-16.11015511 -36.24284744]
[-5.15424490 -25.99745369]
[5.80166435 -15.75206280]
[16.75757408 -5.50667143]
[21.47606087 -4.76848507]
[25.78092003 -1.05833483]
[27.88138580 5.21060276]
[38.52739334 15.77765083]
[42.03567886 16.13019562]
[45.54750443 18.19952583]
[48.25783539 21.96879578]
[49.39959717 27.06226921]
[59.56314468 38.09414673]
[69.72669220 49.12602234]
[79.89023590 60.15790176]
[78.77647400 45.19930649]
[85.83296967 31.96277237]
[98.87319946 24.54978371]
[113.85650635 25.25733376]
[126.14014435 33.86618042]
[131.91789246 47.70877838]
[129.39945984 62.49585342]
[119.36521149 73.64546204]
[104.92436218 77.70278168]
[90.55135345 73.41046143]
[99.14991760 85.70130157]
[111.73688507 91.78897858]
[113.14092255 105.70013428]
[121.73948669 117.99097443]
[130.33805847 130.28181458]
[138.93661499 142.57264709]
[147.53518677 154.86347961]
[156.13374329 167.15432739]
[164.73231506 179.44515991]
[173.33087158 191.73599243]
[181.92942810 204.02684021]
[191.33158875 215.71441650]
[201.49513245 226.74629211]
[211.65867615 237.77816772]
[221.82221985 248.81004333]
[237.37818909 249.61618042]
[247.52832031 260.94885254]
[246.66392517 275.77410889]
[256.82748413 286.80599976]
[271.86853027 291.71289062]
[274.80166626 306.31582642]
[286.97207642 297.51708984]
[300.09771729 290.21960449]
[313.99435425 284.52575684]
[328.46691895 280.51553345]
[343.31216431 278.24520874]
[358.32177734 277.74664307]
[373.28497314 279.02685547]
[387.99172974 282.06787109]
[402.23556519 286.82696533]
[415.81652832 293.23739624]
[428.54400635 301.20910645]
[440.23925781 310.63021851]
[450.73812866 321.36846924]
[459.89321899 333.27313232]
[467.57601929 346.17703247]
[473.67868042 359.89904785]
[478.11553955 374.24655151]
[480.82427979 389.01812744]
[481.76687622 404.00637817]
[480.93011475 419.00091553]
[478.32574463 433.79122925]
[473.99029541 448.16970825]
[467.98468018 461.93447876]
[460.39315796 474.89230347]
[451.32235718 486.86126709]
[440.89956665 497.67340088]
[429.27111816 507.17684937]
[416.60025024 515.23822021]
[403.06488037 521.74438477]
[388.85498047 526.60394287]
[374.17007446 529.74871826]
[359.21627808 531.13452148]
[344.20355225 530.74194336]
[329.34262085 528.57647705]
[314.84213257 524.66851807]
[300.90563965 519.07293701]
[287.72879028 511.86831665]
[275.49655151 503.15573120]
[264.38067627 493.05752563]
[254.53721619 481.71545410]
[246.10432434 469.28878784]
[239.20039368 455.95190430]
[233.92236328 441.89205933]
[230.34431458 427.30667114]
[228.51649475 412.40045166]
[228.46453857 397.38265991]
[230.18917847 382.46417236]
[233.66622925 367.85437012]
[238.84684753 353.75833130]
[245.65832520 340.37402344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 160]
[3 158]
[4 157]
[7 154]
[8 153]
[9 152]
[10 151]
[20 150]
[21 149]
[22 148]
[23 147]
[24 146]
[25 145]
[26 144]
[27 143]
[28 142]
[30 140]
[31 139]
[32 129]
[33 128]
[34 127]
[35 126]
[36 122]
[37 121]
[38 118]
[39 117]
[40 116]
[41 115]
[42 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
