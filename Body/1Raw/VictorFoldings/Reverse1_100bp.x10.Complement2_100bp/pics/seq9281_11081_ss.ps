%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[228.51203918 416.07931519]
[222.03254700 402.55096436]
[215.55305481 389.02264404]
[209.07354736 375.49429321]
[194.98368835 370.80264282]
[188.21984863 357.17529297]
[193.23640442 342.42834473]
[186.75689697 328.90002441]
[174.28096008 320.76367188]
[175.29794312 304.97518921]
[168.81843567 291.44683838]
[156.34249878 283.31048584]
[157.35948181 267.52200317]
[150.87997437 253.99366760]
[144.40048218 240.46531677]
[137.03005981 253.52964783]
[122.24559021 256.06335449]
[110.94565582 246.19871521]
[111.46013641 231.20753479]
[123.40978241 222.14077759]
[137.98446655 225.68107605]
[132.52911377 211.70828247]
[127.07375336 197.73547363]
[121.61840057 183.76268005]
[116.16304016 169.78988647]
[113.09799194 168.04695129]
[110.72486877 164.73284912]
[109.77293396 160.18893433]
[110.79142761 155.06938171]
[105.96542358 140.86692810]
[101.13942719 126.66447449]
[96.31343079 112.46202087]
[91.06671143 98.40954590]
[85.40392303 84.51951599]
[73.02934265 74.66151428]
[75.38931274 59.95505905]
[69.72652435 46.06503296]
[52.85569382 46.22945023]
[37.24986267 39.91515350]
[25.29248428 28.11698151]
[18.79808426 12.66497612]
[18.73691368 -4.05945587]
[25.09010887 -19.49054909]
[36.85692215 -31.27180481]
[30.78308868 -44.98707199]
[24.70925522 -58.70233917]
[18.63541985 -72.41760254]
[12.56158638 -86.13287354]
[6.16198254 -72.56655121]
[-7.90887547 -67.36934662]
[-21.59056091 -73.51844788]
[-27.04558372 -87.49137878]
[-21.14905739 -101.28379822]
[-7.27878237 -106.99479675]
[6.61904049 -101.35350800]
[1.79304278 -115.55596161]
[-3.03295493 -129.75842285]
[-19.28314781 -132.81178284]
[-31.70496750 -143.58183289]
[-36.97008133 -159.05747986]
[-33.73109055 -174.98434448]
[-22.96483612 -187.03424072]
[-28.00175285 -201.16326904]
[-33.03866959 -215.29229736]
[-38.07558441 -229.42134094]
[-52.07598877 -236.24967957]
[-56.98286438 -250.65028381]
[-50.38679504 -263.95544434]
[-55.42370987 -278.08447266]
[-60.46062851 -292.21350098]
[-65.49754333 -306.34252930]
[-70.53446198 -320.47155762]
[-85.25099945 -317.44342041]
[-100.24575806 -316.49295044]
[-115.22686005 -317.63870239]
[-129.90269470 -320.85833740]
[-143.98759460 -326.08917236]
[-157.20738220 -333.22943115]
[-169.30474854 -342.14010620]
[-180.04420471 -352.64773560]
[-189.21669006 -364.54779053]
[-196.64369202 -377.60864258]
[-202.18061829 -391.57604980]
[-205.71969604 -406.17813110]
[-207.19203186 -421.13067627]
[-206.56898499 -436.14260864]
[-203.86265564 -450.92172241]
[-199.12574768 -465.18029785]
[-192.45043945 -478.64086914]
[-183.96670532 -491.04135132]
[-173.83964539 -502.14041138]
[-162.26640320 -511.72195435]
[-149.47225952 -519.59954834]
[-135.70625305 -525.61975098]
[-121.23634338 -529.66546631]
[-106.34419250 -531.65789795]
[-91.31967163 -531.55828857]
[-76.45524597 -529.36859131]
[-62.04024887 -525.13134766]
[-48.35528183 -518.92907715]
[-35.66671753 -510.88256836]
[-24.22155190 -501.14840698]
[-14.24256134 -489.91604614]
[-5.92399311 -477.40414429]
[0.57223052 -463.85626221]
[5.11965847 -449.53610229]
[7.62977362 -434.72241211]
[8.05371571 -419.70352173]
[6.38323355 -404.77182007]
[2.65084243 -390.21795654]
[-3.07080531 -376.32519531]
[-10.67033577 -363.36395264]
[-19.99982262 -351.58657837]
[-30.87766266 -341.22229004]
[-43.09211731 -332.47280884]
[-56.40542984 -325.50848389]
[-51.36851501 -311.37945557]
[-46.33159637 -297.25042725]
[-41.29468155 -283.12139893]
[-36.25776672 -268.99237061]
[-22.73245430 -262.86035156]
[-17.42303276 -248.60325623]
[-23.94655609 -234.45825195]
[-18.90963936 -220.32922363]
[-13.87272263 -206.20019531]
[-8.83580685 -192.07116699]
[4.73082447 -190.50157166]
[16.35345078 -183.20477295]
[23.73356819 -171.55647278]
[25.38277245 -157.79934692]
[20.92261696 -144.61135864]
[11.16950035 -134.58441162]
[15.99549866 -120.38195801]
[20.82149696 -106.17950439]
[26.27685356 -92.20670319]
[32.35068893 -78.49143982]
[38.42452240 -64.77616882]
[44.49835587 -51.06090546]
[50.57218933 -37.34563828]
[63.77939224 -38.51326752]
[76.72595215 -35.54937744]
[88.14883423 -28.72871590]
[96.92922211 -18.70298767]
[102.20207214 -6.43860674]
[103.44136810 6.87645483]
[100.51251984 19.94773293]
[93.68686676 31.50012016]
[83.61654663 40.40224457]
[89.27933502 54.29227066]
[101.24887848 63.15676880]
[99.29395294 78.85673523]
[104.95674133 92.74675751]
[107.65574646 94.16268921]
[109.89921570 96.59197235]
[111.31080627 99.86776733]
[111.58112335 103.68656158]
[110.51588440 107.63601685]
[115.34188080 121.83847809]
[120.16788483 136.04092407]
[124.99388123 150.24339294]
[130.13583374 164.33453369]
[135.59120178 178.30732727]
[141.04655457 192.28012085]
[146.50190735 206.25291443]
[151.95726013 220.22572327]
[157.92883301 233.98582458]
[164.40832520 247.51417542]
[170.88781738 261.04251099]
[183.82722473 270.14648438]
[182.34678650 284.96734619]
[188.82627869 298.49569702]
[201.76568604 307.59967041]
[200.28524780 322.42050171]
[206.76473999 335.94885254]
[221.39956665 341.28363037]
[227.77798462 355.09561157]
[222.60189819 369.01480103]
[229.08139038 382.54312134]
[235.56089783 396.07147217]
[242.04039001 409.59982300]
[256.59442139 405.78186035]
[271.60800171 404.78753662]
[286.53842163 406.65277100]
[300.84594727 411.31018066]
[314.01336670 418.59136963]
[325.56466675 428.23312378]
[335.08233643 439.88690186]
[342.22225952 453.13143921]
[346.72634888 467.48797607]
[348.43179321 482.43750000]
[347.27691650 497.43957520]
[343.30349731 511.95193481]
[336.65518188 525.44995117]
[327.57226562 537.44567871]
[316.38308716 547.50543213]
[303.49215698 555.26562500]
[289.36547852 560.44567871]
[274.51370239 562.85839844]
[259.47372437 562.41656494]
[244.78919983 559.13604736]
[230.99101257 553.13555908]
[218.57791138 544.63189697]
[207.99865723 533.93255615]
[199.63566589 521.42431641]
[193.79125977 507.55926514]
[190.67671204 492.83865356]
[190.40461731 477.79464722]
[192.98478699 462.97103882]
[198.32397461 448.90371704]
[206.22915649 436.10119629]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 180]
[2 179]
[3 178]
[4 177]
[7 174]
[8 173]
[10 171]
[11 170]
[13 168]
[14 167]
[15 166]
[21 165]
[22 164]
[23 163]
[24 162]
[25 161]
[29 160]
[30 159]
[31 158]
[32 157]
[33 152]
[34 151]
[36 149]
[37 148]
[44 139]
[45 138]
[46 137]
[47 136]
[48 135]
[55 134]
[56 133]
[57 132]
[62 126]
[63 125]
[64 124]
[65 123]
[68 120]
[69 119]
[70 118]
[71 117]
[72 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
