%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[5.50497580 448.93270874]
[12.78307343 462.13470459]
[16.68955994 476.69503784]
[16.99731636 491.76715088]
[13.68844891 506.47479248]
[6.95533323 519.96289062]
[-2.81057763 531.44726562]
[-15.04150581 540.26019287]
[-29.02636147 545.88934326]
[-43.95208359 548.00738525]
[-58.95090866 546.49127197]
[-73.15082550 541.42907715]
[-85.72627258 533.11511230]
[-95.94612885 522.03283691]
[-103.21622467 508.82641602]
[-107.11387634 494.26373291]
[-107.41249847 479.19140625]
[-104.09471893 464.48577881]
[-97.35342407 451.00177002]
[-87.58055115 439.52334595]
[-75.34428406 430.71783447]
[-61.35601807 425.09716797]
[-46.42901230 422.98812866]
[-31.43110847 424.51336670]
[-26.39419365 410.38433838]
[-21.35727692 396.25531006]
[-16.32036018 382.12625122]
[-11.38876724 367.96014404]
[-6.56276941 353.75769043]
[-1.94875991 339.48495483]
[2.45223808 325.14508057]
[6.85323620 310.80523682]
[11.25423431 296.46539307]
[15.65523243 282.12554932]
[20.05623055 267.78570557]
[24.45722771 253.44586182]
[28.85822678 239.10601807]
[25.19562531 224.66874695]
[36.64137650 213.74604797]
[24.92104530 223.10734558]
[10.21056366 226.04022217]
[-4.20370770 221.88946533]
[-15.10158539 211.58236694]
[-20.04845428 197.42155457]
[-17.93917274 182.57060242]
[-9.24495983 170.34722900]
[4.09187698 163.48219299]
[19.09185219 163.50914001]
[32.40393448 170.42205811]
[41.05416870 182.67658997]
[43.11007309 197.53504944]
[49.79026794 184.10467529]
[56.47046280 170.67430115]
[63.15065765 157.24392700]
[69.83084869 143.81355286]
[76.51104736 130.38316345]
[83.19123840 116.95279694]
[76.44728851 103.89890289]
[78.62489319 89.36814117]
[88.89919281 78.86463165]
[103.37838745 76.36701202]
[110.05857849 62.93663406]
[116.73876953 49.50625992]
[123.41896820 36.07588196]
[127.81996918 21.73603630]
[129.82397461 6.87050724]
[131.82798767 -7.99502087]
[133.83200073 -22.86054993]
[122.90714264 -29.74726295]
[115.42551422 -40.21628189]
[112.46982574 -52.69181442]
[114.44478607 -65.31238556]
[121.02208710 -76.20857239]
[131.19436646 -83.77993774]
[143.42936707 -86.93003845]
[145.87509155 -101.72930908]
[148.32081604 -116.52857971]
[150.76654053 -131.32785034]
[145.38287354 -146.20489502]
[155.09179688 -157.50030518]
[157.53753662 -172.29957581]
[159.98326111 -187.09884644]
[162.42898560 -201.89811707]
[160.75637817 -205.90515137]
[160.47422791 -209.84024048]
[161.38920593 -213.27510071]
[163.18870544 -215.88821411]
[165.48606873 -217.49453735]
[168.80833435 -232.12199402]
[172.13058472 -246.74946594]
[170.69944763 -250.84895325]
[170.65202332 -254.79385376]
[171.76982117 -258.16815186]
[173.72166443 -260.66952515]
[176.11056519 -262.13626099]
[180.29757690 -276.54003906]
[184.48458862 -290.94384766]
[188.67160034 -305.34762573]
[192.85861206 -319.75140381]
[197.04562378 -334.15518188]
[183.73054504 -341.17611694]
[172.10154724 -350.73391724]
[162.63484192 -362.43716431]
[155.71807861 -375.80667114]
[151.63447571 -390.29489136]
[150.55128479 -405.30862427]
[152.51284790 -420.23300171]
[157.43884277 -434.45690918]
[165.12754822 -447.39785767]
[175.26411438 -458.52597046]
[187.43347168 -467.38552856]
[201.13726807 -473.61376953]
[215.81436157 -476.95559692]
[230.86372375 -477.27420044]
[245.66909790 -474.55651855]
[259.62420654 -468.91384888]
[272.15762329 -460.57727051]
[282.75607300 -449.88812256]
[290.98556519 -437.28414917]
[296.50912476 -423.28146362]
[299.10055542 -408.45349121]
[298.65374756 -393.40737915]
[295.18701172 -378.75927734]
[288.84225464 -365.10903931]
[279.87933350 -353.01562500]
[268.66525269 -342.97424316]
[255.65925598 -335.39605713]
[241.39389038 -330.59143066]
[226.45333862 -328.75711060]
[211.44940186 -329.96817017]
[207.26239014 -315.56439209]
[203.07537842 -301.16061401]
[198.88836670 -286.75683594]
[194.70135498 -272.35302734]
[190.51434326 -257.94924927]
[186.75804138 -243.42720032]
[183.43579102 -228.79974365]
[180.11352539 -214.17227173]
[177.22825623 -199.45239258]
[174.78253174 -184.65312195]
[172.33680725 -169.85385132]
[169.89106750 -155.05458069]
[175.44967651 -141.23606873]
[165.56581116 -128.88212585]
[163.12008667 -114.08284760]
[160.67436218 -99.28357697]
[158.22863770 -84.48430634]
[171.92401123 -74.04998779]
[178.48194885 -58.03415680]
[176.01231384 -40.81483841]
[165.10617065 -27.14857292]
[148.69754028 -20.85653496]
[146.69352722 -5.99100733]
[144.68951416 8.87452126]
[142.68550110 23.74004936]
[151.13668823 11.34741974]
[162.47264099 1.52416384]
[175.94145203 -5.07817793]
[190.64981079 -8.02169609]
[205.62214661 -7.11115742]
[219.86540222 -2.40695477]
[232.43489075 5.77889919]
[242.49690247 16.90346527]
[249.38406372 30.22889328]
[252.63957214 44.87135315]
[252.04751587 59.85966492]
[247.64714050 74.19970703]
[239.73033142 86.94035339]
[228.82217407 97.23656464]
[215.64616394 104.40543365]
[201.07620239 107.97147369]
[186.07870483 107.69815826]
[171.64836121 103.60361481]
[158.74229431 95.95942688]
[148.21653748 85.27259827]
[140.76919556 72.25195312]
[136.89425659 57.76110077]
[136.84934998 42.75607681]
[130.16914368 56.18645477]
[123.48895264 69.61682892]
[116.80876160 83.04720306]
[123.55271149 96.10109711]
[121.37510681 110.63185883]
[111.10080719 121.13536835]
[96.62161255 123.63298798]
[89.94142151 137.06336975]
[83.26123047 150.49374390]
[76.58103180 163.92411804]
[69.90084076 177.35449219]
[63.22064209 190.78486633]
[56.54044724 204.21524048]
[50.98122406 218.14704895]
[54.32903290 233.60998535]
[43.19807434 243.50700378]
[38.79707718 257.84686279]
[34.39607620 272.18670654]
[29.99507904 286.52655029]
[25.59408188 300.86639404]
[21.19308281 315.20623779]
[16.79208565 329.54608154]
[12.39108753 343.88592529]
[13.49683094 350.40429688]
[11.45170403 355.70660400]
[7.63968658 358.58367920]
[2.81368876 372.78613281]
[3.01570845 381.91833496]
[-2.19133091 387.16317749]
[-7.22824717 401.29220581]
[-12.26516342 415.42123413]
[-17.30208015 429.55026245]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 210]
[25 209]
[26 208]
[27 207]
[28 205]
[29 204]
[30 201]
[31 200]
[32 199]
[33 198]
[34 197]
[35 196]
[36 195]
[37 194]
[39 192]
[51 191]
[52 190]
[53 189]
[54 188]
[55 187]
[56 186]
[57 185]
[61 181]
[62 180]
[63 179]
[64 178]
[65 155]
[66 154]
[67 153]
[68 152]
[75 147]
[76 146]
[77 145]
[78 144]
[80 142]
[81 141]
[82 140]
[83 139]
[88 138]
[89 137]
[90 136]
[95 135]
[96 134]
[97 133]
[98 132]
[99 131]
[100 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
