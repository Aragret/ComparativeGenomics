%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[92.97169495 546.71887207]
[100.15696716 533.41986084]
[110.94413757 522.83081055]
[124.37400818 515.89324951]
[121.70821381 501.13201904]
[119.04241943 486.37078857]
[116.37661743 471.60958862]
[113.71082306 456.84835815]
[111.04502869 442.08715820]
[108.37923431 427.32592773]
[101.82321167 440.81735229]
[89.45546722 449.30493164]
[74.50891113 450.57003784]
[60.89053726 444.28198242]
[52.16014862 432.08441162]
[50.59984970 417.16580200]
[56.61750412 403.42578125]
[68.64010620 394.45599365]
[83.52497864 392.60110474]
[97.38124847 398.34600830]
[106.58657837 410.18814087]
[106.13997650 395.19479370]
[105.69336700 380.20144653]
[105.13515472 365.21182251]
[104.46537018 350.22677612]
[103.79558563 335.24176025]
[95.49770355 322.87265015]
[102.61107635 308.74075317]
[101.94129181 293.75573730]
[87.51473236 289.82693481]
[74.99190521 281.62030029]
[65.60611725 269.92895508]
[60.28635025 255.89006042]
[59.56535721 240.87397766]
[63.52631760 226.35067749]
[71.79345703 213.74581909]
[83.56768036 204.30070496]
[97.70377350 198.95014954]
[97.03398132 183.96510315]
[96.36419678 168.98007202]
[86.13654327 154.71955872]
[94.75803375 138.44837952]
[93.86521912 123.47497559]
[92.97240448 108.50157166]
[81.21533203 117.81668091]
[66.56837463 114.58149719]
[59.82870865 101.18086243]
[65.96457672 87.49323273]
[80.45283508 83.60861969]
[92.61249542 92.38916779]
[92.83582306 77.39083099]
[93.05915070 62.39249039]
[93.28247833 47.39415359]
[93.50580597 32.39581680]
[79.00753784 28.24425697]
[66.08801270 20.48724365]
[55.62481308 9.65869999]
[48.32686234 -3.49905849]
[44.68638992 -18.08619690]
[44.94572067 -33.10690689]
[49.08117294 -47.53738022]
[56.80507660 -60.39559555]
[67.58576965 -70.80814362]
[80.68419647 -78.06955719]
[95.20456696 -81.69010162]
[95.42789459 -96.68843842]
[95.65122223 -111.68677521]
[95.87454987 -126.68511200]
[95.42794037 -141.67846680]
[94.31229401 -156.63691711]
[93.19664764 -171.59536743]
[92.08099365 -186.55381775]
[90.96534729 -201.51228333]
[89.84970093 -216.47073364]
[76.81768036 -224.68490601]
[71.18709564 -238.83235168]
[74.92251587 -253.41009521]
[86.38837433 -262.87960815]
[85.27272797 -277.83807373]
[84.15708160 -292.79653931]
[83.04142761 -307.75497437]
[81.92578125 -322.71343994]
[73.18350220 -335.89990234]
[79.95275879 -349.16738892]
[76.55207825 -354.83721924]
[76.52875519 -360.52023315]
[79.03336334 -364.58666992]
[78.36357117 -379.57171631]
[77.69378662 -394.55676270]
[67.42630768 -409.84271240]
[76.11488342 -425.08984375]
[75.22206116 -440.06326294]
[74.32924652 -455.03665161]
[73.43643188 -470.01007080]
[58.79156113 -473.80255127]
[46.03649521 -481.93664551]
[36.42084122 -493.61544800]
[30.88664818 -507.69479370]
[29.97609901 -522.79534912]
[33.77839661 -537.43762207]
[41.92103195 -550.18725586]
[53.60627747 -559.79510498]
[67.68932343 -565.31982422]
[82.79046631 -566.22027588]
[97.43023682 -562.40814209]
[110.17439270 -554.25701904]
[119.77438354 -542.56530762]
[125.28970337 -528.47857666]
[126.18001556 -513.37683105]
[122.35810089 -498.73962402]
[114.19838715 -486.00091553]
[102.50027466 -476.40875244]
[88.40983582 -470.90289307]
[89.30265045 -455.92947388]
[90.19547272 -440.95608521]
[91.08828735 -425.98266602]
[99.92462158 -417.72155762]
[100.79097748 -405.25427246]
[92.67882538 -395.22653198]
[93.34860992 -380.24148560]
[94.01840210 -365.25646973]
[94.91121674 -350.28305054]
[103.57369232 -338.16650391]
[96.88423157 -323.82907104]
[97.99988556 -308.87063599]
[99.11553192 -293.91217041]
[100.23117828 -278.95370483]
[101.34683228 -263.99526978]
[114.09056091 -256.33135986]
[119.94712830 -242.46902466]
[116.47748566 -227.64286804]
[104.80815125 -217.58638000]
[105.92379761 -202.62792969]
[107.03945160 -187.66946411]
[108.15509796 -172.71101379]
[109.27074432 -157.75256348]
[110.38639832 -142.79411316]
[120.96990204 -153.42375183]
[135.96893311 -153.59426880]
[146.79136658 -143.20797729]
[147.23760986 -128.21461487]
[137.05204773 -117.20307159]
[122.06941986 -116.48124695]
[110.87288666 -126.46178436]
[110.64955902 -111.46344757]
[110.42623138 -96.46511078]
[110.20290375 -81.46677399]
[124.60903931 -77.41550446]
[137.48545837 -69.76732635]
[147.95133972 -59.03841400]
[155.28898621 -45.95592880]
[158.99296570 -31.40872574]
[158.80496216 -16.38695335]
[154.73178101 -1.91467166]
[147.04531860 11.01996613]
[136.26434326 21.53218079]
[123.11959076 28.90109253]
[108.50414276 32.61914444]
[108.28081512 47.61748123]
[108.05748749 62.61582184]
[107.83415985 77.61415863]
[107.61083221 92.61249542]
[107.94580841 107.60875702]
[108.83862305 122.58216095]
[109.73143768 137.55557251]
[118.84281158 146.68495178]
[119.27818298 159.17471313]
[111.34923553 168.31028748]
[112.01902008 183.29531860]
[112.68881226 198.28036499]
[127.24588013 202.34841919]
[139.81579590 210.70542908]
[149.17453003 222.52247620]
[154.41540527 236.63446045]
[155.03695679 251.65499878]
[150.99089050 266.11251831]
[142.68557739 278.59460449]
[130.94485474 287.88574219]
[116.92633057 293.08593750]
[117.59611511 308.07098389]
[125.94190216 321.51190186]
[118.78062439 334.57196045]
[119.45040894 349.55700684]
[120.12019348 364.54205322]
[123.62966919 372.97540283]
[120.68671417 379.75482178]
[121.13332367 394.74816895]
[121.57992554 409.74154663]
[123.14044952 424.66012573]
[125.80624390 439.42135620]
[128.47204590 454.18255615]
[131.13783264 468.94378662]
[133.80363464 483.70501709]
[136.46943665 498.46621704]
[139.13522339 513.22741699]
[154.14338684 515.02923584]
[167.95300293 521.17626953]
[179.33613586 531.12194824]
[187.28059387 543.98181152]
[191.07997131 558.61248779]
[190.39643860 573.71295166]
[185.29075623 587.94049072]
[176.21693420 600.03002930]
[163.98179626 608.90661621]
[149.67329407 613.78082275]
[134.56372070 614.21936035]
[119.99662018 610.18316650]
[107.26728058 602.03112793]
[97.50758362 590.48815918]
[91.58536530 576.58068848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[9 190]
[10 189]
[21 188]
[22 187]
[23 186]
[24 184]
[25 183]
[26 182]
[28 180]
[29 179]
[38 170]
[39 169]
[40 168]
[42 165]
[43 164]
[44 163]
[50 162]
[51 161]
[52 160]
[53 159]
[54 158]
[65 147]
[66 146]
[67 145]
[68 144]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[78 128]
[79 127]
[80 126]
[81 125]
[82 124]
[84 122]
[87 121]
[88 120]
[89 119]
[91 116]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
