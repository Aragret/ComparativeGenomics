%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[35.87549591 546.04327393]
[41.15306091 531.91534424]
[49.77896881 519.54425049]
[61.21098709 509.70758057]
[74.73049164 503.02371216]
[71.62638092 488.34841919]
[68.52227020 473.67312622]
[65.41815948 458.99780273]
[62.31404877 444.32250977]
[57.92969131 458.66744995]
[48.95885086 470.68927002]
[36.45541000 478.97564697]
[21.88826370 482.55310059]
[6.96874237 481.00137329]
[-6.55042267 474.50274658]
[-17.08101273 463.82067871]
[-23.38590431 450.21005249]
[-24.72440720 435.26989746]
[-20.93927193 420.75534058]
[-12.47517490 408.37152100]
[-0.32646981 399.57327271]
[14.07962704 395.39422607]
[29.05070114 396.32534790]
[42.82796478 402.25720215]
[53.79288101 412.49295044]
[60.65776825 425.83160400]
[61.10437393 410.83825684]
[61.55097961 395.84490967]
[61.99758530 380.85156250]
[59.43271255 376.82284546]
[59.37142181 371.14013672]
[62.68731308 365.42031860]
[63.58012772 350.44689941]
[64.47294617 335.47351074]
[61.73314285 328.60943604]
[65.49215698 320.28433228]
[66.60780334 305.32586670]
[59.83854675 292.05838013]
[68.58082581 278.87188721]
[69.69647217 263.91345215]
[59.81258011 252.82994080]
[60.73091888 237.64404297]
[72.42333984 227.35205078]
[73.53898621 212.39360046]
[71.81402588 210.18392944]
[70.86041260 207.15783691]
[70.99349213 203.60569763]
[72.41777039 199.92657471]
[75.19243622 196.58662415]
[77.19644928 181.72109985]
[79.20046234 166.85557556]
[81.20447540 151.99005127]
[83.20848846 137.12451172]
[72.40502167 147.53053284]
[57.71170044 150.54818726]
[43.68141174 145.24244690]
[34.66158676 133.25733948]
[33.44712448 118.30658722]
[40.41433334 105.02283478]
[53.40435410 97.52220917]
[68.39208221 98.12885284]
[80.73340607 106.65479279]
[86.60427094 120.45843506]
[90.57636261 105.99390411]
[94.44067383 91.50021362]
[98.19697571 76.97815704]
[97.31629181 67.88627625]
[102.11881256 62.26866531]
[106.09091187 47.80414200]
[110.06300354 33.33961868]
[114.03510284 18.87509537]
[112.73577118 12.39255810]
[114.62212372 7.03170919]
[118.34678650 4.04241085]
[122.74778748 -10.29743671]
[121.57732391 -15.38438988]
[122.39354706 -19.95462799]
[124.66693878 -23.33792686]
[127.67874146 -25.17134285]
[132.71565247 -39.30037308]
[130.06164551 -54.89738464]
[141.62342834 -64.28750610]
[138.96940613 -79.88452148]
[150.53118896 -89.27464294]
[155.56809998 -103.40367126]
[149.04458618 -117.54869080]
[154.35400391 -131.80578613]
[167.87931824 -137.93778992]
[172.91622925 -152.06681824]
[177.95315552 -166.19584656]
[182.99006653 -180.32487488]
[187.92166138 -194.49101257]
[192.74765015 -208.69346619]
[197.57365417 -222.89591980]
[202.39965820 -237.09838867]
[207.22564697 -251.30084229]
[193.87480164 -258.20101929]
[181.70153809 -267.01403809]
[170.97782898 -277.54302979]
[161.94323730 -289.55276489]
[154.79959106 -302.77493286]
[149.70651245 -316.91418457]
[146.77775574 -331.65460205]
[146.07876587 -346.66690063]
[147.62515259 -361.61569214]
[151.38235474 -376.16702271]
[157.26644897 -389.99578857]
[165.14599609 -402.79309082]
[174.84494019 -414.27297974]
[186.14660645 -424.17904663]
[198.79853821 -432.28991699]
[212.51805115 -438.42446899]
[226.99865723 -442.44561768]
[241.91687012 -444.26348877]
[256.93939209 -443.83755493]
[271.73062134 -441.17727661]
[285.96011353 -436.34207153]
[299.30999756 -429.44000244]
[311.48199463 -420.62524414]
[322.20422363 -410.09472656]
[331.23709106 -398.08370972]
[338.37884521 -384.86050415]
[343.46990967 -370.72055054]
[346.39657593 -355.97970581]
[347.09341431 -340.96731567]
[345.54492188 -326.01873779]
[341.78564453 -311.46795654]
[335.89956665 -297.64001465]
[328.01818848 -284.84384155]
[318.31762695 -273.36532593]
[307.01452637 -263.46087646]
[294.36145020 -255.35179138]
[280.64108276 -249.21920776]
[266.15988159 -245.20013428]
[251.24142456 -243.38435364]
[236.21896362 -243.81245422]
[221.42810059 -246.47483826]
[216.60211182 -232.27238464]
[211.77610779 -218.06993103]
[206.95011902 -203.86747742]
[202.12411499 -189.66502380]
[202.94847107 -182.32048035]
[197.11909485 -175.28796387]
[192.08218384 -161.15893555]
[187.04525757 -147.02990723]
[182.00834656 -132.90087891]
[188.60441589 -119.59571075]
[183.69754028 -105.19511414]
[169.69714355 -98.36676025]
[164.66021729 -84.23773193]
[167.67451477 -69.65132141]
[155.75245667 -59.25059128]
[158.76673889 -44.66418457]
[146.84468079 -34.26345825]
[141.80776978 -20.13442802]
[137.08763123 -5.89643860]
[132.68663025 8.44340897]
[128.49961853 22.84719086]
[124.52752686 37.31171417]
[120.55543518 51.77623749]
[116.58333588 66.24076080]
[112.71903229 80.73445892]
[108.96273041 95.25651550]
[110.15348816 103.22863007]
[105.04089355 109.96600342]
[101.06879425 124.43052673]
[98.07402039 139.12852478]
[96.07000732 153.99406433]
[94.06599426 168.85958862]
[92.06198120 183.72511292]
[90.05796814 198.59063721]
[88.49744415 213.50924683]
[87.38179016 228.46769714]
[97.41812897 240.38029480]
[96.07360840 255.53439331]
[84.65493011 265.02908325]
[83.53928375 279.98754883]
[90.22873688 294.32498169]
[81.56626129 306.44152832]
[80.45061493 321.39996338]
[79.44635010 336.36630249]
[78.55353546 351.33972168]
[77.66072083 366.31314087]
[76.99093628 381.29815674]
[76.54432678 396.29150391]
[76.09772491 411.28485107]
[75.65111542 426.27822876]
[76.98934937 441.21841431]
[80.09346008 455.89370728]
[83.19757080 470.56900024]
[86.30168152 485.24429321]
[89.40579224 499.91961670]
[104.47380066 500.55664062]
[118.90975952 504.92172241]
[131.80621338 512.74047852]
[142.35246277 523.52130127]
[149.88558960 536.58666992]
[153.93203735 551.11517334]
[154.23744202 566.19354248]
[150.78260803 580.87396240]
[143.78471375 594.23358154]
[133.68363953 605.43267822]
[121.11436462 613.76721191]
[106.86699677 618.71325684]
[91.83714294 619.95989990]
[76.96958160 617.42883301]
[63.19890213 611.27905273]
[51.39075089 601.89727783]
[42.28738785 589.87310791]
[36.46106339 575.96252441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 192]
[6 191]
[7 190]
[8 189]
[9 188]
[26 187]
[27 186]
[28 185]
[29 184]
[32 183]
[33 182]
[34 181]
[36 180]
[37 179]
[39 177]
[40 176]
[43 173]
[44 172]
[49 171]
[50 170]
[51 169]
[52 168]
[53 167]
[63 166]
[64 165]
[65 163]
[66 162]
[68 161]
[69 160]
[70 159]
[71 158]
[74 157]
[75 156]
[79 155]
[80 154]
[82 152]
[84 150]
[85 149]
[88 146]
[89 145]
[90 144]
[91 143]
[92 141]
[93 140]
[94 139]
[95 138]
[96 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
