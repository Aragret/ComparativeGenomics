%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[90.67259979 748.51434326]
[75.65607452 747.84320068]
[60.92945480 744.83105469]
[46.85538864 739.55206299]
[33.78046799 732.13635254]
[22.02667046 722.76647949]
[11.88344669 711.67315674]
[3.60058212 699.12963867]
[-2.61794996 685.44476318]
[-6.61901283 670.95550537]
[-8.30407619 656.01873779]
[-7.63164520 641.00225830]
[-4.61827755 626.27587891]
[0.66181898 612.20227051]
[8.07861710 599.12792969]
[17.44947243 587.37493896]
[28.54361916 577.23260498]
[41.08785248 568.95080566]
[54.77326202 562.73339844]
[69.26282501 558.73352051]
[84.19973755 557.04968262]
[84.86952209 542.06463623]
[85.53930664 527.07958984]
[86.20909119 512.09454346]
[77.29447174 496.97845459]
[87.33322906 481.54135132]
[87.77983856 466.54797363]
[88.22644806 451.55462646]
[88.67304993 436.56127930]
[89.11965942 421.56793213]
[89.56626129 406.57458496]
[90.01287079 391.58123779]
[80.87418365 376.59954834]
[90.68199158 361.01464844]
[90.90531921 346.01632690]
[90.34710693 331.02670288]
[89.00887299 316.08651733]
[87.67063904 301.14633179]
[78.82872772 289.16009521]
[85.30397797 274.72467041]
[83.96574402 259.78448486]
[80.23803711 253.40280151]
[82.72050476 244.61216736]
[81.60485077 229.65371704]
[74.09174347 242.63652039]
[61.45529938 250.71861267]
[46.51852798 252.09443665]
[32.61834717 246.45663452]
[22.86008835 235.06468201]
[19.42377472 220.46359253]
[23.07708740 205.91528320]
[33.00386429 194.66989136]
[46.98644257 189.23963928]
[61.90107346 190.83769226]
[74.41579437 199.10700989]
[81.73478699 212.20025635]
[83.07302094 197.26007080]
[84.41125488 182.31988525]
[85.74948883 167.37969971]
[87.08772278 152.43951416]
[84.55350494 145.49693298]
[88.55872345 137.28741455]
[90.11924744 122.36881256]
[91.67977142 107.45020294]
[93.12918854 92.52040100]
[94.46742249 77.58021545]
[84.60956573 65.51951599]
[86.17955017 50.38711166]
[97.73832703 41.06347275]
[99.07656097 26.12328720]
[96.72525024 17.29667282]
[100.54756165 10.97119045]
[102.10808563 -3.94741416]
[103.66860962 -18.86601830]
[105.22913361 -33.78462219]
[106.78965759 -48.70322800]
[108.35018158 -63.62183380]
[109.91069794 -78.54043579]
[111.47122192 -93.45904541]
[103.58487701 -110.09896851]
[114.43910217 -123.88855743]
[115.77733612 -138.82873535]
[116.89298248 -153.78718567]
[117.78579712 -168.76060486]
[118.67861176 -183.73400879]
[119.57142639 -198.70741272]
[120.35275269 -213.68704224]
[120.91096497 -228.67665100]
[121.35756683 -243.67001343]
[121.80417633 -258.66336060]
[112.70204926 -274.67062378]
[122.50058746 -289.22933960]
[122.72391510 -304.22766113]
[122.94724274 -319.22601318]
[123.17057037 -334.22433472]
[123.39389801 -349.22268677]
[115.86291504 -363.13650513]
[123.78884888 -375.74719238]
[124.01217651 -390.74551392]
[124.23550415 -405.74386597]
[110.76019287 -413.00158691]
[102.21083832 -425.69674683]
[100.55202484 -440.91207886]
[106.16493988 -455.15124512]
[117.75977325 -465.14218140]
[132.67211914 -468.58901978]
[147.47521973 -464.69970703]
[158.76744080 -454.36798096]
[163.95390320 -439.96801758]
[161.84281921 -424.80880737]
[152.91926575 -412.37380981]
[139.23384094 -405.52053833]
[139.01051331 -390.52218628]
[138.78718567 -375.52386475]
[146.33413696 -362.68280029]
[138.39222717 -348.99935913]
[138.16889954 -334.00100708]
[137.94557190 -319.00268555]
[137.72224426 -304.00433350]
[137.49891663 -289.00601196]
[145.69635010 -280.11056519]
[145.63304138 -267.61337280]
[136.79753113 -258.21676636]
[136.35092163 -243.22340393]
[135.90431213 -228.23005676]
[138.84727478 -221.45060730]
[135.33778381 -213.01725769]
[138.17948914 -206.19476318]
[134.54483032 -197.81459045]
[133.65202332 -182.84118652]
[132.75920105 -167.86778259]
[131.86639404 -152.89437866]
[134.31016541 -148.79109192]
[134.20223999 -143.10906982]
[130.71751404 -137.49050903]
[129.37928772 -122.55032349]
[136.89239502 -113.06982422]
[135.89976501 -100.61196136]
[126.38983154 -91.89852142]
[124.82930756 -76.97991180]
[123.26878357 -62.06130981]
[121.70825958 -47.14270401]
[120.14773560 -32.22410202]
[118.58721161 -17.30549622]
[117.02668762 -2.38689137]
[115.46617126 12.53171349]
[114.01674652 27.46152306]
[112.67851257 42.40170670]
[122.39629364 53.63114548]
[121.25196838 68.80168152]
[109.40760803 78.91844940]
[108.06937408 93.85863495]
[110.54403687 101.52991486]
[106.59837341 109.01072693]
[105.03784943 123.92933655]
[103.47732544 138.84794617]
[102.02790833 153.77774048]
[100.68967438 168.71792603]
[99.35144043 183.65811157]
[98.01320648 198.59829712]
[96.67497253 213.53848267]
[96.56330872 228.53807068]
[97.67895508 243.49652100]
[98.90592957 258.44625854]
[100.24416351 273.38644409]
[109.18180084 286.44128418]
[102.61082458 299.80810547]
[103.94905853 314.74829102]
[105.28729248 329.68847656]
[114.83780670 318.12182617]
[129.56549072 315.27661133]
[142.73706055 322.45364380]
[148.33064270 336.37167358]
[143.78892517 350.66757202]
[131.18832397 358.80545044]
[116.28966522 357.06475830]
[105.90365601 346.23965454]
[105.68032837 361.23797607]
[114.08744812 371.01977539]
[113.59266663 383.50732422]
[105.00621796 392.02783203]
[104.55960846 407.02117920]
[104.11300659 422.01455688]
[103.66639709 437.00790405]
[103.21979523 452.00125122]
[102.77318573 466.99459839]
[102.32658386 481.98794556]
[110.58713531 491.89379883]
[109.90648651 504.37261963]
[101.19412994 512.76434326]
[100.52434540 527.74938965]
[99.85456085 542.73443604]
[99.18477631 557.71948242]
[113.91189575 560.72918701]
[127.98683167 566.00579834]
[141.06297302 573.41937256]
[152.81831360 582.78729248]
[162.96337891 593.87896729]
[171.24830627 606.42114258]
[177.46910095 620.10498047]
[181.47254944 634.59356689]
[183.16007996 649.53009033]
[182.49012756 664.54663086]
[179.47918701 679.27349854]
[174.20141602 693.34802246]
[166.78677368 706.42352295]
[157.41786194 718.17810059]
[146.32539368 728.32226562]
[133.78251648 736.60614014]
[120.09813690 742.82580566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 193]
[22 192]
[23 191]
[24 190]
[26 187]
[27 186]
[28 185]
[29 184]
[30 183]
[31 182]
[32 181]
[34 178]
[35 177]
[36 169]
[37 168]
[38 167]
[40 165]
[41 164]
[43 163]
[44 162]
[56 161]
[57 160]
[58 159]
[59 158]
[60 157]
[62 156]
[63 155]
[64 154]
[65 152]
[66 151]
[69 148]
[70 147]
[72 146]
[73 145]
[74 144]
[75 143]
[76 142]
[77 141]
[78 140]
[79 139]
[81 136]
[82 135]
[83 132]
[84 131]
[85 130]
[86 129]
[87 127]
[88 125]
[89 124]
[90 123]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
