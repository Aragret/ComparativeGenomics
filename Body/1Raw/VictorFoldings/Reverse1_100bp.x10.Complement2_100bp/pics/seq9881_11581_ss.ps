%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[76.80828857 193.66258240]
[81.82746124 207.81320190]
[85.31404877 222.41716003]
[87.22856140 237.30900574]
[87.54928589 252.31997681]
[86.27260590 267.27999878]
[83.41297913 282.01956177]
[79.00280762 296.37164307]
[73.09206390 310.17364502]
[65.74772644 323.26916504]
[57.05299759 335.50982666]
[47.10640717 346.75692749]
[36.02065277 356.88305664]
[23.92134857 365.77343750]
[10.94558620 373.32736206]
[-2.75961018 379.45919800]
[-17.03894806 384.09951782]
[-31.73063278 387.19573975]
[-46.66819382 388.71273804]
[-61.68238068 388.63339233]
[-76.60307312 386.95852661]
[-91.26119995 383.70715332]
[-105.49067688 378.91610718]
[-119.13027191 372.63970947]
[-132.02545166 364.94900513]
[-144.03007507 355.93121338]
[-155.00814819 345.68844604]
[-164.83526611 334.33679199]
[-173.40010071 322.00488281]
[-180.60557556 308.83245850]
[-186.37005615 294.96871948]
[-190.62823486 280.57083130]
[-193.33186340 265.80184937]
[-194.45030212 250.82916260]
[-193.97088623 235.82241821]
[-191.89903259 220.95166016]
[-188.25823975 206.38537598]
[-183.08973694 192.28862000]
[-176.45210266 178.82110596]
[-168.42053223 166.13543701]
[-159.08604431 154.37536621]
[-148.55439758 143.67411804]
[-136.94493103 134.15296936]
[-124.38917542 125.91979218]
[-111.02941132 119.06787872]
[-97.01700592 113.67485809]
[-82.51074219 109.80184174]
[-67.67497253 107.49271393]
[-52.67780304 106.77364349]
[-37.68916702 107.65277100]
[-22.87889290 110.12013245]
[-8.41479492 114.14778900]
[5.53923893 119.69007874]
[18.82509804 126.68422699]
[31.29224396 135.05096436]
[42.79941559 144.69551086]
[53.60157013 134.28813171]
[64.40372467 123.88076019]
[75.20588684 113.47338867]
[86.00804138 103.06600952]
[90.06169128 89.68470001]
[103.58458710 86.13182831]
[114.38674164 75.72445679]
[100.06682587 80.18988037]
[85.08135986 80.84998322]
[70.42427063 77.66097260]
[57.06771469 70.83438110]
[45.89758301 60.82297897]
[37.65474701 48.29079437]
[32.88593292 34.06903458]
[31.90743065 19.10098457]
[34.78414536 4.37941837]
[41.32527161 -9.11923504]
[51.09696198 -20.49965858]
[63.45109558 -29.00703049]
[77.56826782 -34.07708740]
[92.51213837 -35.37354660]
[107.29152679 -32.81042480]
[120.92617798 -26.55772018]
[132.51174927 -17.03015327]
[141.27981567 -4.85965490]
[146.64881897 9.14655113]
[148.26264954 24.05948257]
[146.01428223 38.89001846]
[140.05282593 52.65450668]
[130.77001953 64.44358063]
[144.34622192 58.06497574]
[157.92243958 51.68637085]
[171.49864197 45.30776596]
[185.07484436 38.92916107]
[198.65106201 32.55055618]
[212.22726440 26.17194939]
[225.80346680 19.79334450]
[220.27082825 5.84581709]
[215.60729980 -8.41585159]
[211.83058167 -22.93756104]
[208.95500183 -37.66422653]
[206.99147034 -52.53998566]
[205.94743347 -67.50840759]
[205.82684326 -82.51271057]
[206.63015747 -97.49597931]
[208.35433960 -112.40137482]
[210.99284363 -127.17235565]
[214.53565979 -141.75289917]
[218.96936035 -156.08767700]
[224.27709961 -170.12232971]
[230.43878174 -183.80360413]
[237.43098450 -197.07962036]
[245.22723389 -209.90000916]
[253.79792786 -222.21612549]
[263.11056519 -233.98127747]
[273.12979126 -245.15080261]
[283.81765747 -255.68235779]
[295.13354492 -265.53598022]
[307.03460693 -274.67428589]
[319.47564697 -283.06262207]
[332.40948486 -290.66915894]
[345.78704834 -297.46505737]
[359.55761719 -303.42453003]
[373.66891479 -308.52496338]
[388.06747437 -312.74700928]
[402.69860840 -316.07467651]
[417.50686646 -318.49530029]
[432.43603516 -319.99972534]
[447.42950439 -320.58224487]
[462.43041992 -320.24066162]
[477.38183594 -318.97622681]
[492.22705078 -316.79379272]
[506.90975952 -313.70156860]
[521.37426758 -309.71136475]
[535.56567383 -304.83825684]
[549.43017578 -299.10076904]
[562.91522217 -292.52062988]
[575.96954346 -285.12283325]
[588.54376221 -276.93542480]
[600.59002686 -267.98944092]
[612.06274414 -258.31887817]
[622.91839600 -247.96035767]
[633.11578369 -236.95321655]
[642.61621094 -225.33918762]
[651.38360596 -213.16232300]
[659.38476562 -200.46882629]
[666.58935547 -187.30683899]
[672.96997070 -173.72630310]
[678.50250244 -159.77871704]
[683.16589355 -145.51699829]
[686.94244385 -130.99525452]
[689.81787109 -116.26856232]
[691.78131104 -101.39278412]
[692.82519531 -86.42435455]
[692.94561768 -71.42005157]
[692.14215088 -56.43679047]
[690.41784668 -41.53141022]
[687.77917480 -26.76045418]
[684.23620605 -12.17995167]
[679.80236816 2.15478826]
[674.49450684 16.18938828]
[668.33270264 29.87060928]
[661.34033203 43.14655304]
[653.54400635 55.96686172]
[644.97314453 68.28289795]
[635.66040039 80.04795074]
[625.64105225 91.21738434]
[614.95312500 101.74883270]
[603.63708496 111.60234070]
[591.73596191 120.74053192]
[579.29486084 129.12875366]
[566.36096191 136.73516846]
[552.98327637 143.53092957]
[539.21270752 149.49026489]
[525.10131836 154.59056091]
[510.70272827 158.81246948]
[496.07156372 162.13998413]
[481.26327515 164.56047058]
[466.33410645 166.06474304]
[451.34060669 166.64712524]
[436.33972168 166.30537415]
[421.38830566 165.04080200]
[406.54312134 162.85820007]
[391.86044312 159.76585388]
[377.39596558 155.77549744]
[363.20458984 150.90225220]
[349.34014893 145.16462708]
[335.85519409 138.58436584]
[322.80090332 131.18643188]
[310.22680664 122.99889374]
[298.18060303 114.05281067]
[286.70797729 104.38211823]
[275.85241699 94.02350616]
[265.65518188 83.01625061]
[256.15487671 71.40213013]
[247.38757324 59.22518158]
[239.38652039 46.53160477]
[232.18206787 33.36955261]
[218.60586548 39.74815750]
[205.02966309 46.12676239]
[191.45346069 52.50536728]
[177.87724304 58.88397217]
[164.30104065 65.26257324]
[150.72483826 71.64118195]
[137.14862061 78.01978302]
[124.79411316 86.52661133]
[113.99195862 96.93399048]
[109.93830872 110.31529999]
[96.41541290 113.86817169]
[85.61325836 124.27554321]
[74.81109619 134.68292236]
[64.00894165 145.09028625]
[53.20678711 155.49766541]
[62.41641617 167.35577393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 209]
[57 208]
[58 207]
[59 206]
[60 205]
[62 203]
[63 202]
[86 201]
[87 200]
[88 199]
[89 198]
[90 197]
[91 196]
[92 195]
[93 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
