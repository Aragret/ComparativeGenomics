%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[-55.73998642 479.49267578]
[-54.66884232 494.50097656]
[-56.45766449 509.44076538]
[-61.04178619 523.77191162]
[-68.25549316 536.97644043]
[-77.83801270 548.57690430]
[-89.44295502 558.15411377]
[-102.65078735 565.36169434]
[-116.98406982 569.93920898]
[-131.92466736 571.72113037]
[-146.93246460 570.64300537]
[-161.46496582 566.74389648]
[-174.99681091 560.16473389]
[-187.03884888 551.14331055]
[-197.15574646 540.00579834]
[-204.98181152 527.15472412]
[-210.23411560 513.05474854]
[-212.72277832 498.21551514]
[-212.35787964 483.17346191]
[-209.15257263 468.47235107]
[-203.22273254 454.64361572]
[-194.78274536 442.18719482]
[-184.13768005 431.55331421]
[-171.67236328 423.12643433]
[-157.83740234 417.21115112]
[-143.13293457 414.02133179]
[-128.09051514 413.67224121]
[-113.25389862 416.17654419]
[-108.00717926 402.12405396]
[-102.76045990 388.07159424]
[-97.51374817 374.01910400]
[-92.26702881 359.96664429]
[-105.87694550 366.27301025]
[-120.38872528 362.47720337]
[-129.16778564 350.31463623]
[-128.20045471 335.34585571]
[-117.92897797 324.41439819]
[-103.04933929 322.51797485]
[-90.36431122 330.52359009]
[-85.67337036 344.77307129]
[-78.99317169 331.34268188]
[-72.31298065 317.91232300]
[-85.03537750 325.85842896]
[-99.87829590 328.02352905]
[-114.34044647 324.04281616]
[-125.98469543 314.58703613]
[-132.84878540 301.24972534]
[-133.77601624 286.27841187]
[-128.61009216 272.19601440]
[-118.22159576 261.37573242]
[-104.36116028 255.64088440]
[-89.36450958 255.95794678]
[-75.75885010 262.27349854]
[-65.83696747 273.52322388]
[-61.27087784 287.81134033]
[-62.83055115 302.73165894]
[-53.69174957 290.83703613]
[-44.55294800 278.94241333]
[-42.93430328 264.13601685]
[-28.39100838 257.90679932]
[-19.25220680 246.01216125]
[-10.11340427 234.11752319]
[-0.97460157 222.22288513]
[8.16420078 210.32826233]
[5.26886225 193.76155090]
[15.45165730 179.95483398]
[32.80450058 177.74163818]
[41.76519394 165.71226501]
[39.36315155 151.05737305]
[48.27920914 138.73022461]
[63.66689301 136.31010437]
[72.62758636 124.28073120]
[81.58828735 112.25135040]
[90.54898071 100.22197723]
[90.98489380 94.99474335]
[94.31849670 90.38384247]
[99.95990753 87.97315979]
[109.27479553 76.21590424]
[118.58967590 64.45865631]
[127.90455627 52.70140076]
[137.21943665 40.94415283]
[140.09568787 32.27437592]
[146.76158142 29.08255386]
[156.25047302 17.46529007]
[165.65263367 5.77770996]
[174.96751404 -5.97954178]
[184.28239441 -17.73679352]
[193.59727478 -29.49404335]
[201.16165161 -42.44704437]
[206.82444763 -56.33707047]
[212.48722839 -70.22709656]
[218.15000916 -84.11712646]
[223.81280518 -98.00714874]
[226.69807434 -112.72704315]
[226.69807434 -127.72704315]
[226.69807434 -142.72703552]
[226.58641052 -157.72662354]
[226.36308289 -172.72496033]
[212.34355164 -178.67247009]
[201.95991516 -189.81248474]
[197.01115417 -204.21490479]
[198.35470581 -219.38442993]
[205.75778198 -232.69287109]
[217.93775940 -241.83442688]
[232.78436279 -245.22529602]
[247.72535706 -242.27796936]
[260.17211914 -233.50311279]
[267.96813965 -220.42098999]
[269.76275635 -205.29818726]
[265.24502563 -190.75480652]
[255.19764709 -179.31057739]
[241.36141968 -172.94828796]
[241.58474731 -157.94995117]
[244.82748413 -151.30868530]
[241.69807434 -142.72703552]
[241.69807434 -127.72704315]
[241.69807434 -112.72704315]
[248.32722473 -126.18268585]
[257.74868774 -137.85470581]
[269.50274658 -147.17361450]
[283.01593018 -153.68470764]
[297.62884521 -157.07028198]
[312.62854004 -157.16519165]
[327.28314209 -153.96475220]
[340.87762451 -147.62516785]
[352.74865723 -138.45571899]
[362.31701660 -126.90383148]
[369.11590576 -113.53314209]
[372.81353760 -98.99603271]
[373.22949219 -84.00180054]
[370.34350586 -69.28205109]
[364.29635620 -55.55499268]
[355.38314819 -43.49039459]
[344.03872681 -33.67691803]
[330.81665039 -26.59338570]
[316.36203003 -22.58541870]
[301.38012695 -21.84857178]
[286.60198975 -24.41880035]
[272.74862671 -30.17069626]
[260.49597168 -38.82361221]
[250.44190979 -49.95535278]
[243.07695007 -63.02277374]
[238.76048279 -77.38829041]
[237.70283508 -92.34436035]
[232.04003906 -78.45433807]
[226.37725830 -64.56430817]
[220.71446228 -50.67428207]
[215.05168152 -36.78425598]
[226.47610474 -46.50446701]
[240.23425293 -52.48054504]
[255.13589478 -54.19550323]
[269.89190674 -51.50097656]
[283.22570801 -44.63006973]
[293.98382568 -34.17718887]
[301.23559570 -21.04660606]
[304.35360718 -6.37425280]
[303.06814575 8.57056713]
[297.49044800 22.49497604]
[288.10299683 34.19437408]
[275.71792603 42.65665054]
[261.40667725 47.14972687]
[246.40728760 47.28490829]
[232.01736450 43.05050659]
[219.48178101 34.81283188]
[209.88500977 23.28452873]
[204.05723572 9.46291256]
[202.50263977 -5.45631075]
[205.35452271 -20.17916107]
[196.03964233 -8.42191029]
[186.72476196 3.33534122]
[177.40988159 15.09259224]
[175.72010803 22.28748322]
[167.86773682 26.95418930]
[158.37884521 38.57145309]
[148.97668457 50.25903320]
[139.66180420 62.01628494]
[130.34692383 73.77353668]
[121.03204346 85.53078461]
[111.71716309 97.28804016]
[102.57836151 109.18267059]
[93.61766052 121.21205139]
[84.65696716 133.24142456]
[75.69627380 145.27079773]
[77.78254700 160.70729065]
[68.52376556 172.77914429]
[53.79457474 174.67295837]
[44.83387756 186.70233154]
[48.30350113 199.71679688]
[43.71108627 212.17152405]
[32.94342041 219.59712219]
[20.05883408 219.46705627]
[10.92003155 231.36169434]
[1.78122890 243.25633240]
[-7.35757351 255.15095520]
[-16.49637604 267.04559326]
[-18.76869011 282.70275879]
[-32.65831375 288.08120728]
[-41.79711533 299.97583008]
[-50.93591690 311.87048340]
[-58.88260269 324.59249878]
[-65.56279755 338.02288818]
[-72.24298859 351.45324707]
[-78.21455383 365.21337891]
[-83.46127319 379.26583862]
[-88.70799255 393.31829834]
[-93.95471191 407.37078857]
[-99.20143127 421.42324829]
[-86.35400391 429.25524902]
[-75.22113800 439.37728882]
[-66.20529175 451.42349243]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 207]
[29 206]
[30 205]
[31 204]
[32 203]
[40 202]
[41 201]
[42 200]
[56 199]
[57 198]
[58 197]
[60 195]
[61 194]
[62 193]
[63 192]
[64 191]
[67 187]
[68 186]
[71 183]
[72 182]
[73 181]
[74 180]
[77 179]
[78 178]
[79 177]
[80 176]
[81 175]
[83 174]
[84 173]
[85 171]
[86 170]
[87 169]
[88 168]
[89 148]
[90 147]
[91 146]
[92 145]
[93 144]
[94 117]
[95 116]
[96 115]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
