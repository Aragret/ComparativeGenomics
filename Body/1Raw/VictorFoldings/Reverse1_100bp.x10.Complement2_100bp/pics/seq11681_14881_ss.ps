%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[229.29220581 348.58944702]
[239.70692444 337.75061035]
[251.68905640 328.67456055]
[244.61195374 315.44903564]
[237.53485107 302.22351074]
[230.45774841 288.99798584]
[223.38064575 275.77246094]
[216.30354309 262.54693604]
[209.22642517 249.32139587]
[200.90447998 236.84159851]
[191.41558838 225.22434998]
[181.92669678 213.60708618]
[172.43778992 201.98982239]
[165.77189636 198.79798889]
[162.89566040 190.12821960]
[153.58076477 178.37097168]
[144.26588440 166.61372375]
[134.95100403 154.85646057]
[125.54885101 143.16888428]
[111.50524902 138.20637512]
[108.76776886 122.62379456]
[99.27886963 111.00653076]
[95.19949341 125.44116974]
[81.43047333 131.39213562]
[68.12181854 124.47261047]
[65.08418274 109.78340912]
[74.55679321 98.15285492]
[89.55529785 98.15386200]
[80.95673370 85.86302185]
[72.35816956 73.57218933]
[63.75960541 61.28134918]
[46.89765930 53.88160324]
[46.05860901 36.35268784]
[37.27800751 24.19123268]
[28.49740219 12.02977562]
[13.14745712 9.38082600]
[4.41592169 -3.07770300]
[7.03588772 -17.69520569]
[-1.74471569 -29.85666084]
[-10.52531910 -42.01811600]
[-19.48601532 -54.04749298]
[-28.62481689 -65.94213104]
[-37.76361847 -77.83676147]
[-46.90242004 -89.73139191]
[-56.04122543 -101.62602234]
[-65.18002319 -113.52066040]
[-74.31883240 -125.41529083]
[-83.45763397 -137.30992126]
[-81.62756348 -122.42198181]
[-85.56006622 -107.94664001]
[-94.67176819 -96.03123474]
[-107.61100769 -88.44334412]
[-122.45832062 -86.30858612]
[-137.01119995 -89.94364166]
[-149.11082458 -98.80926514]
[-156.96226501 -111.59030151]
[-159.40081787 -126.39075470]
[-156.06474304 -141.01507568]
[-147.44891357 -153.29380798]
[-134.83145142 -161.40550232]
[-120.08406830 -164.14683533]
[-105.39446259 -161.11112976]
[-92.94309998 -152.75007629]
[-99.42259216 -166.27841187]
[-105.90209198 -179.80676270]
[-112.38158417 -193.33511353]
[-118.86108398 -206.86344910]
[-125.34057617 -220.39179993]
[-131.82006836 -233.92015076]
[-146.15713501 -229.42240906]
[-160.98835754 -227.01092529]
[-176.01182556 -226.73475647]
[-190.92166138 -228.59954834]
[-205.41433716 -232.56733704]
[-219.19477844 -238.55734253]
[-231.98245239 -246.44761658]
[-243.51699829 -256.07751465]
[-253.56361389 -267.25097656]
[-261.91772461 -279.74053955]
[-268.40930176 -293.29193115]
[-272.90615845 -307.62927246]
[-275.31671143 -322.46066284]
[-275.59194946 -337.48413086]
[-273.72622681 -352.39385986]
[-269.75753784 -366.88629150]
[-263.76669312 -380.66635132]
[-255.87564087 -393.45352173]
[-246.24502563 -404.98748779]
[-235.07093811 -415.03341675]
[-222.58085632 -423.38674927]
[-209.02905273 -429.87750244]
[-194.69143677 -434.37344360]
[-179.85990906 -436.78311157]
[-164.83641052 -437.05740356]
[-149.92680359 -435.19076538]
[-135.43463135 -431.22119141]
[-121.65493011 -425.22949219]
[-108.86823273 -417.33761597]
[-97.33487701 -407.70629883]
[-87.28964996 -396.53158569]
[-78.93706512 -384.04098511]
[-72.44718170 -370.48880005]
[-67.95211029 -356.15090942]
[-65.54336548 -341.31921387]
[-65.26999664 -326.29571533]
[-67.13755798 -311.38619995]
[-71.10803986 -296.89428711]
[-77.10060120 -283.11495972]
[-84.99324036 -270.32873535]
[-94.62527466 -258.79598999]
[-105.80061340 -248.75144958]
[-118.29173279 -240.39964294]
[-111.81223297 -226.87129211]
[-105.33274078 -213.34295654]
[-98.85324097 -199.81460571]
[-92.37374878 -186.28625488]
[-85.89424896 -172.75791931]
[-79.41475677 -159.22956848]
[-71.56299591 -146.44873047]
[-62.42419434 -134.55409241]
[-53.28539276 -122.65946198]
[-44.14659119 -110.76483154]
[-35.00778961 -98.87019348]
[-25.86898613 -86.97556305]
[-16.73018456 -75.08093262]
[-7.59138203 -63.18629837]
[-3.05639720 -61.68864822]
[0.58592010 -57.32624435]
[1.63613689 -50.79872131]
[10.41674042 -38.63726425]
[19.19734383 -26.47580910]
[33.89670563 -24.36290741]
[42.97473145 -12.15454388]
[40.65885925 3.24917269]
[49.43946075 15.41062832]
[58.22006607 27.57208443]
[70.10800934 29.80887794]
[77.52281189 39.86892700]
[76.05044556 52.68278503]
[84.64900970 64.97362518]
[93.24757385 77.26445770]
[101.84613800 89.55529785]
[110.89613342 101.51763916]
[120.38503265 113.13489532]
[135.10734558 118.92835236]
[137.16612244 133.67999268]
[145.01847839 138.34669495]
[146.70825195 145.54158020]
[156.02313232 157.29882812]
[165.33802795 169.05609131]
[174.65290833 180.81333923]
[184.05505371 192.50091553]
[193.54396057 204.11817932]
[203.03285217 215.73544312]
[212.52174377 227.35270691]
[210.51841736 212.48709106]
[214.65641785 198.06915283]
[224.23843384 186.52856445]
[237.64971924 179.81013489]
[252.63023376 179.04602051]
[266.65551758 184.36500549]
[277.36206055 194.87072754]
[282.94558716 208.79278564]
[282.46520996 223.78509521]
[276.00189209 237.32116699]
[264.64477539 247.11994934]
[250.30775452 251.53016663]
[235.40687561 249.80860901]
[222.45196533 242.24429321]
[229.52906799 255.46981812]
[236.60617065 268.69534302]
[243.68327332 281.92086792]
[250.76037598 295.14639282]
[257.83749390 308.37191772]
[264.91458130 321.59747314]
[279.11340332 316.66384888]
[293.90917969 314.01226807]
[308.93762207 313.70806885]
[323.82861328 315.75866699]
[338.21545410 320.11361694]
[351.74383545 326.66564941]
[364.08062744 335.25341797]
[374.92202759 345.66546631]
[384.00106812 357.64535522]
[391.09411621 370.89807129]
[396.02658081 385.09729004]
[398.67691040 399.89331055]
[398.97988892 414.92178345]
[396.92807007 429.81259155]
[392.57192993 444.19906616]
[386.01876831 457.72692871]
[377.42999268 470.06298828]
[367.01705933 480.90353394]
[355.03640747 489.98156738]
[341.78308105 497.07354736]
[327.58346558 502.00482178]
[312.78723145 504.65396118]
[297.75875854 504.95568848]
[282.86810303 502.90261841]
[268.48199463 498.54531860]
[254.95468140 491.99102783]
[242.61930847 483.40121460]
[231.77961731 472.98739624]
[222.70257568 461.00601196]
[215.61169434 447.75210571]
[210.68159485 433.55209351]
[208.03369141 418.75561523]
[207.73318481 403.72711182]
[209.78747559 388.83663940]
[214.14598083 374.45089722]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 175]
[4 174]
[5 173]
[6 172]
[7 171]
[8 170]
[9 169]
[10 155]
[11 154]
[12 153]
[13 152]
[15 151]
[16 150]
[17 149]
[18 148]
[19 146]
[21 144]
[22 143]
[28 142]
[29 141]
[30 140]
[31 139]
[33 136]
[34 135]
[35 134]
[38 131]
[39 130]
[40 129]
[41 126]
[42 125]
[43 124]
[44 123]
[45 122]
[46 121]
[47 120]
[48 119]
[63 118]
[64 117]
[65 116]
[66 115]
[67 114]
[68 113]
[69 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
