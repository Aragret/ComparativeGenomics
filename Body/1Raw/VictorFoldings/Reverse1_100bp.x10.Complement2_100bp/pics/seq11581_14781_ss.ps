%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCCCCCAAACCUACUCUUACCGACAAUGAUGCUCCCGAUACACCGACUAACUUCUCAUACGUUACUCGCUAAAAUCCAGACAAACAGCAUCCGUCUAxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[84.94768524 519.47521973]
[74.25370789 530.36566162]
[59.89067459 535.52954102]
[44.71038055 533.94165039]
[31.72688103 525.91723633]
[23.51806259 513.04949951]
[21.71378899 497.89340210]
[26.67230415 483.45819092]
[37.40908813 472.60992432]
[51.79234314 467.50262451]
[53.35286713 452.58401489]
[54.91338730 437.66540527]
[56.47391129 422.74679565]
[58.03443527 407.82821655]
[59.59495926 392.90960693]
[53.22372437 379.44644165]
[62.35473633 366.52609253]
[63.91526031 351.60748291]
[53.20364380 343.63858032]
[47.78494644 331.31860352]
[49.17243958 317.82250977]
[57.11009598 306.68646240]
[69.61169434 300.88122559]
[71.39416504 285.98748779]
[73.17662811 271.09378052]
[67.00654602 257.53726196]
[76.32891083 244.75428772]
[66.94978333 233.24049377]
[68.54528809 218.11076355]
[80.68560791 208.35113525]
[82.46807861 193.45741272]
[74.70243835 177.72013855]
[85.86154938 163.07241821]
[79.49031067 149.60926819]
[88.62133026 136.68891907]
[90.18185425 121.77031708]
[91.74237061 106.85171509]
[90.96105194 91.87207794]
[87.85694122 77.19677734]
[74.89431763 68.55916595]
[71.95536804 53.63210678]
[80.26988983 41.32745743]
[77.16577911 26.65215683]
[74.06166840 11.97685432]
[70.95755768 -2.69844794]
[67.74428558 -17.35023499]
[64.42202759 -31.97769547]
[53.82036972 -43.72143936]
[58.54661942 -57.84630585]
[55.22436142 -72.47376251]
[51.90210342 -87.10122681]
[39.08145142 -100.31910706]
[44.92199326 -116.86767578]
[41.38232040 -131.44404602]
[37.84264755 -146.02043152]
[34.30297470 -160.59680176]
[30.76330185 -175.17317200]
[27.22362900 -189.74955750]
[23.68395805 -204.32592773]
[20.03586960 -218.87554932]
[16.06377411 -233.34007263]
[11.87676239 -247.74385071]
[7.68975115 -262.14764404]
[2.28930020 -269.51464844]
[3.54934263 -276.79708862]
[-0.42275369 -291.26162720]
[-4.39484978 -305.72616577]
[-8.36694622 -320.19067383]
[-12.33904266 -334.65521240]
[-16.31113815 -349.11972046]
[-20.28323555 -363.58425903]
[-24.25533104 -378.04876709]
[-28.22742653 -392.51330566]
[-32.19952393 -406.97781372]
[-36.17161942 -421.44235229]
[-51.07978058 -419.56417847]
[-66.10348511 -419.82687378]
[-80.93687439 -422.22506714]
[-95.27795410 -426.70996094]
[-108.83476257 -433.19021606]
[-121.33129883 -441.53393555]
[-132.51313782 -451.57119751]
[-142.15266418 -463.09771729]
[-150.05358887 -475.87881470]
[-156.05508423 -489.65423584]
[-160.03495789 -504.14358521]
[-161.91220093 -519.05187988]
[-161.64857483 -534.07556152]
[-159.24945068 -548.90881348]
[-154.76368713 -563.24963379]
[-148.28259277 -576.80603027]
[-139.93811035 -589.30206299]
[-129.90013123 -600.48327637]
[-118.37302399 -610.12207031]
[-105.59145355 -618.02221680]
[-91.81564331 -624.02282715]
[-77.32604218 -628.00183105]
[-62.41764832 -629.87811279]
[-47.39397430 -629.61358643]
[-32.56088257 -627.21356201]
[-18.22035789 -622.72686768]
[-4.66435432 -616.24493408]
[7.83114719 -607.89971924]
[19.01175308 -597.86102295]
[28.64983940 -586.33331299]
[36.54919052 -573.55126953]
[42.54898071 -559.77508545]
[46.52706528 -545.28521729]
[48.40245819 -530.37670898]
[48.13697052 -515.35308838]
[45.73601532 -500.52014160]
[41.24847031 -486.17987061]
[34.76569366 -472.62426758]
[26.41967010 -460.12930298]
[16.38031197 -448.94931030]
[4.85200834 -439.31195068]
[-7.93053961 -431.41339111]
[-21.70709610 -425.41442871]
[-17.73499870 -410.94992065]
[-13.76290321 -396.48538208]
[-9.79080677 -382.02087402]
[-5.81871080 -367.55633545]
[-1.84661472 -353.09182739]
[2.12548161 -338.62728882]
[6.09757757 -324.16278076]
[10.06967354 -309.69824219]
[14.04176998 -295.23373413]
[18.01386642 -280.76919556]
[22.09353256 -266.33465576]
[26.28054428 -251.93086243]
[30.46755600 -237.52708435]
[34.14730453 -234.48266602]
[35.95362854 -229.09431458]
[34.55792999 -222.63185120]
[39.27628326 -216.94335938]
[38.26033401 -207.86560059]
[41.80000687 -193.28923035]
[45.33967590 -178.71284485]
[48.87934875 -164.13647461]
[52.41902161 -149.56010437]
[55.95869446 -134.98371887]
[59.49836731 -120.40734863]
[69.66219330 -113.84814453]
[72.73045349 -101.73329163]
[66.52956390 -90.42348480]
[69.85182190 -75.79602051]
[73.17407990 -61.16856384]
[83.53810120 -50.47107315]
[79.04948425 -35.29995346]
[82.37174225 -20.67249489]
[86.91864014 -14.84604168]
[85.63285828 -5.80255795]
[88.73696899 8.87274456]
[91.84107971 23.54804611]
[94.94519043 38.22335052]
[107.53000641 46.10738373]
[110.88706970 60.94600677]
[102.53224182 74.09266663]
[105.63635254 88.76796722]
[109.48875427 74.27110291]
[117.06185913 61.32320786]
[127.80896759 50.85899353]
[140.95422363 43.63388443]
[155.54867554 40.16946793]
[170.53871155 40.71584320]
[184.84222412 45.23356628]
[197.42658997 53.39649582]
[207.38337708 64.61534882]
[213.99375916 78.08022308]
[216.78053284 92.81907654]
[215.54254150 107.76789856]
[210.36914062 121.84752655]
[201.63380432 134.04153442]
[189.96713257 143.46963501]
[176.21138000 149.45118713]
[161.35955811 151.55439758]
[146.48384094 149.62741089]
[132.65812683 143.80937195]
[120.88050842 134.52026367]
[112.00121307 122.43067169]
[106.66098022 108.41223907]
[105.10045624 123.33084106]
[103.53993225 138.24945068]
[109.79954529 152.77967834]
[100.78015137 164.63294983]
[108.28105927 175.12576294]
[106.67417145 187.51937866]
[97.36179352 195.23988342]
[95.57933044 210.13359070]
[105.07372284 222.48245239]
[103.05388641 237.56140137]
[91.22263336 246.53675842]
[97.26522064 261.15856934]
[88.07034302 272.87625122]
[86.28787994 287.76995850]
[84.50541687 302.66366577]
[97.06632996 313.99151611]
[100.36747742 330.41110229]
[93.30209351 345.41250610]
[78.83386230 353.16802979]
[77.27333832 368.08660889]
[83.53295898 382.61685181]
[74.51356506 394.47012329]
[72.95304108 409.38873291]
[71.39251709 424.30734253]
[69.83199310 439.22592163]
[68.27146912 454.14453125]
[66.71094513 469.06314087]
[79.72594452 477.03637695]
[87.98537445 489.87167358]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 208]
[11 207]
[12 206]
[13 205]
[14 204]
[15 203]
[17 201]
[18 200]
[23 196]
[24 195]
[25 194]
[27 192]
[30 189]
[31 188]
[33 185]
[35 183]
[36 182]
[37 181]
[38 159]
[39 158]
[42 155]
[43 154]
[44 153]
[45 152]
[46 150]
[47 149]
[49 147]
[50 146]
[51 145]
[53 142]
[54 141]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
[60 134]
[61 131]
[62 130]
[63 129]
[65 128]
[66 127]
[67 126]
[68 125]
[69 124]
[70 123]
[71 122]
[72 121]
[73 120]
[74 119]
[75 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
