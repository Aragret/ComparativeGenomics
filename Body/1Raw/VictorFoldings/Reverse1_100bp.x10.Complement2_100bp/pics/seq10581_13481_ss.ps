%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[60.06417465 559.97595215]
[53.00035095 573.55389404]
[40.42903519 582.28436279]
[25.23902130 584.16107178]
[10.92086697 578.75286865]
[0.76477826 567.30242920]
[-2.89545083 552.44104004]
[0.78127414 537.58367920]
[10.95006847 526.14453125]
[25.27421761 520.75219727]
[27.05668259 505.85845947]
[28.83914948 490.96475220]
[29.95479774 476.00631714]
[30.40140343 461.01293945]
[30.84800911 446.01959229]
[31.29461670 431.02624512]
[29.47270966 428.89581299]
[28.38492584 425.91531372]
[28.35926056 422.36077881]
[29.61783600 418.62173462]
[32.24059677 415.16122437]
[33.57883072 400.22103882]
[34.91706467 385.28085327]
[36.14403915 370.33111572]
[37.25968933 355.37265015]
[30.49043083 342.10516357]
[39.23270798 328.91870117]
[40.34835815 313.96023560]
[41.46400833 299.00177002]
[31.77230453 290.51058960]
[28.69488144 277.79794312]
[33.57302856 265.45233154]
[44.83423615 258.06314087]
[46.17247009 243.12297058]
[47.51070404 228.18278503]
[48.84893799 213.24259949]
[40.85323334 225.93388367]
[29.64406013 235.90155029]
[16.10542488 242.35952759]
[1.30503643 244.79847717]
[-13.58988285 243.02607727]
[-27.40465736 237.18211365]
[-39.04979706 227.72744751]
[-47.60691833 215.40771484]
[-52.40116501 201.19451904]
[-53.05445480 186.20874023]
[-49.51525497 171.63224792]
[-42.06268692 158.61460876]
[-31.28448868 148.18241882]
[-18.03067780 141.15843201]
[-3.34650254 138.09657288]
[11.60998154 139.23831177]
[25.65924454 144.49362183]
[37.69330215 153.44802856]
[46.76309586 165.39535522]
[52.15334702 179.39340210]
[53.43877029 194.34167480]
[59.10155487 180.45164490]
[53.10617065 166.86521912]
[58.65117264 152.69808960]
[72.94251251 146.50169373]
[78.60530090 132.61166382]
[84.26808929 118.72164154]
[89.93087769 104.83161926]
[95.49010468 90.89981842]
[100.94545746 76.92701721]
[106.40081787 62.95422363]
[111.12094879 48.71623230]
[114.98525238 34.22254181]
[118.74155426 19.70048141]
[122.49785614 5.17842245]
[126.25415802 -9.34363651]
[129.68521118 -23.94595909]
[132.78932190 -38.62126160]
[135.89343262 -53.29656601]
[138.99754333 -67.97186279]
[140.89083862 -82.85189819]
[141.56062317 -97.83693695]
[142.23040771 -112.82197571]
[142.90019226 -127.80701447]
[143.56997681 -142.79205322]
[144.23976135 -157.77709961]
[144.46308899 -172.77543640]
[144.23976135 -187.77377319]
[144.01643372 -202.77210999]
[143.79310608 -217.77044678]
[143.56977844 -232.76878357]
[143.34645081 -247.76712036]
[135.40454102 -261.45056152]
[142.95150757 -274.29162598]
[142.72817993 -289.28994751]
[142.50485229 -304.28829956]
[139.24801636 -312.82238770]
[142.39151001 -319.51119995]
[142.39151001 -334.51119995]
[127.89399719 -338.75369263]
[115.17971802 -346.90991211]
[105.27936554 -358.31866455]
[98.99552917 -372.05511475]
[96.83759308 -387.00570679]
[98.98050690 -401.95843506]
[105.25054932 -415.70120239]
[115.13942719 -427.11990356]
[127.84550476 -435.28887939]
[142.33876038 -439.54589844]
[157.44427490 -439.54589844]
[171.93753052 -435.28887939]
[184.64360046 -427.11990356]
[194.53248596 -415.70120239]
[200.80252075 -401.95843506]
[202.94543457 -387.00570679]
[200.78750610 -372.05511475]
[194.50366211 -358.31866455]
[184.60331726 -346.90991211]
[171.88903809 -338.75369263]
[157.39151001 -334.51119995]
[157.39151001 -319.51119995]
[157.50318909 -304.51162720]
[157.72651672 -289.51327515]
[157.94984436 -274.51495361]
[165.87577820 -261.90429688]
[158.34478760 -247.99044800]
[158.56811523 -232.99211121]
[158.79144287 -217.99377441]
[159.01477051 -202.99543762]
[159.23809814 -187.99710083]
[159.46142578 -172.99876404]
[161.37664795 -170.95179749]
[162.59643555 -168.02284241]
[162.78079224 -164.47299194]
[161.69042969 -160.68147278]
[159.22480774 -157.10731506]
[158.55502319 -142.12226868]
[157.88523865 -127.13722992]
[157.21545410 -112.15219116]
[156.54566956 -97.16715240]
[155.87588501 -82.18211365]
[164.87850952 -94.18013763]
[178.38583374 -100.70336914]
[193.38024902 -100.29448700]
[206.51199341 -93.04484558]
[214.84739685 -80.57403564]
[216.52430725 -65.66806793]
[211.16809082 -51.65696716]
[199.97534180 -41.67085266]
[185.44654846 -37.94064713]
[170.82749939 -41.29969025]
[159.38410950 -50.99756241]
[153.67285156 -64.86775970]
[150.56874084 -50.19245529]
[147.46463013 -35.51715088]
[144.36051941 -20.84184837]
[145.96704102 -17.70314789]
[146.13311768 -13.63037682]
[144.43627930 -9.30902576]
[140.77621460 -5.58733654]
[137.01991272 8.93472290]
[133.26361084 23.45678139]
[129.50730896 37.97883987]
[130.87564087 45.24172592]
[125.58547211 52.68833160]
[138.57849121 45.19290543]
[153.37104797 47.67889023]
[163.20019531 59.00973511]
[163.57217407 74.00511932]
[154.31690979 85.80936432]
[139.66580200 89.02572632]
[126.31712341 82.18372345]
[120.37361145 68.40957642]
[114.91825867 82.38237762]
[109.46289825 96.35517883]
[109.69788361 104.41230774]
[103.82089996 110.49440002]
[98.15811157 124.38442993]
[92.49533081 138.27445984]
[86.83254242 152.16448975]
[92.71794891 166.58668518]
[86.77721405 180.59246826]
[72.99158478 186.11442566]
[67.32879639 200.00445557]
[63.78912354 214.58084106]
[62.45088959 229.52102661]
[61.11265564 244.46121216]
[59.77442169 259.40139771]
[71.23516846 272.61767578]
[69.62328339 289.69741821]
[56.42245865 300.11743164]
[55.30681229 315.07589722]
[54.19116211 330.03433228]
[60.88062286 344.37176514]
[52.21814346 356.48831177]
[51.10249329 371.44677734]
[53.58496094 380.23739624]
[49.85725021 386.61907959]
[48.51901627 401.55926514]
[47.18078232 416.49945068]
[46.28796387 431.47286987]
[45.84135818 446.46621704]
[45.39475250 461.45956421]
[44.94814682 476.45291138]
[56.58007812 466.98199463]
[71.51545715 468.37283325]
[81.19862366 479.82867432]
[80.08261871 494.78710938]
[68.80673981 504.67922974]
[53.83032227 503.83843994]
[43.73286819 492.74722290]
[41.95040131 507.64093018]
[40.16793442 522.53466797]
[52.81507111 531.15490723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 209]
[11 208]
[12 207]
[13 200]
[14 199]
[15 198]
[16 197]
[21 196]
[22 195]
[23 194]
[24 192]
[25 191]
[27 189]
[28 188]
[29 187]
[33 184]
[34 183]
[35 182]
[36 181]
[57 180]
[58 179]
[61 176]
[62 175]
[63 174]
[64 173]
[65 171]
[66 170]
[67 169]
[68 161]
[69 159]
[70 158]
[71 157]
[72 156]
[73 152]
[74 151]
[75 150]
[76 149]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
[82 132]
[83 127]
[84 126]
[85 125]
[86 124]
[87 123]
[88 122]
[90 120]
[91 119]
[92 118]
[94 117]
[95 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
