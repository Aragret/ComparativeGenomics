%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[131.67247009 884.87921143]
[118.31503296 878.02575684]
[105.71948242 869.85614014]
[94.01507568 860.45410156]
[83.32192993 849.91619873]
[73.74976349 838.35052490]
[65.39680481 825.87579346]
[58.34877014 812.61999512]
[52.67798233 798.71917725]
[48.44263458 784.31591797]
[45.68619156 769.55810547]
[44.43693161 754.59716797]
[44.70767593 739.58654785]
[46.49565125 724.68041992]
[49.78250885 710.03155518]
[54.53451538 695.79046631]
[60.70290756 682.10314941]
[68.22439575 669.11016846]
[77.02178955 656.94476318]
[87.00481415 645.73181152]
[98.07102966 635.58636475]
[110.10688019 626.61254883]
[122.98885345 618.90246582]
[136.58476257 612.53515625]
[150.75508118 607.57604980]
[165.35441589 604.07598877]
[163.35040283 589.21044922]
[161.34638977 574.34490967]
[146.65367126 567.02362061]
[139.14476013 552.23925781]
[141.95558167 535.72863770]
[154.17364502 524.03186035]
[151.94853210 509.19778442]
[149.72341919 494.36376953]
[147.49830627 479.52972412]
[145.27317810 464.69567871]
[143.04806519 449.86163330]
[140.82295227 435.02758789]
[138.59782410 420.19354248]
[136.37271118 405.35949707]
[134.14759827 390.52545166]
[131.92248535 375.69140625]
[120.59082031 369.55764771]
[114.77417755 357.84231567]
[116.79681396 344.72290039]
[126.14175415 335.02307129]
[124.13774109 320.15753174]
[122.13372803 305.29202271]
[106.04768372 302.63546753]
[91.55095673 295.13406372]
[80.06507111 283.51040649]
[72.72029114 268.89196777]
[70.24443817 252.70169067]
[72.89076996 236.51951599]
[80.41210938 221.92819214]
[92.08390045 210.35844421]
[106.77400208 202.94874573]
[104.32826996 188.14947510]
[101.88254547 173.35020447]
[99.43682098 158.55093384]
[96.99108887 143.75166321]
[86.26691437 154.23937988]
[71.36286163 152.54554749]
[63.26563644 139.91877747]
[67.94421387 125.66708374]
[81.94972992 120.29626465]
[94.95688629 127.76413727]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[90.10292816 73.57409668]
[78.25857544 63.45732880]
[77.11424255 48.28679657]
[86.83202362 37.05735779]
[85.49378967 22.11717033]
[84.15555573 7.17698622]
[82.81732178 -7.76319885]
[73.87968445 -20.81805229]
[80.45066071 -34.18486023]
[79.11242676 -49.12504578]
[70.17478943 -62.17990112]
[76.74576569 -75.54670715]
[67.80812836 -88.60156250]
[74.37910461 -101.96836853]
[73.04086304 -116.90855408]
[71.70262909 -131.84873962]
[70.36439514 -146.78892517]
[68.58193207 -161.68264771]
[66.35681152 -176.51667786]
[64.13169861 -191.35072327]
[49.16524124 -193.39569092]
[35.38172913 -199.57560730]
[23.89852715 -209.38952637]
[15.64652729 -222.04183960]
[11.29468346 -236.50691223]
[11.19577885 -251.61210632]
[15.35783195 -266.13290405]
[23.44344330 -278.89221191]
[34.79714966 -288.85565186]
[48.49855423 -295.21551514]
[63.43695068 -297.45629883]
[78.40134430 -295.39630127]
[92.17864227 -289.20254517]
[103.65197754 -279.37710571]
[111.89126587 -266.71649170]
[116.22857666 -252.24707031]
[116.31230164 -237.14178467]
[112.13566589 -222.62515259]
[104.03723907 -209.87399292]
[92.67353058 -199.92196655]
[78.96574402 -193.57585144]
[81.19085693 -178.74180603]
[83.41597748 -163.90776062]
[85.58750153 -162.13500977]
[87.18766022 -159.39529419]
[87.84462738 -155.90190125]
[87.27059174 -151.99868774]
[85.30458069 -148.12715149]
[86.64281464 -133.18696594]
[87.98104858 -118.24678802]
[89.31928253 -103.30660248]
[98.16120148 -91.32037354]
[91.68595123 -76.88494110]
[100.52786255 -64.89871216]
[94.05261230 -50.46327972]
[95.39084625 -35.52309418]
[104.23276520 -23.53686333]
[97.75750732 -9.10143280]
[99.09574127 5.83875179]
[100.43397522 20.77893639]
[101.77220917 35.71912003]
[113.33098602 45.04275894]
[114.90097809 60.17516708]
[105.04311371 72.23586273]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[109.89707184 126.42590332]
[111.79035950 141.30593872]
[114.23609161 156.10520935]
[116.68181610 170.90447998]
[119.12754059 185.70375061]
[121.57327271 200.50302124]
[135.24829102 202.06478882]
[148.03924561 207.11309814]
[159.07427979 215.29672241]
[167.60301208 226.05096436]
[173.04766846 238.63662720]
[175.04214478 252.19079590]
[173.45666504 265.78601074]
[168.40615845 278.49380493]
[160.24198914 289.44790649]
[149.52754211 297.90359497]
[136.99925232 303.28799438]
[139.00326538 318.15353394]
[141.00727844 333.01907349]
[155.11059570 343.36874390]
[157.32162476 360.38128662]
[146.75653076 373.46627808]
[148.98164368 388.30032349]
[151.20675659 403.13436890]
[153.43186951 417.96841431]
[155.65699768 432.80245972]
[157.88211060 447.63650513]
[160.10722351 462.47055054]
[162.33233643 477.30459595]
[164.55746460 492.13864136]
[166.78257751 506.97268677]
[169.00769043 521.80670166]
[181.67658997 527.23718262]
[189.94229126 538.13195801]
[191.73100281 551.58074951]
[186.68151855 564.05664062]
[176.21191406 572.34094238]
[178.21592712 587.20642090]
[180.21994019 602.07196045]
[195.22494507 601.58111572]
[210.20262146 602.61077881]
[224.99926758 605.15051270]
[239.46307373 609.17413330]
[253.44557190 614.64044189]
[266.80331421 621.49328613]
[279.39923096 629.66235352]
[291.10403442 639.06390381]
[301.79766846 649.60131836]
[311.37033081 661.16656494]
[319.72384644 673.64093018]
[326.77246094 686.89642334]
[332.44384766 700.79699707]
[336.67984009 715.20007324]
[339.43695068 729.95776367]
[340.68685913 744.91864014]
[340.41677856 759.92926025]
[338.62945557 774.83551025]
[335.34323120 789.48443604]
[330.59185791 803.72576904]
[324.42407227 817.41333008]
[316.90316772 830.40667725]
[308.10629272 842.57244873]
[298.12374878 853.78582764]
[287.05798340 863.93176270]
[275.02255249 872.90612793]
[262.14089966 880.61682129]
[248.54527283 886.98468018]
[234.37516785 891.94445801]
[219.77600098 895.44512939]
[204.89755249 897.45086670]
[189.89253235 897.94110107]
[174.91490173 896.91076660]
[160.11836243 894.37042236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 176]
[27 175]
[28 174]
[32 169]
[33 168]
[34 167]
[35 166]
[36 165]
[37 164]
[38 163]
[39 162]
[40 161]
[41 160]
[42 159]
[46 156]
[47 155]
[48 154]
[57 143]
[58 142]
[59 141]
[60 140]
[61 139]
[67 138]
[68 137]
[70 135]
[71 134]
[74 131]
[75 130]
[76 129]
[77 128]
[79 126]
[80 125]
[82 123]
[84 121]
[85 120]
[86 119]
[87 118]
[88 113]
[89 112]
[90 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
