%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[14.05478668 646.38610840]
[1.63502324 654.80834961]
[-11.34199429 662.34368896]
[-24.81304359 668.95550537]
[-38.71249390 674.61145020]
[-52.97262573 679.28405762]
[-67.52397156 682.95056152]
[-82.29563141 685.59307861]
[-97.21563721 687.19873047]
[-112.21130371 687.75964355]
[-127.20957184 687.27319336]
[-142.13737488 685.74169922]
[-156.92198181 683.17260742]
[-171.49136353 679.57849121]
[-185.77452087 674.97674561]
[-199.70190430 669.38989258]
[-213.20562744 662.84509277]
[-226.21992493 655.37432861]
[-238.68136597 647.01385498]
[-250.52926636 637.80450439]
[-261.70590210 627.79113770]
[-272.15676880 617.02252197]
[-281.83102417 605.55108643]
[-290.68151855 593.43273926]
[-298.66506958 580.72656250]
[-305.74285889 567.49444580]
[-311.88037109 553.80078125]
[-317.04772949 539.71234131]
[-321.21972656 525.29785156]
[-324.37603760 510.62734985]
[-326.50128174 495.77246094]
[-327.58514404 480.80551147]
[-327.62231445 465.79937744]
[-326.61260986 450.82723999]
[-324.56094360 435.96200562]
[-321.47735596 421.27609253]
[-317.37680054 406.84103394]
[-312.27932739 392.72720337]
[-306.20971680 379.00332642]
[-299.19757080 365.73629761]
[-291.27700806 352.99072266]
[-282.48669434 340.82870483]
[-272.86938477 329.30950928]
[-262.47195435 318.48922729]
[-251.34506226 308.42059326]
[-239.54293823 299.15267944]
[-227.12304688 290.73062134]
[-214.14591980 283.19543457]
[-200.67477417 276.58383179]
[-186.77525330 270.92807007]
[-172.51504517 266.25567627]
[-157.96365356 262.58938599]
[-143.19195557 259.94708252]
[-128.27192688 258.34167480]
[-113.27625275 257.78091431]
[-98.27798462 258.26757812]
[-83.35021210 259.79931641]
[-68.56564331 262.36862183]
[-53.99631500 265.96298218]
[-39.71321106 270.56488037]
[-25.78591537 276.15194702]
[-12.28228092 282.69689941]
[-4.81453991 269.68795776]
[2.65320134 256.67901611]
[10.12094307 243.67005920]
[17.58868408 230.66110229]
[24.95937347 217.59690857]
[32.23260117 204.47822571]
[39.50583267 191.35952759]
[46.77906036 178.24082947]
[41.53034210 166.47306824]
[44.05548859 153.63928223]
[53.65244675 144.46820068]
[66.97241211 142.46990967]
[74.44015503 129.46096802]
[81.90789032 116.45201111]
[89.37563324 103.44306183]
[96.74632263 90.37887573]
[104.01955414 77.26017761]
[111.29278564 64.14148712]
[118.36988831 50.91595840]
[124.94991302 37.43622208]
[131.22727966 23.81290817]
[137.50463867 10.18959141]
[143.78199768 -3.43372512]
[150.05935669 -17.05704117]
[156.33671570 -30.68035698]
[162.61407471 -44.30367279]
[168.89143372 -57.92699051]
[175.16880798 -71.55030823]
[181.44616699 -85.17362213]
[187.72352600 -98.79693604]
[194.00088501 -112.42025757]
[197.97297668 -126.88478088]
[199.53350830 -141.80337524]
[201.09402466 -156.72198486]
[202.65454102 -171.64059448]
[204.21507263 -186.55920410]
[190.17660522 -192.11112976]
[178.15730286 -201.24563599]
[169.04910278 -213.28486633]
[163.52786255 -227.33543396]
[162.00332642 -242.35470581]
[164.58859253 -257.22811890]
[171.09184265 -270.85202026]
[181.03048706 -282.21539307]
[193.66700745 -290.47497559]
[208.06369019 -295.01788330]
[223.15220642 -295.50701904]
[237.81288147 -291.90606689]
[250.95780945 -284.48220825]
[261.61154175 -273.78640747]
[268.98352051 -260.61230469]
[272.52664185 -245.93754578]
[271.97805786 -230.85107422]
[267.37841797 -216.47241211]
[259.06906128 -203.86854553]
[247.66659546 -193.97477722]
[234.01718140 -187.52529907]
[219.13368225 -184.99867249]
[217.57315063 -170.08006287]
[216.01263428 -155.16146851]
[214.45210266 -140.24285889]
[212.89158630 -125.32425690]
[220.97006226 -137.96301270]
[232.00849915 -148.11943054]
[245.27478027 -155.11985779]
[259.88897705 -158.50000000]
[274.88177490 -158.03564453]
[289.25878906 -153.75759888]
[302.06640625 -145.94961548]
[312.45520020 -135.12956238]
[319.73605347 -122.01509857]
[323.42608643 -107.47605896]
[323.28051758 -92.47676849]
[319.30908203 -78.01206970]
[311.77511597 -65.04135895]
[301.17834473 -54.42493057]
[288.22161865 -46.86694336]
[273.76428223 -42.86868668]
[258.76528931 -42.69535065]
[244.21943665 -46.35842896]
[231.09150696 -53.61497116]
[220.25222778 -63.98366547]
[212.42051697 -76.77680206]
[208.11584473 -91.14585876]
[207.62420654 -106.14289093]
[201.34683228 -92.51957703]
[195.06947327 -78.89626312]
[188.79211426 -65.27294159]
[182.51475525 -51.64962769]
[176.23739624 -38.02631378]
[169.96003723 -24.40299606]
[163.68267822 -10.77968025]
[157.40531921 2.84363556]
[151.12796021 16.46695137]
[144.85058594 30.09026718]
[138.57322693 43.71358490]
[139.44467163 47.13014984]
[138.70457458 51.13855362]
[136.09277344 54.97676086]
[131.69931030 57.79537201]
[132.27227783 62.53675842]
[129.87281799 67.68841553]
[124.41147614 71.41471100]
[117.13824463 84.53340912]
[109.86502075 97.65209961]
[109.02146149 105.66839600]
[102.38459015 110.91079712]
[94.91684723 123.91975403]
[87.44910431 136.92871094]
[79.98136139 149.93765259]
[84.85935974 166.73719788]
[76.24771118 181.57479858]
[59.89775467 185.51406860]
[52.62452698 198.63275146]
[45.35129547 211.75144958]
[38.07806778 224.87014771]
[36.65390015 233.89286804]
[30.59763527 238.12884521]
[23.12989426 251.13778687]
[15.66215420 264.14675903]
[8.19441223 277.15570068]
[0.72667146 290.16464233]
[13.18824100 298.52490234]
[25.03626823 307.73410034]
[36.21303177 317.74731445]
[46.66408157 328.51580811]
[56.33849335 339.98709106]
[65.18914032 352.10528564]
[73.17289734 364.81137085]
[80.25087738 378.04339600]
[86.38858795 391.73696899]
[91.55612946 405.82528687]
[95.72832489 420.23977661]
[98.88484955 434.91018677]
[101.01032257 449.76507568]
[102.09439087 464.73202515]
[102.13177490 479.73812866]
[101.12228394 494.71029663]
[99.07084656 509.57556152]
[95.98744965 524.26153564]
[91.88712311 538.69659424]
[86.78983307 552.81054688]
[80.72042084 566.53448486]
[73.70845795 579.80163574]
[65.78810120 592.54730225]
[56.99793625 604.70947266]
[47.38079071 616.22882080]
[36.98352432 627.04925537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 184]
[63 183]
[64 182]
[65 181]
[66 180]
[67 178]
[68 177]
[69 176]
[70 175]
[74 172]
[75 171]
[76 170]
[77 169]
[78 167]
[79 166]
[80 165]
[81 162]
[82 158]
[83 157]
[84 156]
[85 155]
[86 154]
[87 153]
[88 152]
[89 151]
[90 150]
[91 149]
[92 148]
[93 147]
[94 124]
[95 123]
[96 122]
[97 121]
[98 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
