%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[204.37825012 165.08876038]
[208.69444275 150.71611023]
[194.68142700 145.36492920]
[180.66839600 140.01374817]
[166.65538025 134.66255188]
[152.64234924 129.31137085]
[138.62933350 123.96018982]
[133.98132324 125.05794525]
[128.59436035 123.24750519]
[124.28268433 118.23542023]
[110.43519592 112.46939087]
[93.86164093 115.05654907]
[83.82108307 101.61915588]
[69.88928223 96.05992889]
[54.20430756 98.13167572]
[45.25094986 86.22846222]
[31.31915092 80.66923523]
[24.87665367 94.22097778]
[17.57912636 107.33211517]
[9.45655632 119.94875336]
[0.54232216 132.01904297]
[-9.12694645 143.49340820]
[-19.51151466 154.32467651]
[-30.56871223 164.46835327]
[-42.25310135 173.88273621]
[-54.51666641 182.52915955]
[-67.30901337 190.37208557]
[-80.57757568 197.37928772]
[-94.26783752 203.52197266]
[-108.32353210 208.77488708]
[-122.68689728 213.11645508]
[-137.29891968 216.52883911]
[-152.09956360 218.99801636]
[-167.02798462 220.51382446]
[-182.02287292 221.07006836]
[-197.02256775 220.66442871]
[-211.96546936 219.29858398]
[-226.79014587 216.97813416]
[-241.43569946 213.71264648]
[-255.84194946 209.51551819]
[-269.94967651 204.40399170]
[-283.70092773 198.39909363]
[-297.03918457 191.52546692]
[-309.90963745 183.81138611]
[-322.25939941 175.28854370]
[-334.03771973 165.99194336]
[-345.19622803 155.95980835]
[-355.68902588 145.23335266]
[-365.47302246 133.85667419]
[-374.50799561 121.87648773]
[-382.75683594 109.34204102]
[-390.18563843 96.30484772]
[-396.76388550 82.81847382]
[-402.46453857 68.93833160]
[-407.26416016 54.72146988]
[-411.14306641 40.22629929]
[-414.08526611 25.51239395]
[-416.07870483 10.64020824]
[-417.11517334 -4.32913971]
[-417.19042969 -19.33413887]
[-416.30413818 -34.31312943]
[-414.45999146 -49.20455933]
[-411.66549683 -63.94723892]
[-407.93218994 -78.48058319]
[-403.27539062 -92.74487305]
[-397.71423340 -106.68148804]
[-391.27160645 -120.23316193]
[-383.97393799 -133.34420776]
[-375.85122681 -145.96075439]
[-366.93685913 -158.03096008]
[-357.26745605 -169.50521851]
[-346.88275146 -180.33636475]
[-335.82543945 -190.47991943]
[-324.14096069 -199.89418030]
[-311.87728882 -208.54046631]
[-299.08486938 -216.38323975]
[-285.81622314 -223.39030457]
[-272.12588501 -229.53282166]
[-258.07012939 -234.78559875]
[-243.70672607 -239.12699890]
[-229.09466553 -242.53923035]
[-214.29399109 -245.00823975]
[-199.36555481 -246.52388000]
[-184.37066650 -247.07995605]
[-169.37097168 -246.67414856]
[-154.42808533 -245.30813599]
[-139.60342407 -242.98753357]
[-124.95791626 -239.72187805]
[-110.55171967 -235.52458191]
[-96.44404602 -230.41291809]
[-82.69287109 -224.40785217]
[-69.35469055 -217.53408813]
[-56.48432159 -209.81985474]
[-44.13465118 -201.29687500]
[-32.35642624 -192.00015259]
[-21.19804382 -181.96789551]
[-10.70536137 -171.24131775]
[-0.92149276 -159.86451721]
[8.11335659 -147.88424683]
[16.36206055 -135.34970093]
[23.79072380 -122.31242371]
[30.36882019 -108.82597351]
[36.06931686 -94.94577789]
[40.86879349 -80.72885895]
[44.74752045 -66.23365021]
[47.68956757 -51.51970673]
[49.68283844 -36.64750290]
[50.71914673 -21.67814255]
[50.79423141 -6.67314148]
[49.90778351 8.30583954]
[48.06344986 23.19725037]
[45.26880264 37.93989563]
[41.53533173 52.47319794]
[36.87837601 66.73743439]
[50.81017685 72.29666138]
[65.49865723 69.82727814]
[75.44850922 82.12812805]
[89.38031006 87.68735504]
[100.33884430 83.74379730]
[111.12353516 88.14057159]
[116.20123291 98.62190247]
[130.04872131 104.38793945]
[143.98051453 109.94716644]
[157.99354553 115.29834747]
[172.00656128 120.64953613]
[186.01957703 126.00072479]
[200.03260803 131.35191345]
[214.04562378 136.70309448]
[220.40806580 123.11185455]
[227.74563599 110.02130127]
[236.01918030 97.50128174]
[245.18455505 85.61859894]
[255.19287109 74.43664551]
[265.99072266 64.01509094]
[277.52050781 54.40953064]
[289.72067261 45.67122269]
[302.52615356 37.84678650]
[315.86865234 30.97796631]
[329.67691040 25.10141754]
[343.87731934 20.24848747]
[358.39410400 16.44507408]
[373.14974976 13.71146870]
[388.06561279 12.06225681]
[403.06204224 11.50623608]
[418.05908203 12.04637432]
[432.97665405 13.67979050]
[447.73522949 16.39776802]
[462.25601196 20.18580627]
[476.46154785 25.02369308]
[490.27603149 30.88561630]
[503.62576294 37.74029922]
[516.43951416 45.55117416]
[528.64898682 54.27655792]
[540.18890381 63.86989975]
[550.99780273 74.28001404]
[561.01794434 85.45136261]
[570.19592285 97.32433319]
[578.48272705 109.83558655]
[585.83410645 122.91835785]
[592.21093750 136.50285339]
[597.57916260 150.51658630]
[601.91009521 164.88479614]
[605.18066406 179.53080750]
[607.37341309 194.37649536]
[608.47662354 209.34262085]
[608.48449707 224.34936523]
[607.39685059 239.31665039]
[605.21960449 254.16461182]
[601.96429443 268.81402588]
[597.64831543 283.18673706]
[592.29473877 297.20605469]
[585.93206787 310.79721069]
[578.59429932 323.88763428]
[570.32055664 336.40750122]
[561.15496826 348.29003906]
[551.14648438 359.47183228]
[540.34844971 369.89321899]
[528.81848145 379.49859619]
[516.61816406 388.23669434]
[503.81256104 396.06091309]
[490.46997070 402.92950439]
[476.66159058 408.80584717]
[462.46112061 413.65853882]
[447.94427490 417.46170044]
[433.18856812 420.19506836]
[418.27270508 421.84405518]
[403.27624512 422.39981079]
[388.27923584 421.85943604]
[373.36166382 420.22576904]
[358.60314941 417.50753784]
[344.08242798 413.71926880]
[329.87698364 408.88116455]
[316.06259155 403.01901245]
[302.71295166 396.16409302]
[289.89932251 388.35302734]
[277.69003296 379.62744141]
[266.15023804 370.03390503]
[255.34153748 359.62359619]
[245.32157898 348.45208740]
[236.14381409 336.57897949]
[227.85720825 324.06759644]
[220.50601196 310.98468018]
[214.12939453 297.40008545]
[208.76142883 283.38626099]
[204.43072510 269.01800537]
[201.16038513 254.37193298]
[198.96788025 239.52621460]
[197.86489868 224.56005859]
[197.85731506 209.55331421]
[198.94519043 194.58604431]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 128]
[3 127]
[4 126]
[5 125]
[6 124]
[7 123]
[10 122]
[11 121]
[13 118]
[14 117]
[16 115]
[17 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
