%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[81.25658417 808.22656250]
[66.25224304 808.20782471]
[51.27487183 807.30847168]
[36.37609482 805.53173828]
[21.60726929 802.88360596]
[7.01931143 799.37335205]
[-7.33749342 795.01300049]
[-21.41365433 789.81762695]
[-35.16064453 783.80505371]
[-48.53107834 776.99609375]
[-61.47886658 769.41418457]
[-73.95936584 761.08551025]
[-85.92956543 752.03869629]
[-97.34819794 742.30493164]
[-108.17589569 731.91784668]
[-118.37533569 720.91326904]
[-127.91135406 709.32897949]
[-136.75108337 697.20507812]
[-144.86405945 684.58325195]
[-152.22230530 671.50708008]
[-158.80044556 658.02154541]
[-164.57582092 644.17327881]
[-169.52850342 630.00988770]
[-173.64144897 615.58026123]
[-176.90045166 600.93414307]
[-179.29429626 586.12194824]
[-180.81471252 571.19482422]
[-181.45648193 556.20422363]
[-181.21737671 541.20178223]
[-180.09820557 526.23925781]
[-178.10285950 511.36816406]
[-175.23820496 496.63980103]
[-171.51411438 482.10494995]
[-166.94340515 467.81372070]
[-161.54187012 453.81536865]
[-155.32810974 440.15817261]
[-148.32356262 426.88916016]
[-140.55233765 414.05410767]
[-132.04125977 401.69723511]
[-122.81964874 389.86117554]
[-112.91930389 378.58670044]
[-102.37434387 367.91268921]
[-91.22113037 357.87594604]
[-79.49810791 348.51107788]
[-67.24568176 339.85031128]
[-54.50609589 331.92355347]
[-41.32326508 324.75811768]
[-27.74263382 318.37872314]
[-13.81101704 312.80731201]
[0.42356142 308.06314087]
[14.91203022 304.16250610]
[29.60444450 301.11892700]
[44.45015717 298.94284058]
[59.39798737 297.64178467]
[74.39641571 297.22021484]
[89.39373016 297.67959595]
[90.73196411 282.73941040]
[92.07019806 267.79922485]
[93.40843201 252.85903931]
[94.74666595 237.91885376]
[92.21244812 230.97627258]
[96.21766663 222.76675415]
[97.77819061 207.84815979]
[99.33870697 192.92955017]
[99.45037842 177.92996216]
[98.11214447 162.98977661]
[96.77391052 148.04959106]
[95.43567657 133.10940552]
[81.53994751 127.86202240]
[71.29017639 117.11174774]
[66.71073914 102.98181152]
[68.70610809 88.26295471]
[76.88217926 75.86222076]
[89.62413788 68.22882843]
[88.28590393 53.28863907]
[86.94766998 38.34845352]
[72.54892731 36.29921341]
[58.97684860 31.09314156]
[46.91384888 22.99559784]
[36.96567917 12.41723919]
[29.63097954 -0.10680863]
[25.27630997 -13.94401550]
[24.11781311 -28.39639664]
[26.21050262 -42.73572159]
[31.44565392 -56.24020004]
[39.55644608 -68.23082733]
[50.13156128 -78.10552216]
[62.63604355 -85.36933899]
[76.43836975 -89.65929413]
[75.32271576 -104.61774445]
[74.20706940 -119.57620239]
[65.46479034 -132.76268005]
[72.23404694 -146.03016663]
[57.49478149 -149.38359070]
[44.39960480 -156.93394470]
[34.11293793 -168.00985718]
[27.54946136 -181.62646484]
[25.29279327 -196.57299805]
[27.54359818 -211.52041626]
[34.10173416 -225.13960266]
[44.38405609 -236.21955872]
[57.47626877 -243.77503967]
[72.21421814 -247.13424683]
[87.28742218 -245.99845886]
[101.35557556 -240.46867371]
[113.16774750 -231.03660583]
[121.67360687 -218.54092407]
[126.11682892 -204.09277344]
[126.10231781 -188.97685242]
[121.63135529 -174.53724670]
[113.10151672 -162.05793762]
[101.27124786 -152.64857483]
[87.19250488 -147.14581299]
[95.85498047 -135.02926636]
[89.16551971 -120.69184875]
[90.28117371 -105.73339844]
[91.39682007 -90.77494049]
[106.69159698 -88.29779816]
[120.96014404 -82.23599243]
[133.37496948 -72.93653870]
[143.21499634 -60.93436050]
[149.90747070 -46.92149734]
[153.06126404 -31.70721626]
[152.48974609 -16.17127800]
[148.22184753 -1.21305585]
[140.50056458 12.30052567]
[129.76919556 23.58522987]
[116.64584351 31.98502541]
[101.88785553 37.01021957]
[103.22608948 51.95040512]
[104.56432343 66.89058685]
[118.46005249 72.13797760]
[128.70982361 82.88825226]
[133.28926086 97.01818848]
[131.29389954 111.73704529]
[123.11782074 124.13777924]
[110.37586212 131.77117920]
[111.71409607 146.71136475]
[113.05233002 161.65155029]
[114.39056396 176.59173584]
[121.07136536 163.16165161]
[132.58503723 153.54733276]
[146.99131775 149.36891174]
[161.86250305 151.33056641]
[174.69252014 159.10169983]
[183.31930542 171.37275696]
[186.28907776 186.07583618]
[183.10137939 200.73320007]
[174.29341125 212.87484741]
[161.34945679 220.45469666]
[146.45080566 222.19538879]
[132.10812378 217.80360413]
[120.73843384 208.01943970]
[114.25731659 194.49006653]
[112.69679260 209.40867615]
[111.13626862 224.32728577]
[109.68685150 239.25709534]
[108.34861755 254.19728088]
[107.01038361 269.13745117]
[105.67214966 284.07763672]
[104.33391571 299.01782227]
[119.17413330 301.23107910]
[133.85887146 304.31146240]
[148.33752441 308.24832153]
[162.56018066 313.02813721]
[176.47781372 318.63442993]
[190.04241943 325.04782104]
[203.20726013 332.24624634]
[215.92695618 340.20486450]
[228.15765381 348.89627075]
[239.85719299 358.29049683]
[250.98524475 368.35513306]
[261.50341797 379.05551147]
[271.37551880 390.35473633]
[280.56744385 402.21386719]
[289.04757690 414.59201050]
[296.78662109 427.44647217]
[303.75793457 440.73300171]
[309.93746948 454.40573120]
[315.30392456 468.41757202]
[319.83883667 482.72018433]
[323.52651978 497.26431274]
[326.35427856 511.99978638]
[328.31237793 526.87579346]
[329.39407349 541.84112549]
[329.59561157 556.84411621]
[328.91629028 571.83306885]
[327.35848999 586.75634766]
[324.92758179 601.56243896]
[321.63189697 616.20037842]
[317.48284912 630.61968994]
[312.49468994 644.77062988]
[306.68466187 658.60443115]
[300.07278442 672.07336426]
[292.68179321 685.13110352]
[284.53726196 697.73254395]
[275.66717529 709.83435059]
[266.10217285 721.39465332]
[255.87521362 732.37371826]
[245.02154541 742.73364258]
[233.57858276 752.43872070]
[221.58575439 761.45556641]
[209.08444214 769.75299072]
[196.11770630 777.30242920]
[182.73027039 784.07788086]
[168.96826172 790.05596924]
[154.87913513 795.21612549]
[140.51145935 799.54052734]
[125.91474915 803.01422119]
[111.13934326 805.62530518]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 161]
[57 160]
[58 159]
[59 158]
[60 157]
[62 156]
[63 155]
[64 154]
[65 140]
[66 139]
[67 138]
[68 137]
[74 131]
[75 130]
[76 129]
[89 117]
[90 116]
[91 115]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
