%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[57.11592102 708.34417725]
[50.57911301 721.89984131]
[41.52308273 733.91961670]
[30.29592323 743.94146729]
[17.32917213 751.58013916]
[3.12123871 756.54211426]
[-11.78176212 758.63653564]
[-26.80699921 757.78302002]
[-41.37694168 754.01434326]
[-54.93156052 747.47534180]
[-66.94985199 738.41735840]
[-76.96986389 727.18859863]
[-84.60646057 714.22064209]
[-89.56610107 700.01190186]
[-91.65815735 685.10852051]
[-90.80220795 670.08343506]
[-87.03116608 655.51409912]
[-80.48996735 641.96057129]
[-71.43004608 629.94372559]
[-60.19964600 619.92553711]
[-47.23042297 612.29101562]
[-33.02088165 607.33367920]
[-18.11720467 605.24401855]
[-3.09224510 606.10241699]
[0.66405571 591.58038330]
[4.42035627 577.05828857]
[8.17665672 562.53625488]
[11.93295765 548.01416016]
[15.68925858 533.49212646]
[19.44555855 518.97009277]
[22.44033432 504.27206421]
[24.66545105 489.43801880]
[22.54895592 482.35690308]
[27.03571129 474.40032959]
[29.48143768 459.60107422]
[31.92716599 444.80178833]
[20.19786835 437.39291382]
[12.15292931 426.03723145]
[9.03390694 412.43023682]
[11.34389305 398.61883545]
[18.76669121 386.69375610]
[30.20964622 378.47286987]
[43.96437836 375.22415161]
[46.63017273 360.46295166]
[49.29596710 345.70172119]
[36.69270706 337.69628906]
[28.09129143 325.44226074]
[24.82792473 310.78909302]
[27.43029213 295.96292114]
[35.53250504 283.22842407]
[47.92618942 274.54281616]
[62.74061203 271.25518799]
[65.40640259 256.49395752]
[68.07220459 241.73274231]
[70.73799896 226.97152710]
[73.40379333 212.21031189]
[60.81689453 202.07707214]
[55.02439880 186.89146423]
[57.69577408 170.76445007]
[68.19532013 158.11315918]
[83.73020935 152.45108032]
[86.17593384 137.65180969]
[88.62166595 122.85253906]
[91.06739044 108.05326843]
[93.29251099 93.21922302]
[95.29652405 78.35369110]
[97.30053711 63.48816681]
[91.47631073 48.77799988]
[100.84462738 37.19853210]
[102.84864044 22.33300591]
[104.85265350 7.46747732]
[105.63397980 -7.51215982]
[105.18737030 -22.50551033]
[104.74076080 -37.49885941]
[104.29415894 -52.49221039]
[88.62915039 -60.45717621]
[79.20395660 -75.18389893]
[78.53913879 -92.56671143]
[86.72769928 -107.81337738]
[101.43428802 -116.76628113]
[100.54147339 -131.73968506]
[91.99649048 -145.05485535]
[98.96253204 -158.22009277]
[98.06971741 -173.19351196]
[97.17690277 -188.16691589]
[88.63191986 -201.48208618]
[95.59796143 -214.64732361]
[94.70513916 -229.62072754]
[93.81232452 -244.59413147]
[83.31839752 -259.72552490]
[91.77899933 -275.10034180]
[90.66335297 -290.05880737]
[89.54769897 -305.01724243]
[74.80843353 -308.37066650]
[61.71326065 -315.92102051]
[51.42658997 -326.99694824]
[44.86311340 -340.61355591]
[42.60644531 -355.56008911]
[44.85725021 -370.50750732]
[51.41538620 -384.12667847]
[61.69770813 -395.20663452]
[74.78991699 -402.76211548]
[89.52787018 -406.12133789]
[104.60107422 -404.98553467]
[118.66922760 -399.45574951]
[130.48139954 -390.02368164]
[138.98725891 -377.52801514]
[143.43048096 -363.07986450]
[143.41596985 -347.96392822]
[138.94500732 -333.52435303]
[130.41516113 -321.04504395]
[118.58489990 -311.63565063]
[104.50615692 -306.13290405]
[105.62180328 -291.17443848]
[106.73744965 -276.21600342]
[115.69580078 -268.08737183]
[116.74768829 -255.63436890]
[108.78572845 -245.48695374]
[109.67855072 -230.51354980]
[110.57136536 -215.54014587]
[119.05249023 -203.29595947]
[112.15030670 -189.05972290]
[113.04312134 -174.08631897]
[113.93593597 -159.11291504]
[122.41706085 -146.86874390]
[115.51487732 -132.63250732]
[116.40769196 -117.65909576]
[128.24858093 -113.25322723]
[137.57797241 -104.66468048]
[142.98599243 -93.14334106]
[143.63726807 -80.38579559]
[139.39971924 -68.28545380]
[130.86955261 -58.65159225]
[119.28750610 -52.93881607]
[119.73411560 -37.94546509]
[120.18071747 -22.95211601]
[120.62732697 -7.95876598]
[128.71264648 -20.59314346]
[141.69737244 -28.10292816]
[156.68067932 -28.81041718]
[170.31526184 -22.55755234]
[179.55511475 -10.74124050]
[182.33602905 3.99872231]
[178.03674316 18.36939240]
[167.61773682 29.16032410]
[153.40663147 33.96079636]
[138.57823181 31.69837379]
[126.44523621 22.87848282]
[119.71818542 9.47149086]
[117.71417236 24.33701897]
[115.71015167 39.20254898]
[121.67771912 52.84943390]
[112.16606140 65.49217987]
[110.16204834 80.35770416]
[108.15803528 95.22323608]
[110.31138611 100.00623322]
[109.63162231 105.65523529]
[105.86666107 110.49899292]
[103.42093658 125.29826355]
[100.97520447 140.09753418]
[98.52947998 154.89680481]
[109.78695679 163.19934082]
[116.33771515 175.48362732]
[116.95365143 189.32554626]
[111.57153320 202.02130127]
[101.29417419 211.11549377]
[88.16500854 214.87609863]
[85.49921417 229.63731384]
[82.83341980 244.39854431]
[80.16762543 259.15975952]
[77.50183105 273.92095947]
[90.23049164 282.18273926]
[98.80322266 294.65475464]
[101.93933868 309.41885376]
[99.19139862 324.21875000]
[91.00877380 336.80480957]
[78.66446686 345.27615356]
[64.05718231 348.36752319]
[61.39139175 363.12875366]
[58.72559357 377.88995361]
[71.97328949 387.33624268]
[79.74746704 401.56320190]
[80.53623962 417.69818115]
[74.23240662 432.50848389]
[62.14468384 443.04895020]
[46.72643661 447.24752808]
[44.28070831 462.04681396]
[41.83498001 476.84606934]
[39.49949265 491.66314697]
[37.27437592 506.49719238]
[49.28464508 497.51089478]
[64.26780701 498.22143555]
[75.37375641 508.30398560]
[77.52501678 523.14892578]
[69.73804474 535.96936035]
[55.57294464 540.90393066]
[41.50581741 535.69665527]
[33.96761703 522.72637939]
[30.21131706 537.24841309]
[26.45501709 551.77050781]
[22.69871712 566.29254150]
[18.94241524 580.81463623]
[15.18611526 595.33666992]
[11.42981434 609.85870361]
[24.98654938 616.39331055]
[37.00777435 625.44744873]
[47.03142166 636.67297363]
[54.67221069 649.63848877]
[59.63645172 663.84558105]
[61.73332977 678.74829102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 204]
[25 203]
[26 202]
[27 201]
[28 200]
[29 199]
[30 198]
[31 190]
[32 189]
[34 188]
[35 187]
[36 186]
[43 180]
[44 179]
[45 178]
[52 171]
[53 170]
[54 169]
[55 168]
[56 167]
[61 161]
[62 160]
[63 159]
[64 158]
[65 155]
[66 154]
[67 153]
[69 151]
[70 150]
[71 149]
[72 137]
[73 136]
[74 135]
[75 134]
[80 127]
[81 126]
[83 124]
[84 123]
[85 122]
[87 120]
[88 119]
[89 118]
[91 115]
[92 114]
[93 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
