%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[122.09179688 565.06323242]
[126.39064789 550.63739014]
[133.50570679 537.37237549]
[143.14559937 525.81134033]
[154.91560364 516.42773438]
[168.33374023 509.60583496]
[164.36164856 495.14129639]
[160.38955688 480.67678833]
[156.41744995 466.21224976]
[152.44535828 451.74774170]
[148.36569214 437.31317139]
[144.17868042 422.90939331]
[130.87469482 411.46514893]
[135.41307068 393.61901855]
[130.90544128 379.31231689]
[126.29142761 365.03958130]
[121.67742157 350.76684570]
[117.06340790 336.49411011]
[106.43988037 330.70904541]
[102.47906494 318.85595703]
[107.82159424 307.11627197]
[103.42059326 292.77639771]
[99.01959991 278.43655396]
[88.48337555 272.49395752]
[84.69947815 260.58322144]
[90.21619415 248.92436218]
[86.02918243 234.52058411]
[81.84217072 220.11680603]
[79.22853088 234.88734436]
[73.64093018 248.80778503]
[65.31695557 261.28622437]
[54.61054230 271.79205322]
[41.97694016 279.87860107]
[27.95333481 285.20199585]
[13.13601398 287.53588867]
[-1.84498036 286.78100586]
[-16.35264969 282.96951294]
[-29.77011871 276.26342773]
[-41.52687073 266.94793701]
[-51.12300491 255.41908264]
[-58.15048599 242.16711426]
[-62.31050110 227.75552368]
[-63.42617035 212.79707336]
[-61.45004654 197.92781067]
[-56.46615982 183.77998352]
[-48.68642807 170.95516968]
[-38.44165039 159.99868774]
[-26.16743660 151.37641907]
[-12.38569450 145.45495605]
[2.31757069 142.48612976]
[17.31716728 142.59613037]
[31.97530556 145.78030396]
[45.66871262 151.90325928]
[57.81513977 160.70465088]
[67.89811707 171.81021118]
[75.48889923 184.74775696]
[80.26477814 198.96733093]
[82.26879120 184.10179138]
[84.16208649 169.22175598]
[85.94454956 154.32804871]
[87.72702026 139.43432617]
[89.50948334 124.54061127]
[91.29194641 109.64688873]
[92.63018036 94.70670319]
[93.52299500 79.73329926]
[94.41581726 64.75989532]
[95.30863190 49.78648758]
[92.69555664 41.03379440]
[96.32784271 34.59731293]
[89.63838196 20.25988960]
[98.30086517 8.14334297]
[99.41651154 -6.81511021]
[100.53215790 -21.77356339]
[101.64781189 -36.73201752]
[102.76345825 -51.69047165]
[96.07399750 -66.02789307]
[104.73648071 -78.14443970]
[105.85212708 -93.10289001]
[99.16266632 -107.44031525]
[107.82514954 -119.55686188]
[108.94079590 -134.51531982]
[106.45832825 -143.30593872]
[110.18604279 -149.68763733]
[111.52427673 -164.62782288]
[112.86251068 -179.56800842]
[114.08948517 -194.51774597]
[115.20513153 -209.47619629]
[115.76334381 -224.46580505]
[115.76334381 -239.46580505]
[115.76334381 -254.46580505]
[115.76334381 -269.46578979]
[115.76334381 -284.46578979]
[101.07476044 -287.81143188]
[87.49914551 -294.34216309]
[75.71744537 -303.73040771]
[66.32062531 -315.50527954]
[59.78003311 -329.07614136]
[56.42373657 -343.76229858]
[56.42008591 -358.82708740]
[59.76926804 -373.51486206]
[66.30328369 -387.08886719]
[75.69438934 -398.86831665]
[87.47154236 -408.26226807]
[101.04399109 -414.79956055]
[115.73094940 -418.15231323]
[130.79573059 -418.15231323]
[145.48269653 -414.79956055]
[159.05514526 -408.26226807]
[170.83229065 -398.86831665]
[180.22340393 -387.08886719]
[186.75741577 -373.51486206]
[190.10659790 -358.82708740]
[190.10295105 -343.76229858]
[186.74665833 -329.07614136]
[180.20605469 -315.50527954]
[170.80924988 -303.73040771]
[159.02754211 -294.34216309]
[145.45193481 -287.81143188]
[130.76333618 -284.46578979]
[130.76333618 -269.46578979]
[130.76333618 -254.46580505]
[130.76333618 -239.46580505]
[130.76333618 -224.46580505]
[143.05401611 -233.06460571]
[157.48245239 -228.96334839]
[163.41253662 -215.18533325]
[156.47285461 -201.88717651]
[141.77905273 -198.87181091]
[130.16358948 -208.36054993]
[129.04794312 -193.40208435]
[131.68524170 -186.49800110]
[127.80269623 -178.22976685]
[126.46446228 -163.28958130]
[125.12622833 -148.34939575]
[123.89924622 -133.39967346]
[122.78359985 -118.44121552]
[129.55285645 -105.17372131]
[120.81057739 -91.98724365]
[119.69493103 -77.02879333]
[126.46418762 -63.76129532]
[117.72190857 -50.57482147]
[116.60626221 -35.61636734]
[115.49061584 -20.65791512]
[114.37496185 -5.69946194]
[113.25931549 9.25899124]
[120.02857208 22.52648544]
[111.28629303 35.71295929]
[110.28203583 50.67930603]
[109.38922119 65.65270996]
[108.49640656 80.62611389]
[107.60359192 95.59952545]
[109.42616272 98.04241180]
[110.40015411 101.20246124]
[110.25822449 104.76662445]
[108.85242462 108.32752228]
[106.18566895 111.42935944]
[104.40319824 126.32307434]
[102.62073517 141.21679688]
[100.83826447 156.11050415]
[99.05580139 171.00422668]
[101.14327240 179.89694214]
[97.13432312 186.10580444]
[95.13031006 200.97134399]
[96.24595642 215.92979431]
[100.43296814 230.33357239]
[104.61997986 244.73735046]
[118.20464325 257.16870117]
[113.35944366 274.03555298]
[117.76044464 288.37542725]
[122.16143799 302.71527100]
[135.92968750 314.94299316]
[131.33613586 331.88009644]
[135.95014954 346.15283203]
[140.56416321 360.42556763]
[145.17817688 374.69830322]
[150.79557800 381.90127563]
[149.75291443 389.21801758]
[160.76129150 395.93948364]
[164.13168335 407.97378540]
[158.58245850 418.72238159]
[162.76947021 433.12615967]
[168.16992188 440.49319458]
[166.90988159 447.77563477]
[170.88197327 462.24017334]
[174.85408020 476.70468140]
[178.82617188 491.16921997]
[182.79826355 505.63372803]
[197.81857300 504.64617920]
[212.73016357 506.70275879]
[226.92240906 511.71923828]
[239.81414795 519.49023438]
[250.87747192 529.69744873]
[259.65933228 541.92297363]
[265.80014038 555.66619873]
[269.04843140 570.36425781]
[269.27117920 585.41534424]
[266.45928955 600.20312500]
[260.72784424 614.12200928]
[252.31159973 626.60205078]
[241.55517578 637.13220215]
[228.89904785 645.28125000]
[214.86146545 650.71551514]
[200.01727295 653.21246338]
[184.97431946 652.66986084]
[170.34860229 649.10986328]
[156.73904419 642.67834473]
[144.70295715 633.63854980]
[134.73318481 622.36077881]
[127.23800659 609.30676270]
[122.52433777 595.01110840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 187]
[7 186]
[8 185]
[9 184]
[10 183]
[11 181]
[12 180]
[14 177]
[15 175]
[16 174]
[17 173]
[18 172]
[21 170]
[22 169]
[23 168]
[26 166]
[27 165]
[28 164]
[57 163]
[58 162]
[59 160]
[60 159]
[61 158]
[62 157]
[63 156]
[64 151]
[65 150]
[66 149]
[67 148]
[69 147]
[71 145]
[72 144]
[73 143]
[74 142]
[75 141]
[77 139]
[78 138]
[80 136]
[81 135]
[83 134]
[84 133]
[85 132]
[86 130]
[87 129]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
