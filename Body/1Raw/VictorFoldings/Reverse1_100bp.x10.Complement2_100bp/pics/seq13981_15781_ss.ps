%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAACCCAACUCCACUACUACCUCCACCUCUAAACCACGACACUUUAACAAAAUCCAUUAUCGAAAAGAUCAGUCCAAUCCAGAUCCUCCUCAUCCCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[131.90307617 771.09637451]
[116.88779449 771.02972412]
[101.97097778 769.31164551]
[87.33370972 765.96295166]
[73.15367126 761.02435303]
[59.60299301 754.55578613]
[46.84617233 746.63580322]
[35.03805923 737.36047363]
[24.32199478 726.84240723]
[14.82806587 715.20935059]
[6.67151690 702.60241699]
[-0.04863773 689.17474365]
[-5.25082207 675.08929443]
[-8.87188530 660.51702881]
[-10.86787319 645.63482666]
[-11.21455383 630.62341309]
[-9.90772057 615.66497803]
[-6.96323633 600.94104004]
[-2.41684508 586.63043213]
[3.67626476 572.90686035]
[11.24212837 559.93682861]
[20.18890190 547.87786865]
[30.40798187 536.87634277]
[41.77531815 527.06579590]
[54.15291977 518.56530762]
[67.39053345 511.47811890]
[81.32746887 505.89016724]
[95.79454041 501.86935425]
[110.61613464 499.46447754]
[125.61233521 498.70471191]
[126.50514984 483.73129272]
[127.39796448 468.75790405]
[128.29078674 453.78448486]
[129.18359375 438.81109619]
[130.07641602 423.83767700]
[130.74620056 408.85263062]
[131.19281006 393.85928345]
[131.63941956 378.86593628]
[132.08601379 363.87258911]
[132.53262329 348.87924194]
[131.30564880 333.92950439]
[128.42037964 319.20962524]
[125.53510284 304.48971558]
[122.64983368 289.76983643]
[119.76455688 275.04995728]
[116.87928772 260.33004761]
[113.99401093 245.61016846]
[111.10874176 230.89027405]
[108.40223694 228.63037109]
[106.65586853 224.94726562]
[106.52663422 220.30650330]
[108.43875885 215.44946289]
[106.21363831 200.61541748]
[96.67552185 193.17559814]
[94.70034027 180.83532715]
[101.88551331 170.12382507]
[99.88150024 155.25830078]
[97.87747955 140.39277649]
[82.55632782 136.49382019]
[69.89999390 127.01982117]
[61.84195328 113.41806793]
[59.61321640 97.76647949]
[63.55425262 82.45610046]
[73.06300354 69.82585144]
[86.68685150 61.80522156]
[84.46173096 46.97117996]
[82.23661804 32.13713455]
[70.43457794 18.00230408]
[77.48976898 1.93397450]
[75.04403687 -12.86529636]
[71.73059845 -16.89867973]
[70.42607117 -21.35418320]
[70.95483398 -25.39589691]
[72.83496857 -28.37875557]
[71.05249786 -43.27247238]
[69.27003479 -58.16619110]
[53.76219177 -62.41061020]
[41.10087967 -72.25752258]
[33.20669937 -86.17576599]
[31.26271629 -102.01953125]
[35.53725052 -117.35913086]
[45.34726715 -129.85363770]
[59.16734695 -137.60807800]
[57.16333008 -152.47360229]
[55.15931702 -167.33914185]
[41.05601120 -177.68882751]
[38.84497833 -194.70135498]
[49.41007614 -207.78636169]
[47.18495941 -222.62040710]
[44.95984268 -237.45445251]
[29.99338722 -239.49940491]
[16.20987511 -245.67933655]
[4.72667217 -255.49324036]
[-3.52532744 -268.14556885]
[-7.87717152 -282.61062622]
[-7.97607613 -297.71582031]
[-3.81402302 -312.23663330]
[4.27158833 -324.99594116]
[15.62529469 -334.95935059]
[29.32670021 -341.31924438]
[44.26509476 -343.56002808]
[59.22948837 -341.50003052]
[73.00679016 -335.30624390]
[84.48012543 -325.48080444]
[92.71940613 -312.82022095]
[97.05671692 -298.35079956]
[97.14044952 -283.24548340]
[92.96381378 -268.72888184]
[84.86538696 -255.97770691]
[73.50167847 -246.02568054]
[59.79388809 -239.67956543]
[62.01900482 -224.84552002]
[64.24411774 -210.01147461]
[75.57578278 -203.87773132]
[81.39242554 -192.16239929]
[79.36978912 -179.04298401]
[70.02484894 -169.34315491]
[72.02886200 -154.47761536]
[74.03287506 -139.61209106]
[87.72624969 -136.54113770]
[99.57411194 -128.96441650]
[108.14230347 -117.77489471]
[112.38542175 -104.30424500]
[111.77432251 -90.16446686]
[106.36203766 -77.05491638]
[96.77986908 -66.55810547]
[84.16374969 -59.94865417]
[85.94622040 -45.05493927]
[87.72868347 -30.16122055]
[89.84330750 -15.31102371]
[92.28903961 -0.51175290]
[101.93685913 6.78523350]
[104.09555817 19.09473419]
[97.07065582 29.91201782]
[99.29577637 44.74606323]
[101.52089691 59.58010483]
[115.21121979 62.52067566]
[127.07859802 69.95286560]
[135.70080566 80.98597717]
[140.04454041 94.29777527]
[139.58924866 108.29294586]
[134.38946533 121.29426575]
[125.06836700 131.74363708]
[112.74301147 138.38876343]
[114.74702454 153.25428772]
[116.75103760 168.11981201]
[128.34132385 182.42878723]
[121.04768372 198.39030457]
[123.27279663 213.22434998]
[125.82862854 228.00498962]
[128.71389771 242.72488403]
[131.59918213 257.44479370]
[134.48445129 272.16467285]
[137.36972046 286.88455200]
[140.25498962 301.60446167]
[143.14027405 316.32434082]
[146.02554321 331.04425049]
[150.80267334 316.82528687]
[160.33755493 305.24572754]
[173.37570190 297.82907104]
[188.20172119 295.55111694]
[202.86500549 298.71154785]
[215.43632507 306.89456177]
[224.26173401 319.02352905]
[228.18006897 333.50271606]
[226.67582703 348.42709351]
[219.94691467 361.83312988]
[208.87863159 371.95703125]
[194.92720032 377.46679688]
[179.92817688 377.63754272]
[165.85491943 372.44680786]
[154.55903625 362.57748413]
[147.52597046 349.32583618]
[147.07936096 364.31921387]
[146.63276672 379.31256104]
[146.18615723 394.30590820]
[145.73954773 409.29925537]
[148.53192139 415.29208374]
[147.96388245 420.94668579]
[145.04981995 424.73049927]
[144.15699768 439.70388794]
[143.26419067 454.67730713]
[142.37136841 469.65072632]
[141.47856140 484.62411499]
[140.58573914 499.59753418]
[155.38540649 502.13391113]
[169.81620789 506.28302002]
[183.70297241 511.99450684]
[196.87713623 519.19897461]
[209.17877197 527.80902100]
[220.45855713 537.72009277]
[230.57954407 548.81195068]
[239.41889954 560.94989014]
[246.86929321 573.98651123]
[252.84031677 587.76367188]
[257.25946045 602.11413574]
[260.07308960 616.86358643]
[261.24707031 631.83306885]
[260.76708984 646.84082031]
[258.63906860 661.70465088]
[254.88874817 676.24420166]
[249.56170654 690.28295898]
[242.72257996 703.65045166]
[234.45442200 716.18438721]
[224.85757446 727.73272705]
[214.04853821 738.15521240]
[202.15853882 747.32531738]
[189.33189392 755.13177490]
[175.72431946 761.47973633]
[161.50099182 766.29223633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 185]
[31 184]
[32 183]
[33 182]
[34 181]
[35 180]
[36 177]
[37 176]
[38 175]
[39 174]
[40 173]
[41 157]
[42 156]
[43 155]
[44 154]
[45 153]
[46 152]
[47 151]
[48 150]
[52 149]
[53 148]
[56 146]
[57 145]
[58 144]
[65 136]
[66 135]
[67 134]
[69 131]
[70 130]
[74 129]
[75 128]
[76 127]
[83 119]
[84 118]
[85 117]
[88 113]
[89 112]
[90 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
