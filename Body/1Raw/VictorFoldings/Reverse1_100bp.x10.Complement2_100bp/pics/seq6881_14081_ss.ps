%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[-10.00136185 356.58605957]
[-15.14290810 370.68347168]
[-21.22444344 384.40164185]
[-28.21821594 397.67791748]
[-36.09231567 410.45178223]
[-44.81081772 422.66491699]
[-54.33393478 434.26162720]
[-64.61822510 445.18893433]
[-75.61675262 455.39703369]
[-87.27933502 464.83935547]
[-99.55275726 473.47274780]
[-112.38102722 481.25790405]
[-125.70560455 488.15924072]
[-139.46569824 494.14529419]
[-153.59851074 499.18878174]
[-168.03956604 503.26660156]
[-182.72297668 506.36022949]
[-197.58172607 508.45553589]
[-212.54804993 509.54293823]
[-227.55361938 509.61746216]
[-242.52999878 508.67880249]
[-257.40884399 506.73123169]
[-272.12225342 503.78363037]
[-286.60311890 499.84945679]
[-300.78533936 494.94665527]
[-314.60421753 489.09759521]
[-327.99670410 482.32894897]
[-340.90167236 474.67163086]
[-353.26025391 466.16058350]
[-365.01608276 456.83459473]
[-376.11547852 446.73626709]
[-386.50781250 435.91165161]
[-396.14566040 424.41015625]
[-404.98507690 412.28421021]
[-412.98568726 399.58923340]
[-420.11099243 386.38305664]
[-426.32852173 372.72598267]
[-431.60986328 358.68032837]
[-435.93093872 344.31018066]
[-439.27203369 329.68109131]
[-441.61788940 314.85983276]
[-442.95779419 299.91403198]
[-443.28567505 284.91183472]
[-442.59997559 269.92175293]
[-440.90390015 255.01214600]
[-438.20510864 240.25106812]
[-434.51599121 225.70585632]
[-429.85330200 211.44287109]
[-424.23840332 197.52722168]
[-417.69683838 184.02236938]
[-410.25848389 170.98994446]
[-401.95727539 158.48942566]
[-392.83111572 146.57783508]
[-382.92160034 135.30953979]
[-372.27398682 124.73592377]
[-360.93682861 114.90526581]
[-348.96188354 105.86239624]
[-336.40377808 97.64859009]
[-323.31979370 90.30132294]
[-309.76962280 83.85411835]
[-295.81515503 78.33639526]
[-281.51998901 73.77332306]
[-266.94940186 70.18572998]
[-252.16986084 67.58998871]
[-237.24879456 65.99792480]
[-222.25428772 65.41682434]
[-207.25476074 65.84932709]
[-192.31864929 67.29345703]
[-177.51409912 69.74263763]
[-162.90867615 73.18567657]
[-148.56901550 77.60688019]
[-134.56054688 82.98606110]
[-120.94717407 89.29869080]
[-107.79103088 96.51595306]
[-95.15214539 104.60491943]
[-83.08817291 113.52868652]
[-71.65417480 123.24653625]
[-60.90230942 133.71411133]
[-50.88164139 144.88368225]
[-41.63788986 156.70425415]
[-33.21323776 169.12191772]
[-20.26023865 161.55754089]
[-13.17167377 148.45785522]
[2.64709139 148.17996216]
[9.73565578 135.08027649]
[25.55442047 134.80238342]
[38.50741959 127.23800659]
[51.46041870 119.67362213]
[64.41341400 112.10924530]
[77.36641693 104.54486847]
[90.31941223 96.98049164]
[95.13864136 90.51924896]
[103.52205658 89.40155792]
[111.73930359 75.88167572]
[126.62602234 76.36652374]
[134.84327698 62.84663391]
[149.72998047 63.33148575]
[162.79417419 55.96079636]
[175.85835266 48.59010696]
[169.46945190 35.01111221]
[164.10084534 20.99735832]
[159.78184509 6.62538767]
[156.53607178 -8.02630520]
[154.38121033 -22.87769699]
[153.32907104 -37.84767532]
[153.38537598 -52.85447311]
[154.54981995 -67.81613159]
[156.81604004 -82.65093994]
[160.17167664 -97.27786255]
[164.59838867 -111.61702728]
[170.07200623 -125.59009552]
[176.56262207 -139.12077332]
[184.03479004 -152.13514709]
[192.44770813 -164.56213379]
[201.75541687 -176.33387756]
[211.90707397 -187.38606262]
[222.84725952 -197.65832520]
[234.51620483 -207.09458923]
[246.85017395 -215.64329529]
[259.78182983 -223.25775146]
[273.24047852 -229.89637756]
[287.15267944 -235.52290344]
[301.44244385 -240.10662842]
[316.03167725 -243.62248230]
[330.84072876 -246.05126953]
[345.78872681 -247.37974548]
[360.79400635 -247.60063171]
[375.77462769 -246.71273804]
[390.64874268 -244.72090149]
[405.33517456 -241.63600159]
[419.75363159 -237.47489929]
[433.82543945 -232.26031494]
[447.47369385 -226.02072144]
[460.62384033 -218.79020691]
[473.20410156 -210.60826111]
[485.14575195 -201.51956177]
[496.38357544 -191.57377625]
[506.85617065 -180.82518005]
[516.50634766 -169.33251953]
[525.28137207 -157.15855408]
[533.13342285 -144.36976624]
[540.01947021 -131.03601074]
[545.90203857 -117.23010254]
[550.74890137 -103.02746582]
[554.53363037 -88.50564575]
[557.23553467 -73.74398041]
[558.83984375 -58.82307816]
[559.33789062 -43.82443619]
[558.72680664 -28.82997513]
[557.01007080 -13.92159081]
[554.19696045 0.81929410]
[550.30291748 15.31216717]
[545.34912109 29.47787476]
[539.36267090 43.23904419]
[532.37628174 56.52051926]
[524.42810059 69.24975586]
[515.56152344 81.35723877]
[505.82498169 92.77683258]
[495.27166748 103.44617462]
[483.95922852 113.30698395]
[471.94940186 122.30540466]
[459.30783081 130.39228821]
[446.10351562 137.52348328]
[432.40863037 143.66001892]
[418.29794312 148.76838684]
[403.84851074 152.82069397]
[389.13925171 155.79479980]
[374.25054932 157.67445374]
[359.26364136 158.44941711]
[344.26046753 158.11543274]
[329.32290649 156.67431641]
[314.53259277 154.13397217]
[299.97024536 150.50825500]
[285.71548462 145.81695557]
[271.84606934 140.08572388]
[258.43783569 133.34584045]
[245.56394958 125.63411713]
[233.29476929 116.99269104]
[221.69728088 107.46874237]
[210.83483887 97.11429596]
[200.76675415 85.98590088]
[191.54804993 74.14434052]
[183.22903442 61.65429306]
[170.16485596 69.02497864]
[157.10067749 76.39566803]
[149.81785583 89.38835907]
[133.99670410 89.43070984]
[126.71389771 102.42339325]
[110.89274597 102.46574402]
[97.88379669 109.93348694]
[84.93079376 117.49786377]
[71.97779846 125.06224823]
[59.02479553 132.62661743]
[46.07180023 140.19100952]
[33.11880112 147.75538635]
[25.10375023 161.39611816]
[10.21147060 161.13294983]
[2.19642091 174.77368164]
[-12.69585991 174.51052856]
[-25.64885712 182.07490540]
[-18.97345543 195.51409912]
[-13.22056198 209.37329102]
[-8.41642857 223.58924866]
[-4.58297348 238.09709167]
[-1.73768961 252.83064270]
[0.10644122 267.72265625]
[0.94100457 282.70520020]
[0.76219237 297.70989990]
[-0.42917940 312.66827393]
[-2.62767482 327.51211548]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[81 200]
[82 199]
[84 197]
[86 195]
[87 194]
[88 193]
[89 192]
[90 191]
[91 190]
[93 189]
[95 187]
[97 185]
[98 184]
[99 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
