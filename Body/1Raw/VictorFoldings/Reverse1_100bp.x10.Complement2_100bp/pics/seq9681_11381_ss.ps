%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[71.69261932 542.02435303]
[68.33373260 526.33685303]
[78.61550140 514.02166748]
[78.61550140 499.02163696]
[78.61550140 484.02163696]
[78.61550140 469.02163696]
[66.03151703 466.59628296]
[54.06750488 461.99142456]
[43.09789658 455.34963989]
[33.46625137 446.87731934]
[25.47453117 436.83819580]
[19.37360764 425.54510498]
[15.35539818 413.35031128]
[13.54683304 400.63452148]
[14.00583744 387.79495239]
[16.71948242 375.23291016]
[21.60434532 363.34130859]
[28.50906754 352.49230957]
[37.21905518 343.02575684]
[47.46313095 335.23849487]
[58.92200089 329.37496948]
[71.23818207 325.61975098]
[84.02716827 324.09152222]
[85.14282227 309.13308716]
[86.25846863 294.17462158]
[87.26272583 279.20828247]
[88.15554047 264.23486328]
[89.04836273 249.26145935]
[89.82968140 234.28182983]
[90.49946594 219.29678345]
[90.94607544 204.30343628]
[91.16940308 189.30509949]
[91.39273071 174.30676270]
[91.61605835 159.30842590]
[91.83938599 144.31008911]
[92.06271362 129.31175232]
[92.28604126 114.31341553]
[83.74071503 99.87895203]
[92.50000000 85.57331848]
[92.50000000 70.57331848]
[92.50000000 55.57332230]
[89.83420563 40.81210327]
[84.58748627 26.75963211]
[79.34076691 12.70716190]
[74.09404755 -1.34530973]
[68.84732819 -15.39778137]
[54.74681473 -22.01693153]
[49.62607956 -36.34287643]
[56.02332306 -49.74477386]
[50.77660751 -63.79724503]
[45.52988815 -77.84971619]
[40.28316879 -91.90219116]
[35.03645325 -105.95465851]
[19.96936607 -108.58718872]
[8.31986237 -118.34351349]
[3.15226150 -132.52667236]
[5.76030588 -147.29333496]
[15.34495640 -158.69508362]
[10.09823799 -172.74755859]
[4.85151958 -186.80003357]
[-0.39519843 -200.85250854]
[-5.64191675 -214.90496826]
[-10.88863468 -228.95744324]
[-16.13535309 -243.00991821]
[-21.38207054 -257.06237793]
[-33.45765686 -267.28445435]
[-30.66087341 -281.91412354]
[-35.90759277 -295.96661377]
[-40.75574493 -300.46182251]
[-42.36445999 -305.91241455]
[-41.09449005 -310.51635742]
[-45.92049026 -324.71881104]
[-50.74648666 -338.92126465]
[-55.57248306 -353.12371826]
[-60.39848328 -367.32617188]
[-75.21169281 -364.77368164]
[-90.24182892 -364.57003784]
[-105.11875916 -366.72024536]
[-119.47612762 -371.17135620]
[-132.96037292 -377.81378174]
[-145.23942566 -386.48391724]
[-156.01091003 -396.96826172]
[-165.00956726 -409.00863647]
[-172.01377869 -422.30856323]
[-176.85110474 -436.54043579]
[-179.40237427 -451.35388184]
[-179.60478210 -466.38403320]
[-177.45333862 -481.26077271]
[-173.00103760 -495.61776733]
[-166.35751343 -509.10147095]
[-157.68635559 -521.37982178]
[-147.20111084 -532.15045166]
[-135.15998840 -541.14807129]
[-121.85951233 -548.15124512]
[-107.62722015 -552.98736572]
[-92.81358337 -555.53741455]
[-77.78341675 -555.73858643]
[-62.90683746 -553.58593750]
[-48.55020523 -549.13244629]
[-35.06705856 -542.48779297]
[-22.78943825 -533.81561279]
[-12.01968670 -523.32946777]
[-3.02301955 -511.28762817]
[3.97901130 -497.98657227]
[8.81397438 -483.75387573]
[11.36280537 -468.94003296]
[11.56273556 -453.90982056]
[9.40884209 -439.03344727]
[4.95416737 -424.67718506]
[-1.69158888 -411.19458008]
[-10.36476898 -398.91766357]
[-20.85178757 -388.14877319]
[-32.89439392 -379.15310669]
[-46.19602585 -372.15216064]
[-41.37002945 -357.94970703]
[-36.54403305 -343.74725342]
[-31.71803284 -329.54479980]
[-26.89203644 -315.34234619]
[-21.85511971 -301.21331787]
[-16.60840225 -287.16085815]
[-4.90809488 -277.94390869]
[-7.32959986 -262.30911255]
[-2.08288169 -248.25663757]
[3.16383648 -234.20416260]
[8.41055489 -220.15168762]
[13.65727329 -206.09922791]
[18.90399170 -192.04675293]
[24.15070915 -177.99427795]
[29.39742661 -163.94180298]
[44.10916519 -161.61149597]
[55.75669098 -152.16738892]
[61.14882278 -138.06805420]
[58.74390030 -123.06428528]
[49.08892441 -111.20137787]
[54.33563995 -97.14890289]
[59.58235931 -83.09643555]
[64.82907867 -69.04396057]
[70.07579803 -54.99149323]
[83.69090271 -49.06153107]
[89.21200562 -34.88507080]
[82.89980316 -20.64449883]
[88.14652252 -6.59202814]
[93.39324188 7.46044350]
[98.63996124 21.51291466]
[103.88667297 35.56538391]
[105.41992950 20.64395332]
[110.43315887 6.50650263]
[118.64283752 -6.04742718]
[129.58467102 -16.30784988]
[142.63984680 -23.69448853]
[157.07002258 -27.78959084]
[172.05912781 -28.36156273]
[186.75941467 -25.37805557]
[200.33953857 -19.00779915]
[212.03147888 -9.61106300]
[221.17398071 2.28072047]
[227.25001526 15.99501419]
[229.91593933 30.75620842]
[229.02098083 45.72948837]
[224.61575317 60.06803513]
[216.94940186 72.96094513]
[206.45549011 83.67905426]
[193.72750854 91.61619568]
[179.48527527 96.32350159]
[164.53425598 97.53474426]
[149.72000122 95.18141174]
[135.88035583 89.39661407]
[123.79798889 80.50749207]
[114.15622711 69.01678467]
[107.50000000 55.57332230]
[107.50000000 70.57331848]
[107.50000000 85.57331848]
[115.22412872 94.28992462]
[115.13742828 105.93611145]
[107.28437805 114.53674316]
[107.06105042 129.53507996]
[106.83772278 144.53341675]
[106.61439514 159.53175354]
[106.39106750 174.53009033]
[106.16773987 189.52842712]
[105.94441223 204.52676392]
[108.82569885 210.47737122]
[108.34191132 216.13978577]
[105.48450470 219.96656799]
[104.81472015 234.95161438]
[107.55781555 243.66442871]
[104.02176666 250.15428162]
[103.12895203 265.12768555]
[102.23613739 280.10110474]
[104.84920502 288.85379028]
[101.21691895 295.29028320]
[100.10127258 310.24871826]
[98.98562622 325.20718384]
[115.54338074 330.30343628]
[130.42308044 339.16119385]
[142.78514099 351.27642822]
[151.93299866 365.96148682]
[157.35246277 382.38400269]
[158.74047852 399.61410522]
[156.02215576 416.67721558]
[149.35481262 432.60894775]
[139.11880493 446.50979614]
[125.89590454 457.59579468]
[110.43618774 465.24279785]
[93.61550140 469.02163696]
[93.61550140 484.02163696]
[93.61550140 499.02163696]
[93.61550140 514.02166748]
[103.89727020 526.33685303]
[100.53839111 542.02435303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 208]
[4 207]
[5 206]
[6 205]
[23 193]
[24 192]
[25 191]
[26 189]
[27 188]
[28 187]
[29 185]
[30 184]
[31 181]
[32 180]
[33 179]
[34 178]
[35 177]
[36 176]
[37 175]
[39 172]
[40 171]
[41 170]
[42 145]
[43 144]
[44 143]
[45 142]
[46 141]
[49 138]
[50 137]
[51 136]
[52 135]
[53 134]
[58 129]
[59 128]
[60 127]
[61 126]
[62 125]
[63 124]
[64 123]
[65 122]
[67 120]
[68 119]
[71 118]
[72 117]
[73 116]
[74 115]
[75 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
