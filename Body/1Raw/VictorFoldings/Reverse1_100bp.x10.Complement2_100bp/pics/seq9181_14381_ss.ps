%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[269.12149048 619.19458008]
[278.10366821 607.11950684]
[289.26919556 597.02905273]
[302.18887329 589.31103516]
[297.15197754 575.18200684]
[292.11505127 561.05297852]
[287.07812500 546.92395020]
[271.58926392 540.37158203]
[265.51211548 524.32843018]
[273.06396484 508.54904175]
[267.81726074 494.49655151]
[262.57052612 480.44409180]
[257.32382202 466.39163208]
[251.97262573 452.37860107]
[246.51727295 438.40579224]
[232.24533081 428.19409180]
[235.17344666 410.01422119]
[229.51066589 396.12420654]
[223.84786987 382.23416138]
[218.18508911 368.34414673]
[204.39945984 362.82217407]
[198.45872498 348.81640625]
[204.34413147 334.39419556]
[198.27029419 320.67892456]
[191.79080200 307.15057373]
[185.31130981 293.62225342]
[178.83180237 280.09390259]
[172.35231018 266.56555176]
[165.87281799 253.03720093]
[159.39332581 239.50886536]
[146.91737366 231.37251282]
[147.93435669 215.58403015]
[141.45486450 202.05567932]
[134.97537231 188.52734375]
[128.49586487 174.99899292]
[122.01637268 161.47064209]
[115.53688049 147.94230652]
[108.95684814 134.46257019]
[102.27665710 121.03218842]
[95.59645844 107.60181427]
[92.79961395 106.39054871]
[90.38168335 104.13486481]
[88.73035431 100.97312927]
[88.17676544 97.18501282]
[88.94529724 93.16726685]
[83.07633972 79.36309052]
[81.81988525 94.31037140]
[76.06397247 108.16206360]
[66.35719299 119.59790802]
[53.62475586 127.52791595]
[39.08022308 131.19624329]
[24.10989380 130.25325012]
[10.14064217 124.78881836]
[-1.49607182 115.32378387]
[-9.69111156 102.76029205]
[-13.66337585 88.29581451]
[-13.03425694 73.30901337]
[-7.86371517 59.22833633]
[1.35542417 47.39586258]
[13.74445248 38.93938828]
[28.12252617 34.66492844]
[43.11921692 34.97990036]
[57.30514145 39.85428238]
[69.32817841 48.82347870]
[78.04289246 61.03361893]
[76.03887939 46.16809082]
[74.03486633 31.30256081]
[72.03085327 16.43703270]
[70.02683258 1.57150483]
[61.00233078 13.55308628]
[46.41637802 17.05308151]
[32.93747711 10.47134304]
[26.72800446 -3.18305016]
[30.62684441 -17.66749191]
[42.85150146 -26.35988998]
[57.81302261 -25.28619766]
[68.67203522 -14.93563652]
[65.28851318 -23.42030144]
[68.33207703 -30.15517426]
[68.10874939 -45.15351105]
[67.88542175 -60.15184784]
[67.66209412 -75.15018463]
[67.43876648 -90.14852142]
[59.49685669 -103.83197021]
[67.04380798 -116.67302704]
[59.10190201 -130.35647583]
[66.64885712 -143.19752502]
[66.42552948 -158.19586182]
[66.20220184 -173.19419861]
[58.26029205 -186.87765503]
[65.80724335 -199.71870422]
[65.58391571 -214.71704102]
[57.64200974 -228.40049744]
[65.18896484 -241.24154663]
[64.96563721 -256.23989868]
[64.74230957 -271.23822021]
[50.34260559 -275.92086792]
[38.24507141 -285.02737427]
[29.76196098 -297.56994629]
[25.81345367 -312.18801880]
[26.82785797 -327.29592896]
[32.69513702 -341.25494385]
[42.77885056 -352.55084229]
[55.98519516 -359.95834351]
[70.88164520 -362.67395020]
[85.85234833 -360.40307617]
[99.27338409 -353.39205933]
[109.68894958 -342.40139771]
[115.96923828 -328.62326050]
[117.43301392 -313.55224609]
[113.92149353 -298.82308960]
[105.81558228 -286.03350830]
[93.99454498 -276.57086182]
[79.74064636 -271.46154785]
[79.96397400 -256.46322632]
[80.18730164 -241.46487427]
[88.11323547 -228.85421753]
[80.58225250 -214.94036865]
[80.80558014 -199.94203186]
[88.73151398 -187.33137512]
[81.20053864 -173.41752625]
[81.42386627 -158.41918945]
[81.64719391 -143.42085266]
[89.57312775 -130.81019592]
[82.04214478 -116.89635468]
[89.96807861 -104.28569031]
[82.43710327 -90.37184906]
[82.66043091 -75.37351227]
[82.88375854 -60.37517548]
[83.10708618 -45.37683868]
[83.33041382 -30.37850189]
[83.66539001 -15.38224220]
[84.89236450 -0.43250880]
[86.89637756 14.43301964]
[88.90039062 29.29854774]
[90.90440369 44.16407776]
[92.90841675 59.02960587]
[96.88051605 73.49412537]
[102.74947357 87.29830170]
[109.02684021 100.92162323]
[115.70703125 114.35199738]
[122.38722229 127.78237152]
[129.01097107 134.07234192]
[129.06521606 141.46279907]
[135.54472351 154.99114990]
[142.02421570 168.51950073]
[148.50370789 182.04783630]
[154.98320007 195.57618713]
[161.46270752 209.10453796]
[174.40209961 218.20851135]
[172.92166138 233.02935791]
[179.40116882 246.55770874]
[185.88066101 260.08605957]
[192.36015320 273.61441040]
[198.83964539 287.14273071]
[205.31915283 300.67108154]
[211.79864502 314.19943237]
[215.46614075 316.52395630]
[217.95306396 319.58657837]
[219.17233276 322.92556763]
[219.19578552 326.09826660]
[218.23416138 328.73141479]
[232.52549744 334.92779541]
[238.07049561 349.09494019]
[232.07511902 362.68136597]
[237.73789978 376.57138062]
[243.40069580 390.46142578]
[249.06347656 404.35144043]
[260.62762451 410.06399536]
[265.05822754 421.74960327]
[260.49008179 432.95043945]
[265.94543457 446.92324829]
[271.98159790 453.77908325]
[271.37628174 461.14489746]
[276.62301636 475.19735718]
[281.86972046 489.24984741]
[287.11645508 503.30230713]
[299.93234253 507.44564819]
[307.90554810 518.05877686]
[308.30438232 531.13256836]
[301.20718384 541.88702393]
[306.24407959 556.01605225]
[311.28100586 570.14508057]
[316.31793213 584.27410889]
[331.20639038 582.07873535]
[346.23706055 582.83038330]
[360.83221436 586.50024414]
[374.43081665 592.94720459]
[386.51022339 601.92352295]
[396.60610962 613.08416748]
[404.33041382 626.00012207]
[409.38623047 640.17492676]
[411.57922363 655.06372070]
[410.82513428 670.09429932]
[407.15292358 684.68884277]
[400.70370483 698.28643799]
[391.72543335 710.36437988]
[380.56320190 720.45843506]
[367.64599609 728.18066406]
[353.47039795 733.23419189]
[338.58120728 735.42474365]
[323.55078125 734.66821289]
[308.95681763 730.99365234]
[295.36029053 724.54223633]
[283.28378296 715.56201172]
[273.19152832 704.39813232]
[265.47140503 691.47967529]
[260.42016602 677.30328369]
[258.23199463 662.41375732]
[258.99096680 647.38342285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 184]
[5 183]
[6 182]
[7 181]
[10 177]
[11 176]
[12 175]
[13 174]
[14 172]
[15 171]
[17 168]
[18 167]
[19 166]
[20 165]
[23 162]
[24 157]
[25 156]
[26 155]
[27 154]
[28 153]
[29 152]
[30 151]
[32 149]
[33 148]
[34 147]
[35 146]
[36 145]
[37 144]
[38 142]
[39 141]
[40 140]
[45 139]
[46 138]
[65 137]
[66 136]
[67 135]
[68 134]
[69 133]
[77 132]
[79 131]
[80 130]
[81 129]
[82 128]
[83 127]
[85 125]
[87 123]
[88 122]
[89 121]
[91 119]
[92 118]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
