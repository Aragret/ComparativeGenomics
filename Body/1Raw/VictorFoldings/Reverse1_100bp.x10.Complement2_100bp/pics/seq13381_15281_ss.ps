%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGAUUACGAUCCGACGGUUACCACUCCCUCCAACUUCACUCUCCAUACCAAAACUCAUCAGGAGGAUAAAAAGCUUAUAGAACAAGUAACAAUUCCAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[222.70820618 414.82934570]
[224.29516602 399.90231323]
[227.27294922 385.18948364]
[231.61540222 370.82015991]
[237.28436279 356.92062378]
[244.22998047 343.61300659]
[252.39125061 331.01425171]
[261.69644165 319.23513794]
[272.06375122 308.37911987]
[262.23318481 297.04953003]
[252.40260315 285.71994019]
[242.57202148 274.39035034]
[232.74143982 263.06072998]
[222.91085815 251.73115540]
[213.08027649 240.40155029]
[203.16563416 229.14546204]
[193.16744995 217.96348572]
[183.16928101 206.78150940]
[173.17111206 195.59953308]
[166.36935425 192.70854187]
[163.10884094 184.17584229]
[153.27825928 172.84625244]
[143.44767761 161.51666260]
[128.61842346 160.72360229]
[118.48742676 149.37382507]
[119.41981506 133.82492065]
[109.58923340 122.49532318]
[99.75865173 111.16573334]
[89.84400177 99.90963745]
[79.84582520 88.72766113]
[69.84765625 77.54568481]
[59.68410873 66.51380920]
[49.35744095 55.63447571]
[36.50760651 54.51888657]
[28.13047218 45.24486923]
[28.31216049 33.14968109]
[18.14861298 22.11780548]
[7.98506641 11.08592796]
[-2.17848039 0.05405075]
[-12.34202766 -10.97782612]
[-22.50557327 -22.00970459]
[-32.66912079 -33.04158020]
[-42.83266830 -44.07345963]
[-57.87371063 -48.98035049]
[-60.80686188 -63.58329391]
[-70.97041321 -74.61516571]
[-81.13395691 -85.64704895]
[-91.29750061 -96.67892456]
[-101.46105194 -107.71080017]
[-113.44541168 -98.66968536]
[-126.25826263 -90.84678650]
[-139.77619934 -84.31745911]
[-153.86904907 -79.14458466]
[-168.40106201 -75.37796783]
[-183.23228455 -73.05389404]
[-198.21990967 -72.19474792]
[-213.21955872 -72.80879974]
[-228.08680725 -74.89014435]
[-242.67843628 -78.41871643]
[-256.85394287 -83.36055756]
[-270.47680664 -89.66805267]
[-283.41580200 -97.28047180]
[-295.54635620 -106.12448883]
[-306.75161743 -116.11494446]
[-316.92367554 -127.15560150]
[-325.96453857 -139.14015198]
[-333.78717041 -151.95315552]
[-340.31622314 -165.47122192]
[-345.48883057 -179.56416321]
[-349.25515747 -194.09625244]
[-351.57891846 -208.92753601]
[-352.43777466 -223.91516113]
[-351.82342529 -238.91481018]
[-349.74179077 -253.78201294]
[-346.21292114 -268.37356567]
[-341.27081299 -282.54898071]
[-334.96304321 -296.17172241]
[-327.35034180 -309.11056519]
[-318.50610352 -321.24093628]
[-308.51541138 -332.44598389]
[-297.47454834 -342.61782837]
[-285.48983765 -351.65847778]
[-272.67666626 -359.48083496]
[-259.15847778 -366.00964355]
[-245.06541443 -371.18194580]
[-230.53324890 -374.94796753]
[-215.70191956 -377.27145386]
[-200.71427917 -378.13000488]
[-185.71464539 -377.51535034]
[-170.84748840 -375.43341064]
[-156.25598145 -371.90426636]
[-142.08067322 -366.96185303]
[-128.45806885 -360.65380859]
[-115.51937103 -353.04089355]
[-103.38917542 -344.19638062]
[-92.18432617 -334.20547485]
[-82.01271820 -323.16439819]
[-72.97232056 -311.17950439]
[-65.15019226 -298.36618042]
[-58.62167740 -284.84783936]
[-53.44964218 -270.75469971]
[-49.68389893 -256.22247314]
[-47.36071777 -241.39108276]
[-46.50247192 -226.40342712]
[-47.11742401 -211.40379333]
[-49.19965363 -196.53668213]
[-52.72910690 -181.94525146]
[-57.67179489 -167.77005005]
[-63.98011017 -154.14756775]
[-71.59329987 -141.20901489]
[-80.43804932 -129.07901001]
[-90.42917633 -117.87435150]
[-80.26562500 -106.84246826]
[-70.10208130 -95.81059265]
[-59.93853378 -84.77871704]
[-49.77498627 -73.74684143]
[-35.46090698 -69.62902069]
[-31.80079079 -54.23700333]
[-21.63724327 -43.20512772]
[-11.47369671 -32.17325211]
[-1.31015003 -21.14137268]
[8.85339642 -10.10949612]
[19.01694298 0.92238116]
[29.18049049 11.95425797]
[39.34403610 22.98613548]
[56.35252762 27.30797005]
[60.23677444 45.30780792]
[70.56344604 56.18714142]
[75.22962952 57.20486832]
[79.30602264 61.16466904]
[81.02963257 67.54751587]
[91.02780151 78.72949219]
[101.02597809 89.91146088]
[108.31929779 93.34366608]
[111.08824158 101.33515167]
[120.91882324 112.66474152]
[130.74940491 123.99433899]
[146.27447510 125.26326752]
[156.08268738 136.89312744]
[154.77726746 151.68608093]
[164.60784912 163.01567078]
[174.43843079 174.34527588]
[184.35308838 185.60136414]
[194.35125732 196.78334045]
[204.34942627 207.96531677]
[214.34759521 219.14729309]
[222.40051270 223.45870972]
[224.40986633 230.57096863]
[234.24044800 241.90057373]
[244.07102966 253.23016357]
[253.90161133 264.55975342]
[263.73220825 275.88934326]
[273.56277466 287.21893311]
[283.39337158 298.54852295]
[295.60247803 289.81518555]
[308.57577515 282.26348877]
[322.19921875 275.95980835]
[336.35311890 270.95959473]
[350.91302490 267.30676270]
[365.75103760 265.03338623]
[380.73672485 264.15948486]
[395.73837280 264.69268799]
[410.62420654 266.62838745]
[425.26336670 269.94949341]
[439.52716064 274.62686157]
[453.29031372 280.61938477]
[466.43182373 287.87438965]
[478.83624268 296.32809448]
[490.39450073 305.90628052]
[501.00503540 316.52468872]
[510.57461548 328.09002686]
[519.01916504 340.50070190]
[526.26440430 353.64758301]
[532.24670410 367.41516113]
[536.91351318 381.68246460]
[540.22375488 396.32406616]
[542.14843750 411.21130371]
[542.67053223 426.21337891]
[541.78552246 441.19842529]
[539.50115967 456.03472900]
[535.83746338 470.59191895]
[530.82678223 484.74209595]
[524.51300049 498.36087036]
[516.95172119 511.32855225]
[508.20928955 523.53118896]
[498.36260986 534.86157227]
[487.49819946 545.22009277]
[475.71151733 554.51574707]
[463.10617065 562.66674805]
[449.79290771 569.60162354]
[435.88876343 575.25927734]
[421.51593018 579.59008789]
[406.80068970 582.55590820]
[391.87237549 584.13079834]
[376.86221313 584.30078125]
[361.90206909 583.06445312]
[347.12341309 580.43267822]
[332.65618896 576.42852783]
[318.62747192 571.08721924]
[305.16055298 564.45568848]
[292.37380981 556.59222412]
[280.37963867 547.56597900]
[269.28338623 537.45617676]
[259.18258667 526.35174561]
[250.16604614 514.35021973]
[242.31297302 501.55709839]
[235.69236755 488.08483887]
[230.36245728 474.05178833]
[226.37004089 459.58129883]
[223.75021362 444.80053711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 154]
[10 153]
[11 152]
[12 151]
[13 150]
[14 149]
[15 148]
[16 146]
[17 145]
[18 144]
[19 143]
[21 142]
[22 141]
[23 140]
[26 137]
[27 136]
[28 135]
[29 133]
[30 132]
[31 131]
[32 128]
[33 127]
[36 125]
[37 124]
[38 123]
[39 122]
[40 121]
[41 120]
[42 119]
[43 118]
[45 116]
[46 115]
[47 114]
[48 113]
[49 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
