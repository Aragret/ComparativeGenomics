%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[82.61271667 634.06988525]
[67.69210815 632.42065430]
[52.99583435 629.36053467]
[38.65699768 624.91723633]
[24.80545044 619.13110352]
[11.56663895 612.05450439]
[-0.93954057 603.75146484]
[-12.59982777 594.29724121]
[-23.30862427 583.77740479]
[-32.96894455 572.28729248]
[-41.49330139 559.93090820]
[-48.80450058 546.82019043]
[-54.83632278 533.07385254]
[-59.53414154 518.81640625]
[-62.85541916 504.17694092]
[-64.77006531 489.28805542]
[-65.26074982 474.28457642]
[-64.32302856 459.30242920]
[-61.96538925 444.47723389]
[-58.20918655 429.94326782]
[-53.08843613 415.83218384]
[-46.64951324 402.27175903]
[-38.95073318 389.38482666]
[-30.06181717 377.28805542]
[-20.06326866 366.09100342]
[-9.04563427 355.89511108]
[2.89130306 346.79266357]
[15.63943958 338.86614990]
[29.08332253 332.18731689]
[43.10120010 326.81665039]
[57.56612015 322.80282593]
[72.34708405 320.18215942]
[87.31022644 318.97842407]
[87.53355408 303.98007202]
[87.75688171 288.98171997]
[87.98020935 273.98339844]
[88.20353699 258.98504639]
[80.65658569 246.14399719]
[88.59849548 232.46055603]
[88.82182312 217.46221924]
[88.93348694 202.46263123]
[88.93348694 187.46263123]
[86.71221924 184.72433472]
[85.70691681 180.77409363]
[86.47275543 176.19512939]
[89.28342438 171.79658508]
[89.95320892 156.81155396]
[90.62299347 141.82650757]
[91.29277802 126.84147644]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[93.72218323 72.48873901]
[94.39196777 57.50370407]
[95.06175232 42.51866531]
[95.73153687 27.53362465]
[93.32449341 22.90186310]
[92.97022247 18.27284622]
[94.32394409 14.42804527]
[96.78064728 11.89883137]
[98.11888123 -3.04135370]
[99.45711517 -17.98153877]
[100.79534912 -32.92172241]
[102.13358307 -47.86190796]
[103.47181702 -62.80209351]
[101.12050629 -71.62870789]
[104.94281769 -77.95419312]
[106.50334167 -92.87279510]
[107.95275879 -107.80260468]
[109.29099274 -122.74279022]
[110.62922668 -137.68296814]
[111.96746063 -152.62315369]
[113.30569458 -167.56333923]
[114.64393616 -182.50352478]
[103.61428833 -190.77020264]
[98.15296173 -203.30783081]
[99.58838654 -216.79890442]
[107.43930054 -227.73085022]
[119.56813049 -233.31059265]
[121.12865448 -248.22920227]
[122.68917847 -263.14779663]
[108.01753998 -266.34249878]
[93.78639984 -271.13183594]
[80.16851044 -277.45770264]
[67.32917786 -285.24325562]
[55.42427444 -294.39401245]
[44.59830093 -304.79888916]
[34.98267746 -316.33157349]
[26.69413185 -328.85208130]
[19.83327675 -342.20843506]
[14.48339748 -356.23846436]
[10.70943832 -370.77188110]
[8.55720901 -385.63226318]
[8.05283737 -400.63922119]
[9.20244598 -415.61059570]
[11.99207878 -430.36462402]
[16.38787270 -444.72219849]
[22.33646584 -458.50906372]
[29.76564980 -471.55783081]
[38.58523941 -483.71011353]
[48.68817139 -494.81838989]
[59.95181274 -504.74783325]
[72.23942566 -513.37786865]
[85.40184784 -520.60375977]
[99.27930450 -526.33782959]
[113.70333862 -530.51043701]
[128.49885559 -533.07086182]
[143.48623657 -533.98815918]
[158.48356628 -533.25109863]
[173.30879211 -530.86865234]
[187.78193665 -526.86975098]
[201.72731018 -521.30291748]
[214.97563171 -514.23571777]
[227.36608887 -505.75396729]
[238.74826050 -495.96063232]
[248.98397827 -484.97457886]
[257.94900513 -472.92919922]
[265.53448486 -459.97064209]
[271.64834595 -446.25628662]
[276.21640015 -431.95257568]
[279.18316650 -417.23315430]
[280.51263428 -402.27670288]
[280.18869019 -387.26477051]
[278.21520996 -372.37957764]
[274.61621094 -357.80184937]
[269.43536377 -343.70852661]
[262.73553467 -330.27066040]
[254.59808350 -317.65145874]
[245.12176514 -306.00399780]
[234.42163086 -295.46975708]
[222.62757874 -286.17657471]
[209.88275146 -278.23727417]
[196.34187317 -271.74819946]
[182.16932678 -266.78814697]
[167.53713989 -263.41732788]
[152.62295532 -261.67666626]
[137.60778809 -261.58728027]
[136.04725647 -246.66867065]
[134.48674011 -231.75006104]
[147.03684998 -221.16838074]
[150.84489441 -205.02958679]
[144.21731567 -189.64854431]
[129.58412170 -181.16529846]
[128.24588013 -166.22511292]
[126.90764618 -151.28492737]
[125.56941223 -136.34474182]
[124.23117828 -121.40455627]
[122.89294434 -106.46437073]
[125.42716217 -99.52178192]
[121.42195129 -91.31227112]
[119.86142731 -76.39366913]
[118.41200256 -61.46385956]
[117.07376862 -46.52367401]
[115.73553467 -31.58349037]
[114.39730072 -16.64330482]
[113.05906677 -1.70311940]
[111.72083282 13.23706532]
[110.71657562 28.20340919]
[110.04679108 43.18844986]
[109.37700653 58.17348862]
[108.70722198 73.15852356]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[106.27781677 127.51126099]
[105.60803223 142.49629211]
[104.93824768 157.48133850]
[104.26846313 172.46636963]
[103.93348694 187.46263123]
[103.93348694 202.46263123]
[107.06289673 211.04428101]
[103.82015991 217.68554688]
[103.59683228 232.68388367]
[111.12780762 246.59771729]
[103.20187378 259.20837402]
[102.97854614 274.20672607]
[102.75521851 289.20504761]
[102.53189087 304.20339966]
[102.30856323 319.20175171]
[117.22924042 320.85046387]
[131.92561340 323.91006470]
[146.26461792 328.35278320]
[160.11637878 334.13842773]
[173.35545349 341.21456909]
[185.86192322 349.51712036]
[197.52256775 358.97094727]
[208.23173523 369.49035645]
[217.89248657 380.98013306]
[226.41729736 393.33618164]
[233.72895813 406.44665527]
[239.76129150 420.19277954]
[244.45962524 434.45007324]
[247.78143311 449.08941650]
[249.69662476 463.97821045]
[250.18786621 478.98165894]
[249.25068665 493.96386719]
[246.89358521 508.78915405]
[243.13790894 523.32324219]
[238.01766968 537.43450928]
[231.57925415 550.99517822]
[223.88093567 563.88238525]
[214.99246216 575.97949219]
[204.99432373 587.17687988]
[193.97706604 597.37322998]
[182.04045105 606.47607422]
[169.29260254 614.40307617]
[155.84896851 621.08239746]
[141.83128357 626.45355225]
[127.36651611 630.46789551]
[112.58564758 633.08911133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 179]
[34 178]
[35 177]
[36 176]
[37 175]
[39 173]
[40 172]
[41 170]
[42 169]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[52 162]
[53 161]
[54 160]
[55 159]
[56 158]
[60 157]
[61 156]
[62 155]
[63 154]
[64 153]
[65 152]
[67 151]
[68 150]
[69 148]
[70 147]
[71 146]
[72 145]
[73 144]
[74 143]
[79 139]
[80 138]
[81 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
