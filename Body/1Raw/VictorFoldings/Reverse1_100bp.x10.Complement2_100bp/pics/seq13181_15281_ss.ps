%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[163.57814026 598.19097900]
[154.58256531 610.63989258]
[140.56117249 616.90850830]
[125.28561401 615.31066895]
[112.86496735 606.27612305]
[106.64030457 592.23510742]
[108.28604126 576.96466064]
[117.35947418 564.57238770]
[131.41989136 558.39178467]
[132.98042297 543.47314453]
[134.54093933 528.55456543]
[128.16970825 515.09143066]
[137.30072021 502.17108154]
[138.86125183 487.25247192]
[140.42176819 472.33386230]
[141.98229980 457.41525269]
[143.54281616 442.49664307]
[144.65846252 427.53820801]
[145.32824707 412.55316162]
[145.99803162 397.56811523]
[146.66781616 382.58306885]
[138.73887634 373.44750977]
[139.17425537 360.95776367]
[148.28561401 351.82836914]
[149.17843628 336.85494995]
[150.07124329 321.88156128]
[150.96406555 306.90814209]
[149.29252625 292.00158691]
[145.10551453 277.59780884]
[140.91850281 263.19400024]
[136.73149109 248.79023743]
[132.54447937 234.38644409]
[128.35746765 219.98266602]
[124.17045593 205.57888794]
[108.55423737 200.51812744]
[98.93527985 187.01118469]
[99.26579285 170.26628113]
[109.61357880 156.88645935]
[105.21257782 142.54661560]
[100.81157684 128.20677185]
[96.41058350 113.86692047]
[86.30645752 104.20264435]
[89.24957275 90.53408051]
[74.15457916 90.67935181]
[59.64490509 86.56939697]
[46.89413071 78.54550934]
[36.93104935 67.26520538]
[30.55669403 53.64831924]
[28.27991295 38.80202866]
[30.27677155 23.93080330]
[36.37697220 10.23871326]
[46.07833099 -1.16808283]
[58.58810806 -9.37068653]
[54.18711090 -23.71053314]
[49.78611374 -38.05038071]
[45.33508682 -23.72598457]
[34.80253220 -13.04584694]
[20.54145241 -8.39593983]
[5.73781061 -10.81506348]
[-6.30122471 -19.76278114]
[-12.88610172 -33.24014664]
[-12.54574108 -48.23628616]
[-5.35618067 -61.40102005]
[7.07641268 -69.79331207]
[21.97456741 -71.53830719]
[36.00999451 -66.24617004]
[46.04715729 -55.09915161]
[44.04314423 -69.96468353]
[42.03913116 -84.83020782]
[40.03511810 -99.69573975]
[38.03110504 -114.56126404]
[36.02709198 -129.42678833]
[26.26194572 -137.85322571]
[24.89883423 -150.27601624]
[32.12634277 -159.97599792]
[30.34387589 -174.86972046]
[28.56141090 -189.76342773]
[18.46309662 -178.67181396]
[3.48664093 -177.83172607]
[-7.78876448 -187.72441101]
[-8.90405464 -202.68289185]
[0.77965921 -214.13825989]
[15.71510601 -215.52838135]
[27.34612846 -206.05773926]
[26.89952278 -221.05110168]
[26.45291710 -236.04444885]
[26.00631142 -251.03779602]
[14.78511333 -261.84161377]
[14.54577732 -277.05337524]
[24.91471863 -287.68447876]
[24.46811295 -302.67782593]
[13.24691582 -313.48165894]
[13.00757980 -328.69338989]
[23.37652016 -339.32452393]
[22.92991447 -354.31787109]
[22.48330879 -369.31121826]
[8.08329105 -374.04568481]
[-3.82709169 -383.42218018]
[-11.80960369 -396.30844116]
[-14.90031719 -411.14834595]
[-12.72601318 -426.14996338]
[-5.54925060 -439.50173950]
[5.76334238 -449.59140015]
[19.84571457 -455.20053101]
[34.99735260 -455.65185547]
[49.38862228 -450.89083862]
[61.28170395 -441.49243164]
[69.24045563 -428.59149170]
[72.30381775 -413.74591064]
[70.10186768 -398.74832153]
[62.90051270 -385.40979004]
[51.56934357 -375.34100342]
[37.47665787 -369.75781250]
[37.92326355 -354.76446533]
[38.36986923 -339.77111816]
[49.35320282 -329.77603149]
[50.01971054 -314.57699585]
[39.46146393 -303.12445068]
[39.90806961 -288.13107300]
[50.89140320 -278.13598633]
[51.55791092 -262.93695068]
[40.99966049 -251.48440552]
[41.44626617 -236.49105835]
[41.89287186 -221.49769592]
[42.33947754 -206.50434875]
[43.45512772 -191.54589844]
[45.23759460 -176.65217590]
[47.02006149 -161.75846863]
[58.28003693 -148.29815674]
[50.89262009 -131.43080139]
[52.89663315 -116.56527710]
[54.90064621 -101.69975281]
[56.90465927 -86.83422089]
[58.90867233 -71.96869659]
[60.91268539 -57.10316467]
[64.12596130 -42.45137787]
[68.52696228 -28.11153221]
[72.92795563 -13.77168465]
[87.88542175 -13.99896717]
[102.31544495 -9.99825859]
[115.04630280 -2.08555126]
[125.04174805 9.10515022]
[131.48535156 22.67261887]
[133.84716797 37.52097702]
[131.92736816 52.44822311]
[125.87305450 66.24352264]
[116.16705322 77.78543854]
[103.58941650 86.13307953]
[113.69354248 95.79735565]
[110.75042725 109.46591949]
[115.15142822 123.80577087]
[119.55242157 138.14561462]
[123.95342255 152.48545837]
[137.28771973 155.97651672]
[147.07810974 165.52462769]
[150.84204102 178.55929565]
[147.69911194 191.64616394]
[138.57423401 201.39187622]
[142.76124573 215.79565430]
[146.94825745 230.19943237]
[151.13526917 244.60322571]
[155.32228088 259.00698853]
[159.50929260 273.41079712]
[163.69630432 287.81457520]
[166.36460876 273.05380249]
[172.57345581 259.39910889]
[181.94317627 247.68551636]
[193.90078735 238.62928772]
[207.71508789 232.78419495]
[222.54133606 230.50770569]
[237.47288513 231.93901062]
[251.59669495 236.99058533]
[264.04904175 245.35351562]
[274.06851196 256.51641846]
[281.04235840 269.79669189]
[284.54418945 284.38220215]
[284.35980225 299.38107300]
[280.50051880 313.87609863]
[273.20230103 326.98089600]
[262.91146851 337.89413452]
[250.25730896 345.94845581]
[236.01361084 350.65130615]
[221.05137634 351.71514893]
[206.28556824 349.07489014]
[192.61912537 342.89199829]
[180.88774109 333.54455566]
[171.80879211 321.60415649]
[165.93746948 307.80096436]
[165.04466248 322.77438354]
[164.15184021 337.74777222]
[163.25901794 352.72119141]
[171.88052368 368.99237061]
[161.65286255 383.25286865]
[160.98307800 398.23791504]
[160.31329346 413.22293091]
[159.64350891 428.20797729]
[161.78042603 431.98785400]
[162.52818298 435.86154175]
[162.02784729 439.38079834]
[160.55162048 442.18923950]
[158.46142578 444.05718994]
[156.90089417 458.97576904]
[155.34037781 473.89437866]
[153.77984619 488.81298828]
[152.21932983 503.73159790]
[158.47894287 518.26184082]
[149.45954895 530.11511230]
[147.89903259 545.03369141]
[146.33850098 559.95227051]
[158.81555176 568.90881348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 209]
[10 208]
[11 207]
[13 205]
[14 204]
[15 203]
[16 202]
[17 201]
[18 196]
[19 195]
[20 194]
[21 193]
[24 191]
[25 190]
[26 189]
[27 188]
[28 164]
[29 163]
[30 162]
[31 161]
[32 160]
[33 159]
[34 158]
[38 153]
[39 152]
[40 151]
[41 150]
[43 148]
[53 138]
[54 137]
[55 136]
[67 135]
[68 134]
[69 133]
[70 132]
[71 131]
[72 130]
[75 128]
[76 127]
[77 126]
[84 125]
[85 124]
[86 123]
[87 122]
[90 119]
[91 118]
[94 115]
[95 114]
[96 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
