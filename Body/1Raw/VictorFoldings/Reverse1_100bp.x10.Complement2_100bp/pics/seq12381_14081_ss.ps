%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[50.22637939 633.30755615]
[37.47045135 641.21911621]
[24.05668259 647.95532227]
[10.09307575 653.46209717]
[-4.30793858 657.69494629]
[-19.03041077 660.61981201]
[-33.95580292 662.21319580]
[-48.96393967 662.46228027]
[-63.93398666 661.36505127]
[-78.74540710 658.93023682]
[-93.27894592 655.17761230]
[-107.41758728 650.13726807]
[-121.04749298 643.84979248]
[-134.05891418 636.36590576]
[-146.34710693 627.74578857]
[-157.81311035 618.05883789]
[-168.36462402 607.38305664]
[-177.91667175 595.80444336]
[-186.39234924 583.41613770]
[-193.72343445 570.31799316]
[-199.85087585 556.61541748]
[-204.72535706 542.41876221]
[-208.30761719 527.84228516]
[-210.56881714 513.00335693]
[-211.49075317 498.02151489]
[-211.06599426 483.01730347]
[-209.29797363 468.11160278]
[-206.20092773 453.42437744]
[-201.79977417 439.07391357]
[-196.12995911 425.17572021]
[-189.23713684 411.84173584]
[-181.17678833 399.17929077]
[-172.01383972 387.29037476]
[-161.82205200 376.27066040]
[-150.68350220 366.20892334]
[-138.68783569 357.18615723]
[-125.93166351 349.27499390]
[-112.51769257 342.53915405]
[-98.55391693 337.03286743]
[-84.15277100 332.80047607]
[-69.43021393 329.87600708]
[-54.50477219 328.28308105]
[-39.49662399 328.03445435]
[-24.52661324 329.13217163]
[-9.71526814 331.56738281]
[4.81815720 335.32049561]
[9.85507298 321.19146729]
[14.89198971 307.06243896]
[19.92890549 292.93341064]
[24.96582222 278.80438232]
[21.95153236 264.21798706]
[33.87358856 253.81724548]
[38.91050720 239.68821716]
[38.19559860 232.33221436]
[44.12902451 225.38726807]
[49.37574005 211.33480835]
[46.57895660 196.70513916]
[58.65454483 186.48306274]
[63.90126038 172.43058777]
[59.16685486 161.29901123]
[63.42297745 149.54872131]
[74.90078735 143.66464233]
[72.32212830 128.99494934]
[84.54856873 118.95379639]
[90.00392914 104.98099518]
[95.35511017 90.96797180]
[100.60182953 76.91550446]
[105.84854889 62.86302948]
[111.09526825 48.81055832]
[116.34198761 34.75808716]
[121.48394775 20.66694641]
[126.52085876 6.53791761]
[112.05641937 10.51029968]
[99.84294128 1.80219400]
[98.88375854 -13.16710663]
[109.88594055 -23.36279106]
[124.73908997 -21.26898193]
[132.49385071 -8.43079853]
[138.56768799 -22.14606476]
[144.64152527 -35.86133194]
[150.71534729 -49.57659912]
[156.78918457 -63.29186630]
[156.46586609 -69.89542389]
[159.12657166 -74.91713715]
[163.25346375 -77.32084656]
[169.73295593 -90.84918976]
[170.61756897 -99.94068146]
[176.41096497 -104.52962494]
[183.09115601 -117.95999908]
[189.77134705 -131.39038086]
[196.45153809 -144.82075500]
[203.13174438 -158.25112915]
[197.26246643 -174.73052979]
[204.97569275 -190.05441284]
[221.06219482 -194.95985413]
[227.54168701 -208.48820496]
[234.02117920 -222.01654053]
[240.50068665 -235.54489136]
[246.98017883 -249.07324219]
[234.48905945 -257.42504883]
[223.31372070 -267.46957397]
[213.68168640 -279.00234985]
[205.78904724 -291.78854370]
[199.79649353 -305.56787109]
[195.82600403 -320.05981445]
[193.95845032 -334.96929932]
[194.23181152 -349.99282837]
[196.64054871 -364.82449341]
[201.13562012 -379.16238403]
[207.62551880 -392.71459961]
[215.97810364 -405.20520020]
[226.02331543 -416.37991333]
[237.55668640 -426.01123047]
[250.34336853 -433.90307617]
[264.12307739 -439.89477539]
[278.61526489 -443.86434937]
[293.52487183 -445.73098755]
[308.54837036 -445.45669556]
[323.37988281 -443.04705811]
[337.71749878 -438.55108643]
[351.26928711 -432.06036377]
[363.75939941 -423.70700073]
[374.93347168 -413.66107178]
[384.56408691 -402.12713623]
[392.45513916 -389.33993530]
[398.44598389 -375.55987549]
[402.41467285 -361.06744385]
[404.28039551 -346.15771484]
[404.00515747 -331.13424683]
[401.59460449 -316.30285645]
[397.09774780 -301.96554565]
[390.60617065 -288.41412354]
[382.25204468 -275.92456055]
[372.20544434 -264.75109863]
[360.67089844 -255.12120056]
[347.88323975 -247.23094177]
[334.10278320 -241.24093628]
[319.61010742 -237.27314758]
[304.70028687 -235.40835571]
[289.67681885 -235.68450928]
[274.84558105 -238.09600830]
[260.50851440 -242.59373474]
[254.02902222 -229.06539917]
[247.54953003 -215.53704834]
[241.07003784 -202.00869751]
[234.59054565 -188.48036194]
[240.53038025 -177.04585266]
[238.77359009 -164.08453369]
[229.73951721 -154.35848999]
[216.56211853 -151.57093811]
[209.88192749 -138.14054871]
[203.20172119 -124.71018219]
[196.52153015 -111.27980042]
[189.84133911 -97.84942627]
[183.26130676 -84.36968994]
[176.78181458 -70.84134674]
[170.50445557 -57.21803284]
[164.43061829 -43.50276566]
[158.35678101 -29.78749847]
[152.28294373 -16.07223129]
[146.20912170 -2.35696459]
[140.64988708 11.57483387]
[135.61297607 25.70386314]
[136.32788086 33.05986023]
[130.39445496 40.00480652]
[125.14773560 54.05727768]
[119.90102386 68.10974884]
[114.65430450 82.16222382]
[109.40758514 96.21469116]
[109.76250458 104.26742554]
[103.97672272 110.43635559]
[98.52136993 124.40914917]
[100.70982361 140.07826233]
[88.87358856 149.11999512]
[92.07205200 167.25425720]
[77.95373535 177.67730713]
[72.70701599 191.72978210]
[75.12851715 207.36457825]
[63.42821121 216.58152771]
[58.18149567 230.63398743]
[53.03953552 244.72512817]
[48.00262070 258.85415649]
[50.65663528 274.45117188]
[39.09485245 283.84130859]
[34.05793381 297.97033691]
[29.02101898 312.09936523]
[23.98410225 326.22839355]
[18.94718742 340.35742188]
[32.57728195 346.64443970]
[45.58893967 354.12796021]
[57.87738800 362.74771118]
[69.34368896 372.43432617]
[79.89552307 383.10977173]
[89.44792938 394.68811035]
[97.92398834 407.07611084]
[105.25547028 420.17401123]
[111.38333130 433.87640381]
[116.25824738 448.07293701]
[119.84095001 462.64932251]
[122.10260010 477.48815918]
[123.02499390 492.47000122]
[122.60070038 507.47418213]
[120.83312988 522.37994385]
[117.73652649 537.06726074]
[113.33580780 551.41790771]
[107.66641998 565.31622314]
[100.77400208 578.65045166]
[92.71405792 591.31311035]
[83.55146790 603.20233154]
[73.36002350 614.22235107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[46 188]
[47 187]
[48 186]
[49 185]
[50 184]
[52 182]
[53 181]
[55 180]
[56 179]
[58 177]
[59 176]
[62 174]
[64 172]
[65 171]
[66 169]
[67 168]
[68 167]
[69 166]
[70 165]
[71 163]
[72 162]
[78 161]
[79 160]
[80 159]
[81 158]
[82 157]
[85 156]
[86 155]
[88 154]
[89 153]
[90 152]
[91 151]
[92 150]
[95 146]
[96 145]
[97 144]
[98 143]
[99 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
