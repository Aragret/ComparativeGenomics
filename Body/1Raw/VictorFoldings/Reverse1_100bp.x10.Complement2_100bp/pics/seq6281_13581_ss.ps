%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[227.12915039 641.29101562]
[228.68817139 626.35205078]
[232.10728455 611.72631836]
[237.33259583 597.64440918]
[244.28167725 584.32849121]
[252.84492493 571.98858643]
[262.88729858 560.81921387]
[274.25039673 550.99664307]
[286.75500488 542.67572021]
[280.07482910 529.24536133]
[273.39462280 515.81500244]
[266.71441650 502.38461304]
[253.40007019 501.39978027]
[242.22129822 493.90447998]
[236.15762329 481.76770020]
[236.88853455 468.11178589]
[244.32992554 456.50933838]
[237.85043335 442.98101807]
[231.37092590 429.45266724]
[224.89143372 415.92431641]
[218.41194153 402.39596558]
[211.93244934 388.86761475]
[205.45294189 375.33926392]
[198.97344971 361.81094360]
[192.49395752 348.28259277]
[186.01446533 334.75424194]
[180.29002380 330.07955933]
[179.54087830 320.97589111]
[173.26351929 307.35256958]
[170.10017395 305.79516602]
[167.53399658 302.62820435]
[166.31329346 298.14898682]
[167.02525330 292.97790527]
[161.36245728 279.08789062]
[155.69967651 265.19784546]
[150.03689575 251.30783081]
[144.37409973 237.41780090]
[138.71131897 223.52777100]
[133.04853821 209.63774109]
[123.31177521 206.53796387]
[116.75074005 198.42001343]
[115.71958923 187.81262207]
[120.79907227 178.19453430]
[115.55235291 164.14205933]
[110.30563354 150.08959961]
[99.43438721 144.78463745]
[94.94824982 133.12023926]
[99.76124573 121.15370178]
[94.72432709 107.02467346]
[92.09123993 105.48963928]
[89.95848846 102.96260834]
[88.69457245 99.62705231]
[88.59504700 95.79999542]
[89.83557129 91.90203857]
[85.64855957 77.49825287]
[81.46154785 63.09447479]
[77.16741943 48.72225952]
[72.76642609 34.38241196]
[68.36542511 20.04256630]
[56.91967773 9.11986446]
[60.58227539 -5.31740046]
[56.18127823 -19.65724754]
[51.78028107 -33.99709320]
[47.37928391 -48.33694077]
[43.30665588 -33.90040207]
[33.43859863 -22.60343552]
[19.68047714 -16.62731171]
[4.68876600 -17.12592697]
[-8.64186764 -24.00300789]
[-17.73748779 -35.93069458]
[-20.84187126 -50.60593796]
[-17.35561180 -65.19518280]
[-7.95185184 -76.88146973]
[5.55369043 -83.40835571]
[20.55330658 -83.51561737]
[34.15080643 -77.18252563]
[43.72130203 -65.63077545]
[34.39893723 -78.41373444]
[40.56901932 -91.97026062]
[38.78655243 -106.86397552]
[36.89326096 -121.74401093]
[34.88924789 -136.60954285]
[25.12410164 -145.03596497]
[23.76099014 -157.45875549]
[30.98849869 -167.15875244]
[29.20603371 -182.05245972]
[27.42356682 -196.94618225]
[25.64110184 -211.83990479]
[23.85863495 -226.73361206]
[22.07616997 -241.62733459]
[20.29370308 -256.52105713]
[5.39476871 -259.01071167]
[-8.19863415 -265.59826660]
[-19.38454819 -275.74972534]
[-27.25618362 -288.64215088]
[-31.17541885 -303.23034668]
[-30.82454300 -318.33181763]
[-26.23199463 -332.72225952]
[-17.77007675 -345.23516846]
[-6.12475586 -354.85614014]
[7.75993347 -360.80526733]
[22.75842094 -362.60025024]
[37.65484619 -360.09564209]
[51.24162674 -353.49441528]
[62.41733551 -343.33172607]
[70.27601624 -330.43142700]
[74.18059540 -315.83926392]
[73.81454468 -300.73818970]
[69.20754242 -286.35235596]
[60.73305893 -273.84796143]
[49.07807922 -264.23867798]
[35.18741989 -258.30352783]
[36.96988678 -243.40980530]
[38.75235367 -228.51608276]
[40.53481674 -213.62236023]
[42.31728363 -198.72865295]
[44.09975052 -183.83493042]
[45.88221741 -168.94120789]
[57.14219284 -155.48091125]
[49.75477600 -138.61355591]
[51.75878906 -123.74802399]
[55.76773834 -117.53915405]
[53.68027115 -108.64644623]
[55.46273422 -93.75272369]
[64.65760803 -82.03506470]
[58.61502075 -67.41323853]
[61.71913147 -52.73794174]
[66.12012482 -38.39809418]
[70.52112579 -24.05824471]
[74.92212677 -9.71839809]
[86.05308533 0.17862092]
[82.70527649 15.64156818]
[87.10626984 29.98141479]
[91.50727081 44.32126236]
[96.47492218 49.79339600]
[95.86532593 58.90746307]
[100.05233765 73.31124115]
[104.23934937 87.71502686]
[108.85336304 101.98776245]
[113.89027405 116.11679077]
[128.19078064 127.71752930]
[124.35810852 144.84288025]
[129.60482788 158.89533997]
[134.85154724 172.94781494]
[150.96365356 185.06237793]
[146.93855286 203.97496033]
[152.60134888 217.86499023]
[158.26412964 231.75500488]
[163.92691040 245.64503479]
[169.58970642 259.53506470]
[175.25248718 273.42507935]
[180.91528320 287.31512451]
[186.88684082 301.07522583]
[193.16419983 314.69854736]
[199.54280090 328.27474976]
[206.02230835 341.80310059]
[212.50180054 355.33142090]
[218.98129272 368.85977173]
[225.46078491 382.38812256]
[231.94029236 395.91647339]
[238.41978455 409.44482422]
[244.89927673 422.97317505]
[251.37876892 436.50149536]
[257.85827637 450.02984619]
[274.53439331 452.85882568]
[286.12332153 464.95004272]
[288.20086670 481.40136719]
[280.14480591 495.70440674]
[286.82498169 509.13479614]
[293.50518799 522.56518555]
[300.18539429 535.99554443]
[314.36569214 531.04351807]
[329.05480957 527.90789795]
[344.02114868 526.63800049]
[359.02859497 527.25402832]
[373.84051514 529.74615479]
[388.22326660 534.07507324]
[401.95001221 540.17260742]
[414.80429077 547.94244385]
[426.58334351 557.26214600]
[437.10140991 567.98474121]
[446.19259644 579.94104004]
[453.71356201 592.94256592]
[459.54562378 606.78417969]
[463.59683228 621.24755859]
[465.80331421 636.10473633]
[466.13024902 651.12127686]
[464.57250977 666.06036377]
[461.15460205 680.68640137]
[455.93048096 694.76873779]
[448.98254395 708.08520508]
[440.42031860 720.42590332]
[430.37890625 731.59606934]
[419.01663208 741.41961670]
[406.51269531 749.74157715]
[393.06433105 756.43072510]
[378.88360596 761.38153076]
[364.19421387 764.51593018]
[349.22778320 765.78454590]
[334.22036743 765.16729736]
[319.40869141 762.67388916]
[305.02630615 758.34375000]
[291.30004883 752.24511719]
[278.44644165 744.47412109]
[266.66818237 735.15344238]
[256.15100098 724.42999268]
[247.06080627 712.47290039]
[239.54096985 699.47082520]
[233.71005249 685.62872314]
[229.66004944 671.16491699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 171]
[10 170]
[11 169]
[12 168]
[17 164]
[18 163]
[19 162]
[20 161]
[21 160]
[22 159]
[23 158]
[24 157]
[25 156]
[26 155]
[28 154]
[29 153]
[33 152]
[34 151]
[35 150]
[36 149]
[37 148]
[38 147]
[39 146]
[43 144]
[44 143]
[45 142]
[48 140]
[49 139]
[54 138]
[55 137]
[56 136]
[57 134]
[58 133]
[59 132]
[61 130]
[62 129]
[63 128]
[64 127]
[77 126]
[79 124]
[80 123]
[81 121]
[82 120]
[85 118]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
