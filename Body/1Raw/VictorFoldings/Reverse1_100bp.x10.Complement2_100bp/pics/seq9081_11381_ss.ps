%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[110.92800903 563.30053711]
[101.69145966 551.47125244]
[93.43672943 538.93707275]
[86.21736145 525.77929688]
[80.08016968 512.08325195]
[75.06495667 497.93780518]
[71.20425415 483.43466187]
[68.52309418 468.66787720]
[67.03887177 453.73324585]
[66.76121521 438.72760010]
[67.69190979 423.74829102]
[69.82493591 408.89242554]
[73.14645386 394.25637817]
[77.63491821 379.93505859]
[83.26122284 366.02136230]
[89.98887634 352.60552979]
[97.77425385 339.77453613]
[106.56685638 327.61160278]
[116.30966187 316.19564819]
[126.93947601 305.60067749]
[138.38737488 295.89544678]
[150.57910156 287.14282227]
[163.43559265 279.39965820]
[156.75540161 265.96926880]
[150.07521057 252.53889465]
[143.39500427 239.10852051]
[136.71481323 225.67814636]
[133.60885620 240.35305786]
[123.13807678 251.09375000]
[108.54694366 254.57211304]
[94.35669708 249.71034241]
[84.96433258 238.01489258]
[83.28017426 223.10974121]
[89.82608032 209.61340332]
[102.57373047 201.70787048]
[117.57312012 201.84275818]
[130.17669678 209.97645569]
[125.35070801 195.77400208]
[120.52471161 181.57154846]
[115.69870758 167.36909485]
[110.87271118 153.16664124]
[105.94111633 139.00050354]
[94.37933350 129.61038208]
[97.03335571 114.01336670]
[86.50777435 104.80989838]
[88.83761597 91.02355194]
[83.80070496 76.89452362]
[78.76378632 62.76549149]
[73.98309326 58.19859695]
[72.45571136 52.72464752]
[73.79408264 48.14012909]
[69.18007660 33.86739731]
[64.56606293 19.59466362]
[53.45882797 13.03782940]
[49.90964127 1.05504823]
[55.29821777 -9.77499390]
[50.89722061 -24.11484146]
[46.49622345 -38.45468903]
[42.09522247 -52.79453659]
[37.69422531 -67.13438416]
[35.27555084 -52.33066559]
[29.42973137 -38.51667404]
[20.48738480 -26.47364998]
[8.95423794 -16.88268852]
[-4.51745081 -10.28620338]
[-19.16579247 -7.05725956]
[-34.16235352 -7.37846851]
[-48.65900421 -11.23166370]
[-61.83588791 -18.39892960]
[-72.94779205 -28.47492218]
[-81.36627960 -40.88979340]
[-86.61524963 -54.94142532]
[-88.39784241 -69.83512878]
[-86.61324310 -84.72859192]
[-81.36238861 -98.77951050]
[-72.94222260 -111.19325256]
[-61.82896805 -121.26774597]
[-48.65111923 -128.43324280]
[-34.15394974 -132.28448486]
[-19.15734482 -132.60368347]
[-4.50943804 -129.37275696]
[8.96136284 -122.77446747]
[20.49321747 -113.18195343]
[29.43394470 -101.13772583]
[35.27820206 -87.32191467]
[36.17101669 -102.29531860]
[37.06383133 -117.26872253]
[37.95664978 -132.24212646]
[38.84946442 -147.21553040]
[39.74227905 -162.18894958]
[32.84009933 -176.42518616]
[41.32122040 -188.66935730]
[42.21403885 -203.64276123]
[27.69767189 -207.63885498]
[14.32954025 -214.56610107]
[2.69404030 -224.12167358]
[-6.70017385 -235.88783264]
[-13.44242668 -249.35020447]
[-17.23797798 -263.92028809]
[-17.92089844 -278.96115112]
[-15.46133900 -293.81524658]
[-9.96681690 -307.83322144]
[-1.67753148 -320.40231323]
[9.04414654 -330.97299194]
[21.72951126 -339.08316040]
[35.82401276 -344.37832642]
[50.71150208 -346.62698364]
[65.74115753 -345.73080444]
[80.25595093 -341.72900391]
[93.62135315 -334.79650879]
[105.25309753 -325.23635864]
[114.64267731 -313.46649170]
[121.37963867 -300.00146484]
[125.16945648 -285.42990112]
[125.84645844 -270.38876343]
[123.38105774 -255.53564453]
[117.88101959 -241.51982117]
[109.58679199 -228.95401001]
[98.86095428 -218.38754272]
[86.17240143 -210.28234863]
[72.07581329 -204.99273682]
[57.18744278 -202.74993896]
[56.29462814 -187.77653503]
[63.26066971 -174.61129761]
[54.71568680 -161.29612732]
[53.82287216 -146.32272339]
[52.93005371 -131.34931946]
[52.03723907 -116.37590790]
[51.14442444 -101.40250397]
[50.25160599 -86.42910004]
[52.03407288 -71.53537750]
[56.43507004 -57.19553375]
[60.83606720 -42.85568619]
[65.23706818 -28.51583862]
[69.63806152 -14.17599201]
[83.11096191 -2.93107915]
[78.83879852 14.98065376]
[83.45281219 29.25338745]
[88.06681824 43.52611923]
[92.89281464 57.72857666]
[97.92973328 71.85760498]
[102.96664429 85.98663330]
[113.49222565 95.19010162]
[111.16238403 108.97644806]
[123.08444214 119.37717438]
[120.07015228 133.96359253]
[125.89952087 140.99609375]
[125.07517242 148.34063721]
[129.90116882 162.54309082]
[134.72715759 176.74554443]
[139.55316162 190.94799805]
[144.37916565 205.15046692]
[150.14518738 218.99794006]
[156.82539368 232.42832947]
[163.50558472 245.85870361]
[170.18577576 259.28906250]
[176.86596680 272.71945190]
[190.79783630 267.13827515]
[205.13360596 262.69622803]
[219.78034973 259.42214966]
[234.64303589 257.33728027]
[249.62530518 256.45513916]
[264.62997437 256.78143311]
[279.55972290 258.31402588]
[294.31771851 261.04302979]
[308.80828857 264.95071411]
[322.93740845 270.01171875]
[336.61349487 276.19326782]
[349.74780273 283.45526123]
[362.25515747 291.75054932]
[374.05447388 301.02539062]
[385.06921387 311.21960449]
[395.22790527 322.26708984]
[404.46472168 334.09619141]
[412.71972656 346.63018799]
[419.93939209 359.78781128]
[426.07687378 373.48370361]
[431.09240723 387.62902832]
[434.95343018 402.13211060]
[437.63491821 416.89883423]
[439.11947632 431.83343506]
[439.39746094 446.83905029]
[438.46710205 461.81842041]
[436.33438110 476.67431641]
[433.01321411 491.31042480]
[428.52505493 505.63183594]
[422.89904785 519.54565430]
[416.17169189 532.96166992]
[408.38659668 545.79284668]
[399.59426880 557.95593262]
[389.85171509 569.37207031]
[379.22213745 579.96728516]
[367.77444458 589.67279053]
[355.58291626 598.42565918]
[342.72659302 606.16912842]
[329.28884888 612.85302734]
[315.35687256 618.43389893]
[301.02099609 622.87561035]
[286.37420654 626.14935303]
[271.51144409 628.23388672]
[256.52917480 629.11572266]
[241.52452087 628.78912354]
[226.59480286 627.25616455]
[211.83685303 624.52685547]
[197.34637451 620.61883545]
[183.21736145 615.55749512]
[169.54142761 609.37567139]
[156.40727234 602.11340332]
[143.90010071 593.81781006]
[132.10098267 584.54272461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 157]
[24 156]
[25 155]
[26 154]
[27 153]
[37 152]
[38 151]
[39 150]
[40 149]
[41 148]
[42 146]
[44 144]
[46 142]
[47 141]
[48 140]
[51 139]
[52 138]
[53 137]
[56 135]
[57 134]
[58 133]
[59 132]
[60 131]
[85 130]
[86 129]
[87 128]
[88 127]
[89 126]
[90 125]
[92 123]
[93 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
