%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[90.28322601 494.18804932]
[81.35094452 507.02346802]
[66.24452209 511.06451416]
[52.09674835 504.40307617]
[45.58776855 490.18453979]
[49.79092407 475.12240601]
[62.72161484 466.32861328]
[64.05985260 451.38842773]
[61.52563095 444.44583130]
[65.53085327 436.23632812]
[67.09136963 421.31771851]
[60.72013855 407.85455322]
[69.85115051 394.93420410]
[71.41167450 380.01562500]
[72.97219849 365.09701538]
[64.97311401 349.47708130]
[75.91291046 334.66485596]
[77.25114441 319.72467041]
[78.58937836 304.78448486]
[79.92761230 289.84429932]
[81.26584625 274.90411377]
[81.82405853 259.91452026]
[81.60073090 244.91616821]
[81.37740326 229.91783142]
[81.15407562 214.91949463]
[80.93074799 199.92115784]
[71.79044342 211.81463623]
[57.70732880 216.97854614]
[43.04520416 213.81275940]
[32.34729004 203.29826355]
[28.92845154 188.69308472]
[33.84805298 174.52278137]
[45.58169937 165.17817688]
[60.49359894 163.55480957]
[73.96313477 170.15570068]
[81.81668854 182.93572998]
[83.59915161 168.04200745]
[85.38162231 153.14828491]
[83.05522919 146.13333130]
[87.30310059 138.04670715]
[89.30711365 123.18118286]
[91.31112671 108.31565094]
[93.09358978 93.42193604]
[94.65411377 78.50332642]
[95.10072327 63.50997925]
[94.43093872 48.52494049]
[93.76115417 33.53990173]
[93.09136963 18.55486298]
[92.42158508 3.56982493]
[91.75179291 -11.41521358]
[91.08200836 -26.40025330]
[87.85164642 -32.16881180]
[87.99753571 -37.84998703]
[90.62210846 -41.84006119]
[90.39878082 -56.83839798]
[90.17545319 -71.83673096]
[79.49501801 -80.04300690]
[75.54860687 -92.71724701]
[79.56302643 -105.16579437]
[89.85943604 -112.91263580]
[89.85943604 -127.91263580]
[89.85943604 -142.91264343]
[76.87909698 -146.11727905]
[64.95156860 -152.13999939]
[54.67942047 -160.67240906]
[46.58065414 -171.27946472]
[41.06260681 -183.42158508]
[38.40146255 -196.48217773]
[38.72841644 -209.79887390]
[42.02323532 -222.69717407]
[48.11544037 -234.52461243]
[56.69314575 -244.68371582]
[67.31901550 -252.66223145]
[79.45256042 -258.05889893]
[92.47763062 -260.60372925]
[93.14742279 -275.58877563]
[93.81720734 -290.57382202]
[94.48699188 -305.55886841]
[93.81720734 -320.54388428]
[91.81319427 -335.40942383]
[89.80917358 -350.27496338]
[87.80516052 -365.14047241]
[85.80114746 -380.00601196]
[83.79713440 -394.87155151]
[74.28548431 -407.51428223]
[80.25304413 -421.16116333]
[78.24903107 -436.02670288]
[76.24501801 -450.89221191]
[74.24100494 -465.75775146]
[59.26210785 -467.51373291]
[45.19079208 -472.94042969]
[32.91159439 -481.69668579]
[23.19639206 -493.23208618]
[16.65589142 -506.82153320]
[13.70123577 -521.61071777]
[14.51815510 -536.67004395]
[19.05529976 -551.05285645]
[27.02745819 -563.85504150]
[37.93349457 -574.27178955]
[51.08784866 -581.64837646]
[65.66362000 -585.52105713]
[80.74457550 -585.64642334]
[95.38270569 -582.01654053]
[108.65783691 -574.85961914]
[119.73550415 -564.62548828]
[127.91933441 -551.95764160]
[132.69490051 -537.65222168]
[133.76199341 -522.60852051]
[131.05355835 -507.77224731]
[124.73982239 -494.07598877]
[115.21768188 -482.38070679]
[103.08570862 -473.42156982]
[89.10652924 -467.76177979]
[91.11054993 -452.89624023]
[93.11456299 -438.03070068]
[95.11857605 -423.16519165]
[104.48688507 -411.58572388]
[98.66266632 -396.87554932]
[100.66667938 -382.01000977]
[102.67069244 -367.14450073]
[104.67470551 -352.27896118]
[106.67871857 -337.41345215]
[108.68273163 -322.54791260]
[115.05471802 -336.12722778]
[126.63267517 -345.66403198]
[141.18107605 -349.31695557]
[155.89088440 -346.38064575]
[167.92182922 -337.42205811]
[174.95092773 -324.17095947]
[175.62100220 -309.18591309]
[169.80264282 -295.36035156]
[158.61929321 -285.36370850]
[144.23027039 -281.12622070]
[129.41389465 -283.46606445]
[117.03096008 -291.93145752]
[109.47203064 -304.88906860]
[108.80224609 -289.90402222]
[108.13246155 -274.91900635]
[107.46267700 -259.93395996]
[123.36602783 -254.81211853]
[137.20571899 -245.42791748]
[147.86653137 -232.52841187]
[154.48687744 -217.14424133]
[156.52839661 -200.50740051]
[153.81968689 -183.95243835]
[146.57073975 -168.80949402]
[135.35665894 -156.29739380]
[121.07199097 -147.42558289]
[104.85943604 -142.91264343]
[104.85943604 -127.91263580]
[104.85943604 -112.91263580]
[117.24868774 -101.53964233]
[117.58577728 -84.38734436]
[105.17378998 -72.06006622]
[105.39711761 -57.06172562]
[105.62044525 -42.06338882]
[106.06704712 -27.07003784]
[106.73683167 -12.08499908]
[107.40662384 2.90003991]
[108.07640839 17.88507843]
[108.74619293 32.87011719]
[109.41597748 47.85515594]
[110.08576202 62.84019470]
[118.38548279 50.34560776]
[131.77629089 43.58646011]
[146.75787354 44.32957077]
[159.41407776 52.38069153]
[166.43659973 65.63528442]
[165.98976135 80.62863159]
[158.19038391 93.44149780]
[145.07717896 100.72463989]
[130.07794189 100.57426453]
[117.11340332 93.02967072]
[109.57272339 80.06385040]
[108.01219940 94.98246002]
[110.30699921 99.69921875]
[109.79573059 105.36595917]
[106.17665863 110.31966400]
[104.17264557 125.18519592]
[102.16862488 140.05072021]
[100.27533722 154.93075562]
[98.49286652 169.82447815]
[96.71040344 184.71818542]
[95.92908478 199.69783020]
[96.15241241 214.69616699]
[96.37574005 229.69450378]
[96.59906769 244.69284058]
[96.82239532 259.69119263]
[107.20674133 248.86688232]
[122.10525513 247.12495422]
[134.70652771 255.26176453]
[139.24943542 269.55728149]
[133.65702820 283.47579956]
[120.48606110 290.65393066]
[105.75813293 287.80996704]
[96.20603180 276.24234009]
[94.86779785 291.18252563]
[93.52956390 306.12271118]
[92.19132996 321.06289673]
[90.85309601 336.00308228]
[98.50939178 346.38305664]
[97.08719635 358.79922485]
[87.89080048 366.65753174]
[86.33027649 381.57614136]
[84.76976013 396.49475098]
[91.02937317 411.02496338]
[82.00997925 422.87823486]
[80.44945526 437.79684448]
[79.00003815 452.72665405]
[77.66180420 467.66683960]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 210]
[8 209]
[10 208]
[11 207]
[13 205]
[14 204]
[15 203]
[17 200]
[18 199]
[19 198]
[20 197]
[21 196]
[22 188]
[23 187]
[24 186]
[25 185]
[26 184]
[36 183]
[37 182]
[38 181]
[40 180]
[41 179]
[42 178]
[43 175]
[44 174]
[45 163]
[46 162]
[47 161]
[48 160]
[49 159]
[50 158]
[51 157]
[54 156]
[55 155]
[56 154]
[60 151]
[61 150]
[62 149]
[75 139]
[76 138]
[77 137]
[78 136]
[79 123]
[80 122]
[81 121]
[82 120]
[83 119]
[84 118]
[86 116]
[87 115]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
