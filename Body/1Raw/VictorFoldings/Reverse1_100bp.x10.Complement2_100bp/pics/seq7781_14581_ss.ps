%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[93.05705261 573.11413574]
[91.94640350 557.95379639]
[96.72663879 543.52404785]
[106.66880798 532.02526855]
[120.25680542 525.21099854]
[119.14115906 510.25253296]
[118.02551270 495.29406738]
[116.90985870 480.33563232]
[115.79421234 465.37716675]
[100.95063782 463.38616943]
[86.83994293 458.35037231]
[74.07974243 450.48760986]
[63.22905350 440.13946533]
[54.76385498 427.75650024]
[49.05617523 413.87866211]
[46.35774612 399.11157227]
[46.78890991 384.10031128]
[50.33325577 369.50109863]
[56.83821869 355.95266724]
[66.02165222 344.04821777]
[77.48406982 334.30966187]
[90.72602081 327.16448975]
[105.16983795 322.92715454]
[104.05419159 307.96868896]
[102.93854523 293.01025391]
[101.82289124 278.05178833]
[100.70724487 263.09335327]
[99.59159851 248.13488770]
[91.28041840 242.19036865]
[87.53457642 232.44784546]
[89.81626129 222.03755188]
[97.60799408 214.44824219]
[96.93820953 199.46321106]
[96.26842499 184.47816467]
[85.13749695 174.64770508]
[84.24477386 159.46028137]
[94.63134003 147.85179138]
[93.96155548 132.86676025]
[93.29177094 117.88172150]
[82.66996765 108.02659607]
[82.02297211 93.55152130]
[91.72319031 82.78806305]
[91.05340576 67.80302429]
[90.38362122 52.81798935]
[89.71383667 37.83295059]
[81.36804199 24.39202881]
[88.52931976 11.33196354]
[87.85953522 -3.65307546]
[87.18975067 -18.63811493]
[74.06604004 -30.20476723]
[73.38160706 -47.34671783]
[85.07196045 -59.43697357]
[84.17914581 -74.41037750]
[83.28633118 -89.38378143]
[82.39351654 -104.35719299]
[81.50070190 -119.33059692]
[80.60788727 -134.30400085]
[79.71506500 -149.27740479]
[76.06697845 -163.82702637]
[69.78961945 -177.45034790]
[63.51226044 -191.07365417]
[57.23489761 -204.69697571]
[50.95753860 -218.32029724]
[44.52400589 -224.80468750]
[44.68981934 -232.19349670]
[38.61598587 -245.90875244]
[24.25115395 -241.52595520]
[9.46276188 -238.90663147]
[-5.53353214 -238.08898926]
[-20.51903915 -239.08497620]
[-35.27522278 -241.88002014]
[-49.58689880 -246.43341064]
[-63.24536133 -252.67871094]
[-76.05142212 -260.52487183]
[-87.81834412 -269.85745239]
[-98.37451935 -280.54034424]
[-107.56600952 -292.41778564]
[-115.25878143 -305.31658936]
[-121.34064484 -319.04858398]
[-125.72291565 -333.41360474]
[-128.34169006 -348.20208740]
[-129.15875244 -363.19839478]
[-128.16221619 -378.18386841]
[-125.36661530 -392.93994141]
[-120.81269836 -407.25146484]
[-114.56688690 -420.90969849]
[-106.72025299 -433.71545410]
[-97.38723755 -445.48202515]
[-86.70393372 -456.03781128]
[-74.82614136 -465.22885132]
[-61.92707062 -472.92114258]
[-48.19482422 -479.00250244]
[-33.82966614 -483.38421631]
[-19.04107857 -486.00244141]
[-4.04472446 -486.81893921]
[10.94070721 -485.82186890]
[25.69668388 -483.02569580]
[40.00801849 -478.47125244]
[53.66601181 -472.22491455]
[66.47148895 -464.37780762]
[78.23770905 -455.04434204]
[88.79309082 -444.36065674]
[97.98368835 -432.48251343]
[105.67549896 -419.58316040]
[111.75634003 -405.85067749]
[116.13753510 -391.48538208]
[118.75519562 -376.69668579]
[119.57114410 -361.70028687]
[118.57348633 -346.71490479]
[115.77677917 -331.95904541]
[111.22179413 -317.64785767]
[104.97495270 -303.99011230]
[97.12736511 -291.18493652]
[87.79347229 -279.41903687]
[77.10938263 -268.86407471]
[65.23089600 -259.67391968]
[52.33125305 -251.98258972]
[58.40508652 -238.26731873]
[64.58085632 -224.59765625]
[70.85821533 -210.97433472]
[77.13557434 -197.35101318]
[83.41293335 -183.72770691]
[89.69029999 -170.10438538]
[90.09001923 -185.09906006]
[93.89100647 -199.60948181]
[100.89385223 -212.87448120]
[110.73121643 -224.19819641]
[122.88703918 -232.98658752]
[136.72364807 -238.77865601]
[151.51521301 -241.27056885]
[166.48579407 -240.33157349]
[180.85006714 -236.01095581]
[193.85450745 -228.53535461]
[204.81692505 -218.29692078]
[213.16226196 -205.83276367]
[218.45272827 -191.79670715]
[220.41079712 -176.92504883]
[218.93376160 -161.99795532]
[214.09910583 -147.79844666]
[206.16043091 -135.07139587]
[195.53419495 -124.48447418]
[182.77783203 -116.59301758]
[168.56050110 -111.81100464]
[153.62802124 -110.38928986]
[138.76373291 -112.40245819]
[124.74737549 -117.74490356]
[112.31422424 -126.13636780]
[102.11648560 -137.13664246]
[94.68847656 -150.17022705]
[95.58129120 -135.19682312]
[96.47410583 -120.22341156]
[97.36692047 -105.25000763]
[98.25973511 -90.27660370]
[99.15254974 -75.30319214]
[100.04537201 -60.32978821]
[110.78461456 -53.20953369]
[115.53287506 -41.02199173]
[112.34784698 -28.13533211]
[102.17478943 -19.30789948]
[102.84457397 -4.32286072]
[103.51435852 10.66217804]
[111.81224823 23.03126717]
[104.69887543 37.16316223]
[105.36865997 52.14820099]
[106.03844452 67.13323975]
[106.70822906 82.11827850]
[117.33003235 91.97340393]
[117.97702789 106.44847870]
[108.27680969 117.21193695]
[108.94659424 132.19697571]
[109.61637878 147.18200684]
[120.99718475 157.81756592]
[121.46297455 173.02406311]
[111.25346375 183.80838013]
[111.92324829 198.79342651]
[112.59303284 213.77845764]
[124.19750977 230.26174927]
[114.55004883 247.01924133]
[115.66570282 261.97769165]
[116.78134918 276.93615723]
[117.89699554 291.89459229]
[119.01264191 306.85305786]
[120.12829590 321.81149292]
[135.04087830 323.85934448]
[149.19624329 328.96115112]
[161.97648621 336.89160156]
[172.82423401 347.30206299]
[181.26701355 359.73565674]
[186.93780518 373.64758301]
[189.59098816 388.42877197]
[189.11297607 403.43276978]
[185.52709961 418.00375366]
[178.99246216 431.50546265]
[169.79689026 443.34872437]
[158.34422302 453.01736450]
[145.13667297 460.09063721]
[130.75267029 464.26153564]
[131.86831665 479.21997070]
[132.98396301 494.17843628]
[134.09960938 509.13687134]
[135.21525574 524.09533691]
[149.66377258 528.81860352]
[161.20167542 538.71533203]
[168.06954956 552.27630615]
[169.22009277 567.43365479]
[164.47782898 581.87591553]
[154.56594849 593.40081787]
[140.99592590 600.25085449]
[125.83708954 601.38140869]
[111.40106201 596.62017822]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 201]
[6 200]
[7 199]
[8 198]
[9 197]
[23 183]
[24 182]
[25 181]
[26 180]
[27 179]
[28 178]
[32 176]
[33 175]
[34 174]
[37 171]
[38 170]
[39 169]
[42 166]
[43 165]
[44 164]
[45 163]
[47 161]
[48 160]
[49 159]
[52 155]
[53 154]
[54 153]
[55 152]
[56 151]
[57 150]
[58 149]
[59 123]
[60 122]
[61 121]
[62 120]
[63 119]
[65 118]
[66 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
