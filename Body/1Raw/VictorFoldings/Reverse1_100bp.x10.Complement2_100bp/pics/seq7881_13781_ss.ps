%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[110.00894165 631.09954834]
[98.26949310 640.48266602]
[85.26263428 648.01123047]
[71.27893829 653.51702881]
[56.63080597 656.87707520]
[41.64548492 658.01629639]
[26.65775299 656.90924072]
[12.00244141 653.58062744]
[-1.99304605 648.10485840]
[-15.01604462 640.60424805]
[-26.77561569 631.24639893]
[-37.00904465 620.24029541]
[-45.48771667 607.83178711]
[-52.02220917 594.29821777]
[-56.46654510 579.94183350]
[-58.72143173 565.08343506]
[-58.73649597 550.05487061]
[-56.51140594 535.19195557]
[-52.09586334 520.82666016]
[-45.58851624 507.27999878]
[-37.13473892 494.85458374]
[-26.92339706 483.82797241]
[-15.18261147 474.44650269]
[-2.17467785 466.91979980]
[11.80980301 461.41598511]
[26.45841217 458.05804443]
[41.44389343 456.92092896]
[56.43146896 458.03012085]
[59.75372696 443.40264893]
[63.07598877 428.77520752]
[66.39824677 414.14773560]
[61.67199707 400.02285767]
[72.27365112 388.27911377]
[75.59590912 373.65167236]
[78.91816711 359.02420044]
[81.69377899 344.28323364]
[83.91889954 329.44918823]
[86.14401245 314.61514282]
[88.25863647 299.76495361]
[90.26264954 284.89944458]
[92.26667023 270.03390503]
[94.27068329 255.16838074]
[96.27469635 240.30284119]
[98.27870941 225.43731689]
[98.72531128 210.44396973]
[97.60966492 195.48551941]
[96.49401855 180.52706909]
[93.52393341 176.78704834]
[92.87178040 171.14155579]
[95.57461548 165.10778809]
[94.90483093 150.12275696]
[94.23504639 135.13771057]
[93.56526184 120.15267944]
[92.89547729 105.16764069]
[90.82864380 102.92761230]
[89.53118134 99.88604736]
[89.30154419 96.32645416]
[90.32926178 92.63862610]
[92.65885162 89.27618408]
[92.88217926 74.27784729]
[93.10550690 59.27951050]
[79.43426514 49.31993103]
[74.44281006 33.33285141]
[79.90918732 17.67780685]
[93.49206543 8.45918751]
[93.49206543 -6.54081249]
[93.49206543 -21.54081345]
[90.36265564 -30.12245750]
[93.60539246 -36.76372528]
[93.82872009 -51.76206207]
[84.48928070 -67.63204193]
[94.06997681 -82.33501434]
[94.06997681 -97.33501434]
[90.94056702 -105.91665649]
[94.18330383 -112.55792236]
[94.40663147 -127.55625916]
[94.62995911 -142.55459595]
[79.52608490 -146.19992065]
[65.61450195 -153.10404968]
[53.58802795 -162.91966248]
[44.04482269 -175.15460205]
[37.45865631 -189.19642639]
[34.15538025 -204.34312439]
[34.29680634 -219.83822632]
[37.87277985 -234.90855408]
[44.70185471 -248.80279541]
[54.44048309 -260.82901001]
[66.60030365 -270.38903809]
[80.57262421 -277.00827026]
[95.65890503 -280.35916138]
[95.65890503 -295.35916138]
[95.65890503 -310.35916138]
[95.32392883 -325.35543823]
[94.65414429 -340.34048462]
[80.02125549 -344.13125610]
[67.15668488 -352.06814575]
[57.20435333 -363.44543457]
[51.04920197 -377.25140381]
[49.23854828 -392.25851440]
[51.93339539 -407.13229370]
[58.89411926 -420.55017090]
[69.50177002 -431.31906128]
[82.81313324 -438.48141479]
[97.64456940 -441.40029907]
[112.67726898 -439.81625366]
[126.57454681 -433.87005615]
[138.10064697 -424.09045410]
[146.23069763 -411.34707642]
[150.24177551 -396.77304077]
[149.77720642 -381.66424561]
[144.87831116 -367.36416626]
[135.98069763 -355.14437866]
[123.87552643 -346.09140015]
[109.63918304 -341.01025391]
[110.30896759 -326.02520752]
[112.65029144 -323.38882446]
[113.83097839 -319.48742676]
[113.27037048 -314.87884521]
[110.65890503 -310.35916138]
[110.65890503 -295.35916138]
[110.65890503 -280.35916138]
[124.83566284 -277.31295776]
[138.07156372 -271.37603760]
[149.78407288 -262.80697632]
[159.45713806 -251.98014832]
[166.66389465 -239.36955261]
[171.08554077 -225.52795410]
[172.52540588 -211.06268311]
[170.91770935 -196.60899353]
[166.33056641 -182.80215454]
[158.96311951 -170.24955750]
[149.13682556 -159.50395203]
[137.28155518 -151.03913879]
[123.91666412 -145.22904968]
[109.62829590 -142.33126831]
[109.40496826 -127.33293152]
[109.18164062 -112.33459473]
[109.06997681 -97.33501434]
[109.06997681 -82.33501434]
[117.39893341 -73.56260681]
[117.52169037 -61.06586075]
[108.82705688 -51.53873444]
[108.60372925 -36.54039764]
[108.49206543 -21.54081345]
[108.49206543 -6.54081249]
[108.49206543 8.45918751]
[119.97460175 15.27046871]
[126.64559937 26.95985985]
[126.66970062 40.52706146]
[119.93365479 52.42849731]
[108.10384369 59.50283813]
[107.88051605 74.50117493]
[107.65718842 89.49951172]
[107.88051605 104.49784851]
[108.55030060 119.48288727]
[109.22008514 134.46792603]
[109.88986969 149.45297241]
[110.55965424 164.43800354]
[111.45246887 179.41140747]
[112.56811523 194.36987305]
[113.68376923 209.32832336]
[120.32099152 195.87666321]
[131.54991150 185.93124390]
[145.70478821 180.96740723]
[160.68582153 181.72152710]
[174.27066040 188.08172607]
[184.44409180 199.10449219]
[189.69692993 213.15467834]
[189.24995422 228.14801025]
[183.16947937 241.86033630]
[172.35748291 252.25749207]
[158.41789246 257.79714966]
[143.41854858 257.65750122]
[129.58450317 251.85928345]
[118.96797180 241.26261902]
[113.14423370 227.44132996]
[111.14022064 242.30685425]
[109.13620758 257.17239380]
[107.13219452 272.03790283]
[105.12818146 286.90344238]
[103.12416840 301.76898193]
[105.07901001 310.69177246]
[100.97805786 316.84027100]
[98.75294495 331.67431641]
[96.52782440 346.50836182]
[109.95806885 339.82791138]
[123.61848450 346.02410889]
[127.43912506 360.52938843]
[118.60354614 372.65097046]
[103.62502289 373.45327759]
[93.54563141 362.34646606]
[90.22337341 376.97393799]
[86.90110779 391.60137939]
[91.38973236 406.77252197]
[81.02571106 417.47000122]
[77.70344543 432.09744263]
[74.38118744 446.72491455]
[71.05892944 461.35238647]
[85.05519867 466.82614136]
[98.07926178 474.32489014]
[109.84016418 483.68112183]
[120.07516479 494.68579102]
[128.55560303 507.09301758]
[135.09202576 520.62567139]
[139.53840637 534.98144531]
[141.79541016 549.83953857]
[141.81260681 564.86810303]
[139.58963013 579.73132324]
[135.17613220 594.09722900]
[128.67071533 607.64483643]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 198]
[29 197]
[30 196]
[31 195]
[33 193]
[34 192]
[35 191]
[36 185]
[37 184]
[38 183]
[39 181]
[40 180]
[41 179]
[42 178]
[43 177]
[44 176]
[45 161]
[46 160]
[47 159]
[50 158]
[51 157]
[52 156]
[53 155]
[54 154]
[59 153]
[60 152]
[61 151]
[65 146]
[66 145]
[67 144]
[69 143]
[70 142]
[72 139]
[73 138]
[75 137]
[76 136]
[77 135]
[90 121]
[91 120]
[92 119]
[93 115]
[94 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
