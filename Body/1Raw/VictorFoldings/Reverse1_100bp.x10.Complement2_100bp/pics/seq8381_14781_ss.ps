%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[223.70072937 313.60604858]
[236.05920410 305.02322388]
[229.98536682 291.30795288]
[223.91154480 277.59271240]
[217.83770752 263.87744141]
[211.76387024 250.16217041]
[204.00747681 237.32322693]
[194.69259644 225.56597900]
[185.37771606 213.80871582]
[176.06283569 202.05146790]
[166.57392883 190.43420410]
[156.91311646 178.95950317]
[142.79719543 174.20663452]
[139.82801819 158.66654968]
[130.16720581 147.19184875]
[120.42124176 135.78938293]
[110.59066010 124.45978546]
[100.76007843 113.13019562]
[104.57148743 127.63788605]
[105.10492706 142.62840271]
[102.33435059 157.37031555]
[96.39495850 171.14433289]
[87.57653809 183.27839661]
[76.30936432 193.18045044]
[63.14318466 200.36735535]
[48.72040558 204.48846436]
[33.74474716 205.34266663]
[18.94690704 202.88830566]
[5.04890203 197.24513245]
[-7.27115297 188.68847656]
[-17.41213417 177.63586426]
[-24.87924194 164.62654114]
[-29.30813789 150.29528809]
[-30.48272896 135.34133911]
[-28.34570122 120.49435425]
[-23.00132561 106.47872925]
[-14.71036720 93.97833252]
[-3.87735987 83.60307312]
[8.96912956 75.85919189]
[23.20229340 71.12452698]
[38.12766266 69.63009644]
[53.01699829 71.44880676]
[67.14381409 76.49193573]
[79.81883240 84.51340485]
[90.41947174 95.11666107]
[85.59347534 80.91420746]
[80.76747894 66.71174622]
[75.94148254 52.50929260]
[71.11548615 38.30683517]
[59.34959793 27.72976112]
[62.58072662 13.18984699]
[57.75472641 -1.01260900]
[52.92873001 -15.21506500]
[48.10273361 -29.41752052]
[34.25625610 -28.41176987]
[20.58285522 -30.75688171]
[7.88098764 -36.31108856]
[-3.10877967 -44.74536896]
[-11.74694729 -55.56293488]
[-17.53229904 -68.12849426]
[-20.13097572 -81.70554352]
[-19.39574814 -95.49957275]
[-15.37434006 -108.70450592]
[-8.30636787 -120.54986572]
[1.39093542 -130.34567261]
[13.14734554 -137.52265930]
[8.74634743 -151.86251831]
[4.34534931 -166.20236206]
[-0.05564866 -180.54220581]
[-3.33775520 -183.38504028]
[-5.34284830 -186.78271484]
[-6.05331755 -190.26562500]
[-5.60586548 -193.40669250]
[-4.26427317 -195.86805725]
[-7.80394554 -210.44442749]
[-18.57927132 -222.02902222]
[-14.06384277 -236.22270203]
[-17.60351562 -250.79907227]
[-21.14318848 -265.37545776]
[-24.68286133 -279.95181274]
[-28.22253227 -294.52819824]
[-31.76220512 -309.10458374]
[-46.79827881 -308.47000122]
[-61.66919327 -310.78128052]
[-75.80335236 -315.94964600]
[-88.65747070 -323.77639771]
[-99.73747253 -333.96066284]
[-108.61747742 -346.11105347]
[-114.95615387 -359.76049805]
[-118.50986481 -374.38436890]
[-119.14201355 -389.42053223]
[-116.82830048 -404.29107666]
[-111.65766144 -418.42440796]
[-103.82884216 -431.27725220]
[-93.64276123 -442.35562134]
[-81.49094391 -451.23364258]
[-67.84046936 -457.57012939]
[-53.21603394 -461.12145996]
[-38.17975235 -461.75115967]
[-23.30958748 -459.43505859]
[-9.17710400 -454.26211548]
[3.67448044 -446.43124390]
[14.75118637 -436.24334717]
[23.62725639 -424.09008789]
[29.96151352 -410.43859863]
[33.51049042 -395.81359863]
[34.13777161 -380.77722168]
[31.81924820 -365.90740967]
[26.64403343 -351.77575684]
[18.81105423 -338.92544556]
[8.62138557 -327.85040283]
[-3.53330684 -318.97628784]
[-17.18582916 -312.64425659]
[-13.64615726 -298.06787109]
[-10.10648537 -283.49148560]
[-6.56681252 -268.91513062]
[-3.02714014 -254.33874512]
[0.51253229 -239.76237488]
[11.03467655 -229.22036743]
[6.77242994 -213.98410034]
[10.31210232 -199.40773010]
[14.28419876 -184.94320679]
[18.68519592 -170.60336304]
[23.08619499 -156.26350403]
[27.48719215 -141.92366028]
[43.65794373 -142.34863281]
[59.30986023 -138.20819092]
[73.17922211 -129.82852173]
[84.14395905 -117.87841034]
[91.31440735 -103.31584167]
[94.10551453 -87.31125641]
[92.28456116 -71.15344238]
[85.99053192 -56.14576721]
[75.72356415 -43.50104523]
[62.30518723 -34.24351883]
[67.13118744 -20.04106140]
[71.95718384 -5.83860683]
[76.78318024 8.36384869]
[88.20388031 17.92506981]
[85.31793976 33.48083878]
[90.14393616 47.68329620]
[94.96993256 61.88574982]
[99.79592896 76.08820343]
[104.62193298 90.29066467]
[112.08966827 103.29961395]
[121.92024994 114.62920380]
[131.75083923 125.95880127]
[139.73866272 130.38964844]
[141.64190674 137.53103638]
[151.30271912 149.00573730]
[166.10964966 154.57934570]
[168.38781738 169.29869080]
[178.04862976 180.77339172]
[184.12475586 183.37960815]
[187.47033691 187.97352600]
[187.82008362 192.73658752]
[197.13496399 204.49383545]
[206.44984436 216.25109863]
[215.76472473 228.00834656]
[213.14665222 213.23858643]
[215.40106201 198.40896606]
[222.29005432 185.08448792]
[233.08662415 174.67131042]
[246.65136719 168.26837158]
[261.55276489 166.55137634]
[276.21826172 169.70153809]
[289.10015869 177.38638306]
[298.83898926 188.79495239]
[304.40698242 202.72323608]
[305.21655273 217.70138550]
[301.18228149 232.14868164]
[292.72988892 244.54049683]
[280.75137329 253.56907654]
[266.51086426 258.28161621]
[251.51119995 258.18078613]
[237.33532715 253.27725220]
[225.47914124 244.08833313]
[231.55297852 257.80358887]
[237.62680054 271.51885986]
[243.70063782 285.23413086]
[249.77447510 298.94940186]
[264.43572998 295.56646729]
[279.47225952 295.01959229]
[294.34051514 297.32852173]
[308.50302124 302.40985107]
[321.44781494 310.07983398]
[332.70693970 320.06124878]
[341.87341309 331.99325562]
[348.61581421 345.44451904]
[352.69046021 359.92877197]
[353.95004272 374.92242432]
[352.34902954 389.88348389]
[347.94528198 404.27111816]
[340.89801025 417.56518555]
[331.46197510 429.28515625]
[319.97827148 439.00732422]
[306.86199951 446.38027954]
[292.58734131 451.13745117]
[277.67031860 453.10690308]
[262.65014648 452.21740723]
[248.06982422 448.50115967]
[234.45639038 442.09249878]
[222.30198669 433.22305298]
[212.04598999 422.21347046]
[204.05912781 409.46173096]
[198.63012695 395.42883301]
[195.95524597 380.62203979]
[196.13117981 365.57656860]
[199.15156555 350.83636475]
[204.90721130 336.93426514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 181]
[3 180]
[4 179]
[5 178]
[6 177]
[7 159]
[8 158]
[9 157]
[10 156]
[11 153]
[12 152]
[14 150]
[15 149]
[16 147]
[17 146]
[18 145]
[45 144]
[46 143]
[47 142]
[48 141]
[49 140]
[51 138]
[52 137]
[53 136]
[54 135]
[66 125]
[67 124]
[68 123]
[69 122]
[74 121]
[75 120]
[77 118]
[78 117]
[79 116]
[80 115]
[81 114]
[82 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
