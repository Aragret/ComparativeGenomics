%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[91.51532745 506.04342651]
[78.41991425 513.61743164]
[63.62451935 516.77203369]
[48.57865143 515.19818115]
[34.75634384 509.05010986]
[23.51176643 498.93008423]
[15.94655132 485.82958984]
[12.80185986 471.03210449]
[14.38577652 455.98727417]
[20.54312515 442.16909790]
[30.67067337 430.93130493]
[43.77622223 423.37487793]
[58.57583237 420.24008179]
[60.13635254 405.32150269]
[61.69687653 390.40289307]
[59.26630402 383.42333984]
[63.39330673 375.27438354]
[65.17577362 360.38064575]
[62.84938049 353.36569214]
[67.09725189 345.27908325]
[69.10126495 330.41354370]
[61.57079315 314.56237793]
[72.94674683 300.08242798]
[74.72921753 285.18872070]
[76.51168060 270.29501343]
[78.29415131 255.40129089]
[70.52851105 239.66401672]
[81.68762207 225.01629639]
[83.13703918 210.08648682]
[84.47527313 195.14630127]
[85.70224762 180.19656372]
[86.81790161 165.23811340]
[87.93354797 150.27966309]
[89.04919434 135.32121277]
[86.66677094 131.18199158]
[86.85929108 125.50220490]
[90.42727661 119.93614960]
[91.98780060 105.01753998]
[89.69300079 100.30078125]
[90.20426941 94.63404083]
[93.82334137 89.68033600]
[95.82735443 74.81480408]
[90.00313568 60.10463715]
[99.37145233 48.52517319]
[101.37546539 33.65964508]
[103.37947845 18.79411888]
[105.38349152 3.92858982]
[105.27182007 -11.07099438]
[103.04670715 -25.90503883]
[100.71121979 -40.72210693]
[98.26548767 -55.52137756]
[95.81976318 -70.32064819]
[85.93590546 -82.67459106]
[91.49450684 -96.49310303]
[89.04877472 -111.29237366]
[86.60305023 -126.09164429]
[84.15731812 -140.89091492]
[80.94404602 -155.54270935]
[67.49028778 -163.39344788]
[63.66807175 -178.11911011]
[71.23546600 -190.89683533]
[67.26336670 -205.36135864]
[63.29127502 -219.82588196]
[59.31917572 -234.29040527]
[48.51579666 -241.33666992]
[45.50521088 -253.46597290]
[51.37199783 -264.04458618]
[47.61569595 -278.56665039]
[43.64360046 -293.03118896]
[39.45658875 -307.43496704]
[35.26957703 -321.83874512]
[31.08256721 -336.24252319]
[26.89555550 -350.64630127]
[12.03992367 -348.41168213]
[-2.98100901 -348.17709351]
[-17.89917564 -349.94677734]
[-32.44834518 -353.68911743]
[-46.36886597 -359.33734131]
[-59.41231918 -366.79064941]
[-71.34591675 -375.91601562]
[-81.95670319 -386.55062866]
[-91.05530548 -398.50466919]
[-98.47935486 -411.56478882]
[-104.09635162 -425.49795532]
[-107.80606842 -440.05545044]
[-109.54228973 -454.97756958]
[-109.27403259 -469.99792480]
[-107.00608826 -484.84851074]
[-102.77893066 -499.26428223]
[-96.66799164 -512.98797607]
[-88.78233337 -525.77471924]
[-79.26268005 -537.39624023]
[-68.27893066 -547.64514160]
[-56.02709579 -556.33856201]
[-42.72582626 -563.32141113]
[-28.61249542 -568.46893311]
[-13.93897438 -571.68939209]
[1.03286886 -572.92523193]
[16.03584671 -572.15447998]
[30.80221176 -569.39080811]
[45.06843948 -564.68353271]
[58.57993698 -558.11676025]
[71.09557343 -549.80755615]
[82.39199066 -539.90429688]
[92.26759338 -528.58374023]
[100.54613495 -516.04779053]
[107.07988739 -502.52029419]
[111.75223541 -488.24261475]
[114.47979736 -473.46951294]
[115.21389771 -458.46472168]
[113.94144440 -443.49594116]
[110.68513489 -428.83032227]
[105.50308228 -414.72961426]
[98.48777771 -401.44546509]
[89.76440430 -389.21493530]
[79.48863983 -378.25625610]
[67.84387970 -368.76504517]
[55.03793716 -360.91067505]
[41.29933929 -354.83331299]
[45.48634720 -340.42953491]
[49.67335892 -326.02575684]
[53.86037064 -311.62197876]
[58.04738235 -297.21820068]
[61.72713089 -294.17376709]
[63.53345871 -288.78543091]
[62.13775635 -282.32296753]
[65.89405823 -267.80090332]
[78.85140228 -255.96560669]
[73.78369904 -238.26249695]
[77.75579834 -223.79797363]
[81.72789764 -209.33345032]
[85.69998932 -194.86892700]
[98.73175812 -187.74794006]
[102.96608734 -173.13543701]
[95.40856934 -159.51480103]
[102.75142670 -172.59465027]
[116.73901367 -178.01196289]
[130.97640991 -173.29002380]
[138.95445251 -160.58763123]
[137.02569580 -145.71215820]
[126.07194519 -135.46444702]
[111.10110474 -134.52964783]
[98.95658875 -143.33663940]
[101.40232086 -128.53736877]
[103.84804535 -113.73809814]
[106.29377747 -98.93882751]
[116.00270081 -87.64343262]
[110.61903381 -72.76637268]
[113.06475830 -57.96710587]
[115.51049042 -43.16783524]
[119.70252228 -37.08107376]
[117.88075256 -28.13015556]
[120.10586548 -13.29611206]
[124.96389771 -27.48764038]
[133.74050903 -39.65197754]
[145.67643738 -48.73678589]
[159.73908997 -53.95613861]
[174.71192932 -54.85850906]
[189.29963684 -51.36583328]
[202.24023438 -43.78026199]
[212.41423035 -32.75802612]
[218.94148254 -19.25265503]
[221.25730896 -4.43250132]
[219.16136169 10.42034435]
[212.83497620 24.02096176]
[202.82543945 35.19276428]
[189.99867249 42.96927261]
[175.46432495 46.67774963]
[160.47976685 45.99736786]
[146.34130859 40.98699188]
[134.27206421 32.08006668]
[125.31613922 20.04713058]
[120.24901581 5.93260336]
[118.24500275 20.79813194]
[116.24098969 35.66365814]
[114.23697662 50.52918625]
[120.20453644 64.17607117]
[110.69288635 76.81881714]
[108.68887329 91.68434906]
[106.90641022 106.57806396]
[105.34588623 121.49667358]
[104.00765228 136.43685913]
[102.89199829 151.39530945]
[101.77635193 166.35375977]
[100.66070557 181.31221008]
[103.14317322 190.10284424]
[99.41545868 196.48452759]
[98.07722473 211.42471313]
[100.42853546 220.25132751]
[96.60622406 226.57681274]
[104.10713196 237.06962585]
[102.50024414 249.46324158]
[93.18786621 257.18374634]
[91.40540314 272.07748413]
[89.62293243 286.97119141]
[87.84046936 301.86489868]
[95.18431854 312.46823120]
[93.39308167 324.83654785]
[83.96679688 332.41754150]
[81.96278381 347.28308105]
[80.06948853 362.16311646]
[78.28702545 377.05682373]
[76.61547852 391.96340942]
[75.05496216 406.88201904]
[73.49443817 421.80062866]
[87.32496643 427.93017578]
[98.58309937 438.03512573]
[106.16586304 451.12545776]
[109.33038330 465.91873169]
[107.76663208 480.96563721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 205]
[14 204]
[15 203]
[17 202]
[18 201]
[20 200]
[21 199]
[23 196]
[24 195]
[25 194]
[26 193]
[28 190]
[29 188]
[30 187]
[31 185]
[32 184]
[33 183]
[34 182]
[37 181]
[38 180]
[41 179]
[42 178]
[44 176]
[45 175]
[46 174]
[47 173]
[48 153]
[49 152]
[50 150]
[51 149]
[52 148]
[54 146]
[55 145]
[56 144]
[57 143]
[58 135]
[61 132]
[62 131]
[63 130]
[64 129]
[67 127]
[68 126]
[69 123]
[70 122]
[71 121]
[72 120]
[73 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
