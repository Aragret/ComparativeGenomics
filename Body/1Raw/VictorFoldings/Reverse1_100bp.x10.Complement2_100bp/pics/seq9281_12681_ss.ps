%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[169.58503723 362.80914307]
[166.04536438 348.23275757]
[162.50569153 333.65640259]
[158.85760498 319.10678101]
[155.10130310 304.58471680]
[144.42337036 294.20053101]
[148.45829773 278.90249634]
[144.27128601 264.49871826]
[139.65727234 250.22599792]
[135.04325867 235.95326233]
[130.42926025 221.68052673]
[119.15217590 211.95033264]
[122.26940155 196.43925476]
[117.65538788 182.16651917]
[113.04138184 167.89378357]
[107.99280548 162.49621582]
[108.46663666 153.37408447]
[104.06563568 139.03424072]
[99.66464233 124.69438934]
[95.26364136 110.35454559]
[89.80652618 124.32665253]
[77.72460175 133.21638489]
[62.76159286 134.26913452]
[49.55394363 127.15872192]
[42.19419098 114.08837128]
[42.96283340 99.10807800]
[51.62170029 86.85964966]
[65.48774719 81.13838959]
[80.26442719 83.71710205]
[91.37316132 93.79695129]
[88.92742920 78.99768066]
[86.48170471 64.19841003]
[84.03597260 49.39913940]
[81.59024811 34.59986877]
[71.57854462 26.46791840]
[69.84616852 14.09122086]
[76.78166962 4.18034792]
[74.55654907 -10.65369606]
[72.33142853 -25.48773956]
[69.22732544 -40.16304398]
[65.25522614 -54.62756729]
[61.28313065 -69.09208679]
[57.31103516 -83.55661011]
[53.33893585 -98.02114105]
[49.36684036 -112.48566437]
[45.39474487 -126.95018768]
[41.42264938 -141.41470337]
[37.49681091 -126.93756104]
[28.39059258 -115.01796722]
[15.45484638 -107.42411804]
[0.60851407 -105.28253174]
[-13.94604015 -108.91088867]
[-26.04973412 -117.77094269]
[-33.90705490 -130.54835510]
[-36.35242081 -145.34768677]
[-33.02307129 -159.97354126]
[-24.41289711 -172.25625610]
[-11.79916763 -180.37374878]
[2.94694662 -183.12185669]
[17.63794708 -180.09291077]
[30.09451103 -171.73623657]
[38.46804047 -159.29325867]
[37.57522202 -174.26666260]
[36.12580490 -189.19647217]
[34.12179184 -204.06199646]
[32.11777878 -218.92753601]
[30.11376381 -233.79306030]
[28.10975075 -248.65858459]
[25.99512672 -263.50878906]
[23.77000809 -278.34283447]
[21.54489136 -293.17687988]
[6.54565001 -292.51321411]
[-8.44079494 -293.42105103]
[-23.25024414 -295.89044189]
[-37.72043610 -299.89434814]
[-51.69282532 -305.38888550]
[-65.01432800 -312.31387329]
[-77.53898621 -320.59341431]
[-89.12956238 -330.13677979]
[-99.65908051 -340.83944702]
[-109.01215363 -352.58413696]
[-117.08632660 -365.24215698]
[-123.79311371 -378.67483521]
[-129.05905151 -392.73498535]
[-132.82643127 -407.26855469]
[-135.05397034 -422.11630249]
[-135.71726990 -437.11557007]
[-134.80906677 -452.10198975]
[-132.33930969 -466.91137695]
[-128.33505249 -481.38146973]
[-122.84016418 -495.35372925]
[-115.91486359 -508.67504883]
[-107.63502502 -521.19952393]
[-98.09136200 -532.78985596]
[-87.38843536 -543.31909180]
[-75.64352417 -552.67193604]
[-62.98530960 -560.74578857]
[-49.55247498 -567.45220947]
[-35.49220276 -572.71783447]
[-20.95854378 -576.48486328]
[-6.11073637 -578.71203613]
[8.88853741 -579.37493896]
[23.87493896 -578.46636963]
[38.68426895 -575.99627686]
[53.15426254 -571.99163818]
[67.12638855 -566.49645996]
[80.44755554 -559.57080078]
[92.97180939 -551.29064941]
[104.56192017 -541.74670410]
[115.09091949 -531.04357910]
[124.44342804 -519.29840088]
[132.51698303 -506.64001465]
[139.22311401 -493.20700073]
[144.48837280 -479.14660645]
[148.25503540 -464.61285400]
[150.48185730 -449.76498413]
[151.14443970 -434.76571655]
[150.23550415 -419.77932739]
[147.76501465 -404.97006226]
[143.76005554 -390.50015259]
[138.26449585 -376.52816772]
[131.33854675 -363.20715332]
[123.05810547 -350.68310547]
[113.51387787 -339.09323120]
[102.81044006 -328.56448364]
[91.06507874 -319.21228027]
[78.40646362 -311.13903809]
[64.97330475 -304.43322754]
[50.91277695 -299.16830444]
[36.37893677 -295.40197754]
[38.60405350 -280.56793213]
[40.82917023 -265.73391724]
[44.93011856 -259.58541870]
[42.97527695 -250.66259766]
[44.97929382 -235.79707336]
[46.98330688 -220.93154907]
[48.98731995 -206.06600952]
[50.99133301 -191.20048523]
[62.02301025 -201.36425781]
[76.87002563 -199.22741699]
[84.58771515 -186.36517334]
[79.48688507 -172.25909424]
[65.32767487 -167.30764771]
[52.54862976 -175.15948486]
[53.44144440 -160.18608093]
[55.88717270 -145.38681030]
[59.85926819 -130.92228699]
[63.83136368 -116.45775604]
[67.80345917 -101.99323273]
[71.77555847 -87.52870941]
[75.74765015 -73.06418610]
[79.71974945 -58.59966278]
[83.69184875 -44.13513947]
[90.22447205 -57.63790894]
[103.39134216 -64.82354736]
[118.28154755 -63.01199341]
[129.34141541 -52.87890244]
[132.44587708 -38.20367432]
[126.43704224 -24.45980263]
[113.55606842 -16.77341461]
[98.60723877 -18.01134109]
[87.16547394 -27.71285629]
[89.39059448 -12.87881279]
[91.61570740 1.95523047]
[103.27146149 15.07431698]
[96.38951874 32.15414047]
[98.83525085 46.95341110]
[101.28097534 61.75268173]
[103.72669983 76.55195618]
[106.17243195 91.35122681]
[109.60349274 105.95354462]
[114.00448608 120.29339600]
[118.40548706 134.63323975]
[122.80648804 148.97308350]
[127.31410980 163.27976990]
[131.92811584 177.55250549]
[136.54212952 191.82524109]
[148.14923096 202.57632446]
[144.70199585 217.06651306]
[149.31599426 231.33924866]
[153.93000793 245.61198425]
[158.54402161 259.88470459]
[161.86808777 262.67837524]
[163.92353821 266.04580688]
[164.68579102 269.51776123]
[164.28515625 272.66516113]
[162.98036194 275.14620972]
[173.92695618 286.56909180]
[169.62335205 300.82843018]
[173.37965393 315.35046387]
[178.55836487 322.87503052]
[177.08206177 330.11672974]
[180.62173462 344.69311523]
[184.16140747 359.26947021]
[199.24061584 360.64651489]
[213.05464172 366.84744263]
[224.10504150 377.19961548]
[231.19314575 390.58010864]
[233.55009460 405.53750610]
[230.92024231 420.44931030]
[223.58882141 433.69805908]
[212.35112000 443.84658813]
[198.42608643 449.79406738]
[183.32424927 450.89535522]
[168.68370056 447.03100586]
[156.09255981 438.62020874]
[146.91661072 426.57525635]
[142.15119934 412.20272827]
[142.31324768 397.06164551]
[147.38514709 382.79437256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 194]
[2 193]
[3 192]
[4 190]
[5 189]
[7 187]
[8 182]
[9 181]
[10 180]
[11 179]
[13 177]
[14 176]
[15 175]
[17 174]
[18 173]
[19 172]
[20 171]
[30 170]
[31 169]
[32 168]
[33 167]
[34 166]
[37 164]
[38 163]
[39 162]
[40 153]
[41 152]
[42 151]
[43 150]
[44 149]
[45 148]
[46 147]
[47 146]
[62 145]
[63 144]
[64 138]
[65 137]
[66 136]
[67 135]
[68 134]
[69 132]
[70 131]
[71 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
