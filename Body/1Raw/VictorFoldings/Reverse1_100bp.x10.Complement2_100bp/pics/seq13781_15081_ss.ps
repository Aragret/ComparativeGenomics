%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[114.07639313 775.59851074]
[99.41919708 772.36492920]
[85.09960175 767.86621094]
[71.22658539 762.13653564]
[57.90574646 755.21960449]
[45.23845291 747.16790771]
[33.32112122 738.04290771]
[22.24444389 727.91387939]
[12.09272480 716.85803223]
[2.94322824 704.95947266]
[-5.13441324 692.30871582]
[-12.07872200 679.00213623]
[-17.83684731 665.14086914]
[-22.36496544 650.83056641]
[-25.62861443 636.18005371]
[-27.60295296 621.30084229]
[-28.27295876 606.30615234]
[-27.63353157 591.31011963]
[-25.68953514 576.42687988]
[-22.45576668 561.76971436]
[-17.95683861 547.45019531]
[-12.22698975 533.57727051]
[-5.30982876 520.25653076]
[2.74199963 507.58935547]
[11.86721516 495.67214966]
[21.99636841 484.59561157]
[33.05236816 474.44406128]
[44.95106888 465.29470825]
[57.60191727 457.21725464]
[70.90863037 450.27313232]
[84.76992798 444.51519775]
[99.08032227 439.98727417]
[113.73089600 436.72384644]
[128.61013794 434.74972534]
[127.94036102 419.76467896]
[127.27057648 404.77963257]
[126.60079193 389.79458618]
[113.71605682 378.98614502]
[112.61341858 361.86602783]
[124.46258545 348.99679565]
[123.56977081 334.02340698]
[122.67694855 319.04998779]
[120.89448547 304.15628052]
[118.22869110 289.39505005]
[115.56289673 274.63385010]
[112.89710236 259.87261963]
[110.23130798 245.11140442]
[107.56550598 230.35018921]
[104.89971161 215.58897400]
[102.23391724 200.82775879]
[92.81369019 212.50077820]
[77.91379547 214.23078918]
[66.06955719 205.02676392]
[64.06589508 190.16119385]
[73.05060577 178.14973450]
[87.87683105 175.87310791]
[100.05093384 184.63465881]
[98.71269989 169.69447327]
[97.37446594 154.75428772]
[82.07437134 151.80345154]
[68.22267914 144.66685486]
[56.93862152 133.92114258]
[49.13395691 120.43457031]
[45.43930435 105.29687500]
[46.15320206 89.73117828]
[51.21796417 74.99521637]
[60.22434998 62.27966309]
[72.44464111 52.61193848]
[86.89142609 46.77320862]
[85.33090210 31.85460281]
[83.77037811 16.93599701]
[79.76515961 8.72648811]
[82.29937744 1.78390026]
[80.96114349 -13.15628529]
[79.62290955 -28.09646988]
[78.28467560 -43.03665543]
[76.39138794 -57.91669083]
[73.94565582 -72.71595764]
[60.61553574 -76.95514679]
[50.46081924 -86.47869110]
[45.42422104 -99.38647461]
[46.43553543 -113.13879395]
[53.24054337 -125.05603790]
[64.46172333 -132.84077454]
[62.23660660 -147.67481995]
[60.01148987 -162.50886536]
[57.78637314 -177.34291077]
[42.76400375 -178.47259521]
[28.36981010 -182.91723633]
[15.32579708 -190.45391846]
[4.28624678 -200.70457458]
[-4.19510031 -213.15505981]
[-9.69282436 -227.18084717]
[-11.93116188 -242.07841492]
[-10.79783821 -257.10052490]
[-6.34970045 -271.49362183]
[1.19013441 -284.53582764]
[11.44347095 -295.57287598]
[23.89600754 -304.05120850]
[37.92313004 -309.54553223]
[52.82123947 -311.78027344]
[67.84305573 -310.64331055]
[82.23509979 -306.19168091]
[95.27545929 -298.64868164]
[106.31003571 -288.39266968]
[114.78535461 -275.93807983]
[120.27627563 -261.90963745]
[122.50739288 -247.01097107]
[121.36679077 -231.98942566]
[116.91168213 -217.59848022]
[109.36552429 -204.55993652]
[99.10684204 -193.52784729]
[86.65019989 -185.05555725]
[72.62041473 -179.56802368]
[74.84553528 -164.73397827]
[77.07064819 -149.89993286]
[79.29576874 -135.06588745]
[94.47362518 -129.52105713]
[104.84384918 -117.00650024]
[107.50310516 -100.87747955]
[101.63214874 -85.52080536]
[88.74492645 -75.16168976]
[91.19065857 -60.36241913]
[101.91483307 -70.85012817]
[116.81888580 -69.15628815]
[124.91611481 -56.52953720]
[120.23753357 -42.27783966]
[106.23202515 -36.90702057]
[93.22486115 -44.37488937]
[94.56309509 -29.43470383]
[95.90132904 -14.49451923]
[97.23956299 0.44566604]
[98.68898773 15.37547493]
[100.24950409 30.29407883]
[101.81002808 45.21268463]
[115.93880463 47.55115891]
[128.97972107 53.46934891]
[140.04273987 62.56332016]
[148.37278748 74.21240234]
[153.40130615 87.62152863]
[154.78511047 101.87549591]
[152.42974854 116.00146484]
[146.49598694 129.03530884]
[137.38880920 140.08744812]
[125.72977448 148.40356445]
[112.31465149 153.41606140]
[113.65288544 168.35624695]
[114.99111938 183.29643250]
[116.99513245 198.16195679]
[119.66093445 212.92317200]
[122.32672882 227.68438721]
[124.99252319 242.44561768]
[127.65831757 257.20681763]
[130.32411194 271.96804810]
[132.98991394 286.72924805]
[135.65570068 301.49047852]
[143.36692810 288.62435913]
[157.12237549 282.64205933]
[171.79158020 285.77484131]
[181.90332031 296.85424805]
[183.68612671 311.74792480]
[176.47509766 324.90090942]
[162.95974731 331.40744019]
[148.18096924 328.84078979]
[137.65036011 318.15716553]
[138.54316711 333.13058472]
[139.43598938 348.10397339]
[150.47219849 355.82516479]
[154.98060608 368.31054688]
[151.52604675 380.92593384]
[141.58583069 389.12481689]
[142.25561523 404.10986328]
[142.92539978 419.09487915]
[143.59518433 434.07992554]
[158.59123230 434.71871948]
[173.47453308 436.66210938]
[188.13182068 439.89523315]
[202.45153809 444.39358521]
[216.32470703 450.12283325]
[229.64575195 457.03942871]
[242.31326294 465.09072876]
[254.23085022 474.21545410]
[265.30780029 484.34414673]
[275.45983887 495.39971924]
[284.60968018 507.29803467]
[292.68768311 519.94854736]
[299.63235474 533.25494385]
[305.39086914 547.11602783]
[309.91937256 561.42620850]
[313.18344116 576.07666016]
[315.15820312 590.95581055]
[315.82861328 605.95050049]
[315.18960571 620.94653320]
[313.24603271 635.82977295]
[310.01269531 650.48699951]
[305.51416016 664.80670166]
[299.78469849 678.67974854]
[292.86791992 692.00073242]
[284.81643677 704.66815186]
[275.69155884 716.58557129]
[265.56271362 727.66241455]
[254.50700378 737.81427002]
[242.60855103 746.96392822]
[229.95793152 755.04174805]
[216.65141296 761.98626709]
[202.79028320 767.74456787]
[188.48001099 772.27288818]
[173.82952881 775.53674316]
[158.95033264 777.51129150]
[143.95565796 778.18151855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 174]
[35 173]
[36 172]
[37 171]
[40 167]
[41 166]
[42 165]
[43 156]
[44 155]
[45 154]
[46 153]
[47 152]
[48 151]
[49 150]
[50 149]
[57 148]
[58 147]
[59 146]
[69 135]
[70 134]
[71 133]
[73 132]
[74 131]
[75 130]
[76 129]
[77 123]
[78 122]
[84 117]
[85 116]
[86 115]
[87 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
