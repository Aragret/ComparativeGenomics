%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[96.45915985 713.08276367]
[106.34355164 701.59039307]
[119.56398010 694.17443848]
[117.11824799 679.37518311]
[107.40933228 668.07977295]
[112.79299164 653.20275879]
[110.34726715 638.40344238]
[107.90153503 623.60418701]
[105.45581055 608.80493164]
[103.01007843 594.00567627]
[100.56435394 579.20635986]
[86.22187805 575.11260986]
[75.03311157 565.15667725]
[69.25289917 551.27319336]
[70.07715607 536.19537354]
[77.39587402 522.91674805]
[89.80434418 514.09680176]
[87.35861206 499.29751587]
[84.91288757 484.49822998]
[82.46716309 469.69897461]
[80.02143097 454.89968872]
[74.61077118 468.88986206]
[64.31391144 479.79742432]
[50.65833664 486.00430298]
[35.66976547 486.58972168]
[21.57166290 481.46688843]
[10.45540333 471.39569092]
[3.97001481 457.87017822]
[3.07756639 442.89672852]
[7.91044760 428.69662476]
[17.75172997 417.37631226]
[31.14151573 410.61514282]
[46.09351349 409.41604614]
[60.38967896 413.95693970]
[71.90926361 423.56417847]
[78.94284821 436.81079102]
[79.61263275 421.82574463]
[80.28241730 406.84069824]
[80.95220184 391.85565186]
[81.62198639 376.87063599]
[82.29177856 361.88558960]
[72.08226776 351.10125732]
[72.54805756 335.89477539]
[83.92886353 325.25921631]
[84.59864807 310.27416992]
[85.26843262 295.28915405]
[85.93821716 280.30410767]
[86.60800171 265.31906128]
[87.27778625 250.33403015]
[87.94757080 235.34898376]
[88.61735535 220.36395264]
[76.74829102 208.44908142]
[77.17742920 191.29884338]
[90.12747955 179.53808594]
[90.57408142 164.54472351]
[91.02069092 149.55137634]
[91.46729279 134.55802917]
[91.91390228 119.56468201]
[80.32521057 107.81436157]
[80.69376373 91.31491089]
[92.79557800 80.09377289]
[85.26459503 66.17993164]
[93.19052887 53.56926727]
[93.41385651 38.57093048]
[81.00186920 26.24364662]
[81.33895874 9.09135151]
[93.72821045 -2.28164673]
[85.59914398 10.32463169]
[72.85085297 18.22912788]
[57.94483566 19.90560913]
[43.75920486 15.03037262]
[33.03298950 4.54474878]
[27.83725357 -9.52665138]
[29.17520905 -24.46686172]
[36.78851700 -37.39116287]
[49.20717239 -45.80406952]
[64.03332520 -48.08118820]
[78.40427399 -43.78283691]
[89.54521942 -33.73896408]
[95.30522919 -19.88762665]
[97.97102356 -34.64884567]
[100.63681793 -49.41006088]
[103.30261993 -64.17127991]
[105.96841431 -78.93249512]
[108.63420868 -93.69371033]
[111.19004059 -108.47436523]
[113.63576508 -123.27363586]
[116.08149719 -138.07290649]
[102.55327606 -131.59313965]
[88.98662567 -137.99205017]
[85.38237762 -152.55259705]
[94.39743805 -164.54127502]
[109.38625336 -165.12049866]
[119.29916382 -153.86485291]
[122.83883667 -168.44123840]
[126.37850952 -183.01760864]
[128.16098022 -197.91133118]
[128.16098022 -212.91133118]
[128.16098022 -227.91133118]
[114.38710785 -234.48728943]
[104.83718109 -246.39366150]
[101.40734100 -261.26641846]
[104.77858734 -276.15255737]
[114.28154755 -288.09646606]
[128.02941895 -294.72659302]
[143.29254150 -294.72659302]
[157.04040527 -288.09646606]
[166.54336548 -276.15255737]
[169.91461182 -261.26641846]
[166.48477173 -246.39366150]
[156.93484497 -234.48728943]
[143.16098022 -227.91133118]
[143.16098022 -212.91133118]
[143.16098022 -197.91133118]
[150.41897583 -211.03845215]
[161.68344116 -220.94360352]
[175.63101196 -226.46313477]
[190.62315369 -226.94862366]
[204.89859009 -222.34301758]
[216.78028870 -213.18739319]
[224.87237549 -200.55734253]
[228.22419739 -185.93663025]
[226.44200134 -171.04287720]
[219.73515320 -157.62579346]
[208.89155579 -147.26161194]
[195.18510437 -141.16789246]
[180.22604370 -140.06051636]
[165.77172852 -144.06958008]
[153.52023315 -152.72412109]
[144.91085815 -165.00740051]
[140.95487976 -179.47793579]
[137.41520691 -164.90156555]
[133.87553406 -150.32518005]
[130.88076782 -135.62718201]
[128.43504333 -120.82791138]
[125.98931122 -106.02864075]
[128.00013733 -98.91679382]
[123.39542389 -91.02791595]
[120.72962952 -76.26670074]
[118.06383514 -61.50548172]
[115.39804077 -46.74426651]
[112.73224640 -31.98304939]
[110.06644440 -17.22183228]
[108.72821045 -2.28164673]
[119.02462006 5.46519566]
[123.03903961 17.91374969]
[119.09262848 30.58798790]
[108.41219330 38.79425812]
[108.18886566 53.79259491]
[115.73581696 66.63365173]
[107.79391479 80.31710052]
[117.64116669 88.29740143]
[121.16455078 100.47275543]
[117.10102081 112.47864532]
[106.90724945 120.01128387]
[106.46064758 135.00463867]
[106.01403809 149.99798584]
[105.56743622 164.99133301]
[105.12082672 179.98468018]
[115.42417908 188.65968323]
[118.80072021 201.49748230]
[114.23444366 213.75437927]
[103.60239410 221.03373718]
[102.93260956 236.01876831]
[102.26282501 251.00381470]
[101.59304047 265.98886108]
[100.92325592 280.97387695]
[100.25347137 295.95892334]
[99.58368683 310.94396973]
[98.91390228 325.92901611]
[109.30046844 337.53747559]
[108.40774536 352.72491455]
[97.27681732 362.55535889]
[96.60702515 377.54040527]
[95.93724060 392.52545166]
[95.26745605 407.51049805]
[94.59767151 422.49554443]
[93.92788696 437.48056030]
[94.82070160 452.45397949]
[97.26643372 467.25323486]
[99.71215820 482.05252075]
[102.15788269 496.85177612]
[104.60361481 511.65106201]
[119.18999481 516.00982666]
[130.39176941 526.22778320]
[136.02323914 540.23876953]
[135.01712036 555.24371338]
[127.62641907 568.27008057]
[115.36362457 576.76068115]
[117.80935669 591.55993652]
[120.25508118 606.35919189]
[122.70080566 621.15844727]
[125.14653778 635.95776367]
[127.59226227 650.75701904]
[137.47612000 663.11096191]
[131.91752625 676.92944336]
[134.36325073 691.72875977]
[149.26670837 694.49688721]
[162.32302856 702.19812012]
[171.95558167 713.90234375]
[177.00122070 728.19635010]
[176.85063171 743.35394287]
[171.52201843 757.54486084]
[161.65882874 769.05541992]
[148.45208740 776.49566650]
[133.49658203 778.96722412]
[118.59825134 776.17156982]
[105.55615234 768.44635010]
[95.94516754 756.72436523]
[90.92588806 742.42114258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 197]
[4 196]
[6 194]
[7 193]
[8 192]
[9 191]
[10 190]
[11 189]
[17 183]
[18 182]
[19 181]
[20 180]
[21 179]
[36 178]
[37 177]
[38 176]
[39 175]
[40 174]
[41 173]
[44 170]
[45 169]
[46 168]
[47 167]
[48 166]
[49 165]
[50 164]
[51 163]
[54 159]
[55 158]
[56 157]
[57 156]
[58 155]
[61 151]
[63 149]
[64 148]
[67 144]
[80 143]
[81 142]
[82 141]
[83 140]
[84 139]
[85 138]
[86 136]
[87 135]
[88 134]
[94 133]
[95 132]
[96 131]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
