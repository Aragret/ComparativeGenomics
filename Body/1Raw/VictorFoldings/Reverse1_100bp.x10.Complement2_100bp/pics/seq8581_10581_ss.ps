%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUAAUCAGUAACAACCCACCACUAAUCAGCCAACAACUACUCUAUAAACCUCCACCCCUAGUUAUCUCCCCCUUUAUCUUACUAGUCAUGACGCCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[124.34558868 624.86767578]
[116.70907593 611.94647217]
[110.19586945 598.42419434]
[104.85291290 584.39825439]
[100.71868896 569.96972656]
[97.82299805 555.24261475]
[96.18669891 540.32293701]
[95.82157898 525.31823730]
[96.73027039 510.33666992]
[98.90623474 495.48611450]
[102.33377838 480.87356567]
[106.98821259 466.60437012]
[112.83599854 452.78131104]
[119.83500671 439.50396729]
[127.93480682 426.86804199]
[137.07704163 414.96453857]
[147.19583130 403.87921143]
[158.21827698 393.69201660]
[170.06495667 384.47625732]
[182.65052795 376.29840088]
[175.57342529 363.07284546]
[168.49630737 349.84732056]
[165.11657715 364.46160889]
[153.86822510 374.38504028]
[138.94659424 375.91641235]
[125.91710663 368.48458862]
[119.63941956 354.86141968]
[122.45496368 340.12802124]
[133.31361389 329.77960205]
[148.16535950 327.67587280]
[161.47167969 334.60226440]
[156.01632690 320.62945557]
[150.56097412 306.65667725]
[138.72473145 297.61495972]
[140.91319275 281.94583130]
[135.45782471 267.97302246]
[130.00247192 254.00022888]
[124.64158630 248.91273499]
[124.57161713 239.77857971]
[119.32489777 225.72610474]
[114.07817841 211.67362976]
[108.83145905 197.62115479]
[103.58473969 183.56869507]
[101.53269958 198.42765808]
[94.82598877 211.84481812]
[84.17238617 222.40420532]
[70.69618988 228.99147034]
[55.81957245 230.91145325]
[41.11250305 227.96151733]
[28.12705421 220.45298767]
[18.23360825 209.17823792]
[12.47624397 195.32714844]
[11.46255302 180.36145020]
[15.29951000 165.86048889]
[23.58219147 153.35459900]
[35.43650818 144.16355896]
[49.61144638 139.25732422]
[64.61108398 139.15365601]
[78.85248566 143.86349487]
[90.83271027 152.88980103]
[99.28754425 165.28016663]
[97.72702789 150.36157227]
[96.16650391 135.44296265]
[82.96793365 131.31785583]
[72.33200073 122.48068237]
[65.85897827 110.26108551]
[64.52278900 96.49760437]
[68.52447510 83.26110077]
[77.26195526 72.54311371]
[89.42057800 65.95627594]
[88.08234406 51.01609039]
[86.74411011 36.07590485]
[85.40587616 21.13572121]
[75.85536957 32.70238495]
[61.12768173 35.54759598]
[47.95611572 28.37055588]
[42.36253738 14.45251369]
[46.90425110 0.15661177]
[59.50485229 -7.98125744]
[74.40351105 -6.24056911]
[84.78951263 4.58454943]
[85.01284027 -10.41378784]
[85.23616791 -25.41212463]
[85.01284027 -40.41046143]
[84.34305573 -55.39550018]
[83.67327118 -70.38053894]
[83.00348663 -85.36557770]
[82.33370209 -100.35061646]
[70.43924713 -91.21157837]
[55.84207535 -94.66448212]
[49.30267715 -108.16397095]
[55.64165115 -121.75872803]
[70.18614197 -125.42720032]
[82.21372223 -116.46659088]
[82.66033173 -131.45994568]
[75.33734131 -145.48435974]
[83.45014954 -157.97563171]
[83.89675903 -172.96897888]
[84.34336090 -187.96232605]
[70.46464539 -194.16310120]
[60.01893997 -205.20645142]
[54.59915161 -219.40837097]
[55.03175354 -234.60314941]
[61.25077438 -248.47369385]
[72.30786133 -258.90487671]
[86.51689148 -264.30596924]
[101.71109009 -263.85339355]
[115.57344818 -257.61611938]
[125.99005890 -246.54531860]
[131.37246704 -232.32919312]
[130.89988708 -217.13560486]
[124.64440155 -203.28146362]
[113.55990601 -192.87942505]
[99.33671570 -187.51571655]
[98.89010620 -172.52236938]
[98.44350433 -157.52902222]
[105.79843140 -144.57702637]
[97.65367889 -131.01333618]
[97.20707703 -116.01998901]
[97.31874084 -101.02040100]
[97.98852539 -86.03536224]
[98.65830994 -71.05032349]
[99.32809448 -56.06528854]
[99.99787903 -41.08024979]
[101.97319794 -39.09120941]
[103.27964783 -36.19987869]
[103.56961823 -32.65709305]
[102.59262085 -28.83478928]
[100.23450470 -25.18879700]
[100.01117706 -10.19046021]
[99.78784943 4.80787706]
[100.34606171 19.79748726]
[101.68429565 34.73767090]
[103.02252960 49.67785645]
[104.36076355 64.61804199]
[119.33042908 70.04614258]
[130.44351196 81.45027924]
[135.48284912 96.55524445]
[133.44306946 112.34746552]
[124.73112488 125.67626953]
[111.08510590 133.88243103]
[112.64562988 148.80104065]
[114.20615387 163.71965027]
[117.63721466 178.32197571]
[122.88393402 192.37443542]
[128.13064575 206.42691040]
[133.37736511 220.47938538]
[138.62408447 234.53186035]
[143.97526550 248.54487610]
[149.43063354 262.51766968]
[154.88598633 276.49047852]
[167.11242676 286.53161621]
[164.53376770 301.20132446]
[169.98912048 315.17410278]
[175.44447327 329.14691162]
[181.72184753 342.77023315]
[188.79895020 355.99575806]
[195.87605286 369.22128296]
[209.66235352 363.28732300]
[223.90222168 358.54391479]
[238.49305725 355.02520752]
[253.32974243 352.75659180]
[268.30535889 351.75439453]
[283.31204224 352.02584839]
[298.24163818 353.56900024]
[312.98657227 356.37271118]
[327.44061279 360.41677856]
[341.49960327 365.67208862]
[355.06228638 372.10073853]
[368.03091431 379.65646362]
[380.31201172 388.28479004]
[391.81716919 397.92352295]
[402.46343994 408.50326538]
[412.17410278 419.94775391]
[420.87924194 432.17456055]
[428.51608276 445.09558105]
[435.02963257 458.61767578]
[440.37295532 472.64346313]
[444.50753784 487.07186890]
[447.40362549 501.79895020]
[449.04031372 516.71856689]
[449.40582275 531.72326660]
[448.49749756 546.70489502]
[446.32192993 561.55548096]
[442.89477539 576.16809082]
[438.24069214 590.43743896]
[432.39328003 604.26062012]
[425.39459229 617.53814697]
[417.29513550 630.17431641]
[408.15319824 642.07806396]
[398.03469849 653.16357422]
[387.01251221 663.35113525]
[375.16607666 672.56713867]
[362.58071899 680.74536133]
[349.34713745 687.82678223]
[335.56069946 693.76037598]
[321.32070923 698.50341797]
[306.72976685 702.02172852]
[291.89303589 704.28997803]
[276.91735840 705.29174805]
[261.91070557 705.01995850]
[246.98115540 703.47637939]
[232.23629761 700.67230225]
[217.78236389 696.62786865]
[203.72349548 691.37219238]
[190.16098022 684.94317627]
[177.19256592 677.38714600]
[164.91166687 668.75848389]
[153.40676880 659.11944580]
[142.76078796 648.53942871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 158]
[21 157]
[22 156]
[31 155]
[32 154]
[33 153]
[35 151]
[36 150]
[37 149]
[39 148]
[40 147]
[41 146]
[42 145]
[43 144]
[61 143]
[62 142]
[63 141]
[70 135]
[71 134]
[72 133]
[73 132]
[81 131]
[82 130]
[83 129]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[94 119]
[95 118]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
