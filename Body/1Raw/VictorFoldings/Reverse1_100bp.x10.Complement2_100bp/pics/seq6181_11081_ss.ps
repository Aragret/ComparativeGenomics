%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[38.56028366 626.65447998]
[26.80844879 617.08001709]
[19.04265594 604.06207275]
[16.20066452 589.17248535]
[18.62565804 574.20935059]
[26.02480698 560.97955322]
[37.50462723 551.08056641]
[51.67887497 545.70782471]
[51.45554733 530.70947266]
[51.23221970 515.71112061]
[50.89724350 500.71487427]
[50.45063782 485.72152710]
[50.00403214 470.72817993]
[39.02069855 460.73309326]
[38.35419083 445.53405762]
[48.91244125 434.08148193]
[48.46583557 419.08813477]
[40.35302734 406.59689331]
[47.67601395 392.57244873]
[47.22940826 377.57910156]
[46.78280258 362.58575439]
[39.31446838 375.59436035]
[27.24895668 384.50634766]
[12.61951447 387.81988525]
[-2.10853791 384.97656250]
[-14.45326519 376.45553589]
[-22.33436584 363.69277954]
[-24.42373276 348.83898926]
[-20.36927414 334.39733887]
[-10.85423565 322.80148315]
[2.51793170 316.00552368]
[17.49378204 315.15469360]
[31.54962158 320.39236450]
[42.31679535 330.83593750]
[47.98114014 344.72708130]
[50.42686844 329.92782593]
[52.87259674 315.12854004]
[55.31832504 300.32928467]
[46.46266556 288.40817261]
[48.73215866 273.36474609]
[61.29616165 264.15695190]
[63.74188995 249.35768127]
[66.18761444 234.55841064]
[68.41273499 219.72436523]
[70.41674805 204.85884094]
[72.42076111 189.99331665]
[66.45320129 176.34642029]
[75.96485138 163.70367432]
[65.16138458 174.10969543]
[50.46806335 177.12734985]
[36.43777084 171.82160950]
[27.41794777 159.83650208]
[26.20348358 144.88574219]
[33.17069626 131.60200500]
[46.16071320 124.10137177]
[61.14844131 124.70801544]
[73.48976898 133.23394775]
[79.36062622 147.03759766]
[83.33272552 132.57307434]
[87.30482483 118.10854340]
[91.27691650 103.64402008]
[89.78188324 98.61621094]
[91.21026611 93.10866547]
[95.58860779 88.81134033]
[99.98960114 74.47148895]
[104.39060211 60.13164139]
[108.79160309 45.79179382]
[105.44378662 30.32884789]
[116.57474518 20.43182945]
[120.97574615 6.09198189]
[117.62793732 -9.37096500]
[128.75889587 -19.26798439]
[132.40698242 -33.81760406]
[135.29225159 -48.53749466]
[138.17753601 -63.25738907]
[141.06280518 -77.97727966]
[136.12446594 -93.00802612]
[146.16539001 -104.00935364]
[148.39051819 -118.84339905]
[149.95103455 -133.76199341]
[151.51155090 -148.68060303]
[153.07208252 -163.59921265]
[154.52149963 -178.52902222]
[155.85974121 -193.46920776]
[157.08671570 -208.41893005]
[158.20236206 -223.37739563]
[159.31800842 -238.33584595]
[151.50801086 -248.60067749]
[152.74519348 -261.03665161]
[161.82356262 -269.03097534]
[163.16180420 -283.97116089]
[164.50003052 -298.91134644]
[165.83827209 -313.85153198]
[167.17651367 -328.79171753]
[152.78555298 -333.21826172]
[139.62959290 -340.54046631]
[128.28376770 -350.43820190]
[119.24403381 -362.47885132]
[112.90559387 -376.13601685]
[109.54553223 -390.81265259]
[109.31073761 -405.86715698]
[112.21147156 -420.64144897]
[118.12092590 -434.48962402]
[126.78076172 -446.80633545]
[137.81240845 -457.05310059]
[150.73362732 -464.78201294]
[164.97953796 -469.65515137]
[179.92736816 -471.45956421]
[194.92369080 -470.11630249]
[209.31289673 -465.68411255]
[222.46597290 -458.35671997]
[233.80790710 -448.45449829]
[242.84289551 -436.41030884]
[249.17596436 -422.75067139]
[252.53025818 -408.07269287]
[252.75912476 -393.01809692]
[249.85258484 -378.24496460]
[243.93768311 -364.39910889]
[235.27299500 -352.08581543]
[224.23731995 -341.84338379]
[211.31306458 -334.11956787]
[197.06523132 -329.25201416]
[182.11668396 -327.45349121]
[180.77845764 -312.51330566]
[179.44021606 -297.57312012]
[178.10198975 -282.63293457]
[176.76374817 -267.69274902]
[184.99450684 -252.19366455]
[174.27645874 -237.22019958]
[173.16081238 -222.26174927]
[172.04516602 -207.30328369]
[174.68246460 -200.39920044]
[170.79992676 -192.13096619]
[169.46168518 -177.19078064]
[171.99591064 -170.24819946]
[167.99069214 -162.03868103]
[166.43016052 -147.12008667]
[164.86964417 -132.20147705]
[163.30911255 -117.28287506]
[175.61325073 -125.86241150]
[190.40380859 -123.36458588]
[199.20811462 -111.22027588]
[196.98263550 -96.38628387]
[185.00224304 -87.36019897]
[170.12985229 -89.31256866]
[160.88528442 -101.12407684]
[166.02998352 -87.14619446]
[155.78269958 -75.09200287]
[152.89741516 -60.37211609]
[150.01214600 -45.65222549]
[147.12687683 -30.93233299]
[159.52642822 -39.37337494]
[174.46290588 -37.99449158]
[185.10757446 -27.42609215]
[186.59382629 -12.49990463]
[178.24215698 -0.03998172]
[163.87084961 4.25716782]
[150.05026245 -1.57305467]
[143.09873962 -14.86698627]
[146.76133728 -0.42972127]
[135.31559753 10.49298000]
[130.91459656 24.83282661]
[134.57719421 39.27009201]
[123.13144684 50.19279480]
[118.73044586 64.53263855]
[114.32945251 78.87248993]
[109.92845154 93.21233368]
[105.74143982 107.61611938]
[101.76934814 122.08064270]
[97.79724884 136.54516602]
[93.82514954 151.00968933]
[90.83037567 165.70768738]
[96.65460205 180.41786194]
[87.28628540 191.99732971]
[85.28227234 206.86285400]
[83.27825928 221.72837830]
[85.43201447 227.97921753]
[84.27878571 233.54402161]
[80.98688507 237.00413513]
[78.54116058 251.80340576]
[76.09542847 266.60269165]
[85.02895355 279.36315918]
[82.33782196 294.33688354]
[70.11759186 302.77499390]
[67.67186737 317.57427979]
[65.22614288 332.37353516]
[62.78041077 347.17282104]
[61.77615356 362.13916016]
[62.22275925 377.13250732]
[62.66936493 392.12585449]
[70.81411743 405.68954468]
[63.45918655 418.64154053]
[63.90579224 433.63488770]
[75.12699127 444.43872070]
[75.36632538 459.65045166]
[64.99738312 470.28158569]
[65.44399261 485.27493286]
[65.89059448 500.26828003]
[69.27412415 508.75292969]
[66.23056030 515.48779297]
[66.45388794 530.48614502]
[66.67721558 545.48449707]
[81.00514984 550.43286133]
[92.77460480 559.98559570]
[100.56437683 572.98925781]
[103.43379974 587.87359619]
[101.03639221 602.84112549]
[93.66163635 616.08459473]
[82.20007324 626.00469971]
[68.03575134 631.40356445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 202]
[9 201]
[10 200]
[11 198]
[12 197]
[13 196]
[16 193]
[17 192]
[19 190]
[20 189]
[21 188]
[35 187]
[36 186]
[37 185]
[38 184]
[41 181]
[42 180]
[43 179]
[44 176]
[45 175]
[46 174]
[48 172]
[58 171]
[59 170]
[60 169]
[61 168]
[64 167]
[65 166]
[66 165]
[67 164]
[69 162]
[70 161]
[72 159]
[73 151]
[74 150]
[75 149]
[76 148]
[78 146]
[79 139]
[80 138]
[81 137]
[82 136]
[83 134]
[84 133]
[85 131]
[86 130]
[87 129]
[90 127]
[91 126]
[92 125]
[93 124]
[94 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
