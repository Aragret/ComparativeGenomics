%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[172.12431335 479.47091675]
[169.23904419 464.75103760]
[166.35375977 450.03112793]
[163.46849060 435.31124878]
[151.00245667 427.24072266]
[147.86668396 412.35375977]
[156.41632080 399.33294678]
[153.53105164 384.61306763]
[150.20878601 369.98559570]
[146.45248413 355.46353149]
[142.69618225 340.94146729]
[138.93988037 326.41943359]
[129.19415283 337.82208252]
[114.19840240 337.46466064]
[105.00696564 325.61065674]
[108.39541626 310.99838257]
[121.86591339 304.39947510]
[135.48745728 310.67712402]
[132.82165527 295.91592407]
[130.15586853 281.15469360]
[127.93251801 279.44738770]
[126.25149536 276.75653076]
[125.49080658 273.28424072]
[125.94837952 269.36566162]
[127.79824829 265.43731689]
[126.01578522 250.54359436]
[124.23331451 235.64988708]
[122.45085144 220.75616455]
[119.67523956 206.01519775]
[115.91893768 191.49314880]
[112.16263580 176.97108459]
[108.40633392 162.44902039]
[104.65003967 147.92697144]
[100.89373779 133.40490723]
[97.13743591 118.88285065]
[84.70613098 111.43913269]
[81.07765961 97.41128540]
[88.34050751 84.87345123]
[84.58420563 70.35139465]
[80.82790375 55.82933426]
[76.85581207 41.36481094]
[72.66880035 26.96102715]
[68.48178864 12.55724525]
[64.29477692 -1.84653676]
[53.95892334 -4.49114656]
[45.71617126 -11.13675880]
[41.01175308 -20.53207588]
[40.63460159 -30.95180321]
[44.58579636 -40.51336670]
[52.09042358 -47.51704788]
[48.55075073 -62.09342575]
[33.50958252 -63.82220459]
[19.99279976 -70.58005524]
[9.62315369 -81.53408051]
[3.63817954 -95.34893799]
[2.74251366 -110.34957886]
[7.02499104 -124.72438049]
[15.95024681 -136.74389648]
[28.42556190 -144.96896362]
[24.88588905 -159.54534912]
[21.34621811 -174.12171936]
[17.80654526 -188.69808960]
[14.26687241 -203.27447510]
[10.72720051 -217.85084534]
[7.18752766 -232.42721558]
[3.64785528 -247.00360107]
[0.10818280 -261.57998657]
[-3.43148971 -276.15634155]
[-7.18779039 -290.67840576]
[-11.15988636 -305.14294434]
[-27.97073936 -313.87847900]
[-32.97223663 -331.81997681]
[-23.43749237 -347.44702148]
[-27.83849144 -361.78686523]
[-32.23949051 -376.12670898]
[-36.64048767 -390.46655273]
[-41.04148483 -404.80639648]
[-45.44248199 -419.14624023]
[-60.36699677 -417.29421997]
[-75.38636780 -418.06210327]
[-90.04416656 -421.42663574]
[-103.89497375 -427.28549194]
[-116.51786804 -435.46066284]
[-127.52925873 -445.70373535]
[-136.59452820 -457.70339966]
[-143.43817139 -471.09503174]
[-147.85223389 -485.47164917]
[-149.70259094 -500.39636230]
[-148.93298340 -515.41564941]
[-145.56681824 -530.07305908]
[-139.70637512 -543.92321777]
[-131.52975464 -556.54516602]
[-121.28543854 -567.55541992]
[-109.28474426 -576.61932373]
[-95.89234161 -583.46142578]
[-81.51522064 -587.87390137]
[-66.59029388 -589.72253418]
[-51.57109833 -588.95123291]
[-36.91405487 -585.58337402]
[-23.06458092 -579.72137451]
[-10.44353962 -571.54333496]
[0.56552678 -561.29779053]
[9.62806606 -549.29608154]
[16.46867943 -535.90289307]
[20.87948418 -521.52526855]
[22.72644615 -506.60012817]
[21.95343399 -491.58102417]
[18.58394051 -476.92434692]
[12.72036171 -463.07553101]
[4.54088354 -450.45541382]
[-5.70592833 -439.44750977]
[-17.70868492 -430.38635254]
[-31.10263634 -423.54724121]
[-26.70163727 -409.20739746]
[-22.30064011 -394.86755371]
[-17.89964104 -380.52770996]
[-13.49864388 -366.18786621]
[-9.09764576 -351.84802246]
[1.90066957 -348.81433105]
[10.15422535 -340.76483154]
[13.53179359 -329.61645508]
[11.08358002 -318.10528564]
[3.30463743 -309.11502075]
[7.27673340 -294.65051270]
[10.91074657 -291.55163574]
[12.63664818 -286.13699341]
[11.14488602 -279.69601440]
[14.68455791 -265.11965942]
[18.22422981 -250.54327393]
[21.76390266 -235.96688843]
[25.30357552 -221.39051819]
[28.84324837 -206.81414795]
[32.38291931 -192.23776245]
[35.92259216 -177.66139221]
[39.46226501 -163.08502197]
[43.00193787 -148.50863647]
[57.86010361 -146.92112732]
[71.30382538 -140.33360291]
[81.70203400 -129.52380371]
[87.78582764 -115.78303528]
[88.80328369 -100.76188660]
[84.61233521 -86.27201843]
[75.70027161 -74.06763458]
[63.12712479 -65.63309479]
[66.66679382 -51.05672073]
[84.00261688 -42.16944504]
[89.29490662 -23.10389519]
[78.69855499 -6.03354788]
[82.88556671 8.37023449]
[87.07257843 22.77401543]
[91.25959015 37.17779922]
[94.93933868 40.22222137]
[96.74566650 45.61056137]
[95.34996033 52.07303238]
[99.10626221 66.59509277]
[102.86256409 81.11714935]
[115.29386902 88.56086731]
[118.92234039 102.58871460]
[111.65949249 115.12654877]
[115.41579437 129.64860535]
[119.17209625 144.17066956]
[122.92839813 158.69271851]
[126.68470001 173.21478271]
[130.44099426 187.73684692]
[134.19729614 202.25891113]
[140.27285767 188.54440308]
[152.73966980 180.20303345]
[167.73477173 179.81945801]
[180.61175537 187.51252747]
[187.38053894 200.89846802]
[185.94375610 215.82949829]
[176.74661255 227.67907715]
[162.63893127 232.77548218]
[147.99212646 229.53953552]
[137.34457397 218.97369385]
[139.12702942 233.86741638]
[140.90950012 248.76113892]
[142.69197083 263.65484619]
[144.91708374 278.48889160]
[147.58287048 293.25012207]
[150.24867249 308.01132202]
[153.46194458 322.66311646]
[157.21824646 337.18518066]
[160.97454834 351.70724487]
[164.73085022 366.22930908]
[167.88273621 369.21585083]
[169.73411560 372.69967651]
[170.28836060 376.21081543]
[169.70109558 379.32879639]
[168.25094604 381.72778320]
[171.13621521 396.44766235]
[183.96879578 405.27731323]
[186.68518066 420.24649048]
[178.18838501 432.42596436]
[181.07365417 447.14587402]
[183.95892334 461.86575317]
[186.84420776 476.58566284]
[201.75160217 479.55850220]
[214.38380432 488.01403809]
[222.81448364 500.66284180]
[225.75802612 515.57604980]
[222.76556396 530.47955322]
[214.29342651 543.10058594]
[201.63354492 551.51464844]
[186.71647644 554.43853760]
[171.81694031 551.42645264]
[159.20703125 542.93774414]
[150.80966187 530.26678467]
[147.90536499 515.34588623]
[150.93702698 500.45034790]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[4 194]
[7 191]
[8 190]
[9 185]
[10 184]
[11 183]
[12 182]
[18 181]
[19 180]
[20 179]
[25 178]
[26 177]
[27 176]
[28 175]
[29 165]
[30 164]
[31 163]
[32 162]
[33 161]
[34 160]
[35 159]
[38 156]
[39 155]
[40 154]
[41 151]
[42 150]
[43 149]
[44 148]
[50 145]
[51 144]
[59 136]
[60 135]
[61 134]
[62 133]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[68 127]
[69 124]
[70 123]
[73 118]
[74 117]
[75 116]
[76 115]
[77 114]
[78 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
