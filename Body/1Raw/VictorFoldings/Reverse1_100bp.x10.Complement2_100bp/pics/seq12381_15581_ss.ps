%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[106.83855438 667.36810303]
[96.23214722 656.73870850]
[86.88256836 644.98858643]
[78.90740204 632.26550293]
[72.40695190 618.72949219]
[67.46295166 604.55072021]
[64.13758850 589.90759277]
[62.47267914 574.98413086]
[62.48916245 559.96820068]
[64.18682861 545.04846191]
[67.54433441 530.41265869]
[72.51944733 516.24475098]
[79.04959869 502.72305298]
[87.05268097 490.01751709]
[96.42802429 478.28793335]
[107.05774689 467.68185425]
[118.80815125 458.33264160]
[131.53146362 450.35784912]
[145.06768799 443.85778809]
[159.24658203 438.91421509]
[155.92433167 424.28674316]
[152.60206604 409.65930176]
[149.27980042 395.03182983]
[145.95755005 380.40438843]
[135.59352112 369.70687866]
[140.08213806 354.53576660]
[136.75988770 339.90829468]
[133.26786804 336.65026855]
[131.78546143 331.16397095]
[133.56333923 324.79602051]
[130.67807007 310.07614136]
[127.79280090 295.35623169]
[124.90752411 280.63635254]
[122.02225494 265.91644287]
[119.13697815 251.19656372]
[106.67094421 243.12603760]
[103.53517151 228.23907471]
[112.08480835 215.21826172]
[109.19953918 200.49836731]
[104.82813263 194.53912354]
[106.38259888 185.53793335]
[103.71680450 170.77671814]
[101.05101013 156.01550293]
[97.70795441 152.60476685]
[96.47200775 147.05775452]
[98.53245544 140.77554321]
[96.30733490 125.94150543]
[94.08222198 111.10746002]
[91.52639008 96.32680511]
[88.64111328 81.60691833]
[73.59059906 80.85359955]
[59.16649628 76.52259827]
[46.20601654 68.86981201]
[35.46032333 58.34383011]
[27.55101013 45.55961227]
[22.93414116 31.26257515]
[21.87395668 16.28511429]
[24.42775345 1.49815738]
[30.44280243 -12.23949242]
[39.56548309 -24.13102722]
[51.26205826 -33.48785019]
[64.84991455 -39.76945496]
[61.96464157 -54.48934937]
[59.07936859 -69.20923615]
[56.19409561 -83.92913055]
[53.30882263 -98.64902496]
[50.42354965 -113.36891174]
[47.53827667 -128.08880615]
[44.65300369 -142.80870056]
[41.76773071 -157.52859497]
[38.88245773 -172.24847412]
[35.45039749 -176.18142700]
[34.01379013 -180.59611511]
[34.42198563 -184.65177917]
[36.21247482 -187.68928528]
[33.98735809 -202.52333069]
[31.76223946 -217.35737610]
[25.23555946 -203.85173035]
[13.23523235 -194.85217285]
[-1.55783808 -192.36921692]
[-15.83884144 -196.95756531]
[-26.41736603 -207.59216309]
[-30.93013954 -221.89723206]
[-28.36900139 -236.67697144]
[-19.30611229 -248.62953186]
[-5.76614809 -255.08471680]
[9.22603130 -254.60040283]
[22.32113266 -247.28477478]
[30.59368706 -234.77217102]
[30.81701469 -249.77050781]
[31.04034233 -264.76882935]
[23.50936317 -278.68267822]
[31.43529701 -291.29333496]
[31.65862465 -306.29168701]
[23.25150490 -316.07345581]
[23.74628639 -328.56100464]
[32.33273697 -337.08154297]
[32.77934265 -352.07489014]
[33.22594833 -367.06823730]
[33.67255402 -382.06158447]
[20.10058403 -389.04473877]
[10.90938759 -401.23016357]
[7.92388630 -416.19845581]
[11.73685265 -430.97763062]
[21.59121895 -442.63327026]
[35.53039551 -448.85116577]
[50.78674698 -448.39672852]
[64.33110809 -441.36019897]
[73.47425079 -429.13867188]
[76.40078735 -414.15872192]
[72.52964783 -399.39468384]
[62.62945938 -387.77792358]
[48.66590500 -381.61499023]
[48.21929932 -366.62164307]
[47.77269363 -351.62829590]
[47.32608795 -336.63491821]
[56.46477127 -321.65322876]
[46.65695953 -306.06835938]
[46.43363190 -291.07000732]
[53.98058701 -278.22894287]
[46.03868103 -264.54550171]
[45.81535339 -249.54718018]
[45.59202576 -234.54884338]
[46.59628296 -219.58248901]
[48.82139969 -204.74844360]
[51.04651642 -189.91439819]
[53.60235214 -175.13375854]
[56.48762131 -160.41386414]
[59.37289429 -145.69396973]
[62.25816727 -130.97407532]
[65.14344025 -116.25418854]
[68.02871704 -101.53429413]
[70.91398621 -86.81440735]
[73.79925537 -72.09451294]
[76.68453217 -57.37462234]
[79.56980133 -42.65472794]
[94.52360535 -41.96762466]
[108.88703918 -37.71887207]
[121.82393646 -30.15127373]
[132.58010864 -19.70098114]
[140.52728271 -6.97233963]
[145.19982910 7.29705477]
[146.32200623 22.27909279]
[143.82424927 37.10321808]
[137.84748840 50.90699768]
[128.73513794 62.88632202]
[117.01342773 72.34221649]
[103.36100769 78.72164154]
[106.24627686 93.44153595]
[109.10961151 96.02488708]
[110.82034302 99.85780334]
[110.84592438 104.39723206]
[108.91626740 108.88234711]
[111.14138031 123.71638489]
[113.36650085 138.55043030]
[115.81222534 153.34970093]
[118.47801971 168.11091614]
[121.14381409 182.87213135]
[123.91942596 197.61309814]
[126.80470276 212.33299255]
[139.63728333 221.16262817]
[142.35366821 236.13179016]
[133.85687256 248.31129456]
[136.74214172 263.03118896]
[139.62741089 277.75106812]
[142.51269531 292.47097778]
[145.39796448 307.19085693]
[148.28323364 321.91073608]
[151.38734436 336.58605957]
[154.70960999 351.21350098]
[165.31126404 362.95724487]
[160.58500671 377.08212280]
[163.90727234 391.70956421]
[167.22952271 406.33703613]
[170.55178833 420.96450806]
[173.87405396 435.59194946]
[188.79730225 433.92572021]
[203.81329346 433.94085693]
[218.73315430 435.63717651]
[233.36927795 438.99337769]
[247.53758240 443.96719360]
[261.05990601 450.49615479]
[273.76614380 458.49807739]
[285.49655151 467.87237549]
[296.10360718 478.50115967]
[305.45388794 490.25070190]
[313.42980957 502.97332764]
[319.93109131 516.50897217]
[324.87591553 530.68743896]
[328.20217896 545.33038330]
[329.86798096 560.25366211]
[329.85238647 575.26965332]
[328.15560913 590.18945312]
[324.79898071 604.82550049]
[319.82470703 618.99365234]
[313.29537964 632.51574707]
[305.29306030 645.22180176]
[295.91839600 656.95190430]
[285.28930664 667.55865479]
[273.53945923 676.90856934]
[260.81661987 684.88409424]
[247.28079224 691.38494873]
[233.10218811 696.32940674]
[218.45913696 699.65521240]
[203.53578186 701.32055664]
[188.51980591 701.30450439]
[173.60003662 699.60729980]
[158.96411133 696.25024414]
[144.79611206 691.27557373]
[131.27418518 684.74578857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 176]
[21 175]
[22 174]
[23 173]
[24 172]
[26 170]
[27 169]
[30 168]
[31 167]
[32 166]
[33 165]
[34 164]
[35 163]
[38 160]
[39 159]
[41 158]
[42 157]
[43 156]
[46 155]
[47 154]
[48 153]
[49 149]
[50 148]
[62 136]
[63 135]
[64 134]
[65 133]
[66 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 127]
[75 126]
[76 125]
[77 124]
[89 123]
[90 122]
[91 121]
[93 119]
[94 118]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
