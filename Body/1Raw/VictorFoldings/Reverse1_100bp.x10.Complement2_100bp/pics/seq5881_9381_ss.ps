%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[97.37522125 635.67047119]
[83.49501038 629.88708496]
[70.79193878 621.84094238]
[59.63150787 611.76361084]
[50.33481979 599.94500732]
[43.16936111 586.72515869]
[38.34129715 572.48443604]
[35.98953629 557.63256836]
[36.18174744 542.59692383]
[38.91240311 527.81005859]
[44.10292816 513.69744873]
[51.60398865 500.66510010]
[61.19976425 489.08798218]
[72.61415863 479.29925537]
[85.51876068 471.58047485]
[99.54228210 466.15380859]
[114.28123474 463.17532349]
[113.83462524 448.18197632]
[113.38802338 433.18862915]
[112.94141388 418.19528198]
[112.49481201 403.20193481]
[112.04820251 388.20858765]
[111.37841797 373.22354126]
[110.48560333 358.25012207]
[109.59278870 343.27673340]
[96.96457672 335.42395020]
[91.31504822 321.47592163]
[95.00504303 306.70306396]
[106.82280731 296.82144165]
[105.92999268 281.84805298]
[104.92573547 266.88168335]
[103.81008148 251.92324829]
[95.14760590 239.80670166]
[101.83706665 225.46926880]
[100.72141266 210.51081848]
[92.05893707 198.39427185]
[98.74839783 184.05685425]
[90.08591461 171.94030762]
[96.77537537 157.60289001]
[95.65972900 142.64442444]
[94.54407501 127.68597412]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[90.49746704 73.42967224]
[89.38182068 58.47121811]
[83.26369476 72.16678619]
[73.07837677 83.17856598]
[59.90074921 90.34445953]
[45.12147141 92.90823364]
[30.30023766 90.59931946]
[17.00116920 83.66139984]
[6.62775135 72.82662964]
[0.27471191 59.23843765]
[-1.38749635 44.33082199]
[1.81654334 29.67701149]
[9.54870033 16.82346344]
[20.99298286 7.12663841]
[34.94164658 1.60986853]
[49.92266083 0.85535091]
[64.35503387 4.94271183]
[76.71569061 13.44060135]
[85.70018005 25.45221901]
[90.36038208 39.71013641]
[93.02617645 24.94892120]
[95.58200836 10.16826630]
[98.02773285 -4.63100433]
[100.47346497 -19.43027496]
[98.78515625 -28.40732574]
[103.06734467 -34.43099594]
[105.73314667 -49.19221497]
[108.39894104 -63.95343018]
[96.67449188 -54.59729385]
[81.69546509 -53.80428696]
[69.04867554 -61.87018204]
[63.45105362 -75.78659821]
[66.99037933 -90.36306000]
[78.34657288 -100.16290283]
[93.28404999 -101.53102875]
[106.23149872 -93.95716095]
[112.35998535 -80.26500702]
[116.76097870 -94.60485840]
[121.16197968 -108.94470215]
[115.81945038 -120.68438721]
[119.78026581 -132.53747559]
[130.40379333 -138.32255554]
[135.01780701 -152.59529114]
[139.63182068 -166.86802673]
[144.24581909 -181.14076233]
[148.85983276 -195.41349792]
[153.04684448 -209.81727600]
[156.80314636 -224.33934021]
[160.55944824 -238.86138916]
[164.31575012 -253.38345337]
[150.50886536 -259.32235718]
[137.77043152 -267.29934692]
[126.39903259 -277.12747192]
[116.66124725 -288.57632446]
[108.78533936 -301.37750244]
[102.95593262 -315.23098755]
[99.30966949 -329.81195068]
[97.93202972 -344.77868652]
[98.85530853 -359.78027344]
[102.05785370 -374.46508789]
[107.46460724 -388.48892212]
[114.94881439 -401.52297974]
[124.33503723 -413.26177979]
[135.40325928 -423.43011475]
[147.89401245 -431.78964233]
[161.51449585 -438.14437866]
[175.94543457 -442.34536743]
[190.84855652 -444.29415894]
[205.87448120 -443.94503784]
[220.67100525 -441.30621338]
[234.89125061 -436.43951416]
[248.20190430 -429.45904541]
[260.29092407 -420.52841187]
[270.87493896 -409.85702515]
[279.70587158 -397.69494629]
[286.57662964 -384.32736206]
[291.32623291 -370.06756592]
[293.84329224 -355.24984741]
[294.06884766 -340.22155762]
[291.99758911 -325.33496094]
[287.67807007 -310.93905640]
[281.21154785 -297.37127686]
[272.74960327 -284.94970703]
[262.49060059 -273.96545410]
[250.67501831 -264.67608643]
[237.57983398 -257.29931641]
[223.51203918 -252.00805664]
[208.80137634 -248.92637634]
[193.79267883 -248.12649536]
[178.83779907 -249.62715149]
[175.08149719 -235.10510254]
[171.32521057 -220.58303833]
[167.56890869 -206.06097412]
[168.87370300 -203.57992554]
[169.27433777 -200.43252563]
[168.51208496 -196.96058655]
[166.45663452 -193.59313965]
[163.13256836 -190.79948425]
[158.51855469 -176.52674866]
[153.90454102 -162.25401306]
[149.29054260 -147.98129272]
[144.67652893 -133.70855713]
[149.27006531 -116.77142334]
[135.50183105 -104.54370880]
[131.10083008 -90.20385742]
[126.69982910 -75.86401367]
[123.16015625 -61.28763580]
[120.49436188 -46.52641678]
[117.82856750 -31.76520157]
[115.27273560 -16.98454666]
[112.82700348 -2.18527675]
[110.38127899 12.61399460]
[112.39211273 19.72583961]
[107.78739166 27.61471558]
[105.12159729 42.37593460]
[104.34027100 57.35557175]
[105.45592499 72.31402588]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[109.50253296 126.57032776]
[110.61817932 141.52877808]
[111.73382568 156.48722839]
[120.47610474 169.67370605]
[113.70684814 182.94120789]
[122.44912720 196.12768555]
[115.67987061 209.39517212]
[116.79551697 224.35362244]
[125.53779602 237.54010010]
[118.76853943 250.80760193]
[119.88418579 265.76605225]
[123.64320374 274.09115601]
[120.90339661 280.95523071]
[121.79621124 295.92861938]
[134.70448303 304.33593750]
[140.12380981 318.56561279]
[136.17176819 333.08615112]
[124.56619263 342.38391113]
[125.45900726 357.35733032]
[126.35182190 372.33071899]
[129.66770935 378.05053711]
[129.60643005 383.73327637]
[127.04155731 387.76196289]
[127.48815918 402.75531006]
[127.93476868 417.74865723]
[128.38137817 432.74203491]
[128.82797241 447.73538208]
[129.27458191 462.72872925]
[144.16468811 464.82464600]
[158.48634338 469.40701294]
[171.82749939 476.34399414]
[183.80429077 485.43597412]
[194.07212830 496.42138672]
[202.33560181 508.98416138]
[208.35691833 522.76281738]
[211.96286011 537.36096191]
[213.04966736 552.35852051]
[211.58607483 567.32403564]
[207.61419678 581.82684326]
[201.24829102 595.44976807]
[192.67155457 607.80072021]
[182.13072205 618.52447510]
[169.92907715 627.31243896]
[156.41770935 633.91174316]
[141.98535156 638.13256836]
[127.04725647 639.85339355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 192]
[18 191]
[19 190]
[20 189]
[21 188]
[22 187]
[23 184]
[24 183]
[25 182]
[29 178]
[30 177]
[31 175]
[32 174]
[34 172]
[35 171]
[37 169]
[39 167]
[40 166]
[41 165]
[42 164]
[44 162]
[45 161]
[46 160]
[64 159]
[65 158]
[66 156]
[67 155]
[68 154]
[70 153]
[71 152]
[72 151]
[81 150]
[82 149]
[83 148]
[86 146]
[87 145]
[88 144]
[89 143]
[90 142]
[91 137]
[92 136]
[93 135]
[94 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
