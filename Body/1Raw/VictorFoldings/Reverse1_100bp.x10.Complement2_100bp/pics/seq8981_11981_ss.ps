%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[217.22206116 512.45452881]
[221.57699585 498.07778931]
[227.77127075 484.39254761]
[235.69888306 471.63293457]
[245.22419739 460.01727295]
[256.18420410 449.74432373]
[268.39135742 440.98989868]
[261.31423950 427.76437378]
[254.23713684 414.53881836]
[247.16003418 401.31329346]
[231.77575684 392.86990356]
[232.52279663 374.47091675]
[225.24955750 361.35220337]
[217.97633362 348.23352051]
[210.70310974 335.11480713]
[203.42987061 321.99612427]
[196.15664673 308.87744141]
[188.88342285 295.75872803]
[181.61018372 282.64004517]
[174.33695984 269.52136230]
[159.99282837 265.67666626]
[152.42985535 252.47607422]
[156.55975342 237.45669556]
[149.28652954 224.33799744]
[142.01330566 211.21929932]
[134.74006653 198.10061646]
[127.46684265 184.98191833]
[120.19361115 171.86322021]
[118.32680511 186.74659729]
[109.34738922 198.76200867]
[95.60256195 204.76866150]
[80.68518829 203.19641113]
[68.49463654 194.45625305]
[62.21748352 180.83283997]
[63.49456024 165.88729858]
[71.99205017 153.52636719]
[85.48872375 146.98115540]
[100.45658112 147.96255493]
[112.98247528 156.21339417]
[107.73575592 142.16091919]
[102.48903656 128.10845947]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[78.21177673 63.08579636]
[72.96505737 49.03332520]
[66.81841278 62.71611404]
[53.36990738 69.35974121]
[38.76802063 65.92682648]
[29.68853569 53.98685074]
[30.28247261 38.99861145]
[40.27828979 27.81453323]
[55.10603333 25.54782104]
[67.98783875 33.23622131]
[64.23153687 18.71416092]
[60.47523880 4.19210100]
[49.77796173 -3.01422191]
[46.94829559 -15.18700981]
[52.97193527 -25.67711639]
[49.43226242 -40.25349045]
[36.32939911 -44.53202057]
[27.12467194 -54.64594650]
[24.14325523 -67.88153076]
[28.05956459 -80.75812531]
[37.74832916 -89.94344330]
[34.42606735 -104.57089996]
[31.10380936 -119.19835663]
[27.78154945 -133.82582092]
[22.82916641 -141.50122070]
[24.52043343 -148.69575500]
[21.41632271 -163.37106323]
[18.31221390 -178.04635620]
[15.20810318 -192.72166443]
[12.10399246 -207.39697266]
[-2.87257433 -206.23187256]
[-17.87308693 -207.03163147]
[-32.64086914 -209.78256226]
[-46.92322159 -214.43760681]
[-60.47575378 -220.91709900]
[-73.06656647 -229.11016846]
[-84.48021698 -238.87663269]
[-94.52140045 -250.04934692]
[-103.01829529 -262.43716431]
[-109.82551575 -275.82806396]
[-114.82656860 -289.99298096]
[-117.93589783 -304.68948364]
[-119.10028076 -319.66610718]
[-118.29980469 -334.66656494]
[-115.54816437 -349.43423462]
[-110.89244080 -363.71636963]
[-104.41230774 -377.26858521]
[-96.21863556 -389.85900879]
[-86.45163727 -401.27218628]
[-75.27844238 -411.31283569]
[-62.89022827 -419.80914307]
[-49.49898148 -426.61572266]
[-35.33384323 -431.61611938]
[-20.63719368 -434.72473145]
[-5.66051531 -435.88842773]
[9.33992195 -435.08721924]
[24.10744095 -432.33486938]
[38.38935089 -427.67846680]
[51.94126892 -421.19769287]
[64.53130341 -413.00341797]
[75.94402313 -403.23587036]
[85.98413849 -392.06219482]
[94.47985840 -379.67358398]
[101.28579712 -366.28201294]
[106.28550720 -352.11663818]
[109.39343262 -337.41986084]
[110.55639648 -322.44311523]
[109.75449371 -307.44271851]
[107.00144196 -292.67532349]
[102.34436035 -278.39364624]
[95.86293030 -264.84204102]
[87.66806793 -252.25238037]
[77.89997864 -240.84013367]
[66.72582245 -230.80053711]
[54.33680344 -222.30541992]
[40.94491196 -215.50010681]
[26.77929497 -210.50108337]
[29.88340569 -195.82577515]
[32.98751450 -181.15046692]
[36.09162521 -166.47517395]
[39.19573593 -151.79986572]
[42.40900803 -137.14808655]
[45.73126984 -122.52062225]
[49.05352783 -107.89315796]
[52.37578964 -93.26570129]
[67.66310120 -87.28442383]
[76.46105194 -73.22889709]
[75.13445282 -56.53334808]
[64.00863647 -43.79316330]
[67.54830933 -29.21678925]
[80.32801056 -17.18989182]
[74.99729919 0.43580031]
[78.75359344 14.95785999]
[82.50989532 29.47991943]
[87.01752472 43.78660583]
[92.26424408 57.83907700]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[116.54151154 122.86173248]
[121.78822327 136.91419983]
[127.03494263 150.96667480]
[133.31230164 164.58999634]
[140.58554077 177.70867920]
[147.85876465 190.82737732]
[155.13198853 203.94607544]
[162.40522766 217.06477356]
[169.67845154 230.18345642]
[184.60485840 234.63769531]
[191.79406738 248.04553223]
[187.45565796 262.24810791]
[194.72888184 275.36682129]
[202.00210571 288.48550415]
[209.27534485 301.60421753]
[216.54856873 314.72290039]
[223.82179260 327.84158325]
[231.09503174 340.96029663]
[238.36825562 354.07897949]
[245.64147949 367.19766235]
[257.80252075 371.49557495]
[263.59033203 382.57189941]
[260.38555908 394.23620605]
[267.46267700 407.46173096]
[274.53976440 420.68725586]
[281.61688232 433.91278076]
[295.67294312 428.61352539]
[310.30044556 425.19433594]
[325.24914551 423.71374512]
[340.26318359 424.19708252]
[355.08566284 426.63604736]
[369.46298218 430.98892212]
[383.14910889 437.18124390]
[395.90988159 445.10705566]
[407.52688599 454.63067627]
[417.80139160 465.58923340]
[426.55758667 477.79513550]
[433.64562988 491.03955078]
[438.94421387 505.09588623]
[442.36270142 519.72357178]
[443.84259033 534.67230225]
[443.35855103 549.68634033]
[440.91885376 564.50866699]
[436.56527710 578.88580322]
[430.37231445 592.57165527]
[422.44592285 605.33203125]
[412.92172241 616.94860840]
[401.96270752 627.22259521]
[389.75637817 635.97821045]
[376.51159668 643.06555176]
[362.45504761 648.36352539]
[347.82720947 651.78131104]
[332.87838745 653.26043701]
[317.86437988 652.77569580]
[303.04211426 650.33532715]
[288.66522217 645.98107910]
[274.97967529 639.78747559]
[262.21966553 631.86041260]
[250.60356140 622.33569336]
[240.33009338 611.37615967]
[231.57507324 599.16943359]
[224.48831177 585.92431641]
[219.19105530 571.86749268]
[215.77395630 557.23950195]
[214.29550171 542.29064941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 171]
[8 170]
[9 169]
[10 168]
[12 165]
[13 164]
[14 163]
[15 162]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[23 154]
[24 153]
[25 152]
[26 151]
[27 150]
[28 149]
[39 148]
[40 147]
[41 146]
[42 145]
[44 143]
[45 142]
[46 141]
[47 140]
[55 139]
[56 138]
[57 137]
[60 135]
[61 134]
[66 130]
[67 129]
[68 128]
[69 127]
[71 126]
[72 125]
[73 124]
[74 123]
[75 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
