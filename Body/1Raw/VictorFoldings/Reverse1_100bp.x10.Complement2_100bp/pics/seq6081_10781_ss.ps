%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[100.67650604 501.68789673]
[90.22297668 490.92318726]
[80.48063660 479.51080322]
[71.48950958 467.49768066]
[63.28653717 454.93316650]
[55.90543365 441.86889648]
[49.37652969 428.35855103]
[43.72665024 414.45767212]
[38.97901917 400.22335815]
[35.15314102 385.71411133]
[32.26473618 370.98956299]
[30.32567596 356.11016846]
[29.34392738 341.13714600]
[29.32352448 326.13195801]
[30.26455307 311.15631104]
[32.16314316 296.27172852]
[35.01149750 281.53936768]
[38.79790497 267.01977539]
[43.50681305 252.77259827]
[49.11886978 238.85639954]
[55.61100769 225.32835388]
[62.95655823 212.24407959]
[71.12532806 199.65730286]
[80.08376312 187.61976624]
[89.79503632 176.18093872]
[100.21924591 165.38781738]
[111.31356049 155.28475952]
[123.03238678 145.91326904]
[114.43382263 133.62242126]
[105.83525848 121.33158875]
[97.23669434 109.04074860]
[92.41217804 106.98210144]
[89.08452606 102.36690521]
[88.57151031 96.25350189]
[80.34270477 83.71209717]
[72.11389923 71.17070007]
[63.88508987 58.62929916]
[55.65628052 46.08789825]
[49.93291855 42.77811813]
[47.15693665 37.81919098]
[47.37566757 33.04832077]
[39.52391052 20.26747894]
[31.67215538 7.48663616]
[23.82040024 -5.29420614]
[15.96864414 -18.07504845]
[2.63681173 -11.18524075]
[-11.16744614 -5.29884243]
[-25.36873436 -0.44800425]
[-39.88948822 3.34078050]
[-54.65040207 6.04681826]
[-69.57085419 7.65532970]
[-84.56935883 8.15752888]
[-99.56398773 7.55067444]
[-114.47285461 5.83807945]
[-129.21452332 3.02909780]
[-143.70848083 -0.86092836]
[-157.87557983 -5.81075287]
[-171.63841248 -11.79334164]
[-184.92184448 -18.77601814]
[-197.65330505 -26.72064590]
[-209.76325989 -35.58383560]
[-221.18557739 -45.31717682]
[-231.85786438 -55.86750793]
[-241.72184753 -67.17720795]
[-250.72361755 -79.18450165]
[-258.81405640 -91.82382202]
[-265.94891357 -105.02611542]
[-272.08929443 -118.71929932]
[-277.20159912 -132.82856750]
[-281.25793457 -147.27685547]
[-284.23617554 -161.98527527]
[-286.11999512 -176.87347412]
[-286.89913940 -191.86013794]
[-286.56933594 -206.86341858]
[-285.13241577 -221.80137634]
[-282.59619141 -236.59240723]
[-278.97454834 -251.15574646]
[-274.28723145 -265.41186523]
[-268.55987549 -279.28283691]
[-261.82373047 -292.69299316]
[-254.11563110 -305.56903076]
[-245.47763062 -317.84060669]
[-235.95692444 -329.44076538]
[-225.60551453 -340.30609131]
[-214.47993469 -350.37728882]
[-202.64094543 -359.59930420]
[-190.15322876 -367.92181396]
[-177.08496094 -375.29931641]
[-163.50753784 -381.69155884]
[-149.49510193 -387.06359863]
[-135.12419128 -391.38613892]
[-120.47329712 -394.63549805]
[-105.62243652 -396.79400635]
[-90.65271759 -397.84982300]
[-75.64590454 -397.79721069]
[-60.68395615 -396.63644409]
[-45.84859848 -394.37384033]
[-31.22084808 -391.02182007]
[-16.88060379 -386.59863281]
[-2.90618563 -381.12844849]
[10.62608147 -374.64114380]
[23.64228821 -367.17218018]
[36.07134247 -358.76229858]
[47.84536362 -349.45748901]
[58.90004349 -339.30853271]
[69.17500305 -328.37088013]
[78.61412811 -316.70425415]
[87.16585541 -304.37237549]
[94.78349304 -291.44259644]
[101.42542267 -277.98556519]
[107.05536652 -264.07473755]
[111.64259338 -249.78611755]
[115.16202545 -235.19773865]
[117.59445953 -220.38928223]
[118.92659760 -205.44161987]
[119.15116882 -190.43640137]
[118.26695251 -175.45556641]
[116.27877045 -160.58094788]
[113.19747925 -145.89376831]
[109.03991699 -131.47427368]
[103.82878113 -117.40120697]
[97.59254456 -103.75142670]
[90.36525726 -90.59947968]
[82.18640137 -78.01721191]
[73.10063934 -66.07333374]
[63.15760422 -54.83308411]
[52.41159439 -44.35785294]
[40.92130280 -34.70485306]
[28.74948692 -25.92680359]
[36.60124207 -13.14596176]
[44.45299911 -0.36511931]
[52.30475235 12.41572285]
[60.15650940 25.19656563]
[68.19768524 37.85908890]
[76.42649078 50.40048981]
[84.65529633 62.94189072]
[92.88410187 75.48329163]
[101.11291504 88.02468872]
[109.52753448 100.44218445]
[118.12609863 112.73302460]
[126.72466278 125.02386475]
[135.32322693 137.31469727]
[148.14407349 129.51844788]
[161.43807983 122.55964661]
[175.15063477 116.46689606]
[189.22537231 111.26523590]
[203.60447693 106.97603607]
[218.22883606 103.61692810]
[233.03837585 101.20170593]
[247.97222900 99.74030304]
[262.96902466 99.23872375]
[277.96716309 99.69902039]
[292.90496826 101.11931610]
[307.72109985 103.49375916]
[322.35467529 106.81259918]
[336.74551392 111.06220245]
[350.83450317 116.22510529]
[364.56378174 122.28008270]
[377.87689209 129.20227051]
[390.71917725 136.96319580]
[403.03778076 145.53099060]
[414.78216553 154.87045288]
[425.90402222 164.94319153]
[436.35766602 175.70780945]
[446.10012817 187.12007141]
[455.09140015 199.13310242]
[463.29449463 211.69752502]
[470.67575073 224.76170349]
[477.20480347 238.27197266]
[482.85482788 252.17279053]
[487.60263062 266.40704346]
[491.42864990 280.91625977]
[494.31723022 295.64077759]
[496.25646973 310.52014160]
[497.23837280 325.49316406]
[497.25894165 340.49835205]
[496.31808472 355.47399902]
[494.41964722 370.35861206]
[491.57147217 385.09100342]
[487.78521729 399.61065674]
[483.07647705 413.85787964]
[477.46456909 427.77413940]
[470.97256470 441.30224609]
[463.62716675 454.38659668]
[455.45852661 466.97348022]
[446.50024414 479.01110840]
[436.78909302 490.45004272]
[426.36499023 501.24328613]
[415.27081299 511.34646606]
[403.55206299 520.71807861]
[391.25698853 529.31964111]
[378.43606567 537.11572266]
[365.14196777 544.07440186]
[351.42935181 550.16699219]
[337.35455322 555.36846924]
[322.97540283 559.65753174]
[308.35101318 563.01647949]
[293.54144287 565.43151855]
[278.60757446 566.89276123]
[263.61074829 567.39416504]
[248.61264038 566.93371582]
[233.67483521 565.51324463]
[218.85873413 563.13867188]
[204.22521973 559.81964111]
[189.83441162 555.56988525]
[175.74545288 550.40679932]
[162.01625061 544.35168457]
[148.70321655 537.42938232]
[135.86103821 529.66827393]
[123.54251862 521.10034180]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 142]
[29 141]
[30 140]
[31 139]
[34 138]
[35 137]
[36 136]
[37 135]
[38 134]
[41 133]
[42 132]
[43 131]
[44 130]
[45 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
