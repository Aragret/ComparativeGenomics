%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[151.75231934 509.06481934]
[136.70094299 511.84234619]
[122.08626556 507.29592896]
[111.26663971 496.47030640]
[106.72833252 481.85308838]
[109.51421356 466.80325317]
[118.98410797 454.77914429]
[132.96189880 448.54376221]
[133.85472107 433.57037354]
[134.74754333 418.59695435]
[127.78149414 405.43170166]
[136.32647705 392.11654663]
[137.21929932 377.14312744]
[138.11210632 362.16973877]
[138.55871582 347.17639160]
[138.55871582 332.17639160]
[138.55871582 317.17639160]
[137.33174133 302.22665405]
[134.88601685 287.42736816]
[132.44029236 272.62811279]
[129.99455261 257.82882690]
[127.54882812 243.02957153]
[124.44471741 228.35426331]
[120.68842316 213.83219910]
[116.93212128 199.31015015]
[113.17581940 184.78808594]
[101.26752472 179.86650085]
[94.26364136 168.81988525]
[94.91042328 155.56121826]
[103.19554138 144.94183350]
[99.65586853 130.36546326]
[96.11619568 115.78908539]
[84.22846985 103.95446014]
[89.12624359 87.91114807]
[85.36994171 73.38908386]
[81.61363983 58.86702728]
[77.85733795 44.34496689]
[73.45568848 58.68461227]
[63.66369629 70.04757690]
[50.13148117 76.51898956]
[35.13946533 77.00831604]
[21.21406364 71.43308258]
[10.70195007 60.73283005]
[5.37460136 46.71072769]
[6.12976933 31.72974968]
[12.84019470 18.31445312]
[24.37505341 8.72555065]
[38.79051971 4.57894230]
[53.65733337 6.57340384]
[66.47016907 14.37283325]
[75.07050323 26.66441345]
[74.17768860 11.69100857]
[73.28487396 -3.28239727]
[61.74697876 -13.74732780]
[61.05484009 -28.94520950]
[71.10265350 -39.88033676]
[70.20983887 -54.85374069]
[69.31702423 -69.82714844]
[68.42420959 -84.80055237]
[59.87922668 -98.11572266]
[66.84526825 -111.28096771]
[65.95245361 -126.25437164]
[56.84108353 -135.38375854]
[56.40571213 -147.87351990]
[64.33465576 -157.00907898]
[63.66486740 -171.99412537]
[62.99508286 -186.97915649]
[62.32529831 -201.96420288]
[61.65551376 -216.94923401]
[59.65150070 -231.81477356]
[56.32923889 -246.44223022]
[53.00698090 -261.06970215]
[38.07159042 -259.49789429]
[23.05513191 -259.70364380]
[8.16841221 -261.68402100]
[-6.37958479 -265.41122437]
[-20.38462639 -270.83297729]
[-33.65010452 -277.87310791]
[-45.98978806 -286.43280029]
[-57.23045731 -296.39190674]
[-67.21430206 -307.61059570]
[-75.80116272 -319.93139648]
[-82.87049866 -333.18133545]
[-88.32307434 -347.17440796]
[-92.08232880 -361.71417236]
[-94.09549713 -376.59649658]
[-94.33431244 -391.61245728]
[-92.79542542 -406.55126953]
[-89.50044250 -421.20321655]
[-84.49562073 -435.36257935]
[-77.85121155 -448.83062744]
[-69.66049957 -461.41827393]
[-60.03846741 -472.94879150]
[-49.12018967 -483.26031494]
[-37.05894852 -492.20809937]
[-24.02406120 -499.66653442]
[-10.19851685 -505.53088379]
[4.22359467 -509.71884155]
[19.03980827 -512.17163086]
[34.04212952 -512.85479736]
[49.01995087 -511.75875854]
[63.76300049 -508.89889526]
[78.06431580 -504.31536865]
[91.72312164 -498.07250977]
[104.54767609 -490.25796509]
[116.35794067 -480.98141479]
[126.98812103 -470.37313843]
[136.28898621 -458.58203125]
[144.12994385 -445.77362061]
[150.40095520 -432.12768555]
[155.01396179 -417.83587646]
[157.90420532 -403.09875488]
[159.03112793 -388.12322998]
[158.37889099 -373.11950684]
[155.95666504 -358.29827881]
[151.79843140 -343.86755371]
[145.96260071 -330.02996826]
[138.53106689 -316.97973633]
[129.60816956 -304.90005493]
[119.31916809 -293.96054077]
[107.80850983 -284.31475830]
[95.23779297 -276.09811401]
[81.78347015 -269.42596436]
[67.63443756 -264.39193726]
[70.95670319 -249.76448059]
[74.27896118 -235.13702393]
[79.41404724 -249.23068237]
[90.09500122 -259.76239014]
[104.25949860 -264.69869995]
[119.17259979 -263.08642578]
[131.95481873 -255.23690796]
[140.13810730 -242.66575623]
[142.14239502 -227.80026245]
[137.58068848 -213.51072693]
[127.33379364 -202.55622864]
[113.38021088 -197.05191040]
[98.41416168 -198.06056213]
[85.32536316 -205.38745117]
[76.64054871 -217.61901855]
[77.31033325 -202.63398743]
[77.98012543 -187.64894104]
[78.64990997 -172.66390991]
[79.31969452 -157.67886353]
[89.54734802 -143.41836548]
[80.92585754 -127.14718628]
[81.81867218 -112.17378235]
[90.29979706 -99.92960358]
[83.39761353 -85.69336700]
[84.29042816 -70.71996307]
[85.18324280 -55.74655533]
[86.07606506 -40.77315140]
[97.35211945 -31.10949898]
[98.47086334 -15.93705463]
[88.25827789 -4.17521334]
[89.15109253 10.79819298]
[90.04391479 25.77159882]
[92.37939453 40.58866501]
[96.13569641 55.11072540]
[99.89199829 69.63278198]
[103.64830017 84.15484619]
[113.30912781 90.65943146]
[116.14162445 101.95625305]
[110.69256592 112.24941254]
[114.23223877 126.82578278]
[117.77191162 141.40216064]
[132.87541199 150.22845459]
[136.84434509 166.91864014]
[127.69787598 181.03178406]
[131.45417786 195.55384827]
[135.21047974 210.07589722]
[138.96678162 224.59796143]
[147.49270630 212.25663757]
[162.22267151 209.42320251]
[174.71867371 217.72079468]
[177.82243347 232.39617920]
[169.75598145 245.04261780]
[155.14013672 248.41564941]
[142.34809875 240.58383179]
[144.79382324 255.38310242]
[147.23956299 270.18237305]
[149.68528748 284.98165894]
[152.13101196 299.78091431]
[158.45588684 286.17959595]
[170.32089233 277.00238037]
[185.07536316 274.29943848]
[199.42309570 278.67465210]
[210.15878296 289.15057373]
[214.88403320 303.38687134]
[212.54322815 318.20309448]
[203.65930176 330.28927612]
[190.21694946 336.94534302]
[175.21922302 336.68429565]
[162.01664734 329.56445312]
[153.55871582 317.17639160]
[153.55871582 332.17639160]
[153.55871582 347.17639160]
[155.86228943 350.85708618]
[156.78225708 354.69351196]
[156.43957520 358.23156738]
[155.09022522 361.10314941]
[153.08551025 363.06256104]
[152.19270325 378.03594971]
[151.29988098 393.00936890]
[158.20207214 407.24560547]
[149.72094727 419.48977661]
[148.82812500 434.46316528]
[147.93531799 449.43658447]
[161.07310486 457.28875732]
[169.04707336 470.35302734]
[170.02482605 485.62725830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 207]
[9 206]
[10 205]
[12 203]
[13 202]
[14 201]
[15 196]
[16 195]
[17 194]
[18 182]
[19 181]
[20 180]
[21 179]
[22 178]
[23 171]
[24 170]
[25 169]
[26 168]
[30 165]
[31 164]
[32 163]
[34 160]
[35 159]
[36 158]
[37 157]
[51 156]
[52 155]
[53 154]
[56 151]
[57 150]
[58 149]
[59 148]
[61 146]
[62 145]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[70 126]
[71 125]
[72 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
