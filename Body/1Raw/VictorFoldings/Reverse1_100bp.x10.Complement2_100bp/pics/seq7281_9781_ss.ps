%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[155.92144775 778.30395508]
[142.36492920 771.87286377]
[129.22145081 764.63494873]
[116.53896332 756.61669922]
[104.36374664 747.84729004]
[92.74023438 738.35876465]
[81.71082306 728.18579102]
[71.31577301 717.36535645]
[61.59300995 705.93707275]
[52.57801056 693.94256592]
[44.30366898 681.42565918]
[36.80017853 668.43194580]
[30.09492111 655.00891113]
[24.21236229 641.20556641]
[19.17396545 627.07214355]
[14.99811554 612.66033936]
[11.70005226 598.02270508]
[9.29180717 583.21258545]
[7.78216934 568.28411865]
[7.17664671 553.29174805]
[7.47744894 538.29016113]
[8.68347836 523.33410645]
[10.79033470 508.47814941]
[13.79032993 493.77651978]
[17.67251587 479.28283691]
[22.42272949 465.05001831]
[28.02363777 451.12994385]
[34.45479965 437.57345581]
[41.69275284 424.43002319]
[49.71108246 411.74755859]
[58.48053360 399.57238770]
[67.96910858 387.94891357]
[78.14217377 376.91955566]
[88.96262360 366.52456665]
[100.39096832 356.80184937]
[112.38550568 347.78689575]
[124.90247345 339.51263428]
[137.89619446 332.00918579]
[151.31924438 325.30398560]
[165.12266541 319.42150879]
[160.08575439 305.29248047]
[156.23132324 302.47247314]
[154.10748291 297.20120239]
[155.11604309 290.66711426]
[143.83897400 280.93692017]
[146.95619202 265.42584229]
[142.34217834 251.15309143]
[137.72816467 236.88037109]
[133.11416626 222.60763550]
[128.50015259 208.33489990]
[112.74018097 203.74133301]
[102.72333527 190.52677917]
[102.55514526 173.77944946]
[112.49996948 160.09747314]
[107.67397308 145.89501953]
[102.84797668 131.69256592]
[98.02198029 117.49010468]
[88.85888672 113.62689209]
[83.25180054 105.41426086]
[82.99037170 95.47352600]
[88.15804291 86.97753906]
[83.75704956 72.63768768]
[79.35604858 58.29784393]
[74.95504761 43.95799637]
[65.72818756 55.78444672]
[50.73144150 56.09698868]
[41.01985931 44.66522598]
[43.75246048 29.91622925]
[56.91486740 22.72241020]
[70.80313110 28.38556480]
[67.48087311 13.75810432]
[64.15861511 -0.86935580]
[60.13979340 13.58225632]
[51.70066452 25.98310661]
[39.73182297 35.02450180]
[25.49637222 39.75228500]
[10.49661160 39.66751862]
[-3.68449736 34.77915192]
[-15.55038929 25.60306358]
[-23.84882736 13.10762691]
[-27.70405769 -1.38848269]
[-26.70923042 -16.35545731]
[-20.96932983 -30.21379471]
[-11.09010220 -41.50099564]
[1.88587391 -49.02589035]
[16.58921242 -51.99435806]
[31.46823692 -50.09313583]
[44.95272446 -43.52285767]
[55.61963272 -32.97690201]
[62.34330368 -19.56802940]
[62.78990936 -34.56137848]
[63.23651505 -49.55472946]
[63.68312073 -64.54808044]
[60.81060791 -73.21909332]
[64.24964142 -79.76087189]
[64.91942596 -94.74591064]
[65.58921814 -109.73094940]
[51.35287094 -114.81208801]
[39.24769974 -123.86505127]
[30.35008049 -136.08486938]
[25.45118523 -150.38494873]
[24.98661995 -165.49372864]
[28.99769402 -180.06777954]
[37.12774277 -192.81115723]
[48.65385437 -202.59072876]
[62.55112839 -208.53692627]
[77.58383179 -210.12100220]
[92.41526031 -207.20208740]
[105.72662354 -200.03976440]
[116.33428192 -189.27085876]
[123.29500580 -175.85298157]
[125.98984528 -160.97920227]
[124.17919922 -145.97210693]
[118.02404785 -132.16610718]
[108.07170868 -120.78883362]
[95.20714569 -112.85193634]
[80.57425690 -109.06116486]
[79.90446472 -94.07612610]
[79.23468018 -79.09108734]
[78.67647552 -64.10147095]
[78.22986603 -49.10812378]
[77.78325653 -34.11477280]
[77.33665466 -19.12142372]
[78.78607178 -4.19161510]
[82.10832977 10.43584442]
[85.43059540 25.06330490]
[89.29489899 39.55699921]
[93.69589233 53.89684677]
[98.09689331 68.23669434]
[102.49789429 82.57653809]
[116.74819946 94.58573914]
[112.22443390 112.66410828]
[117.05043030 126.86656189]
[121.87642670 141.06901550]
[126.70242310 155.27146912]
[140.13475037 158.36396790]
[150.20509338 167.61634827]
[154.35543823 180.53317261]
[151.60354614 193.70780945]
[142.77288818 203.72088623]
[147.38690186 217.99362183]
[152.00090027 232.26635742]
[156.61491394 246.53909302]
[161.22892761 260.81182861]
[172.83602905 271.56289673]
[169.38877869 286.05310059]
[174.21478271 300.25555420]
[179.25169373 314.38458252]
[193.66345215 310.20852661]
[208.30105591 306.91027832]
[223.11111450 304.50180054]
[238.03955078 302.99197388]
[253.03192139 302.38623047]
[268.03350830 302.68682861]
[282.98959351 303.89263916]
[297.84558105 305.99929810]
[312.54727173 308.99908447]
[327.04098511 312.88107300]
[341.27389526 317.63110352]
[355.19403076 323.23181152]
[368.75061035 329.66278076]
[381.89416504 336.90054321]
[394.57672119 344.91870117]
[406.75201416 353.68798828]
[418.37561035 363.17639160]
[429.40512085 373.34930420]
[439.80026245 384.16961670]
[449.52313232 395.59783936]
[458.53823853 407.59225464]
[466.81271362 420.10910034]
[474.31631470 433.10269165]
[481.02169800 446.52566528]
[486.90438843 460.32901001]
[491.94290161 474.46234131]
[496.11889648 488.87411499]
[499.41708374 503.51174927]
[501.82546997 518.32183838]
[503.33526611 533.25024414]
[503.94091797 548.24261475]
[503.64025879 563.24420166]
[502.43435669 578.20031738]
[500.32763672 593.05627441]
[497.32778931 607.75793457]
[493.44573975 622.25164795]
[488.69564819 636.48455811]
[483.09487915 650.40466309]
[476.66384888 663.96118164]
[469.42599487 677.10467529]
[461.40780640 689.78723145]
[452.63845825 701.96246338]
[443.14999390 713.58605957]
[432.97702026 724.61547852]
[422.15667725 735.01062012]
[410.72842407 744.73339844]
[398.73394775 753.74847412]
[386.21707153 762.02288818]
[373.22341919 769.52642822]
[359.80041504 776.23175049]
[345.99707031 782.11437988]
[331.86370850 787.15283203]
[317.45190430 791.32873535]
[302.81427002 794.62689209]
[288.00418091 797.03515625]
[273.07574463 798.54492188]
[258.08334351 799.15051270]
[243.08175659 798.84973145]
[228.12570190 797.64379883]
[213.26974487 795.53698730]
[198.56808472 792.53704834]
[184.07438660 788.65496826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 148]
[41 147]
[44 146]
[46 144]
[47 143]
[48 142]
[49 141]
[50 140]
[54 135]
[55 134]
[56 133]
[57 132]
[61 130]
[62 129]
[63 128]
[64 127]
[70 126]
[71 125]
[72 124]
[90 123]
[91 122]
[92 121]
[93 120]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
