%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[165.36370850 586.68267822]
[159.20841980 572.99078369]
[154.40332031 558.76873779]
[150.99330139 544.14929199]
[149.01020813 529.26904297]
[148.47253418 514.26684570]
[149.38531494 499.28274536]
[151.74002075 484.45672607]
[155.51466370 469.92718506]
[160.67401123 455.82980347]
[167.16987610 442.29617310]
[174.94161987 429.45266724]
[183.91667175 417.41921997]
[194.01124573 406.30816650]
[205.13105774 396.22326660]
[217.17231750 387.25869751]
[230.02256775 379.49810791]
[223.54307556 365.96975708]
[217.06358337 352.44143677]
[210.58407593 338.91308594]
[204.10458374 325.38473511]
[189.11267090 316.26281738]
[190.68051147 297.91552734]
[184.00032043 284.48513794]
[171.40461731 276.53546143]
[172.18641663 260.73358154]
[165.50622559 247.30319214]
[158.82603455 233.87281799]
[152.14584351 220.44244385]
[145.46563721 207.01206970]
[138.78544617 193.58169556]
[126.18975067 185.63200378]
[126.97154999 169.83012390]
[120.29135895 156.39974976]
[113.61116028 142.96937561]
[106.83116913 129.58909607]
[99.95175934 116.25966644]
[89.09020233 112.05634308]
[83.82598877 101.66744232]
[86.85994720 90.42304993]
[80.17974854 76.99267578]
[73.49955750 63.56229782]
[66.52110291 50.28445053]
[59.24787140 37.16575623]
[51.97464371 24.04706383]
[39.81360245 19.74916458]
[34.02579117 8.67284012]
[37.23056412 -2.99146295]
[30.15345955 -16.21698952]
[23.07635307 -29.44251823]
[15.99924850 -42.66804504]
[8.92214298 -55.89357376]
[9.42752361 -40.90208817]
[6.74208498 -26.14443207]
[0.98799741 -12.29197884]
[-7.57296658 0.02507827]
[-18.55134010 10.24639511]
[-31.44768143 17.90696907]
[-45.67528915 22.65829659]
[-60.58691025 24.28422165]
[-75.50415802 22.71077919]
[-89.74839783 18.00954628]
[-102.67161560 10.39440060]
[-113.68589020 0.21177851]
[-122.29014587 -12.07507706]
[-128.09294128 -25.90719795]
[-130.83029175 -40.65531158]
[-130.37767029 -55.64848328]
[-126.75566101 -70.20462036]
[-120.12904358 -83.66150665]
[-110.79928589 -95.40695953]
[-99.19083405 -104.90663147]
[-85.83178711 -111.72835541]
[-71.32989502 -115.56177521]
[-56.34489822 -116.23251343]
[-41.55851364 -113.71004486]
[-27.64342308 -108.10912323]
[-15.23267174 -99.68456268]
[-4.89086390 -88.81961823]
[2.91336179 -76.00465393]
[1.57512760 -90.94483948]
[0.23689346 -105.88502502]
[-1.10134077 -120.82521057]
[-10.03897762 -133.88006592]
[-3.46800280 -147.24687195]
[-4.80623722 -162.18705750]
[-6.14447117 -177.12724304]
[-7.48270559 -192.06742859]
[-11.36525154 -200.33566284]
[-8.72794914 -207.23974609]
[-9.84359741 -222.19819641]
[-10.95924664 -237.15666199]
[-25.76092720 -240.12528992]
[-39.21226883 -246.97831726]
[-50.31509399 -257.20718384]
[-58.24549866 -270.05285645]
[-62.41499329 -284.56210327]
[-62.51417542 -299.65820312]
[-58.53568268 -314.22097778]
[-50.77474594 -327.16973877]
[-39.80728149 -337.54360962]
[-26.44714355 -344.57278442]
[-11.68574715 -347.73565674]
[3.38151741 -346.79751587]
[17.63655663 -341.82797241]
[30.02155495 -333.19580078]
[39.61745834 -321.54156494]
[45.71219254 -307.73007202]
[47.85348511 -292.78625488]
[45.88243484 -277.81906128]
[39.94531250 -263.93908691]
[30.48268890 -252.17639160]
[18.19675446 -243.40379333]
[3.99920678 -238.27230835]
[5.11485577 -223.31384277]
[6.23050404 -208.35539246]
[7.45747948 -193.40567017]
[8.79571342 -178.46548462]
[10.13394833 -163.52529907]
[11.47218227 -148.58511353]
[20.31410027 -136.59887695]
[13.83884430 -122.16344452]
[15.17707825 -107.22325897]
[16.51531219 -92.28307343]
[17.85354614 -77.34288788]
[22.14767075 -62.97068024]
[29.22477531 -49.74515152]
[36.30187988 -36.51962280]
[43.37898636 -23.29409599]
[50.45609283 -10.06856823]
[65.84037018 -1.62517369]
[65.09333801 16.77383423]
[72.36656952 29.89252663]
[79.63979340 43.01122284]
[82.91022491 44.32903290]
[85.70484161 47.29638290]
[87.25531006 51.67237854]
[86.92993164 56.88210297]
[93.61012268 70.31247711]
[100.29032135 83.74285126]
[114.50398254 92.65060425]
[113.28118896 109.38025665]
[120.16059875 122.70968628]
[126.87725830 128.90034485]
[127.04153442 136.28916931]
[133.72172546 149.71954346]
[140.40193176 163.14993286]
[153.47543335 172.06024170]
[152.21582031 186.90148926]
[158.89602661 200.33187866]
[165.57621765 213.76225281]
[172.25640869 227.19262695]
[178.93659973 240.62300110]
[185.61680603 254.05337524]
[198.69030762 262.96368408]
[197.43069458 277.80493164]
[204.11088562 291.23532104]
[216.06788635 296.07196045]
[221.35534668 307.39566040]
[217.63293457 318.90524292]
[224.11242676 332.43359375]
[230.59191895 345.96191406]
[237.07142639 359.49026489]
[243.55091858 373.01861572]
[257.65240479 367.87045288]
[272.18493652 364.10733032]
[287.01281738 361.76440430]
[301.99761963 360.86352539]
[316.99938965 361.41308594]
[331.87808228 363.40798950]
[346.49481201 366.82962036]
[360.71304321 371.64599609]
[374.40002441 377.81216431]
[387.42800903 385.27053833]
[399.67532349 393.95147705]
[411.02758789 403.77395630]
[421.37887573 414.64627075]
[430.63247681 426.46685791]
[438.70202637 439.12536621]
[445.51214600 452.50360107]
[450.99929810 466.47668457]
[455.11221313 480.91412354]
[457.81246948 495.68112183]
[459.07492065 510.63977051]
[458.88769531 525.65045166]
[457.25262451 540.57299805]
[454.18493652 555.26806641]
[449.71325684 569.59844971]
[443.87936401 583.43029785]
[436.73773193 596.63458252]
[428.35501099 609.08789062]
[418.80947876 620.67407227]
[408.19030762 631.28485107]
[396.59658813 640.82116699]
[384.13659668 649.19396973]
[370.92669678 656.32513428]
[357.09017944 662.14807129]
[342.75625610 666.60833740]
[328.05874634 669.66436768]
[313.13491821 671.28759766]
[298.12411499 671.46289062]
[283.16644287 670.18859863]
[268.40161133 667.47662354]
[253.96743774 663.35223389]
[239.99871826 657.85406494]
[226.62586975 651.03326416]
[213.97377014 642.95373535]
[202.16052246 633.69073486]
[191.29646301 623.33081055]
[181.48298645 611.97076416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 164]
[18 163]
[19 162]
[20 161]
[21 160]
[23 157]
[24 156]
[26 154]
[27 153]
[28 152]
[29 151]
[30 150]
[31 149]
[33 147]
[34 146]
[35 145]
[36 143]
[37 142]
[40 140]
[41 139]
[42 138]
[43 134]
[44 133]
[45 132]
[48 130]
[49 129]
[50 128]
[51 127]
[52 126]
[80 125]
[81 124]
[82 123]
[83 122]
[85 120]
[86 119]
[87 118]
[88 117]
[90 116]
[91 115]
[92 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
