%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[14.57045841 686.42779541]
[0.56608313 692.00817871]
[-14.36692429 694.07427979]
[-29.36038017 692.50592041]
[-43.54258347 687.39428711]
[-56.08900070 679.03662109]
[-66.27019501 667.91876221]
[-73.49425507 654.68713379]
[-77.34117126 640.11096191]
[-77.58729553 625.03771973]
[-74.21832275 610.34368896]
[-67.43011475 596.88323975]
[-57.61732483 585.43890381]
[-45.35046387 576.67608643]
[-31.34270859 571.10418701]
[-16.40845108 569.04711914]
[-14.84792900 554.12854004]
[-13.28740597 539.20989990]
[-11.72688293 524.29132080]
[-10.16635990 509.37271118]
[-8.60583687 494.45410156]
[-20.90996552 503.03363037]
[-35.70053101 500.53582764]
[-44.50482941 488.39151001]
[-42.27935791 473.55752563]
[-30.29896545 464.53143311]
[-15.42656708 466.48379517]
[-6.18200588 478.29531860]
[-3.29673338 463.57543945]
[-0.41146088 448.85552979]
[-5.55616570 434.87765503]
[4.69113302 422.82345581]
[7.57640553 408.10357666]
[10.46167850 393.38366699]
[13.34695053 378.66378784]
[16.23222351 363.94390869]
[14.35855007 359.55090332]
[15.22463703 353.93423462]
[19.42876434 348.83160400]
[22.75102425 334.20413208]
[26.07328415 319.57669067]
[29.39554405 304.94921875]
[28.01745415 302.50811768]
[27.52328491 299.37405396]
[28.18181992 295.88095093]
[30.13610458 292.45379639]
[33.37552261 289.56240845]
[37.56253433 275.15863037]
[32.46675110 258.36578369]
[45.86482239 245.73355103]
[49.83691788 231.26902771]
[53.80901718 216.80450439]
[57.78111267 202.33998108]
[56.51339722 199.83976746]
[56.15966415 196.68675232]
[56.97351837 193.22654724]
[59.07888412 189.89009094]
[62.44417953 187.14622498]
[67.27017212 172.94377136]
[64.03904724 158.40385437]
[75.80493164 147.82678223]
[80.63093567 133.62432861]
[85.45693207 119.42187500]
[90.28292847 105.21941376]
[75.87922668 109.40671539]
[63.53746033 100.88141632]
[62.35551453 85.92805481]
[73.20467377 75.56968689]
[88.08734894 77.44213104]
[96.03239441 90.16342926]
[101.90135193 76.35925293]
[100.18039703 60.63192368]
[112.28058624 51.94661713]
[118.14955139 38.14244080]
[124.01850891 24.33826447]
[118.34848022 9.83004284]
[124.49708557 -4.08575010]
[138.36340332 -9.40184879]
[144.23236084 -23.20602608]
[150.10131836 -37.01020432]
[155.45251465 -51.02322388]
[160.27850342 -65.22567749]
[165.10450745 -79.42813873]
[164.90248108 -88.56033325]
[170.10952759 -93.80519104]
[167.45550537 -109.40219879]
[179.01728821 -118.79232788]
[184.05419922 -132.92135620]
[176.96546936 -142.46528625]
[175.38020325 -154.12666321]
[179.57759094 -164.99293518]
[188.40698242 -172.40626526]
[199.60046387 -174.61354065]
[205.05583191 -188.58633423]
[210.51118469 -202.55914307]
[215.96653748 -216.53193665]
[221.42190552 -230.50473022]
[224.19750977 -245.24569702]
[224.19750977 -260.24569702]
[224.19750977 -275.24569702]
[210.85638428 -282.85556030]
[203.12141418 -296.12454224]
[203.07327271 -311.48333740]
[210.72489929 -324.80056763]
[224.01806641 -332.49389648]
[239.37695312 -332.49389648]
[252.67012024 -324.80056763]
[260.32174683 -311.48333740]
[260.27362061 -296.12454224]
[252.53863525 -282.85556030]
[239.19750977 -275.24569702]
[239.19750977 -260.24569702]
[239.19750977 -245.24569702]
[245.83567810 -258.69689941]
[255.36029053 -270.28488159]
[267.27169800 -279.40182495]
[280.94506836 -285.56939697]
[295.66311646 -288.46411133]
[310.65374756 -287.93408203]
[325.13058472 -284.00717163]
[338.33422852 -276.88931274]
[349.57202148 -266.95391846]
[358.25445557 -254.72216797]
[363.92605591 -240.83575439]
[366.28933716 -226.02308655]
[365.22030640 -211.06123352]
[360.77499390 -196.73504639]
[353.18667603 -183.79606628]
[342.85336304 -172.92303467]
[330.31716919 -164.68632507]
[316.23565674 -159.51803589]
[301.34756470 -157.68927002]
[286.43383789 -159.29597473]
[272.27688599 -164.25384521]
[259.61932373 -172.30281067]
[249.12513733 -183.02064514]
[241.34483337 -195.84510803]
[236.68653870 -210.10345459]
[235.39469910 -225.04937744]
[229.93934631 -211.07658386]
[224.48397827 -197.10377502]
[219.02862549 -183.13098145]
[213.57327271 -169.15818787]
[221.91932678 -152.86526489]
[215.59724426 -135.34544373]
[198.18324280 -127.88443756]
[193.14631653 -113.75540924]
[196.16061401 -99.16899872]
[184.23855591 -88.76827240]
[179.30696106 -74.60214233]
[174.48095703 -60.39968491]
[169.65496826 -46.19722748]
[184.05867004 -50.38452148]
[196.40043640 -41.85922241]
[197.58238220 -26.90586281]
[186.73321533 -16.54750061]
[171.85054016 -18.41993904]
[163.90550232 -31.14124107]
[158.03654480 -17.33706474]
[152.16757202 -3.53288794]
[157.96002197 10.14129353]
[152.20469666 24.22429848]
[137.82269287 30.20722580]
[131.95372009 44.01140213]
[126.08476257 57.81557846]
[128.22550964 72.55554199]
[115.70552826 82.22821808]
[109.83657074 96.03239441]
[104.48538208 110.04541779]
[99.65938568 124.24787140]
[94.83338928 138.45033264]
[90.00739288 152.65278625]
[92.89332581 168.20855713]
[81.47263336 177.76977539]
[76.64663696 191.97222900]
[72.24563599 206.31207275]
[68.27353668 220.77659607]
[64.30144501 235.24111938]
[60.32934570 249.70564270]
[66.01904297 261.28106689]
[62.41289139 273.24682617]
[51.96631622 279.34564209]
[47.77930450 293.74942017]
[44.02300262 308.27148438]
[40.70074463 322.89895630]
[37.37848282 337.52639771]
[34.05622482 352.15386963]
[30.95211411 366.82916260]
[28.06684303 381.54907227]
[25.18157005 396.26895142]
[22.29629707 410.98883057]
[19.41102409 425.70874023]
[24.34935570 440.73947144]
[14.30843067 451.74081421]
[11.42315769 466.46069336]
[8.53788567 481.18060303]
[6.31276798 496.01461792]
[4.75224495 510.93322754]
[3.19172215 525.85186768]
[1.63119912 540.77044678]
[0.07067609 555.68902588]
[-1.48984694 570.60766602]
[12.69545269 575.71069336]
[25.24693298 584.06072998]
[35.43486786 595.17242432]
[42.66694641 608.39965820]
[46.52270126 622.97351074]
[46.77796555 638.04663086]
[43.41790009 652.74267578]
[36.63785172 666.20721436]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 202]
[17 201]
[18 200]
[19 199]
[20 198]
[21 197]
[28 196]
[29 195]
[30 194]
[32 192]
[33 191]
[34 190]
[35 189]
[36 188]
[39 187]
[40 186]
[41 185]
[42 184]
[47 183]
[48 182]
[50 179]
[51 178]
[52 177]
[53 176]
[58 175]
[59 174]
[61 172]
[62 171]
[63 170]
[64 169]
[70 168]
[71 167]
[73 165]
[74 164]
[75 163]
[78 160]
[79 159]
[80 158]
[81 152]
[82 151]
[83 150]
[85 149]
[87 147]
[88 146]
[93 143]
[94 142]
[95 141]
[96 140]
[97 139]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
