%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[-4.10861969 512.77563477]
[-4.90234756 527.77124023]
[-7.40030384 542.57855225]
[-11.56992340 557.00469971]
[-17.35684586 570.86138916]
[-24.68562698 583.96813965]
[-33.46072388 596.15405273]
[-43.56772995 607.26013184]
[-54.87488174 617.14178467]
[-67.23477173 625.66998291]
[-80.48625183 632.73370361]
[-94.45657349 638.24078369]
[-108.96360779 642.11944580]
[-123.81820679 644.31909180]
[-138.82673645 644.81109619]
[-153.79350281 643.58898926]
[-168.52340698 640.66870117]
[-182.82438660 636.08837891]
[-196.51002502 629.90771484]
[-209.40190125 622.20721436]
[-221.33192444 613.08734131]
[-232.14457703 602.66693115]
[-241.69889832 591.08190918]
[-249.87030029 578.48327637]
[-256.55227661 565.03527832]
[-261.65771484 550.91320801]
[-265.12005615 536.30120850]
[-266.89413452 521.38983154]
[-266.95684814 506.37335205]
[-265.30737305 491.44766235]
[-261.96722412 476.80725098]
[-256.97991943 462.64306641]
[-250.41050720 449.13970947]
[-242.34461975 436.47323608]
[-232.88740540 424.80880737]
[-222.16217041 414.29849243]
[-210.30874634 405.07925415]
[-197.48164368 397.27136230]
[-183.84809875 390.97656250]
[-169.58587646 386.27694702]
[-154.88087463 383.23376465]
[-139.92483521 381.88668823]
[-124.91273499 382.25329590]
[-110.04026794 384.32879639]
[-95.50135040 388.08612061]
[-81.48551941 393.47631836]
[-68.17549133 400.42907715]
[-59.76087189 388.01159668]
[-51.34625244 375.59408569]
[-42.93163681 363.17660522]
[-34.51701736 350.75909424]
[-26.10239792 338.34161377]
[-29.97867012 321.97659302]
[-20.63571930 307.58825684]
[-3.44537520 304.34616089]
[-2.93246222 289.46038818]
[11.10724068 282.16671753]
[19.33604813 269.62533569]
[27.56485748 257.08392334]
[35.79366302 244.54252625]
[44.02247238 232.00112915]
[51.96915817 219.27908325]
[59.62975311 206.38276672]
[67.29035187 193.48643494]
[72.95314026 179.59640503]
[68.43771362 165.40274048]
[79.21303558 153.81814575]
[82.75270844 139.24176025]
[86.29238129 124.66539001]
[89.83205414 110.08901978]
[86.08058929 96.61986542]
[95.59156799 86.37131500]
[99.13124084 71.79493713]
[102.67091370 57.21855927]
[90.95281219 47.50015640]
[84.64198303 33.71391296]
[84.94145203 18.61654663]
[91.73825836 5.20146656]
[103.63652802 -3.89472818]
[118.24375153 -6.91040611]
[121.78342438 -21.48678207]
[125.32309723 -36.06315613]
[128.86277771 -50.63953400]
[124.60052490 -65.87580109]
[135.12266541 -76.41780090]
[138.66233826 -90.99417114]
[142.20201111 -105.57054901]
[144.97763062 -120.31150818]
[146.98164368 -135.17703247]
[148.98565674 -150.04257202]
[150.98966980 -164.90809631]
[145.16545105 -179.61827087]
[154.53375244 -191.19772339]
[156.53776550 -206.06326294]
[158.54177856 -220.92878723]
[152.71755981 -235.63894653]
[162.08587646 -247.21841431]
[164.08988953 -262.08395386]
[150.11071777 -267.74374390]
[137.97874451 -276.70288086]
[128.45660400 -288.39816284]
[122.14286804 -302.09442139]
[119.43442535 -316.93069458]
[120.50151825 -331.97439575]
[125.27708435 -346.27978516]
[133.46092224 -358.94769287]
[144.53858948 -369.18176270]
[157.81372070 -376.33868408]
[172.45184326 -379.96856689]
[187.53279114 -379.84323120]
[202.10856628 -375.97055054]
[215.26292419 -368.59399414]
[226.16896057 -358.17721558]
[234.14112854 -345.37506104]
[238.67826843 -330.99224854]
[239.49519348 -315.93292236]
[236.54052734 -301.14370728]
[230.00003052 -287.55426025]
[220.28482056 -276.01885986]
[208.00563049 -267.26260376]
[193.93431091 -261.83590698]
[178.95541382 -260.07992554]
[176.95140076 -245.21440125]
[182.91896057 -231.56752014]
[173.40731812 -218.92477417]
[171.40330505 -204.05923462]
[169.39929199 -189.19371033]
[175.36685181 -175.54682922]
[165.85519409 -162.90408325]
[163.85118103 -148.03855896]
[161.84716797 -133.17301941]
[159.84315491 -118.30749512]
[171.71829224 -127.47161102]
[186.71037292 -126.98420715]
[197.96520996 -117.06812286]
[200.33724976 -102.25686646]
[192.74201965 -89.32192993]
[178.65196228 -84.17700958]
[164.50886536 -89.17427826]
[156.77839661 -102.03087616]
[153.23872375 -87.45449829]
[149.69905090 -72.87812805]
[154.21447754 -58.68445969]
[143.43914795 -47.09986115]
[139.89947510 -32.52348328]
[136.35980225 -17.94710922]
[132.82012939 -3.37073374]
[144.41746521 6.00836134]
[150.81883240 19.54837036]
[150.70614624 34.58660126]
[144.04818726 48.13989639]
[132.11746216 57.49642563]
[117.24729156 60.75823212]
[113.70761871 75.33460999]
[110.16794586 89.91098022]
[113.91941071 103.38013458]
[104.40843201 113.62868500]
[100.86875916 128.20506287]
[97.32908630 142.78143311]
[93.78941345 157.35781860]
[98.05165863 172.59408569]
[87.52951050 183.13607788]
[97.31939697 171.77130127]
[109.88317108 163.57669067]
[124.22999573 159.19851685]
[139.22843933 158.98204041]
[153.69564819 162.94436646]
[166.49067688 170.77297974]
[176.60446167 181.85049438]
[183.23937988 195.30328369]
[185.87219238 210.07043457]
[184.29524231 224.98730469]
[178.63290405 238.87751770]
[169.33174133 250.64561462]
[157.12525940 259.36352539]
[142.97613525 264.34371948]
[128.00022888 265.19345093]
[113.37858582 261.84567261]
[100.26433563 254.56443787]
[89.69173431 243.92395020]
[82.49456024 230.76336670]
[79.24043274 216.12060547]
[80.18667603 201.14703369]
[72.52607727 214.04336548]
[64.86548615 226.93968201]
[64.80248260 232.15917969]
[62.93083572 236.40773010]
[59.92325974 239.15901184]
[56.56387329 240.22993469]
[48.33506393 252.77133179]
[40.10625839 265.31274414]
[31.87744904 277.85412598]
[23.64864159 290.39553833]
[22.54714966 306.17834473]
[9.09602547 312.57495117]
[13.33413315 325.35983276]
[9.49117661 338.06582642]
[-0.81541753 346.11914062]
[-13.68490219 346.75622559]
[-22.09952164 359.17370605]
[-30.51413918 371.59121704]
[-38.92875671 384.00869751]
[-47.34337616 396.42620850]
[-55.75799561 408.84368896]
[-44.36746216 418.62905884]
[-34.16664886 429.64910889]
[-25.28854179 441.76013184]
[-17.84888840 454.80426025]
[-11.94468021 468.61145020]
[-7.65288973 483.00164795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 204]
[48 203]
[49 202]
[50 201]
[51 200]
[52 199]
[55 195]
[57 193]
[58 192]
[59 191]
[60 190]
[61 189]
[62 185]
[63 184]
[64 183]
[65 162]
[67 160]
[68 159]
[69 158]
[70 157]
[72 155]
[73 154]
[74 153]
[80 147]
[81 146]
[82 145]
[83 144]
[85 142]
[86 141]
[87 140]
[88 132]
[89 131]
[90 130]
[91 129]
[93 127]
[94 126]
[95 125]
[97 123]
[98 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
