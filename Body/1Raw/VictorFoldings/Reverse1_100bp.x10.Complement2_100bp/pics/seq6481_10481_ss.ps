%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[116.06821442 533.27703857]
[114.50769043 518.35839844]
[112.94716644 503.43978882]
[111.38664246 488.52120972]
[109.82612610 473.60260010]
[108.26560211 458.68399048]
[106.70507812 443.76538086]
[97.50868225 435.90707397]
[96.08648682 423.49093628]
[103.74278259 413.11093140]
[102.40454865 398.17077637]
[101.06631470 383.23059082]
[88.20989990 375.75726318]
[82.14759064 361.98364258]
[85.39611053 347.10748291]
[96.91442108 336.87835693]
[95.57618713 321.93817139]
[85.15211487 332.72421265]
[70.15727997 333.11804199]
[59.18141556 322.89401245]
[58.51198959 307.90896606]
[68.53247833 296.74697876]
[83.50269318 295.80218506]
[94.84658813 305.61489868]
[94.84658813 290.61489868]
[94.84658813 275.61489868]
[85.26589203 260.91192627]
[94.60533142 245.04196167]
[94.38200378 230.04362488]
[82.11703491 221.63478088]
[77.09595490 207.44842529]
[81.44190979 192.85507202]
[93.68912506 183.51098633]
[93.46579742 168.51264954]
[93.24246979 153.51431274]
[93.01914215 138.51597595]
[92.79581451 123.51763916]
[92.57248688 108.51930237]
[82.86664581 119.95594025]
[68.31987762 123.61537933]
[54.35776520 118.13273621]
[46.18783188 105.55290222]
[46.85725784 90.56784821]
[56.11637115 78.76662445]
[70.51174164 74.55079651]
[84.67426300 79.49276733]
[93.32200623 91.75041199]
[94.88253021 76.83181000]
[88.62291718 62.30157089]
[97.64231110 50.44831085]
[99.20283508 35.52970886]
[99.87261963 20.54466820]
[99.64929199 5.54633141]
[99.42596436 -9.45200634]
[99.20263672 -24.45034409]
[98.97930908 -39.44868088]
[98.75598145 -54.44701767]
[97.75171661 -69.41336060]
[95.96925354 -84.30708313]
[94.18679047 -99.20079803]
[92.40431976 -114.09451294]
[90.62185669 -128.98823547]
[88.61784363 -143.85375977]
[86.39272308 -158.68780518]
[71.68275452 -162.41506958]
[59.55316925 -171.46582031]
[51.83370209 -184.43592834]
[49.67391968 -199.33300781]
[53.37211609 -213.88250732]
[62.33457184 -225.87500000]
[75.17059326 -233.50164795]
[72.94548035 -248.33569336]
[70.72035980 -263.16973877]
[68.49524689 -278.00378418]
[66.27012634 -292.83782959]
[51.25749969 -292.41537476]
[36.30342102 -293.80563354]
[21.62595367 -296.98828125]
[7.43914700 -301.91696167]
[-6.05011749 -308.51977539]
[-18.64512444 -316.70043945]
[-30.16220474 -326.33963013]
[-40.43340302 -337.29681396]
[-49.30893326 -349.41220093]
[-56.65936661 -362.50909424]
[-62.37751389 -376.39648438]
[-66.37998199 -390.87191772]
[-68.60841370 -405.72424316]
[-69.03029633 -420.73687744]
[-67.63948822 -435.69088745]
[-64.45627594 -450.36825562]
[-59.52706528 -464.55487061]
[-52.92375183 -478.04388428]
[-44.74262238 -490.63858032]
[-35.10298920 -502.15530396]
[-24.14542198 -512.42608643]
[-12.02971458 -521.30114746]
[1.06744802 -528.65112305]
[14.95507240 -534.36877441]
[29.43063545 -538.37066650]
[44.28303909 -540.59857178]
[59.29569626 -541.01989746]
[74.24967194 -539.62847900]
[88.92690277 -536.44476318]
[103.11334229 -531.51501465]
[116.60211182 -524.91119385]
[129.19650269 -516.72955322]
[140.71286011 -507.08950806]
[150.98324585 -496.13156128]
[159.85786438 -484.01553345]
[167.20732117 -470.91809082]
[172.92443848 -457.03024292]
[176.92581177 -442.55453491]
[179.15313721 -427.70205688]
[179.57389832 -412.68939209]
[178.18197632 -397.73544312]
[174.99766541 -383.05834961]
[170.06738281 -368.87210083]
[163.46305847 -355.38357544]
[155.28099060 -342.78948975]
[145.64050293 -331.27346802]
[134.68215942 -321.00350952]
[122.56579590 -312.12933350]
[109.46808624 -304.78036499]
[95.58003235 -299.06378174]
[81.10417175 -295.06292725]
[83.32928467 -280.22888184]
[85.55440521 -265.39483643]
[87.77951813 -250.56080627]
[90.00463867 -235.72676086]
[104.51340485 -232.20185852]
[116.60001373 -223.36674500]
[124.40427399 -210.54260254]
[126.71035004 -195.66746521]
[123.13603973 -181.00329590]
[114.19577026 -168.79205322]
[101.22676849 -160.91291809]
[103.45188904 -146.07887268]
[106.69190979 -142.57012939]
[107.76215363 -136.98876953]
[105.51557159 -130.77069092]
[107.29804230 -115.87698364]
[109.08050537 -100.98326111]
[110.86296844 -86.08954620]
[112.64543915 -71.19583130]
[121.84732819 -83.04171753]
[136.48377991 -86.32416534]
[149.86318970 -79.54247284]
[155.86868286 -65.79714203]
[151.75462341 -51.37235641]
[139.40190125 -42.86293030]
[124.45802307 -44.15925598]
[113.75431824 -54.67034531]
[113.97764587 -39.67200851]
[114.20097351 -24.67367172]
[114.42430115 -9.67533398]
[114.64762878 5.32300377]
[114.87095642 20.32134056]
[124.57679749 8.88470459]
[139.12356567 5.22526836]
[153.08567810 10.70791149]
[161.25561523 23.28774261]
[160.58618164 38.27279663]
[151.32707214 50.07402039]
[136.93170166 54.28984833]
[122.76918030 49.34787750]
[114.12143707 37.09022903]
[112.56091309 52.00883484]
[118.93215179 65.47199249]
[109.80113220 78.39233398]
[108.24061584 93.31093597]
[107.57082367 108.29597473]
[107.79415131 123.29431152]
[108.01747894 138.29264832]
[108.24080658 153.29098511]
[108.46413422 168.28932190]
[108.68746185 183.28765869]
[121.20745850 192.26295471]
[125.98599243 206.72044373]
[121.38951874 221.05001831]
[109.38034058 229.82029724]
[109.60366821 244.81863403]
[118.29830170 254.34576416]
[118.17554474 266.84249878]
[109.84658813 275.61489868]
[109.84658813 290.61489868]
[109.84658813 305.61489868]
[110.51637268 320.59994507]
[111.85460663 335.54013062]
[125.00747681 343.55938721]
[130.84806824 357.62139893]
[127.33010864 372.25314331]
[116.00650024 381.89233398]
[117.34473419 396.83251953]
[118.68296814 411.77270508]
[129.62277222 426.58496094]
[121.62368011 442.20486450]
[123.18420410 457.12347412]
[124.74472809 472.04208374]
[126.30525208 486.96066284]
[127.86577606 501.87927246]
[129.42630005 516.79791260]
[130.98681641 531.71649170]
[144.48803711 539.36480713]
[150.88452148 553.50213623]
[147.71669006 568.69244385]
[136.20263672 579.09466553]
[120.76976776 580.70898438]
[107.35231781 572.91467285]
[101.10957336 558.70874023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[4 200]
[5 199]
[6 198]
[7 197]
[10 195]
[11 194]
[12 193]
[16 189]
[17 188]
[24 187]
[25 186]
[26 185]
[28 182]
[29 181]
[33 177]
[34 176]
[35 175]
[36 174]
[37 173]
[38 172]
[47 171]
[48 170]
[50 168]
[51 167]
[52 158]
[53 157]
[54 156]
[55 155]
[56 154]
[57 153]
[58 145]
[59 144]
[60 143]
[61 142]
[62 141]
[63 138]
[64 137]
[71 130]
[72 129]
[73 128]
[74 127]
[75 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
