%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[165.98399353 799.76641846]
[156.50860596 788.11505127]
[148.47781372 775.42480469]
[142.00433350 761.87377930]
[137.17904663 747.65222168]
[134.06970215 732.95971680]
[132.71995544 718.00262451]
[133.14872742 702.99090576]
[135.35003662 688.13525391]
[139.29293823 673.64422607]
[144.92211914 659.72125244]
[152.15852356 646.56182861]
[160.90058899 634.35064697]
[171.02557373 623.25915527]
[182.39134216 613.44305420]
[194.83833313 605.04016113]
[208.19181824 598.16845703]
[222.26432800 592.92431641]
[218.72465515 578.34796143]
[215.18498230 563.77160645]
[211.53689575 549.22198486]
[207.78059387 534.69989014]
[191.06614685 528.99914551]
[181.03137207 514.27661133]
[181.85021973 496.32083130]
[193.38340759 482.33001709]
[189.19639587 467.92623901]
[185.00938416 453.52246094]
[180.82237244 439.11865234]
[176.63536072 424.71487427]
[173.73802185 422.70544434]
[171.67004395 419.19284058]
[171.12728882 414.58212280]
[172.59846497 409.57385254]
[169.05879211 394.99746704]
[165.51911926 380.42111206]
[161.97944641 365.84472656]
[158.43977356 351.26834106]
[154.90010071 336.69198608]
[150.26696777 330.93386841]
[151.41795349 321.87225342]
[148.09568787 307.24478149]
[131.24821472 307.23263550]
[114.87541962 303.22824097]
[99.91012573 295.45584106]
[87.20587921 284.35452271]
[77.48827362 270.55340576]
[71.31349182 254.83583069]
[69.03647614 238.09510803]
[70.79054260 221.28359985]
[76.47956848 205.35859680]
[85.78327179 191.22781372]
[98.17520142 179.69763184]
[112.95256805 171.42706299]
[108.76555634 157.02328491]
[104.57854462 142.61950684]
[100.39153290 128.21572876]
[96.20452118 113.81194305]
[86.24539948 103.99829865]
[89.39169312 90.37506866]
[85.20468140 75.97129059]
[81.01767731 61.56750488]
[76.61667633 47.22765732]
[72.00267029 32.95492554]
[67.28253174 18.71693611]
[62.45653534 4.51448011]
[57.63053894 -9.68797588]
[54.98187256 5.07632494]
[47.50315857 18.07897377]
[36.07299042 27.79243088]
[22.03417206 33.07556915]
[7.03596830 33.30773163]
[-7.15964556 28.46164703]
[-18.88498306 19.10662270]
[-26.76256371 6.34168196]
[-29.86693573 -8.33356476]
[-27.83340263 -23.19508362]
[-20.90086174 -36.49695969]
[-9.88373947 -46.67649841]
[3.92368245 -52.53781891]
[18.89932251 -53.39234161]
[33.28385544 -49.13967514]
[45.38740540 -40.27942276]
[53.78869629 -27.85104179]
[52.45046234 -42.79122543]
[51.11222839 -57.73141098]
[49.77399445 -72.67160034]
[40.83635712 -85.72644806]
[47.40733337 -99.09326172]
[46.06909943 -114.03344727]
[44.61967850 -128.96325684]
[43.05915833 -143.88185120]
[28.22657967 -146.79493713]
[14.91240883 -153.95205688]
[4.30053043 -164.71678162]
[-2.66545486 -178.13194275]
[-5.36613560 -193.00466919]
[-3.56136990 -208.01246643]
[2.58836460 -221.82087708]
[12.53623676 -233.20205688]
[25.39768982 -241.14399719]
[40.02909088 -244.94050598]
[55.12942505 -244.25401306]
[69.35598755 -239.14553833]
[81.44374847 -230.06935120]
[90.31788635 -217.83247375]
[95.18930817 -203.52301025]
[95.62486267 -188.41336060]
[91.58580780 -173.84704590]
[83.43129730 -161.11930847]
[71.88642883 -151.36187744]
[57.97776031 -145.44238281]
[59.53828430 -130.52377319]
[63.36059570 -124.19829559]
[61.00928497 -115.37168121]
[62.34751892 -100.43149567]
[71.18943787 -88.44525909]
[64.71417999 -74.00983429]
[66.05241394 -59.06964493]
[67.39064789 -44.12945938]
[68.72888184 -29.18927574]
[71.83299255 -14.51397324]
[76.65898895 -0.31151772]
[81.48498535 13.89093781]
[86.61336517 19.21273994]
[86.27539825 28.34091568]
[90.88941193 42.61364746]
[94.65817261 45.54716110]
[96.62412262 50.87932968]
[95.42145538 57.38049316]
[99.60846710 71.78427887]
[103.79547882 86.18805695]
[113.75460052 96.00170135]
[110.60830688 109.62493134]
[114.79531860 124.02870941]
[118.98232269 138.43249512]
[123.16933441 152.83627319]
[127.35634613 167.24005127]
[140.55308533 166.15832520]
[153.71653748 167.54583740]
[166.38883972 171.35261536]
[178.12957764 177.44453430]
[188.53102112 185.60810852]
[197.23229980 195.55795288]
[203.93194580 206.94670105]
[208.39834595 219.37722778]
[210.47770691 232.41641235]
[210.09938049 245.61032104]
[207.27822876 258.49987793]
[202.11410522 270.63699341]
[194.78828430 281.60000610]
[185.55709839 291.00845337]
[174.74296570 298.53610229]
[162.72315979 303.92251587]
[166.04541016 318.54998779]
[169.47647095 333.15231323]
[173.01614380 347.72866821]
[176.55581665 362.30505371]
[180.09548950 376.88143921]
[183.63516235 391.45779419]
[187.17483521 406.03417969]
[191.03913879 420.52786255]
[195.22615051 434.93164062]
[199.41316223 449.33544922]
[203.60017395 463.73922729]
[207.78718567 478.14300537]
[220.00483704 480.78817749]
[229.88117981 488.33312988]
[235.57925415 499.29721069]
[236.07214355 511.57150269]
[231.32763672 522.82415771]
[222.30265808 530.94360352]
[226.05895996 545.46563721]
[231.23767090 552.99023438]
[229.76136780 560.23193359]
[233.30104065 574.80828857]
[236.84071350 589.38464355]
[251.75103760 587.59069824]
[266.76889038 587.57281494]
[281.68344116 589.33135986]
[296.28533936 592.84155273]
[310.36953735 598.05419922]
[323.73837280 604.89599609]
[336.20413208 613.27105713]
[347.59182739 623.06170654]
[357.74157715 634.13049316]
[366.51092529 646.32208252]
[373.77676392 659.46533203]
[379.43707275 673.37567139]
[383.41238403 687.85784912]
[385.64691162 702.70849609]
[386.10925293 717.71923828]
[384.79296875 732.67932129]
[381.71649170 747.37872314]
[376.92303467 761.61102295]
[370.47988892 775.17651367]
[362.47747803 787.88470459]
[353.02819824 799.55718994]
[342.26464844 810.03015137]
[330.33795166 819.15649414]
[317.41555786 826.80816650]
[303.67886353 832.87774658]
[289.32070923 837.27996826]
[274.54266357 839.95306396]
[259.55215454 840.85949707]
[244.55969238 839.98657227]
[229.77569580 837.34655762]
[215.40771484 832.97644043]
[201.65747070 826.93762207]
[188.71800232 819.31488037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 177]
[19 176]
[20 175]
[21 173]
[22 172]
[26 166]
[27 165]
[28 164]
[29 163]
[30 162]
[34 161]
[35 160]
[36 159]
[37 158]
[38 157]
[39 156]
[41 155]
[42 154]
[54 138]
[55 137]
[56 136]
[57 135]
[58 134]
[60 132]
[61 131]
[62 130]
[63 127]
[64 126]
[65 124]
[66 123]
[67 122]
[84 121]
[85 120]
[86 119]
[87 118]
[89 116]
[90 115]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
