%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[106.97262573 747.78674316]
[92.03817749 746.29132080]
[77.28435516 743.53479004]
[62.81745529 739.53692627]
[48.74171829 734.32659912]
[35.15855789 727.94134521]
[22.16584778 720.42718506]
[9.85719585 711.83813477]
[-1.67870784 702.23626709]
[-12.35874653 691.69061279]
[-22.10597038 680.27722168]
[-30.85014725 668.07830811]
[-38.52827454 655.18176270]
[-45.08502960 641.68060303]
[-50.47317505 627.67193604]
[-54.65388107 613.25683594]
[-57.59703064 598.53906250]
[-59.28141403 583.62475586]
[-59.69489670 568.62133789]
[-58.83450317 553.63690186]
[-56.70642471 538.77941895]
[-53.32600403 524.15594482]
[-48.71759033 509.87179565]
[-42.91438675 496.02993774]
[-35.95821381 482.73010254]
[-27.89918518 470.06811523]
[-18.79537010 458.13522339]
[-8.71236134 447.01736450]
[2.27718973 436.79464722]
[14.09410286 427.54077148]
[26.65323639 419.32238770]
[39.86409760 412.19866943]
[53.63150406 406.22103882]
[67.85625458 401.43246460]
[82.43585968 397.86752319]
[97.26527405 395.55184937]
[112.23765564 394.50216675]
[112.46098328 379.50384521]
[112.68431091 364.50549316]
[112.90763855 349.50717163]
[113.13096619 334.50881958]
[110.95071411 331.73773193]
[110.00433350 327.77297974]
[110.83825684 323.20593262]
[113.71410370 318.84973145]
[114.60691833 303.87631226]
[115.49974060 288.90292358]
[114.71841431 273.92327881]
[112.27268982 259.12399292]
[109.82695770 244.32473755]
[107.38123322 229.52546692]
[104.93550873 214.72619629]
[102.73782349 212.98597717]
[101.09705353 210.27037048]
[100.38814545 206.78715515]
[100.90400696 202.87583923]
[102.81215668 198.97546387]
[101.25163269 184.05685425]
[99.69110870 169.13824463]
[90.67171478 157.28498840]
[96.93133545 142.75474548]
[95.37081146 127.83614349]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[80.57957458 60.80403900]
[86.95080566 47.34088135]
[85.39028168 32.42227554]
[83.82975769 17.50367165]
[82.26923370 2.58506656]
[71.11012268 -12.06265354]
[78.87576294 -27.79992676]
[77.09329987 -42.69364548]
[61.82673264 -49.04374695]
[51.90256500 -62.15124512]
[49.95396042 -78.38145447]
[56.41875076 -93.29327393]
[69.44557190 -102.85437012]
[67.44155884 -117.71989441]
[65.43754578 -132.58541870]
[55.92589188 -145.22816467]
[61.89345169 -158.87506104]
[59.88943863 -173.74058533]
[44.86359024 -174.42149353]
[30.20084190 -177.77464294]
[16.37254143 -183.69223022]
[3.82321000 -191.98403931]
[-7.04374170 -202.38351440]
[-15.87898731 -214.55636597]
[-22.39850807 -228.11128235]
[-26.39273262 -242.61251831]
[-27.73325920 -257.59393311]
[-26.37699509 -272.57394409]
[-22.36754227 -287.07095337]
[-15.83378601 -300.61901855]
[-6.98575926 -312.78259277]
[3.89211035 -323.17062378]
[16.45014381 -331.44924927]
[30.28465271 -337.35232544]
[44.95091629 -340.69006348]
[59.97747040 -341.35519409]
[74.88127899 -339.32632446]
[89.18324280 -334.66870117]
[102.42361450 -327.53201294]
[114.17676544 -318.14566040]
[124.06489563 -306.81143188]
[131.77012634 -293.89364624]
[137.04476929 -279.80755615]
[139.71926880 -265.00598145]
[139.70765686 -249.96472168]
[137.01029968 -235.16728210]
[131.71391296 -221.08935547]
[123.98873901 -208.18348694]
[114.08312225 -196.86454773]
[102.31548309 -187.49638367]
[89.06410980 -180.38014221]
[74.75496674 -175.74459839]
[76.75897980 -160.87907410]
[86.12729645 -149.29960632]
[80.30307007 -134.58943176]
[82.30708313 -119.72390747]
[84.31109619 -104.85838318]
[97.25924683 -100.51528168]
[107.12027740 -90.97123718]
[111.93013763 -78.04783630]
[110.69673157 -64.24721527]
[103.60398865 -52.26768494]
[91.98701477 -44.47610855]
[93.76947784 -29.58239365]
[103.08185577 -21.86188698]
[104.68875122 -9.46827221]
[97.18784332 1.02454352]
[98.74836731 15.94314861]
[100.30889130 30.86175346]
[101.86940765 45.78035736]
[110.88880920 57.63361740]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[110.28941345 126.27561951]
[111.84993744 141.19422913]
[120.98094940 154.11456299]
[114.60971832 167.57772827]
[116.17024231 182.49632263]
[117.73076630 197.41493225]
[119.73477936 212.28045654]
[122.18050385 227.07972717]
[124.62622833 241.87899780]
[127.07196045 256.67828369]
[129.51768494 271.47753906]
[134.71606445 257.40710449]
[144.59147644 246.11659241]
[157.84466553 239.09141541]
[172.73193359 237.25588989]
[187.29461670 240.85150146]
[199.61672974 249.40518188]
[208.07708740 261.79156494]
[211.56259155 276.38098145]
[209.61466980 291.25396729]
[202.48959351 304.45370483]
[191.12478638 314.24356079]
[177.01548767 319.33551025]
[162.01803589 319.05960083]
[148.10557556 313.45214844]
[137.10855103 303.25088501]
[130.47314453 289.79571533]
[129.58032227 304.76913452]
[128.68751526 319.74252319]
[128.12930298 334.73214722]
[127.90597534 349.73049927]
[127.68264771 364.72882080]
[127.45932007 379.72717285]
[127.23599243 394.72549438]
[142.17047119 396.22048950]
[156.92436218 398.97665405]
[171.39137268 402.97412109]
[185.46723938 408.18408203]
[199.05056763 414.56900024]
[212.04347229 422.08285522]
[224.35234070 430.67153931]
[235.88850403 440.27316284]
[246.56880188 450.81854248]
[256.31631470 462.23165894]
[265.06082153 474.43035889]
[272.73928833 487.32666016]
[279.29638672 500.82772827]
[284.68487549 514.83618164]
[288.86596680 529.25122070]
[291.80950928 543.96887207]
[293.49426270 558.88311768]
[293.90814209 573.88653564]
[293.04812622 588.87103271]
[290.92044067 603.72857666]
[287.54040527 618.35217285]
[282.93234253 632.63641357]
[277.12951660 646.47839355]
[270.17367554 659.77838135]
[262.11495972 672.44061279]
[253.01145935 684.37377930]
[242.92874146 695.49188232]
[231.93945312 705.71484375]
[220.12278748 714.96905518]
[207.56385803 723.18774414]
[194.35317993 730.31176758]
[180.58593750 736.28979492]
[166.36129761 741.07873535]
[151.78178406 744.64404297]
[136.95243835 746.96008301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 175]
[38 174]
[39 173]
[40 172]
[41 171]
[45 170]
[46 169]
[47 168]
[48 152]
[49 151]
[50 150]
[51 149]
[52 148]
[57 147]
[58 146]
[59 145]
[61 143]
[62 142]
[63 141]
[65 139]
[66 138]
[68 136]
[69 135]
[70 134]
[71 133]
[73 130]
[74 129]
[79 123]
[80 122]
[81 121]
[83 119]
[84 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
