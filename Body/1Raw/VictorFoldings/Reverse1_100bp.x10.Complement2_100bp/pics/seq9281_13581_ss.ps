%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[49.92790222 672.47076416]
[44.94882202 686.73211670]
[36.15243149 699.01214600]
[24.25180817 708.31549072]
[10.21168518 713.88787842]
[-4.82976723 715.27764893]
[-19.65320587 712.37207031]
[-33.05696106 705.40673828]
[-43.95445251 694.94628906]
[-51.46226883 681.83868408]
[-54.97178268 667.14648438]
[-54.19849396 652.06079102]
[-49.20508957 637.80444336]
[-40.39636612 625.53320312]
[-28.48640251 616.24188232]
[-14.44069004 610.68353271]
[0.60215068 609.30889893]
[3.48742318 594.58905029]
[6.37269592 579.86914062]
[9.25796890 565.14923096]
[12.14324093 550.42938232]
[-0.29139462 540.10986328]
[-5.85715675 524.83966064]
[-2.94597006 508.75421143]
[7.74077559 496.26065063]
[23.35824013 490.83050537]
[26.02403450 476.06927490]
[28.68983078 461.30807495]
[20.83808708 443.63784790]
[34.09442520 428.45126343]
[36.31954193 413.61721802]
[38.54466248 398.78317261]
[40.76977921 383.94912720]
[42.99489594 369.11508179]
[45.22001266 354.28103638]
[47.44512939 339.44699097]
[34.01488495 346.12747192]
[20.35446930 339.93124390]
[16.53383255 325.42599487]
[25.36940384 313.30441284]
[40.34793091 312.50207520]
[50.42732239 323.60888672]
[53.74958420 308.98144531]
[49.02333450 294.85656738]
[59.62498856 283.11282349]
[62.94724655 268.48535156]
[66.26950836 253.85791016]
[69.59176636 239.23043823]
[72.91402435 224.60298157]
[76.23628235 209.97552490]
[79.55854797 195.34806824]
[82.77182007 180.69627380]
[85.87593079 166.02098083]
[88.98004150 151.34567261]
[90.87332916 136.46563721]
[91.54311371 121.48059845]
[92.21289825 106.49555969]
[89.39816284 98.94242859]
[93.00585938 91.29289246]
[93.89867401 76.31948853]
[91.28559875 67.56678772]
[94.91788483 61.13030624]
[96.03353119 46.17185593]
[97.14918518 31.21340179]
[98.15344238 16.24705696]
[99.04625702 1.27365088]
[99.93907166 -13.69975471]
[100.83188629 -28.67316055]
[86.38196564 -32.91646194]
[73.24499512 -40.26550674]
[62.07826996 -50.34891129]
[53.43966293 -62.65858459]
[47.75979614 -76.57531738]
[45.32055283 -91.39992523]
[46.24108887 -106.38841248]
[50.47203064 -120.78925323]
[57.79810333 -133.88111877]
[67.84907532 -145.00898743]
[80.11847687 -153.61692810]
[93.98912048 -159.27586365]
[108.76414490 -161.70495605]
[109.65695953 -176.67835999]
[110.54977417 -191.65176392]
[111.21956635 -206.63681030]
[111.66616821 -221.63015747]
[112.11277771 -236.62350464]
[112.55937958 -251.61685181]
[112.89435577 -266.61309814]
[112.33614349 -281.60272217]
[110.99790955 -296.54290771]
[109.65967560 -311.48309326]
[108.32144165 -326.42327881]
[106.98320770 -341.36346436]
[105.64497375 -356.30364990]
[90.98868561 -360.17263794]
[78.54132080 -368.82357788]
[69.80596161 -381.21185303]
[65.83744049 -395.84149170]
[67.11497498 -410.94592285]
[73.48429871 -424.70120239]
[84.17629242 -435.44628906]
[97.89983368 -441.88369751]
[112.99774933 -443.23605347]
[127.64688110 -439.34008789]
[140.07827759 -430.66619873]
[148.79080200 -418.26187134]
[152.73234558 -403.62490845]
[151.42698669 -388.52285767]
[145.03231812 -374.77935791]
[134.32054138 -364.05398560]
[120.58515930 -357.64187622]
[121.92339325 -342.70169067]
[123.26162720 -327.76150513]
[124.59986115 -312.82131958]
[125.93809509 -297.88113403]
[127.27632904 -282.94094849]
[136.82684326 -294.50762939]
[151.55453491 -297.35284424]
[164.72608948 -290.17578125]
[170.31967163 -276.25775146]
[165.77795410 -261.96185303]
[153.17735291 -253.82397461]
[138.27870178 -255.56466675]
[127.89269257 -266.38977051]
[130.93626404 -259.65490723]
[127.55273438 -251.17024231]
[127.10612488 -236.17689514]
[126.65951538 -221.18354797]
[126.21291351 -206.19020081]
[128.77778625 -202.16148376]
[128.83908081 -196.47877502]
[125.52318573 -190.75894165]
[124.63037109 -175.78553772]
[123.73754883 -160.81213379]
[138.11923218 -156.64453125]
[151.21914673 -149.37742615]
[162.37872314 -139.37249756]
[171.03613281 -127.12909698]
[176.75457764 -113.25942993]
[179.24427795 -98.45786285]
[178.37719727 -83.46618652]
[174.19360352 -69.03647614]
[166.90025330 -55.89329529]
[156.86007690 -44.69738007]
[144.57424927 -36.01237488]
[130.65707397 -30.27648163]
[115.80529785 -27.78034401]
[114.91247559 -12.80693913]
[114.01966095 2.16646671]
[113.12684631 17.13987350]
[115.86664581 24.00392914]
[112.10763550 32.32904816]
[110.99198914 47.28750229]
[109.87633514 62.24595642]
[108.87207794 77.21230316]
[107.97926331 92.18570709]
[107.19793701 107.16534424]
[106.52815247 122.15038300]
[105.85836792 137.13542175]
[114.86100006 125.13739777]
[128.36831665 118.61417389]
[143.36274719 119.02304840]
[156.49449158 126.27268982]
[164.82987976 138.74349976]
[166.50679016 153.64947510]
[161.15057373 167.66056824]
[149.95782471 177.64668274]
[135.42904663 181.37689209]
[120.80998993 178.01785278]
[109.36659241 168.31997681]
[103.65534210 154.44978333]
[100.55123138 169.12509155]
[97.44712067 183.80038452]
[98.73289490 192.84387207]
[94.18600464 198.67031860]
[90.86374664 213.29779053]
[87.54148865 227.92524719]
[84.21922302 242.55270386]
[80.89696503 257.18017578]
[77.57470703 271.80761719]
[74.25244904 286.43508911]
[78.74106598 301.60620117]
[68.37704468 312.30368042]
[65.05478668 326.93115234]
[62.27917480 341.67211914]
[60.05405426 356.50616455]
[57.82893753 371.34020996]
[55.60382080 386.17425537]
[53.37870407 401.00830078]
[51.15358734 415.84234619]
[48.92847061 430.67639160]
[55.88837433 439.03512573]
[57.07464600 449.62628174]
[52.33556747 458.92626953]
[43.45104599 463.97387695]
[40.78525162 478.73507690]
[38.11945724 493.49630737]
[49.25207520 501.96551514]
[55.61920547 514.34594727]
[56.02899551 528.19555664]
[50.45845032 540.80975342]
[40.04683304 549.74993896]
[26.86313248 553.31463623]
[23.97785950 568.03454590]
[21.09258652 582.75439453]
[18.20731544 597.47430420]
[15.32204247 612.19421387]
[28.73278809 619.14605713]
[39.64078140 629.59558105]
[47.16176224 642.69561768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 207]
[18 206]
[19 205]
[20 204]
[21 203]
[26 197]
[27 196]
[28 195]
[30 191]
[31 190]
[32 189]
[33 188]
[34 187]
[35 186]
[36 185]
[42 184]
[43 183]
[45 181]
[46 180]
[47 179]
[48 178]
[49 177]
[50 176]
[51 175]
[52 173]
[53 172]
[54 171]
[55 159]
[56 158]
[57 157]
[59 156]
[60 155]
[62 154]
[63 153]
[64 152]
[65 150]
[66 149]
[67 148]
[68 147]
[81 134]
[82 133]
[83 132]
[84 129]
[85 128]
[86 127]
[87 126]
[88 124]
[89 116]
[90 115]
[91 114]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
