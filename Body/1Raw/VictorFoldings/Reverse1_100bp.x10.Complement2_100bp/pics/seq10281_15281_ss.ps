%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[169.78912354 642.14758301]
[162.26785278 629.14801025]
[156.36836243 615.33666992]
[152.17671204 600.91491699]
[149.75401306 586.09301758]
[149.13560486 571.08721924]
[150.33049011 556.11627197]
[153.32125854 541.39849854]
[158.06430054 527.14855957]
[164.49043274 513.57421875]
[172.50596619 500.87347412]
[181.99398804 489.23153687]
[192.81613159 478.81817627]
[204.81460571 469.78521729]
[217.81440735 462.26443481]
[231.62597656 456.36544800]
[227.43896484 441.96166992]
[216.45658875 431.90002441]
[220.03425598 416.48864746]
[215.84724426 402.08486938]
[211.66023254 387.68106079]
[201.21365356 381.58224487]
[197.60751343 369.61648560]
[203.29719543 358.04107666]
[199.32510376 343.57656860]
[195.35301208 329.11203003]
[191.38090515 314.64749146]
[186.13418579 300.59503174]
[179.65469360 287.06668091]
[173.17520142 273.53833008]
[166.69570923 260.01000977]
[160.21620178 246.48165894]
[153.73670959 232.95330811]
[139.69566345 234.75947571]
[125.76210785 232.13700867]
[113.30078125 225.32926941]
[103.53636932 214.99021912]
[97.43315887 202.12161255]
[95.59983063 187.97592163]
[98.22875977 173.93446350]
[105.07595062 161.37248230]
[115.48358917 151.52449036]
[109.20623016 137.90118408]
[102.92887115 124.27786255]
[96.65151215 110.65454865]
[90.27290344 97.07833862]
[83.79341125 83.54999542]
[77.31391144 70.02165222]
[70.78454590 63.63375473]
[70.84033966 56.24330902]
[64.56297302 42.61999130]
[57.98294830 29.14025879]
[51.10353470 15.81082916]
[44.22412491 2.48139954]
[37.34471130 -10.84803009]
[30.46529770 -24.17745972]
[28.15618706 -9.35625744]
[18.82300949 2.38647628]
[4.90543604 7.98122025]
[-9.95851231 5.96552229]
[-21.88343620 -3.13371944]
[-27.75218773 -16.93798447]
[-26.03069115 -31.83887291]
[-17.16893959 -43.94132614]
[-3.48337555 -50.08179092]
[11.44862843 -48.65517044]
[23.72331047 -40.03504944]
[18.89731216 -54.23750687]
[14.07131577 -68.43996429]
[9.24531746 -82.64241791]
[-4.65187168 -89.67845917]
[-9.34380054 -104.15052032]
[-2.55036616 -117.35600281]
[-7.37636375 -131.55845642]
[-12.20236111 -145.76091003]
[-17.02835846 -159.96336365]
[-31.86549759 -157.53248596]
[-46.90038681 -157.57702637]
[-61.72286224 -160.09576416]
[-75.92855835 -165.01998901]
[-89.12993622 -172.21537781]
[-100.96684265 -181.48562622]
[-111.11636353 -192.57783508]
[-119.30162048 -205.18939209]
[-125.29930115 -218.97625732]
[-128.94580078 -233.56231689]
[-130.14161682 -248.54963684]
[-128.85414124 -263.52935791]
[-125.11849213 -278.09283447]
[-119.03659058 -291.84277344]
[-110.77434540 -304.40402222]
[-100.55715942 -315.43392944]
[-88.66376495 -324.63159180]
[-75.41862488 -331.74609375]
[-61.18307495 -336.58334351]
[-46.34547043 -339.01135254]
[-31.31058884 -338.96392822]
[-16.48859787 -336.44232178]
[-2.28385067 -331.51538086]
[10.91613674 -324.31744385]
[22.75126076 -315.04492188]
[32.89864731 -303.95074463]
[41.08147049 -291.33761597]
[47.07649612 -277.54959106]
[50.72017670 -262.96282959]
[51.91310883 -247.97528076]
[50.62274933 -232.99580383]
[46.88430023 -218.43304443]
[40.79974747 -204.68429565]
[32.53508377 -192.12463379]
[22.31577301 -181.09669495]
[10.42060757 -171.90132141]
[-2.82590342 -164.78936768]
[2.00009418 -150.58691406]
[6.82609177 -136.38446045]
[11.65208912 -122.18199921]
[25.08460426 -115.84929657]
[30.18117142 -101.51473236]
[23.44777298 -87.46841431]
[28.27377129 -73.26596069]
[33.09976959 -59.06350327]
[37.92576599 -44.86104965]
[43.79472733 -31.05687141]
[50.67414093 -17.72744179]
[57.55355072 -4.39801311]
[64.43296814 8.93141651]
[71.31237793 22.26084518]
[74.54212189 23.67544746]
[77.24715424 26.72468758]
[78.66664124 31.14490700]
[78.18629456 36.34263229]
[84.46365356 49.96594620]
[90.84225464 63.54215622]
[97.32175446 77.07050323]
[103.80124664 90.59884644]
[109.84662628 95.93044281]
[110.27482605 104.37718964]
[116.55218506 118.00050354]
[122.82954407 131.62382507]
[129.10690308 145.24713135]
[144.97763062 143.84709167]
[160.34237671 147.95922852]
[173.34823608 157.06857300]
[182.43321228 170.05873108]
[186.51396179 185.34854126]
[185.11482239 201.08462524]
[178.42329407 215.36602783]
[167.26506042 226.47381592]
[173.74455261 240.00215149]
[180.22404480 253.53050232]
[186.70355225 267.05883789]
[193.18304443 280.58718872]
[199.66253662 294.11553955]
[201.54856873 279.23458862]
[209.63165283 266.59875488]
[222.35104370 258.64785767]
[237.25085449 256.91708374]
[251.45416260 261.74060059]
[262.21850586 272.18704224]
[267.46548462 286.23944092]
[266.18200684 301.18441772]
[258.61584473 314.13638306]
[246.22792053 322.59448242]
[231.41015625 324.92559814]
[217.02365112 320.67965698]
[205.84542847 310.67541504]
[209.81753540 325.13992310]
[213.78962708 339.60446167]
[217.76171875 354.06896973]
[231.15979004 366.70120239]
[226.06401062 383.49404907]
[230.25102234 397.89785767]
[234.43803406 412.30163574]
[245.71989441 423.39352417]
[241.84274292 437.77465820]
[246.02975464 452.17843628]
[260.85134888 449.75408936]
[275.85711670 449.13400269]
[290.82821655 450.32720947]
[305.54632568 453.31631470]
[319.79678345 458.05776978]
[333.37182617 464.48239136]
[346.07345581 472.49649048]
[357.71649170 481.98318481]
[368.13107300 492.80416870]
[377.16537476 504.80163574]
[384.68762207 517.80059814]
[390.58813477 531.61151123]
[394.78085327 546.03295898]
[397.20468140 560.85467529]
[397.82421875 575.86041260]
[396.63043213 590.83148193]
[393.64074707 605.54943848]
[388.89877319 619.79974365]
[382.47366333 633.37457275]
[374.45910645 646.07592773]
[364.97195435 657.71856689]
[354.15057373 668.13275146]
[342.15277100 677.16656494]
[329.15353394 684.68835449]
[315.34240723 690.58837891]
[300.92080688 694.78057861]
[286.09899902 697.20379639]
[271.09320068 697.82275391]
[256.12219238 696.62841797]
[241.40432739 693.63824463]
[227.15420532 688.89569092]
[213.57965088 682.47009277]
[200.87860107 674.45501709]
[189.23631287 664.96746826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 176]
[17 175]
[19 173]
[20 172]
[21 171]
[24 169]
[25 168]
[26 167]
[27 166]
[28 153]
[29 152]
[30 151]
[31 150]
[32 149]
[33 148]
[42 140]
[43 139]
[44 138]
[45 137]
[46 135]
[47 134]
[48 133]
[50 132]
[51 131]
[52 127]
[53 126]
[54 125]
[55 124]
[56 123]
[67 122]
[68 121]
[69 120]
[70 119]
[73 116]
[74 115]
[75 114]
[76 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
