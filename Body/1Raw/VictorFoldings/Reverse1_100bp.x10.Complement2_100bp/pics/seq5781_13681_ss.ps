%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[216.41676331 712.64166260]
[226.53674316 701.37823486]
[239.76683044 694.01324463]
[237.10104370 679.25201416]
[234.43524170 664.49078369]
[224.55921936 653.34118652]
[229.72079468 638.38562012]
[227.05499268 623.62445068]
[217.17898560 612.47485352]
[222.34054565 597.51928711]
[219.67475891 582.75805664]
[217.00895691 567.99682617]
[204.66445923 559.74157715]
[201.75068665 544.80957031]
[210.49322510 531.91754150]
[207.82743835 517.15631104]
[205.16163635 502.39508057]
[193.12045288 489.62884521]
[199.49081421 472.35171509]
[196.60554504 457.63180542]
[193.72026062 442.91192627]
[189.42614746 428.53970337]
[183.76335144 414.64968872]
[178.10057068 400.75964355]
[172.43778992 386.86962891]
[166.77499390 372.97958374]
[159.97430420 386.34936523]
[145.75494385 391.12533569]
[132.26240540 384.57159424]
[127.22583771 370.44244385]
[133.53039551 356.83169556]
[147.56455994 351.53619385]
[161.28825378 357.58877563]
[146.41712952 356.25512695]
[133.15362549 349.31069946]
[123.53336334 337.78613281]
[119.04621124 323.41766357]
[120.40567780 308.38549805]
[127.43560028 294.98315430]
[139.09231567 285.26736450]
[134.69131470 270.92752075]
[130.29032898 256.58767700]
[125.88932037 242.24781799]
[121.48832703 227.90797424]
[117.08732605 213.56813049]
[112.68633270 199.22827148]
[105.73616791 212.52095032]
[91.91606903 218.35232544]
[77.54440308 214.05638123]
[69.19169617 201.59715271]
[70.67669678 186.67085266]
[81.32048035 176.10156250]
[96.25685120 174.72142029]
[108.65819550 183.16293335]
[105.77292633 168.44303894]
[102.88764954 153.72314453]
[100.00238037 139.00326538]
[97.11711121 124.28337097]
[94.23183441 109.56347656]
[91.23706055 94.86547089]
[88.13294983 80.19017029]
[83.29538727 72.44188690]
[85.09358978 65.27333069]
[82.20831299 50.55343628]
[79.32304382 35.83354568]
[69.07574463 23.77935791]
[74.22045135 9.80147171]
[69.49878693 1.98202705]
[71.40351105 -5.15896797]
[68.73771667 -19.92018509]
[66.07192230 -34.68140411]
[58.36068726 -21.81528854]
[44.60524750 -15.83299255]
[29.93603706 -18.96576500]
[19.82431030 -30.04516029]
[18.04149055 -44.93883514]
[25.25252533 -58.09181595]
[38.76787567 -64.59837341]
[53.54665375 -62.03171539]
[64.07726288 -51.34809875]
[63.18444824 -66.32150269]
[62.29163361 -81.29491425]
[53.74665070 -94.61008453]
[60.71269226 -107.77532196]
[52.16770935 -121.09049988]
[59.13375092 -134.25573730]
[50.02238083 -143.38513184]
[49.58701324 -155.87489319]
[57.51595306 -165.01045227]
[56.84616852 -179.99548340]
[48.50037384 -193.43640137]
[55.66165543 -206.49647522]
[47.31586075 -219.93739319]
[54.47714233 -232.99746704]
[53.80735779 -247.98249817]
[53.13757324 -262.96752930]
[38.74468613 -267.78515625]
[27.06653976 -277.47973633]
[19.68250275 -290.74023438]
[17.59120750 -305.77322388]
[21.07548141 -320.54562378]
[29.66410828 -333.05963135]
[42.19554520 -341.62277222]
[56.97502136 -345.07699585]
[72.00373077 -342.95510864]
[85.24916077 -335.54409790]
[94.91998291 -323.84625244]
[99.70829773 -309.44360352]
[98.96651459 -294.28396606]
[92.79496765 -280.41760254]
[82.02829742 -269.71978760]
[68.12261200 -263.63732910]
[68.79239655 -248.65228271]
[69.46218109 -233.66725159]
[77.76006317 -221.29815674]
[70.64669037 -207.16625977]
[78.94458008 -194.79716492]
[71.83120728 -180.66526794]
[72.50099182 -165.68023682]
[82.72865295 -151.41973877]
[74.10715485 -135.14854431]
[82.58827972 -122.90437317]
[75.68609619 -108.66813660]
[84.16722107 -96.42396545]
[77.26503754 -82.18772888]
[78.15785217 -67.21431732]
[79.05067444 -52.24091721]
[80.83313751 -37.34719849]
[83.49893188 -22.58598137]
[86.16472626 -7.82476377]
[88.94033813 6.91619921]
[98.98126221 17.91752243]
[94.04293060 32.94827271]
[96.92820740 47.66816330]
[99.81347656 62.38805389]
[102.80825043 77.08605957]
[105.91236115 91.76136017]
[110.52886963 98.36896515]
[108.95172882 106.67819977]
[111.83699799 121.39809418]
[114.72227478 136.11798096]
[117.60754395 150.83787537]
[120.49281311 165.55776978]
[123.37808990 180.27766418]
[127.02617645 194.82728577]
[131.42716980 209.16712952]
[135.82817078 223.50697327]
[140.22917175 237.84681702]
[144.63017273 252.18667603]
[149.03117371 266.52651978]
[153.43215942 280.86636353]
[168.53228760 282.37030029]
[181.87028503 289.52160645]
[191.42834473 301.20309448]
[195.77407837 315.61495972]
[194.27508545 330.55209351]
[187.19076538 343.74139404]
[175.62811279 353.18777466]
[180.66502380 367.31680298]
[186.32780457 381.20684814]
[191.99060059 395.09686279]
[197.65338135 408.98687744]
[203.31617737 422.87692261]
[205.76257324 408.07775879]
[213.94868469 395.50845337]
[226.49499512 387.28713989]
[241.28723145 384.79925537]
[255.83265686 388.46405029]
[267.68008423 397.66394043]
[274.83303833 410.84860229]
[276.08612061 425.79617310]
[271.22814941 439.98773193]
[261.07778931 451.03173828]
[247.34553528 457.06707764]
[232.34555054 457.07672119]
[218.60556030 451.05902100]
[208.44015503 440.02664185]
[211.32542419 454.74655151]
[214.21070862 469.46643066]
[224.46008301 477.29669189]
[226.56019592 489.61633301]
[219.92285156 499.72930908]
[222.58865356 514.49053955]
[225.25444031 529.25170898]
[237.95414734 538.27142334]
[240.44735718 553.27941895]
[231.77017212 565.33105469]
[234.43597412 580.09222412]
[237.10176086 594.85345459]
[247.16845703 607.05889893]
[241.81620789 620.95861816]
[244.48200989 635.71984863]
[254.54870605 647.92529297]
[249.19645691 661.82501221]
[251.86225891 676.58624268]
[254.52804565 691.34741211]
[269.49856567 693.61956787]
[282.91900635 700.63171387]
[293.33364868 711.62329102]
[299.61276245 725.40191650]
[301.07525635 740.47308350]
[297.56250000 755.20196533]
[289.45550537 767.99084473]
[277.63366699 777.45245361]
[263.37933350 782.56060791]
[248.23869324 782.76104736]
[233.85412598 778.03210449]
[221.78593445 768.88677979]
[213.34318542 756.31701660]
[209.44168091 741.68634033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 196]
[4 195]
[5 194]
[7 192]
[8 191]
[10 189]
[11 188]
[12 187]
[15 184]
[16 183]
[17 182]
[19 179]
[20 178]
[21 177]
[22 163]
[23 162]
[24 161]
[25 160]
[26 159]
[33 158]
[40 151]
[41 150]
[42 149]
[43 148]
[44 147]
[45 146]
[46 145]
[54 144]
[55 143]
[56 142]
[57 141]
[58 140]
[59 139]
[60 137]
[61 136]
[63 135]
[64 134]
[65 133]
[67 131]
[69 130]
[70 129]
[71 128]
[80 127]
[81 126]
[82 125]
[84 123]
[86 121]
[89 119]
[90 118]
[92 116]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
