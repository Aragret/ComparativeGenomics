%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[121.74027252 655.76452637]
[111.49906158 644.71618652]
[103.97355652 631.66571045]
[99.54122162 617.26776123]
[98.42440033 602.24438477]
[100.67909241 587.34930420]
[106.19221497 573.32958984]
[114.68723297 560.88842773]
[125.73802948 550.64984131]
[138.79031372 543.12750244]
[153.18937683 538.69866943]
[152.07373047 523.74023438]
[150.95808411 508.78176880]
[149.17561340 493.88806152]
[146.72988892 479.08877563]
[144.28416443 464.28952026]
[141.83842468 449.49023438]
[139.20040894 447.15075684]
[137.56448364 443.41729736]
[137.57347107 438.77474976]
[139.62936401 433.97677612]
[137.84689331 419.08306885]
[136.06442261 404.18936157]
[134.28196716 389.29562378]
[132.49949646 374.40191650]
[130.71702576 359.50820923]
[128.93457031 344.61447144]
[127.15209961 329.72076416]
[125.36963654 314.82705688]
[123.14451599 299.99301147]
[120.47872162 285.23178101]
[108.43753815 272.46554565]
[114.80789185 255.18840027]
[111.92262268 240.46850586]
[109.03734589 225.74861145]
[106.15207672 211.02873230]
[103.26679993 196.30883789]
[94.02141571 208.12081909]
[79.14892578 210.07247925]
[67.16896820 201.04580688]
[64.94420624 186.21171570]
[73.74908447 174.06782532]
[88.53977203 171.57070923]
[100.84297180 180.15003967]
[99.28244781 165.23143005]
[97.72192383 150.31283569]
[88.70252991 138.45956421]
[94.96215057 123.92933655]
[93.40162659 109.01072693]
[91.73008728 94.10415649]
[89.94761658 79.21044159]
[88.16515350 64.31671906]
[86.27185822 49.43668747]
[83.82613373 34.63741684]
[80.94085693 19.91752434]
[78.05558777 5.19763231]
[67.80828857 -6.85655546]
[72.95299530 -20.83444023]
[70.06771851 -35.55433273]
[66.85444641 -50.20611954]
[63.31477356 -64.78249359]
[59.77510071 -79.35887146]
[56.23543167 -93.93524933]
[52.69575882 -108.51161957]
[41.92043304 -120.09622192]
[46.43585968 -134.28988647]
[33.22181320 -142.53771973]
[29.83972740 -157.37065125]
[37.78420639 -169.91740417]
[34.24453354 -184.49377441]
[30.70486259 -199.07015991]
[27.16518974 -213.64653015]
[23.51710129 -228.19615173]
[19.76080132 -242.71821594]
[16.00450134 -257.24026489]
[1.07649040 -255.53713989]
[-13.94326878 -255.92823792]
[-28.76241302 -258.40594482]
[-43.09248352 -262.92205811]
[-56.65454483 -269.38864136]
[-69.18460083 -277.67984009]
[-80.43875122 -287.63424683]
[-90.19793701 -299.05810547]
[-98.27218628 -311.72903442]
[-104.50433350 -325.40042114]
[-108.77307129 -339.80609131]
[-110.99530029 -354.66571045]
[-111.12776947 -369.68997192]
[-109.16790009 -384.58645630]
[-105.15383911 -399.06518555]
[-99.16372681 -412.84429932]
[-91.31415558 -425.65563965]
[-81.75791931 -437.24981689]
[-70.68104553 -447.40112305]
[-58.29913330 -455.91195679]
[-44.85320663 -462.61666870]
[-30.60499382 -467.38473511]
[-15.83184242 -470.12338257]
[-0.82131392 -470.77926636]
[14.13440609 -469.33963013]
[28.74420166 -465.83248901]
[42.72368622 -460.32611084]
[55.80074692 -452.92767334]
[67.72083282 -443.78121948]
[78.25192261 -433.06478882]
[87.18901825 -420.98693848]
[94.35815430 -407.78277588]
[99.61979675 -393.70935059]
[102.87150574 -379.04058838]
[104.05000305 -364.06204224]
[103.13233185 -349.06524658]
[100.13637543 -334.34210205]
[95.12042999 -320.17926025]
[88.18214417 -306.85235596]
[79.45658112 -294.62081909]
[69.11357117 -283.72271729]
[57.35444641 -274.37023926]
[44.40810776 -266.74536133]
[30.52655983 -260.99658203]
[34.28285980 -246.47451782]
[38.03916168 -231.95245361]
[42.75751495 -226.26396179]
[41.74156570 -217.18620300]
[45.28123856 -202.60983276]
[48.82091141 -188.03344727]
[52.36058044 -173.45707703]
[65.17456055 -165.95123291]
[68.97193146 -151.21914673]
[61.01223373 -137.82955933]
[71.53437805 -127.28755951]
[67.27213287 -112.05129242]
[70.81180573 -97.47491455]
[74.35147858 -82.89854431]
[77.89115143 -68.32216644]
[81.43082428 -53.74579239]
[84.23553467 -51.60899353]
[86.14462280 -48.00754166]
[86.48094940 -43.37718582]
[84.78761292 -38.43960571]
[87.67288208 -23.71971321]
[97.71380615 -12.71839046]
[92.77548218 2.31235957]
[95.66075134 17.03225136]
[98.54602051 31.75214195]
[100.79454041 33.42615128]
[102.51544189 36.09169388]
[103.32774353 39.55226898]
[102.92856598 43.47721481]
[101.13739014 47.43267059]
[105.14633942 53.64154434]
[103.05886841 62.53425598]
[104.84133911 77.42797089]
[106.62380219 92.32169342]
[110.63240051 99.31480408]
[108.32022858 107.45020294]
[109.88075256 122.36881256]
[119.01176453 135.28915405]
[112.64053345 148.75230408]
[114.20105743 163.67091370]
[115.76158142 178.58952332]
[117.98669434 193.42356873]
[120.87197113 208.14344788]
[123.75724030 222.86334229]
[126.64250946 237.58323669]
[129.52778625 252.30313110]
[139.77716064 260.13339233]
[141.87727356 272.45300293]
[135.23994446 282.56597900]
[137.90573120 297.32720947]
[140.82676697 300.53991699]
[142.41390991 304.15179443]
[142.70545959 307.69442749]
[141.88792419 310.76010132]
[140.26335144 313.04458618]
[142.04582214 327.93829346]
[143.82827759 342.83203125]
[145.61074829 357.72573853]
[147.39321899 372.61944580]
[149.17567444 387.51318359]
[150.95814514 402.40689087]
[152.74061584 417.30059814]
[154.52307129 432.19433594]
[156.63769531 447.04452515]
[159.08343506 461.84378052]
[161.52915955 476.64306641]
[163.97488403 491.44232178]
[173.56785583 479.91085815]
[188.49186707 478.40286255]
[200.19775391 487.78222656]
[201.97985840 502.67599487]
[192.81732178 514.55230713]
[177.95884705 516.60797119]
[165.91653442 507.66613770]
[167.03218079 522.62457275]
[168.14782715 537.58300781]
[183.04457092 539.82690430]
[197.06831360 545.32983398]
[209.51565552 553.81579590]
[219.76220703 564.85913086]
[227.29403687 577.90594482]
[231.73335266 592.30181885]
[232.85745239 607.32458496]
[230.60998535 622.22076416]
[225.10365295 636.24322510]
[216.61466980 648.68847656]
[205.56883240 658.93237305]
[192.52020264 666.46105957]
[178.12327576 670.89685059]
[163.10021973 672.01733398]
[148.20457458 669.76623535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 195]
[12 194]
[13 193]
[14 186]
[15 185]
[16 184]
[17 183]
[21 182]
[22 181]
[23 180]
[24 179]
[25 178]
[26 177]
[27 176]
[28 175]
[29 174]
[30 169]
[31 168]
[33 165]
[34 164]
[35 163]
[36 162]
[37 161]
[44 160]
[45 159]
[46 158]
[48 156]
[49 155]
[50 153]
[51 152]
[52 151]
[53 149]
[54 144]
[55 143]
[56 142]
[58 140]
[59 139]
[60 135]
[61 134]
[62 133]
[63 132]
[64 131]
[66 129]
[69 126]
[70 125]
[71 124]
[72 123]
[73 121]
[74 120]
[75 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
