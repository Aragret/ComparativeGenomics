%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[95.22274780 639.82623291]
[83.37097168 649.13391113]
[69.69192505 655.45690918]
[54.92329407 658.45428467]
[39.86153030 657.96435547]
[25.31889915 654.01361084]
[12.07966518 646.81500244]
[0.85780269 636.75689697]
[-7.74150658 624.38153076]
[-13.25451279 610.35644531]
[-15.38390541 595.43792725]
[-14.01485062 580.43048096]
[-9.22117901 566.14355469]
[-1.26140773 553.34747314]
[9.43520355 542.73242188]
[22.29179955 534.87084961]
[36.61503983 530.18670654]
[51.63249207 528.93255615]
[53.85760880 514.09851074]
[56.08272552 499.26446533]
[58.30784225 484.43041992]
[60.53295898 469.59637451]
[62.75807571 454.76232910]
[60.64158249 447.68121338]
[65.12833405 439.72463989]
[67.57406616 424.92538452]
[68.80104065 409.97564697]
[68.80104065 394.97564697]
[68.80104065 379.97564697]
[68.80104065 364.97564697]
[68.80104065 349.97564697]
[68.80104065 334.97564697]
[58.25668716 345.64413452]
[43.33388901 347.16403198]
[30.85515404 338.84051514]
[26.52558708 324.47894287]
[32.32460785 310.64523315]
[45.60098648 303.66400146]
[60.28493500 306.72692871]
[69.66375732 318.43548584]
[71.22428131 303.51687622]
[72.78480530 288.59826660]
[74.34532928 273.67965698]
[75.90585327 258.76104736]
[69.53461456 245.29789734]
[78.66562653 232.37756348]
[80.22615051 217.45895386]
[73.85491943 203.99580383]
[82.98593140 191.07545471]
[84.54645538 176.15686035]
[86.10697937 161.23825073]
[87.66750336 146.31964111]
[81.29626465 132.85649109]
[90.42727661 119.93614960]
[91.98780060 105.01753998]
[89.69300079 100.30078125]
[90.20426941 94.63404083]
[93.82334137 89.68033600]
[95.82735443 74.81480408]
[90.00313568 60.10463715]
[99.37145233 48.52517319]
[101.37546539 33.65964508]
[103.37947845 18.79411888]
[101.39525604 13.96608067]
[101.45538330 9.32391644]
[103.14671326 5.61521959]
[105.81927490 3.31526828]
[108.48506927 -11.44594860]
[111.15086365 -26.20716667]
[109.59639740 -35.20835876]
[113.96780396 -41.16760635]
[116.85307312 -55.88749695]
[105.44938660 -46.14296722]
[90.60250092 -44.00521851]
[76.91288757 -50.13665390]
[68.62242126 -62.63737869]
[68.29999542 -77.63391113]
[76.04551697 -90.47941589]
[89.45894623 -97.19356537]
[104.38399506 -95.69591522]
[116.19596863 -86.45052338]
[121.23481750 -72.32191467]
[126.06081390 -86.52436829]
[123.17487335 -102.08013916]
[134.59556580 -111.64136505]
[139.42156982 -125.84381866]
[144.24757385 -140.04627991]
[149.07356262 -154.24873352]
[152.82986450 -168.77078247]
[155.49566650 -183.53199768]
[158.16145325 -198.29322815]
[160.82725525 -213.05444336]
[163.49304199 -227.81565857]
[149.33810425 -232.88391113]
[136.21047974 -240.21301270]
[124.46834564 -249.60299683]
[114.43199921 -260.79772949]
[106.37525940 -273.49176025]
[100.51791382 -287.33883667]
[97.01976013 -301.96118164]
[95.97621918 -316.95986938]
[97.41577148 -331.92575073]
[101.29914093 -346.45053101]
[107.52038574 -360.13796997]
[115.90978241 -372.61465454]
[126.23847198 -383.54025269]
[138.22467041 -392.61663818]
[151.54138184 -399.59625244]
[165.82533264 -404.28863525]
[180.68682861 -406.56585693]
[195.72045898 -406.36572266]
[210.51606750 -403.69369507]
[224.67004395 -398.62271118]
[237.79624939 -391.29107666]
[249.53657532 -381.89883423]
[259.57077026 -370.70217896]
[267.62506104 -358.00659180]
[273.47973633 -344.15838623]
[276.97506714 -329.53536987]
[278.01571655 -314.53646851]
[276.57327271 -299.57089233]
[272.68713379 -285.04684448]
[266.46322632 -271.36059570]
[258.07144165 -258.88552856]
[247.74064636 -247.96194458]
[235.75270081 -238.88786316]
[222.43464661 -231.91082764]
[208.14979553 -227.22116089]
[193.28784180 -224.94682312]
[178.25427246 -225.14985657]
[175.58847046 -210.38864136]
[172.92266846 -195.62742615]
[170.25688171 -180.86621094]
[167.59107971 -166.10499573]
[178.45202637 -176.45100403]
[193.00730896 -180.07643127]
[207.45220947 -176.03359985]
[218.01089478 -165.37928772]
[221.92332458 -150.89851379]
[218.16679382 -136.37651062]
[207.72328186 -125.60929871]
[193.32266235 -121.41140747]
[178.72924805 -124.88014221]
[167.75770569 -135.10879517]
[163.27601624 -149.42272949]
[158.45002747 -135.22027588]
[153.62402344 -121.01782227]
[148.79803467 -106.81536102]
[152.02915955 -92.27545166]
[140.26327515 -81.69837189]
[135.43727112 -67.49591827]
[131.57296753 -53.00222397]
[128.68769836 -38.28233337]
[125.91207886 -23.54137039]
[123.24628448 -8.78015327]
[120.58049011 5.98106384]
[118.24500275 20.79813194]
[116.24098969 35.66365814]
[114.23697662 50.52918625]
[120.20453644 64.17607117]
[110.69288635 76.81881714]
[108.68887329 91.68434906]
[106.90641022 106.57806396]
[105.34588623 121.49667358]
[111.60549927 136.02690125]
[102.58610535 147.88017273]
[101.02558136 162.79876709]
[99.46505737 177.71737671]
[97.90453339 192.63598633]
[104.16415405 207.16621399]
[95.14476013 219.01948547]
[93.58423615 233.93807983]
[99.84384918 248.46832275]
[90.82445526 260.32159424]
[89.26393127 275.24017334]
[87.70340729 290.15878296]
[86.14288330 305.07739258]
[84.58235931 319.99600220]
[83.80104065 334.97564697]
[83.80104065 349.97564697]
[83.80104065 364.97564697]
[83.80104065 379.97564697]
[83.80104065 394.97564697]
[83.80104065 409.97564697]
[92.25895691 397.58758545]
[105.46151733 390.46774292]
[120.45924377 390.20666504]
[133.90161133 396.86273193]
[142.78553772 408.94888306]
[145.12635803 423.76510620]
[140.40110779 438.00140381]
[129.66543579 448.47735596]
[115.31770325 452.85256958]
[100.56324005 450.14965820]
[88.69822693 440.97244263]
[82.37333679 427.37109375]
[79.92760468 442.17037964]
[77.59211731 456.98742676]
[75.36700439 471.82147217]
[73.14188385 486.65551758]
[70.91677094 501.48956299]
[68.69165039 516.32360840]
[66.46653748 531.15765381]
[80.45510101 536.76269531]
[92.77363586 545.44317627]
[102.75782013 556.73089600]
[109.86921692 570.01715088]
[113.72431946 584.58544922]
[114.11522675 599.65008545]
[111.02085876 614.39874268]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 203]
[19 202]
[20 201]
[21 200]
[22 199]
[23 198]
[25 197]
[26 196]
[27 184]
[28 183]
[29 182]
[30 181]
[31 180]
[32 179]
[40 178]
[41 177]
[42 176]
[43 175]
[44 174]
[46 172]
[47 171]
[49 169]
[50 168]
[51 167]
[52 166]
[54 164]
[55 163]
[58 162]
[59 161]
[61 159]
[62 158]
[63 157]
[67 156]
[68 155]
[69 154]
[71 153]
[72 152]
[82 151]
[83 150]
[85 148]
[86 147]
[87 146]
[88 145]
[89 134]
[90 133]
[91 132]
[92 131]
[93 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
