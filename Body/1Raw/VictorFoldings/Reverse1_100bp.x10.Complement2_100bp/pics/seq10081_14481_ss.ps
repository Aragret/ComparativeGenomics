%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[109.35522461 547.70733643]
[118.15747833 535.27996826]
[131.25671387 527.51275635]
[129.47425842 512.61901855]
[127.69178772 497.72531128]
[118.49691772 486.00762939]
[124.53950500 471.38583374]
[122.75704193 456.49209595]
[113.44466400 448.77160645]
[111.83776855 436.37799072]
[119.33867645 425.88516235]
[110.31928253 414.03189087]
[116.57889557 399.50167847]
[115.01837921 384.58306885]
[105.82198334 376.72476196]
[104.39978790 364.30859375]
[112.05608368 353.92861938]
[110.71784973 338.98843384]
[109.37961578 324.04824829]
[107.93019867 309.11843872]
[106.36967468 294.19982910]
[104.80915070 279.28125000]
[93.75082397 265.65478516]
[101.38855743 248.89929199]
[99.60609436 234.00556946]
[97.82362366 219.11184692]
[88.62875366 207.39419556]
[94.67134094 192.77236938]
[92.88887787 177.87864685]
[91.10640717 162.98493958]
[84.18051147 176.29026794]
[71.91754913 184.92854309]
[57.05711365 186.96995544]
[42.91905212 181.95845032]
[32.66184998 171.01359558]
[28.57699013 156.58050537]
[31.57704163 141.88357544]
[40.99178696 130.20613098]
[54.71794128 124.15695190]
[69.68905640 125.08743286]
[82.56053925 132.78970337]
[90.45687866 145.54307556]
[91.12666321 130.55802917]
[91.79644775 115.57299805]
[82.40619659 99.47593689]
[92.73791504 83.96633148]
[92.96124268 68.96799469]
[93.18457031 53.96965790]
[85.65358734 40.05581665]
[93.57952118 27.44515228]
[93.80284882 12.44681549]
[86.27187347 -1.46702397]
[94.19780731 -14.07768822]
[94.42113495 -29.07602501]
[80.84158325 -35.95769119]
[71.63406372 -48.00379181]
[68.58226776 -62.79252625]
[72.23904419 -77.37981415]
[81.82714844 -88.88537598]
[95.40366364 -95.06141663]
[95.62699127 -110.05976105]
[95.85031891 -125.05809784]
[95.62699127 -140.05642700]
[94.95720673 -155.04147339]
[94.28742218 -170.02650452]
[93.61763763 -185.01155090]
[92.94785309 -199.99658203]
[92.27806854 -214.98162842]
[90.49559784 -229.87535095]
[87.61032867 -244.59523010]
[84.72505951 -259.31512451]
[81.83978271 -274.03500366]
[78.95451355 -288.75491333]
[73.03739929 -274.97131348]
[61.45089340 -265.44488525]
[46.78344727 -262.30386353]
[32.31180573 -266.24993896]
[21.26897430 -276.40158081]
[16.12194633 -290.49087524]
[18.02058029 -305.37023926]
[26.54071808 -317.71554565]
[39.77893829 -324.76889038]
[54.77779007 -324.95449829]
[68.18649292 -318.23089600]
[77.00951385 -306.10015869]
[76.56290436 -321.09350586]
[76.11630249 -336.08685303]
[75.66969299 -351.08020020]
[72.28616333 -359.56488037]
[75.32972717 -366.29974365]
[75.10639954 -381.29806519]
[74.88307190 -396.29641724]
[64.20263672 -404.50268555]
[60.25622940 -417.17691040]
[64.27065277 -429.62548828]
[74.56705475 -437.37231445]
[74.56705475 -452.37231445]
[74.56705475 -467.37231445]
[74.56705475 -482.37231445]
[60.79318619 -488.94827271]
[51.24325943 -500.85464478]
[47.81342316 -515.72741699]
[51.18466568 -530.61358643]
[60.68762970 -542.55743408]
[74.43550110 -549.18762207]
[89.69861603 -549.18762207]
[103.44647980 -542.55743408]
[112.94944763 -530.61358643]
[116.32069397 -515.72741699]
[112.89085388 -500.85464478]
[103.34092712 -488.94827271]
[89.56705475 -482.37231445]
[89.56705475 -467.37231445]
[89.56705475 -452.37231445]
[89.56705475 -437.37231445]
[101.95631409 -425.99932861]
[102.29339600 -408.84701538]
[89.88140869 -396.51974487]
[90.10473633 -381.52139282]
[90.32806396 -366.52307129]
[90.66304016 -351.52679443]
[91.10964966 -336.53344727]
[91.55625916 -321.54010010]
[92.00286102 -306.54675293]
[93.67440033 -291.64016724]
[96.55967712 -276.92028809]
[99.44494629 -262.20040894]
[102.33022308 -247.48051453]
[105.21549225 -232.76062012]
[111.56992340 -246.34815979]
[123.80992889 -255.01893616]
[138.73599243 -256.50643921]
[152.44647217 -250.42181396]
[161.35749817 -238.35559082]
[163.13973999 -223.46185303]
[157.32733154 -209.63377380]
[145.43960571 -200.48597717]
[130.58399963 -198.40969849]
[116.64373016 -203.94764709]
[107.26310730 -215.65141296]
[107.93289185 -200.66636658]
[108.60267639 -185.68133545]
[109.27246094 -170.69628906]
[109.94224548 -155.71125793]
[110.61203003 -140.72621155]
[112.58734894 -138.73718262]
[113.89379883 -135.84585571]
[114.18376160 -132.30307007]
[113.20677185 -128.48075867]
[110.84865570 -124.83477020]
[110.62532806 -109.83643341]
[110.40200043 -94.83808899]
[123.78862000 -88.26055908]
[133.02990723 -76.47463226]
[136.25074768 -61.78493118]
[132.75997925 -47.09361649]
[123.19788361 -35.32699966]
[109.41947174 -28.85269737]
[109.19614410 -13.85436058]
[116.74309540 -1.01330245]
[108.80118561 12.67014313]
[108.57785797 27.66847992]
[116.12480927 40.50954056]
[108.18290710 54.19298553]
[107.95957947 69.19132233]
[107.73625183 84.18965912]
[115.07003784 90.90547180]
[117.59380341 100.52406311]
[114.50200653 109.97538757]
[106.78148651 116.24278259]
[106.11170197 131.22781372]
[105.44191742 146.21286011]
[106.00012970 161.20246887]
[107.78259277 176.09619141]
[109.56505585 190.98989868]
[118.88742828 203.77285767]
[112.71734619 217.32939148]
[114.49980927 232.22309875]
[116.28227234 247.11682129]
[125.92088318 255.68769836]
[127.09888458 268.12942505]
[119.72776031 277.72070312]
[121.28828430 292.63931274]
[122.84880066 307.55792236]
[126.85401917 315.76742554]
[124.31980133 322.71002197]
[125.65803528 337.65020752]
[126.99626923 352.59039307]
[137.93606567 367.40261841]
[129.93698120 383.02255249]
[131.49749756 397.94113159]
[140.62852478 410.86148071]
[134.25727844 424.32464600]
[145.41639709 438.97235107]
[137.65075684 454.70962524]
[139.43322754 469.60336304]
[148.75558472 482.38632202]
[142.58551025 495.94284058]
[144.36796570 510.83654785]
[146.15043640 525.73028564]
[160.71263123 530.18701172]
[172.19888306 540.18627930]
[178.61914062 553.99572754]
[178.86103821 569.22271729]
[172.88267517 583.22912598]
[161.71983337 593.58819580]
[147.30654907 598.50524902]
[132.14001465 597.12829590]
[118.84791565 589.69592285]
[109.73318481 577.49584961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 200]
[4 199]
[5 198]
[7 196]
[8 195]
[11 193]
[13 191]
[14 190]
[17 188]
[18 187]
[19 186]
[20 184]
[21 183]
[22 182]
[24 179]
[25 178]
[26 177]
[28 175]
[29 174]
[30 173]
[42 172]
[43 171]
[44 170]
[46 166]
[47 165]
[48 164]
[50 162]
[51 161]
[53 159]
[54 158]
[60 152]
[61 151]
[62 150]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[69 129]
[70 128]
[71 127]
[72 126]
[73 125]
[85 124]
[86 123]
[87 122]
[88 121]
[90 120]
[91 119]
[92 118]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
