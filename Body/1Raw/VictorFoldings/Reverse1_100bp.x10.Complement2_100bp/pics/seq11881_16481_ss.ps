%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[299.09552002 481.98898315]
[292.01843262 468.76345825]
[284.94131470 455.53790283]
[277.86419678 442.31237793]
[270.59097290 429.19369507]
[263.12322998 416.18475342]
[255.65550232 403.17578125]
[248.18775940 390.16683960]
[242.13148499 385.93087769]
[240.70732117 376.90814209]
[233.43409729 363.78945923]
[226.16085815 350.67074585]
[218.88763428 337.55206299]
[211.61441040 324.43334961]
[197.73864746 328.64324951]
[183.28410339 329.86880493]
[168.88558960 328.05364990]
[155.17599487 323.27502441]
[142.75845337 315.74047852]
[132.17982483 305.77886963]
[123.90660858 293.82601929]
[118.30432892 280.40557861]
[115.62146759 266.10617065]
[115.97836304 251.55557251]
[119.36187744 237.39311218]
[125.62582397 224.24153137]
[134.49728394 212.67976379]
[145.58851624 203.21725464]
[138.51141357 189.99172974]
[131.43429565 176.76618958]
[119.95176697 172.96121216]
[113.94747162 162.00073242]
[117.11858368 149.49845886]
[110.23916626 136.16902161]
[103.35975647 122.83959198]
[96.48034668 109.51016235]
[90.27890015 104.36092377]
[89.59940338 95.93067169]
[82.91921234 82.50029755]
[76.23901367 69.06992340]
[69.55882263 55.63954544]
[62.87862778 42.20916748]
[56.19843292 28.77879143]
[49.51823807 15.34841633]
[42.83804321 1.91804028]
[27.57884216 0.86730075]
[14.97755432 -7.62412691]
[8.36245060 -21.19272232]
[9.42009640 -36.15057373]
[17.76655579 -48.48759842]
[11.08636189 -61.91797638]
[4.40616703 -75.34835052]
[-2.27402759 -88.77872467]
[-9.44913387 -75.60610962]
[-24.19423294 -72.85255432]
[-35.63978577 -82.54788208]
[-35.34855652 -97.54505157]
[-23.53522873 -106.78871155]
[-8.90944672 -103.46580505]
[-14.57223320 -117.35583496]
[-20.70980644 -124.12104034]
[-20.21422958 -131.49505615]
[-25.66958809 -145.46786499]
[-31.12494469 -159.44065857]
[-35.52774811 -145.10136414]
[-46.91501617 -135.33764648]
[-61.75828552 -133.17491150]
[-75.45819855 -139.28329468]
[-83.76969910 -151.77005005]
[-84.11736298 -166.76602173]
[-76.39347839 -179.62454224]
[-62.99136734 -186.36126709]
[-48.06381989 -184.88873291]
[-36.23614883 -175.66302490]
[-39.77582169 -190.23941040]
[-43.31549454 -204.81578064]
[-49.05687332 -190.95805359]
[-60.89749527 -181.74937439]
[-75.74224854 -179.59687805]
[-89.71075439 -185.06321716]
[-99.15167999 -196.71951294]
[-101.59718323 -211.51881409]
[-96.40802002 -225.59263611]
[-84.94062042 -235.26211548]
[-70.19254303 -237.99967957]
[-56.01889801 -233.08972168]
[-46.12503433 -221.81648254]
[-47.46326828 -236.75666809]
[-48.80150223 -251.69685364]
[-50.13973618 -266.63705444]
[-51.47797012 -281.57723999]
[-66.34444427 -284.15606689]
[-80.03649139 -290.49563599]
[-91.62058258 -300.16369629]
[-100.30686951 -312.50106812]
[-105.50312805 -326.66656494]
[-106.85505676 -341.69436646]
[-104.27048492 -356.55984497]
[-97.92563629 -370.24945068]
[-88.25309753 -381.82977295]
[-75.91237640 -390.51132202]
[-61.74487305 -395.70208740]
[-46.71655655 -397.04821777]
[-31.85207748 -394.45791626]
[-18.16492462 -388.10778809]
[-6.58831072 -378.43078613]
[2.08845282 -366.08670044]
[7.27376938 -351.91720581]
[8.61409473 -336.88836670]
[6.01804447 -322.02487183]
[-0.33737901 -308.34017944]
[-10.01885223 -296.76730347]
[-22.36627769 -288.09530640]
[-36.53778458 -282.91546631]
[-35.19955063 -267.97528076]
[-33.86131668 -253.03509521]
[-32.52308273 -238.09490967]
[-31.18484688 -223.15472412]
[-28.73912048 -208.35545349]
[-25.19944763 -193.77908325]
[-21.65977478 -179.20269775]
[-17.15214729 -164.89601135]
[-11.69678974 -150.92321777]
[-6.24143267 -136.95042419]
[-0.68220663 -123.01862335]
[4.98057985 -109.12859344]
[11.15634823 -95.45892334]
[17.83654213 -82.02854919]
[24.51673698 -68.59816742]
[31.19693184 -55.16779327]
[46.07127380 -54.38066864]
[58.63811111 -46.19955826]
[65.46780396 -32.73769760]
[64.63684845 -17.56514740]
[56.26841736 -4.76215410]
[62.94861221 8.66822147]
[69.62880707 22.09859848]
[76.30900574 35.52897263]
[82.98919678 48.95935059]
[89.66939545 62.38972473]
[96.34958649 75.82009888]
[103.02977753 89.25048065]
[109.80977631 102.63075256]
[116.68918610 115.96018219]
[123.56859589 129.28961182]
[130.44801331 142.61903381]
[146.17018127 152.20521545]
[144.65983582 169.68908691]
[151.73693848 182.91461182]
[158.81404114 196.14015198]
[173.79113770 192.00466919]
[189.30560303 191.29740906]
[204.58312988 194.05052185]
[218.86192322 200.12362671]
[231.43067932 209.21080017]
[241.66401672 220.85609436]
[249.05361938 234.47636414]
[253.23347473 249.39048767]
[253.99798584 264.85342407]
[251.31207275 280.09338379]
[245.31283569 294.35046387]
[236.30245972 306.91442871]
[224.73309326 317.16012573]
[232.00633240 330.27883911]
[239.27955627 343.39752197]
[246.55279541 356.51620483]
[253.82601929 369.63491821]
[261.19671631 382.69909668]
[268.66445923 395.70803833]
[276.13220215 408.71701050]
[283.59994507 421.72595215]
[289.11614990 425.37051392]
[291.59204102 430.48590088]
[291.08972168 435.23529053]
[298.16683960 448.46081543]
[305.24395752 461.68634033]
[312.32104492 474.91186523]
[326.61062622 470.22366333]
[341.49722290 468.08822632]
[356.52847290 468.57043457]
[371.24758911 471.65570068]
[385.20727539 477.25018311]
[397.98330688 485.18389893]
[409.18743896 495.21578979]
[418.47921753 507.04095459]
[425.57620239 520.30004883]
[430.26278687 534.59014893]
[432.39654541 549.47698975]
[431.91259766 564.50817871]
[428.82571411 579.22692871]
[423.22964478 593.18603516]
[415.29446411 605.96112061]
[405.26132202 617.16412354]
[393.43508911 626.45452881]
[380.17520142 633.55004883]
[365.88455200 638.23498535]
[350.99746704 640.36706543]
[335.96630859 639.88140869]
[321.24789429 636.79284668]
[307.28948975 631.19519043]
[294.51525879 623.25860596]
[283.31338501 613.22418213]
[274.02432251 601.39691162]
[266.93032837 588.13616943]
[262.24697876 573.84503174]
[260.11660767 558.95770264]
[260.60394287 543.92657471]
[263.69421387 529.20855713]
[269.29342651 515.25073242]
[277.23150635 502.47741699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 177]
[2 176]
[3 175]
[4 174]
[5 171]
[6 170]
[7 169]
[8 168]
[10 167]
[11 166]
[12 165]
[13 164]
[14 163]
[28 150]
[29 149]
[30 148]
[33 146]
[34 145]
[35 144]
[36 143]
[38 142]
[39 141]
[40 140]
[41 139]
[42 138]
[43 137]
[44 136]
[45 135]
[50 130]
[51 129]
[52 128]
[53 127]
[59 126]
[60 125]
[62 124]
[63 123]
[64 122]
[74 121]
[75 120]
[76 119]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
