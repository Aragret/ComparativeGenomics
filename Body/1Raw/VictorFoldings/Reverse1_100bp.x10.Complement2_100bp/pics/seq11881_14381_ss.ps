%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[141.80830383 641.61602783]
[137.67671204 627.16174316]
[135.91737366 612.23187256]
[136.57588196 597.21313477]
[139.63517761 582.49456787]
[145.01600647 568.45733643]
[152.57901001 555.46514893]
[162.12826538 543.85449219]
[173.41642761 533.92602539]
[186.15112305 525.93707275]
[200.00248718 520.09448242]
[196.46281433 505.51809692]
[192.92314148 490.94171143]
[189.38346863 476.36535645]
[176.60377502 464.33843994]
[181.93447876 446.71276855]
[178.17817688 432.19070435]
[174.42187500 417.66864014]
[161.49757385 410.35440063]
[157.48127747 395.68048096]
[165.24073792 382.17388916]
[161.48443604 367.65182495]
[157.72814941 353.12976074]
[153.97184753 338.60769653]
[150.21554565 324.08563232]
[137.29122925 316.77142334]
[133.27493286 302.09750366]
[141.03440857 288.59088135]
[137.27810669 274.06881714]
[133.52180481 259.54675293]
[129.76550293 245.02470398]
[119.08757019 234.64053345]
[123.12249756 219.34249878]
[112.44456482 208.95832825]
[116.47949982 193.66029358]
[112.72319794 179.13822937]
[102.04526520 168.75405884]
[106.08019257 153.45602417]
[102.32389069 138.93395996]
[98.56758881 124.41190338]
[94.81128693 109.88984680]
[90.94698334 95.39615631]
[86.97489166 80.93163300]
[83.00279236 66.46710968]
[79.03069305 52.00258255]
[75.05860138 37.53805923]
[64.25521851 30.49180031]
[61.24463272 18.36249161]
[67.11141968 7.78386497]
[63.35511780 -6.73819447]
[59.59881973 -21.26025391]
[48.65221024 -32.68313980]
[52.95581436 -46.94246292]
[49.19951248 -61.46451950]
[45.33520889 -75.95821381]
[41.36311340 -90.42273712]
[37.39101410 -104.88726044]
[33.41891861 -119.35178375]
[29.44682312 -133.81631470]
[18.33135796 -145.07495117]
[22.42218590 -159.39675903]
[18.45009041 -173.86129761]
[2.48419881 -175.75830078]
[-11.49773502 -183.61807251]
[-21.36922455 -196.21130371]
[-25.64198112 -211.59140015]
[-23.69023323 -227.39537048]
[-15.84220028 -241.20686340]
[-3.32532835 -250.92561340]
[-7.51233959 -265.32940674]
[-11.69935036 -279.73318481]
[-15.88636208 -294.13696289]
[-26.79345512 -301.02157593]
[-29.98429489 -313.10473633]
[-24.27565765 -323.76953125]
[-28.24775314 -338.23406982]
[-32.21984863 -352.69857788]
[-36.19194412 -367.16311646]
[-40.16404343 -381.62762451]
[-44.13613892 -396.09216309]
[-48.10823441 -410.55667114]
[-63.11874771 -409.47470093]
[-78.05188751 -411.34222412]
[-92.33365631 -416.08743286]
[-105.41510773 -423.52798462]
[-116.79342651 -433.37786865]
[-126.03125000 -445.25848389]
[-132.77351379 -458.71316528]
[-136.76106262 -473.22473145]
[-137.84060669 -488.23541260]
[-135.97067261 -503.16824341]
[-131.22312927 -517.44927979]
[-123.78045654 -530.52947998]
[-113.92873383 -541.90625000]
[-102.04663849 -551.14215088]
[-88.59087372 -557.88220215]
[-74.07865906 -561.86743164]
[-59.06779480 -562.94451904]
[-44.13526154 -561.07220459]
[-29.85502815 -556.32232666]
[-16.77598572 -548.87750244]
[-5.40085888 -539.02398682]
[3.83312273 -527.14038086]
[10.57102871 -513.68353271]
[14.55387402 -499.17065430]
[15.62856579 -484.15960693]
[13.75379848 -469.22738647]
[9.00163078 -454.94793701]
[1.55472541 -441.87008667]
[-8.30067921 -430.49655151]
[-20.18576813 -421.26449585]
[-33.64371109 -414.52877808]
[-29.67161369 -400.06423950]
[-25.69951820 -385.59973145]
[-21.72742081 -371.13519287]
[-17.75532532 -356.67068481]
[-13.78322887 -342.20614624]
[-9.81113338 -327.74163818]
[3.32098484 -316.10055542]
[-1.48257995 -298.32397461]
[2.70443130 -283.92019653]
[6.89144230 -269.51641846]
[11.07845402 -255.11262512]
[25.07588005 -254.10693359]
[37.91659927 -248.37156677]
[48.04986572 -238.57685852]
[54.24428177 -225.88467407]
[55.73745346 -211.81068420]
[52.32974243 -198.04330444]
[44.41069031 -186.24119568]
[32.91461182 -177.83338928]
[36.88671112 -163.36886597]
[47.71806335 -153.14482117]
[43.91134644 -137.78840637]
[47.88344193 -123.32388306]
[51.85554123 -108.85935974]
[55.82763672 -94.39483643]
[59.79973221 -79.93031311]
[64.60225677 -74.31269836]
[63.72157288 -65.22082520]
[67.47787476 -50.69876099]
[78.15580750 -40.31459045]
[74.12088013 -25.01655388]
[77.87717438 -10.49449539]
[81.63347626 4.02756405]
[94.59082031 15.86285686]
[89.52312469 33.56596375]
[93.49521637 48.03048706]
[97.46731567 62.49501038]
[101.43941498 76.95953369]
[105.41150665 91.42405701]
[110.41312408 97.74516296]
[109.33335114 106.13354492]
[113.08965302 120.65560913]
[116.84594727 135.17765808]
[120.60224915 149.69972229]
[131.54885864 161.12260437]
[127.24525452 175.38192749]
[131.00155640 189.90399170]
[141.94816589 201.32687378]
[137.64456177 215.58619690]
[148.59117126 227.00907898]
[144.28756714 241.26840210]
[148.04386902 255.79046631]
[151.80017090 270.31253052]
[155.55645752 284.83459473]
[168.89184570 292.88476562]
[172.49440002 307.66571045]
[164.73759460 320.32934570]
[168.49389648 334.85140991]
[172.25019836 349.37347412]
[176.00650024 363.89550781]
[179.76280212 378.41757202]
[193.09819031 386.46777344]
[196.70072937 401.24868774]
[188.94393921 413.91235352]
[192.70024109 428.43438721]
[196.45654297 442.95645142]
[207.15380859 450.16278076]
[209.98347473 462.33557129]
[203.95983887 472.82568359]
[207.49951172 487.40203857]
[211.03918457 501.97842407]
[214.57885742 516.55480957]
[229.56715393 515.39410400]
[244.54753113 516.65283203]
[259.13195801 520.29846191]
[272.94268799 526.23645020]
[285.62194824 534.31311035]
[296.84136963 544.31915283]
[306.31027222 555.99548340]
[313.78347778 569.03955078]
[319.06732178 583.11352539]
[322.02499390 597.85284424]
[322.57986450 612.87579346]
[320.71759033 627.79315186]
[316.48635864 642.21856689]
[309.99578857 655.77844238]
[301.41403198 668.12139893]
[290.96334839 678.92785645]
[278.91442871 687.91784668]
[265.57940674 694.85852051]
[251.30363464 699.57006836]
[236.45693970 701.93048096]
[221.42385864 701.87866211]
[206.59379578 699.41583252]
[192.35087585 694.60589600]
[179.06404114 687.57342529]
[167.07743835 678.50048828]
[156.70155334 667.62219238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 184]
[12 183]
[13 182]
[14 181]
[16 178]
[17 177]
[18 176]
[21 173]
[22 172]
[23 171]
[24 170]
[25 169]
[28 166]
[29 165]
[30 164]
[31 163]
[33 161]
[35 159]
[36 158]
[38 156]
[39 155]
[40 154]
[41 153]
[42 151]
[43 150]
[44 149]
[45 148]
[46 147]
[49 145]
[50 144]
[51 143]
[53 141]
[54 140]
[55 138]
[56 137]
[57 136]
[58 135]
[59 134]
[61 132]
[62 131]
[69 123]
[70 122]
[71 121]
[72 120]
[75 118]
[76 117]
[77 116]
[78 115]
[79 114]
[80 113]
[81 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
