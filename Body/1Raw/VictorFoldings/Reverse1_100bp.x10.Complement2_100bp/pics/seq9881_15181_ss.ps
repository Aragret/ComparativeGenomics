%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[162.03292847 879.49584961]
[147.58068848 875.46575928]
[133.36560059 870.66571045]
[119.42867279 865.10955811]
[105.81006622 858.81329346]
[92.54904938 851.79510498]
[79.68386841 844.07525635]
[67.25160980 835.67602539]
[55.28812027 826.62152100]
[43.82789230 816.93786621]
[32.90396881 806.65307617]
[22.54785156 795.79675293]
[12.78939438 784.40020752]
[3.65673566 772.49627686]
[-4.82379293 760.11932373]
[-12.62773991 747.30493164]
[-19.73260307 734.09020996]
[-26.11789894 720.51312256]
[-31.76521683 706.61285400]
[-36.65827179 692.42950439]
[-40.78295898 678.00396729]
[-44.12738419 663.37786865]
[-46.68190384 648.59326172]
[-48.43915176 633.69293213]
[-49.39406586 618.71972656]
[-49.54388809 603.71679688]
[-48.88819122 588.72753906]
[-47.42885971 573.79504395]
[-45.17010498 558.96240234]
[-42.11843872 544.27239990]
[-38.28266144 529.76733398]
[-33.67383194 515.48913574]
[-28.30523682 501.47885132]
[-22.19235611 487.77697754]
[-15.35281467 474.42297363]
[-7.80633450 461.45532227]
[0.42532754 448.91143799]
[9.31843662 436.82751465]
[18.84735107 425.23834229]
[28.98459816 414.17736816]
[39.70094681 403.67645264]
[50.96550369 393.76593018]
[62.74578476 384.47430420]
[75.00782776 375.82843018]
[87.71627045 367.85317993]
[100.83448792 360.57159424]
[114.32463837 354.00463867]
[128.14782715 348.17126465]
[142.26422119 343.08828735]
[156.63308716 338.77035522]
[153.09341431 324.19396973]
[149.55374146 309.61758423]
[145.79743958 295.09552002]
[141.82534790 280.63101196]
[137.85325623 266.16647339]
[133.88114929 251.70196533]
[123.04979706 241.47792053]
[126.85651398 226.12150574]
[122.88442230 211.65698242]
[112.05307007 201.43293762]
[115.85978699 186.07652283]
[111.88768768 171.61199951]
[107.91558838 157.14747620]
[103.94349670 142.68295288]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[84.20993805 104.24072266]
[72.64874268 113.79785156]
[57.87465286 116.39137268]
[43.74958801 111.34335327]
[33.96580124 99.97332764]
[31.08075142 85.25339508]
[35.84858322 71.03130341]
[47.02299881 61.02468491]
[61.68302917 57.84923935]
[75.99658203 62.33501816]
[86.22171021 73.30867004]
[84.43923950 58.41495514]
[82.65677643 43.52123642]
[71.18055725 36.47063446]
[65.93699646 24.27573586]
[68.63455200 11.47709274]
[78.06914520 2.70110226]
[76.50862122 -12.21750259]
[74.94809723 -27.13610649]
[72.27410889 -30.55717850]
[70.95999908 -34.27708054]
[70.93274689 -37.83160400]
[71.97602844 -40.82796478]
[73.76601410 -42.98529816]
[73.09622955 -57.97033691]
[72.42644501 -72.95537567]
[71.75666046 -87.94041443]
[71.08687592 -102.92545319]
[56.69399261 -107.74305725]
[45.01584244 -117.43766022]
[37.63180542 -130.69815063]
[35.54051208 -145.73114014]
[39.02478409 -160.50355530]
[47.61341095 -173.01754761]
[60.14485168 -181.58068848]
[74.92432404 -185.03489685]
[89.95303345 -182.91302490]
[103.19846344 -175.50202942]
[112.86928558 -163.80416870]
[117.65760040 -149.40151978]
[116.91581726 -134.24189758]
[110.74427032 -120.37551880]
[99.97760010 -109.67770386]
[86.07191467 -103.59523773]
[86.74169922 -88.61019897]
[87.41148376 -73.62516022]
[88.08126831 -58.64012146]
[88.75105286 -43.65508270]
[89.86670685 -28.69663048]
[91.42722321 -13.77802563]
[92.98774719 1.14057922]
[106.49296570 11.16294861]
[108.61266327 28.18710136]
[97.55049133 41.73877335]
[99.33296204 56.63248825]
[101.11542511 71.52620697]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[118.40802002 138.71084595]
[122.38011932 153.17538452]
[126.35221100 167.63990784]
[130.32431030 182.10443115]
[141.43977356 193.36306763]
[137.34893799 207.68487549]
[141.32104492 222.14939880]
[152.43650818 233.40805054]
[148.34567261 247.72985840]
[152.31777954 262.19439697]
[156.28987122 276.65890503]
[160.26196289 291.12344360]
[164.68974304 296.03326416]
[165.80577087 301.60565186]
[164.13012695 306.07791138]
[167.66979980 320.65429688]
[171.20945740 335.23068237]
[185.95837402 332.47775269]
[200.83380127 330.52047729]
[215.79283142 329.36447144]
[230.79235840 329.01309204]
[245.78910828 329.46737671]
[260.73986816 330.72595215]
[275.60150146 332.78521729]
[290.33117676 335.63925171]
[304.88644409 339.27981567]
[319.22531128 343.69638062]
[333.30642700 348.87628174]
[347.08920288 354.80453491]
[360.53390503 361.46401978]
[373.60174561 368.83560181]
[386.25509644 376.89801025]
[398.45742798 385.62796021]
[410.17355347 395.00030518]
[421.36972046 404.98803711]
[432.01367188 415.56234741]
[442.07464600 426.69274902]
[451.52368164 438.34713745]
[460.33352661 450.49191284]
[468.47879028 463.09204102]
[475.93597412 476.11126709]
[482.68356323 489.51196289]
[488.70211792 503.25552368]
[493.97430420 517.30236816]
[498.48489380 531.61193848]
[502.22088623 546.14294434]
[505.17153931 560.85363770]
[507.32827759 575.70141602]
[508.68496704 590.64361572]
[509.23760986 605.63702393]
[508.98468018 620.63854980]
[507.92687988 635.60485840]
[506.06726074 650.49279785]
[503.41119385 665.25946045]
[499.96633911 679.86224365]
[495.74261475 694.25909424]
[490.75216675 708.40844727]
[485.00946045 722.26959229]
[478.53100586 735.80242920]
[471.33547974 748.96807861]
[463.44366455 761.72845459]
[454.87826538 774.04687500]
[445.66400146 785.88775635]
[435.82745361 797.21697998]
[425.39697266 808.00189209]
[414.40261841 818.21136475]
[402.87609863 827.81597900]
[390.85067749 836.78802490]
[378.36096191 845.10168457]
[365.44302368 852.73291016]
[352.13409424 859.65979004]
[338.47253418 865.86224365]
[324.49774170 871.32250977]
[310.25003052 876.02478027]
[295.77041626 879.95544434]
[281.10070801 883.10327148]
[266.28320312 885.45910645]
[251.36058044 887.01623535]
[236.37588501 887.77008057]
[221.37234497 887.71850586]
[206.39320374 886.86169434]
[191.48162842 885.20208740]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 145]
[51 144]
[52 143]
[53 140]
[54 139]
[55 138]
[56 137]
[58 135]
[59 134]
[61 132]
[62 131]
[63 130]
[64 129]
[65 128]
[66 127]
[68 125]
[79 124]
[80 123]
[81 122]
[85 119]
[86 118]
[87 117]
[92 116]
[93 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
