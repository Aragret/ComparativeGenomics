%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[135.20127869 473.10324097]
[129.19738770 459.28115845]
[126.54350281 444.44696045]
[127.38276672 429.40060425]
[131.66992188 414.95358276]
[139.17373657 401.88491821]
[149.48957825 390.89947510]
[162.06109619 382.58963013]
[176.21034241 377.40353394]
[174.42788696 362.50982666]
[172.64541626 347.61611938]
[170.86294556 332.72238159]
[169.08049011 317.82867432]
[152.26222229 309.67767334]
[143.68635559 292.90316772]
[146.97943115 274.20117188]
[160.98902893 261.16021729]
[151.28010559 249.86480713]
[156.66377258 234.98774719]
[154.21804810 220.18847656]
[151.77232361 205.38920593]
[146.63035583 191.29806519]
[138.96975708 178.40173340]
[131.30915833 165.50541687]
[123.55277252 152.66647339]
[115.70101929 139.88563538]
[107.84925842 127.10478973]
[99.99750519 114.32394409]
[87.79519653 107.49787140]
[87.22164917 93.52780914]
[79.36989594 80.74697113]
[71.51814270 67.96612549]
[63.66638565 55.18528366]
[47.27477264 46.79501724]
[47.48055267 29.24723625]
[39.43937683 16.58471298]
[32.19719696 11.01796818]
[31.37437630 3.67325830]
[23.52262115 -9.10758400]
[17.90033913 -12.58630371]
[15.27323437 -17.62568283]
[15.63391399 -22.38792610]
[8.16617298 -35.39687729]
[0.69843149 -48.40583038]
[-6.76930952 -61.41478348]
[-6.37115765 -46.42006683]
[-10.80047226 -32.08894348]
[-19.58981705 -19.93380165]
[-31.81163406 -11.23741150]
[-46.17612076 -6.91751814]
[-61.16736221 -7.43001223]
[-75.20330048 -12.72080898]
[-86.80268097 -22.23155785]
[-94.74140167 -34.95856476]
[-98.18166351 -49.55872345]
[-96.76040649 -64.49124146]
[-90.62763214 -78.18025208]
[-80.43053436 -89.18112183]
[-67.24523926 -96.33290863]
[-52.46322632 -98.88085938]
[-37.64447403 -96.55609131]
[-24.35284042 -89.60393524]
[-13.99091434 -78.75791168]
[-17.96301079 -93.22243500]
[-31.41676903 -101.07318115]
[-35.23898697 -115.79885101]
[-27.67159271 -128.57656860]
[-31.64368820 -143.04109192]
[-35.61578369 -157.50561523]
[-39.58788300 -171.97013855]
[-43.55997849 -186.43466187]
[-47.53207397 -200.89918518]
[-51.50416946 -215.36370850]
[-55.47626495 -229.82823181]
[-70.37030029 -227.85806274]
[-85.39387512 -227.93438721]
[-100.26712036 -230.05577087]
[-114.71295929 -234.18270874]
[-128.46226501 -240.23831177]
[-141.25889587 -248.10978699]
[-152.86447144 -257.65045166]
[-163.06277466 -268.68261719]
[-171.66381836 -281.00070190]
[-178.50737000 -294.37530518]
[-183.46594238 -308.55718994]
[-186.44717407 -323.28222656]
[-187.39549255 -338.27603149]
[-186.29325867 -353.25930786]
[-183.16099548 -367.95294189]
[-178.05706787 -382.08319092]
[-171.07653809 -395.38677979]
[-162.34947205 -407.61593628]
[-152.03842163 -418.54278564]
[-140.33549500 -427.96377563]
[-127.45871735 -435.70343018]
[-113.64795685 -441.61755371]
[-99.16050720 -445.59594727]
[-84.26626587 -447.56448364]
[-69.24269104 -447.48654175]
[-54.36967850 -445.36355591]
[-39.92428970 -441.23504639]
[-26.17564011 -435.17794800]
[-13.37985706 -427.30511475]
[-1.77531910 -417.76318359]
[8.42178917 -406.72991943]
[17.02150154 -394.41088867]
[23.86360931 -381.03555298]
[28.82065010 -366.85311890]
[31.80027771 -352.12777710]
[32.74698257 -337.13388062]
[31.64312744 -322.15069580]
[28.50927544 -307.45742798]
[23.40381241 -293.32772827]
[16.42184639 -280.02487183]
[7.69344759 -267.79669189]
[-2.61877823 -256.87094116]
[-14.32272053 -247.45120239]
[-27.20034218 -239.71295166]
[-41.01174164 -233.80033875]
[-37.03964615 -219.33580017]
[-33.06755066 -204.87127686]
[-29.09545326 -190.40675354]
[-25.12335777 -175.94223022]
[-21.15126038 -161.47770691]
[-17.17916489 -147.01318359]
[-13.20706844 -132.54866028]
[-0.17529799 -125.42767334]
[4.05902529 -110.81517029]
[-3.49848700 -97.19453430]
[0.47360921 -82.73001099]
[6.23964262 -68.88252258]
[13.70738411 -55.87356949]
[21.17512512 -42.86462021]
[28.64286613 -29.85566711]
[36.30346298 -16.95933914]
[44.15522003 -4.17849684]
[52.10190201 8.54353905]
[60.14307785 21.20606422]
[71.87680817 24.14647675]
[78.67967987 34.63002396]
[76.44722748 47.33352661]
[84.29898071 60.11436844]
[92.15074158 72.89521027]
[100.00249481 85.67605591]
[112.20480347 92.50212860]
[112.77835083 106.47219086]
[120.63010406 119.25302887]
[128.48185730 132.03387451]
[136.33361816 144.81471252]
[143.49211121 150.48866272]
[144.20549011 157.84481812]
[151.86608887 170.74113464]
[159.52668762 183.63746643]
[158.36427307 168.68257141]
[160.63504028 153.85545349]
[166.21986389 139.93389893]
[174.82579041 127.64820862]
[186.00134277 117.64286804]
[199.16030884 110.44273376]
[213.61236572 106.42552185]
[228.59939575 105.80194855]
[243.33522034 108.60474396]
[257.04681396 114.68685913]
[269.01489258 123.72925568]
[278.61163330 135.25758362]
[285.33364868 148.66708374]
[288.82827759 163.25433350]
[288.91217041 178.25408936]
[285.58099365 192.87951660]
[279.00946045 206.36340332]
[269.54229736 217.99838257]
[257.67614746 227.17411804]
[244.03344727 233.40928650]
[229.32991028 236.37677002]
[214.33685303 235.92092896]
[199.84074402 232.06567383]
[186.60205078 225.01322937]
[175.31524658 215.13356018]
[166.57159424 202.94348145]
[169.01731873 217.74275208]
[171.46304321 232.54202271]
[181.34689331 244.89596558]
[175.78829956 258.71447754]
[186.77426147 261.98904419]
[195.70455933 269.09469604]
[201.31289673 278.97491455]
[202.82231140 290.18341064]
[200.05270386 301.09579468]
[193.44131470 310.14498901]
[183.97419739 316.04620361]
[185.75666809 330.93991089]
[187.53913879 345.83364868]
[189.32159424 360.72735596]
[191.10406494 375.62106323]
[206.07751465 377.32177734]
[220.25494385 382.43035889]
[232.87176514 390.67123413]
[243.24758911 401.60006714]
[250.82284546 414.62741089]
[255.18901062 429.05078125]
[256.11062622 444.09231567]
[253.53800964 458.94082642]
[247.60986328 472.79556274]
[238.64590454 484.90936279]
[227.12956238 494.62893677]
[213.68186951 501.43014526]
[199.02804565 504.94616699]
[183.95837402 504.98742676]
[169.28553772 501.55166626]
[155.80081177 494.82418823]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 194]
[10 193]
[11 192]
[12 191]
[13 190]
[17 183]
[19 181]
[20 180]
[21 179]
[22 153]
[23 152]
[24 151]
[25 149]
[26 148]
[27 147]
[28 146]
[30 144]
[31 143]
[32 142]
[33 141]
[35 138]
[36 137]
[38 136]
[39 135]
[42 134]
[43 133]
[44 132]
[45 131]
[63 130]
[64 129]
[67 126]
[68 125]
[69 124]
[70 123]
[71 122]
[72 121]
[73 120]
[74 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
