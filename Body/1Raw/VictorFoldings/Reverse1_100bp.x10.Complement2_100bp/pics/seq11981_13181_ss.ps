%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[108.05216980 698.58203125]
[93.28244019 701.74932861]
[78.21875763 700.62585449]
[64.08227539 695.30261230]
[52.01897049 686.21124268]
[43.00676346 674.08868408]
[37.77622986 659.91760254]
[36.75138855 644.84692383]
[40.01531601 630.09820557]
[47.30342102 616.86718750]
[58.02489471 606.22637939]
[71.31058502 599.03845215]
[86.08349609 595.88598633]
[87.19914246 580.92749023]
[88.31478882 565.96905518]
[89.43044281 551.01062012]
[90.54608917 536.05218506]
[76.55444336 525.27691650]
[71.78995514 508.10864258]
[78.34223175 491.37103271]
[93.76351929 481.83468628]
[94.43330383 466.84963989]
[95.10308838 451.86462402]
[84.89357758 441.08029175]
[85.35936737 425.87380981]
[96.74017334 415.23825073]
[97.40995789 400.25320435]
[98.07974243 385.26815796]
[98.74952698 370.28314209]
[89.83491516 355.16702271]
[99.87367249 339.72988892]
[100.32028198 324.73654175]
[100.76688385 309.74319458]
[98.62813568 306.93997192]
[97.74089050 302.96154785]
[98.64271545 298.40744019]
[101.58310699 294.09451294]
[102.69875336 279.13607788]
[103.81439972 264.17761230]
[104.70721436 249.20420837]
[105.37699890 234.21916199]
[104.93039703 219.22581482]
[103.36987305 204.30722046]
[101.80934906 189.38861084]
[92.78995514 177.53535461]
[99.04956818 163.00511169]
[97.48905182 148.08650208]
[95.92852783 133.16790771]
[94.36800385 118.24929810]
[83.17844391 109.04386139]
[81.67102814 94.63296509]
[90.71339417 83.31122589]
[89.15287018 68.39262390]
[79.64293671 59.67918015]
[78.65030670 47.22131348]
[86.16341400 37.74081802]
[84.82518005 22.80063438]
[83.48694611 7.86044979]
[82.14871216 -7.07973528]
[68.52161407 -18.04884720]
[67.07243347 -35.14313507]
[78.21127319 -47.74333572]
[76.65074921 -62.66194153]
[75.09022522 -77.58054352]
[65.95921326 -90.50088501]
[72.33044434 -103.96404266]
[70.65890503 -118.87061310]
[68.87644196 -133.76432800]
[55.49063873 -141.38841248]
[49.23395538 -155.27030945]
[52.31471252 -170.00032043]
[63.34630585 -179.97238159]
[61.56383896 -194.86608887]
[59.78137207 -209.75981140]
[50.45900726 -222.54277039]
[56.62908936 -236.09928894]
[54.84662247 -250.99301147]
[41.02712250 -254.43867493]
[29.23854637 -262.37786865]
[20.88555145 -273.83999634]
[16.95503044 -287.43624878]
[17.89953423 -301.52774048]
[23.58526039 -314.42315674]
[33.31058502 -324.58172607]
[45.89255905 -330.79730225]
[44.33203506 -345.71588135]
[42.77151108 -360.63449097]
[41.21098709 -375.55310059]
[39.65046692 -390.47171021]
[38.08994293 -405.39031982]
[23.16996956 -407.59149170]
[9.26646519 -413.43472290]
[-2.74658418 -422.55270386]
[-12.11402702 -434.37225342]
[-18.24701881 -448.15039062]
[-20.76003647 -463.02102661]
[-19.49510574 -478.04937744]
[-14.53174305 -492.29071045]
[-6.18195057 -504.84982300]
[5.02939749 -514.93725586]
[18.39754677 -521.91894531]
[33.08216476 -525.35589600]
[48.16016006 -525.03216553]
[62.68372345 -520.96807861]
[75.73989105 -513.41906738]
[86.50793457 -502.85971069]
[94.31096649 -489.95376587]
[98.65849304 -475.51251221]
[99.27720642 -460.44372559]
[96.12823486 -445.69467163]
[89.40950775 -432.19247437]
[79.54338074 -420.78585815]
[67.15003967 -412.19192505]
[53.00854874 -406.95083618]
[54.56906891 -392.03222656]
[56.12959290 -377.11361694]
[57.69011688 -362.19503784]
[59.25064087 -347.27642822]
[60.81116104 -332.35781860]
[76.07081604 -328.08358765]
[88.55221558 -318.25692749]
[96.32583618 -304.35922241]
[98.17553711 -288.50418091]
[93.78870392 -273.11614990]
[83.80862427 -260.55953979]
[69.74034119 -252.77548218]
[71.52280426 -237.88175964]
[80.71768188 -226.16410828]
[74.67508698 -211.54228210]
[76.45755768 -196.64855957]
[78.24002075 -181.75483704]
[91.31324768 -174.66763306]
[97.78295898 -161.08061218]
[94.97880554 -146.11431885]
[83.77015686 -135.54679871]
[85.55261993 -120.65308380]
[89.46868896 -114.38520813]
[87.24905396 -105.52456665]
[96.26844788 -93.67130280]
[90.00882721 -79.14106750]
[91.56935120 -64.22246552]
[93.12987518 -49.30385971]
[104.17634583 -42.67023849]
[109.46407318 -30.70687485]
[106.85764313 -17.69084740]
[97.08889771 -8.41796970]
[98.42713165 6.52221584]
[99.76536560 21.46240044]
[101.10359955 36.40258408]
[111.95782471 50.19217682]
[104.07147217 66.83209991]
[105.63199615 81.75070190]
[116.82155609 90.95613861]
[118.32897186 105.36703491]
[109.28660583 116.68877411]
[110.84712982 131.60737610]
[112.40765381 146.52598572]
[113.96817780 161.44459534]
[123.09918976 174.36492920]
[116.72795868 187.82807922]
[118.28847504 202.74668884]
[119.84899902 217.66529846]
[127.39031219 204.69885254]
[140.35507202 197.15464783]
[155.35432434 197.00473022]
[168.46730042 204.28826904]
[176.26629639 217.10136414]
[176.71267700 232.09472656]
[169.68975830 245.34910583]
[157.03330994 253.39984131]
[142.05171204 254.14250183]
[128.66110229 247.38294983]
[120.36203766 234.88894653]
[119.69225311 249.87399292]
[122.39509583 255.90774536]
[121.74293518 261.55325317]
[118.77285767 265.29327393]
[117.65720367 280.25170898]
[116.54155731 295.21017456]
[115.76023865 310.18981934]
[115.31362915 325.18316650]
[114.86701965 340.17651367]
[123.12757874 350.08236694]
[122.44692993 362.56115723]
[113.73457336 370.95291138]
[113.06478119 385.93795776]
[112.39499664 400.92300415]
[111.72521210 415.90802002]
[122.11177826 427.51651001]
[121.21905518 442.70394897]
[110.08812714 452.53439331]
[109.41834259 467.51943970]
[108.74855804 482.50448608]
[119.46555328 488.93984985]
[126.38932800 499.26116943]
[128.25691223 511.47558594]
[124.77455139 523.25579834]
[116.66194916 532.38372803]
[105.50453949 537.16778564]
[104.38889313 552.12628174]
[103.27324677 567.08471680]
[102.15759277 582.04315186]
[101.04194641 597.00164795]
[115.18376923 602.31060791]
[127.25620270 611.38989258]
[136.28057861 623.50341797]
[141.52534485 637.66918945]
[142.56533813 652.73883057]
[139.31622314 667.49078369]
[132.04141235 680.72912598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 203]
[14 202]
[15 201]
[16 200]
[17 199]
[21 193]
[22 192]
[23 191]
[26 188]
[27 187]
[28 186]
[29 185]
[31 182]
[32 181]
[33 180]
[37 179]
[38 178]
[39 177]
[40 174]
[41 173]
[42 162]
[43 161]
[44 160]
[46 158]
[47 157]
[48 156]
[49 155]
[52 152]
[53 151]
[56 149]
[57 148]
[58 147]
[59 146]
[62 142]
[63 141]
[64 140]
[66 138]
[67 136]
[68 135]
[72 131]
[73 130]
[74 129]
[76 127]
[77 126]
[85 119]
[86 118]
[87 117]
[88 116]
[89 115]
[90 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
