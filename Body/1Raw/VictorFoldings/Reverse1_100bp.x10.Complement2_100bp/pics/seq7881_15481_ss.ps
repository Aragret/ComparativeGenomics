%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[181.33302307 711.69561768]
[166.43344116 709.36029053]
[152.58305359 703.39227295]
[140.65248108 694.16662598]
[131.39170837 682.26330566]
[125.38287354 668.43060303]
[123.00369263 653.53796387]
[124.40372467 638.52160645]
[129.49496460 624.32550049]
[137.95735168 611.84197998]
[149.25897217 601.85571289]
[162.68936157 594.99456787]
[177.40429688 591.68981934]
[177.85090637 576.69647217]
[178.29750061 561.70312500]
[178.74411011 546.70977783]
[179.19071960 531.71643066]
[179.63732910 516.72308350]
[178.52168274 501.76461792]
[175.85588074 487.00338745]
[173.19007874 472.24218750]
[170.52429199 457.48095703]
[167.85848999 442.71975708]
[165.08288574 427.97879028]
[162.19761658 413.25888062]
[159.31233215 398.53900146]
[156.42706299 383.81909180]
[153.54179382 369.09921265]
[150.65652466 354.37933350]
[147.77125549 339.65942383]
[137.73031616 328.65811157]
[142.66865540 313.62734985]
[139.78338623 298.90747070]
[136.89810181 284.18756104]
[134.01283264 269.46768188]
[130.79956055 254.81590271]
[127.25988770 240.23951721]
[123.72021484 225.66314697]
[120.18054199 211.08677673]
[116.64086914 196.51039124]
[113.10120392 181.93402100]
[109.56153107 167.35765076]
[106.02185822 152.78126526]
[102.48218536 138.20489502]
[98.72588348 123.68283081]
[94.75378418 109.21830750]
[90.13977814 94.94557953]
[84.89305878 80.89310455]
[79.64633942 66.84063721]
[73.71291351 59.89569092]
[74.42782593 52.53969193]
[69.39090729 38.41066360]
[64.35398865 24.28163338]
[58.79476547 10.34983444]
[52.72093201 -3.36543250]
[46.64709473 -17.08069992]
[40.57326126 -30.79596519]
[34.23698425 -37.37543488]
[34.51279068 -44.76094055]
[28.64382935 -58.56512070]
[22.77486801 -72.36929321]
[8.39285374 -78.35222626]
[2.63753867 -92.43522644]
[8.42997742 -106.10940552]
[2.56101680 -119.91358948]
[-3.30794406 -133.71775818]
[-7.47959948 -136.85533142]
[-9.79868698 -140.87716675]
[-10.23860931 -144.92951965]
[-9.11546421 -148.27180481]
[-14.36218262 -162.32427979]
[-26.43776894 -172.54634094]
[-23.64098358 -187.17602539]
[-28.88770294 -201.22848511]
[-43.61835098 -198.23608398]
[-58.63576126 -197.58502197]
[-73.57011414 -199.29133606]
[-88.05364227 -203.31300354]
[-101.72967529 -209.55101013]
[-114.26142883 -217.85171509]
[-125.34029388 -228.01071167]
[-134.69345093 -239.77781677]
[-142.09056091 -252.86328125]
[-147.34945679 -266.94485474]
[-150.34065247 -281.67575073]
[-150.99047852 -296.69320679]
[-149.28292847 -311.62741089]
[-145.26005554 -326.11062622]
[-139.02093506 -339.78613281]
[-130.71919250 -352.31719971]
[-120.55928040 -363.39523315]
[-108.79139709 -372.74740601]
[-95.70532227 -380.14343262]
[-81.62332916 -385.40118408]
[-66.89218140 -388.39117432]
[-51.87466812 -389.03973389]
[-36.94059372 -387.33096313]
[-22.45772743 -383.30688477]
[-8.78272438 -377.06665039]
[3.74765706 -368.76388550]
[14.82484531 -358.60305786]
[24.17605591 -346.83438110]
[31.57100296 -333.74771118]
[36.82758331 -319.66528320]
[39.81634903 -304.93389893]
[40.46369553 -289.91632080]
[38.75368118 -274.98239136]
[34.72842026 -260.49984741]
[28.48703766 -246.82536316]
[20.18323326 -234.29566956]
[10.02149296 -223.21931458]
[-1.74793947 -213.86907959]
[-14.83523083 -206.47520447]
[-9.58851242 -192.42272949]
[2.11179376 -183.20579529]
[-0.30971116 -167.57099915]
[4.93700695 -153.51852417]
[10.49623299 -139.58673096]
[16.36519432 -125.78254700]
[22.23415375 -111.97837067]
[36.10046768 -106.66226959]
[42.24907684 -92.74647522]
[36.57904434 -78.23825836]
[42.44800568 -64.43408203]
[48.31696701 -50.62990189]
[54.28852844 -36.86980057]
[60.36236191 -23.15453339]
[66.43619537 -9.43926620]
[72.51003265 4.27600050]
[80.26616669 -8.56309319]
[95.11951447 -10.65549946]
[106.12073517 -0.45877391]
[105.16013336 14.51043606]
[92.94583893 23.21738625]
[78.48301697 19.24471664]
[83.51993561 33.37374496]
[88.55685425 47.50277710]
[93.69881439 61.59391785]
[98.94553375 75.64638519]
[104.19224548 89.69886017]
[111.38798523 76.53749847]
[125.74324036 72.18701935]
[139.03466797 79.13957214]
[143.64833069 93.41241455]
[136.94132996 106.82942200]
[122.75571442 111.70471191]
[109.21830750 105.24621582]
[113.19040680 119.71073914]
[117.61818695 124.62055969]
[118.73420715 130.19294739]
[117.05855560 134.66522217]
[120.59822845 149.24159241]
[124.13790131 163.81797791]
[127.67757416 178.39434814]
[131.21725464 192.97071838]
[134.75692749 207.54710388]
[138.29660034 222.12347412]
[141.83627319 236.69984436]
[145.37593079 251.27622986]
[148.98019409 255.05200195]
[150.61248779 259.39813232]
[150.38580322 263.46798706]
[148.73272705 266.58239746]
[151.61799622 281.30230713]
[154.50328064 296.02218628]
[157.38854980 310.74209595]
[167.63584900 322.79626465]
[162.49113464 336.77416992]
[165.37641907 351.49404907]
[168.26168823 366.21392822]
[171.14695740 380.93383789]
[174.03222656 395.65371704]
[176.91749573 410.37362671]
[179.80278015 425.09350586]
[184.52444458 432.91296387]
[182.61970520 440.05395508]
[185.28550720 454.81515503]
[187.95130920 469.57638550]
[190.61709595 484.33758545]
[193.28289795 499.09881592]
[198.48466492 485.02963257]
[208.61798096 473.97000122]
[222.17964172 467.56051636]
[237.15783691 466.75198364]
[251.33064270 471.66436768]
[262.59561157 481.56890869]
[269.28164673 494.99639893]
[270.39694214 509.95486450]
[265.77600098 524.22534180]
[256.10437012 535.69091797]
[242.81672668 542.65069580]
[227.88423157 544.07226562]
[213.52204895 539.74475098]
[201.86070251 530.31005859]
[194.63067627 517.16967773]
[194.18406677 532.16302490]
[193.73745728 547.15637207]
[193.29086304 562.14971924]
[192.84425354 577.14306641]
[192.39764404 592.13641357]
[206.88978577 596.31121826]
[219.88798523 603.95953369]
[230.57516479 614.60076904]
[238.27954102 627.56585693]
[242.51676941 642.03985596]
[243.02052307 657.11291504]
[239.75914001 671.83752441]
[232.93762207 685.28808594]
[222.98477173 696.61907959]
[210.52622986 705.11822510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 200]
[14 199]
[15 198]
[16 197]
[17 196]
[18 195]
[19 180]
[20 179]
[21 178]
[22 177]
[23 176]
[24 174]
[25 173]
[26 172]
[27 171]
[28 170]
[29 169]
[30 168]
[32 166]
[33 165]
[34 164]
[35 163]
[36 159]
[37 158]
[38 157]
[39 156]
[40 155]
[41 154]
[42 153]
[43 152]
[44 151]
[45 148]
[46 147]
[47 140]
[48 139]
[49 138]
[51 137]
[52 136]
[53 135]
[54 129]
[55 128]
[56 127]
[57 126]
[59 125]
[60 124]
[61 123]
[64 120]
[65 119]
[66 118]
[70 117]
[71 116]
[73 114]
[74 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
