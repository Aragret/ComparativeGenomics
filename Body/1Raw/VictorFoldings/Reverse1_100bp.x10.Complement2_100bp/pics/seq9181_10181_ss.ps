%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[182.48364258 295.03225708]
[183.96263123 280.09710693]
[186.63862610 265.32937622]
[190.49424744 250.82487488]
[195.50450134 236.67767334]
[201.63690186 222.97949219]
[208.85166931 209.81919861]
[217.10200500 197.28211975]
[205.27574158 188.05502319]
[193.44946289 178.82792664]
[181.62319946 169.60083008]
[169.66085815 160.55082703]
[157.56510925 151.67993164]
[145.46936035 142.80903625]
[130.63050842 141.52143860]
[124.07806396 127.12088776]
[109.23921204 125.83329773]
[102.68676758 111.43273926]
[108.34892273 125.32302856]
[107.95330811 140.31781006]
[101.56659698 153.89019775]
[90.26506042 163.75302124]
[75.95320892 168.24421692]
[61.04283142 166.60693359]
[48.04659653 159.11708069]
[39.15459824 147.03683472]
[35.86529160 132.40191650]
[38.73298264 117.67859650]
[47.27441406 105.34799194]
[60.05020905 97.48802185]
[74.90741730 95.42324066]
[89.34381104 99.50236511]
[79.18026733 88.47048950]
[69.01671600 77.43860626]
[58.85317230 66.40673065]
[43.81212997 61.49983978]
[40.87897873 46.89690018]
[30.71543121 35.86502075]
[20.55188370 24.83314323]
[24.69640350 39.24921036]
[25.02168846 54.24568176]
[21.50616074 68.82789612]
[14.38299274 82.02867889]
[4.12463999 92.97245026]
[-8.58849812 100.93336487]
[-22.91320419 105.38339233]
[-37.89937592 106.02738953]
[-52.55302811 102.82263184]
[-65.90223694 95.98168945]
[-77.06160736 85.95829010]
[-85.29096985 73.41725159]
[-90.04449463 59.19037628]
[-91.00691223 44.22128296]
[-88.11437988 29.50281715]
[-81.55874634 16.01120186]
[-71.77483368 4.64128542]
[-59.41156387 -3.85280442]
[-45.28895187 -8.90768528]
[-30.34369659 -10.18808556]
[-15.56706905 -7.60908127]
[-1.93914664 -1.34172773]
[9.63968658 8.20203018]
[3.56585264 -5.51323605]
[-2.50798130 -19.22850227]
[-16.16263962 -21.11028671]
[-27.01828194 -29.42734718]
[-32.30446243 -41.92238235]
[-30.73892212 -55.29000092]
[-22.83680153 -66.05097961]
[-28.70576286 -79.85515594]
[-34.57472229 -93.65933228]
[-40.44368362 -107.46350861]
[-46.31264496 -121.26768494]
[-60.91111374 -117.67869568]
[-75.89626312 -116.47807312]
[-90.87993622 -117.69692230]
[-105.47402954 -121.30367279]
[-119.30051422 -127.20489502]
[-132.00125122 -135.24774170]
[-143.24726868 -145.22389221]
[-152.74725342 -156.87490845]
[-160.25514221 -169.89903259]
[-165.57646179 -183.95889282]
[-168.57337952 -198.69030762]
[-169.16827393 -213.71170044]
[-167.34571838 -228.63398743]
[-163.15292358 -243.07063293]
[-156.69850159 -256.64770508]
[-148.14964294 -269.01348877]
[-137.72776794 -279.84774780]
[-125.70285034 -288.86978149]
[-112.38633728 -295.84594727]
[-98.12317657 -300.59552002]
[-83.28281403 -302.99548340]
[-68.24964905 -302.98364258]
[-53.41307831 -300.56036377]
[-39.15740585 -295.78836060]
[-25.85188675 -288.79125977]
[-13.84116459 -279.75030518]
[-3.43634653 -268.89968872]
[5.09305668 -256.52047729]
[11.52611351 -242.93327332]
[15.69619179 -228.49005127]
[17.49527740 -213.56491089]
[16.87676811 -198.54447937]
[13.85668564 -183.81779480]
[8.51325893 -169.76631165]
[0.98489332 -156.75401306]
[-8.53340721 -145.11795044]
[-19.79509544 -135.15951538]
[-32.50846863 -127.13665009]
[-26.63950729 -113.33246613]
[-20.77054787 -99.52828979]
[-14.90158653 -85.72411346]
[-9.03262520 -71.91993713]
[7.07431841 -68.75073242]
[18.23016357 -56.48252869]
[19.89180756 -39.81698990]
[11.20728588 -25.30233765]
[17.28112030 -11.58707047]
[23.35495377 2.12819672]
[31.58376122 14.66959667]
[41.74730682 25.70147514]
[51.91085434 36.73335266]
[66.22492981 40.85116959]
[69.88504791 56.24318695]
[80.04859924 67.27506256]
[90.21214294 78.30693817]
[100.37568665 89.33881378]
[111.55766296 99.33699036]
[127.26168060 101.25908661]
[132.94895935 115.02513123]
[148.65296936 116.94722748]
[154.34025574 130.71328735]
[166.43600464 139.58418274]
[178.53175354 148.45507812]
[185.05128479 149.55384827]
[189.38644409 153.22854614]
[190.85029602 157.77455139]
[202.67655945 167.00164795]
[214.50283813 176.22874451]
[226.32910156 185.45584106]
[236.48321533 174.40414429]
[247.49369812 164.20533752]
[259.28915405 154.92559814]
[271.79306030 146.62507629]
[284.92434692 139.35765076]
[298.59783936 133.17041016]
[312.72488403 128.10350037]
[327.21380615 124.18979645]
[341.97067261 121.45465851]
[356.89978027 119.91583252]
[371.90432739 119.58329773]
[386.88693237 120.45921326]
[401.75048828 122.53790283]
[416.39859009 125.80587006]
[430.73623657 130.24194336]
[444.67041016 135.81732178]
[458.11074829 142.49588013]
[470.97012329 150.23428345]
[483.16513062 158.98234558]
[494.61663818 168.68334961]
[505.25039673 179.27435303]
[514.99743652 190.68667603]
[523.79455566 202.84631348]
[531.58471680 215.67440796]
[538.31738281 229.08775330]
[543.94885254 242.99935913]
[548.44262695 257.31900024]
[551.76959229 271.95379639]
[553.90814209 286.80886841]
[554.84442139 301.78784180]
[554.57232666 316.79357910]
[553.09368896 331.72879028]
[550.41802979 346.49655151]
[546.56274414 361.00112915]
[541.55279541 375.14846802]
[535.42065430 388.84677124]
[528.20623779 402.00723267]
[519.95617676 414.54449463]
[510.72399902 426.37722778]
[500.56964111 437.42871094]
[489.55892944 447.62725830]
[477.76327515 456.90676880]
[465.25918579 465.20700073]
[452.12774658 472.47415161]
[438.45410156 478.66107178]
[424.32696533 483.72766113]
[409.83795166 487.64105225]
[395.08102417 490.37585449]
[380.15185547 491.91436768]
[365.14733887 492.24658203]
[350.16473389 491.37033081]
[335.30120850 489.29132080]
[320.65319824 486.02301025]
[306.31567383 481.58663940]
[292.38159180 476.01092529]
[278.94140625 469.33209229]
[266.08218384 461.59341431]
[253.88740540 452.84506226]
[242.43611145 443.14382935]
[231.80258179 432.55258179]
[222.05577087 421.14004517]
[213.25891113 408.98019409]
[205.46905518 396.15194702]
[198.73669434 382.73843384]
[193.10551453 368.82672119]
[188.61204529 354.50698853]
[185.28540039 339.87210083]
[183.14717102 325.01699829]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 142]
[9 141]
[10 140]
[11 139]
[12 136]
[13 135]
[14 134]
[16 132]
[18 130]
[32 129]
[33 128]
[34 127]
[35 126]
[37 124]
[38 123]
[39 122]
[62 121]
[63 120]
[64 119]
[69 115]
[70 114]
[71 113]
[72 112]
[73 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
