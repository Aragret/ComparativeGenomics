%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[75.71817780 718.95489502]
[62.71424866 711.43823242]
[50.75498581 702.35089111]
[40.02900314 691.83630371]
[30.70546532 680.06030273]
[22.93141747 667.20849609]
[16.82946777 653.48376465]
[12.49585152 639.10241699]
[9.99891853 624.29132080]
[9.37804699 609.28405762]
[10.64302921 594.31732178]
[13.77391624 579.62713623]
[18.72132683 565.44525146]
[25.40723610 551.99530029]
[33.72619629 539.48937988]
[43.54700470 528.12469482]
[54.71477127 518.08062744]
[67.05336761 509.51544189]
[80.36819458 502.56427002]
[94.44926453 497.33676147]
[109.07448578 493.91537476]
[107.51396179 478.99676514]
[105.95343781 464.07815552]
[104.39291382 449.15954590]
[102.83239746 434.24093628]
[91.50299835 444.07174683]
[76.72618103 441.49380493]
[69.39486694 428.40747070]
[74.91342926 414.45953369]
[89.21379089 409.93185425]
[101.75338745 418.16067505]
[101.30678558 403.16732788]
[100.86017609 388.17398071]
[92.74736786 375.68270874]
[100.07035828 361.65829468]
[99.62374878 346.66494751]
[99.17714691 331.67160034]
[98.73053741 316.67825317]
[98.28393555 301.68490601]
[97.83732605 286.69155884]
[89.72451782 274.20028687]
[97.04750824 260.17587280]
[96.60089874 245.18251038]
[96.15429688 230.18916321]
[82.16719818 224.96513367]
[71.21611786 214.75636292]
[64.99105072 201.09570312]
[64.46895599 186.05192566]
[69.76049042 171.91639709]
[80.08849335 160.85404968]
[93.90188599 154.57186890]
[93.45528412 139.57852173]
[93.00867462 124.58517456]
[92.56206512 109.59182739]
[85.83850861 123.00054169]
[75.17164612 133.54653931]
[61.68718719 140.11688232]
[46.80817032 142.01815796]
[32.10481644 139.04975891]
[19.12881088 131.52491760]
[9.24953556 120.23775482]
[3.50957775 106.37944031]
[2.51468754 91.41246796]
[6.36985826 76.91634369]
[14.66824436 64.42087555]
[26.53409767 55.24473572]
[40.71518707 50.35630798]
[55.71494675 50.27148056]
[69.95041656 54.99920273]
[81.91929626 64.04055023]
[90.35848236 76.44136810]
[94.37738037 90.89315033]
[97.69963837 76.26569366]
[101.02189636 61.63823318]
[104.34415436 47.01077271]
[107.66641235 32.38331223]
[106.12084198 27.39750290]
[106.59488678 22.77921486]
[108.61034393 19.23620033]
[111.47743988 17.18385506]
[115.44953918 2.71933031]
[119.42163086 -11.74519348]
[106.42861176 -4.24976730]
[91.63604736 -6.73575544]
[81.80690765 -18.06659698]
[81.43493652 -33.06198502]
[90.69019318 -44.86622620]
[105.34130859 -48.08258820]
[118.68997955 -41.24058533]
[124.63349152 -27.46644402]
[130.08885193 -41.43923950]
[135.54420471 -55.41204071]
[140.99955750 -69.38483429]
[146.45492554 -83.35763550]
[142.00035095 -95.46216583]
[146.83178711 -106.98783112]
[157.85617065 -111.96675110]
[163.41539001 -125.89854431]
[168.87074280 -139.87133789]
[174.32611084 -153.84414673]
[161.44311523 -161.59892273]
[150.05612183 -171.41954041]
[140.49273682 -183.02339172]
[133.02812195 -196.07666016]
[127.87704468 -210.20373535]
[125.18772125 -224.99818420]
[125.03752899 -240.03431702]
[127.43077850 -254.87953186]
[132.29861450 -269.10668945]
[139.50099182 -282.30645752]
[148.83065796 -294.09906006]
[160.01921082 -304.14517212]
[172.74470520 -312.15576172]
[186.64103699 -317.90036011]
[201.30834961 -321.21365356]
[216.32464600 -322.00033569]
[231.25787354 -320.23779297]
[245.67837524 -315.97668457]
[259.17126465 -309.33963013]
[271.34829712 -300.51763916]
[281.85910034 -289.76446533]
[290.40130615 -277.38952637]
[296.72912598 -263.74890137]
[300.66046143 -249.23503113]
[302.08224487 -234.26550293]
[300.95352173 -219.27104187]
[297.30679321 -204.68304443]
[291.24700928 -190.92126465]
[282.94845581 -178.38163757]
[272.64996338 -167.42494202]
[260.64782715 -158.36645508]
[247.28732300 -151.46678162]
[232.95292664 -146.92445374]
[218.05702209 -144.87014771]
[203.02821350 -145.36299133]
[188.29890442 -148.38877869]
[182.84355164 -134.41598511]
[177.38818359 -120.44319153]
[177.88375854 -113.06916809]
[171.74618530 -106.30396271]
[175.06727600 -89.07209015]
[160.42771912 -77.90227509]
[154.97236633 -63.92948151]
[149.51699829 -49.95668030]
[144.06164551 -35.98388290]
[138.60629272 -22.01108551]
[133.88615417 -7.77309752]
[129.91406250 6.69142628]
[125.94196320 21.15595055]
[122.29387665 35.70557022]
[118.97161865 50.33303070]
[115.64935303 64.96049500]
[112.32709503 79.58795166]
[109.00483704 94.21540833]
[107.55541992 109.14521790]
[108.00202179 124.13857269]
[108.44863129 139.13192749]
[108.89523315 154.12527466]
[123.05806732 159.57412720]
[134.02619934 170.00212097]
[140.14971924 183.79763794]
[140.52395630 198.84580994]
[135.12303162 212.85276794]
[124.79900360 223.69526672]
[111.14764404 229.74255371]
[111.59424591 244.73590088]
[112.04085541 259.72924805]
[120.18560791 273.29293823]
[112.83067322 286.24493408]
[113.27728271 301.23828125]
[113.72389221 316.23162842]
[114.17049408 331.22497559]
[114.61710358 346.21835327]
[115.06370544 361.21170044]
[123.20845795 374.77539062]
[115.85353088 387.72738647]
[116.30013275 402.72073364]
[116.74674225 417.71408081]
[117.75099945 432.68041992]
[119.31152344 447.59902954]
[120.87204742 462.51763916]
[122.43257141 477.43621826]
[123.99308777 492.35482788]
[139.00976562 492.67562866]
[153.86779785 494.87603760]
[168.33288574 498.92135620]
[182.17687988 504.74777222]
[195.18144226 512.26336670]
[207.14146423 521.34967041]
[217.86833191 531.86340332]
[227.19287109 543.63861084]
[234.96800232 556.48974609]
[241.07110596 570.21398926]
[245.40592957 584.59497070]
[247.90411377 599.40582275]
[248.52624512 614.41302490]
[247.26251221 629.37988281]
[244.13287354 644.07031250]
[239.18664551 658.25262451]
[232.50187683 671.70318604]
[224.18397522 684.20977783]
[214.36412048 695.57525635]
[203.19718933 705.62030029]
[190.85931396 714.18652344]
[177.54507446 721.13879395]
[163.46444702 726.36749268]
[148.83950806 729.79016113]
[133.90092468 731.35272217]
[118.88428497 731.03070068]
[104.02642059 728.82904053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 183]
[22 182]
[23 181]
[24 180]
[25 179]
[31 178]
[32 177]
[33 176]
[35 174]
[36 173]
[37 172]
[38 171]
[39 170]
[40 169]
[42 167]
[43 166]
[44 165]
[51 158]
[52 157]
[53 156]
[54 155]
[72 154]
[73 153]
[74 152]
[75 151]
[76 150]
[80 149]
[81 148]
[82 147]
[90 146]
[91 145]
[92 144]
[93 143]
[94 142]
[97 140]
[98 138]
[99 137]
[100 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
