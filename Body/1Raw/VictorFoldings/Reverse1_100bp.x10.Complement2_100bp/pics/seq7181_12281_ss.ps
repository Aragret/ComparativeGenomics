%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[67.01191711 575.78656006]
[51.93848419 575.11279297]
[37.55332947 570.55981445]
[24.83726311 562.43798828]
[14.65728760 551.30108643]
[7.70748901 537.90844727]
[4.46171713 523.17321777]
[5.14127350 508.10003662]
[9.69982433 493.71664429]
[17.82656097 481.00372314]
[28.96739006 470.82803345]
[42.36270905 463.88342285]
[57.09920502 460.64331055]
[57.76898956 445.65829468]
[58.43877411 430.67324829]
[50.50983429 421.53768921]
[50.94520187 409.04791260]
[60.05657196 399.91851807]
[53.09053040 386.75329590]
[61.63551331 373.43811035]
[62.52832794 358.46472168]
[63.42114639 343.49130249]
[64.31396484 328.51791382]
[54.31438065 339.69860840]
[39.88619995 343.80075073]
[25.50014496 339.55325317]
[15.61389446 328.27218628]
[13.29080868 313.45318604]
[19.25072289 299.68801880]
[31.64689064 291.24200439]
[46.63822556 290.73223877]
[59.57949829 298.31665039]
[66.46076965 311.64541626]
[69.34603882 296.92550659]
[72.23131561 282.20562744]
[75.11658478 267.48574829]
[78.00186157 252.76583862]
[80.11648560 237.91564941]
[81.45471954 222.97546387]
[82.79295349 208.03527832]
[84.13118744 193.09509277]
[85.46942139 178.15490723]
[86.80765533 163.21472168]
[88.14588928 148.27453613]
[89.48412323 133.33435059]
[82.91314697 119.96754456]
[91.85078430 106.91268921]
[91.51580811 91.91643524]
[89.51179504 77.05090332]
[87.39717102 62.20070648]
[85.17205048 47.36666107]
[75.47322083 34.86693192]
[81.23693848 21.13271141]
[69.43490601 6.99788189]
[76.49008942 -9.07044888]
[74.04436493 -23.86971855]
[59.77149582 -25.76074219]
[46.62482834 -31.59149551]
[35.66671753 -40.88099289]
[27.77989578 -52.86915207]
[23.59637070 -66.57897949]
[23.44678116 -80.89620209]
[27.33428383 -94.65981293]
[34.93502808 -106.75622559]
[45.62510300 -116.20938110]
[58.53176880 -122.25949860]
[56.30665207 -137.09353638]
[54.08153534 -151.92758179]
[51.85641861 -166.76162720]
[49.63129807 -181.59567261]
[47.40618134 -196.42971802]
[30.06442642 -204.52903748]
[21.17826080 -221.31134033]
[24.17848778 -239.91046143]
[37.67406845 -252.83958435]
[34.78879547 -267.55947876]
[31.57552338 -282.21127319]
[28.03585052 -296.78762817]
[24.49617767 -311.36401367]
[20.95650673 -325.94039917]
[17.41683388 -340.51675415]
[13.87716103 -355.09313965]
[-1.15891349 -354.45855713]
[-16.02982903 -356.76986694]
[-30.16398430 -361.93820190]
[-43.01810455 -369.76495361]
[-54.09810638 -379.94924927]
[-62.97811127 -392.09960938]
[-69.31678772 -405.74908447]
[-72.87049866 -420.37292480]
[-73.50264740 -435.40911865]
[-71.18893433 -450.27966309]
[-66.01829529 -464.41296387]
[-58.18947983 -477.26580811]
[-48.00339508 -488.34417725]
[-35.85157776 -497.22219849]
[-22.20110321 -503.55868530]
[-7.57666588 -507.11001587]
[7.45961332 -507.73974609]
[22.32977867 -505.42361450]
[36.46226120 -500.25070190]
[49.31384659 -492.41979980]
[60.39055252 -482.23193359]
[69.26662445 -470.07867432]
[75.60088348 -456.42715454]
[79.14985657 -441.80215454]
[79.77713776 -426.76577759]
[77.45861053 -411.89599609]
[72.28340149 -397.76434326]
[64.45041656 -384.91403198]
[54.26075363 -373.83895874]
[42.10606003 -364.96487427]
[28.45353699 -358.63281250]
[31.99320793 -344.05642700]
[35.53288269 -329.48007202]
[39.07255554 -314.90368652]
[42.61222458 -300.32730103]
[46.15189743 -285.75094604]
[48.95661163 -283.61413574]
[50.86569595 -280.01269531]
[51.20202255 -275.38232422]
[49.50868988 -270.44476318]
[52.39396286 -255.72485352]
[63.21728516 -253.02183533]
[72.29166412 -246.44506836]
[78.28363800 -236.91369629]
[80.29514313 -225.78434753]
[77.99789429 -214.65803528]
[71.68627930 -205.14993286]
[62.24022675 -198.65483093]
[64.46533966 -183.82078552]
[66.69046021 -168.98675537]
[68.91558075 -154.15270996]
[71.14069366 -139.31866455]
[73.36581421 -124.48461914]
[88.84154510 -122.07049561]
[102.83114624 -114.98342133]
[113.95974731 -103.90643311]
[121.12949371 -89.91533661]
[123.62786102 -74.37424469]
[121.19843292 -58.80255508]
[114.06713867 -44.72643280]
[102.92135620 -33.52920914]
[88.84363556 -26.31544685]
[91.28936005 -11.51617622]
[100.93718719 -4.21918964]
[103.09588623 8.09031105]
[96.07098389 18.90759468]
[105.61065674 30.34629440]
[100.00609589 45.14154434]
[102.23121643 59.97558975]
[106.33216095 66.12408447]
[104.37731934 75.04689026]
[106.38133240 89.91242218]
[111.99633026 76.00300598]
[122.20353699 65.01150513]
[135.66001892 58.38404846]
[150.59533691 56.99258804]
[165.04449463 61.02019119]
[177.10647583 69.93695831]
[185.19430542 82.56974030]
[188.24388123 97.25646973]
[185.85398865 112.06485748]
[178.33906555 125.04660797]
[166.68782043 134.49374390]
[152.43318176 139.16334534]
[137.45057678 138.44102478]
[123.71124268 132.42182922]
[113.02281952 121.89769745]
[106.79096985 108.25092316]
[113.26622772 122.68635559]
[104.42430878 134.67259216]
[103.08607483 149.61277771]
[101.74784088 164.55296326]
[100.40960693 179.49314880]
[99.07137299 194.43333435]
[97.73313904 209.37351990]
[96.39490509 224.31369019]
[95.05667114 239.25387573]
[106.51077271 229.56866455]
[121.50965881 229.38613892]
[133.19604492 238.78977966]
[136.22706604 253.48034668]
[129.21699524 266.74151611]
[115.37071991 272.51046753]
[101.01858521 268.14971924]
[92.72174835 255.65112305]
[89.83647919 270.37100220]
[86.95120239 285.09091187]
[84.06593323 299.81079102]
[81.18065643 314.53067017]
[79.28736877 329.41070557]
[78.39455414 344.38412476]
[77.50173187 359.35754395]
[76.60891724 374.33093262]
[83.51110077 388.56716919]
[75.02997589 400.81134033]
[83.65147400 417.08251953]
[73.42381287 431.34301758]
[72.75402832 446.32806396]
[72.08424377 461.31311035]
[86.47290802 465.85501099]
[99.19524384 473.96701050]
[109.38381195 485.09603882]
[116.34395599 498.48330688]
[119.60110474 513.21606445]
[118.93318939 528.28973389]
[114.38574219 542.67663574]
[106.26882935 555.39581299]
[95.13585663 565.58013916]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 201]
[14 200]
[15 199]
[18 197]
[20 195]
[21 194]
[22 193]
[23 192]
[33 191]
[34 190]
[35 189]
[36 188]
[37 187]
[38 179]
[39 178]
[40 177]
[41 176]
[42 175]
[43 174]
[44 173]
[45 172]
[47 170]
[48 154]
[49 153]
[50 151]
[51 150]
[53 148]
[55 145]
[56 144]
[66 135]
[67 134]
[68 133]
[69 132]
[70 131]
[71 130]
[75 123]
[76 122]
[77 118]
[78 117]
[79 116]
[80 115]
[81 114]
[82 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
