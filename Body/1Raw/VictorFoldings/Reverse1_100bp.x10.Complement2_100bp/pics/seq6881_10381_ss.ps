%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[36.46677017 506.94458008]
[35.97105789 522.03289795]
[31.42185593 536.42755127]
[23.15674210 549.06048584]
[11.78904343 558.99414062]
[-1.83768153 565.49145508]
[-16.71223831 568.07025146]
[-31.73083687 566.53918457]
[-45.77899933 561.01177979]
[-57.81425476 551.89831543]
[-66.94351196 539.87506104]
[-72.48931122 525.83416748]
[-74.04013062 510.81759644]
[-71.48087311 495.93966675]
[-65.00146484 482.30441284]
[-55.08272171 470.92367554]
[-42.46067047 462.64199829]
[-28.07195663 458.07388306]
[-12.98431969 457.55838013]
[-17.49974823 443.36471558]
[-6.72442198 431.78009033]
[-3.18474936 417.20373535]
[0.35492307 402.62734985]
[-5.66871500 392.13723755]
[-2.83904958 379.96444702]
[7.85822630 372.75814819]
[11.61452675 358.23608398]
[7.31092215 343.97674561]
[18.25753021 332.55386353]
[13.95392609 318.29455566]
[24.90053558 306.87167358]
[28.65683556 292.34960938]
[32.41313553 277.82754517]
[36.16943741 263.30548096]
[22.72874069 269.96487427]
[8.47234154 265.30065918]
[1.56695294 251.98466492]
[5.96829462 237.64492798]
[19.15507889 230.49588013]
[33.57331467 234.63284302]
[40.96346283 247.68502808]
[46.00038147 233.55598450]
[51.03729630 219.42695618]
[48.02300644 204.84054565]
[59.94506454 194.43981934]
[64.98197937 180.31079102]
[70.01889801 166.18176270]
[75.05581665 152.05273438]
[79.88181305 137.85028076]
[84.49581909 123.57754517]
[89.10983276 109.30481720]
[86.37054443 95.59394836]
[96.61743927 86.08117676]
[101.23144531 71.80844116]
[89.32045746 62.46212006]
[81.34079742 49.62868500]
[78.23916626 34.86724472]
[80.37102509 19.96337891]
[87.45995331 6.71315241]
[98.63336182 -3.29332042]
[112.52980804 -8.86270046]
[127.46488953 -9.34071445]
[132.07890320 -23.61344719]
[136.69291687 -37.88618088]
[141.30691528 -52.15891266]
[127.99217224 -45.25113297]
[113.32537079 -48.39516449]
[104.01197815 -60.15359879]
[104.30995941 -75.15063477]
[114.08307648 -86.52983856]
[128.86318970 -89.08878326]
[141.89303589 -81.65755463]
[147.21557617 -67.63175964]
[153.28939819 -81.34703064]
[150.90386963 -99.60601807]
[165.47352600 -109.38825989]
[171.34248352 -123.19243622]
[177.21144104 -136.99661255]
[183.08039856 -150.80079651]
[188.94937134 -164.60496521]
[194.81832886 -178.40914917]
[195.29608154 -187.53108215]
[200.87879944 -192.37413025]
[206.95263672 -206.08938599]
[213.02645874 -219.80465698]
[211.53985596 -235.55586243]
[223.76802063 -244.06005859]
[229.84185791 -257.77532959]
[235.91567993 -271.49060059]
[241.98951721 -285.20584106]
[246.39051819 -299.54571533]
[249.05632019 -314.30691528]
[251.72210693 -329.06814575]
[246.56054688 -344.02371216]
[256.43655396 -355.17330933]
[259.10235596 -369.93450928]
[245.09715271 -375.44271851]
[232.43580627 -383.57763672]
[221.60501099 -394.02655029]
[213.02104187 -406.38784790]
[207.01388550 -420.18640137]
[203.81440735 -434.89184570]
[203.54559326 -449.93890381]
[206.21777344 -464.74923706]
[211.72825623 -478.75354004]
[219.86520386 -491.41357422]
[230.31588745 -502.24267578]
[242.67858887 -510.82461548]
[256.47811890 -516.82958984]
[271.18405151 -520.02667236]
[286.23117065 -520.29302979]
[301.04104614 -517.61846924]
[315.04446411 -512.10571289]
[327.70318604 -503.96670532]
[338.53057861 -493.51428223]
[347.11053467 -481.15017700]
[353.11325073 -467.34970093]
[356.30798340 -452.64321899]
[356.57189941 -437.59606934]
[353.89492798 -422.78662109]
[348.37991333 -408.78408813]
[340.23886108 -396.12670898]
[329.78466797 -385.30099487]
[317.41921997 -376.72302246]
[303.61773682 -370.72256470]
[288.91076660 -367.53021240]
[273.86358643 -367.26870728]
[271.19778442 -352.50750732]
[276.55001831 -338.60775757]
[266.48333740 -326.40234375]
[263.81753540 -311.64111328]
[261.15173340 -296.87991333]
[270.62713623 -308.50817871]
[283.47262573 -316.25372314]
[298.17910767 -319.20663452]
[313.01885986 -317.01998901]
[326.24856567 -309.95068359]
[336.31396484 -298.82919312]
[342.03262329 -284.96206665]
[342.73269653 -269.97842407]
[338.33197021 -255.63850403]
[329.34741211 -243.62693787]
[316.83450317 -235.35485840]
[302.26327515 -231.79405212]
[287.34555054 -233.36282349]
[273.83380127 -239.87689209]
[263.31542969 -250.57098389]
[257.02609253 -264.18878174]
[255.70478821 -279.13201904]
[249.63095093 -265.41674805]
[243.55711365 -251.70149231]
[237.48329163 -237.98622131]
[239.40434265 -223.21601868]
[226.74172974 -213.73081970]
[220.66789246 -200.01554871]
[214.59407043 -186.30029297]
[208.62249756 -172.54019165]
[202.75354004 -158.73600769]
[196.88458252 -144.93183899]
[191.01562500 -131.12765503]
[185.14665222 -117.32347870]
[179.27769470 -103.51930237]
[183.51033020 -92.18743134]
[178.73377991 -80.63890839]
[167.00466919 -75.27319336]
[160.93083191 -61.55792999]
[155.57965088 -47.54490662]
[150.96563721 -33.27217102]
[146.35163879 -18.99943924]
[141.73762512 -4.72670507]
[153.56663513 4.40345573]
[161.57319641 17.05351639]
[164.77465820 31.70701790]
[162.76577759 46.59949493]
[155.76988220 59.93094254]
[144.61424255 70.08336639]
[130.63226318 75.81716919]
[115.50418091 76.42245483]
[110.89016724 90.69518280]
[113.62945557 104.40605164]
[103.38256073 113.91882324]
[98.76855469 128.19155884]
[94.15454102 142.46429443]
[95.16311646 148.99838257]
[93.03927612 154.26965332]
[89.18484497 157.08966064]
[84.14792633 171.21868896]
[79.11100769 185.34771729]
[74.07409668 199.47674561]
[76.72811127 215.07376099]
[65.16632843 224.46388245]
[60.12940979 238.59291077]
[55.09249496 252.72193909]
[50.69149780 267.06179810]
[46.93519592 281.58383179]
[43.17889404 296.10589600]
[39.42259216 310.62796021]
[43.45752335 325.92599487]
[32.77959061 336.31018066]
[36.81451797 351.60821533]
[26.13658714 361.99237061]
[22.38028526 376.51443481]
[27.71099663 394.14013672]
[14.93129826 406.16702271]
[11.39162636 420.74340820]
[7.85195351 435.31976318]
[12.11420059 450.55603027]
[1.59205604 461.09805298]
[14.76293182 468.47576904]
[25.45409775 479.13415527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 208]
[21 206]
[22 205]
[23 204]
[26 202]
[27 201]
[29 199]
[31 197]
[32 196]
[33 195]
[34 194]
[41 193]
[42 192]
[43 191]
[45 189]
[46 188]
[47 187]
[48 186]
[49 183]
[50 182]
[51 181]
[53 179]
[54 178]
[62 170]
[63 169]
[64 168]
[65 167]
[73 166]
[74 165]
[76 162]
[77 161]
[78 160]
[79 159]
[80 158]
[81 157]
[83 156]
[84 155]
[85 154]
[87 152]
[88 151]
[89 150]
[90 149]
[91 132]
[92 131]
[93 130]
[95 128]
[96 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
