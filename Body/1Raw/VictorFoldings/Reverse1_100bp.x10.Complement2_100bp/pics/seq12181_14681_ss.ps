%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[90.64881897 553.91076660]
[81.18133545 565.57751465]
[70.18223572 575.81304932]
[57.86562729 584.41815186]
[44.47125244 591.22521973]
[30.25984001 596.10192871]
[15.50801468 598.95318604]
[0.50292844 599.72357178]
[-14.46334171 598.39813232]
[-29.09947205 595.00256348]
[-43.12056732 589.60302734]
[-56.25370026 582.30456543]
[-68.24323273 573.24932861]
[-78.85578156 562.61358643]
[-87.88478088 550.60424805]
[-95.15446472 537.45520020]
[-100.52333069 523.42236328]
[-103.88687897 508.77880859]
[-105.17963409 493.80969238]
[-104.37642670 478.80633545]
[-101.49289703 464.06076050]
[-96.58516693 449.86004639]
[-89.74877930 436.48059082]
[-81.11679840 424.18283081]
[-70.85724640 413.20614624]
[-59.16983032 403.76419067]
[-46.28205109 396.04077148]
[-32.44477081 390.18621826]
[-17.92733765 386.31448364]
[-3.01233745 384.50094604]
[12.00990486 384.78088379]
[26.84697723 387.14889526]
[31.24797440 372.80905151]
[35.64897156 358.46920776]
[40.04997253 344.12936401]
[44.45096970 329.78952026]
[48.42306519 315.32498169]
[51.96273804 300.74859619]
[55.50241089 286.17224121]
[58.71568298 271.52044678]
[61.60095596 256.80056763]
[64.48622894 242.08065796]
[67.37149811 227.36077881]
[70.25677490 212.64088440]
[65.11206818 198.66299438]
[75.35936737 186.60881042]
[78.24464417 171.88891602]
[81.12991333 157.16902161]
[72.63311768 144.98953247]
[75.34950256 130.02037048]
[88.18208313 121.19072723]
[91.06735992 106.47083282]
[77.35221100 112.54493713]
[63.98209381 105.74494171]
[60.81296158 91.08354187]
[70.18097687 79.36858368]
[85.18038940 79.23589325]
[94.75378418 90.78169250]
[98.72588348 76.31716919]
[102.69797516 61.85264206]
[106.67007446 47.38811874]
[110.64217377 32.92359543]
[114.61426544 18.45907021]
[118.58636475 3.99454618]
[122.55845642 -10.46997738]
[121.81324005 -19.57395935]
[126.69886780 -25.11944580]
[130.88587952 -39.52322769]
[135.07289124 -53.92700958]
[137.51861572 -68.72628021]
[138.18840027 -83.71131897]
[138.85818481 -98.69635773]
[139.52796936 -113.68139648]
[140.19775391 -128.66644287]
[140.86753845 -143.65147400]
[128.28399658 -147.63972473]
[117.03487396 -154.52694702]
[107.77555847 -163.90600586]
[101.04411316 -175.22476196]
[97.22995758 -187.81858826]
[96.55142212 -200.94935608]
[99.04319000 -213.84877014]
[104.55458069 -225.76321411]
[112.75868225 -235.99787903]
[123.17168427 -243.95726013]
[135.18145752 -249.17971802]
[148.08351135 -251.36441040]
[149.42175293 -266.30459595]
[150.75999451 -281.24478149]
[152.09822083 -296.18496704]
[153.43646240 -311.12515259]
[154.77468872 -326.06533813]
[156.11293030 -341.00552368]
[156.89424133 -355.98516846]
[157.11756897 -370.98348999]
[157.22923279 -385.98306274]
[157.22923279 -400.98306274]
[142.97656250 -406.14419556]
[131.35064697 -415.87115479]
[123.75534058 -428.98934937]
[121.10783386 -443.91470337]
[123.72782898 -458.84494019]
[131.29893494 -471.97711182]
[142.90692139 -481.72546387]
[157.15005493 -486.91284180]
[172.30842590 -486.91284180]
[186.55155945 -481.72546387]
[198.15954590 -471.97711182]
[205.73065186 -458.84494019]
[208.35064697 -443.91470337]
[205.70314026 -428.98934937]
[198.10783386 -415.87115479]
[186.48191833 -406.14419556]
[172.22923279 -400.98306274]
[172.22923279 -385.98306274]
[175.37274170 -379.29425049]
[172.11590576 -370.76016235]
[171.89257812 -355.76184082]
[184.30990601 -364.17669678]
[198.67568970 -359.86108398]
[204.39999390 -345.99627686]
[197.26307678 -332.80291748]
[182.52601624 -330.00665283]
[171.05311584 -339.66729736]
[169.71487427 -324.72711182]
[168.37663269 -309.78692627]
[167.03840637 -294.84674072]
[165.70016479 -279.90655518]
[164.36193848 -264.96636963]
[163.02369690 -250.02616882]
[178.69441223 -243.73512268]
[191.67675781 -232.90859985]
[200.69944763 -218.59242249]
[204.87448120 -202.17478943]
[203.78457642 -185.25173950]
[197.52482605 -169.47192383]
[186.69451904 -156.37609863]
[172.33979797 -147.24656677]
[155.85258484 -142.98168945]
[155.18280029 -127.99665070]
[154.51301575 -113.01161194]
[153.84323120 -98.02657318]
[153.17344666 -83.04153442]
[152.50366211 -68.05649567]
[160.34057617 -80.84644318]
[172.03608704 -90.23873138]
[186.21620178 -95.12996674]
[201.21507263 -94.94552612]
[215.27062988 -89.70709229]
[226.73165894 -80.03005219]
[234.25170898 -67.05126953]
[236.94734192 -52.29547501]
[234.50187683 -37.49615860]
[227.20260620 -24.39193535]
[215.90704346 -14.52227497]
[201.94216919 -9.04665375]
[186.94857788 -8.60834408]
[172.68769836 -13.25883675]
[160.83486938 -22.45179749]
[152.78256226 -35.10724640]
[149.47666931 -49.73999786]
[145.28965759 -35.33621597]
[141.10264587 -20.93243408]
[137.02297974 -6.49788141]
[133.05088806 7.96664238]
[129.07879639 22.43116570]
[125.10669708 36.89569092]
[121.13459778 51.36021423]
[117.16250610 65.82473755]
[113.19040680 80.28926086]
[109.21830750 94.75378418]
[105.78724670 109.35610962]
[102.90197754 124.07599640]
[111.45161438 137.09680176]
[108.31584167 151.98376465]
[95.84980774 160.05430603]
[92.96453094 174.77418518]
[90.07926178 189.49407959]
[95.01759338 204.52482605]
[84.97666931 215.52615356]
[82.09139252 230.24604797]
[79.20612335 244.96594238]
[76.32084656 259.68582153]
[73.43557739 274.40573120]
[75.12890625 279.34329224]
[74.79257965 283.97366333]
[72.88349915 287.57510376]
[70.07878876 289.71191406]
[66.53911591 304.28826904]
[62.99943924 318.86465454]
[64.36939240 322.98498535]
[64.35807037 326.93017578]
[63.19015884 330.28744507]
[61.20128632 332.75949097]
[58.79081726 334.19052124]
[54.38981628 348.53036499]
[49.98881912 362.87020874]
[45.58782196 377.21005249]
[41.18682480 391.54989624]
[54.79782867 397.91281128]
[67.39078522 406.10815430]
[78.72056580 415.97637939]
[88.56663513 427.32543945]
[96.73733521 439.93438721]
[103.07362366 453.55783081]
[107.45215607 467.93051147]
[109.78770447 482.77273560]
[110.03481293 497.79556274]
[108.18866730 512.70654297]
[104.28520966 527.21551514]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 199]
[33 198]
[34 197]
[35 196]
[36 195]
[37 190]
[38 189]
[39 188]
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[46 178]
[47 177]
[48 176]
[51 173]
[52 172]
[58 171]
[59 170]
[60 169]
[61 168]
[62 167]
[63 166]
[64 165]
[65 164]
[67 163]
[68 162]
[69 161]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
[75 139]
[87 130]
[88 129]
[89 128]
[90 127]
[91 126]
[92 125]
[93 124]
[94 118]
[95 117]
[96 115]
[97 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
