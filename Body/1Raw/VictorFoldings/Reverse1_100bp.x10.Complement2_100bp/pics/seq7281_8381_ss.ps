%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[110.60018921 182.83374023]
[113.85037231 168.18229675]
[118.22616577 153.82678223]
[123.70124817 139.85353088]
[130.24270630 126.34658051]
[117.28970337 118.78220367]
[104.33670044 111.21782684]
[91.27251434 103.84713745]
[78.10004425 96.67176819]
[64.92756653 89.49639893]
[51.75508881 82.32103729]
[38.58261490 75.14566803]
[25.41013908 67.97030640]
[9.59011173 68.16351318]
[2.11466432 55.28069305]
[-11.05781174 48.10532761]
[-24.23028755 40.92996216]
[-32.17563629 53.65805817]
[-40.86104965 65.89311218]
[-50.25602722 77.59214783]
[-60.32756042 88.71406555]
[-71.04028320 99.21981049]
[-82.35655212 109.07247162]
[-94.23663330 118.23744202]
[-106.63878632 126.68253326]
[-119.51944733 134.37808228]
[-132.83338928 141.29704285]
[-146.53381348 147.41513062]
[-160.57263184 152.71086121]
[-174.90051270 157.16560364]
[-189.46713257 160.76373291]
[-204.22132874 163.49259949]
[-219.11126709 165.34263611]
[-234.08465576 166.30732727]
[-249.08889771 166.38328552]
[-264.07128906 165.57025146]
[-278.97918701 163.87106323]
[-293.76025391 161.29171753]
[-308.36254883 157.84124756]
[-322.73480225 153.53179932]
[-336.82653809 148.37849426]
[-350.58819580 142.39942932]
[-363.97149658 135.61561584]
[-376.92941284 128.05087280]
[-389.41644287 119.73178864]
[-401.38870239 110.68756866]
[-412.80416870 100.94998169]
[-423.62271118 90.55324554]
[-433.80633545 79.53386688]
[-443.31927490 67.93054962]
[-452.12811279 55.78406143]
[-460.20193481 43.13706207]
[-467.51232910 30.03397751]
[-474.03366089 16.52083015]
[-479.74301147 2.64508629]
[-484.62033081 -11.54451466]
[-488.64846802 -25.99813080]
[-491.81329346 -40.66499329]
[-494.10369873 -55.49358368]
[-495.51159668 -70.43181610]
[-496.03210449 -85.42721558]
[-495.66333008 -100.42711639]
[-494.40661621 -115.37882233]
[-492.26632690 -130.22982788]
[-489.25003052 -144.92794800]
[-485.36831665 -159.42156982]
[-480.63479614 -173.65979004]
[-475.06610107 -187.59257507]
[-468.68179321 -201.17100525]
[-461.50430298 -214.34736633]
[-453.55883789 -227.07539368]
[-444.87332153 -239.31037903]
[-435.47824097 -251.00932312]
[-425.40661621 -262.13116455]
[-414.69381714 -272.63681030]
[-403.37744141 -282.48937988]
[-391.49728394 -291.65423584]
[-379.09506226 -300.09921265]
[-366.21432495 -307.79464722]
[-352.90032959 -314.71350098]
[-339.19982910 -320.83148193]
[-325.16098022 -326.12707520]
[-310.83306885 -330.58169556]
[-296.26641846 -334.17968750]
[-281.51220703 -336.90844727]
[-266.62222290 -338.75833130]
[-251.64883423 -339.72290039]
[-236.64459229 -339.79873657]
[-221.66221619 -338.98556519]
[-206.75431824 -337.28625488]
[-191.97328186 -334.70675659]
[-177.37100220 -331.25616455]
[-162.99879456 -326.94659424]
[-148.90711975 -321.79315186]
[-135.14550781 -315.81396484]
[-121.76226044 -309.03005981]
[-108.80440521 -301.46520996]
[-96.31745148 -293.14599609]
[-84.34526825 -284.10168457]
[-72.92990875 -274.36398315]
[-62.11146164 -263.96716309]
[-51.92793274 -252.94769287]
[-42.41509247 -241.34428406]
[-33.60634995 -229.19772339]
[-25.53265190 -216.55065918]
[-18.22235680 -203.44750977]
[-11.70114136 -189.93429565]
[-5.99191141 -176.05850220]
[-1.11472154 -161.86886597]
[2.91329670 -147.41520691]
[6.07799530 -132.74832153]
[8.36825752 -117.91971588]
[9.77603817 -102.98146820]
[10.29639339 -87.98606110]
[9.92749500 -72.98616791]
[8.67063904 -58.03446960]
[6.53023958 -43.18348694]
[3.51381564 -28.48538780]
[-0.36803779 -13.99179649]
[-5.10168552 0.24637571]
[-10.67049980 14.17911625]
[-17.05492020 27.75748634]
[-3.88244510 34.93285370]
[9.29003048 42.10821915]
[24.16787338 41.40178299]
[32.58550644 54.79782867]
[45.75798035 61.97319412]
[58.93045807 69.14855957]
[72.10293579 76.32392883]
[85.27540588 83.49929047]
[98.44788361 90.67465973]
[103.68436432 90.36930847]
[108.71916962 93.01959991]
[111.90108490 98.26482391]
[124.85408020 105.82920837]
[137.80708313 113.39358521]
[146.35656738 101.05930328]
[155.83616638 89.42462921]
[166.18887329 78.55955505]
[177.35240173 68.52940369]
[189.25962830 59.39451599]
[201.83894348 51.20981979]
[215.01467896 44.02454376]
[228.70761108 37.88190079]
[242.83537292 32.81883621]
[257.31298828 28.86579514]
[272.05343628 26.04655457]
[286.96798706 24.37807274]
[301.96701050 23.87038040]
[316.96026611 24.52653313]
[331.85760498 26.34258270]
[346.56939697 29.30760956]
[361.00717163 33.40377808]
[375.08413696 38.60645676]
[388.71557617 44.88435364]
[401.81954956 52.19971466]
[414.31719971 60.50853729]
[426.13342285 69.76085663]
[437.19711304 79.90103149]
[447.44174194 90.86806488]
[456.80569458 102.59600830]
[465.23266602 115.01432037]
[472.67196655 128.04832458]
[479.07882690 141.61962891]
[484.41476440 155.64660645]
[488.64767456 170.04490662]
[491.75207520 184.72792053]
[493.70932007 199.60734558]
[494.50759888 214.59370422]
[494.14218140 229.59686279]
[492.61520386 244.52659607]
[489.93588257 259.29309082]
[486.12030029 273.80755615]
[481.19143677 287.98269653]
[475.17892456 301.73324585]
[468.11889648 314.97653198]
[460.05386353 327.63290405]
[451.03228760 339.62622070]
[441.10845947 350.88436890]
[430.34204102 361.33963013]
[418.79779053 370.92913818]
[406.54513550 379.59521484]
[393.65777588 387.28573608]
[380.21319580 393.95443726]
[366.29226685 399.56121826]
[351.97872925 404.07238770]
[337.35864258 407.46078491]
[322.51992798 409.70605469]
[307.55184937 410.79467773]
[292.54443359 410.72009277]
[277.58792114 409.48275757]
[262.77224731 407.09011841]
[248.18656921 403.55657959]
[233.91856384 398.90338135]
[220.05404663 393.15850830]
[206.67642212 386.35650635]
[193.86611938 378.53826904]
[181.70021057 369.75085449]
[170.25183105 360.04708862]
[159.58985901 349.48532104]
[149.77841187 338.12911987]
[140.87649536 326.04672241]
[132.93765259 313.31082153]
[126.00961304 299.99801636]
[120.13406372 286.18838501]
[115.34632111 271.96496582]
[111.67520142 257.41326904]
[109.14276123 242.62088013]
[107.76425171 227.67671204]
[107.54795074 212.67066956]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 136]
[6 135]
[7 134]
[8 131]
[9 130]
[10 129]
[11 128]
[12 127]
[13 126]
[15 124]
[16 123]
[17 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
