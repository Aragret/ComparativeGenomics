%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[10.62081718 517.36218262]
[9.33060646 532.48504639]
[2.66101384 546.11883545]
[-8.48595428 556.41979980]
[-22.60276031 561.99475098]
[-37.78022385 562.08978271]
[-51.96571732 556.69195557]
[-63.24076843 546.53137207]
[-70.08052063 532.98211670]
[-71.55995178 517.87664795]
[-67.47898102 503.25781250]
[-58.38953018 491.10269165]
[-45.52086639 483.05523682]
[-30.61337471 480.20370483]
[-27.94757843 465.44250488]
[-25.28178215 450.68127441]
[-22.61598778 435.92007446]
[-19.95019150 421.15884399]
[-21.64944839 418.06936646]
[-21.93671036 414.00335693]
[-20.36929893 409.63339233]
[-16.82166100 405.80438232]
[-21.54791069 391.67950439]
[-10.94625664 379.93576050]
[-7.62399721 365.30831909]
[-4.30173779 350.68084717]
[-15.29334450 360.88793945]
[-29.74494362 364.90679932]
[-44.42800903 361.83963013]
[-56.06230927 352.37161255]
[-62.04870987 338.61795044]
[-61.04983521 323.65127563]
[-53.28883362 310.81509399]
[-40.49953461 302.97714233]
[-25.53910065 301.88836670]
[-11.74973106 307.79202271]
[-2.21200514 319.36923218]
[0.94332397 334.03363037]
[6.60611057 320.14361572]
[12.26889706 306.25357056]
[17.93168449 292.36355591]
[4.82762241 283.35769653]
[-5.96228647 271.66952515]
[-13.90046215 257.87692261]
[-18.59042931 242.66284180]
[-19.79662895 226.78128052]
[-17.45623207 211.02005005]
[-11.68242264 196.16168213]
[-2.75891352 182.94448853]
[8.87398434 172.02600098]
[22.64109230 163.95014954]
[37.86080170 159.12022400]
[53.77881622 157.77873230]
[69.60554504 159.99519348]
[74.85226440 145.94271851]
[80.09897614 131.89025879]
[85.34569550 117.83777618]
[90.59241486 103.78530884]
[90.23749542 95.73257446]
[96.02327728 89.56364441]
[101.47863007 75.59085083]
[106.93399048 61.61804962]
[100.83451080 47.28507996]
[106.56606293 33.19239044]
[120.26795197 27.46579552]
[125.72330475 13.49299717]
[128.49891663 -1.24796546]
[128.49891663 -16.24796486]
[128.49891663 -31.24796486]
[118.62387848 -19.95710182]
[104.02423859 -16.51465034]
[90.14530182 -22.20456123]
[82.16356659 -34.90463638]
[83.05602264 -49.87806320]
[92.48981476 -61.54012299]
[106.94635773 -65.54116058]
[121.03372955 -60.38887787]
[129.49801636 -48.00383759]
[131.28048706 -62.89755249]
[133.06294250 -77.79127502]
[134.84541321 -92.68498993]
[132.59883118 -98.90306091]
[133.66908264 -104.48442078]
[136.90910339 -107.99317169]
[139.13421631 -122.82720947]
[141.35934448 -137.66125488]
[143.58445740 -152.49530029]
[129.14640808 -156.64231873]
[115.37319946 -162.63845825]
[102.50050354 -170.38111877]
[90.74858856 -179.73780823]
[80.31855774 -190.54841614]
[71.38887024 -202.62797546]
[64.11232758 -215.76977539]
[58.61343765 -229.74894714]
[54.98630142 -244.32629395]
[53.29298019 -259.25238037]
[53.56244659 -274.27175903]
[55.79009247 -289.12750244]
[59.93780136 -303.56533813]
[65.93459320 -317.33825684]
[73.67786407 -330.21060181]
[83.03511810 -341.96206665]
[93.84622955 -352.39157104]
[105.92620850 -361.32070923]
[119.06835175 -368.59661865]
[133.04779053 -374.09481812]
[147.62530518 -377.72128296]
[162.55145264 -379.41387939]
[177.57084656 -379.14370728]
[192.42646790 -376.91534424]
[206.86412048 -372.76696777]
[220.63676453 -366.76950073]
[233.50871277 -359.02563477]
[245.25973511 -349.66781616]
[255.68873596 -338.85620117]
[264.61727905 -326.77578735]
[271.89257812 -313.63330078]
[277.39013672 -299.65362549]
[281.01586914 -285.07592773]
[282.70776367 -270.14968872]
[282.43688965 -255.13031006]
[280.20782471 -240.27479553]
[276.05874634 -225.83734131]
[270.06063843 -212.06498718]
[262.31613159 -199.19340515]
[252.95776367 -187.44282532]
[242.14566040 -177.01432800]
[230.06483459 -168.08636475]
[216.92199707 -160.81170654]
[202.94203186 -155.31481934]
[188.36418152 -151.68975830]
[173.43786621 -149.99856567]
[158.41850281 -150.27018738]
[156.19337463 -135.43614197]
[153.96826172 -120.60209656]
[151.74314880 -105.76805115]
[149.73913574 -90.90252686]
[147.95666504 -76.00880432]
[146.17419434 -61.11508942]
[144.39173889 -46.22137070]
[143.49891663 -31.24796486]
[143.49891663 -16.24796486]
[143.49891663 -1.24796546]
[150.13708496 -14.69916248]
[159.66169739 -26.28716278]
[171.57312012 -35.40408325]
[185.24647522 -41.57166672]
[199.96452332 -44.46637726]
[214.95515442 -43.93636322]
[229.43200684 -40.00942993]
[242.63563538 -32.89157104]
[253.87342834 -22.95617867]
[262.55587769 -10.72444344]
[268.22747803 3.16198206]
[270.59075928 17.97464371]
[269.52169800 32.93650055]
[265.07641602 47.26268005]
[257.48809814 60.20166397]
[247.15478516 71.07469940]
[234.61857605 79.31140137]
[220.53706360 84.47969055]
[205.64895630 86.30845642]
[190.73526001 84.70175934]
[176.57829285 79.74388885]
[163.92073059 71.69491577]
[153.42654419 60.97708511]
[145.64624023 48.15262222]
[140.98794556 33.89427567]
[139.69610596 18.94835472]
[134.24075317 32.92115402]
[140.43774414 46.41680908]
[135.10429382 60.66492844]
[120.90678406 67.07341003]
[115.45143127 81.04620361]
[109.99607086 95.01900482]
[104.64488983 109.03202820]
[99.39817047 123.08449554]
[94.15145111 137.13696289]
[88.90473175 151.18943787]
[83.65801239 165.24191284]
[95.61980438 172.78479004]
[105.86599731 182.52383423]
[113.99990082 194.07920837]
[119.70718384 207.00083923]
[122.76795959 220.78587341]
[123.06529236 234.89833069]
[120.58965302 248.78987122]
[115.43923187 261.92120361]
[107.81599426 273.78283691]
[98.01781464 283.91510010]
[86.42681885 291.92575073]
[73.49446869 297.50518799]
[59.72400284 300.43856812]
[45.65082550 300.61389160]
[31.82171059 298.02633667]
[26.15892410 311.91635132]
[20.49613762 325.80639648]
[14.83335114 339.69641113]
[10.32572269 354.00311279]
[7.00346279 368.63055420]
[3.68120337 383.25802612]
[8.16982269 398.42913818]
[-2.19420028 409.12664795]
[-5.18897486 423.82464600]
[-7.85477018 438.58584595]
[-10.52056599 453.34707642]
[-13.18636131 468.10827637]
[-15.85215664 482.86950684]
[-2.88375592 490.75524902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 209]
[15 208]
[16 207]
[17 206]
[18 205]
[22 204]
[24 202]
[25 201]
[26 200]
[38 199]
[39 198]
[40 197]
[41 196]
[54 181]
[55 180]
[56 179]
[57 178]
[58 177]
[60 176]
[61 175]
[62 174]
[65 171]
[66 170]
[67 144]
[68 143]
[69 142]
[78 141]
[79 140]
[80 139]
[81 138]
[84 137]
[85 136]
[86 135]
[87 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
