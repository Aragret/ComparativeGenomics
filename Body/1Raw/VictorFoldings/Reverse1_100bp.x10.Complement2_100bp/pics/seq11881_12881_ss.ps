%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[185.25952148 573.49822998]
[186.63777161 558.53973389]
[189.95675659 543.88916016]
[195.15969849 529.79718018]
[202.15754700 516.50488281]
[210.83058167 504.23974609]
[221.03036499 493.21163940]
[232.58239746 483.60925293]
[245.28898621 475.59692383]
[239.01162720 461.97360229]
[232.73426819 448.35028076]
[226.45690918 434.72698975]
[220.17955017 421.10366821]
[213.49935913 407.67327881]
[206.42224121 394.44775391]
[199.34513855 381.22222900]
[195.96540833 395.83651733]
[184.71705627 405.75994873]
[169.79542542 407.29132080]
[156.76593018 399.85946655]
[150.48825073 386.23632812]
[153.30378723 371.50292969]
[164.16244507 361.15451050]
[179.01419067 359.05075073]
[192.32051086 365.97717285]
[186.86515808 352.00436401]
[181.40979004 338.03155518]
[169.57356262 328.98983765]
[171.76202393 313.32073975]
[166.40112305 308.23321533]
[166.33116150 299.09906006]
[161.08444214 285.04660034]
[155.83772278 270.99411011]
[140.97563171 269.73559570]
[128.08076477 262.11773682]
[119.73798370 249.60539246]
[117.64660645 234.65057373]
[122.27448273 220.21209717]
[132.75471497 209.17007446]
[127.50799561 195.11761475]
[122.26127625 181.06513977]
[110.56096649 171.84819031]
[112.98247528 156.21339417]
[107.73575592 142.16091919]
[102.48903656 128.10845947]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[78.00313568 63.16547012]
[72.34034729 49.27544022]
[66.67755890 35.38541412]
[61.01477432 21.49538803]
[42.10862350 14.69561481]
[34.41725159 -3.53475595]
[42.48643112 -21.26615906]
[36.20906830 -34.88947296]
[23.40664673 -44.18509293]
[25.10758018 -58.98225784]
[12.30515766 -68.27787781]
[14.00609112 -83.07504272]
[7.72873068 -96.69835663]
[1.45137000 -110.32167816]
[-2.18111944 -112.70053864]
[-4.62216854 -115.79985809]
[-5.79158783 -119.15662384]
[-5.76779890 -122.32933044]
[-4.76707268 -124.94785309]
[-10.22242928 -138.92065430]
[-22.44886971 -148.96180725]
[-19.87020874 -163.63150024]
[-25.32556534 -177.60429382]
[-39.96988297 -174.23356628]
[-54.94893265 -173.03108215]
[-69.94342804 -174.02247620]
[-84.63377380 -177.18661499]
[-98.70683289 -182.45605469]
[-111.86263275 -189.71846008]
[-123.82077026 -198.81906128]
[-134.32635498 -209.56385803]
[-143.15544128 -221.72383118]
[-150.11985779 -235.03977966]
[-155.07115173 -249.22789001]
[-157.90379333 -263.98574829]
[-158.55738831 -278.99874878]
[-157.01800537 -293.94692993]
[-153.31848145 -308.51165771]
[-147.53764343 -322.38250732]
[-139.79872131 -335.26376343]
[-130.26667786 -346.88088989]
[-119.14467621 -356.98629761]
[-106.66979218 -365.36453247]
[-93.10792542 -371.83706665]
[-78.74814606 -376.26589966]
[-63.89653397 -378.55667114]
[-48.86965561 -378.66049194]
[-33.98780823 -376.57519531]
[-19.56819725 -372.34521484]
[-5.91817951 -366.06072998]
[6.67129326 -357.85565186]
[17.93187714 -347.90493774]
[27.62355232 -336.42062378]
[35.53973770 -323.64752197]
[41.51170349 -309.85791016]
[45.41215515 -295.34570312]
[47.15795135 -280.42022705]
[46.71188354 -265.39959717]
[44.08345795 -250.60401917]
[39.32870102 -236.34884644]
[32.54896164 -222.93791199]
[23.88875008 -210.65708923]
[13.53265572 -199.76814270]
[1.70142198 -190.50317383]
[-11.35276699 -183.05964661]
[-5.89741039 -169.08685303]
[5.93882608 -160.04512024]
[3.75036836 -144.37600708]
[9.20572567 -130.40321350]
[15.07468605 -116.59903717]
[21.35204697 -102.97571564]
[27.62940788 -89.35240173]
[39.98283005 -81.03121185]
[38.73089600 -65.25962067]
[51.08432007 -56.93843079]
[49.83238602 -41.16683578]
[56.10974503 -27.54351997]
[66.34123230 -26.71423149]
[75.37590027 -21.67337608]
[81.55084991 -13.27201176]
[83.69786835 -2.98639846]
[81.36392975 7.34122849]
[74.90480042 15.83260059]
[80.56758881 29.72262764]
[86.23037720 43.61265564]
[91.89315796 57.50268173]
[95.86966705 60.14776230]
[98.22676849 65.31893921]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[116.54151154 122.86173248]
[121.78822327 136.91419983]
[127.03494263 150.96667480]
[139.11053467 161.18875122]
[136.31375122 175.81842041]
[141.56047058 189.87089539]
[146.80718994 203.92335510]
[161.95959473 205.39501953]
[174.91763306 213.26751709]
[183.13896179 225.93360901]
[185.03785706 240.85188293]
[180.29081726 255.05664062]
[169.89019775 265.74740601]
[175.13691711 279.79986572]
[180.38363647 293.85235596]
[185.73481750 307.86535645]
[197.96125793 317.90652466]
[195.38259888 332.57620239]
[200.83795166 346.54901123]
[206.29330444 360.52182007]
[212.57066345 374.14511108]
[219.64778137 387.37063599]
[226.72488403 400.59619141]
[230.49252319 402.75460815]
[233.11372375 405.70315552]
[234.48086548 408.98434448]
[234.64595032 412.15286255]
[233.80285645 414.82629395]
[240.08023071 428.44961548]
[246.35758972 442.07293701]
[252.63494873 455.69625854]
[258.91229248 469.31954956]
[273.25885010 464.86633301]
[288.06396484 462.32385254]
[303.07424927 461.73565674]
[318.03289795 463.11175537]
[332.68395996 466.42864990]
[346.77670288 471.62957764]
[360.07000732 478.62554932]
[372.33636475 487.29681396]
[383.36593628 497.49502563]
[392.96997070 509.04568481]
[400.98413086 521.75115967]
[407.27127075 535.39398193]
[411.72381592 549.74072266]
[414.26556396 564.54595947]
[414.85305786 579.55627441]
[413.47625732 594.51489258]
[410.15866089 609.16577148]
[404.95706177 623.25823975]
[397.96044922 636.55120850]
[389.28860474 648.81719971]
[379.08987427 659.84625244]
[367.53875732 669.44976807]
[354.83291626 677.46331787]
[341.18978882 683.74975586]
[326.84280396 688.20166016]
[312.03747559 690.74273682]
[297.02713013 691.32946777]
[282.06860352 689.95196533]
[267.41787720 686.63366699]
[253.32560730 681.43139648]
[240.03298950 674.43414307]
[227.76744080 665.76171875]
[216.73884583 655.56243896]
[207.13591003 644.01086426]
[199.12297058 631.30468750]
[192.83712769 617.66125488]
[188.38594055 603.31402588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 173]
[10 172]
[11 171]
[12 170]
[13 169]
[14 164]
[15 163]
[16 162]
[25 161]
[26 160]
[27 159]
[29 157]
[31 156]
[32 155]
[33 154]
[39 148]
[40 147]
[41 146]
[43 144]
[44 143]
[45 142]
[46 141]
[48 139]
[49 138]
[50 135]
[51 134]
[52 133]
[53 132]
[56 126]
[57 125]
[59 123]
[61 121]
[62 120]
[63 119]
[68 118]
[69 117]
[71 115]
[72 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
