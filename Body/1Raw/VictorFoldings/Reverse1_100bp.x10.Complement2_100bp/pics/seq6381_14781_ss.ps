%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[94.63864136 543.88909912]
[90.69927216 558.80505371]
[79.30567932 569.20648193]
[64.09352875 571.77435303]
[49.91695404 565.68927002]
[41.29964828 552.89294434]
[40.99136734 537.46868896]
[49.09047699 524.33825684]
[63.01258469 517.69152832]
[64.79505157 502.79782104]
[66.57751465 487.90411377]
[68.35998535 473.01040649]
[62.18989944 459.45388794]
[71.51226807 446.67092896]
[73.29473114 431.77719116]
[75.07720184 416.88348389]
[72.75080872 409.86853027]
[76.99868011 401.78189087]
[79.00269318 386.91638184]
[81.00670624 372.05084229]
[83.01071930 357.18530273]
[85.01473236 342.31979370]
[87.01874542 327.45425415]
[89.02276611 312.58871460]
[91.02677917 297.72320557]
[93.03079224 282.85766602]
[91.44040680 280.54925537]
[90.66860199 277.47177124]
[91.01287842 273.93383789]
[92.65361023 270.34600830]
[95.62215424 267.17715454]
[98.50742340 252.45724487]
[101.39270020 237.73736572]
[103.61781311 222.90332031]
[105.17833710 207.98471069]
[98.80710602 194.52156067]
[107.93811798 181.60121155]
[109.49864197 166.68261719]
[108.04922485 151.75280762]
[103.64822388 137.41294861]
[99.24723053 123.07310486]
[94.84622955 108.73326111]
[89.65863037 102.56387329]
[90.48816681 94.14706421]
[86.30116272 79.74327850]
[75.01930237 68.65137482]
[78.89644623 54.27024460]
[74.70943451 39.86646271]
[70.52242279 25.46267891]
[66.33541107 11.05889797]
[59.18811035 24.24662399]
[45.28272629 29.87159348]
[30.97661400 25.36214828]
[22.81033134 12.77994347]
[24.51739693 -2.12260389]
[35.31736374 -12.53225136]
[50.27262878 -13.68984795]
[62.54691696 -5.06464052]
[59.88111877 -19.82585716]
[57.21532440 -34.58707428]
[54.54953003 -49.34829330]
[51.77391815 -64.08925629]
[47.55441284 -49.69495773]
[39.32972336 -37.15085602]
[27.81136131 -27.54214478]
[13.99578667 -21.70006752]
[-0.92181957 -20.13002396]
[-15.65093327 -22.96784210]
[-28.91733932 -29.96801758]
[-39.57336044 -40.52496719]
[-46.69714737 -53.72541046]
[-49.67241669 -68.42737579]
[-48.24177933 -83.35899353]
[-42.52899933 -97.22853851]
[-33.02828979 -108.83614349]
[-20.56155968 -117.17764282]
[-6.20730305 -121.53141022]
[8.79269314 -121.52080536]
[23.14077950 -117.14674377]
[35.59570312 -108.78762054]
[45.07998657 -97.16658783]
[50.77230072 -83.29239655]
[52.11053467 -98.23258209]
[53.33751297 -113.18231964]
[54.45315933 -128.14077759]
[55.56880951 -143.09922791]
[56.68445587 -158.05767822]
[57.80010605 -173.01612854]
[58.91575623 -187.97457886]
[56.39376450 -194.08613586]
[57.21372223 -199.70971680]
[60.29383850 -203.35964966]
[61.85436249 -218.27824402]
[63.41488266 -233.19685364]
[64.86430359 -248.12666321]
[66.20253754 -263.06683350]
[67.54077148 -278.00701904]
[68.87900543 -292.94720459]
[54.81779099 -298.46618652]
[42.88187408 -307.72418213]
[34.03884506 -319.97070312]
[29.00556755 -334.21301270]
[28.19006538 -349.29647827]
[31.65844917 -363.99841309]
[39.12955475 -377.12698364]
[49.99773026 -387.61791992]
[63.38194275 -394.62072754]
[78.19718933 -397.56777954]
[93.24247742 -396.22012329]
[107.29813385 -390.68704224]
[119.22474670 -381.41705322]
[128.05546570 -369.16165161]
[133.07443237 -354.91430664]
[133.87478638 -339.83001709]
[130.39163208 -325.13156128]
[122.90734100 -312.01049805]
[112.02863312 -301.53051758]
[98.63739014 -294.54113770]
[83.81919098 -291.60897827]
[82.48095703 -276.66879272]
[81.14272308 -261.72860718]
[79.80448914 -246.78842163]
[82.33870697 -239.84584045]
[78.33348846 -231.63633728]
[76.77296448 -216.71772766]
[75.21244049 -201.79911804]
[73.87420654 -186.85893250]
[72.75856018 -171.90048218]
[71.64291382 -156.94203186]
[70.52725983 -141.98358154]
[69.41161346 -127.02512360]
[68.29596710 -112.06666565]
[70.93326569 -105.16258240]
[67.05072021 -96.89434814]
[65.71248627 -81.95416260]
[66.49381256 -66.97452545]
[70.86521149 -61.01527786]
[69.31074524 -52.01408768]
[71.97653961 -37.25286865]
[74.64233398 -22.49165344]
[77.30813599 -7.73043585]
[80.73919678 6.87188625]
[84.92620850 21.27566910]
[89.11321259 35.67945099]
[93.30022430 50.08323288]
[104.28260040 60.14487839]
[100.70494080 75.55626678]
[104.89195251 89.96005249]
[109.18607330 104.33226013]
[113.58707428 118.67211151]
[117.98807526 133.01196289]
[122.38906860 147.35180664]
[124.77676392 132.54306030]
[130.25071716 118.57753754]
[138.56188965 106.09056854]
[149.33218384 95.65023041]
[162.07164001 87.73149109]
[176.20068359 82.69460297]
[191.07652283 80.76870728]
[206.02243042 82.04141235]
[220.35845947 86.45482635]
[233.43241882 93.80817413]
[244.64953613 103.76691437]
[253.49948120 115.87799835]
[259.57965088 129.59045410]
[262.61346436 144.28044128]
[262.46289062 159.27969360]
[259.13476562 173.90582275]
[252.78048706 187.49343872]
[243.68916321 199.42439270]
[232.27436829 209.15591431]
[219.05541992 216.24528503]
[204.63366699 220.36999512]
[189.66522217 221.34237671]
[174.83103943 219.11819458]
[160.80596924 213.79864502]
[148.22807312 205.62573242]
[137.66955566 194.97126770]
[129.61076355 182.31994629]
[124.41724396 168.24313354]
[122.85671997 183.16174316]
[129.11633301 197.69197083]
[120.09694672 209.54524231]
[118.53642273 224.46383667]
[130.84054565 215.88430786]
[145.63111877 218.38212585]
[154.43540955 230.52644348]
[152.20994568 245.36042786]
[140.22955322 254.38652039]
[125.35715485 252.43414307]
[116.11258698 240.62263489]
[113.22731781 255.34252930]
[110.34204865 270.06240845]
[107.89631653 284.86169434]
[105.89230347 299.72720337]
[103.88829041 314.59274292]
[101.88427734 329.45828247]
[99.88026428 344.32379150]
[97.87625122 359.18933105]
[95.87223816 374.05487061]
[93.86822510 388.92037964]
[91.86421204 403.78591919]
[89.97091675 418.66595459]
[88.18845367 433.55966187]
[86.40598297 448.45336914]
[92.44857025 463.07519531]
[83.25370026 474.79287720]
[81.47123718 489.68658447]
[79.68876648 504.58029175]
[77.90630341 519.47399902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 210]
[10 209]
[11 208]
[12 207]
[14 205]
[15 204]
[16 203]
[18 202]
[19 201]
[20 200]
[21 199]
[22 198]
[23 197]
[24 196]
[25 195]
[26 194]
[31 193]
[32 192]
[33 191]
[34 184]
[35 183]
[37 181]
[38 180]
[39 152]
[40 151]
[41 150]
[42 149]
[44 148]
[45 147]
[47 145]
[48 144]
[49 143]
[50 142]
[58 141]
[59 140]
[60 139]
[61 138]
[62 136]
[82 135]
[83 134]
[84 132]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[92 126]
[93 125]
[94 124]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
