%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[88.76737213 764.08093262]
[74.25036621 768.02691650]
[59.25543213 769.23803711]
[44.29330826 767.67291260]
[29.87359238 763.38500977]
[16.48741531 756.52026367]
[4.59070349 747.31250000]
[-5.41134357 736.07531738]
[-13.17805958 723.19152832]
[-18.44491386 709.09985352]
[-21.03252029 694.28027344]
[-20.85274315 679.23760986]
[-17.91170883 664.48413086]
[-12.30958462 650.52239990]
[-4.23717976 637.82788086]
[6.03056431 626.83294678]
[18.14393234 617.91210938]
[31.69034576 611.36926270]
[46.20841980 607.42712402]
[61.20367432 606.22009277]
[62.76419830 591.30151367]
[64.32472229 576.38287354]
[65.88524628 561.46429443]
[66.77806091 546.49084473]
[67.00138855 531.49255371]
[67.22471619 516.49420166]
[67.44804382 501.49584961]
[65.59461975 499.39276123]
[64.46257782 496.42880249]
[64.38399506 492.87503052]
[65.58676147 489.11767578]
[68.15771484 485.61849976]
[69.27336121 470.66003418]
[70.38900757 455.70159912]
[71.50466156 440.74313354]
[57.07074356 434.45416260]
[45.64344025 423.58441162]
[38.61705780 409.43475342]
[36.85759354 393.70788574]
[40.59604263 378.30316162]
[49.39826202 365.08752441]
[62.21529770 355.66897583]
[77.50836945 351.20111084]
[78.40118408 336.22772217]
[79.29399872 321.25430298]
[80.18681335 306.28091431]
[81.07962799 291.30749512]
[81.97244263 276.33410645]
[68.50719452 269.88302612]
[58.51055908 258.73794556]
[53.52906418 244.57640076]
[54.35118484 229.54603577]
[60.88273621 215.93896484]
[72.15647888 205.84214783]
[86.47526550 200.81739807]
[87.36808014 185.84397888]
[80.40203857 172.67874146]
[88.94702148 159.36357117]
[89.83983612 144.39016724]
[90.73265076 129.41676331]
[78.99054718 122.57947540]
[71.32620239 111.35970306]
[69.22718811 97.93510437]
[73.10092163 84.91129303]
[82.19553375 74.81606293]
[94.74584198 69.60882568]
[95.86148834 54.65037155]
[96.97713470 39.69192123]
[97.31211090 24.69565964]
[96.86550903 9.70231056]
[96.41889954 -5.29103947]
[83.46884918 -17.05180359]
[83.03971100 -34.20204163]
[94.90878296 -46.11690521]
[94.23899078 -61.10194397]
[93.56920624 -76.08698273]
[85.22341919 -89.52790070]
[92.38469696 -102.58796692]
[91.71491241 -117.57300568]
[91.04512787 -132.55804443]
[90.37534332 -147.54309082]
[89.59401703 -162.52272034]
[88.70120239 -177.49612427]
[87.80838776 -192.46952820]
[76.05132294 -183.15441895]
[61.40435410 -186.38960266]
[54.66469193 -199.79023743]
[60.80056000 -213.47787476]
[75.28881836 -217.36248779]
[87.44847870 -208.58193970]
[76.72088623 -219.87603760]
[77.16103363 -235.08329773]
[87.99433899 -245.24081421]
[88.21766663 -260.23913574]
[88.44099426 -275.23748779]
[88.66432190 -290.23583984]
[88.88764954 -305.23416138]
[89.11097717 -320.23251343]
[75.03035736 -325.89825439]
[63.94994736 -336.27075195]
[57.36827850 -349.94723511]
[56.17547226 -365.07806396]
[60.53283691 -379.61688232]
[69.85108185 -391.59747314]
[82.86999512 -399.39956665]
[97.82885742 -401.96795654]
[112.70462799 -398.95532227]
[125.48546600 -390.76907349]
[134.44287109 -378.51635742]
[138.36543274 -363.85421753]
[136.72265625 -348.76562500]
[129.73670959 -335.29116821]
[118.35237885 -325.25317383]
[104.10931396 -320.00918579]
[103.88598633 -305.01083374]
[103.66265869 -290.01251221]
[103.43933105 -275.01416016]
[103.21600342 -260.01580811]
[102.99267578 -245.01748657]
[113.51874542 -234.54193115]
[113.50592041 -219.32829285]
[102.44681549 -208.35861206]
[102.78179169 -193.36235046]
[103.67460632 -178.38894653]
[104.56742859 -163.41554260]
[108.10347748 -156.92568970]
[105.36038208 -148.21287537]
[106.03016663 -133.22782898]
[106.69995117 -118.24279022]
[107.36973572 -103.25775146]
[115.66761780 -90.88866425]
[108.55424500 -76.75676727]
[109.22402954 -61.77173233]
[109.89382172 -46.78668976]
[120.52586365 -39.50733566]
[125.09214020 -27.25045013]
[121.71560669 -14.41263771]
[111.41224670 -5.73764563]
[111.85885620 9.25570488]
[112.30546570 24.24905396]
[122.52750397 13.27135277]
[137.39842224 11.30779648]
[150.11946106 19.25609589]
[154.87469482 33.48239899]
[149.49012756 47.48262787]
[136.42749023 54.85606766]
[121.65885925 52.23168182]
[111.93559265 40.80756760]
[110.81993866 55.76602173]
[109.70429230 70.72447205]
[123.11327362 79.57926941]
[130.24822998 93.97719574]
[129.17240906 110.01000214]
[120.17784119 123.32562256]
[105.70605469 130.30958557]
[104.81324005 145.28298950]
[103.92042542 160.25639343]
[110.82260895 174.49263000]
[102.34148407 186.73680115]
[101.44866943 201.71020508]
[115.06889343 208.40087891]
[125.06295013 219.76582336]
[129.93127441 234.05264282]
[128.96150208 249.07418823]
[122.33246613 262.54345703]
[111.08228302 272.42166138]
[96.94585419 277.22689819]
[96.05303955 292.20031738]
[95.16021729 307.17370605]
[94.26740265 322.14712524]
[93.37458801 337.12054443]
[92.48177338 352.09393311]
[105.75830841 357.48236084]
[116.70527649 366.69384766]
[124.26093292 378.81762695]
[127.69779968 392.66137695]
[126.69272614 406.86843872]
[121.35719299 420.05068970]
[112.22512817 430.92428589]
[100.19951630 438.43466187]
[86.46311188 441.85879517]
[85.34746552 456.81723022]
[84.23181152 471.77569580]
[83.11616516 486.73413086]
[82.44638062 501.71917725]
[82.22305298 516.71752930]
[81.99972534 531.71588135]
[81.77639771 546.71417236]
[93.26602936 537.07116699]
[108.22046661 538.23944092]
[118.07312012 549.54986572]
[117.17993927 564.52325439]
[106.05258942 574.58215332]
[91.06531525 573.96441650]
[80.80384827 563.02478027]
[79.24332428 577.94342041]
[77.68280029 592.86199951]
[76.12227631 607.78063965]
[90.54315186 612.06463623]
[103.93118286 618.92584229]
[115.83037567 628.13037109]
[125.83544922 639.36480713]
[133.60563660 652.24658203]
[138.87628174 666.33679199]
[141.46789551 681.15563965]
[141.29216003 696.19836426]
[138.35510254 710.95263672]
[132.75674438 724.91589355]
[124.68776703 737.61260986]
[114.42298889 748.61029053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 198]
[21 197]
[22 196]
[23 195]
[24 188]
[25 187]
[26 186]
[27 185]
[32 184]
[33 183]
[34 182]
[35 181]
[43 172]
[44 171]
[45 170]
[46 169]
[47 168]
[48 167]
[55 160]
[56 159]
[58 157]
[59 156]
[60 155]
[66 150]
[67 149]
[68 148]
[69 140]
[70 139]
[71 138]
[74 134]
[75 133]
[76 132]
[78 130]
[79 129]
[80 128]
[81 127]
[82 125]
[83 124]
[84 123]
[90 122]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
