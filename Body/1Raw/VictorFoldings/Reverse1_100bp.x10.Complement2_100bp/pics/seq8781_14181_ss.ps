%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[79.40554810 568.72979736]
[76.99804688 553.87713623]
[77.44519806 538.83734131]
[80.73083496 524.15399170]
[86.73619080 510.35787964]
[95.24417114 497.94775391]
[105.94721985 487.37225342]
[118.45842743 479.01367188]
[132.32551575 473.17413330]
[129.22140503 458.49880981]
[126.11729431 443.82351685]
[123.01318359 429.14822388]
[119.90908051 414.47290039]
[109.66390228 425.42901611]
[94.69907379 424.40237427]
[86.04611206 412.14978027]
[90.08365631 397.70336914]
[103.83537292 391.71255493]
[117.16301727 398.59216309]
[107.79470825 387.01269531]
[113.61892700 372.30252075]
[111.61491394 357.43701172]
[109.61090088 342.57147217]
[107.60688782 327.70593262]
[99.94466400 340.60131836]
[86.57496643 347.40213013]
[71.64054108 346.00109863]
[59.76897812 336.83236694]
[54.63881302 322.73690796]
[57.83968353 308.08239746]
[68.37976837 297.40969849]
[82.99309540 294.02584839]
[97.15158081 298.97937012]
[106.46815491 310.73559570]
[106.46815491 295.73559570]
[106.46815491 280.73559570]
[106.46815491 265.73559570]
[106.46815491 250.73558044]
[105.79837036 235.75054932]
[104.46013641 220.81036377]
[103.12190247 205.87017822]
[88.05863190 200.53645325]
[76.78836060 189.12617493]
[71.60352325 173.88803101]
[73.59017944 157.85638428]
[82.40097046 144.24707031]
[96.31455994 135.81225586]
[94.75403595 120.89365387]
[93.19351196 105.97504425]
[90.57206726 103.14654541]
[89.21012115 99.17628479]
[89.58962250 94.65267944]
[91.91173553 90.35760498]
[91.01892090 75.38420105]
[90.12610626 60.41079330]
[81.58111572 47.09562302]
[88.54716492 33.93038177]
[87.20892334 18.99019623]
[85.42646027 4.09647989]
[83.64399719 -10.79723740]
[79.51699066 -18.94620514]
[81.94756317 -25.92575455]
[80.38704681 -40.84436035]
[78.82652283 -55.76296234]
[77.26599884 -70.68157196]
[75.37270355 -85.56160736]
[73.14759064 -100.39564514]
[70.92247009 -115.22969055]
[61.22364044 -127.72942352]
[66.98735809 -141.46363831]
[64.76224518 -156.29768372]
[61.43998337 -170.92514038]
[57.03898621 -185.26499939]
[52.63798523 -199.60484314]
[48.23698807 -213.94468689]
[43.83599091 -228.28453064]
[39.43499374 -242.62438965]
[35.03399658 -256.96423340]
[30.63299751 -271.30407715]
[26.23199844 -285.64392090]
[11.26035309 -284.11550903]
[-3.72176719 -285.53756714]
[-18.13849068 -289.85549927]
[-31.43567467 -296.90325928]
[-43.10221481 -306.41000366]
[-52.68967819 -318.01028442]
[-59.82954407 -331.25823975]
[-64.24738312 -345.64465332]
[-65.77338409 -360.61654663]
[-64.34888458 -375.59844971]
[-60.02864075 -390.01446533]
[-52.97871780 -403.31051636]
[-43.47008896 -414.97552490]
[-31.86824417 -424.56109619]
[-18.61912727 -431.69882202]
[-4.23199749 -436.11434937]
[10.74014187 -437.63790894]
[25.72180176 -436.21099854]
[40.13712692 -431.88839722]
[53.43202972 -424.83633423]
[65.09548950 -415.32580566]
[74.67919922 -403.72241211]
[81.81477356 -390.47213745]
[86.22795868 -376.08432007]
[87.74910736 -361.11190796]
[86.31976318 -346.13049316]
[81.99485016 -331.71588135]
[74.94062042 -318.42211914]
[65.42822266 -306.76019287]
[53.82327271 -297.17834473]
[40.57184601 -290.04492188]
[44.97284317 -275.70507812]
[49.37384033 -261.36523438]
[53.77484131 -247.02537537]
[58.17583847 -232.68553162]
[62.57683563 -218.34568787]
[66.97783661 -204.00584412]
[71.37882996 -189.66598511]
[75.77983093 -175.32614136]
[80.68620300 -189.50103760]
[91.95772552 -199.39814758]
[106.64804077 -202.43040466]
[120.91714478 -197.80517578]
[131.03512573 -186.73149109]
[134.35716248 -172.10397339]
[130.01487732 -157.74624634]
[119.14335632 -147.41134644]
[104.58437347 -143.80082703]
[90.14360809 -147.85845947]
[79.59628296 -158.52279663]
[81.82140350 -143.68876648]
[91.36107635 -132.25006104]
[85.75651550 -117.45481110]
[87.98163605 -102.62076569]
[90.20674896 -87.78672028]
[92.80964661 -85.40821838]
[94.38980865 -81.65081024]
[94.31169128 -77.00891113]
[92.18460083 -72.24208832]
[93.74512482 -57.32348633]
[95.30564880 -42.40488052]
[96.86617279 -27.48627663]
[98.53771210 -12.57970333]
[100.32017517 2.31401396]
[102.10264587 17.20773125]
[104.22042847 19.04434204]
[105.73830414 21.83049583]
[106.29096985 25.34190178]
[105.60097504 29.22628403]
[103.52056885 33.03756714]
[112.00169373 45.28174210]
[105.09951019 59.51797867]
[105.99232483 74.49138641]
[106.88513947 89.46479034]
[108.11211395 104.41452026]
[109.67263794 119.33312988]
[111.23316193 134.25173950]
[124.70816803 138.51446533]
[135.50798035 147.56367493]
[142.02328491 160.00781250]
[143.29962158 173.95274353]
[139.17720032 187.29010010]
[130.30995178 198.01594543]
[118.06208801 204.53195190]
[119.40032196 219.47212219]
[120.73855591 234.41230774]
[131.16262817 223.62628174]
[146.15745544 223.23246765]
[157.13333130 233.45648193]
[157.80274963 248.44152832]
[147.78225708 259.60351562]
[132.81204224 260.54830933]
[121.46815491 250.73558044]
[121.46815491 265.73559570]
[121.46815491 280.73559570]
[121.46815491 295.73559570]
[121.46815491 310.73559570]
[122.47241211 325.70193481]
[124.47643280 340.56747437]
[126.48044586 355.43298340]
[128.48445129 370.29852295]
[137.99610901 382.94125366]
[132.02854919 396.58813477]
[134.58438110 411.36880493]
[137.68849182 426.04409790]
[140.79260254 440.71942139]
[143.89671326 455.39471436]
[147.00082397 470.07000732]
[162.04476929 469.79431152]
[176.86898804 472.37094116]
[190.93759155 477.70675659]
[203.74200439 485.60888672]
[214.81935120 495.79165649]
[223.76919556 507.88696289]
[230.26802063 521.45758057]
[234.08087158 536.01293945]
[235.06993103 551.02691650]
[233.19944763 565.95666504]
[228.53703308 580.26257324]
[221.25123596 593.42742920]
[211.60543823 604.97534180]
[199.94830322 614.48889160]
[186.70124817 621.62420654]
[172.34315491 626.12322998]
[157.39305115 627.82342529]
[142.39135742 626.66333008]
[127.88039398 622.68481445]
[114.38471985 616.03173828]
[102.39219666 606.94464111]
[92.33634186 595.75195312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 188]
[10 187]
[11 186]
[12 185]
[13 184]
[19 183]
[21 181]
[22 180]
[23 179]
[24 178]
[34 177]
[35 176]
[36 175]
[37 174]
[38 173]
[39 166]
[40 165]
[41 164]
[47 157]
[48 156]
[49 155]
[53 154]
[54 153]
[55 152]
[57 150]
[58 145]
[59 144]
[60 143]
[62 142]
[63 141]
[64 140]
[65 139]
[66 135]
[67 134]
[68 133]
[70 131]
[71 130]
[72 119]
[73 118]
[74 117]
[75 116]
[76 115]
[77 114]
[78 113]
[79 112]
[80 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
