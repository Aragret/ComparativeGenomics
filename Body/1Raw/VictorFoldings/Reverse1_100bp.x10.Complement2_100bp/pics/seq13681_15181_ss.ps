%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAACAAACCUUCCCCCUACGCCCCCUUUACAACAAUCAUUACUCUUUAGGACGCUUAUCCGAAGGCCGACGGUCCGCAAAUUACCCCAAAUCAUCCCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[83.97058868 774.13635254]
[70.21359253 780.19781494]
[55.66238785 783.97387695]
[40.69388199 785.36669922]
[25.69579506 784.34027100]
[11.05661774 780.92108154]
[-2.84446311 775.19781494]
[-15.64737511 767.31860352]
[-27.02049255 757.48760986]
[-36.66922379 745.95947266]
[-44.34364319 733.03277588]
[-49.84496689 719.04235840]
[-53.03069687 704.35064697]
[-53.81831360 689.33813477]
[-52.18741226 674.39367676]
[-48.18024445 659.90441895]
[-41.90060425 646.24560547]
[-33.51114273 633.77111816]
[-23.22917557 622.80401611]
[-11.32102585 613.62841797]
[1.90485632 606.48193359]
[16.10588837 601.54968262]
[30.91422844 598.95947266]
[45.94630814 598.77838135]
[48.17142487 583.94433594]
[50.28604889 569.09411621]
[52.29006195 554.22857666]
[54.29407501 539.36303711]
[56.29808807 524.49755859]
[49.21580124 514.69104004]
[50.76371765 502.28988647]
[60.65323639 494.00979614]
[62.87835312 479.17575073]
[65.10346985 464.34170532]
[66.88594055 449.44799805]
[68.22417450 434.50781250]
[59.99341583 419.00872803]
[70.71146393 404.03524780]
[71.82711792 389.07678223]
[72.94276428 374.11834717]
[58.45706940 370.29669189]
[44.91670227 363.87655640]
[32.78342438 355.07525635]
[22.47132683 344.19134521]
[14.33266449 331.59451294]
[8.64585114 317.71292114]
[5.60591555 303.01882935]
[5.31782579 288.01232910]
[7.79285717 273.20452881]
[12.94816494 259.09991455]
[20.60955048 246.17941284]
[30.51735115 234.88374329]
[42.33523941 225.59860229]
[55.66164398 218.64134216]
[70.04338074 214.25024414]
[84.99108124 212.57621765]
[86.10673523 197.61776733]
[87.22238159 182.65930176]
[88.33802795 167.70085144]
[89.34229279 152.73451233]
[90.23510742 137.76110840]
[91.12792206 122.78769684]
[92.02073669 107.81429291]
[92.80206299 92.83465576]
[93.47184753 77.84961700]
[94.03005981 62.86000824]
[94.47666168 47.86665726]
[94.92327118 32.87330627]
[82.81652832 23.34791565]
[78.68832397 8.69147301]
[83.92006683 -5.41855526]
[96.30886841 -13.64384842]
[96.75547791 -28.63719749]
[97.20208740 -43.63054657]
[86.64383698 -55.08310699]
[87.31034088 -70.28213501]
[98.29367828 -80.27723694]
[98.74028015 -95.27058411]
[86.19904327 -87.04152679]
[71.89911652 -91.57055664]
[66.38187408 -105.51903534]
[73.71442413 -118.60466003]
[88.49147797 -121.18120575]
[99.81929016 -111.35084534]
[101.37980652 -126.26944733]
[102.94033051 -141.18804932]
[104.50085449 -156.10665894]
[106.06137848 -171.02526855]
[107.51079559 -185.95507812]
[108.84902954 -200.89526367]
[101.19273376 -211.27523804]
[102.61492920 -223.69139099]
[111.81132507 -231.54969788]
[113.37184906 -246.46830750]
[114.93236542 -261.38690186]
[116.49288940 -276.30551147]
[118.05341339 -291.22412109]
[103.91191864 -296.46520996]
[91.51858521 -305.05914307]
[81.65245056 -316.46572876]
[74.93373108 -329.96795654]
[71.78475189 -344.71701050]
[72.40347290 -359.78576660]
[76.75099182 -374.22705078]
[84.55403137 -387.13299561]
[95.32207489 -397.69235229]
[108.37823486 -405.24133301]
[122.90180206 -409.30545044]
[137.97979736 -409.62918091]
[152.66441345 -406.19219971]
[166.03256226 -399.21054077]
[177.24391174 -389.12310791]
[185.59370422 -376.56399536]
[190.55706787 -362.32263184]
[191.82199097 -347.29431152]
[189.30897522 -332.42367554]
[183.17599487 -318.64553833]
[173.80854797 -306.82598877]
[161.79550171 -297.70800781]
[147.89199829 -291.86477661]
[132.97201538 -289.66360474]
[131.41149902 -274.74499512]
[129.85096741 -259.82638550]
[128.29045105 -244.90777588]
[126.72992706 -229.98916626]
[134.72900391 -214.36926270]
[123.78921509 -199.55702209]
[122.45098114 -184.61683655]
[124.98519897 -177.67425537]
[120.97998047 -169.46473694]
[119.41946411 -154.54614258]
[117.85894012 -139.62753296]
[116.29841614 -124.70892334]
[114.73789215 -109.79032135]
[113.73363495 -94.82397461]
[113.28702545 -79.83062744]
[123.65596771 -69.19950867]
[123.41663361 -53.98775864]
[112.19543457 -43.18394089]
[111.74882507 -28.19059181]
[111.30222321 -13.19724274]
[123.17948914 -4.24913788]
[127.56210327 10.14727306]
[122.56885529 24.53201675]
[109.91661835 33.31991196]
[109.47000885 48.31326294]
[109.02340698 63.30661392]
[111.96636200 70.08605194]
[108.45688629 78.51940155]
[107.78710175 93.50444031]
[110.60183716 101.05757141]
[106.99414062 108.70710754]
[106.10132599 123.68051147]
[105.20851135 138.65391541]
[104.31569672 153.62731934]
[106.92877197 162.38002014]
[103.29648590 168.81649780]
[102.18083191 183.77496338]
[101.06518555 198.73341370]
[99.94953918 213.69186401]
[114.48353577 217.56472778]
[128.05477905 224.04066467]
[140.20169067 232.89778137]
[150.51145935 243.83328247]
[158.63403320 256.47369385]
[164.29400635 270.38778687]
[167.29998779 285.10107422]
[167.55102539 300.11221313]
[165.04005432 314.90991211]
[159.85400391 328.99050903]
[152.17089844 341.87490845]
[142.25364685 353.12509155]
[130.44111633 362.35888672]
[117.13648224 369.26293945]
[102.79354858 373.60345459]
[87.90121460 375.23397827]
[86.78556824 390.19244385]
[85.66992188 405.15087891]
[93.47991180 415.41574097]
[92.24273682 427.85168457]
[83.16435242 435.84603882]
[81.82611847 450.78622437]
[83.79212952 454.65774536]
[84.36616516 458.56097412]
[83.70919800 462.05435181]
[82.10903931 464.79406738]
[79.93751526 466.56683350]
[77.71239471 481.40087891]
[75.48728180 496.23492432]
[82.62274933 513.21038818]
[71.16362000 526.50152588]
[69.15960693 541.36706543]
[67.15558624 556.23260498]
[65.15157318 571.09814453]
[67.10641479 580.02093506]
[63.00546646 586.16943359]
[60.78034973 601.00347900]
[75.09772491 605.58703613]
[88.49437714 612.40802002]
[100.62330627 621.28973389]
[111.17034149 632.00219727]
[119.86228180 644.26782227]
[126.47399139 657.76898193]
[130.83421326 672.15594482]
[132.83000183 687.05609131]
[132.40966797 702.08337402]
[129.58409119 716.84857178]
[124.42646790 730.96936035]
[117.07038879 744.07977295]
[107.70639038 755.84039307]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 197]
[25 196]
[26 194]
[27 193]
[28 192]
[29 191]
[32 189]
[33 188]
[34 187]
[35 182]
[36 181]
[38 178]
[39 177]
[40 176]
[56 160]
[57 159]
[58 158]
[59 157]
[60 155]
[61 154]
[62 153]
[63 152]
[64 150]
[65 149]
[66 147]
[67 146]
[68 145]
[72 141]
[73 140]
[74 139]
[77 136]
[78 135]
[84 134]
[85 133]
[86 132]
[87 131]
[88 130]
[89 128]
[90 127]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
