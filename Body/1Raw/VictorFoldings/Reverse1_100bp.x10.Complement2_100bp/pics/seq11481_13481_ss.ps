%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[15.79187012 666.92382812]
[11.56416225 681.35418701]
[4.95837545 694.86236572]
[-3.83542824 707.05981445]
[-14.56423378 717.59545898]
[-26.91935158 726.16632080]
[-40.54530334 732.52563477]
[-55.05003738 736.49060059]
[-70.01622772 737.94702148]
[-85.01326752 736.85302734]
[-99.60965729 733.24005127]
[-113.38543701 727.21215820]
[-125.94424438 718.94262695]
[-136.92474365 708.66955566]
[-146.01098633 696.68841553]
[-152.94157410 683.34393311]
[-157.51707458 669.02008057]
[-159.60585022 654.12896729]
[-159.14779663 639.09906006]
[-156.15611267 624.36279297]
[-150.71684265 610.34411621]
[-142.98651123 597.44647217]
[-133.18753052 586.04083252]
[-121.60182953 576.45544434]
[-108.56275940 568.96612549]
[-94.44547272 563.78820801]
[-79.65615845 561.07086182]
[-64.62033081 560.89208984]
[-49.77060699 563.25720215]
[-44.94461060 549.05474854]
[-48.17573547 534.51483154]
[-36.40985107 523.93774414]
[-31.58385277 509.73529053]
[-26.75785446 495.53283691]
[-21.93185806 481.33038330]
[-28.72529030 468.12490845]
[-24.03336334 453.65283203]
[-10.13617325 446.61679077]
[-5.31017542 432.41433716]
[-12.10360909 419.20886230]
[-7.41168118 404.73681641]
[6.48550844 397.70077515]
[11.31150627 383.49832153]
[16.13750458 369.29583740]
[20.96350098 355.09338379]
[12.89204788 340.33905029]
[18.09134674 323.99029541]
[33.80949020 316.31179810]
[38.42350006 302.03906250]
[43.03750610 287.76632690]
[47.65151596 273.49359131]
[39.36128616 258.86105347]
[44.31660080 242.43670654]
[59.91868210 234.52503967]
[64.31967926 220.18519592]
[68.72067261 205.84533691]
[73.12167358 191.50549316]
[77.52267456 177.16564941]
[81.06234741 162.58927917]
[83.72814178 147.82804871]
[86.39393616 133.06683350]
[89.05973053 118.30561829]
[87.15500641 111.16462708]
[91.87667084 103.34518433]
[90.39680481 100.68069458]
[89.85372925 97.41885376]
[90.47056580 93.90559387]
[92.33950043 90.56443787]
[95.39675903 87.84669495]
[99.15306091 73.32463074]
[102.90936279 58.80257416]
[106.66566467 44.28051758]
[98.90619659 30.77390862]
[102.92249298 16.09998512]
[115.84679413 8.78575706]
[119.60309601 -5.73630190]
[118.72241211 -14.82817841]
[123.52494049 -20.44579124]
[127.49703217 -34.91031647]
[131.46913147 -49.37483978]
[130.72390747 -58.47882080]
[135.60954285 -64.02430725]
[139.79655457 -78.42808533]
[143.98356628 -92.83187103]
[148.17057800 -107.23564911]
[152.35758972 -121.63943481]
[156.00567627 -136.18905640]
[159.10978699 -150.86436462]
[154.39578247 -165.96696472]
[164.59939575 -176.81758118]
[167.70350647 -191.49287415]
[170.80760193 -206.16818237]
[164.43902588 -217.38441467]
[167.32656860 -229.54360962]
[177.39161682 -236.25340271]
[172.90298462 -251.42453003]
[183.26701355 -262.12200928]
[186.58927917 -276.74948120]
[189.91152954 -291.37692261]
[176.28303528 -297.78616333]
[164.35124207 -306.97564697]
[154.67422485 -318.51553345]
[147.70457458 -331.86611938]
[143.76831055 -346.40295410]
[143.04949951 -361.44613647]
[145.58178711 -376.29208374]
[151.24671936 -390.24636841]
[159.77935791 -402.65640259]
[170.78059387 -412.94165039]
[183.73588562 -420.62115479]
[198.03929138 -425.33563232]
[213.02182007 -426.86465454]
[227.98271179 -425.13668823]
[242.22221375 -420.23254395]
[255.07431030 -412.38159180]
[265.93789673 -401.95101929]
[274.30487061 -389.42874146]
[279.78387451 -375.40039062]
[282.11865234 -360.52212524]
[281.20001221 -345.48980713]
[277.07092285 -331.00656128]
[269.92449951 -317.74975586]
[260.09497070 -306.33947754]
[248.04212952 -297.30935669]
[234.32966614 -291.08178711]
[219.59896851 -287.94805908]
[204.53898621 -288.05468750]
[201.21673584 -273.42721558]
[197.89447021 -258.79974365]
[202.62072754 -244.67488098]
[192.01907349 -232.93113708]
[198.10534668 -216.47137451]
[185.48291016 -203.06407166]
[182.37879944 -188.38876343]
[179.27468872 -173.71347046]
[184.21070862 -159.66053772]
[173.78507996 -147.76025391]
[170.68096924 -133.08494568]
[184.48503113 -138.95417786]
[197.75242615 -131.95587158]
[200.70292664 -117.24891663]
[191.16152954 -105.67472839]
[176.16180420 -105.76537323]
[166.76136780 -117.45242310]
[162.57435608 -103.04864502]
[158.38734436 -88.64485931]
[154.20033264 -74.24107361]
[150.01332092 -59.83729553]
[145.93365479 -45.40274429]
[141.96156311 -30.93821907]
[137.98945618 -16.47369385]
[134.12515259 -1.98000145]
[130.36885071 12.54205799]
[138.12565613 25.20569420]
[134.52310181 39.98663712]
[121.18772125 48.03681564]
[117.43141937 62.55887604]
[113.67511749 77.08093262]
[109.91881561 91.60299683]
[106.59655762 106.23045349]
[103.82094574 120.97142029]
[101.15515137 135.73263550]
[98.48935699 150.49385071]
[95.82356262 165.25506592]
[107.54801178 155.89892578]
[122.52703094 155.10592651]
[135.17382812 163.17181396]
[140.77145386 177.08824158]
[137.23211670 191.66468811]
[125.87593079 201.46453857]
[110.93845367 202.83267212]
[97.99099731 195.25880432]
[91.86251831 181.56665039]
[87.46152496 195.90649414]
[83.06052399 210.24633789]
[78.65952301 224.58618164]
[74.25852966 238.92604065]
[81.89687347 250.01974487]
[81.75334167 263.29339600]
[74.10437012 273.90353394]
[61.92425156 278.10760498]
[57.31024170 292.38034058]
[52.69623184 306.65307617]
[48.08222198 320.92581177]
[55.55455399 332.13198853]
[55.21341324 345.40203857]
[47.40732193 355.89715576]
[35.16595840 359.91940308]
[30.33996010 374.12185669]
[25.51396179 388.32431030]
[20.68796349 402.52676392]
[27.42136192 416.57308960]
[22.32479477 430.90765381]
[8.89228058 437.24035645]
[4.06628227 451.44281006]
[10.79968071 465.48913574]
[5.70311356 479.82366943]
[-7.72940159 486.15637207]
[-12.55539894 500.35885620]
[-17.38139725 514.56127930]
[-22.20739365 528.76373291]
[-19.32145691 544.31951904]
[-30.74215317 553.88073730]
[-35.56814957 568.08319092]
[-22.35174751 575.25500488]
[-10.53759289 584.55737305]
[-0.46560600 595.72259521]
[7.57442236 608.42956543]
[13.35116482 622.31250000]
[16.69841194 636.97210693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 204]
[30 203]
[32 201]
[33 200]
[34 199]
[35 198]
[38 195]
[39 194]
[42 191]
[43 190]
[44 189]
[45 188]
[48 184]
[49 183]
[50 182]
[51 181]
[54 177]
[55 176]
[56 175]
[57 174]
[58 173]
[59 164]
[60 163]
[61 162]
[62 161]
[64 160]
[69 159]
[70 158]
[71 157]
[72 156]
[75 153]
[76 152]
[78 151]
[79 150]
[80 149]
[82 148]
[83 147]
[84 146]
[85 145]
[86 144]
[87 138]
[88 137]
[90 135]
[91 134]
[92 133]
[95 131]
[97 129]
[98 128]
[99 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
