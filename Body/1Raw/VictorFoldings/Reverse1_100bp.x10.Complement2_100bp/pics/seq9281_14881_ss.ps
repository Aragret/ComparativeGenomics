%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[157.49467468 633.91204834]
[155.93414307 618.99340820]
[154.37362671 604.07482910]
[152.81309509 589.15618896]
[151.25257874 574.23760986]
[142.23318481 562.38433838]
[148.49279785 547.85412598]
[146.93226624 532.93548584]
[145.37174988 518.01690674]
[131.74447632 516.01190186]
[118.98751068 510.79125977]
[107.84835052 502.65567017]
[98.98091888 492.07690430]
[92.90719604 479.67022705]
[89.98648834 466.15878296]
[90.39417267 452.33135986]
[94.11116791 438.99639893]
[100.92478180 426.93460083]
[110.44087982 416.85339355]
[122.10665894 409.34533691]
[135.24278259 404.85327148]
[134.12713623 389.89483643]
[133.01148987 374.93637085]
[131.89584351 359.97790527]
[130.66886902 345.02819824]
[129.33062744 330.08801270]
[127.99239349 315.14782715]
[119.15047455 303.16159058]
[125.62573242 288.72616577]
[124.28749847 273.78598022]
[122.17287445 258.93576050]
[112.13195038 247.93444824]
[117.07028198 232.90370178]
[104.60424042 224.83317566]
[101.46846771 209.94621277]
[110.01810455 196.92539978]
[107.13283539 182.20550537]
[104.24755859 167.48561096]
[101.36228943 152.76573181]
[97.96882629 149.40515137]
[96.65042877 143.87715149]
[98.61711121 137.56495667]
[96.17138672 122.76569366]
[93.72566223 107.96642303]
[89.40879822 101.15927124]
[91.35540009 92.92874146]
[89.13027954 78.09469604]
[86.90516663 63.26065445]
[84.68004608 48.42660904]
[80.86708069 43.02542496]
[80.42114258 37.35990143]
[82.61636353 33.11843109]
[80.83389282 18.22471428]
[79.05142975 3.33099675]
[77.26896667 -11.56272030]
[67.63035583 -20.13360596]
[66.45235443 -32.57531357]
[73.82347870 -42.16661453]
[72.26295471 -57.08522034]
[70.70243073 -72.00382233]
[68.91996765 -86.89754486]
[66.91595459 -101.76306915]
[64.91194153 -116.62860107]
[61.72005844 -120.75885010]
[60.54876328 -125.25121307]
[61.19763184 -129.27539062]
[63.16574478 -132.20095825]
[61.82751083 -147.14114380]
[60.48927689 -162.08132935]
[59.15103912 -177.02151489]
[48.72696686 -166.23547363]
[33.73213577 -165.84165955]
[22.75627136 -176.06567383]
[22.08684540 -191.05072021]
[32.10733414 -202.21270752]
[47.07754898 -203.15751648]
[58.42144012 -193.34478760]
[58.42144012 -208.34478760]
[58.42144012 -223.34478760]
[58.42144012 -238.34478760]
[58.42144012 -253.34478760]
[58.42144012 -268.34478760]
[58.42144012 -283.34478760]
[58.42144012 -298.34478760]
[58.42144012 -313.34478760]
[58.42144012 -328.34478760]
[57.75165558 -343.32983398]
[56.41342163 -358.27001953]
[47.47578430 -371.32485962]
[54.04676056 -384.69168091]
[45.10912323 -397.74652100]
[51.68009567 -411.11334229]
[50.34186172 -426.05352783]
[49.00362778 -440.99368286]
[34.34733963 -444.86267090]
[21.89997482 -453.51364136]
[13.16461277 -465.90188599]
[9.19609165 -480.53155518]
[10.47362900 -495.63598633]
[16.84295654 -509.39123535]
[27.53494453 -520.13635254]
[41.25848770 -526.57373047]
[56.35639954 -527.92608643]
[71.00553131 -524.03015137]
[83.43693542 -515.35626221]
[92.14945221 -502.95190430]
[96.09100342 -488.31497192]
[94.78563690 -473.21292114]
[88.39096832 -459.46942139]
[77.67919922 -448.74404907]
[63.94381332 -442.33193970]
[65.28205109 -427.39175415]
[66.62028503 -412.45156860]
[75.46219635 -400.46533203]
[68.98694611 -386.02990723]
[77.82886505 -374.04367065]
[71.35360718 -359.60824585]
[72.69184113 -344.66806030]
[83.11591339 -355.45410156]
[98.11074829 -355.84790039]
[109.08660889 -345.62390137]
[109.75603485 -330.63882446]
[99.73554230 -319.47686768]
[84.76532745 -318.53204346]
[73.42144012 -328.34478760]
[73.42144012 -313.34478760]
[73.42144012 -298.34478760]
[73.42144012 -283.34478760]
[73.42144012 -268.34478760]
[73.42144012 -253.34478760]
[73.42144012 -238.34478760]
[73.42144012 -223.34478760]
[73.42144012 -208.34478760]
[73.42144012 -193.34478760]
[74.09122467 -178.35974121]
[75.42945862 -163.41955566]
[76.76769257 -148.47937012]
[78.10592651 -133.53918457]
[79.77746582 -118.63261414]
[81.78148651 -103.76708221]
[83.78549957 -88.90155792]
[86.97291565 -85.34495544]
[87.95994568 -79.74828339]
[85.62104034 -73.56434631]
[87.18156433 -58.64574432]
[88.74208832 -43.72713852]
[99.80041504 -30.10068130]
[92.16268158 -13.34518623]
[93.94514465 1.54853082]
[95.72761536 16.44224739]
[97.51007843 31.33596611]
[99.51409149 46.20149231]
[101.73921204 61.03553772]
[103.96432495 75.86958313]
[106.18944550 90.70362854]
[108.52493286 105.52069092]
[110.97065735 120.31996155]
[113.41638184 135.11923218]
[116.08218384 149.88044739]
[118.96745300 164.60034180]
[121.85272980 179.32023621]
[124.73799896 194.04013062]
[137.57058716 202.86976624]
[140.28697205 217.83892822]
[131.79017639 230.01841736]
[142.03747559 242.07261658]
[136.89276123 256.05050659]
[145.18811035 243.55300903]
[159.53988647 239.19105530]
[173.38664246 244.95884705]
[180.39782715 258.21942139]
[177.36802673 272.91024780]
[165.68241882 282.31488037]
[150.68351746 282.13360596]
[139.22767639 272.44772339]
[140.56591797 287.38790894]
[149.50355530 300.44277954]
[142.93257141 313.80957031]
[144.27081299 328.74975586]
[145.60903931 343.68994141]
[149.49159241 351.95819092]
[146.85429382 358.86227417]
[147.96994019 373.82070923]
[149.08558655 388.77917480]
[150.20123291 403.73764038]
[166.17201233 407.00698853]
[180.56791687 414.62658691]
[192.23213196 425.97518921]
[200.22988892 440.13241577]
[203.92330933 455.95315552]
[203.02230835 472.16030884]
[197.60736084 487.44784546]
[188.12234497 500.58602905]
[175.33822632 510.52041626]
[160.29035950 516.45635986]
[161.85087585 531.37500000]
[163.41140747 546.29357910]
[172.54241943 559.21392822]
[166.17117310 572.67706299]
[167.73170471 587.59570312]
[169.29222107 602.51428223]
[170.85275269 617.43292236]
[172.41326904 632.35150146]
[185.91448975 639.99981689]
[192.31097412 654.13714600]
[189.14314270 669.32745361]
[177.62908936 679.72967529]
[162.19622803 681.34399414]
[148.77877808 673.54968262]
[142.53602600 659.34375000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[4 200]
[5 199]
[7 197]
[8 196]
[9 195]
[21 185]
[22 184]
[23 183]
[24 182]
[25 180]
[26 179]
[27 178]
[29 176]
[30 175]
[31 167]
[33 165]
[36 162]
[37 161]
[38 160]
[39 159]
[42 158]
[43 157]
[44 156]
[46 155]
[47 154]
[48 153]
[49 152]
[52 151]
[53 150]
[54 149]
[55 148]
[58 146]
[59 145]
[60 144]
[61 141]
[62 140]
[63 139]
[67 138]
[68 137]
[69 136]
[70 135]
[77 134]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[86 125]
[87 118]
[88 117]
[90 115]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
