%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[125.48416138 643.80291748]
[119.62797546 629.97467041]
[115.41677856 615.55999756]
[112.90753937 600.75390625]
[112.13418579 585.75659180]
[113.10717773 570.77093506]
[115.81334686 555.99957275]
[120.21611023 541.64227295]
[126.25592041 527.89318848]
[133.85108948 514.93829346]
[142.89891052 502.95272827]
[153.27702332 492.09863281]
[164.84506226 482.52279663]
[177.44659424 474.35467529]
[190.91119385 467.70480347]
[185.87426758 453.57577515]
[180.83735657 439.44674683]
[175.80044556 425.31771851]
[170.76351929 411.18869019]
[165.62156677 397.09753418]
[160.37484741 383.04507446]
[155.75903320 397.31723022]
[144.22766113 406.91030884]
[129.35383606 408.85180664]
[115.74639130 402.54013062]
[107.62172699 389.93103027]
[107.49736023 374.93154907]
[115.41183472 362.18942261]
[128.91276550 355.65301514]
[143.81672668 357.34762573]
[155.50573730 366.74838257]
[152.18347168 352.12094116]
[148.86120605 337.49346924]
[138.49719238 326.79598999]
[142.98580933 311.62484741]
[128.38531494 303.27835083]
[124.25764465 286.62670898]
[133.63107300 271.85653687]
[130.09140015 257.28015137]
[126.55172729 242.70376587]
[123.01205444 228.12739563]
[119.47238159 213.55102539]
[115.93270874 198.97463989]
[112.39303589 184.39826965]
[108.85336304 169.82189941]
[105.31369019 155.24551392]
[101.77401733 140.66914368]
[98.23434448 126.09277344]
[94.69467163 111.51639557]
[91.32929993 126.13399506]
[84.34226227 139.40733337]
[74.19699860 150.45602417]
[61.56640625 158.54725647]
[47.28821945 163.14436340]
[32.30946732 163.94244385]
[17.62363052 160.88856506]
[4.20477104 154.18525696]
[-7.05708694 144.27716064]
[-15.41498566 131.82141113]
[-20.31457520 117.64418030]
[-21.43088150 102.68577576]
[-18.68986702 87.93833923]
[-12.27333355 74.38002014]
[-2.60686350 62.91008377]
[9.66839886 54.28929901]
[23.73827934 49.08944702]
[38.66957474 47.65541840]
[53.47194290 50.08232117]
[67.16359711 56.20919037]
[78.83642578 65.62965393]
[87.71620178 77.71888733]
[93.21521759 91.68003082]
[94.55345154 76.73985291]
[95.89168549 61.79966354]
[97.22991943 46.85947800]
[97.78813171 31.86986923]
[97.56480408 16.87153244]
[97.34147644 1.87319493]
[97.11814880 -13.12514210]
[96.89482117 -28.12347984]
[96.44821167 -43.11682892]
[95.77842712 -58.10186768]
[95.10864258 -73.08690643]
[94.43885803 -88.07194519]
[93.76907349 -103.05698395]
[90.53870392 -108.82554626]
[90.68460083 -114.50672150]
[93.30916595 -118.49679565]
[93.08583832 -133.49513245]
[92.75086212 -148.49139404]
[92.30426025 -163.48474121]
[91.85765076 -178.47808838]
[77.11775208 -181.64018250]
[63.56321716 -188.23851013]
[51.98208237 -197.88946533]
[43.04766464 -210.03193665]
[37.27939987 -223.95997620]
[35.01264191 -238.86384583]
[36.37918472 -253.87704468]
[41.29957199 -268.12670898]
[49.48774719 -280.78442383]
[60.46765137 -291.11422729]
[73.60092926 -298.51559448]
[88.12403870 -302.55822754]
[103.19261169 -303.00708008]
[117.93059540 -299.83605957]
[131.48112488 -293.22949219]
[143.05641174 -283.57153320]
[151.98345947 -271.42364502]
[157.74328613 -257.49209595]
[160.00100708 -242.58686829]
[158.62536621 -227.57450867]
[153.69633484 -213.32781982]
[145.50048828 -200.67507935]
[134.51432800 -190.35192871]
[121.37655640 -182.95851135]
[106.85099792 -178.92469788]
[107.29760742 -163.93135071]
[107.74421692 -148.93798828]
[111.08547211 -142.34574890]
[108.08417511 -133.71846008]
[108.30750275 -118.72012329]
[108.75411224 -103.72676849]
[109.42389679 -88.74172974]
[110.09368134 -73.75669098]
[110.76346588 -58.77165222]
[111.43325043 -43.78661346]
[114.29065704 -39.95983124]
[114.77444458 -34.29741287]
[111.89315796 -28.34680748]
[112.11648560 -13.34846973]
[112.33981323 1.64986718]
[112.56314087 16.64820480]
[112.78646851 31.64654160]
[123.17081451 20.82224846]
[138.06932068 19.08031464]
[150.67060852 27.21713257]
[155.21351624 41.51265335]
[149.62109375 55.43116379]
[136.45013428 62.60930252]
[121.72220612 59.76532364]
[112.17010498 48.19771194]
[110.83187103 63.13789749]
[109.49363708 78.07808685]
[108.15540314 93.01827240]
[109.27104950 107.97672272]
[112.81072235 122.55310059]
[116.35039520 137.12947083]
[119.89006805 151.70584106]
[123.42974091 166.28222656]
[126.96941376 180.85859680]
[130.50907898 195.43496704]
[134.04875183 210.01135254]
[137.58842468 224.58772278]
[141.12809753 239.16409302]
[144.66777039 253.74047852]
[148.20744324 268.31686401]
[160.44018555 273.95376587]
[167.09571838 285.43914795]
[165.93815613 298.46768188]
[157.61326599 308.30261230]
[168.21492004 320.04635620]
[163.48867798 334.17120361]
[166.81092834 348.79867554]
[170.13319397 363.42611694]
[174.42732239 377.79833984]
[179.67404175 391.85083008]
[185.60746765 398.79577637]
[184.89254761 406.15176392]
[189.92947388 420.28079224]
[194.96638489 434.40982056]
[200.00329590 448.53884888]
[205.04022217 462.66787720]
[219.67501831 459.30050659]
[234.60179138 457.65493774]
[249.61866760 457.75341797]
[264.52258301 459.59460449]
[279.11196899 463.15365601]
[293.18948364 468.38238525]
[306.56478882 475.21008301]
[319.05700684 483.54443359]
[330.49716187 493.27270508]
[340.73056030 504.26336670]
[349.61877441 516.36773682]
[357.04162598 529.42211914]
[362.89874268 543.25006104]
[367.11090088 557.66442871]
[369.62112427 572.47033691]
[370.39547729 587.46759033]
[369.42349243 602.45330811]
[366.71832275 617.22485352]
[362.31649780 631.58239746]
[356.27761841 645.33190918]
[348.68331909 658.28735352]
[339.63629150 670.27349854]
[329.25891113 681.12829590]
[317.69149780 690.70489502]
[305.09051514 698.87384033]
[291.62637329 705.52465820]
[277.48114014 710.56732178]
[262.84609985 713.93371582]
[247.91921997 715.57830811]
[232.90234375 715.47882080]
[217.99855042 713.63665771]
[203.40942383 710.07659912]
[189.33222961 704.84698486]
[175.95738220 698.01837158]
[163.46572876 689.68316650]
[152.02622986 679.95416260]
[141.79357910 668.96282959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 173]
[16 172]
[17 171]
[18 170]
[19 169]
[20 167]
[21 166]
[31 165]
[32 164]
[33 163]
[35 161]
[38 157]
[39 156]
[40 155]
[41 154]
[42 153]
[43 152]
[44 151]
[45 150]
[46 149]
[47 148]
[48 147]
[49 146]
[72 145]
[73 144]
[74 143]
[75 142]
[76 134]
[77 133]
[78 132]
[79 131]
[80 130]
[81 127]
[82 126]
[83 125]
[84 124]
[85 123]
[88 122]
[89 121]
[90 119]
[91 118]
[92 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
