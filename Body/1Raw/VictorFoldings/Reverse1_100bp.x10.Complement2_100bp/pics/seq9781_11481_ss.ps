%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[59.20436478 587.27386475]
[47.62474060 596.82849121]
[35.15131378 605.18267822]
[21.90805435 612.25335693]
[8.02658176 617.97033691]
[-6.35513878 622.27667236]
[-21.09417152 625.12963867]
[-36.04403305 626.50091553]
[-51.05613327 626.37683105]
[-65.98127747 624.75854492]
[-80.67112732 621.66229248]
[-94.97968292 617.11871338]
[-108.76473999 611.17309570]
[-121.88928986 603.88439941]
[-134.22288513 595.32513428]
[-145.64295959 585.58038330]
[-156.03599548 574.74694824]
[-165.29872131 562.93249512]
[-173.33905029 550.25451660]
[-180.07710266 536.83892822]
[-185.44587708 522.81915283]
[-189.39204407 508.33444214]
[-191.87637329 493.52883911]
[-192.87416077 478.54940796]
[-192.37551880 463.54507446]
[-190.38537598 448.66494751]
[-186.92352295 434.05694580]
[-182.02435303 419.86621094]
[-175.73658752 406.23379517]
[-168.12269592 393.29519653]
[-159.25834656 381.17901611]
[-149.23165894 370.00564575]
[-138.14227295 359.88616943]
[-126.10040283 350.92111206]
[-113.22573090 343.19961548]
[-99.64621735 336.79843140]
[-85.49681854 331.78112793]
[-70.91816711 328.19763184]
[-56.05515671 326.08349609]
[-41.05550385 325.45977783]
[-26.06828499 326.33267212]
[-11.24245739 328.69348145]
[3.27463150 332.51873779]
[8.52134991 318.46627808]
[13.76806831 304.41381836]
[9.93539524 287.28845215]
[24.23589897 275.68771362]
[29.27281570 261.55868530]
[34.30973053 247.42967224]
[39.34664917 233.30062866]
[36.33235931 218.71423340]
[48.25441360 208.31350708]
[53.29133224 194.18446350]
[58.32824707 180.05543518]
[57.25000000 177.46786499]
[57.13175964 174.29728699]
[58.20071793 170.90718079]
[60.54840469 167.73655701]
[64.10845947 165.25059509]
[69.97741699 151.44642639]
[75.84638214 137.64224243]
[73.70563507 122.90228271]
[86.22561646 113.22960663]
[80.90299988 99.75311279]
[86.57223511 86.41871643]
[99.97020721 80.90142822]
[105.83917236 67.09725189]
[111.70812988 53.29307556]
[117.57709503 39.48889923]
[123.44605255 25.68472290]
[117.00328827 13.85656357]
[118.52696228 0.66987085]
[127.23825073 -9.08694935]
[139.78964233 -12.00103951]
[145.86347961 -25.71630669]
[151.83505249 -39.47640991]
[157.70401001 -53.28058624]
[163.57296753 -67.08476257]
[169.44192505 -80.88893890]
[175.31088257 -94.69311523]
[161.43295288 -89.00076294]
[147.10513306 -93.44076538]
[138.87791443 -105.98321533]
[140.51268005 -120.89386749]
[151.26202393 -131.35577393]
[166.21150208 -132.58589172]
[178.52639771 -124.02183533]
[182.57640076 -109.57711792]
[189.84962463 -122.69581604]
[197.12286377 -135.81451416]
[201.63049316 -150.12120056]
[203.19100952 -165.03979492]
[204.75152588 -179.95840454]
[206.31205750 -194.87701416]
[200.05244446 -209.40724182]
[209.07183838 -221.26051331]
[210.63235474 -236.17910767]
[212.19288635 -251.09771729]
[213.75340271 -266.01632690]
[199.84474182 -271.93582153]
[188.29986572 -281.69323730]
[180.14535522 -294.42098999]
[176.10630798 -308.98730469]
[176.54185486 -324.09695435]
[181.41328430 -338.40640259]
[190.28741455 -350.64328003]
[202.37518311 -359.71948242]
[216.60174561 -364.82794189]
[231.70207214 -365.51446533]
[246.33348083 -361.71792603]
[259.19491577 -353.77600098]
[269.14279175 -342.39480591]
[275.29254150 -328.58639526]
[277.09729004 -313.57861328]
[274.39660645 -298.70587158]
[267.43063354 -285.29074097]
[256.81875610 -274.52600098]
[243.50457764 -267.36889648]
[228.67201233 -264.45581055]
[227.11148071 -249.53718567]
[225.55096436 -234.61859131]
[223.99043274 -219.69998169]
[230.36167908 -206.23683167]
[221.23066711 -193.31648254]
[219.67013550 -178.39788818]
[218.10961914 -163.47927856]
[216.54908752 -148.56066895]
[224.54055786 -161.25462341]
[235.04232788 -171.96504211]
[247.57662964 -180.20465088]
[261.57324219 -185.59864807]
[276.39538574 -187.90159607]
[291.36880493 -187.00875854]
[305.81225586 -182.96073914]
[319.06869507 -175.94168091]
[330.53500366 -166.27095032]
[339.68960571 -154.38844299]
[346.11596680 -140.83477783]
[349.52175903 -126.22654724]
[349.75201416 -111.22831726]
[346.79629517 -96.52240753]
[340.78906250 -82.77784729]
[332.00357056 -70.61991119]
[320.83953857 -60.60171890]
[307.80480957 -53.17902374]
[293.49243164 -48.68950653]
[278.55349731 -47.33740997]
[263.66763306 -49.18425369]
[249.51203918 -54.14600754]
[236.73069763 -61.99695587]
[225.90507507 -72.37992096]
[217.52767944 -84.82255554]
[211.97961426 -98.75880432]
[209.51327515 -113.55465698]
[210.24154663 -128.54127502]
[202.96832275 -115.42258453]
[195.69509888 -102.30389404]
[189.11506653 -88.82415771]
[183.24610901 -75.01998138]
[177.37713623 -61.21580124]
[171.50817871 -47.41162491]
[165.63922119 -33.60744858]
[165.91502380 -26.22194099]
[159.57875061 -19.64247322]
[153.50491333 -5.92720604]
[160.22785950 9.48839378]
[153.59072876 25.30810738]
[137.25022888 31.55368423]
[131.38127136 45.35786057]
[125.51230621 59.16203690]
[119.64334869 72.96621704]
[113.77438354 86.77039337]
[119.09700012 100.24688721]
[113.42776489 113.58128357]
[100.02979279 119.09857178]
[101.75074768 134.82589722]
[89.65055847 143.51119995]
[83.78159332 157.31538391]
[77.91263580 171.11955261]
[72.45727539 185.09236145]
[67.42036438 199.22138977]
[62.38344574 213.35041809]
[65.03746033 228.94743347]
[53.47567749 238.33755493]
[48.43876266 252.46658325]
[43.40184402 266.59561157]
[38.36492920 280.72463989]
[43.17792130 292.69116211]
[38.69178772 304.35559082]
[27.82053947 309.66052246]
[22.57382011 323.71301270]
[17.32710266 337.76547241]
[30.79892921 344.39031982]
[43.54417801 352.32360840]
[55.43618011 361.48651123]
[66.35674286 371.78796387]
[76.19733429 383.12557983]
[84.86014557 395.38665771]
[92.25907898 408.44937134]
[98.32060242 422.18386841]
[102.98447418 436.45367432]
[106.20433044 451.11694336]
[107.94818878 466.02792358]
[108.19869995 481.03845215]
[106.95337677 495.99932861]
[104.22460938 510.76184082]
[100.03950500 525.17932129]
[94.43965912 539.10845947]
[87.48072815 552.41076660]
[79.23188782 564.95410156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 192]
[44 191]
[45 190]
[47 187]
[48 186]
[49 185]
[50 184]
[52 182]
[53 181]
[54 180]
[59 179]
[60 178]
[61 177]
[63 175]
[66 172]
[67 171]
[68 170]
[69 169]
[70 168]
[74 165]
[75 164]
[76 162]
[77 161]
[78 160]
[79 159]
[80 158]
[88 157]
[89 156]
[90 155]
[91 127]
[92 126]
[93 125]
[94 124]
[96 122]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
