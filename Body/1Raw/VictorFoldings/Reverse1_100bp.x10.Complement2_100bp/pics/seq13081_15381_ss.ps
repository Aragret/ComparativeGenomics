%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[146.84422302 542.87091064]
[137.72949219 555.07092285]
[124.43739319 562.50329590]
[109.27085114 563.88024902]
[94.85757446 558.96319580]
[83.69473267 548.60412598]
[77.71636963 534.59771729]
[77.95827484 519.37072754]
[84.37852478 505.56130981]
[95.86477661 495.56201172]
[110.42697144 491.10528564]
[112.20943451 476.21157837]
[113.99190521 461.31787109]
[115.77436829 446.42413330]
[117.55683899 431.53042603]
[119.33930206 416.63671875]
[121.12176514 401.74298096]
[122.90423584 386.84927368]
[123.23921204 371.85302734]
[122.12355804 356.89456177]
[121.00791168 341.93609619]
[119.89226532 326.97766113]
[109.04819489 320.01806641]
[104.11901093 307.90258789]
[107.11182404 294.96994019]
[117.15232086 285.99200439]
[116.25950623 271.01861572]
[115.36669159 256.04519653]
[99.88628387 244.21849060]
[98.06655884 224.51589966]
[111.52796936 209.60046387]
[109.96744537 194.68186951]
[108.40692139 179.76325989]
[106.07143402 164.94619751]
[102.96732330 150.27088928]
[99.86321259 135.59558105]
[96.75910187 120.92028046]
[82.72487640 112.23648834]
[79.18950653 96.11604309]
[88.30160522 82.35604095]
[84.97934723 67.72858429]
[81.65708923 53.10112381]
[68.83643341 39.88323975]
[74.67697906 23.33467293]
[71.13730621 8.75829697]
[67.59763336 -5.81807804]
[64.05796051 -20.39445305]
[60.08586121 -34.85897827]
[55.68486404 -49.19882584]
[44.67647934 -55.92029953]
[41.30609131 -67.95459747]
[46.85531616 -78.70320892]
[42.66830444 -93.10699463]
[38.48129272 -107.51077271]
[34.29428101 -121.91455841]
[30.10726929 -136.31834412]
[25.92025948 -150.72212219]
[21.73324776 -165.12590027]
[17.54623604 -179.52967834]
[13.35922527 -193.93347168]
[8.11250687 -207.98593140]
[1.83514607 -221.60925293]
[-4.44221449 -235.23257446]
[-10.71957493 -248.85588074]
[-24.98512459 -244.16633606]
[-39.69226456 -241.13354492]
[-54.64925003 -239.79704285]
[-69.66109467 -240.17424011]
[-84.53208923 -242.26025391]
[-99.06835175 -246.02786255]
[-113.08037567 -251.42794800]
[-126.38548279 -258.39010620]
[-138.81021118 -266.82360840]
[-150.19259644 -276.61846924]
[-160.38423157 -287.64697266]
[-169.25224304 -299.76541138]
[-176.68103027 -312.81573486]
[-182.57374573 -326.62780762]
[-186.85354614 -341.02160645]
[-189.46466064 -355.80941772]
[-190.37301636 -370.79849243]
[-189.56680298 -385.79342651]
[-187.05651855 -400.59869385]
[-182.87489319 -415.02133179]
[-177.07643127 -428.87322998]
[-169.73672485 -441.97387695]
[-160.95149231 -454.15243530]
[-150.83523560 -465.25015259]
[-139.51986694 -475.12231445]
[-127.15287781 -483.64028931]
[-113.89551544 -490.69293213]
[-99.92060852 -496.18838501]
[-85.41035461 -500.05493164]
[-70.55392456 -502.24221802]
[-55.54499817 -502.72171021]
[-40.57925034 -501.48715210]
[-25.85178947 -498.55462646]
[-11.55461788 -493.96240234]
[2.12587094 -487.77029419]
[15.01132393 -480.05908203]
[26.93375206 -470.92926025]
[37.73772049 -460.49987793]
[47.28238297 -448.90689087]
[55.44329834 -436.30145264]
[62.11407852 -422.84790039]
[67.20775604 -408.72158813]
[70.65791321 -394.10675049]
[72.41958618 -379.19384766]
[72.46979523 -364.17733765]
[70.80789185 -349.25302124]
[67.45554352 -334.61541748]
[62.45644760 -320.45535278]
[55.87578964 -306.95748901]
[47.79935074 -294.29776001]
[38.33242798 -282.64120483]
[27.59844589 -272.13980103]
[15.73733807 -262.93045044]
[2.90374088 -255.13323975]
[9.18110180 -241.50993347]
[15.45846176 -227.88661194]
[21.73582268 -214.26330566]
[24.70443344 -228.96661377]
[34.55264282 -240.28088379]
[48.70615005 -245.24859619]
[63.46526718 -242.57119751]
[74.97199249 -232.94854736]
[80.21849823 -218.89601135]
[77.83335876 -204.08685303]
[68.44004822 -192.39216614]
[54.49394608 -186.86891174]
[39.64053726 -188.96086121]
[27.76300621 -198.12048340]
[31.95001793 -183.71669006]
[36.13702774 -169.31291199]
[40.32403946 -154.90913391]
[44.51105118 -140.50535583]
[48.69806290 -126.10157013]
[52.88507462 -111.69778442]
[57.07208633 -97.29400635]
[61.25909805 -82.89022064]
[74.56307983 -71.44596100]
[70.02471161 -53.59982300]
[74.42571259 -39.25997543]
[76.83618164 -37.82897186]
[78.82505035 -35.35692596]
[79.99296570 -31.99963951]
[80.00428772 -28.05446625]
[78.63433075 -23.93412590]
[82.17400360 -9.35774994]
[85.71367645 5.21862507]
[89.25334930 19.79500008]
[99.41718292 26.35420418]
[102.48543549 38.46905518]
[96.28454590 49.77886200]
[99.60680389 64.40632629]
[102.92906189 79.03378296]
[114.38139343 84.46497345]
[120.67839050 95.46503448]
[119.56275177 108.09075928]
[111.43440247 117.81616974]
[114.53851318 132.49147034]
[117.64262390 147.16677856]
[120.74673462 161.84208679]
[128.85510254 149.22247314]
[143.14033508 144.64732361]
[157.07142639 150.20831299]
[164.27926636 163.36305237]
[161.46852112 178.09735107]
[149.92424011 187.67489624]
[134.92430115 187.71696472]
[123.32552338 178.20272827]
[124.88604736 193.12133789]
[126.44657135 208.03994751]
[136.14788818 212.47933960]
[143.07836914 220.48405457]
[146.03816223 230.56588745]
[144.55752563 240.88676453]
[138.96995544 249.59391785]
[130.34008789 255.15238953]
[131.23291016 270.12579346]
[132.12573242 285.09921265]
[145.42019653 296.46917725]
[146.35977173 313.59902954]
[134.85072327 325.86199951]
[135.96636963 340.82046509]
[137.08201599 355.77890015]
[138.19766235 370.73736572]
[145.07768250 357.40826416]
[156.73321533 347.96640015]
[171.20011902 344.00296021]
[186.04043579 346.18579102]
[198.75334167 354.14709473]
[207.19645691 366.54522705]
[209.94700623 381.29086304]
[206.54144287 395.89916992]
[197.55368042 407.90832520]
[184.49830627 415.29461670]
[169.57537842 416.81329346]
[155.29968262 412.20846558]
[144.07691956 402.25610352]
[137.79794312 388.63174438]
[136.01548767 403.52545166]
[134.23301697 418.41915894]
[132.45054626 433.31289673]
[130.66809082 448.20660400]
[128.88562012 463.10031128]
[127.10315704 477.99404907]
[125.32068634 492.88775635]
[138.41993713 500.65496826]
[147.22218323 513.08239746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 208]
[12 207]
[13 206]
[14 205]
[15 204]
[16 203]
[17 202]
[18 201]
[19 187]
[20 186]
[21 185]
[22 184]
[26 181]
[27 180]
[28 179]
[31 173]
[32 172]
[33 171]
[34 163]
[35 162]
[36 161]
[37 160]
[40 156]
[41 155]
[42 154]
[44 151]
[45 150]
[46 149]
[47 148]
[48 143]
[49 142]
[52 140]
[53 139]
[54 138]
[55 137]
[56 136]
[57 135]
[58 134]
[59 133]
[60 132]
[61 121]
[62 120]
[63 119]
[64 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
