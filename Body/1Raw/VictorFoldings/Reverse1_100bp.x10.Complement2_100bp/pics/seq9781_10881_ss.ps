%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[49.12702942 724.55059814]
[48.85417938 739.70648193]
[43.41125870 753.85394287]
[33.45553589 765.28460693]
[20.18920517 772.61810303]
[5.21424532 774.96893311]
[-9.66104698 772.05316162]
[-22.64040565 764.22296143]
[-32.15651321 752.42382812]
[-37.06024933 738.08056641]
[-36.75946808 722.92523193]
[-31.29048729 708.78778076]
[-21.31371307 697.37554932]
[-8.03389168 690.06652832]
[6.94537544 687.74328613]
[9.83064842 673.02337646]
[1.33385086 660.84387207]
[4.05023718 645.87475586]
[16.88282013 637.04510498]
[19.76809311 622.32519531]
[22.65336418 607.60528564]
[25.53863716 592.88543701]
[28.31424904 578.14447021]
[30.98004341 563.38323975]
[33.64583969 548.62200928]
[36.31163406 533.86077881]
[38.97743225 519.09960938]
[41.64322662 504.33837891]
[44.30902100 489.57714844]
[46.97481537 474.81591797]
[48.64635849 459.90936279]
[49.31614304 444.92431641]
[49.98592758 429.93927002]
[50.65571213 414.95425415]
[51.32549667 399.96920776]
[51.99528503 384.98416138]
[52.66506958 369.99911499]
[53.33485413 355.01406860]
[54.00463867 340.02905273]
[54.67442322 325.04400635]
[55.34420776 310.05895996]
[55.79081345 295.06561279]
[56.01414108 280.06729126]
[47.97239304 292.72943115]
[35.52097321 301.09378052]
[20.75816727 303.75076294]
[6.17176628 300.25262451]
[-5.78016567 291.18890381]
[-13.08351707 278.08694458]
[-14.50754547 263.15469360]
[-9.81227589 248.90847778]
[0.21105438 237.74905396]
[13.87333965 231.55696106]
[28.87224388 231.37570190]
[42.68019104 237.23577881]
[52.97029495 248.14970398]
[58.00872040 262.27993774]
[61.11282730 247.60461426]
[64.21694183 232.92932129]
[67.32105255 218.25401306]
[70.42515564 203.57872009]
[73.52926636 188.90341187]
[68.59324646 174.85047913]
[79.01887512 162.95019531]
[74.08285522 148.89726257]
[84.50848389 136.99697876]
[87.61259460 122.32167053]
[90.71670532 107.64636993]
[93.60197449 92.92648315]
[96.26776886 78.16526031]
[91.10620117 63.20970154]
[100.98222351 52.06010437]
[103.64801788 37.29888916]
[106.31381226 22.53767014]
[101.15224457 7.58210993]
[111.02825928 -3.56748748]
[113.69405365 -18.32870483]
[106.99434662 -29.35034943]
[109.51858521 -41.59012222]
[119.37938690 -48.59662247]
[122.26466370 -63.31651306]
[125.14993286 -78.03639984]
[128.03520203 -92.75629425]
[121.66484833 -110.03344727]
[133.70603943 -122.79968262]
[136.37182617 -137.56089783]
[139.03762817 -152.32211304]
[140.82008362 -167.21583557]
[141.71290588 -182.18923950]
[142.60572815 -197.16264343]
[143.49853516 -212.13604736]
[144.39135742 -227.10945129]
[145.28416443 -242.08287048]
[136.66267395 -258.35403442]
[146.89033508 -272.61453247]
[139.77696228 -286.74642944]
[148.07484436 -299.11553955]
[148.74462891 -314.10058594]
[134.64916992 -319.63201904]
[123.11511993 -329.44241333]
[115.39359283 -342.46765137]
[112.32217407 -357.29483032]
[114.23401642 -372.31561279]
[120.92174530 -385.90063477]
[131.65992737 -396.57632446]
[145.28376770 -403.18463135]
[160.31544495 -405.00875854]
[175.12443542 -401.85086060]
[188.10437012 -394.05343628]
[197.84729004 -382.46231079]
[203.29635620 -368.33480835]
[203.86048889 -353.20336914]
[199.47850037 -338.70932007]
[190.62571716 -326.42489624]
[178.26240540 -317.68261719]
[163.72967529 -313.43078613]
[163.05989075 -298.44573975]
[170.22116089 -285.38568115]
[161.87538147 -271.94476318]
[169.80432129 -262.80920410]
[169.36894226 -250.31944275]
[160.25758362 -241.19004822]
[159.36476135 -226.21664429]
[158.47193909 -211.24324036]
[157.57913208 -196.26983643]
[156.68630981 -181.29643250]
[155.79350281 -166.32301331]
[166.32307434 -177.00608826]
[181.10173035 -179.57345581]
[194.61738586 -173.06753540]
[201.82905579 -159.91490173]
[200.04693604 -145.02114868]
[189.93574524 -133.94126892]
[175.26667786 -130.80780029]
[161.51095581 -136.78944397]
[153.79884338 -149.65632629]
[151.13304138 -134.89511108]
[148.46725464 -120.13388824]
[155.10459900 -110.02091217]
[153.00448608 -97.70127869]
[142.75509644 -89.87102509]
[139.86982727 -75.15113068]
[136.98455811 -60.43124008]
[134.09927368 -45.71134949]
[140.67292786 -29.44008255]
[128.45527649 -15.66290951]
[125.78948212 -0.90169203]
[131.14172363 12.99804688]
[121.07502747 25.20346642]
[118.40923309 39.96468353]
[115.74343872 54.72589874]
[121.09568024 68.62564087]
[111.02899170 80.83105469]
[108.36319733 95.59227753]
[110.30081940 100.46665192]
[109.36949921 106.07967377]
[105.39200592 110.75048065]
[102.28789520 125.42578125]
[99.18378448 140.10108948]
[103.89778137 155.20368958]
[93.69417572 166.05430603]
[98.40818024 181.15690613]
[88.20457458 192.00752258]
[85.10046387 206.68283081]
[81.99635315 221.35812378]
[78.89224243 236.03343201]
[75.78813171 250.70872498]
[72.68402100 265.38403320]
[71.01248169 280.29061890]
[70.78915405 295.28894043]
[73.67044067 301.23956299]
[73.18665314 306.90197754]
[70.32924652 310.72875977]
[69.65946198 325.71380615]
[68.98967743 340.69882202]
[68.31989288 355.68386841]
[67.65010834 370.66891479]
[66.98032379 385.65396118]
[66.31053925 400.63897705]
[65.64075470 415.62402344]
[64.97097015 430.60906982]
[64.30117798 445.59411621]
[63.63139725 460.57913208]
[73.46340179 449.25079346]
[87.82891083 444.93429565]
[102.27661133 448.96716309]
[112.32972717 460.09976196]
[114.87318420 474.88253784]
[109.11887360 488.73489380]
[96.84983063 497.36453247]
[81.86774445 498.09744263]
[68.81498718 490.70654297]
[61.73603439 477.48171997]
[59.07024002 492.24295044]
[56.40444183 507.00415039]
[53.73864746 521.76538086]
[51.07285309 536.52661133]
[48.40705490 551.28778076]
[45.74126053 566.04901123]
[43.07546616 580.81024170]
[44.62993240 589.81146240]
[40.25852966 595.77069092]
[37.37325668 610.49060059]
[34.48798370 625.21044922]
[31.60271072 639.93035889]
[40.15234756 652.95117188]
[37.01657867 667.83813477]
[24.55053902 675.90863037]
[21.66526604 690.62854004]
[34.65903473 698.43481445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 209]
[16 208]
[19 205]
[20 204]
[21 203]
[22 202]
[23 200]
[24 199]
[25 198]
[26 197]
[27 196]
[28 195]
[29 194]
[30 193]
[31 183]
[32 182]
[33 181]
[34 180]
[35 179]
[36 178]
[37 177]
[38 176]
[39 175]
[40 174]
[41 173]
[42 170]
[43 169]
[57 168]
[58 167]
[59 166]
[60 165]
[61 164]
[62 163]
[64 161]
[66 159]
[67 158]
[68 157]
[69 154]
[70 153]
[72 151]
[73 150]
[74 149]
[76 147]
[77 146]
[80 144]
[81 143]
[82 142]
[83 141]
[85 138]
[86 137]
[87 136]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
[95 119]
[97 117]
[98 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
