%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[110.87680054 515.24938965]
[115.33770752 500.82705688]
[123.52525330 488.14373779]
[134.83186340 478.14059448]
[148.41851807 471.55990601]
[145.75273132 456.79867554]
[135.87670898 445.64907837]
[141.03826904 430.69354248]
[138.37248230 415.93231201]
[135.70668030 401.17108154]
[133.04089355 386.40988159]
[130.37509155 371.64865112]
[126.09290314 365.62500000]
[127.78120422 356.64794922]
[117.05703735 367.13565063]
[102.15297699 365.44180298]
[94.05575562 352.81506348]
[98.73432922 338.56335449]
[112.73984528 333.19253540]
[125.74700165 340.66040039]
[124.40876770 325.72021484]
[123.07053375 310.78002930]
[120.61382294 308.25082397]
[119.26010895 304.40603638]
[119.61437225 299.77700806]
[122.02141571 295.14523315]
[121.35163116 280.16021729]
[120.68184662 265.17517090]
[120.01206207 250.19012451]
[108.88113403 240.35966492]
[107.98841095 225.17224121]
[118.37497711 213.56375122]
[117.70519257 198.57872009]
[117.03540802 183.59367371]
[114.36961365 168.83245850]
[109.75559998 154.55972290]
[105.14159393 140.28700256]
[100.52758026 126.01425934]
[84.98347473 121.24909973]
[75.30220032 108.18773651]
[75.26358795 91.92967224]
[84.88270569 78.82247162]
[80.05670929 64.62001801]
[68.29082489 54.04294205]
[71.52194977 39.50302887]
[66.69595337 25.30057144]
[61.86995316 11.09811592]
[58.50466156 8.35425663]
[56.39929581 5.01779699]
[55.58544159 1.55758786]
[55.93917465 -1.59542406]
[57.20688629 -4.09563255]
[53.23479080 -18.56015587]
[49.26269531 -33.02468109]
[45.29059982 -47.48920441]
[41.31850433 -61.95372772]
[35.44780350 -48.15029144]
[23.10655975 -39.62423325]
[8.11883736 -39.01744461]
[-4.87125301 -46.51794815]
[-11.83859062 -59.80163193]
[-10.62427044 -74.75239563]
[-1.60456240 -86.73759460]
[12.42567825 -92.04347229]
[27.11903000 -89.02594757]
[37.92272568 -78.61981201]
[35.91871262 -93.48534393]
[33.91469574 -108.35086823]
[31.91068268 -123.21640015]
[29.90666962 -138.08192444]
[20.39501762 -150.72467041]
[26.36257935 -164.37155151]
[24.35856628 -179.23709106]
[22.35455132 -194.10261536]
[20.35053825 -208.96813965]
[16.61841011 -214.42550659]
[16.25687027 -220.09703064]
[18.51499557 -224.30535889]
[9.38398170 -237.22569275]
[15.75521660 -250.68884277]
[14.19469357 -265.60745239]
[12.63417053 -280.52606201]
[11.07364750 -295.44467163]
[9.51312447 -310.36328125]
[-5.49162292 -311.34591675]
[-20.11443520 -314.85037231]
[-33.93458557 -320.77587891]
[-46.55443954 -328.95190430]
[-57.61089706 -339.14318848]
[-66.78584290 -351.05657959]
[-73.81529999 -364.34921265]
[-78.49701691 -378.63873291]
[-80.69628143 -393.51391602]
[-80.34982300 -408.54681396]
[-77.46761322 -423.30487061]
[-72.13257599 -437.36352539]
[-64.49820709 -450.31823730]
[-54.78416824 -461.79626465]
[-43.26994705 -471.46740723]
[-30.28683472 -479.05337524]
[-16.20837784 -484.33587646]
[-1.43964505 -487.16299438]
[13.59443951 -487.45333862]
[28.46131516 -485.19857788]
[42.73323441 -480.46356201]
[55.99956131 -473.38452148]
[67.87860107 -464.16516113]
[78.02856445 -453.07073975]
[86.15742493 -440.42047119]
[92.03129578 -426.57830811]
[95.48117065 -411.94250488]
[96.40779114 -396.93420410]
[94.78449249 -381.98519897]
[90.65799713 -367.52557373]
[84.14701080 -353.97143555]
[75.43888092 -341.71270752]
[64.78415680 -331.10211182]
[52.48938751 -322.44491577]
[38.90832901 -315.99023438]
[24.43172836 -311.92379761]
[25.99225235 -297.00518799]
[27.55277443 -282.08657837]
[29.11329842 -267.16796875]
[30.67382050 -252.24937439]
[39.69321823 -240.39611816]
[33.43360138 -225.86587524]
[35.21606445 -210.97215271]
[37.22008133 -196.10662842]
[39.22409439 -181.24110413]
[41.22810745 -166.37557983]
[50.59642029 -154.79611206]
[44.77219772 -140.08593750]
[46.77621078 -125.22041321]
[48.78022385 -110.35488129]
[50.78424072 -95.48935699]
[52.78825378 -80.62382507]
[55.78302765 -65.92582703]
[59.75512314 -51.46129990]
[63.72721863 -36.99677658]
[67.69931793 -22.53225327]
[71.67140961 -8.06772900]
[76.07241058 6.27211857]
[80.89840698 20.47457504]
[85.72440338 34.67702866]
[97.14510345 44.23825073]
[94.25916290 59.79402161]
[99.08515930 73.99647522]
[111.99621582 76.91080475]
[121.80307770 85.79978180]
[125.96808624 98.36327362]
[123.41348267 111.35028839]
[114.80031586 121.40025330]
[119.41432190 135.67298889]
[124.02833557 149.94572449]
[128.64234924 164.21846008]
[131.22731018 149.44287109]
[138.19607544 136.15992737]
[148.88438416 125.63568115]
[162.27354431 118.87322998]
[177.08734131 116.51713562]
[191.91384888 118.79195404]
[205.33987427 125.48086548]
[216.08576965 135.94633484]
[223.12725830 149.19085693]
[225.79322815 163.95204163]
[223.82955933 178.82295227]
[217.42343140 192.38618469]
[207.18540955 203.34898376]
[194.09133911 210.66644287]
[179.38925171 213.64111328]
[164.48045349 211.98945618]
[150.78596497 205.86891174]
[139.61106873 195.86283875]
[132.02044678 182.92388916]
[132.69023132 197.90893555]
[133.36001587 212.89396667]
[144.74082947 223.52952576]
[145.20661926 238.73602295]
[134.99710083 249.52033997]
[135.66688538 264.50537109]
[136.33666992 279.49041748]
[137.00645447 294.47546387]
[138.01071167 309.44180298]
[139.34895325 324.38198853]
[140.68717957 339.32217407]
[142.58047485 354.20220947]
[145.13630676 368.98284912]
[147.80210876 383.74407959]
[150.46789551 398.50531006]
[153.13369751 413.26651001]
[155.79948425 428.02774048]
[165.86618042 440.23315430]
[160.51394653 454.13290405]
[163.17973328 468.89410400]
[178.20994568 470.30673218]
[192.30123901 475.72317505]
[204.40798950 484.74145508]
[213.63174438 496.69238281]
[219.28808594 510.68911743]
[220.95724487 525.69299316]
[218.51538086 540.59063721]
[212.14367676 554.27655029]
[202.31497192 565.73510742]
[189.75862122 574.11608887]
[175.40637207 578.79748535]
[160.32325745 579.43194580]
[145.62857056 575.97241211]
[132.41273499 568.67553711]
[121.65644836 558.08282471]
[114.15791321 544.98040771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 194]
[6 193]
[8 191]
[9 190]
[10 189]
[11 188]
[12 187]
[14 186]
[20 185]
[21 184]
[22 183]
[26 182]
[27 181]
[28 180]
[29 179]
[32 176]
[33 175]
[34 174]
[35 155]
[36 154]
[37 153]
[38 152]
[42 147]
[43 146]
[45 144]
[46 143]
[47 142]
[52 141]
[53 140]
[54 139]
[55 138]
[56 137]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[72 130]
[73 129]
[74 128]
[75 127]
[78 126]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
