%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[-94.06930542 544.33721924]
[-86.51686859 557.32592773]
[-80.84568024 571.23937988]
[-77.16613007 585.80670166]
[-75.54985046 600.74432373]
[-76.02829742 615.76159668]
[-78.59215546 630.56604004]
[-83.19152832 644.86962891]
[-89.73687744 658.39385986]
[-98.10079956 670.87548828]
[-108.12049103 682.07153320]
[-119.60090637 691.76409912]
[-132.31858826 699.76452637]
[-146.02598572 705.91705322]
[-160.45625305 710.10192871]
[-175.32853699 712.23773193]
[-190.35331726 712.28283691]
[-205.23814392 710.23632812]
[-219.69328308 706.13812256]
[-233.43734741 700.06799316]
[-246.20281982 692.14404297]
[-257.74121094 682.52056885]
[-267.82791138 671.38482666]
[-276.26660156 658.95361328]
[-282.89300537 645.46893311]
[-287.57812500 631.19323730]
[-290.23080444 616.40441895]
[-290.79937744 601.39031982]
[-289.27276611 586.44323730]
[-285.68072510 571.85406494]
[-280.09313965 557.90686035]
[-272.61880493 544.87304688]
[-263.40316772 533.00634766]
[-252.62564087 522.53771973]
[-240.49601746 513.67102051]
[-227.25039673 506.57882690]
[-213.14662170 501.39913940]
[-198.45919800 498.23278809]
[-183.47402954 497.14141846]
[-168.48281860 498.14630127]
[-153.77737427 501.22781372]
[-139.64392090 506.32604980]
[-126.35759735 513.34173584]
[-117.57699585 501.18026733]
[-108.79639435 489.01882935]
[-100.01579285 476.85736084]
[-91.69384766 464.37756348]
[-83.84209442 451.59671021]
[-75.99033356 438.81588745]
[-80.70836639 426.82546997]
[-77.61267853 414.11724854]
[-67.61578369 405.38385010]
[-54.21987152 403.98233032]
[-46.17869949 391.31979370]
[-38.13752747 378.65725708]
[-30.09635353 365.99475098]
[-22.05518150 353.33221436]
[-14.01400852 340.66970825]
[-5.97283554 328.00717163]
[2.06833744 315.34463501]
[10.10951042 302.68212891]
[18.15068245 290.01959229]
[26.19185638 277.35708618]
[34.23302841 264.69454956]
[40.71252441 251.16619873]
[45.53852081 236.96374512]
[50.36452103 222.76129150]
[55.19051743 208.55883789]
[60.01651382 194.35638428]
[64.84251404 180.15393066]
[69.66851044 165.95146179]
[74.49450684 151.74900818]
[79.32050323 137.54655457]
[84.14650726 123.34410095]
[88.97250366 109.14164734]
[86.43765259 95.39151001]
[96.82504272 86.03235626]
[101.43904877 71.75962067]
[105.84004974 57.41977692]
[110.24105072 43.07992935]
[114.53517151 28.70771599]
[118.72218323 14.30393505]
[122.90919495 -0.09984734]
[127.09620667 -14.50362968]
[131.28321838 -28.90741158]
[134.82289124 -43.48378754]
[137.70816040 -58.20367813]
[140.59342957 -72.92356873]
[143.47871399 -87.64346313]
[146.36398315 -102.36334991]
[149.24925232 -117.08324432]
[152.13452148 -131.80313110]
[155.01979065 -146.52302551]
[140.92137146 -151.74130249]
[127.84265137 -159.15368652]
[116.12241364 -168.56814575]
[106.06423187 -179.74084473]
[97.92864990 -192.38238525]
[91.92639160 -206.16531372]
[88.21293640 -220.73262024]
[86.88446045 -235.70697021]
[87.97537994 -250.70051575]
[91.45743561 -265.32485962]
[97.24044037 -279.20120239]
[105.17459869 -291.97012329]
[115.05438995 -303.30087280]
[126.62390900 -312.89996338]
[139.58348083 -320.51873779]
[153.59741211 -325.95986938]
[168.30271912 -329.08239746]
[183.31848145 -329.80548096]
[198.25576782 -328.11035156]
[212.72767639 -324.04092407]
[226.35932922 -317.70260620]
[238.79765320 -309.25961304]
[249.72044373 -298.93057251]
[258.84478760 -286.98309326]
[265.93435669 -273.72662354]
[270.80548096 -259.50451660]
[273.33203125 -244.68516541]
[273.44851685 -229.65245056]
[271.15191650 -214.79574585]
[266.50177002 -200.49986267]
[259.61849976 -187.13510132]
[250.68038940 -175.04765320]
[239.91897583 -164.55059814]
[227.61299133 -155.91586304]
[214.08119202 -149.36706543]
[199.67408752 -145.07386780]
[184.76486206 -143.14746094]
[169.73968506 -143.63775635]
[166.85441589 -128.91786194]
[163.96914673 -114.19796753]
[161.08387756 -99.47808075]
[158.19859314 -84.75818634]
[155.31332397 -70.03829956]
[152.42805481 -55.31840515]
[149.54278564 -40.59851456]
[162.56327820 -48.04611588]
[177.07202148 -44.23870850]
[184.75773621 -31.35734177]
[181.21772766 -16.78105164]
[168.47982788 -8.85979652]
[153.84092712 -12.13123417]
[145.68699646 -24.72039986]
[141.49998474 -10.31661797]
[137.31297302 4.08716393]
[133.12596130 18.49094582]
[128.93894958 32.89472961]
[130.09043884 40.19513321]
[124.58089447 47.48092651]
[120.17989349 61.82077408]
[115.77890015 76.16062164]
[117.18537903 80.72470856]
[115.73966217 86.22078705]
[111.02749634 90.85835266]
[113.56234741 104.60848999]
[103.17495728 113.96764374]
[98.34896088 128.17010498]
[93.52296448 142.37255859]
[88.69696045 156.57501221]
[83.87096405 170.77746582]
[79.04496765 184.97991943]
[74.21897125 199.18237305]
[69.39297485 213.38482666]
[64.56697845 227.58729553]
[59.74097824 241.78974915]
[54.91498184 255.99220276]
[66.01050568 245.89817810]
[79.86285400 240.14382935]
[94.84465790 239.40516663]
[109.19586945 243.76896667]
[121.23052216 252.72256470]
[129.53480530 265.21414185]
[133.13311768 279.77612305]
[131.60276794 294.69787598]
[125.12351227 308.22631836]
[114.45654297 318.77221680]
[100.85498810 325.09658813]
[85.91676331 326.45651245]
[71.39678192 322.69216919]
[59.00084686 314.24581909]
[50.18521500 302.10974121]
[45.98553848 287.70962524]
[46.89555359 272.73571777]
[38.85438156 285.39825439]
[30.81320763 298.06076050]
[22.77203560 310.72329712]
[14.73086262 323.38583374]
[6.68968916 336.04833984]
[-1.35148358 348.71087646]
[-9.39265633 361.37338257]
[-17.43383026 374.03591919]
[-25.47500229 386.69845581]
[-33.51617432 399.36096191]
[-41.55735016 412.02349854]
[-37.43436050 429.02407837]
[-46.69995117 443.46237183]
[-63.20949554 446.66763306]
[-71.06124878 459.44848633]
[-78.91300201 472.22930908]
[-63.93961716 471.33621216]
[-53.79258347 482.38327026]
[-55.95192337 497.22705078]
[-68.82585144 504.92523193]
[-82.92417908 499.80300903]
[-87.85433197 485.63796997]
[-96.63494110 497.79940796]
[-105.41554260 509.96087646]
[-114.19614410 522.12231445]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 210]
[44 209]
[45 208]
[46 207]
[47 201]
[48 200]
[49 199]
[53 196]
[54 195]
[55 194]
[56 193]
[57 192]
[58 191]
[59 190]
[60 189]
[61 188]
[62 187]
[63 186]
[64 185]
[65 168]
[66 167]
[67 166]
[68 165]
[69 164]
[70 163]
[71 162]
[72 161]
[73 160]
[74 159]
[75 158]
[77 156]
[78 153]
[79 152]
[80 151]
[81 149]
[82 148]
[83 147]
[84 146]
[85 145]
[86 138]
[87 137]
[88 136]
[89 135]
[90 134]
[91 133]
[92 132]
[93 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
