%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[139.60444641 359.25747681]
[146.57334900 345.95281982]
[155.12446594 333.60543823]
[165.12815857 322.40249634]
[176.43275452 312.51382446]
[168.01814270 300.09634399]
[159.60351562 287.67883301]
[151.18890381 275.26135254]
[142.77427673 262.84384155]
[134.35966492 250.42634583]
[135.87196350 265.34991455]
[132.52082825 279.97079468]
[124.65988159 292.74597168]
[113.11872101 302.32730103]
[99.11531830 307.70361328]
[84.12747955 308.30752563]
[69.73691559 304.07534790]
[57.46228027 295.45364380]
[48.59896088 283.35235596]
[44.08231735 269.04852295]
[44.38899994 254.05165100]
[49.48665237 239.94441223]
[58.83729935 228.21559143]
[71.45414734 220.10293579]
[86.00570679 216.46260071]
[100.95632935 217.67877197]
[114.72822571 223.62307739]
[125.86814117 233.66838074]
[120.83122253 219.53935242]
[115.79430389 205.41032410]
[110.96652222 219.61216736]
[99.29359436 229.03250122]
[84.39251709 230.75234985]
[70.88054657 224.23878479]
[62.94451141 211.51010132]
[63.04347992 196.51042175]
[71.14678955 183.88757324]
[84.74353790 177.55287170]
[99.62062073 179.46919250]
[111.16836548 189.04295349]
[108.06425476 174.36766052]
[104.96014404 159.69235229]
[101.85603333 145.01704407]
[98.75192261 130.34175110]
[95.64781189 115.66644287]
[86.28707123 108.73696899]
[83.96182251 97.32493591]
[89.86505890 87.28536224]
[86.97978973 72.56546783]
[83.65753174 57.93800735]
[79.90122986 43.41595078]
[76.14492798 28.89389038]
[60.91168594 20.29344559]
[56.69469833 3.66419625]
[65.63003540 -10.58355904]
[61.65793991 -25.04808235]
[57.68584442 -39.51260757]
[53.71374893 -53.97713089]
[49.74165344 -68.44165802]
[45.76955414 -82.90618134]
[41.79745865 -97.37070465]
[36.97146225 -111.57315826]
[31.30867577 -125.46318817]
[25.64588928 -139.35321045]
[19.98310280 -153.24324036]
[5.53122568 -149.16607666]
[-9.28628349 -146.73266602]
[-24.28307915 -145.97363281]
[-39.27056122 -146.89851379]
[-54.06024551 -149.49568176]
[-68.46613312 -153.73246765]
[-82.30706787 -159.55558777]
[-95.40896606 -166.89179993]
[-107.60707092 -175.64888000]
[-118.74797058 -185.71665955]
[-128.69155884 -196.96855164]
[-137.31280518 -209.26303101]
[-144.50325012 -222.44549561]
[-150.17248535 -236.35017395]
[-154.24922180 -250.80216980]
[-156.68217468 -265.61975098]
[-157.44076538 -280.61657715]
[-156.51542664 -295.60400391]
[-153.91783142 -310.39361572]
[-149.68061829 -324.79937744]
[-143.85708618 -338.64013672]
[-136.52046204 -351.74182129]
[-127.76303864 -363.93966675]
[-117.69491577 -375.08026123]
[-106.44273376 -385.02352905]
[-94.14798737 -393.64437866]
[-80.96530914 -400.83444214]
[-67.06047058 -406.50326538]
[-52.60834885 -410.57955933]
[-37.79069519 -413.01208496]
[-22.79385376 -413.77023315]
[-7.80642843 -412.84445190]
[6.98310089 -410.24639893]
[21.38873863 -406.00875854]
[35.22931671 -400.18481445]
[48.33078003 -392.84780884]
[60.52836227 -384.08999634]
[71.66866302 -374.02154541]
[81.61157990 -362.76907349]
[90.23207855 -350.47406006]
[97.42173767 -337.29116821]
[103.09014893 -323.38616943]
[107.16601562 -308.93392944]
[109.59809113 -294.11621094]
[110.35577393 -279.11932373]
[109.42955017 -264.13192749]
[106.83106232 -249.34248352]
[102.59298706 -234.93696594]
[96.76863098 -221.09657288]
[89.43122864 -207.99531555]
[80.67306519 -195.79800415]
[70.60427856 -184.65800476]
[59.35150146 -174.71542358]
[47.05624008 -166.09529114]
[33.87313080 -158.90602112]
[39.53591537 -145.01599121]
[45.19870377 -131.12597656]
[50.86148834 -117.23594666]
[55.74327850 -131.41932678]
[67.96298218 -140.11868286]
[82.96295166 -140.08937073]
[95.14857483 -131.34234619]
[99.97490692 -117.13999939]
[95.64185333 -102.77947235]
[83.76553345 -93.61688995]
[68.77552032 -93.06965637]
[56.26198196 -101.34279633]
[60.23408127 -86.87827301]
[64.20617676 -72.41374969]
[68.17826843 -57.94922638]
[72.15036774 -43.48470306]
[76.12246704 -29.02017975]
[80.09455872 -14.55565453]
[92.07481384 -9.81191635]
[99.24238586 1.12919903]
[98.79307556 14.39602184]
[90.66698456 25.13758850]
[94.42328644 39.65964890]
[98.17958832 54.18170929]
[100.52375793 55.71891785]
[102.40026093 58.27730179]
[103.41709900 61.68339157]
[103.25225067 65.62513733]
[101.69967651 69.68019867]
[104.58495331 84.40008545]
[115.93238068 96.75371552]
[110.32312012 112.56233978]
[113.42723083 127.23764038]
[116.53134155 141.91294861]
[119.63544464 156.58824158]
[122.73955536 171.26354980]
[125.84366608 185.93884277]
[129.92333984 200.37339783]
[134.96025085 214.50242615]
[139.99716187 228.63145447]
[146.77716064 242.01173401]
[155.19177246 254.42922974]
[163.60639954 266.84671021]
[172.02101135 279.26422119]
[180.43563843 291.68170166]
[188.85025024 304.09921265]
[202.22436523 297.26452637]
[216.33702087 292.12521362]
[230.97427368 288.75918579]
[245.91424561 287.21746826]
[260.93045044 287.52340698]
[275.79522705 289.67242432]
[290.28323364 293.63186646]
[304.17483521 299.34176636]
[317.25942993 306.71554565]
[329.33868408 315.64141846]
[340.22946167 325.98406982]
[349.76669312 337.58670044]
[357.80575562 350.27343750]
[364.22479248 363.85192871]
[368.92648315 378.11636353]
[371.83956909 392.85046387]
[372.91986084 407.83087158]
[372.15103149 422.83047485]
[369.54467773 437.62191772]
[365.14038086 451.98095703]
[359.00482178 465.68988037]
[351.23107910 478.54089355]
[341.93698120 490.33917236]
[331.26342773 500.90585327]
[319.37222290 510.08074951]
[306.44366455 517.72479248]
[292.67367554 523.72204590]
[278.27105713 527.98168945]
[263.45413208 530.43902588]
[248.44755554 531.05694580]
[233.47877502 529.82592773]
[218.77473450 526.76470947]
[204.55834961 521.91973877]
[191.04513550 515.36437988]
[178.43992615 507.19808960]
[166.93385315 497.54458618]
[156.70130920 486.55029297]
[147.89744568 474.38183594]
[140.65570068 461.22369385]
[135.08587646 447.27532959]
[131.27239990 432.74819946]
[129.27308655 417.86257935]
[129.11825562 402.84405518]
[130.81022644 387.92034912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 166]
[6 165]
[7 164]
[8 163]
[9 162]
[10 161]
[28 160]
[29 159]
[30 158]
[40 157]
[41 156]
[42 155]
[43 154]
[44 153]
[45 152]
[48 150]
[49 149]
[50 144]
[51 143]
[52 142]
[55 138]
[56 137]
[57 136]
[58 135]
[59 134]
[60 133]
[61 132]
[62 123]
[63 122]
[64 121]
[65 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
