%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[28.44045639 566.69482422]
[24.19879913 552.26147461]
[22.68173218 537.29437256]
[23.94092560 522.30340576]
[27.93349075 507.79913330]
[34.52344513 494.27554321]
[43.48633194 482.19329834]
[54.51688766 471.96383667]
[67.23940277 463.93563843]
[81.22056580 458.38211060]
[78.33529663 443.66220093]
[75.45001984 428.94232178]
[72.56475067 414.22241211]
[69.67947388 399.50253296]
[65.45997620 413.89682007]
[57.23528290 426.44091797]
[45.71692276 436.04965210]
[31.90134621 441.89172363]
[16.98373985 443.46176147]
[2.25462556 440.62393188]
[-11.01178074 433.62377930]
[-21.66780281 423.06683350]
[-28.79158783 409.86636353]
[-31.76685524 395.16439819]
[-30.33621979 380.23278809]
[-24.62343979 366.36325073]
[-15.12273216 354.75564575]
[-2.65600085 346.41415405]
[11.69825649 342.06036377]
[26.69825172 342.07098389]
[41.04633713 346.44503784]
[53.50125885 354.80416870]
[62.98554230 366.42520142]
[68.67786407 380.29937744]
[70.01609802 365.35919189]
[71.35433197 350.41900635]
[72.69256592 335.47882080]
[74.03079987 320.53863525]
[75.36903381 305.59844971]
[76.70726776 290.65826416]
[64.53224182 299.42004395]
[49.70612335 297.14273071]
[40.72198868 285.13082886]
[42.72635651 270.26535034]
[54.57103729 261.06188965]
[69.47085571 262.79263306]
[78.89025116 274.46517944]
[81.55604553 259.70397949]
[84.22183990 244.94274902]
[86.88763428 230.18153381]
[89.55342865 215.42031860]
[91.00284576 200.49050903]
[91.22617340 185.49217224]
[91.44950104 170.49383545]
[91.67282867 155.49549866]
[91.89615631 140.49716187]
[92.11948395 125.49882507]
[92.34281158 110.50048828]
[92.11948395 95.50215149]
[83.77369690 82.06122589]
[90.93497467 69.00115967]
[90.26519012 54.01612473]
[89.59540558 39.03108597]
[82.93080139 52.46920395]
[72.11986542 62.86745834]
[58.43266678 69.00428009]
[43.47715378 70.15871429]
[29.01029396 66.19513702]
[16.73163414 57.57919312]
[8.08365917 45.32307053]
[4.08232546 30.86660767]
[5.19770622 15.90813351]
[11.29876709 2.20495701]
[21.66876221 -8.63308811]
[35.08943176 -15.33275795]
[49.98413467 -17.10698318]
[64.60305023 -13.74732876]
[77.22876740 -5.64848328]
[86.37802887 6.23810816]
[90.97620392 20.51757431]
[93.86147308 5.79768229]
[96.74674225 -8.92220879]
[99.63201904 -23.64210129]
[102.51728821 -38.36199188]
[105.40256500 -53.08188248]
[92.79831696 -61.53224945]
[84.41222382 -74.13052368]
[81.49627686 -88.93967438]
[84.46425629 -103.69699860]
[92.83335876 -116.15985870]
[105.30242157 -124.44647217]
[119.95411682 -127.32001495]
[122.83938599 -142.03990173]
[125.17487335 -156.85696411]
[126.95733643 -171.75068665]
[128.73980713 -186.64440918]
[130.52227783 -201.53811646]
[132.30473328 -216.43183899]
[134.08720398 -231.32556152]
[135.86967468 -246.21926880]
[122.13192749 -252.55407715]
[111.02549744 -262.82550049]
[103.63846588 -276.02728271]
[100.69454956 -290.86602783]
[102.48215485 -305.88800049]
[108.82614899 -319.62149048]
[119.10502625 -330.72103882]
[132.31175232 -338.09924316]
[147.15246582 -341.03320312]
[162.17324829 -339.23553467]
[175.90248108 -332.88232422]
[186.99514771 -322.59603882]
[194.36447144 -309.38436890]
[197.28849792 -294.54168701]
[195.48075867 -279.52212524]
[189.11836243 -265.79711914]
[178.82463074 -254.71136475]
[165.60803223 -247.35089111]
[150.76338196 -244.43681335]
[148.98092651 -229.54309082]
[147.19845581 -214.64936829]
[145.41598511 -199.75566101]
[143.63352966 -184.86193848]
[141.85105896 -169.96821594]
[140.06858826 -155.07450867]
[153.29397583 -162.15187073]
[167.13282776 -156.36512756]
[171.38363647 -141.98004150]
[162.91288757 -129.60076904]
[147.96488953 -128.35284424]
[137.55928040 -139.15463257]
[134.67401123 -124.43473816]
[147.15667725 -116.24253845]
[155.57470703 -103.86181641]
[158.61953735 -89.16168976]
[155.79672241 -74.37590790]
[147.50581360 -61.76343536]
[134.98417664 -53.26332092]
[120.12245178 -50.19660950]
[117.23718262 -35.47671890]
[114.35190582 -20.75682831]
[111.46663666 -6.03693676]
[108.58136749 8.68295479]
[105.69609070 23.40284538]
[104.58044434 38.36130142]
[105.25022888 53.34634018]
[105.92001343 68.33137512]
[114.21789551 80.70046997]
[107.10452271 94.83235931]
[109.17135620 97.07238770]
[110.46881866 100.11395264]
[110.69845581 103.67354584]
[109.67073822 107.36137390]
[107.34114838 110.72381592]
[107.11782074 125.72215271]
[106.89449310 140.72048950]
[106.67116547 155.71882629]
[106.44783783 170.71716309]
[106.22451019 185.71549988]
[106.00118256 200.71383667]
[114.64260101 188.45309448]
[127.94970703 181.53059387]
[142.94966125 181.49284363]
[156.29142761 188.34829712]
[164.99443054 200.56539917]
[167.11441040 215.41484070]
[162.17771912 229.57919312]
[151.28726196 239.89413452]
[136.87599182 244.05526733]
[122.16339874 241.13296509]
[110.43633270 231.78010559]
[104.31464386 218.08612061]
[101.64884949 232.84733582]
[98.98305511 247.60855103]
[96.31726074 262.36975098]
[93.65146637 277.13098145]
[91.64745331 291.99652100]
[90.30921936 306.93670654]
[88.97098541 321.87689209]
[87.63275146 336.81707764]
[86.29451752 351.75726318]
[84.95628357 366.69744873]
[83.61804962 381.63763428]
[84.39936829 396.61724854]
[87.28463745 411.33715820]
[90.16991425 426.05703735]
[93.05518341 440.77694702]
[95.94046021 455.49682617]
[110.98360443 455.36126709]
[125.79548645 457.99240112]
[139.87161255 463.30062866]
[152.73254395 471.10516357]
[163.94026184 481.14019775]
[173.11302185 493.06390381]
[179.93841553 506.47021484]
[184.18395996 520.90246582]
[185.70506287 535.86914062]
[184.44992065 550.86041260]
[180.46125793 565.36578369]
[173.87495422 578.89111328]
[164.91531372 590.97583008]
[153.88752747 601.20825195]
[141.16717529 609.23986816]
[127.18750763 614.79718018]
[112.42467499 617.69085693]
[97.38149261 617.82238770]
[82.57032013 615.18725586]
[68.49563599 609.87524414]
[55.63679886 602.06719971]
[44.43178558 592.02917480]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 188]
[11 187]
[12 186]
[13 185]
[14 184]
[34 183]
[35 182]
[36 181]
[37 180]
[38 179]
[39 178]
[40 177]
[47 176]
[48 175]
[49 174]
[50 173]
[51 172]
[52 160]
[53 159]
[54 158]
[55 157]
[56 156]
[57 155]
[58 154]
[59 149]
[61 147]
[62 146]
[63 145]
[80 144]
[81 143]
[82 142]
[83 141]
[84 140]
[85 139]
[92 132]
[93 131]
[94 125]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
