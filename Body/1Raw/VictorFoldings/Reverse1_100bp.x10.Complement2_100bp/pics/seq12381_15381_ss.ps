%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[221.20301819 374.16116333]
[214.32360840 360.83175659]
[207.44419861 347.50231934]
[200.56478882 334.17288208]
[193.68537903 320.84344482]
[182.26075745 316.86795044]
[176.42031860 305.81927490]
[179.77722168 293.36560059]
[173.98381042 288.77667236]
[173.09921265 279.68515015]
[166.61972046 266.15682983]
[160.14022827 252.62847900]
[143.90783691 250.18164062]
[132.21531677 238.42381287]
[129.81117249 221.84909058]
[137.83891296 206.96112061]
[131.15872192 193.53074646]
[124.47853088 180.10037231]
[117.30342102 193.27299500]
[102.55831909 196.02655029]
[91.11277008 186.33122253]
[91.40399933 171.33404541]
[103.21732330 162.09039307]
[117.84310913 165.41329956]
[112.18032074 151.52326965]
[106.51753235 137.63323975]
[94.54799652 128.76873779]
[96.50291443 113.06877899]
[95.42751312 128.03018188]
[91.40252686 142.48007202]
[84.58827972 155.84294128]
[75.25617218 167.58651733]
[63.77789688 177.24308777]
[50.61063385 184.42800903]
[36.27883148 188.85513306]
[21.35331535 190.34811401]
[6.42856550 188.84748840]
[-7.90097046 184.41304016]
[-21.06455421 177.22137451]
[-32.53788376 167.55892944]
[-41.86397934 155.81057739]
[-48.67139053 142.44422913]
[-52.68898010 127.99227905]
[-53.75672531 113.03032684]
[-51.83210373 98.15431213]
[-46.99176407 83.95674133]
[-39.42850494 71.00308990]
[-29.44355965 59.80929947]
[-17.43462944 50.82121658]
[-3.88002491 44.39683533]
[10.68037987 40.79203415]
[25.66665077 40.15038681]
[40.48188782 42.49745560]
[54.53600693 47.73975754]
[67.26924133 55.66848755]
[78.17442322 65.96785736]
[86.81721497 78.22763824]
[92.85207367 91.95555878]
[93.52185822 76.97052002]
[94.19164276 61.98547745]
[83.80507660 50.37699127]
[84.69779968 35.18957138]
[95.82872772 25.35910606]
[96.49851227 10.37406826]
[97.16829681 -4.61097097]
[97.83808899 -19.59601021]
[98.39629364 -34.58562088]
[98.84290314 -49.57896805]
[99.28950500 -64.57231903]
[96.81376648 -69.16773224]
[96.39062500 -73.79096222]
[97.68695068 -77.65548706]
[100.10572815 -80.22100067]
[101.22137451 -95.17945099]
[98.95330048 -99.88082886]
[98.73701477 -104.51834106]
[100.20460510 -108.32112885]
[102.73552704 -110.77607727]
[104.51799774 -125.66979980]
[106.30046082 -140.56350708]
[108.08293152 -155.45722961]
[109.86539459 -170.35095215]
[111.64785767 -185.24465942]
[113.43032837 -200.13838196]
[111.34285736 -209.03109741]
[115.35180664 -215.23995972]
[117.35581970 -230.10549927]
[119.35983276 -244.97102356]
[121.36384583 -259.83654785]
[121.92205811 -274.82617188]
[121.02924347 -289.79956055]
[120.13642883 -304.77297974]
[119.24361420 -319.74636841]
[118.35079956 -334.71978760]
[103.70592499 -338.51226807]
[90.95085907 -346.64636230]
[81.33520508 -358.32516479]
[75.80101013 -372.40451050]
[74.89046478 -387.50503540]
[78.69275665 -402.14736938]
[86.83539581 -414.89697266]
[98.52063751 -424.50479126]
[112.60369110 -430.02957153]
[127.70482635 -430.92999268]
[142.34460449 -427.11788940]
[155.08876038 -418.96670532]
[164.68875122 -407.27502441]
[170.20407104 -393.18829346]
[171.09437561 -378.08654785]
[167.27246094 -363.44931030]
[159.11274719 -350.71063232]
[147.41464233 -341.11846924]
[133.32420349 -335.61260986]
[134.21701050 -320.63919067]
[135.10983276 -305.66580200]
[136.00265503 -290.69238281]
[136.89546204 -275.71896362]
[143.97317505 -288.94418335]
[155.76799011 -298.21145630]
[170.29229736 -301.95907593]
[185.09846497 -299.55551147]
[197.69143677 -291.40582275]
[205.94903564 -278.88336182]
[208.47972107 -264.09838867]
[204.85704041 -249.54243469]
[195.69148254 -237.66841125]
[182.52757263 -230.47731018]
[167.58369446 -229.18096924]
[153.37814331 -233.99784851]
[142.30480957 -244.11619568]
[136.22937012 -257.83255005]
[134.22535706 -242.96701050]
[132.22134399 -228.10148621]
[130.21733093 -213.23594666]
[128.32405090 -198.35591125]
[126.54158020 -183.46220398]
[124.75910950 -168.56848145]
[122.97664642 -153.67475891]
[121.19418335 -138.78105164]
[119.41171265 -123.88732910]
[117.62924957 -108.99361420]
[116.17983246 -94.06380463]
[115.06417847 -79.10535431]
[114.28285980 -64.12571716]
[113.83625031 -49.13236237]
[113.38964844 -34.13901520]
[116.33260345 -27.35957336]
[112.82312775 -18.92622375]
[112.15333557 -3.94118571]
[111.48355103 11.04385281]
[110.81376648 26.02889252]
[121.02327728 36.81320953]
[120.55748749 52.01971054]
[109.17668152 62.65526199]
[108.50689697 77.64030457]
[107.83711243 92.62534332]
[110.39294434 107.40599060]
[122.76752472 117.26399994]
[120.40756226 131.97045898]
[126.07035065 145.86048889]
[131.73313904 159.75050354]
[137.90890503 173.42018127]
[144.58909607 186.85055542]
[151.26928711 200.28092957]
[164.99435425 201.55113220]
[176.21055603 209.37516785]
[182.04939270 221.62168884]
[181.08230591 235.04588318]
[173.66856384 246.14897156]
[180.14807129 259.67730713]
[186.62756348 273.20565796]
[193.20759583 286.68539429]
[208.78529358 296.50460815]
[207.01480103 313.96405029]
[213.89421082 327.29348755]
[220.77362061 340.62289429]
[227.65304565 353.95233154]
[234.53245544 367.28176880]
[248.91447449 362.87753296]
[263.85180664 361.11233521]
[278.86425781 362.04284668]
[293.46926880 365.63919067]
[307.19732666 371.78576660]
[319.60711670 380.28497314]
[330.29974365 390.86361694]
[338.93148804 403.18161011]
[345.22485352 416.84298706]
[348.97753906 431.40859985]
[350.06890869 446.41021729]
[348.46389771 461.36560059]
[344.21408081 475.79400635]
[337.45608521 489.23162842]
[328.40716553 501.24645996]
[317.35815430 511.45230103]
[304.66427612 519.52111816]
[290.73358154 525.19342041]
[276.01388550 528.28698730]
[260.97833252 528.70233154]
[246.11030579 526.42608643]
[231.88772583 521.53137207]
[218.76777649 514.17565918]
[207.17222595 504.59530640]
[197.47383118 493.09832764]
[189.98432922 480.05429077]
[184.94448853 465.88247681]
[182.51634216 451.03848267]
[182.77790833 435.99951172]
[185.72079468 421.24893188]
[191.25041199 407.26095581]
[199.18898010 394.48526001]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 178]
[2 177]
[3 176]
[4 175]
[5 174]
[8 172]
[10 171]
[11 170]
[12 169]
[16 164]
[17 163]
[18 162]
[24 161]
[25 160]
[26 159]
[28 157]
[58 156]
[59 155]
[60 154]
[63 151]
[64 150]
[65 149]
[66 148]
[67 146]
[68 145]
[69 144]
[73 143]
[74 142]
[78 141]
[79 140]
[80 139]
[81 138]
[82 137]
[83 136]
[84 135]
[86 134]
[87 133]
[88 132]
[89 131]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
