%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGAGUGUUAGUACCGUUCGGUUGCGGUGAAUAGGUCACUUGGUGAUAGUGCUUUUUUUGAGAUGGAGAGAUAUGAUUAGAGGGAUGUUUAGAGGAAUUAAU\
) } def
/len { sequence length } bind def

/coor [
[140.44717407 535.00531006]
[142.97860718 520.19409180]
[147.59223938 505.89389038]
[154.19409180 492.39590454]
[162.64979553 479.97488403]
[172.78718567 468.88369751]
[184.39988708 459.34820557]
[197.25148010 451.56246948]
[191.38252258 437.75830078]
[185.51354980 423.95413208]
[179.64459229 410.14993286]
[173.77563477 396.34576416]
[167.90667725 382.54159546]
[162.03771973 368.73742676]
[154.09127808 381.45959473]
[139.20843506 383.33062744]
[128.36024475 372.97125244]
[129.54360962 358.01800537]
[141.88618469 349.49386597]
[156.28825378 353.68142700]
[151.46224976 339.47897339]
[146.63624573 325.27651978]
[141.81025696 311.07406616]
[136.98425293 296.87161255]
[132.50210571 311.18627930]
[121.53025055 321.41461182]
[106.93672943 324.88290405]
[92.53623962 320.68457031]
[82.09304810 309.91705322]
[78.33696747 295.39492798]
[82.24983215 280.91427612]
[92.80883026 270.26028442]
[107.25386047 266.21789551]
[121.80903625 269.84375000]
[132.66918945 280.18933105]
[130.00340271 265.42813110]
[127.33760071 250.66690063]
[124.67180634 235.90568542]
[121.45853424 221.25390625]
[117.70223236 206.73184204]
[113.94593048 192.20977783]
[110.18963623 177.68772888]
[106.60215759 174.53509521]
[104.95706940 169.09536743]
[106.54456329 162.67730713]
[103.22229767 148.04985046]
[99.90003967 133.42239380]
[85.42782593 130.07852173]
[73.83369446 120.79400635]
[67.40754700 107.40255737]
[67.41857147 92.54906464]
[73.86459351 79.16717529]
[85.47249603 69.89987183]
[82.15023804 55.27241135]
[78.82798004 40.64495087]
[69.93837738 52.72696304]
[55.13058853 55.12056732]
[42.88718414 46.45459747]
[40.22174072 31.69331551]
[48.66114807 19.29265404]
[63.37092972 16.35627556]
[75.92411804 24.56548691]
[73.92010498 9.69995880]
[71.91609192 -5.16556883]
[69.91207886 -20.03109741]
[58.88039780 -9.86733246]
[44.03338242 -12.00417042]
[36.31569290 -24.86641121]
[41.41652298 -38.97249222]
[55.57573318 -43.92393494]
[68.35478210 -36.07210541]
[67.46195984 -51.04550934]
[66.56914520 -66.01891327]
[57.45777893 -75.14830780]
[57.02240753 -87.63806915]
[64.95134735 -96.77362823]
[64.28156281 -111.75866699]
[52.38711166 -102.61962891]
[37.78993988 -106.07253265]
[31.25053787 -119.57202148]
[37.58951187 -133.16677856]
[52.13400650 -136.83525085]
[64.16158295 -127.87464142]
[64.60819244 -142.86799622]
[65.05479431 -157.86134338]
[52.94805908 -167.38673401]
[48.81985474 -182.04318237]
[54.05159378 -196.15321350]
[66.44039917 -204.37849426]
[66.88700867 -219.37185669]
[67.33361053 -234.36520386]
[67.78022003 -249.35855103]
[68.22682190 -264.35189819]
[68.67343140 -279.34524536]
[54.14787674 -283.37905884]
[41.01011276 -290.77249146]
[30.02394485 -301.09564209]
[21.82810020 -313.74838257]
[16.89907265 -327.99505615]
[15.52343082 -343.00741577]
[17.78115082 -357.91265869]
[23.54097176 -371.84420776]
[32.46802521 -383.99209595]
[44.04330444 -393.65005493]
[57.59384155 -400.25659180]
[72.33181763 -403.42764282]
[87.40039062 -402.97879028]
[101.92350006 -398.93615723]
[115.05677795 -391.53479004]
[126.03668976 -381.20495605]
[134.22485352 -368.54727173]
[139.14524841 -354.29760742]
[140.51179504 -339.28439331]
[138.24504089 -324.38052368]
[132.47676086 -310.45248413]
[123.54235077 -298.31002808]
[111.96121979 -288.65905762]
[98.40667725 -282.06072998]
[83.66677856 -278.89865112]
[83.22017670 -263.90530396]
[82.77356720 -248.91194153]
[82.32696533 -233.91859436]
[81.88035583 -218.92524719]
[81.43375397 -203.93190002]
[93.31101990 -194.98379517]
[97.69363403 -180.58737183]
[92.70038605 -166.20263672]
[80.04814911 -157.41473389]
[79.60153961 -142.42138672]
[79.15493774 -127.42803955]
[79.26660156 -112.42845154]
[79.93638611 -97.44341278]
[90.16404724 -83.18291473]
[81.54255676 -66.91172791]
[82.43537140 -51.93832397]
[83.32818604 -36.96492004]
[84.77760315 -22.03511047]
[86.78161621 -7.16958284]
[88.78562927 7.69594574]
[90.78964233 22.56147385]
[93.45543671 37.32269287]
[96.77770233 51.95014954]
[100.09996033 66.57761383]
[114.57217407 69.92147064]
[126.16630554 79.20599365]
[132.59245300 92.59744263]
[132.58143616 107.45093536]
[126.13540649 120.83282471]
[114.52750397 130.10012817]
[117.84976196 144.72758484]
[121.17201996 159.35505676]
[124.71169281 173.93142700]
[128.46798706 188.45349121]
[132.22428894 202.97554016]
[135.98059082 217.49760437]
[145.72633362 206.09494019]
[160.72207642 206.45236206]
[169.91351318 218.30636597]
[166.52507019 232.91862488]
[153.05456543 239.51754761]
[139.43302917 233.23989868]
[142.09881592 248.00111389]
[144.76461792 262.76232910]
[147.43041992 277.52355957]
[151.18670654 292.04559326]
[156.01271057 306.24804688]
[160.83871460 320.45053101]
[165.66470337 334.65298462]
[170.49070740 348.85543823]
[175.84188843 362.86843872]
[181.71084595 376.67263794]
[187.57981873 390.47680664]
[193.44877625 404.28097534]
[199.31773376 418.08514404]
[205.18669128 431.88934326]
[211.05564880 445.69351196]
[225.57923889 441.84045410]
[240.50335693 440.09359741]
[255.52416992 440.48855591]
[270.33587646 443.01724243]
[284.63690186 447.62820435]
[298.13613892 454.22756958]
[310.55874634 462.68096924]
[321.65179443 472.81631470]
[331.18945312 484.42721558]
[338.97756958 497.27737427]
[344.85754395 511.10510254]
[348.70971680 525.62896729]
[350.45562744 540.55316162]
[350.05975342 555.57397461]
[347.53015137 570.38549805]
[342.91830444 584.68627930]
[336.31811523 598.18505859]
[327.86395264 610.60717773]
[317.72793579 621.69958496]
[306.11639404 631.23651123]
[293.26577759 639.02380371]
[279.43768311 644.90295410]
[264.91360474 648.75421143]
[249.98927307 650.49920654]
[234.96850586 650.10241699]
[220.15711975 647.57189941]
[205.85664368 642.95916748]
[192.35823059 636.35815430]
[179.93669128 627.90319824]
[168.84489441 617.76647949]
[159.30867004 606.15435791]
[151.52214050 593.30328369]
[145.64387512 579.47479248]
[141.79350281 564.95050049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 176]
[9 175]
[10 174]
[11 173]
[12 172]
[13 171]
[14 170]
[20 169]
[21 168]
[22 167]
[23 166]
[24 165]
[35 164]
[36 163]
[37 162]
[38 161]
[39 155]
[40 154]
[41 153]
[42 152]
[45 151]
[46 150]
[47 149]
[53 143]
[54 142]
[55 141]
[62 140]
[63 139]
[64 138]
[65 137]
[71 136]
[72 135]
[73 134]
[76 132]
[77 131]
[83 130]
[84 129]
[85 128]
[89 124]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
