%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[78.96949768 607.86773682]
[64.73497009 612.63574219]
[50.10671234 616.00762939]
[35.22130966 617.95196533]
[20.21774292 618.45050049]
[5.23610449 617.49865723]
[-9.58372593 615.10528564]
[-24.10337639 611.29278564]
[-38.18727493 606.09667969]
[-51.70392609 599.56555176]
[-64.52712250 591.76037598]
[-76.53713226 582.75396729]
[-87.62181854 572.63049316]
[-97.67768860 561.48437500]
[-106.61084747 549.41979980]
[-114.33788300 536.54937744]
[-120.78665924 522.99322510]
[-125.89695740 508.87796021]
[-129.62106323 494.33538818]
[-131.92420959 479.50128174]
[-132.78488159 464.51412964]
[-132.19503784 449.51388550]
[-130.16021729 434.64056396]
[-126.69938660 420.03311157]
[-121.84487152 405.82785034]
[-115.64199829 392.15744019]
[-108.14868927 379.14953613]
[-99.43489838 366.92556763]
[-89.58199310 355.59967041]
[-78.68196106 345.27761841]
[-66.83658600 336.05575562]
[-54.15646362 328.02023315]
[-40.75998306 321.24600220]
[-26.77223206 315.79638672]
[-12.32381344 311.72225952]
[2.45037103 309.06161499]
[17.41237450 307.83932495]
[32.42249680 308.06680298]
[47.34058762 309.74191284]
[50.44469833 295.06661987]
[53.54880905 280.39132690]
[56.54358292 265.69332886]
[59.42885590 250.97341919]
[62.31412888 236.25354004]
[65.19940186 221.53364563]
[63.40120697 214.36508179]
[68.23876190 206.61680603]
[71.34287262 191.94149780]
[69.65160370 184.74696350]
[74.60398865 177.07156372]
[77.92624664 162.44410706]
[81.24851227 147.81663513]
[84.57077026 133.18917847]
[79.84452057 119.06431580]
[90.44617462 107.32057190]
[80.46098328 118.51413727]
[67.28245544 125.67839050]
[52.45880127 127.97167969]
[37.73147583 125.12458801]
[24.83063889 117.47158813]
[15.27186489 105.91175079]
[10.17810917 91.80310822]
[10.14778137 76.80313873]
[15.18444443 62.67402267]
[24.69639587 51.07562637]
[37.56618118 43.37052536]
[52.28187180 40.46390152]
[67.11468506 42.69722748]
[80.32206726 49.80812836]
[90.35243988 60.96122742]
[96.02744293 74.84626770]
[96.68017578 89.83361053]
[103.36036682 76.40322876]
[102.57856750 60.60135269]
[115.17427063 52.65166092]
[121.85446167 39.22128677]
[128.53465271 25.79090881]
[135.21484375 12.36053371]
[141.89505005 -1.06984246]
[148.57524109 -14.50021839]
[143.77880859 -29.32020378]
[150.74479675 -42.84535217]
[164.90293884 -47.32669067]
[171.58314514 -60.75706482]
[178.26333618 -74.18743896]
[184.94352722 -87.61782074]
[184.61814880 -92.82753754]
[186.16860962 -97.20353699]
[188.96324158 -100.17088318]
[192.23365784 -101.48870087]
[199.50689697 -114.60739136]
[206.78012085 -127.72608948]
[214.05334473 -140.84478760]
[221.32658386 -153.96347046]
[228.59980774 -167.08216858]
[230.02397156 -176.10488892]
[236.08024597 -180.34086609]
[243.54798889 -193.34982300]
[231.53919983 -202.37028503]
[220.72999573 -212.79815674]
[211.28421021 -224.47534180]
[203.34504700 -237.22482300]
[197.03285217 -250.85333252]
[192.44334412 -265.15423584]
[189.64607239 -279.91076660]
[188.68345642 -294.89920044]
[189.57009888 -309.89230347]
[192.29252625 -324.66281128]
[196.80949402 -338.98678589]
[203.05252075 -352.64712524]
[210.92695618 -365.43667603]
[220.31343079 -377.16159058]
[231.06965637 -387.64413452]
[243.03254700 -396.72534180]
[256.02078247 -404.26760864]
[269.83743286 -410.15652466]
[284.27307129 -414.30288696]
[299.10882568 -416.64379883]
[314.11981201 -417.14379883]
[329.07846069 -415.79525757]
[343.75799561 -412.61865234]
[357.93588257 -407.66217041]
[371.39718628 -401.00088501]
[383.93786621 -392.73580933]
[395.36776733 -382.99224854]
[405.51364136 -371.91790771]
[414.22167969 -359.68069458]
[421.35983276 -346.46606445]
[426.81991577 -332.47439575]
[430.51919556 -317.91778564]
[432.40151978 -303.01687622]
[432.43838501 -287.99761963]
[430.62924194 -273.08767700]
[427.00152588 -258.51306152]
[421.61016846 -244.49475098]
[414.53698730 -231.24523926]
[405.88916016 -218.96539307]
[395.79779053 -207.84136963]
[384.41586304 -198.04180908]
[371.91592407 -189.71527100]
[358.48748779 -182.98797607]
[344.33410645 -177.96191406]
[329.67031860 -174.71327209]
[314.71847534 -173.29132080]
[299.70523071 -173.71759033]
[284.85815430 -175.98562622]
[270.40234375 -180.06105042]
[256.55694580 -185.88208008]
[249.08918762 -172.87312317]
[241.71850586 -159.80894470]
[234.44528198 -146.69024658]
[227.17204285 -133.57154846]
[219.89881897 -120.45285797]
[212.62557983 -107.33415985]
[205.35235596 -94.21546936]
[198.37390137 -80.93762207]
[191.69371033 -67.50724792]
[185.01351929 -54.07686996]
[178.33332825 -40.64649582]
[183.30158997 -26.65178490]
[176.71824646 -12.93631172]
[162.00561523 -7.82002401]
[155.32542419 5.61035204]
[148.64523315 19.04072762]
[141.96502686 32.47110367]
[135.28483582 45.90148163]
[128.60464478 59.33185577]
[129.86425781 74.17310333]
[116.79074097 83.08342743]
[110.11054993 96.51380157]
[105.07363129 110.64282990]
[109.56225586 125.81394958]
[99.19822693 136.51144409]
[95.87596893 151.13890076]
[92.55371094 165.76635742]
[89.23145294 180.39381409]
[86.01818085 195.04560852]
[82.91407013 209.72091675]
[79.91929626 224.41891479]
[77.03401947 239.13880920]
[74.14875031 253.85870361]
[71.26347351 268.57858276]
[72.68375397 277.60192871]
[68.22411346 283.49542236]
[65.12000275 298.17074585]
[62.01589203 312.84603882]
[76.33455658 317.35504150]
[90.15119171 323.22497559]
[103.33678436 330.40103149]
[115.76822662 338.81619263]
[127.32944489 348.39187622]
[137.91249084 359.03869629]
[147.41854858 370.65722656]
[155.75886536 383.13900757]
[162.85556030 396.36746216]
[168.64237976 410.21911621]
[173.06529236 424.56463623]
[176.08299255 439.27001953]
[177.66732788 454.19802856]
[177.80348206 469.20925903]
[176.49018860 484.16354370]
[173.73970032 498.92126465]
[169.57772827 513.34466553]
[164.04310608 527.29895020]
[157.18751526 540.65399170]
[149.07496643 553.28497314]
[139.78121948 565.07403564]
[129.39303589 575.91107178]
[118.00740051 585.69488525]
[105.73064423 594.33416748]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 186]
[40 185]
[41 184]
[42 182]
[43 181]
[44 180]
[45 179]
[47 178]
[48 177]
[50 176]
[51 175]
[52 174]
[53 173]
[55 171]
[72 170]
[73 169]
[75 167]
[76 166]
[77 165]
[78 164]
[79 163]
[80 162]
[83 159]
[84 158]
[85 157]
[86 156]
[90 155]
[91 154]
[92 153]
[93 152]
[94 151]
[95 150]
[97 149]
[98 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
