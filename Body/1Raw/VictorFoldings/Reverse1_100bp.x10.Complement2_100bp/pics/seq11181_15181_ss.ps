%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[55.74689865 636.46112061]
[43.89513016 645.76873779]
[30.21608162 652.09173584]
[15.44744968 655.08911133]
[0.38568673 654.59924316]
[-14.15694523 650.64843750]
[-27.39617920 643.44989014]
[-38.61804199 633.39172363]
[-47.21735001 621.01641846]
[-52.73035812 606.99127197]
[-54.85974884 592.07275391]
[-53.49069595 577.06536865]
[-48.69702530 562.77838135]
[-40.73725128 549.98236084]
[-30.04064178 539.36730957]
[-17.18404579 531.50567627]
[-2.86080456 526.82153320]
[12.15664673 525.56738281]
[14.38176346 510.73333740]
[16.60688019 495.89929199]
[18.83199883 481.06524658]
[21.05711555 466.23120117]
[23.28223228 451.39715576]
[11.84154797 461.09823608]
[-3.10722351 462.33688354]
[-15.98856068 454.65109253]
[-21.99804306 440.90750122]
[-18.89428139 426.23214722]
[-7.83490372 416.09851074]
[7.05521679 414.28625488]
[20.22243309 421.47125244]
[26.75586319 434.97488403]
[30.72795868 420.51037598]
[34.70005417 406.04583740]
[38.67214966 391.58129883]
[34.58132172 377.25949097]
[45.69678879 366.00085449]
[49.66888428 351.53634644]
[52.77299500 336.86102295]
[54.99811172 322.02697754]
[57.22322845 307.19293213]
[59.44834518 292.35888672]
[61.67346191 277.52484131]
[51.12538147 288.18966675]
[36.68449402 292.24685669]
[22.12561417 288.63586426]
[11.25440121 278.30065918]
[6.91256142 263.94277954]
[10.23504162 249.31538391]
[20.35335541 238.24200439]
[34.62259674 233.61720276]
[49.31282043 236.64990234]
[60.58404160 246.54736328]
[65.48992157 260.72152710]
[69.89091492 246.38166809]
[74.29191589 232.04182434]
[78.69291687 217.70196533]
[83.09391022 203.36212158]
[85.86952209 188.62117004]
[86.98516846 173.66270447]
[88.10082245 158.70425415]
[89.21646881 143.74580383]
[90.33211517 128.78735352]
[91.44776917 113.82889557]
[83.77674103 98.91139984]
[93.37198639 85.15248871]
[94.26480103 70.17908478]
[95.15762329 55.20568085]
[83.30845642 42.33646774]
[84.41109467 25.21633148]
[97.29582214 14.40788651]
[97.96561432 -0.57715273]
[98.63539886 -15.56219196]
[85.97303009 -7.52076864]
[71.74211884 -12.26219749]
[66.43315887 -26.29127312]
[73.95971680 -39.26628113]
[88.77349854 -41.62253189]
[99.95368958 -31.62460518]
[101.73616028 -46.51832199]
[103.51862335 -61.41204071]
[105.30109406 -76.30575562]
[107.08355713 -91.19947815]
[101.04096985 -105.82129669]
[110.23583984 -117.53895569]
[104.19325256 -132.16078186]
[113.38812256 -143.87844849]
[107.34553528 -158.50025940]
[116.54041290 -170.21792603]
[118.32287598 -185.11164856]
[120.10533905 -200.00535583]
[105.67382050 -204.22212219]
[92.13324738 -210.75685120]
[79.85301971 -219.43128967]
[69.16815186 -230.00878906]
[60.37013245 -242.20077515]
[53.69897842 -255.67466736]
[49.33668518 -270.06286621]
[47.40225983 -284.97286987]
[47.94847488 -299.99789429]
[50.96043015 -314.72805786]
[56.35594940 -328.76153564]
[63.98785019 -341.71545410]
[73.64791870 -353.23641968]
[85.07263184 -363.01016235]
[97.95030212 -370.77001953]
[111.92963409 -376.30429077]
[126.62924194 -379.46203613]
[141.64811707 -380.15707397]
[156.57655334 -378.37045288]
[171.00726318 -374.15090942]
[184.54656982 -367.61355591]
[196.82513428 -358.93676758]
[207.50796509 -348.35720825]
[216.30363464 -336.16351318]
[222.97218323 -322.68835449]
[227.33171082 -308.29931641]
[229.26325989 -293.38894653]
[228.71414185 -278.36401367]
[225.69935608 -263.63442993]
[220.30113220 -249.60200500]
[212.66673279 -236.64955139]
[203.00444031 -225.13044739]
[191.57785034 -215.35890198]
[178.69868469 -207.60153198]
[164.71829224 -202.06994629]
[150.01806641 -198.91503906]
[134.99905396 -198.22290039]
[133.21659851 -183.32917786]
[131.43412781 -168.43545532]
[137.60420227 -154.87893677]
[128.28184509 -142.09597778]
[134.45191956 -128.53945923]
[125.12955475 -115.75649261]
[131.29963684 -102.19996643]
[121.97727203 -89.41700745]
[120.19480896 -74.52329254]
[118.41234589 -59.62957382]
[116.62987518 -44.73585892]
[114.84741211 -29.84214020]
[113.62043762 -14.89240646]
[112.95065308 0.09263241]
[112.28086090 15.07767105]
[122.22108459 23.27654457]
[125.67564392 35.89193726]
[121.16723633 48.37731552]
[110.13102722 56.09849548]
[109.23821259 71.07189941]
[108.34539032 86.04530334]
[115.53700256 95.20619965]
[114.75726318 106.82658386]
[106.40621948 114.94454193]
[105.29057312 129.90299988]
[104.17491913 144.86145020]
[103.05927277 159.81990051]
[101.94362640 174.77835083]
[100.82798004 189.73681641]
[109.19985199 177.29045105]
[121.46069336 168.64916992]
[135.99737549 164.94987488]
[150.89735413 166.67926025]
[164.20027161 173.60978699]
[174.15589905 184.82965088]
[179.45442200 198.86268616]
[179.39869690 213.86257935]
[173.99607849 227.85585022]
[163.95738220 239.00144958]
[150.60334778 245.83297729]
[135.69093323 247.45162964]
[121.18212891 243.64443970]
[108.98582458 234.91230774]
[100.70663452 222.40411377]
[97.43376160 207.76312256]
[93.03276062 222.10296631]
[88.63175964 236.44282532]
[84.23076630 250.78266907]
[79.82976532 265.12249756]
[76.50750732 279.74996948]
[74.28238678 294.58401489]
[72.05727386 309.41806030]
[69.83215332 324.25210571]
[67.60704041 339.08615112]
[79.04772186 329.38507080]
[93.99649811 328.14645386]
[106.87783051 335.83221436]
[112.88731384 349.57580566]
[109.78355408 364.25119019]
[98.72417450 374.38479614]
[83.83405304 376.19705200]
[70.66683960 369.01205444]
[64.13340759 355.50842285]
[60.16131210 369.97296143]
[63.96802902 385.32937622]
[53.13667679 395.55340576]
[49.16457748 410.01794434]
[45.19248199 424.48245239]
[41.22038651 438.94699097]
[38.11627579 453.62228394]
[35.89115906 468.45632935]
[33.66604233 483.29037476]
[31.44092560 498.12442017]
[29.21580696 512.95843506]
[26.99069023 527.79248047]
[40.97925568 533.39758301]
[53.29779053 542.07800293]
[63.28197479 553.36578369]
[70.39337158 566.65203857]
[74.24847412 581.22027588]
[74.63938141 596.28497314]
[71.54501343 611.03356934]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 203]
[19 202]
[20 201]
[21 200]
[22 199]
[23 198]
[32 197]
[33 196]
[34 195]
[35 194]
[37 192]
[38 191]
[39 182]
[40 181]
[41 180]
[42 179]
[43 178]
[54 177]
[55 176]
[56 175]
[57 174]
[58 173]
[59 157]
[60 156]
[61 155]
[62 154]
[63 153]
[64 152]
[66 149]
[67 148]
[68 147]
[71 143]
[72 142]
[73 141]
[79 140]
[80 139]
[81 138]
[82 137]
[83 136]
[85 134]
[87 132]
[89 130]
[90 129]
[91 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
