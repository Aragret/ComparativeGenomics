%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[29.84095764 519.13220215]
[25.72487450 533.58471680]
[19.54826546 547.28393555]
[11.44278336 559.93774414]
[1.58119905 571.27648926]
[-9.82628822 581.05847168]
[-22.53652763 589.07513428]
[-36.27859879 595.15576172]
[-50.75958633 599.17053223]
[-65.67082977 601.03405762]
[-80.69450378 600.70648193]
[-95.51036072 598.19488525]
[-109.80260468 593.55273438]
[-123.26660156 586.87902832]
[-135.61537170 578.31597900]
[-146.58567810 568.04608154]
[-155.94371033 556.28833008]
[-163.48999023 543.29327393]
[-169.06367493 529.33789062]
[-172.54594421 514.71972656]
[-173.86259460 499.75027466]
[-172.98554993 484.74865723]
[-169.93350220 470.03460693]
[-164.77151489 455.92178345]
[-157.60961914 442.71099854]
[-148.60046387 430.68383789]
[-137.93606567 420.09664917]
[-125.84376526 411.17507935]
[-112.58129120 404.10934448]
[-98.43134308 399.05001831]
[-83.69551849 396.10494995]
[-68.68791962 395.33691406]
[-53.72843552 396.76229858]
[-39.13592529 400.35067749]
[-33.47314072 386.46063232]
[-27.81035233 372.57061768]
[-22.14756584 358.68060303]
[-16.48477936 344.79055786]
[-10.82199287 330.90054321]
[-5.15920591 317.01049805]
[0.50358063 303.12048340]
[-5.49180460 289.53405762]
[0.05319771 275.36691284]
[14.34454060 269.17053223]
[20.00732803 255.28050232]
[18.98419189 251.90626526]
[19.54457283 247.86880493]
[21.98237801 243.91781616]
[26.24560165 240.90583801]
[32.52296066 227.28251648]
[38.80032349 213.65919495]
[45.07768250 200.03588867]
[43.37674713 185.23872375]
[56.17917252 175.94309998]
[62.45653152 162.31977844]
[68.73389435 148.69647217]
[75.01125336 135.07315063]
[74.95546722 127.68270874]
[81.48483276 121.29480743]
[87.96432495 107.76646423]
[87.08138275 93.81253815]
[98.50733185 85.75404358]
[104.98682404 72.22569275]
[111.46632385 58.69734955]
[100.91078949 47.84349823]
[94.71722412 34.05902100]
[93.61553955 19.01553535]
[97.71945190 4.53009510]
[106.51507568 -7.65425777]
[118.92519379 -16.07824707]
[133.44113159 -19.74112129]
[148.30618286 -18.21950912]
[154.78569031 -31.74785423]
[161.26518250 -45.27619934]
[167.74467468 -58.80454636]
[161.63070679 -75.19474792]
[169.11492920 -90.63175201]
[185.12660217 -95.77616119]
[191.40396118 -109.39947510]
[197.68132019 -123.02279663]
[203.95869446 -136.64611816]
[202.70675659 -152.41770935]
[215.06018066 -160.73889160]
[221.33753967 -174.36221313]
[227.41137695 -188.07748413]
[233.28033447 -201.88165283]
[239.14929199 -215.68583679]
[245.01824951 -229.49000549]
[250.88720703 -243.29418945]
[256.75616455 -257.09835815]
[262.62512207 -270.90252686]
[260.90417480 -286.62988281]
[273.00436401 -295.31518555]
[278.87332153 -309.11935425]
[284.74227905 -322.92352295]
[290.61126709 -336.72769165]
[296.48022461 -350.53189087]
[283.60504150 -358.27627563]
[271.93301392 -367.73727417]
[261.69134521 -378.73065186]
[253.07940674 -391.04244995]
[246.26481628 -404.43301392]
[241.38021851 -418.64172363]
[238.52070618 -433.39193726]
[237.74194336 -448.39660645]
[239.05906677 -463.36361694]
[242.44645691 -478.00161743]
[247.83818054 -492.02572632]
[255.12927246 -505.16293335]
[264.17779541 -517.15753174]
[274.80767822 -527.77600098]
[286.81192017 -536.81170654]
[299.95693970 -544.08874512]
[313.98681641 -549.46539307]
[328.62844849 -552.83715820]
[343.59686279 -554.13824463]
[358.60067749 -553.34338379]
[373.34783936 -550.46807861]
[387.55126953 -545.56829834]
[400.93453979 -538.73937988]
[413.23712158 -530.11425781]
[424.21954346 -519.86083984]
[433.66802979 -508.17868042]
[441.39862061 -495.29522705]
[447.26089478 -481.46121216]
[451.14074707 -466.94595337]
[452.96258545 -452.03195190]
[452.69100952 -437.00955200]
[450.33129883 -422.17117310]
[445.92935181 -407.80560303]
[439.57089233 -394.19253540]
[431.37966919 -381.59689331]
[421.51513672 -370.26388550]
[410.16931152 -360.41412354]
[397.56301880 -352.23928833]
[383.94165039 -345.89855957]
[369.57037354 -341.51535034]
[354.72894287 -339.17492676]
[339.70620728 -338.92291260]
[324.79458618 -340.76419067]
[310.28439331 -344.66293335]
[304.41543579 -330.85873413]
[298.54647827 -317.05456543]
[292.67752075 -303.25039673]
[286.80856323 -289.44622803]
[288.94931030 -274.70623779]
[276.42932129 -265.03356934]
[270.56036377 -251.22940063]
[264.69140625 -237.42523193]
[258.82241821 -223.62104797]
[252.95347595 -209.81686401]
[247.08450317 -196.01269531]
[241.21554565 -182.20851135]
[242.13957214 -177.52287292]
[240.12991333 -172.20701599]
[234.96086121 -168.08485413]
[228.68348694 -154.46153259]
[230.38442993 -139.66436768]
[217.58200073 -130.36874390]
[211.30464172 -116.74543762]
[205.02728271 -103.12211609]
[198.74992371 -89.49880219]
[204.85934448 -78.15400696]
[203.29573059 -65.16796875]
[194.40747070 -55.30849457]
[181.27302551 -52.32505035]
[174.79353333 -38.79670334]
[168.31402588 -25.26835823]
[161.83453369 -11.74001312]
[172.33770752 -1.11133635]
[178.58242798 12.49500370]
[179.79747009 27.44485855]
[175.81695557 41.93544006]
[167.10267639 54.21271515]
[154.69065857 62.78372192]
[140.06799316 66.59811401]
[124.99466705 65.17684937]
[118.51516724 78.70519257]
[112.03567505 92.23353577]
[112.91861725 106.18746185]
[101.49266815 114.24595642]
[95.01317596 127.77430725]
[88.63456726 141.35050964]
[82.35720825 154.97383118]
[76.07984924 168.59713745]
[69.80249023 182.22045898]
[71.05442047 197.99205017]
[58.70100021 206.31324768]
[52.42363739 219.93655396]
[46.14627838 233.55987549]
[39.86891556 247.18319702]
[33.89735413 260.94329834]
[28.23456764 274.83331299]
[34.11997604 289.25552368]
[28.17923737 303.26132202]
[14.39360714 308.78326416]
[8.73082066 322.67330933]
[3.06803441 336.56332397]
[-2.59475231 350.45333862]
[-8.25753880 364.34338379]
[-13.92032528 378.23339844]
[-19.58311272 392.12344360]
[-25.24589920 406.01345825]
[-12.30397892 413.65051270]
[-0.61199874 423.09060669]
[9.58082676 434.13253784]
[18.05723763 446.54092407]
[24.63655663 460.05133057]
[29.17854881 474.37570190]
[31.58639717 489.20877075]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 203]
[35 202]
[36 201]
[37 200]
[38 199]
[39 198]
[40 197]
[41 196]
[44 193]
[45 192]
[49 191]
[50 190]
[51 189]
[52 188]
[54 186]
[55 185]
[56 184]
[57 183]
[59 182]
[60 181]
[62 179]
[63 178]
[64 177]
[72 169]
[73 168]
[74 167]
[75 166]
[78 162]
[79 161]
[80 160]
[81 159]
[83 157]
[84 156]
[85 153]
[86 152]
[87 151]
[88 150]
[89 149]
[90 148]
[91 147]
[93 145]
[94 144]
[95 143]
[96 142]
[97 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
