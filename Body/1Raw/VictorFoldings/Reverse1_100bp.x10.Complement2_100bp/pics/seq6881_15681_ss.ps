%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[2.14635897 702.32946777]
[-10.06081009 693.54565430]
[-20.55708885 682.77532959]
[-29.02350616 670.34588623]
[-35.20277786 656.63507080]
[-38.90712357 642.05938721]
[-40.02397156 627.06195068]
[-38.51938248 612.09844971]
[-34.43907547 597.62353516]
[-27.90705299 584.07720947]
[-19.12181282 571.87103271]
[-8.35032654 561.37597656]
[4.08006954 552.91094971]
[17.79163170 546.73321533]
[32.36767960 543.03051758]
[31.25203133 528.07208252]
[30.13638306 513.11364746]
[19.48867035 499.16397095]
[27.62188721 482.64331055]
[26.28365326 467.70312500]
[24.94541931 452.76293945]
[23.60718536 437.82275391]
[22.26895142 422.88256836]
[20.93071747 407.94238281]
[19.59248352 393.00219727]
[12.91167736 406.43225098]
[1.39800632 416.04660034]
[-13.00827312 420.22500610]
[-27.87945175 418.26336670]
[-40.70947266 410.49221802]
[-49.33625412 398.22116089]
[-52.30603027 383.51809692]
[-49.11833954 368.86071777]
[-40.31036758 356.71905518]
[-27.36641312 349.13922119]
[-12.46775723 347.39852905]
[1.87491512 351.79031372]
[13.24461079 361.57449341]
[19.72573090 375.10385132]
[21.28625298 360.18524170]
[22.84677696 345.26663208]
[24.40729904 330.34802246]
[22.48296356 327.39349365]
[21.89408112 323.36010742]
[23.13212967 318.88568115]
[26.38515282 314.80340576]
[28.61026955 299.96936035]
[30.83538628 285.13531494]
[20.92622757 296.39624023]
[7.14641762 302.32220459]
[-7.84337616 301.76895142]
[-21.14886093 294.84335327]
[-30.20095444 282.88259888]
[-33.25183868 268.19613647]
[-29.71244049 253.61968994]
[-20.26615715 241.96774292]
[-6.73691893 235.49011230]
[8.26298904 235.43751526]
[21.83732033 241.82011414]
[31.36508369 253.40551758]
[35.00664902 267.95806885]
[39.83264542 253.75559998]
[44.65864182 239.55314636]
[49.48463821 225.35069275]
[42.69120789 212.14520264]
[47.38313293 197.67315674]
[61.28032303 190.63711548]
[66.10632324 176.43464661]
[70.93231964 162.23219299]
[75.75831604 148.02973938]
[80.58431244 133.82728577]
[85.41030884 119.62483215]
[90.23631287 105.42237854]
[94.95644379 91.18438721]
[99.57044983 76.91165161]
[104.18446350 62.63891983]
[108.58546448 48.29907227]
[112.77246857 33.89529037]
[116.95948029 19.49150848]
[115.77487946 15.31410694]
[115.96234894 11.37337399]
[117.27901459 8.07158470]
[119.37628174 5.69081306]
[121.84824371 4.36887074]
[126.88516235 -9.76015854]
[131.92207336 -23.88918877]
[136.21620178 -38.26140213]
[131.95394897 -53.49766922]
[142.47610474 -64.03966522]
[146.01577759 -78.61604309]
[149.55545044 -93.19242096]
[153.09512329 -107.76879120]
[147.06330872 -119.16967010]
[150.31158447 -131.23750305]
[160.57194519 -137.64465332]
[164.32824707 -152.16670227]
[168.08454895 -166.68876648]
[171.84085083 -181.21083069]
[158.24833679 -187.66374207]
[146.12283325 -196.57266235]
[135.90269470 -207.61553955]
[127.95733643 -220.39315796]
[122.57399750 -234.44364929]
[119.94728088 -249.25907898]
[120.17214203 -264.30386353]
[123.24044800 -279.03417969]
[129.04127502 -292.91751099]
[137.36494446 -305.45199585]
[147.91055298 -316.18450928]
[160.29687500 -324.72705078]
[174.07615662 -330.77087402]
[188.75030518 -334.09747314]
[203.78883362 -334.58657837]
[218.64810181 -332.22052002]
[232.79098511 -327.08483887]
[245.70622253 -319.36514282]
[256.92691040 -309.34057617]
[266.04745483 -297.37344360]
[272.73815918 -283.89636230]
[276.75714111 -269.39657593]
[277.95910645 -254.39817810]
[276.30059814 -239.44337463]
[271.84161377 -225.07278442]
[264.74334717 -211.80587769]
[255.26232910 -200.12225342]
[243.74134827 -190.44427490]
[230.59684753 -183.12178040]
[216.30403137 -178.41947937]
[201.37954712 -176.50735474]
[186.36291504 -177.45452881]
[182.60661316 -162.93246460]
[178.85031128 -148.41040039]
[175.09400940 -133.88835144]
[180.68751526 -117.25466156]
[167.67149353 -104.22911835]
[164.13182068 -89.65274811]
[160.59214783 -75.07637024]
[157.05247498 -60.49999619]
[161.56790161 -46.30632782]
[150.79257202 -34.72172928]
[163.55667114 -42.60068130]
[178.41668701 -40.55622482]
[188.57884216 -29.52305794]
[189.39710999 -14.54539394]
[180.49740601 -2.47082043]
[165.94856262 1.18033075]
[152.40209961 -5.26119804]
[146.05110168 -18.85227203]
[141.01419067 -4.72324276]
[135.97727966 9.40578651]
[131.36326599 23.67852020]
[127.17625427 38.08230209]
[122.98924255 52.48608398]
[124.46352386 57.02872086]
[123.09979248 62.54571915]
[118.45719910 67.25292969]
[113.84318542 81.52566528]
[109.22917938 95.79839325]
[109.94331360 103.82725525]
[104.43876648 110.24837494]
[99.61277008 124.45082855]
[94.78677368 138.65328979]
[89.96076965 152.85574341]
[85.13477325 167.05819702]
[80.30877686 181.26065063]
[75.48278046 195.46310425]
[82.21617889 209.50942993]
[77.11961365 223.84399414]
[63.68709564 230.17669678]
[58.86109924 244.37915039]
[54.03509903 258.58160400]
[49.20910263 272.78405762]
[45.66942978 287.36044312]
[43.44431305 302.19448853]
[41.21919632 317.02853394]
[39.32590485 331.90856934]
[37.76538086 346.82714844]
[36.20485687 361.74575806]
[34.64433289 376.66436768]
[34.53266907 391.66397095]
[35.87090302 406.60412598]
[37.20913696 421.54431152]
[38.54737091 436.48449707]
[39.88560486 451.42468262]
[41.22383881 466.36486816]
[42.56207275 481.30505371]
[51.94121933 490.15911865]
[52.74826431 502.63040161]
[45.09483719 511.99798584]
[46.21048355 526.95642090]
[47.32613373 541.91485596]
[62.29017639 543.41436768]
[76.76644897 547.48974609]
[90.31502533 554.01715088]
[102.52418518 562.79827881]
[113.02291107 573.56616211]
[121.49214935 585.99371338]
[127.67453003 599.70312500]
[131.38217163 614.27795410]
[132.50242615 629.27514648]
[131.00123596 644.23901367]
[126.92420959 658.71484375]
[120.39526367 672.26269531]
[111.61278534 684.47082520]
[100.84368134 694.96832275]
[88.41520691 703.43615723]
[74.70504761 709.61700439]
[60.12983704 713.32299805]
[45.13250732 714.44152832]
[30.16880226 712.93865967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 191]
[16 190]
[17 189]
[19 186]
[20 185]
[21 184]
[22 183]
[23 182]
[24 181]
[25 180]
[39 179]
[40 178]
[41 177]
[42 176]
[46 175]
[47 174]
[48 173]
[61 172]
[62 171]
[63 170]
[64 169]
[67 166]
[68 165]
[69 164]
[70 163]
[71 162]
[72 161]
[73 160]
[74 158]
[75 157]
[76 156]
[77 153]
[78 152]
[79 151]
[84 150]
[85 149]
[86 148]
[87 140]
[89 138]
[90 137]
[91 136]
[92 135]
[95 133]
[96 132]
[97 131]
[98 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
