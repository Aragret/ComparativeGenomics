%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[55.81811142 572.56939697]
[40.85308456 571.37500000]
[26.08135414 568.69647217]
[11.64972973 564.56042480]
[-2.29835749 559.00799561]
[-15.62427998 552.09436035]
[-28.19559669 543.88818359]
[-39.88736343 534.47113037]
[-50.58338165 523.93670654]
[-60.17734146 512.38964844]
[-68.57389832 499.94473267]
[-75.68959808 486.72561646]
[-81.45371246 472.86364746]
[-85.80896759 458.49667358]
[-88.71206665 443.76742554]
[-90.13416290 428.82232666]
[-90.06111908 413.80987549]
[-88.49365997 398.87930298]
[-85.44737244 384.17901611]
[-80.95252228 369.85510254]
[-75.05378723 356.04989624]
[-67.80979156 342.90063477]
[-59.29253769 330.53799438]
[-49.58666611 319.08483887]
[-38.78865051 308.65499878]
[-27.00580025 299.35214233]
[-14.35522556 291.26873779]
[-0.96265841 284.48507690]
[13.03879738 279.06866455]
[27.50998688 275.07324219]
[42.30708313 272.53857422]
[57.28302002 271.48983765]
[57.72962570 256.49645996]
[58.17623138 241.50312805]
[58.62283707 226.50976562]
[59.06944656 211.51641846]
[59.51605225 196.52307129]
[52.43669510 209.74739075]
[42.32869339 220.83018494]
[29.81015778 229.09373474]
[15.64659691 234.03271484]
[0.70412004 235.34512329]
[-14.10353470 232.95066833]
[-27.87087440 226.99581909]
[-39.75601959 217.84468079]
[-49.03218842 206.05685425]
[-55.13214493 192.35319519]
[-57.68286514 177.57165527]
[-56.52838135 162.61614990]
[-51.73928452 148.40119934]
[-43.60842896 135.79608154]
[-32.63302612 125.57157135]
[-19.48422050 118.35292053]
[-4.96606731 114.58155060]
[10.03364086 114.48808289]
[24.59766769 118.07822418]
[37.83541870 125.13243866]
[48.93739700 135.21936035]
[57.22471237 147.72218323]
[62.19059372 161.87632751]
[63.53137589 176.81631470]
[68.98673248 162.84352112]
[74.44209290 148.87072754]
[79.79327393 134.85769653]
[85.03999329 120.80522919]
[89.97158813 106.63909149]
[94.37258911 92.29924774]
[98.55960083 77.89546204]
[102.74661255 63.49168015]
[106.93362427 49.08789825]
[111.12062836 34.68411636]
[115.30764008 20.28033638]
[119.49465179 5.87655354]
[112.14076996 -7.85509443]
[116.59218597 -22.40293121]
[129.72853088 -29.32911301]
[133.91554260 -43.73289490]
[138.10255432 -58.13667679]
[142.28956604 -72.54045868]
[138.71189880 -87.95185089]
[149.69427490 -98.01349640]
[153.66636658 -112.47801971]
[157.42266846 -127.00007629]
[161.17897034 -141.52214050]
[164.93527222 -156.04418945]
[168.69157410 -170.56625366]
[172.44787598 -185.08831787]
[176.20417786 -199.61036682]
[179.96047974 -214.13243103]
[183.71678162 -228.65449524]
[169.66441345 -223.40750122]
[156.72274780 -230.99124146]
[154.43188477 -245.81527710]
[164.48059082 -256.95187378]
[179.46130371 -256.19155884]
[188.33050537 -244.09640503]
[193.15650940 -258.29885864]
[197.98249817 -272.50131226]
[184.73599243 -279.61325073]
[172.84082031 -288.80862427]
[162.62152100 -299.83657837]
[154.35685730 -312.39624023]
[148.27229309 -326.14498901]
[144.53384399 -340.70773315]
[143.24348450 -355.68722534]
[144.43641663 -370.67477417]
[148.08010864 -385.26153564]
[154.07513428 -399.04956055]
[162.25794983 -411.66268921]
[172.40533447 -422.75686646]
[184.24046326 -432.02938843]
[197.44044495 -439.22732544]
[211.64520264 -444.15426636]
[226.46719360 -446.67587280]
[241.50205994 -446.72329712]
[256.33966064 -444.29528809]
[270.57522583 -439.45803833]
[283.82037354 -432.34353638]
[295.71374512 -423.14587402]
[305.93093872 -412.11596680]
[314.19317627 -399.55471802]
[320.27508545 -385.80477905]
[324.01074219 -371.24130249]
[325.29821777 -356.26156616]
[324.10238647 -341.27426147]
[320.45590210 -326.68820190]
[314.45822144 -312.90133667]
[306.27297974 -300.28976440]
[296.12344360 -289.19757080]
[284.28652954 -279.92733765]
[271.08514404 -272.73193359]
[256.87945557 -267.80770874]
[242.05699158 -265.28897095]
[227.02209473 -265.24444580]
[212.18495178 -267.67532349]
[207.35896301 -253.47285461]
[202.53295898 -239.27040100]
[198.23884583 -224.89819336]
[194.48254395 -210.37612915]
[190.72624207 -195.85406494]
[186.96994019 -181.33201599]
[183.21363831 -166.80995178]
[179.45733643 -152.28788757]
[175.70103455 -137.76583862]
[171.94473267 -123.24377441]
[168.18843079 -108.72171783]
[169.79730225 -104.22499084]
[168.59844971 -98.66983032]
[164.09805298 -93.82648468]
[167.97520447 -79.44535065]
[156.69334412 -68.35344696]
[152.50633240 -53.94966507]
[148.31932068 -39.54588318]
[144.13230896 -25.14210129]
[151.50862122 -12.25312996]
[147.46759033 2.41399884]
[133.89843750 10.06356430]
[129.71142578 24.46734619]
[125.52441406 38.87112808]
[121.33740234 53.27490997]
[117.15039062 67.67869568]
[112.96337891 82.08247375]
[108.77636719 96.48625946]
[110.19638062 101.53576660]
[108.68615723 107.02143097]
[104.24432373 111.25310516]
[105.33892059 116.35691833]
[104.45474243 120.91449738]
[102.13122559 124.26357269]
[99.09246826 126.05194855]
[93.84574890 140.10441589]
[93.77577972 149.23858643]
[88.41488647 154.32608032]
[82.95953369 168.29887390]
[77.50417328 182.27166748]
[74.50939941 196.96968079]
[74.06279755 211.96302795]
[73.61618805 226.95637512]
[73.16958618 241.94972229]
[72.72297668 256.94308472]
[72.27637482 271.93643188]
[87.16333771 273.87469482]
[101.78333282 277.28561401]
[115.99105072 282.13528442]
[129.64529419 288.37548828]
[142.61035156 295.94424438]
[154.75735474 304.76632690]
[165.96560669 314.75399780]
[176.12368774 325.80804443]
[185.13064575 337.81860352]
[192.89695740 350.66629028]
[199.34544373 364.22338867]
[204.41203308 378.35522461]
[208.04632568 392.92129517]
[210.21224976 407.77685547]
[210.88824463 422.77423096]
[210.06759644 437.76440430]
[207.75846863 452.59835815]
[203.98382568 467.12869263]
[198.78114319 481.21099854]
[192.20217896 494.70529175]
[184.31227112 507.47744751]
[175.18986511 519.40051270]
[164.92562866 530.35607910]
[153.62155151 540.23516846]
[141.38999939 548.93963623]
[128.35253906 556.38299561]
[114.63873291 562.49114990]
[100.38488770 567.20355225]
[85.73266602 570.47326660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 181]
[33 180]
[34 179]
[35 178]
[36 177]
[37 176]
[61 175]
[62 174]
[63 173]
[64 171]
[65 170]
[66 166]
[67 163]
[68 162]
[69 161]
[70 160]
[71 159]
[72 158]
[73 157]
[76 154]
[77 153]
[78 152]
[79 151]
[81 149]
[82 146]
[83 145]
[84 144]
[85 143]
[86 142]
[87 141]
[88 140]
[89 139]
[90 138]
[96 137]
[97 136]
[98 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
