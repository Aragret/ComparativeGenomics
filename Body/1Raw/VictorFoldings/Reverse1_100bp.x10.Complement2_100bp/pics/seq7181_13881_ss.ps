%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[156.99829102 516.57012939]
[169.97148132 508.83233643]
[166.21517944 494.31027222]
[162.45887756 479.78823853]
[158.87139893 476.63558960]
[157.22630310 471.19586182]
[158.81379700 464.77780151]
[155.49154663 450.15036011]
[152.16928101 435.52288818]
[148.84703064 420.89541626]
[145.52476501 406.26797485]
[142.20249939 391.64050293]
[132.12158203 402.74795532]
[117.14313507 401.94421387]
[108.30870819 389.82180786]
[112.13071442 375.31689453]
[125.79171753 369.12197876]
[139.22030640 375.80239868]
[136.99519348 360.96835327]
[134.77008057 346.13430786]
[132.54495239 331.30026245]
[130.31983948 316.46621704]
[128.09472656 301.63217163]
[125.86960602 286.79815674]
[123.31377411 272.01748657]
[120.42850494 257.29760742]
[117.54322815 242.57771301]
[107.68242645 235.57121277]
[105.15818787 223.33143616]
[111.85790253 212.30978394]
[102.10250092 205.15725708]
[99.76077271 192.88125610]
[106.62384033 181.96058655]
[104.17811584 167.16131592]
[101.73238373 152.36204529]
[99.17655182 137.58139038]
[96.51075745 122.82016754]
[93.84496307 108.05895233]
[89.42723083 101.31683350]
[91.25107574 93.05822754]
[88.80535126 78.25895691]
[86.35961914 63.45969009]
[83.91389465 48.66041946]
[73.08655548 43.75069427]
[66.04571533 34.32055664]
[64.44781494 22.78190041]
[68.57522583 12.01713467]
[77.29455566 4.65917921]
[75.29053497 -10.20634937]
[73.28652191 -25.07187653]
[71.28250885 -39.93740463]
[69.27849579 -54.80293274]
[67.27448273 -69.66846466]
[65.04936981 -84.50250244]
[62.60363770 -99.30177307]
[60.15791321 -114.10104370]
[57.71218491 -128.90031433]
[55.26645660 -143.69958496]
[52.82072830 -158.49885559]
[50.37500381 -173.29812622]
[47.92927551 -188.09739685]
[37.91757202 -196.22935486]
[36.18519211 -208.60604858]
[43.12069321 -218.51692200]
[40.89557648 -233.35096741]
[35.93606186 -219.19458008]
[26.89479828 -207.22564697]
[14.63354301 -198.58494568]
[0.32096136 -194.09606934]
[-14.67876339 -194.18685913]
[-28.93595314 -198.84867859]
[-41.09170532 -207.63717651]
[-49.98740768 -219.71470642]
[-54.77518082 -233.93008423]
[-54.99868393 -248.92842102]
[-50.63661194 -263.28015137]
[-42.10473633 -275.61737061]
[-30.21625328 -284.76419067]
[-16.10430336 -289.84875488]
[-1.11394358 -290.38644409]
[13.32603836 -286.32604980]
[25.83931541 -278.05453491]
[35.23320389 -266.36032104]
[40.61257553 -252.35688782]
[34.56998444 -266.97869873]
[43.76485825 -278.69638062]
[45.54732513 -293.59008789]
[47.32979202 -308.48379517]
[49.11225510 -323.37753296]
[50.89472198 -338.27124023]
[52.67718887 -353.16494751]
[53.79283524 -368.12341309]
[54.23944092 -383.11676025]
[54.68604660 -398.11010742]
[41.17805099 -411.39349365]
[41.66070557 -430.01284790]
[55.36079407 -442.15463257]
[55.36079407 -457.15463257]
[55.36079407 -472.15463257]
[55.36079407 -487.15463257]
[42.01966858 -494.76449585]
[34.28469849 -508.03347778]
[34.23655319 -523.39227295]
[41.88818741 -536.70947266]
[55.18134689 -544.40283203]
[70.54023743 -544.40283203]
[83.83340454 -536.70947266]
[91.48503876 -523.39227295]
[91.43688965 -508.03347778]
[83.70191956 -494.76449585]
[70.36079407 -487.15463257]
[70.36079407 -472.15463257]
[70.36079407 -457.15463257]
[70.36079407 -442.15463257]
[79.98498535 -436.02755737]
[85.51358032 -425.91070557]
[85.47157288 -414.26202393]
[79.75373077 -403.97576904]
[69.67939758 -397.66351318]
[69.23279572 -382.67016602]
[68.78618622 -367.67681885]
[80.41812134 -377.14770508]
[95.35350037 -375.75689697]
[105.03666687 -364.30105591]
[103.92065430 -349.34262085]
[92.64477539 -339.45046997]
[77.66835785 -340.29129028]
[67.57090759 -351.38247681]
[65.78843689 -336.48876953]
[64.00597382 -321.59506226]
[62.22350693 -306.70132446]
[60.44104004 -291.80761719]
[58.65857697 -276.91390991]
[64.82865906 -263.35739136]
[55.50629044 -250.57441711]
[55.72961807 -235.57608032]
[57.95473480 -220.74203491]
[69.61048889 -207.62295532]
[62.72854614 -190.54313660]
[65.17427063 -175.74385071]
[67.62000275 -160.94458008]
[70.06572723 -146.14530945]
[72.51145172 -131.34603882]
[74.95718384 -116.54677582]
[77.40290833 -101.74750519]
[79.84864044 -86.94823456]
[83.14054108 -83.48811340]
[84.29376221 -77.92330933]
[82.14001465 -71.67247772]
[84.14402771 -56.80694580]
[86.14804077 -41.94141769]
[88.15205383 -27.07589149]
[90.15606689 -12.21036243]
[92.16007996 2.65516543]
[107.35950470 12.85776806]
[110.32539368 31.24571037]
[98.71316528 46.21469116]
[101.15888977 61.01396179]
[103.60462189 75.81323242]
[106.05034637 90.61250305]
[108.60617828 105.39315796]
[111.27197266 120.15437317]
[113.93777466 134.91558838]
[118.54248810 142.80447388]
[116.53165436 149.91632080]
[118.97738647 164.71559143]
[121.42311096 179.51486206]
[133.43429565 193.47239685]
[126.61911774 209.64399719]
[138.83676147 223.42117310]
[132.26312256 239.69242859]
[135.14839172 254.41232300]
[138.03366089 269.13220215]
[141.46572876 273.06515503]
[142.90234375 277.47985840]
[142.49414062 281.53552246]
[140.70365906 284.57302856]
[142.92877197 299.40707397]
[145.15388489 314.24111938]
[147.37899780 329.07516479]
[149.60412598 343.90921021]
[151.82923889 358.74325562]
[154.05435181 373.57730103]
[156.82997131 388.31823730]
[160.15222168 402.94570923]
[163.47448730 417.57318115]
[166.79673767 432.20062256]
[170.11900330 446.82809448]
[173.44126892 461.45553589]
[176.98094177 476.03192139]
[180.73724365 490.55398560]
[184.49353027 505.07604980]
[199.59152222 505.55288696]
[213.94317627 510.26528931]
[226.38505554 518.83129883]
[235.90855408 530.55645752]
[241.74165344 544.49029541]
[243.41149902 559.50323486]
[240.78269958 574.37823486]
[234.06837463 587.90948486]
[223.81282043 599.00006104]
[210.84741211 606.75085449]
[196.22319031 610.53356934]
[181.12568665 610.04156494]
[166.77879333 605.31475830]
[154.34552002 596.73626709]
[144.83380127 585.00152588]
[139.01469421 571.06182861]
[137.35995483 556.04724121]
[140.00369263 541.17486572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[4 190]
[7 189]
[8 188]
[9 187]
[10 186]
[11 185]
[12 184]
[18 183]
[19 182]
[20 181]
[21 180]
[22 179]
[23 178]
[24 177]
[25 173]
[26 172]
[27 171]
[30 169]
[33 167]
[34 166]
[35 165]
[36 163]
[37 162]
[38 161]
[40 160]
[41 159]
[42 158]
[43 157]
[48 154]
[49 153]
[50 152]
[51 151]
[52 150]
[53 149]
[54 146]
[55 145]
[56 144]
[57 143]
[58 142]
[59 141]
[60 140]
[61 139]
[64 137]
[65 136]
[84 135]
[86 133]
[87 132]
[88 131]
[89 130]
[90 129]
[91 128]
[92 121]
[93 120]
[94 119]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
