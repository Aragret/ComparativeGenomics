%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[169.55180359 521.61126709]
[170.52955627 506.33703613]
[178.50352478 493.27276611]
[191.64131165 485.42059326]
[190.74850464 470.44717407]
[189.85568237 455.47378540]
[188.96287537 440.50036621]
[188.07005310 425.52697754]
[187.17723083 410.55355835]
[186.17297363 395.58721924]
[183.17820740 380.88922119]
[178.35220337 366.68676758]
[173.52621460 352.48431396]
[168.70021057 338.28186035]
[163.87420654 324.07940674]
[159.04821777 309.87692261]
[154.22221375 295.67446899]
[149.39622498 281.47201538]
[144.57022095 267.26956177]
[142.11820984 265.91098022]
[140.05662537 263.49923706]
[138.78926086 260.17822266]
[138.66049194 256.23510742]
[139.90715027 252.07582092]
[135.93505859 237.61129761]
[131.96296692 223.14677429]
[127.99086761 208.68225098]
[124.01876831 194.21772766]
[120.04667664 179.75320435]
[109.21532440 169.52915955]
[113.02203369 154.17274475]
[108.19603729 139.97029114]
[102.53325653 126.08026123]
[96.87046814 112.19023132]
[90.89890289 98.43013000]
[84.62154388 84.80681610]
[78.34418488 71.18350220]
[72.06681824 57.56018448]
[65.78945923 43.93686676]
[64.00631714 58.83050156]
[56.38962173 71.75280762]
[44.22292709 80.52614594]
[29.55652809 83.67205811]
[14.86197376 80.66040039]
[2.61555505 71.99868774]
[-5.11899233 59.14657974]
[-7.03826046 44.26987076]
[-2.81881976 29.87555695]
[6.82828045 18.38932610]
[20.27733421 11.74681568]
[35.26194000 11.06740189]
[49.25692749 16.46557808]
[59.90480804 27.03304291]
[56.36513519 12.45666790]
[52.82546234 -2.11970711]
[49.28578949 -16.69608307]
[44.21968079 -24.29689407]
[45.80364609 -31.51581764]
[42.48138428 -46.14327621]
[39.15912628 -60.77073669]
[35.51103973 -75.32035828]
[31.53894234 -89.78488159]
[20.42347717 -101.04352570]
[24.51430511 -115.36534119]
[20.54220772 -129.82986450]
[10.96731663 -118.28337097]
[-4.03208399 -118.41748047]
[-13.39899349 -130.13331604]
[-10.22847366 -144.79441833]
[3.14228439 -151.59315491]
[16.85577965 -145.51901245]
[13.97050762 -160.23890686]
[11.08523464 -174.95878601]
[-1.74734783 -183.78843689]
[-4.46373415 -198.75759888]
[4.03306293 -210.93708801]
[1.14779043 -225.65698242]
[-1.73748207 -240.37687683]
[-4.62275457 -255.09677124]
[-7.50802755 -269.81665039]
[-22.53319931 -269.32635498]
[-37.44242859 -271.25277710]
[-51.84953308 -275.54595947]
[-65.38133240 -282.09475708]
[-77.68731689 -290.72952271]
[-88.44873810 -301.22656250]
[-97.38684082 -313.31399536]
[-104.27011871 -326.67877197]
[-108.92026520 -340.97463989]
[-111.21684265 -355.83135986]
[-111.10035706 -370.86407471]
[-108.57382965 -385.68341064]
[-103.70269775 -399.90551758]
[-96.61313629 -413.16198730]
[-87.48879242 -425.10949707]
[-76.56599426 -435.43850708]
[-64.12767792 -443.88153076]
[-50.49601746 -450.21981812]
[-36.02411270 -454.28924561]
[-21.08682060 -455.98437500]
[-6.07105160 -455.26129150]
[8.63425064 -452.13876343]
[22.64818382 -446.69763184]
[35.60774994 -439.07885742]
[47.17726898 -429.47976685]
[57.05706406 -418.14901733]
[64.99121857 -405.38009644]
[70.77422333 -391.50375366]
[74.25627899 -376.87942505]
[75.34720612 -361.88586426]
[74.01873016 -346.91152954]
[70.30526733 -332.34420776]
[64.30300903 -318.56127930]
[56.16742706 -305.91973877]
[46.10924911 -294.74703979]
[34.38901138 -285.33258057]
[21.31029320 -277.92019653]
[7.21186399 -272.70193481]
[10.09713650 -257.98202515]
[12.98240948 -243.26214600]
[15.86768150 -228.54225159]
[18.75295448 -213.82235718]
[31.21899414 -205.75183105]
[34.35476303 -190.86486816]
[25.80512619 -177.84407043]
[28.69039917 -163.12417603]
[31.57567215 -148.40428162]
[35.00673294 -133.80195618]
[38.97882843 -119.33743286]
[49.81018448 -109.11339569]
[46.00346756 -93.75698090]
[49.97556305 -79.29245758]
[52.84265518 -77.24011230]
[54.85811996 -73.69709778]
[55.33216095 -69.07880402]
[53.78658676 -64.09299469]
[57.10884476 -49.46553802]
[60.43110657 -34.83807755]
[63.86216736 -20.23575401]
[67.40184021 -5.65937948]
[70.94151306 8.91699600]
[74.48118591 23.49337196]
[79.41278076 37.65950775]
[85.69013977 51.28282166]
[91.96749878 64.90613556]
[98.24485779 78.52945709]
[104.52221680 92.15277100]
[107.91429901 93.98748016]
[110.48120117 97.30845642]
[111.57727051 101.71363831]
[110.76049042 106.52745056]
[116.42327881 120.41747284]
[122.08606720 134.30749512]
[126.96785736 120.12412262]
[139.18756104 111.42476654]
[154.18753052 111.45407104]
[166.37315369 120.20110321]
[171.19949341 134.40344238]
[166.86642456 148.76397705]
[154.99011230 157.92655945]
[140.00009155 158.47378540]
[127.48656464 150.20065308]
[138.60202026 161.45928955]
[134.51119995 175.78109741]
[138.48329163 190.24563599]
[142.45539856 204.71015930]
[146.42749023 219.17468262]
[150.39958191 233.63920593]
[154.37167358 248.10372925]
[158.77267456 262.44357300]
[163.59867859 276.64602661]
[168.42466736 290.84848022]
[173.25067139 305.05093384]
[178.07667542 319.25338745]
[182.90266418 333.45584106]
[187.72866821 347.65829468]
[192.55465698 361.86074829]
[197.38066101 376.06320190]
[199.87419128 361.27191162]
[206.97741699 348.06039429]
[217.94068909 337.82290649]
[231.60704041 331.63977051]
[246.53422546 330.16357422]
[261.14694214 333.55010986]
[273.90307617 341.44192505]
[283.45645142 353.00622559]
[288.79885864 367.02261353]
[289.36651611 382.01187134]
[285.09951782 396.39215088]
[276.44815063 408.64587402]
[264.32543945 417.47988892]
[250.01071167 421.96191406]
[235.01463318 421.61895752]
[220.91978455 416.48718262]
[209.21360779 407.10818481]
[201.13142395 394.47155762]
[204.89044189 402.79669189]
[202.15065002 409.66073608]
[203.04345703 424.63415527]
[203.93627930 439.60754395]
[204.82908630 454.58096313]
[205.72190857 469.55438232]
[206.61471558 484.52777100]
[220.59251404 490.76315308]
[230.06240845 502.78726196]
[232.84829712 517.83709717]
[228.30998230 532.45428467]
[217.49037170 543.27990723]
[202.87568665 547.82635498]
[187.82431030 545.04882812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 203]
[5 202]
[6 201]
[7 200]
[8 199]
[9 198]
[10 196]
[11 178]
[12 177]
[13 176]
[14 175]
[15 174]
[16 173]
[17 172]
[18 171]
[19 170]
[24 169]
[25 168]
[26 167]
[27 166]
[28 165]
[29 164]
[31 162]
[32 153]
[33 152]
[34 151]
[35 147]
[36 146]
[37 145]
[38 144]
[39 143]
[53 142]
[54 141]
[55 140]
[56 139]
[58 138]
[59 137]
[60 136]
[61 132]
[62 131]
[64 129]
[65 128]
[71 127]
[72 126]
[73 125]
[76 122]
[77 121]
[78 120]
[79 119]
[80 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
