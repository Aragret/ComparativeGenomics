%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[87.49931335 593.73840332]
[88.98268127 578.72302246]
[94.30267334 564.60351562]
[103.09658051 552.34265137]
[114.76481628 542.77630615]
[128.51181030 536.55676270]
[126.06608582 521.75750732]
[123.62035370 506.95822144]
[121.17462921 492.15896606]
[118.72890472 477.35968018]
[114.53686523 471.27291870]
[116.35864258 462.32202148]
[106.81896973 450.88330078]
[112.42353058 436.08807373]
[110.19841003 421.25402832]
[107.97329712 406.41998291]
[105.74817657 391.58593750]
[103.52306366 376.75189209]
[101.29794312 361.91784668]
[93.20706177 374.54867554]
[79.27960205 380.11874390]
[64.71016693 376.55062866]
[54.93280029 365.17507935]
[53.59421158 350.23492432]
[61.19366074 337.30245972]
[74.89674377 331.20120239]
[89.59255219 334.20672607]
[99.80040741 345.19915771]
[99.35379791 330.20581055]
[91.24098969 317.71453857]
[98.56398010 303.69012451]
[98.11737061 288.69677734]
[97.67076874 273.70339966]
[97.22415924 258.71005249]
[96.77755737 243.71672058]
[96.33094788 228.72335815]
[95.88433838 213.73001099]
[82.21737671 207.75679016]
[72.45903778 196.39526367]
[68.58547974 181.86402893]
[71.41675568 167.03149414]
[80.44390869 154.84963989]
[93.91949463 147.76655579]
[93.47288513 132.77320862]
[93.02628326 117.77986145]
[82.55238342 107.76768494]
[82.12097931 93.28458405]
[91.98036957 82.66674042]
[91.53376007 67.67339325]
[91.08715820 52.68004227]
[87.94303894 46.86402893]
[88.17349243 41.18565750]
[90.85717773 37.23509979]
[89.18563843 22.32852554]
[85.86338043 7.70106602]
[82.54112244 -6.92639399]
[79.21885681 -21.55385399]
[75.89659882 -36.18131638]
[65.29494476 -47.92505646]
[70.02119446 -62.04992294]
[66.69893646 -76.67738342]
[63.37667847 -91.30484772]
[60.05441666 -105.93230438]
[56.73215866 -120.55976105]
[41.68384552 -121.97599030]
[27.82881737 -127.96604156]
[16.51894760 -137.93174744]
[8.85352898 -150.88768005]
[5.57242775 -165.55863953]
[6.98469257 -180.50509644]
[12.93948841 -194.26446533]
[22.84209442 -205.49427795]
[35.71327591 -213.10305786]
[32.39101791 -227.73051453]
[29.06875801 -242.35798645]
[25.74649811 -256.98544312]
[22.42424011 -271.61291504]
[18.53136444 -257.12686157]
[10.40535355 -244.51860046]
[-1.17927492 -234.98989868]
[-15.11834717 -229.44892883]
[-30.08328056 -228.42384338]
[-44.64770889 -232.01234436]
[-57.42345047 -239.87240601]
[-67.19280243 -251.25483704]
[-73.02460480 -265.07476807]
[-74.36301422 -280.01492310]
[-71.08045959 -294.65133667]
[-63.48981094 -307.58895874]
[-52.31456375 -317.59466553]
[-38.61987305 -323.71475220]
[-23.71102715 -325.36590576]
[-9.00904179 -322.39071655]
[4.08478403 -315.07281494]
[14.32242870 -304.10968018]
[20.72842598 -290.54513550]
[21.39821243 -305.53018188]
[22.06799698 -320.51519775]
[22.73778152 -335.50024414]
[23.40756798 -350.48529053]
[9.76690388 -357.25671387]
[0.06472738 -368.99502563]
[-4.01800108 -383.66644287]
[-1.77392447 -398.72912598]
[6.40815735 -411.57333374]
[19.11064911 -419.97372437]
[34.13276672 -422.47488403]
[48.87184143 -418.64346313]
[60.77423477 -409.14331055]
[67.77778625 -395.62036133]
[68.66909027 -380.41757202]
[63.29372025 -366.16888428]
[52.58299255 -355.34295654]
[38.39260483 -349.81549072]
[37.72282028 -334.83047485]
[37.05303574 -319.84542847]
[36.38325119 -304.86038208]
[35.71346664 -289.87533569]
[37.05170059 -274.93515015]
[40.37395859 -260.30770874]
[43.69622040 -245.68023682]
[47.01847839 -231.05278015]
[50.34073639 -216.42532349]
[65.23586273 -215.12295532]
[79.01782227 -209.27250671]
[90.33197784 -199.43533325]
[98.06204987 -186.56532288]
[101.44022369 -171.91641235]
[100.12339020 -156.92037964]
[94.22798157 -143.04693604]
[84.31977844 -131.65966797]
[71.35961914 -123.88202667]
[74.68187714 -109.25456238]
[78.00413513 -94.62710571]
[81.32640076 -79.99964142]
[84.64865875 -65.37218475]
[95.01268005 -54.67469406]
[90.52406311 -39.50357437]
[93.84632111 -24.87611389]
[97.16857910 -10.24865341]
[100.49083710 4.37880659]
[103.81309509 19.00626755]
[108.16476440 4.65137243]
[117.35065460 -7.20693541]
[130.16220093 -15.00849247]
[144.91381836 -17.72687149]
[159.66470337 -15.00442028]
[172.47409058 -7.19932556]
[181.65670776 4.66151810]
[186.00440979 19.01761246]
[184.94519043 33.98016739]
[178.61840820 47.58060074]
[167.85644531 58.02954483]
[154.07525635 63.95225525]
[139.08795166 64.56950378]
[124.86640167 59.80007172]
[113.28168488 50.27147293]
[105.85717773 37.23509979]
[106.08050537 52.23343658]
[106.52711487 67.22679138]
[106.97371674 82.22013855]
[117.44761658 92.23231506]
[117.87902069 106.71541595]
[108.01963043 117.33325958]
[108.46623993 132.32659912]
[108.91284180 147.31996155]
[122.78612518 153.58839417]
[132.52235413 165.21134949]
[136.23146057 179.84906006]
[133.22967529 194.58508301]
[124.16489410 206.50729370]
[110.87769318 213.28340149]
[111.32429504 228.27676392]
[111.77090454 243.27011108]
[112.21750641 258.26345825]
[112.66411591 273.25680542]
[113.11072540 288.25015259]
[113.55732727 303.24349976]
[121.70207977 316.80718994]
[114.34714508 329.75918579]
[114.79375458 344.75253296]
[116.13198853 359.69271851]
[118.35710907 374.52676392]
[120.58222198 389.36080933]
[122.80734253 404.19485474]
[125.03245544 419.02890015]
[127.25757599 433.86294556]
[136.95640564 446.36267090]
[131.19268799 460.09689331]
[133.52816772 474.91397095]
[135.97390747 489.71322632]
[138.41963196 504.51251221]
[140.86535645 519.31176758]
[143.31108093 534.11102295]
[158.32818604 535.57702637]
[172.45382690 540.88067627]
[184.72489929 549.66033936]
[194.30474854 561.31750488]
[200.54019165 575.05731201]
[203.00610352 589.94293213]
[201.53433228 604.95941162]
[196.22523499 619.08300781]
[187.44079590 631.35070801]
[175.77995300 640.92608643]
[162.03776550 647.15618896]
[147.15119934 649.61633301]
[132.13522339 648.13879395]
[118.01368713 642.82421875]
[105.74939728 634.03509521]
[96.17855072 622.37054443]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 194]
[7 193]
[8 192]
[9 191]
[10 190]
[12 189]
[14 187]
[15 186]
[16 185]
[17 184]
[18 183]
[19 182]
[28 181]
[29 180]
[31 178]
[32 177]
[33 176]
[34 175]
[35 174]
[36 173]
[37 172]
[43 166]
[44 165]
[45 164]
[48 161]
[49 160]
[50 159]
[53 158]
[54 142]
[55 141]
[56 140]
[57 139]
[58 138]
[60 136]
[61 135]
[62 134]
[63 133]
[64 132]
[73 123]
[74 122]
[75 121]
[76 120]
[77 119]
[96 118]
[97 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
