%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[230.47521973 635.53851318]
[214.97363281 634.84564209]
[202.86083984 625.14721680]
[198.79449463 610.17242432]
[204.33816528 595.67938232]
[217.36019897 587.24102783]
[218.02998352 572.25598145]
[218.69976807 557.27093506]
[211.53849792 544.21087646]
[219.88429260 530.76995850]
[220.55407715 515.78491211]
[221.22386169 500.79986572]
[219.44139099 485.90615845]
[215.25437927 471.50238037]
[211.06736755 457.09860229]
[200.08499146 447.03695679]
[203.66265869 431.62554932]
[199.47564697 417.22177124]
[195.28863525 402.81799316]
[190.67462158 388.54525757]
[185.63771057 374.41622925]
[173.33781433 370.57669067]
[165.37632751 360.19897461]
[164.83766174 346.93548584]
[172.14231873 335.61926270]
[167.31631470 321.41680908]
[162.49032593 307.21435547]
[157.66432190 293.01190186]
[152.83833313 278.80944824]
[137.90829468 279.83093262]
[123.21131897 276.95065308]
[109.75041199 270.35910034]
[98.44580841 260.50018311]
[90.07203674 248.04144287]
[85.20489502 233.82876587]
[84.18185425 218.82907104]
[87.07862854 204.06440735]
[93.70365906 190.54238892]
[103.61073303 179.18742371]
[116.12903595 170.77746582]
[111.30303955 156.57501221]
[106.47703552 142.37255859]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[79.10958862 62.52687073]
[73.75839996 48.51384735]
[68.30304718 34.54104996]
[62.84768677 20.56825066]
[57.39233017 6.59545326]
[51.93697357 -7.37734461]
[46.48161697 -21.35014153]
[44.65103149 -6.46226263]
[38.14482498 7.05325747]
[27.64961433 17.77009392]
[14.27298641 24.55727196]
[-0.57339489 26.69852638]
[-15.32275391 23.96788406]
[-28.41855621 16.65351677]
[-38.47877121 5.52732706]
[-44.44171524 -8.23651218]
[-45.67811203 -23.18546867]
[-42.05747986 -37.74194717]
[-33.96191025 -50.36976242]
[-22.24574661 -59.73627472]
[-8.14542866 -64.85301208]
[6.85100698 -65.17999268]
[21.16094971 -60.68271255]
[33.27423859 -51.83577728]
[41.91260910 -39.57265472]
[40.13014221 -54.46636963]
[38.34767914 -69.36009216]
[36.56521225 -84.25380707]
[34.78274536 -99.14752197]
[30.65574455 -107.29649353]
[33.08631897 -114.27603912]
[31.52579498 -129.19464111]
[29.96527100 -144.11325073]
[16.91110420 -149.13833618]
[7.34124327 -159.24942017]
[3.08185863 -172.43409729]
[4.90993071 -186.10185242]
[12.41220093 -197.59292603]
[24.07684326 -204.69595337]
[22.73860931 -219.63613892]
[21.40037537 -234.57632446]
[20.06214142 -249.51651001]
[8.58763218 -239.85548401]
[-6.14916229 -242.65313721]
[-13.28482437 -255.84716797]
[-7.55921078 -269.71142578]
[6.80697012 -274.02566528]
[19.22266769 -265.61105347]
[18.99934006 -280.60940552]
[18.77601051 -295.60772705]
[18.55268288 -310.60607910]
[4.53316212 -316.55358887]
[-5.85048866 -327.69357300]
[-10.79923820 -342.09600830]
[-9.45568657 -357.26553345]
[-2.05261111 -370.57397461]
[10.12736034 -379.71554565]
[24.97397232 -383.10641479]
[39.91496277 -380.15908813]
[52.36171341 -371.38421631]
[60.15774918 -358.30209351]
[61.95235825 -343.17929077]
[57.43461609 -328.63592529]
[47.38724899 -317.19168091]
[33.55102158 -310.82940674]
[33.77434921 -295.83105469]
[33.99767685 -280.83273315]
[34.22100449 -265.83438110]
[35.00232697 -250.85475159]
[36.34056091 -235.91456604]
[37.67879486 -220.97438049]
[39.01702881 -206.03419495]
[53.83794022 -199.59579468]
[63.44490051 -186.48617554]
[65.13942719 -170.22746277]
[58.36483383 -155.24746704]
[44.88387680 -145.67376709]
[46.44440079 -130.75517273]
[48.00492096 -115.83656311]
[49.67646408 -100.92999268]
[51.45892715 -86.03627014]
[53.24139404 -71.14255524]
[55.02386093 -56.24883652]
[56.80632782 -41.35512161]
[60.45441437 -26.80550003]
[65.90977478 -12.83270168]
[71.36512756 1.14009631]
[76.82048798 15.11289406]
[82.27584076 29.08569145]
[87.73120117 43.05849075]
[93.09208679 48.14598846]
[93.16205597 57.28015137]
[97.05804443 60.04245377]
[99.26013947 65.28152466]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[120.67949677 137.54655457]
[125.50549316 151.74900818]
[130.33148193 165.95146179]
[145.38198853 164.99353027]
[160.15611267 167.96183777]
[173.64793396 174.64813232]
[184.94042969 184.59127808]
[193.26780701 197.10897827]
[198.06739807 211.34458923]
[199.01774597 226.32582092]
[196.06004333 241.03108215]
[189.40179443 254.45912170]
[179.50227356 265.69726562]
[167.04078674 273.98345947]
[171.86677551 288.18591309]
[176.69277954 302.38836670]
[181.51876831 316.59082031]
[186.34477234 330.79327393]
[202.17549133 338.23690796]
[207.61763000 354.50643921]
[199.76673889 369.37933350]
[204.80364990 383.50836182]
[208.20942688 386.20181274]
[210.36422729 389.50653076]
[211.22950745 392.95425415]
[210.92276001 396.11218262]
[209.69241333 398.63098145]
[213.87942505 413.03475952]
[218.06643677 427.43853760]
[229.34829712 438.53045654]
[225.47114563 452.91159058]
[229.65815735 467.31536865]
[233.84516907 481.71914673]
[236.55448914 466.96585083]
[242.94186401 453.39376831]
[252.58366394 441.90310669]
[264.84036255 433.25595093]
[278.89904785 428.02584839]
[293.82720947 426.55975342]
[308.63476562 428.95483398]
[322.33956909 435.05224609]
[334.03259277 444.44760132]
[342.93835449 456.51773071]
[348.46609497 470.46203613]
[350.24920654 485.35568237]
[348.16943359 500.21081543]
[342.36471558 514.04211426]
[333.22006226 525.93225098]
[321.34197998 535.09252930]
[307.51831055 540.91546631]
[292.66592407 543.01477051]
[277.76995850 541.25128174]
[263.81838989 535.74188232]
[251.73655701 526.85198975]
[242.32582092 515.17132568]
[236.20889282 501.46966553]
[235.53910828 516.45471191]
[234.86932373 531.43975830]
[241.98269653 545.57165527]
[233.68481445 557.94073486]
[233.01502991 572.92578125]
[232.34524536 587.91082764]
[244.56251526 597.47729492]
[248.79107666 612.40710449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 208]
[7 207]
[8 206]
[10 204]
[11 203]
[12 202]
[13 179]
[14 178]
[15 177]
[17 175]
[18 174]
[19 173]
[20 168]
[21 167]
[25 164]
[26 163]
[27 162]
[28 161]
[29 160]
[40 149]
[41 148]
[42 147]
[43 146]
[44 145]
[46 143]
[47 142]
[48 139]
[49 137]
[50 136]
[51 135]
[52 134]
[53 133]
[54 132]
[72 131]
[73 130]
[74 129]
[75 128]
[76 127]
[78 126]
[79 125]
[80 124]
[86 119]
[87 118]
[88 117]
[89 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
