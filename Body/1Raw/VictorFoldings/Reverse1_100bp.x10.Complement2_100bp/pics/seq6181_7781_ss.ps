%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[107.49166870 698.45855713]
[94.75454712 690.49957275]
[83.09207153 681.03564453]
[72.68103027 670.21020508]
[63.67926025 658.18737793]
[56.22321320 645.14947510]
[50.42593384 631.29412842]
[46.37529755 616.83135986]
[44.13272095 601.98040771]
[43.73218918 586.96643066]
[45.17978287 572.01708984]
[48.45355606 557.35888672]
[53.50387573 543.21417236]
[60.25418472 529.79724121]
[68.60214233 517.31158447]
[78.42120361 505.94650269]
[89.56251526 495.87423706]
[101.85717010 487.24746704]
[115.11878967 480.19699097]
[129.14633179 474.82971191]
[143.72712708 471.22695923]
[141.94467163 456.33325195]
[140.16220093 441.43951416]
[138.37973022 426.54580688]
[126.54847717 417.57046509]
[124.52864075 402.49148560]
[134.02304077 390.14263916]
[132.24057007 375.24893188]
[130.45809937 360.35522461]
[128.12261963 345.53814697]
[125.23734283 330.81823730]
[112.77130890 322.74771118]
[109.63553619 307.86074829]
[118.18517303 294.83996582]
[115.29990387 280.12005615]
[112.41462708 265.40017700]
[109.52935791 250.68028259]
[106.64408112 235.96038818]
[103.75881195 221.24049377]
[100.87353516 206.52059937]
[93.35472107 219.50010681]
[79.68987274 225.68653870]
[64.97564697 222.77250671]
[54.70008087 211.84489441]
[52.69571304 196.97941589]
[59.71012115 183.72052002]
[73.12710571 177.01347351]
[87.94245911 179.35980225]
[98.63096619 189.88545227]
[97.51531219 174.92700195]
[96.39966583 159.96855164]
[95.28401947 145.01008606]
[91.65173340 138.57360840]
[94.26480103 129.82090759]
[93.37198639 114.84751129]
[85.14273071 106.60610962]
[84.53608704 94.97541046]
[91.86329651 85.92259979]
[91.19351196 70.93756104]
[90.52372742 55.95252609]
[89.85394287 40.96748734]
[89.18415833 25.98244858]
[88.51436615 10.99740887]
[73.09308624 1.46107459]
[66.54080963 -15.27652550]
[71.30529785 -32.44482422]
[85.29693604 -43.22005463]
[84.18128967 -58.17850876]
[83.06564331 -73.13696289]
[72.34759521 -88.11043549]
[80.57834625 -103.60951996]
[79.12892914 -118.53932953]
[77.56840515 -133.45793152]
[76.00788116 -148.37654114]
[64.67848206 -138.54573059]
[49.90166855 -141.12367249]
[42.57035828 -154.21000671]
[48.08892059 -168.15795898]
[62.38927460 -172.68562317]
[74.92887878 -164.45680237]
[74.48226929 -179.45014954]
[74.03566742 -194.44349670]
[65.89091492 -208.00718689]
[73.24584198 -220.95918274]
[72.79924011 -235.95252991]
[60.77003860 -226.99160767]
[46.22589111 -230.66145325]
[39.88820267 -244.25680542]
[46.42887878 -257.75567627]
[61.02637863 -261.20721436]
[72.91921997 -252.06851196]
[73.58900452 -267.05355835]
[74.25878906 -282.03857422]
[74.92857361 -297.02362061]
[75.59835815 -312.00866699]
[61.16997910 -316.39874268]
[48.28709412 -324.23977661]
[37.75952530 -335.03890991]
[30.24904633 -348.11727905]
[26.22777367 -362.65277100]
[25.94848633 -377.73162842]
[29.42874336 -392.40606689]
[36.44976807 -405.75357056]
[46.57021713 -416.93515015]
[59.15390778 -425.24786377]
[73.40982056 -430.16921997]
[88.44181824 -431.38986206]
[103.30496979 -428.83300781]
[117.06497192 -422.65942383]
[128.85685730 -413.25717163]
[137.93937683 -401.21728516]
[143.74160767 -387.29663086]
[145.89878845 -372.37023926]
[144.27534485 -357.37640381]
[138.97332764 -343.25762939]
[130.32600403 -330.90148926]
[118.87696075 -321.08462524]
[105.34590149 -314.42422485]
[90.58339691 -311.33886719]
[89.91361237 -296.35385132]
[89.24382782 -281.36880493]
[88.57404327 -266.38375854]
[87.90425873 -251.39872742]
[87.79258728 -236.39913940]
[88.23919678 -221.40579224]
[96.35200500 -208.91453552]
[89.02901459 -194.89010620]
[89.47562408 -179.89675903]
[89.92222595 -164.90341187]
[90.92649078 -149.93705750]
[92.48700714 -135.01846313]
[94.04753113 -120.09985352]
[97.86984253 -113.77436829]
[95.51853180 -104.94775391]
[104.59690857 -96.95340729]
[105.83409119 -84.51744843]
[98.02409363 -74.25260925]
[99.13974762 -59.29415894]
[100.25539398 -44.33570480]
[111.41280365 -39.55161667]
[119.52540588 -30.42371368]
[123.00776672 -18.64346695]
[121.14018250 -6.42906427]
[114.21640015 3.89226151]
[103.49940491 10.32762432]
[104.16919708 25.31266212]
[104.83898163 40.29770279]
[105.50876617 55.28274155]
[106.17855072 70.26777649]
[106.84833527 85.25281525]
[116.23766327 99.15306091]
[108.34539032 113.95469666]
[109.23821259 128.92810059]
[110.24246979 143.89443970]
[111.35811615 158.85289001]
[112.47377014 173.81135559]
[113.58941650 188.76980591]
[115.59342957 203.63533020]
[118.47869873 218.35522461]
[121.36397552 233.07511902]
[124.24924469 247.79499817]
[127.13452148 262.51489258]
[130.01979065 277.23480225]
[132.90505981 291.95468140]
[145.73764038 300.78433228]
[148.45404053 315.75347900]
[139.95722961 327.93298340]
[142.84251404 342.65286255]
[153.24966431 331.85049438]
[168.19755554 333.09985352]
[176.66712952 345.47991943]
[172.41494751 359.86459351]
[158.57556152 365.65002441]
[145.35182190 358.57275391]
[147.13429260 373.46646118]
[148.91674805 388.36016846]
[161.05706787 398.11981201]
[162.65258789 413.24954224]
[153.27345276 424.76333618]
[155.05592346 439.65707397]
[156.83837891 454.55078125]
[158.62084961 469.44448853]
[173.64002991 469.50473022]
[188.53797913 471.41024780]
[203.08882141 475.13214111]
[217.07197571 480.61401367]
[230.27548218 487.77273560]
[242.49914551 496.49978638]
[253.55769348 506.66287231]
[263.28344727 518.10791016]
[271.52899170 530.66143799]
[278.16931152 544.13311768]
[283.10375977 558.31866455]
[286.25750732 573.00317383]
[287.58276367 587.96386719]
[287.05941772 602.97406006]
[284.69543457 617.80615234]
[280.52661133 632.23535156]
[274.61618042 646.04278564]
[267.05374146 659.01928711]
[257.95391846 670.96801758]
[247.45466614 681.70794678]
[235.71514893 691.07617188]
[222.91336060 698.93066406]
[209.24334717 705.15246582]
[194.91233826 709.64709473]
[180.13761902 712.34655762]
[165.14314270 713.20983887]
[150.15621948 712.22393799]
[135.40406799 709.40368652]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 182]
[22 181]
[23 180]
[24 179]
[27 176]
[28 175]
[29 174]
[30 168]
[31 167]
[34 164]
[35 163]
[36 162]
[37 161]
[38 160]
[39 159]
[40 158]
[49 157]
[50 156]
[51 155]
[52 154]
[54 153]
[55 152]
[58 150]
[59 149]
[60 148]
[61 147]
[62 146]
[63 145]
[67 139]
[68 138]
[69 137]
[71 134]
[72 132]
[73 131]
[74 130]
[80 129]
[81 128]
[82 127]
[84 125]
[85 124]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
