%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[61.39292908 703.69781494]
[46.47284698 705.38256836]
[31.45807266 705.44427490]
[16.52464867 703.88220215]
[1.84766030 700.71466064]
[-12.40081215 695.97882080]
[-26.05371094 689.73016357]
[-38.95096588 682.04199219]
[-50.94136047 673.00445557]
[-61.88431549 662.72344971]
[-71.65152740 651.31951904]
[-80.12848663 638.92645264]
[-87.21579742 625.68951416]
[-92.83037567 611.76385498]
[-96.90637970 597.31274414]
[-99.39602661 582.50573730]
[-100.27013397 567.51629639]
[-99.51844025 552.52020264]
[-97.14976501 537.69329834]
[-93.19187927 523.20947266]
[-87.69118500 509.23843384]
[-80.71218872 495.94403076]
[-72.33669281 483.48214722]
[-62.66291046 471.99890137]
[-51.80426025 461.62890625]
[-39.88805008 452.49374390]
[-27.05399704 444.70050049]
[-13.45256901 438.34060669]
[0.75676239 433.48858643]
[15.40740013 430.20132446]
[30.32757378 428.51739502]
[45.34235001 428.45648193]
[46.90287399 413.53790283]
[48.46339798 398.61929321]
[50.02391815 383.70068359]
[51.58444214 368.78207397]
[53.14496613 353.86346436]
[50.88684082 349.65515137]
[51.24837875 343.98361206]
[54.98050690 338.52627563]
[56.98452377 323.66073608]
[58.98853683 308.79519653]
[47.65269470 301.17840576]
[40.67100906 289.36380005]
[39.45505905 275.62805176]
[44.29892349 262.64669800]
[54.31072235 252.97303772]
[67.57624817 248.53585815]
[69.80136871 233.70181274]
[64.03765106 219.96759033]
[73.73648071 207.46786499]
[75.96159363 192.63381958]
[78.18671417 177.79977417]
[80.41182709 162.96572876]
[82.63694763 148.13168335]
[81.08111572 145.79983521]
[80.35520935 142.71119690]
[80.75212097 139.17880249]
[82.44609070 135.61579895]
[85.46148682 132.49147034]
[88.56559753 117.81616974]
[79.24964142 104.19336700]
[82.54460907 88.02206421]
[96.44799042 79.13028717]
[99.33325958 64.41039276]
[102.21853638 49.69050598]
[104.99414825 34.94954300]
[107.65994263 20.18832588]
[110.32573700 5.42710781]
[112.99153137 -9.33410931]
[115.65732574 -24.09532738]
[101.34993744 -30.15453529]
[88.75022888 -39.23452377]
[78.48510742 -50.87969589]
[71.06449890 -64.50690460]
[66.85596466 -79.43468475]
[66.06654358 -94.91728210]
[68.73252869 -110.18197632]
[74.71784210 -124.46757507]
[83.72097015 -137.06242371]
[95.29013062 -147.33984375]
[108.84597778 -154.78930664]
[123.71057892 -159.04177856]
[139.14132690 -159.88804626]
[141.58706665 -174.68731689]
[144.03279114 -189.48658752]
[146.47851562 -204.28585815]
[148.92424011 -219.08512878]
[150.92825317 -233.95065308]
[152.48878479 -248.86926270]
[154.04930115 -263.78787231]
[155.60983276 -278.70648193]
[157.17034912 -293.62506104]
[157.84013367 -308.61010742]
[157.61680603 -323.60845947]
[157.39347839 -338.60678101]
[157.17015076 -353.60513306]
[142.92709351 -358.84912109]
[131.54275513 -368.88711548]
[124.55680847 -382.36157227]
[122.91403198 -397.45016479]
[126.83659363 -412.11230469]
[135.79399109 -424.36502075]
[148.57482910 -432.55126953]
[163.45060730 -435.56390381]
[178.40946960 -432.99551392]
[191.42837524 -425.19345093]
[200.74662781 -413.21282959]
[205.10398865 -398.67401123]
[203.91117859 -383.54318237]
[197.32951355 -369.86669922]
[186.24909973 -359.49420166]
[172.16848755 -353.82846069]
[172.39181519 -338.83010864]
[172.61514282 -323.83178711]
[172.83847046 -308.83343506]
[182.54431152 -320.27008057]
[197.09107971 -323.92950439]
[211.05319214 -318.44686890]
[219.22312927 -305.86703491]
[218.55369568 -290.88198853]
[209.29458618 -279.08074951]
[194.89921570 -274.86492920]
[180.73669434 -279.80691528]
[172.08895874 -292.06454468]
[170.52842712 -277.14593506]
[168.96791077 -262.22735596]
[167.40737915 -247.30873108]
[165.84686279 -232.39013672]
[167.50526428 -230.13008118]
[168.36836243 -227.07693481]
[168.12957764 -223.53033447]
[166.59638977 -219.89524841]
[163.72351074 -216.63940430]
[161.27778625 -201.84013367]
[158.83206177 -187.04086304]
[156.38633728 -172.24159241]
[153.94059753 -157.44232178]
[167.43096924 -152.12536621]
[179.52174377 -144.10980225]
[189.68034363 -133.74569702]
[197.45866394 -121.48657990]
[202.51284790 -107.86968994]
[204.61846924 -93.49237061]
[203.68052673 -78.98590088]
[199.73768616 -64.98776245]
[192.96075439 -52.11361694]
[183.64520264 -40.93025208]
[172.19836426 -31.93060303]
[159.12155151 -25.51204491]
[144.98818970 -21.95883369]
[130.41854858 -21.42953110]
[127.75275421 -6.66831398]
[125.08695221 8.09290314]
[122.42115784 22.85412025]
[119.75536346 37.61533737]
[121.66008759 44.75633240]
[116.93843079 52.57577896]
[114.05315399 67.29566956]
[111.16788483 82.01556396]
[119.44012451 91.61887360]
[120.74361420 104.22659302]
[114.61109161 115.31919098]
[103.24089813 120.92028046]
[100.13678741 135.59558105]
[97.47099304 150.35679626]
[95.24587250 165.19084167]
[93.02075958 180.02488708]
[90.79563904 194.85893250]
[88.57051849 209.69297791]
[94.17508698 224.48823547]
[84.63541412 235.92692566]
[82.41029358 250.76097107]
[95.45031738 260.92706299]
[101.54926300 276.19464111]
[99.13043976 292.36145020]
[88.94768524 305.02902222]
[73.85406494 310.79922485]
[71.85005188 325.66476440]
[69.84603882 340.53027344]
[68.06356812 355.42398071]
[66.50304413 370.34259033]
[64.94252777 385.26119995]
[63.38199997 400.17980957]
[61.82147980 415.09841919]
[60.26095581 430.01702881]
[74.93811798 433.18374634]
[89.18684387 437.91885376]
[102.84008026 444.16674805]
[115.73774719 451.85424805]
[127.72863007 460.89117432]
[138.67213440 471.17156982]
[148.43995667 482.57495117]
[156.91758728 494.96755981]
[164.00561523 508.20416260]
[169.62094116 522.12951660]
[173.69772339 536.58032227]
[176.18815613 551.38726807]
[177.06306458 566.37664795]
[176.31217957 581.37280273]
[173.94430542 596.19976807]
[169.98719788 610.68383789]
[164.48725891 624.65521240]
[157.50897217 637.94995117]
[149.13415527 650.41229248]
[139.46099854 661.89605713]
[128.60290527 672.26666260]
[116.68717957 681.40246582]
[103.85354614 689.19635010]
[90.25246429 695.55700684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 186]
[33 185]
[34 184]
[35 183]
[36 182]
[37 181]
[40 180]
[41 179]
[42 178]
[48 173]
[49 172]
[51 170]
[52 169]
[53 168]
[54 167]
[55 166]
[60 165]
[61 164]
[64 160]
[65 159]
[66 158]
[67 156]
[68 155]
[69 154]
[70 153]
[71 152]
[84 138]
[85 137]
[86 136]
[87 135]
[88 134]
[89 129]
[90 128]
[91 127]
[92 126]
[93 125]
[94 116]
[95 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
