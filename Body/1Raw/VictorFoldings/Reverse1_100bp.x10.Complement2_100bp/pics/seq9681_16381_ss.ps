%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[127.44375610 363.11181641]
[138.35231018 352.72186279]
[151.29962158 345.02023315]
[146.68560791 330.74749756]
[142.07159424 316.47476196]
[138.30284119 313.54125977]
[136.33688354 308.20910645]
[137.53955078 301.70794678]
[133.35253906 287.30413818]
[129.16552734 272.90036011]
[124.97851562 258.49658203]
[122.58962250 257.02984619]
[120.63777161 254.52847290]
[119.51997375 251.15415955]
[119.56739044 247.20925903]
[120.99853516 243.10977173]
[110.63451385 232.41229248]
[115.12313843 217.24116516]
[111.80087280 202.61370850]
[108.30886078 199.35565186]
[106.82645416 193.86935425]
[108.60433197 187.50141907]
[105.71906281 172.78152466]
[102.83378601 158.06163025]
[99.94851685 143.34173584]
[97.06324005 128.62185669]
[94.35674286 126.36194611]
[92.61037445 122.67884064]
[92.48114014 118.03808594]
[94.39325714 113.18103790]
[85.83453369 102.12483215]
[90.77269745 89.04407501]
[88.54757690 74.21002960]
[78.84874725 61.71030045]
[84.61246490 47.97608185]
[82.38735199 33.14203644]
[80.16223145 18.30799294]
[77.93711853 3.47394943]
[75.71199799 -11.36009407]
[65.94840240 0.02727465]
[51.00359726 1.31289566]
[39.43864822 -8.23969364]
[37.87848282 -23.15833473]
[47.21683502 -34.89695358]
[62.10427094 -36.73113632]
[74.01211548 -27.61100006]
[73.11930084 -42.58440781]
[72.22648621 -57.55781174]
[69.12237549 -72.23311615]
[63.87565613 -86.28558350]
[58.62893677 -100.33805847]
[53.38221741 -114.39052582]
[41.30663300 -124.61260223]
[44.10341644 -139.24226379]
[38.85669708 -153.29473877]
[33.60998154 -167.34721375]
[28.36326218 -181.39968872]
[13.29617691 -184.03221130]
[1.64667273 -193.78852844]
[-3.52092791 -207.97171021]
[-0.91288358 -222.73835754]
[8.67176628 -234.14012146]
[3.42504835 -248.19258118]
[-1.82166970 -262.24505615]
[-7.06838799 -276.29751587]
[-12.31510639 -290.35000610]
[-17.56182480 -304.40246582]
[-22.80854225 -318.45495605]
[-28.05525970 -332.50741577]
[-42.67378998 -329.05752563]
[-57.60944366 -327.46704102]
[-72.62665558 -327.76110840]
[-87.48859406 -329.93508911]
[-101.96086121 -333.95462036]
[-115.81520081 -339.75640869]
[-128.83311462 -347.24887085]
[-140.80929565 -356.31387329]
[-151.55487061 -366.80844116]
[-160.90032959 -378.56707764]
[-168.69833374 -391.40429688]
[-174.82585144 -405.11767578]
[-179.18626404 -419.49090576]
[-181.71080017 -434.29733276]
[-182.35964966 -449.30340576]
[-181.12257385 -464.27246094]
[-178.01907349 -478.96844482]
[-173.09811401 -493.15954590]
[-166.43728638 -506.62194824]
[-158.14164734 -519.14337158]
[-148.34204102 -530.52630615]
[-137.19302368 -540.59118652]
[-124.87041473 -549.17938232]
[-111.56856537 -556.15533447]
[-97.49726868 -561.40905762]
[-82.87844849 -564.85772705]
[-67.94266510 -566.44696045]
[-52.92547226 -566.15161133]
[-38.06372070 -563.97644043]
[-23.59179497 -559.95562744]
[-9.73794079 -554.15270996]
[3.27934623 -546.65917969]
[15.25476456 -537.59313965]
[25.99944496 -527.09765625]
[35.34392929 -515.33825684]
[43.14084244 -502.50036621]
[49.26721191 -488.78646851]
[53.62641525 -474.41284180]
[56.14970779 -459.60623169]
[56.79729080 -444.60009766]
[55.55895233 -429.63113403]
[52.45421600 -414.93542480]
[47.53205872 -400.74475098]
[40.87009811 -387.28289795]
[32.57341385 -374.76217651]
[22.77285004 -363.38006592]
[11.62297726 -353.31610107]
[-0.70035481 -344.72897339]
[-14.00278950 -337.75411987]
[-8.75607109 -323.70166016]
[-3.50935292 -309.64920044]
[1.73736513 -295.59671021]
[6.98408318 -281.54425049]
[12.23080158 -267.49179077]
[17.47751999 -253.43930054]
[22.72423744 -239.38684082]
[37.43597794 -237.05653381]
[49.08349991 -227.61242676]
[54.47563171 -213.51309204]
[52.07071304 -198.50930786]
[42.41573334 -186.64640808]
[47.66245270 -172.59393311]
[52.90916824 -158.54145813]
[58.15588760 -144.48898315]
[69.85619354 -135.27204895]
[67.43469238 -119.63724518]
[72.68140411 -105.58477783]
[77.92812347 -91.53230286]
[83.17484283 -77.47983551]
[84.90387726 -92.37984467]
[90.70761871 -106.21157074]
[100.12834930 -117.88417816]
[112.42311859 -126.47711945]
[126.62230682 -131.31271362]
[141.60610962 -132.00962830]
[156.19284058 -128.51286316]
[169.23213196 -121.09821320]
[179.69563293 -110.35042572]
[186.75817871 -97.11711884]
[189.86276245 -82.44191742]
[188.76455688 -67.48217010]
[183.55017090 -53.41767120]
[174.63082886 -41.35760498]
[162.70993042 -32.25307465]
[148.72764587 -26.82210159]
[133.78663635 -25.49299812]
[119.06524658 -28.37058067]
[105.72444153 -35.22791290]
[94.81634521 -45.52419662]
[87.19989014 -58.45062637]
[88.09270477 -43.47722244]
[88.98551941 -28.50381660]
[90.54604340 -13.58521175]
[92.77116394 1.24883235]
[94.99627686 16.08287621]
[97.22139740 30.91691971]
[99.44651031 45.75096512]
[108.98619080 57.18966293]
[103.38162231 71.98491669]
[105.60674286 86.81896210]
[114.16546631 97.87516785]
[109.22730255 110.95592499]
[111.78313446 125.73657990]
[114.66841125 140.45646667]
[117.55368042 155.17636108]
[120.43894958 169.89625549]
[123.32422638 184.61614990]
[126.42833710 199.29144287]
[129.75059509 213.91889954]
[140.35224915 225.66264343]
[135.62599182 239.78752136]
[139.38229370 254.30957031]
[143.56930542 268.71334839]
[147.75631714 283.11712646]
[151.94332886 297.52093506]
[156.34432983 311.86077881]
[160.95834351 326.13351440]
[165.57235718 340.40621948]
[180.57788086 339.07141113]
[195.50415039 341.10964966]
[209.60244751 346.41867065]
[222.16561890 354.73217773]
[232.56350708 365.63317871]
[240.27455139 378.57485962]
[244.91195679 392.90811157]
[246.24313354 407.91397095]
[244.20129395 422.83975220]
[238.88887024 436.93676758]
[230.57231140 449.49792480]
[219.66879272 459.89315796]
[206.72521973 467.60107422]
[192.39085388 472.23501587]
[177.38467407 473.56253052]
[162.45939636 471.51708984]
[148.36366272 466.20123291]
[135.80451965 457.88165283]
[125.41192627 446.97561646]
[117.70716095 434.03018188]
[113.07669067 419.69467163]
[111.75279236 404.68817139]
[113.80186462 389.76339722]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 187]
[4 186]
[5 185]
[8 184]
[9 183]
[10 182]
[11 181]
[16 180]
[18 178]
[19 177]
[22 176]
[23 175]
[24 174]
[25 173]
[26 172]
[30 171]
[32 169]
[33 168]
[35 166]
[36 165]
[37 164]
[38 163]
[39 162]
[46 161]
[47 160]
[48 159]
[49 138]
[50 137]
[51 136]
[52 135]
[54 133]
[55 132]
[56 131]
[57 130]
[62 125]
[63 124]
[64 123]
[65 122]
[66 121]
[67 120]
[68 119]
[69 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
