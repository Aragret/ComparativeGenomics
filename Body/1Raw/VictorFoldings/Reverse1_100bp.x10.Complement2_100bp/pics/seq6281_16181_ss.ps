%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[70.08671570 596.79943848]
[60.52618408 608.37786865]
[49.74993896 618.83422852]
[37.88879395 628.04162598]
[25.08672905 635.88830566]
[11.49915314 642.27899170]
[-2.70899391 647.13616943]
[-17.36523819 650.40075684]
[-32.29166794 652.03320312]
[-47.30708694 652.01373291]
[-62.22922134 650.34246826]
[-76.87693787 647.03979492]
[-91.07241058 642.14575195]
[-104.64334106 635.71978760]
[-117.42497253 627.83984375]
[-129.26216125 618.60168457]
[-140.01119995 608.11730957]
[-149.54161072 596.51416016]
[-157.73771667 583.93292236]
[-164.50000000 570.52636719]
[-169.74639893 556.45733643]
[-173.41320801 541.89648438]
[-175.45593262 527.02069092]
[-175.84974670 512.01037598]
[-174.58990479 497.04791260]
[-171.69166565 482.31484985]
[-167.19024658 467.99002075]
[-161.14025879 454.24734497]
[-153.61517334 441.25366211]
[-144.70631409 429.16665649]
[-134.52183533 418.13311768]
[-123.18536377 408.28689575]
[-110.83451843 399.74758911]
[-97.61922455 392.61883545]
[-83.69991302 386.98715210]
[-69.24553680 382.92092896]
[-54.43156433 380.46951294]
[-39.43782425 379.66265869]
[-24.44633102 380.51016235]
[-9.63906193 383.00173950]
[4.80423450 387.10714722]
[10.46702099 373.21710205]
[16.12980843 359.32708740]
[13.76984215 344.62063599]
[26.14442444 334.76263428]
[31.80721092 320.87258911]
[37.46999741 306.98257446]
[22.84260368 310.30511475]
[11.03015041 301.06033325]
[10.74034023 286.06314087]
[22.18680954 276.36889648]
[36.93164825 279.12384033]
[44.10541916 292.29550171]
[50.78561401 278.86511230]
[49.52599716 264.02386475]
[62.59951019 255.11355591]
[69.27970886 241.68316650]
[75.95989990 228.25279236]
[82.64009857 214.82241821]
[86.50440216 200.32873535]
[79.53836060 187.16348267]
[88.08334351 173.84831238]
[88.97615814 158.87490845]
[89.86897278 143.90150452]
[90.76178741 128.92810059]
[91.65460968 113.95469666]
[84.46299744 104.79380035]
[85.24273682 93.17341614]
[93.59378052 85.05545807]
[94.70942688 70.09700012]
[95.26763916 55.10739136]
[95.26763916 40.10739136]
[95.26763916 25.10739326]
[87.53034210 11.30722046]
[95.26763916 -1.42005181]
[95.26763916 -16.42005157]
[87.53034210 -30.22022438]
[95.26763916 -42.94749451]
[95.26763916 -57.94749451]
[95.26763916 -72.94749451]
[95.26763916 -87.94749451]
[92.13822937 -96.52913666]
[95.38096619 -103.17041016]
[95.60429382 -118.16874695]
[95.82762146 -133.16708374]
[95.49264526 -148.16334534]
[94.59983063 -163.13674927]
[93.70701599 -178.11015320]
[92.81420135 -193.08355713]
[91.92138672 -208.05696106]
[91.02857208 -223.03036499]
[90.13575745 -238.00378418]
[75.35265350 -241.02409363]
[61.85542297 -247.76850891]
[50.56432724 -257.77719116]
[42.24921799 -270.36770630]
[37.47702408 -284.68164062]
[36.57312393 -299.74304199]
[39.59915161 -314.52496338]
[46.34878159 -328.01959229]
[56.36182022 -339.30682373]
[68.95555115 -347.61706543]
[83.27132416 -352.38372803]
[98.33306122 -353.28182983]
[113.11382294 -350.25009155]
[126.60584259 -343.49523926]
[137.88920593 -333.47784424]
[146.19459534 -320.88092041]
[150.95573425 -306.56329346]
[151.84799194 -291.50122070]
[148.81056213 -276.72161865]
[142.05050659 -263.23220825]
[132.02876282 -251.95272827]
[119.42860413 -243.65220642]
[105.10916138 -238.89659119]
[106.00197601 -223.92318726]
[106.89479065 -208.94978333]
[107.78760529 -193.97637939]
[108.68041992 -179.00297546]
[109.57324219 -164.02955627]
[110.46605682 -149.05615234]
[122.22312164 -158.37127686]
[136.87008667 -155.13607788]
[143.60975647 -141.73545837]
[137.47387695 -128.04782104]
[122.98561859 -124.16320801]
[110.82596588 -132.94375610]
[110.60263824 -117.94541931]
[110.37931061 -102.94708252]
[110.26763916 -87.94749451]
[110.26763916 -72.94749451]
[110.26763916 -57.94749451]
[110.26763916 -42.94749451]
[118.00494385 -30.22022438]
[110.26763916 -16.42005157]
[110.26763916 -1.42005181]
[118.00494385 11.30722046]
[110.26763916 25.10739326]
[110.26763916 40.10739136]
[110.26763916 55.10739136]
[122.55831146 46.50858688]
[136.98674011 50.60984039]
[142.91683960 64.38787079]
[135.97714233 77.68601227]
[121.28335571 80.70138550]
[109.66788483 71.21265411]
[108.55223083 86.17110443]
[116.22325897 101.08860016]
[106.62801361 114.84751129]
[105.73519897 129.82090759]
[104.84237671 144.79432678]
[103.94956207 159.76773071]
[103.05674744 174.74113464]
[109.95893097 188.97737122]
[101.47780609 201.22154236]
[108.89449310 188.18341064]
[118.90753937 177.01475525]
[131.06141663 168.22366333]
[144.80320740 162.21008301]
[159.50775146 159.24757385]
[174.50608826 159.47093201]
[189.11589050 162.86997986]
[202.67251587 169.29010010]
[214.55923462 178.43919373]
[224.23526001 189.90106201]
[231.26042175 203.15426636]
[235.31510925 217.59585571]
[236.21484375 232.56884766]
[233.91873169 247.39205933]
[228.53120422 261.39114380]
[220.29736328 273.92926025]
[209.59179688 284.43594360]
[196.90153503 292.43328857]
[182.80389404 297.55740356]
[167.94023132 299.57519531]
[152.98674011 298.39489746]
[138.62370300 294.07015991]
[125.50454712 286.79776001]
[114.22610474 276.90853882]
[105.30147552 264.85238647]
[99.13665771 251.17778015]
[96.01211548 236.50680542]
[96.07047272 221.50260925]
[89.39027405 234.93299866]
[82.71008301 248.36337280]
[76.02988434 261.79373169]
[76.81169128 277.59561157]
[64.21598816 285.54531860]
[57.53579330 298.97567749]
[51.36002350 312.64535522]
[45.69723892 326.53540039]
[40.03445053 340.42541504]
[41.98937607 356.12536621]
[30.01983452 364.98986816]
[24.35704803 378.87991333]
[18.69426155 392.76992798]
[31.89098740 399.93301392]
[44.21960068 408.50436401]
[55.53044891 418.38000488]
[65.68622589 429.44000244]
[74.56365204 441.55007935]
[82.05496216 454.56329346]
[88.06921387 468.32162476]
[92.53340912 482.65811157]
[95.39334869 497.39865112]
[96.61431885 512.36437988]
[96.18149567 527.37353516]
[94.10013580 542.24401855]
[90.39550781 556.79528809]
[85.11257935 570.85064697]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 196]
[42 195]
[43 194]
[45 192]
[46 191]
[47 190]
[53 189]
[54 188]
[56 186]
[57 185]
[58 184]
[59 183]
[60 155]
[62 153]
[63 152]
[64 151]
[65 150]
[66 149]
[69 147]
[70 146]
[71 140]
[72 139]
[73 138]
[75 136]
[76 135]
[78 133]
[79 132]
[80 131]
[81 130]
[83 129]
[84 128]
[85 127]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
