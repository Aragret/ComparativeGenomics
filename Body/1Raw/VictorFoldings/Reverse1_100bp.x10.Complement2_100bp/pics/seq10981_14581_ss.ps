%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[52.23974609 631.06414795]
[40.35891724 640.24029541]
[27.64791679 648.22692871]
[14.22542953 654.94946289]
[0.21677898 660.34509277]
[-14.24723530 664.36352539]
[-29.03156471 666.96722412]
[-43.99816895 668.13183594]
[-59.00730133 667.84649658]
[-73.91883087 666.11389160]
[-88.59351349 662.95019531]
[-102.89434814 658.38494873]
[-116.68780518 652.46075439]
[-129.84509277 645.23291016]
[-142.24336243 636.76898193]
[-153.76684570 627.14788818]
[-164.30796814 616.45959473]
[-173.76828003 604.80377197]
[-182.05947876 592.28930664]
[-189.10412598 579.03302002]
[-194.83645630 565.15875244]
[-199.20295715 550.79595947]
[-202.16284180 536.07885742]
[-203.68847656 521.14471436]
[-203.76562500 506.13305664]
[-202.39356995 491.18405151]
[-199.58509827 476.43725586]
[-195.36647034 462.03036499]
[-189.77703857 448.09790039]
[-182.86900330 434.76992798]
[-174.70687866 422.17089844]
[-165.36686707 410.41848755]
[-154.93617249 399.62237549]
[-143.51217651 389.88336182]
[-131.20155334 381.29244995]
[-118.11925507 373.92977905]
[-104.38741302 367.86410522]
[-90.13426208 363.15209961]
[-75.49286652 359.83773804]
[-60.59993362 357.95196533]
[-45.59452438 357.51239014]
[-30.61674309 358.52310181]
[-15.80643368 360.97467041]
[-1.30188036 364.84423828]
[3.94483781 350.79174805]
[9.19155598 336.73928833]
[6.39477062 322.10961914]
[18.47035789 311.88754272]
[23.71707535 297.83508301]
[28.96379471 283.78259277]
[34.21051407 269.73013306]
[39.35247040 255.63899231]
[44.38938904 241.50996399]
[49.32098007 227.34382629]
[54.14698029 213.14137268]
[47.35354614 199.93588257]
[52.04547501 185.46382141]
[65.94266510 178.42778015]
[70.76866150 164.22532654]
[75.59465790 150.02287292]
[80.42065430 135.82041931]
[85.14079285 121.58242798]
[89.75479889 107.30970001]
[94.04891968 92.93748474]
[98.02101898 78.47296143]
[94.21430206 63.11654663]
[105.04565430 52.89250565]
[109.01775360 38.42797852]
[112.98985291 23.96345520]
[116.96194458 9.49893188]
[106.22039032 -3.56686211]
[105.39146423 -20.29450798]
[114.60400391 -34.08185196]
[130.06262207 -39.60531616]
[133.81892395 -54.12737656]
[137.57522583 -68.64943695]
[141.33152771 -83.17149353]
[137.29658508 -98.46952820]
[147.97451782 -108.85369873]
[151.73081970 -123.37576294]
[155.48712158 -137.89782715]
[147.72766113 -151.40443420]
[151.74395752 -166.07835388]
[164.66825867 -173.39257812]
[168.42456055 -187.91464233]
[172.18086243 -202.43669128]
[175.50312805 -217.06416321]
[178.38839722 -231.78404236]
[181.27366638 -246.50393677]
[167.04765320 -251.33137512]
[153.59204102 -258.01193237]
[141.14695740 -266.42639160]
[129.93449402 -276.42459106]
[120.15474701 -287.82812500]
[111.98225403 -300.43341064]
[105.56286621 -314.01556396]
[101.01114655 -328.33218384]
[98.40830994 -343.12774658]
[97.80082703 -358.13821411]
[99.19952393 -373.09573364]
[102.57944489 -387.73333740]
[107.88027191 -401.78982544]
[115.00740814 -415.01431274]
[123.83365631 -427.17083740]
[134.20150757 -438.04241943]
[145.92591858 -447.43502808]
[158.79768372 -455.18109131]
[172.58705139 -461.14233398]
[187.04797363 -465.21237183]
[201.92236328 -467.31860352]
[216.94476318 -467.42340088]
[231.84707642 -465.52490234]
[246.36337280 -461.65698242]
[260.23458862 -455.88870239]
[273.21316528 -448.32299805]
[285.06747437 -439.09484863]
[295.58596802 -428.36895752]
[304.58096313 -416.33679199]
[311.89190674 -403.21298218]
[317.38830566 -389.23184204]
[320.97213745 -374.64279175]
[322.57934570 -359.70626831]
[322.18133545 -344.68878174]
[319.78518677 -329.85833740]
[315.43362427 -315.47961426]
[309.20434570 -301.80923462]
[301.20852661 -289.09112549]
[291.58883667 -277.55230713]
[280.51693726 -267.39862061]
[268.19046021 -258.81137085]
[254.82934570 -251.94374084]
[240.67207336 -246.91830444]
[225.97128296 -243.82475281]
[210.98931885 -242.71829224]
[195.99356079 -243.61866760]
[193.10829163 -228.89877319]
[190.22300720 -214.17887878]
[191.67317200 -211.77989197]
[192.26043701 -208.66192627]
[191.70619202 -205.15075684]
[189.85481262 -201.66696167]
[186.70292664 -198.68040466]
[182.94662476 -184.15834045]
[179.19032288 -169.63627625]
[186.94711304 -156.97264099]
[183.34455872 -142.19169617]
[170.00918579 -134.14152527]
[166.25288391 -119.61946106]
[162.49658203 -105.09740448]
[166.80018616 -90.83808136]
[155.85357666 -79.41519165]
[152.09727478 -64.89313507]
[148.34097290 -50.37107468]
[144.58467102 -35.84901428]
[153.99566650 -26.37930489]
[157.52685547 -13.39181614]
[154.15267944 -0.25086567]
[144.65090942 9.58451748]
[131.42646790 13.47102833]
[127.45437622 27.93555260]
[123.48227692 42.40007782]
[119.51017761 56.86460114]
[123.60100555 71.18641663]
[112.48554230 82.44505310]
[108.51345062 96.90958405]
[109.92667389 100.49777985]
[109.75141144 104.69148254]
[107.75270081 108.76728821]
[104.02753448 111.92370605]
[99.41352081 126.19644165]
[99.75148773 135.32461548]
[94.62311554 140.64642334]
[89.79711151 154.84887695]
[84.97111511 169.05133057]
[80.14511871 183.25378418]
[86.87851715 197.30010986]
[81.78195190 211.63465881]
[68.34943390 217.96737671]
[63.52343750 232.16983032]
[63.72545624 241.30201721]
[58.51841736 246.54687500]
[53.48150253 260.67590332]
[53.54753494 269.81008911]
[48.26298523 274.97683716]
[43.01626587 289.02932739]
[37.76954651 303.08178711]
[32.52282715 317.13427734]
[34.94433212 332.76907349]
[23.24402809 341.98602295]
[17.99730873 356.03848267]
[12.75059128 370.09094238]
[26.24196815 376.67413330]
[39.03498459 384.52868652]
[51.01019287 393.58132935]
[62.05578232 403.74746704]
[72.06861877 414.93222046]
[80.95521545 427.03112793]
[88.63259125 439.93127441]
[95.02906799 453.51214600]
[100.08493042 467.64700317]
[103.75295258 482.20382690]
[105.99890900 497.04669189]
[106.80181122 512.03704834]
[106.15416718 527.03491211]
[104.06202698 541.90026855]
[100.54492950 556.49432373]
[95.63570404 570.68072510]
[89.38019562 584.32714844]
[81.83679962 597.30609131]
[73.07596588 609.49633789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 191]
[45 190]
[46 189]
[48 187]
[49 186]
[50 185]
[51 184]
[52 182]
[53 181]
[54 179]
[55 178]
[58 175]
[59 174]
[60 173]
[61 172]
[62 170]
[63 169]
[64 165]
[65 164]
[67 162]
[68 161]
[69 160]
[70 159]
[74 154]
[75 153]
[76 152]
[77 151]
[79 149]
[80 148]
[81 147]
[84 144]
[85 143]
[86 142]
[87 137]
[88 136]
[89 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
