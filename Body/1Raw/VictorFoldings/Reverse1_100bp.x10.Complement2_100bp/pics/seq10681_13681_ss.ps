%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[88.52677155 485.04919434]
[98.99387360 474.14364624]
[112.21123505 466.80926514]
[109.10712433 452.13397217]
[106.00301361 437.45867920]
[102.89891052 422.78335571]
[99.79479980 408.10806274]
[94.08355713 421.97824097]
[82.64016724 431.67611694]
[68.02111816 435.03518677]
[53.49232864 431.30499268]
[42.29957581 421.31887817]
[36.94334793 407.30776978]
[38.62024307 392.40179443]
[46.95563126 379.93099976]
[60.08737183 372.68133545]
[75.08180237 372.27246094]
[88.58911896 378.79565430]
[97.59176636 390.79370117]
[96.92198181 375.80865479]
[96.25219727 360.82363892]
[85.12126923 350.99316406]
[84.22854614 335.80575562]
[94.61511230 324.19726562]
[93.94532776 309.21221924]
[93.27554321 294.22717285]
[81.50032043 287.93542480]
[74.31401062 276.55557251]
[73.68412781 263.00296021]
[79.88203430 250.81262207]
[91.38416290 243.21710205]
[90.93755341 228.22375488]
[90.49095154 213.23040771]
[88.18914032 210.55944824]
[87.06666565 206.64088440]
[87.69583130 202.04116821]
[90.37429047 197.56088257]
[90.59761810 182.56254578]
[90.82094574 167.56420898]
[91.04427338 152.56587219]
[88.00070953 145.83099365]
[91.38423920 137.34632874]
[91.83084869 122.35298157]
[92.27745056 107.35963440]
[91.27319336 92.39328766]
[88.82746124 77.59401703]
[86.16166687 62.83280182]
[83.27639771 48.11291122]
[80.39112091 33.39302063]
[70.14382935 21.33883095]
[75.28852844 7.36094666]
[72.40325928 -7.35894489]
[68.43115997 -21.82346916]
[63.39424515 -35.95249939]
[58.35733032 -50.08152771]
[53.32041168 -64.21055603]
[35.77986145 -68.80258942]
[24.60514259 -82.88113403]
[24.12277031 -100.69174957]
[34.33718491 -115.09790802]
[28.88182831 -129.07070923]
[23.42647171 -143.04350281]
[8.78691006 -154.21331787]
[12.10799789 -171.44519043]
[6.44521141 -185.33522034]
[0.78242469 -199.22523499]
[-1.98599565 -184.48292542]
[-10.80683708 -172.35063171]
[-23.97693443 -165.17089844]
[-38.95334625 -164.33003235]
[-52.84436417 -169.99038696]
[-62.96784973 -181.05903625]
[-67.36911774 -195.39880371]
[-65.19834900 -210.24089050]
[-56.87468719 -222.71954346]
[-44.00529861 -230.42530823]
[-29.07506561 -231.87033081]
[-14.96677780 -226.77561951]
[-4.40384865 -216.12376404]
[-7.50795889 -230.79907227]
[-10.61206913 -245.47436523]
[-13.71617889 -260.14965820]
[-16.82028961 -274.82498169]
[-19.92440033 -289.50027466]
[-23.02850914 -304.17556763]
[-26.13261986 -318.85089111]
[-41.19984055 -319.34307861]
[-55.71125793 -323.42745972]
[-68.82319641 -330.86657715]
[-79.77334595 -341.22793579]
[-87.92507935 -353.90911865]
[-92.80445862 -368.17288208]
[-94.12781525 -383.18994141]
[-91.81819916 -398.08724976]
[-86.00989532 -411.99862671]
[-77.04058838 -424.11535645]
[-65.43174744 -433.73297119]
[-51.85828400 -440.29226685]
[-37.10935211 -443.41195679]
[-22.04243088 -442.91064453]
[-7.53349161 -438.81744385]
[5.57393456 -431.37039185]
[16.51779938 -421.00241089]
[24.66184044 -408.31625366]
[29.53257370 -394.04953003]
[30.84682274 -379.03167725]
[28.52817726 -364.13580322]
[22.71144104 -350.22790527]
[13.73478985 -338.11663818]
[2.12011671 -328.50607300]
[-11.45731735 -321.95498657]
[-8.35320759 -307.27969360]
[-5.24909687 -292.60440063]
[-2.14498687 -277.92907715]
[0.95912313 -263.25378418]
[4.06323338 -248.57847595]
[7.16734362 -233.90318298]
[10.27145386 -219.22787476]
[14.67245197 -204.88803101]
[20.33523750 -190.99800110]
[25.99802399 -177.10797119]
[37.02240372 -172.12905884]
[41.85383987 -160.60339355]
[37.39926910 -148.49885559]
[42.85462570 -134.52606201]
[48.30998230 -120.55326843]
[60.38000107 -119.25331116]
[70.81369019 -112.90736389]
[77.59912109 -102.66728973]
[79.39743042 -90.44249725]
[75.80664062 -78.54397583]
[67.44944000 -69.24747467]
[72.48635864 -55.11844254]
[77.52327728 -40.98941422]
[82.56018829 -26.86038589]
[86.82872772 -41.24021912]
[97.64707184 -51.63076019]
[112.18733978 -55.31594849]
[126.64874268 -51.33248138]
[137.25109863 -40.72163391]
[141.22297668 -26.25704956]
[137.52613831 -11.71973896]
[127.12693024 -0.90971947]
[112.74368286 3.34729528]
[98.13613892 -0.06146783]
[87.12314606 -10.24421787]
[90.00842285 4.47567368]
[100.04934692 15.47699642]
[95.11101532 30.50774765]
[97.99629211 45.22763824]
[100.88156128 59.94752884]
[104.27502441 63.30810165]
[105.59342194 68.83610535]
[103.62673950 75.14829254]
[106.07246399 89.94756317]
[111.73588562 76.05779266]
[122.50257874 65.61374664]
[136.55818176 60.37541962]
[151.53407288 61.22556686]
[164.90653992 68.02092743]
[174.42211914 79.61635590]
[178.47723389 94.05783081]
[176.38853455 108.91169739]
[168.50801086 121.67481995]
[156.16366577 130.19639587]
[141.43574524 133.04039001]
[126.80615234 129.72752380]
[114.74024200 120.81609344]
[107.27080536 107.80624390]
[106.82419586 122.79959106]
[106.37759399 137.79293823]
[106.04261780 152.78919983]
[105.81929016 167.78753662]
[105.59596252 182.78587341]
[105.37263489 197.78421021]
[105.48429871 212.78379822]
[105.93090057 227.77714539]
[106.37751007 242.77049255]
[120.47983551 252.10969543]
[126.18016815 267.85794067]
[121.41827393 283.74145508]
[108.26058197 293.55740356]
[108.93036652 308.54241943]
[109.60015106 323.52746582]
[120.98095703 334.16302490]
[121.44674683 349.36953735]
[111.23723602 360.15383911]
[111.90702057 375.13888550]
[112.57680511 390.12393188]
[114.47010040 405.00396729]
[117.57421112 419.67926025]
[120.67832184 434.35455322]
[123.78243256 449.02987671]
[126.88654327 463.70516968]
[141.94169617 465.05932617]
[155.92820740 470.79248047]
[167.60240173 480.39477539]
[175.92623901 493.01245117]
[180.15954590 507.52349854]
[179.92590332 522.63763428]
[175.24609375 537.01086426]
[166.53623962 549.36523438]
[154.57081604 558.60211182]
[140.41378784 563.90020752]
[125.32397461 564.78839111]
[110.64315033 561.18768311]
[97.67674255 553.41833496]
[87.57769775 542.17108154]
[81.24402618 528.44604492]
[79.23890686 513.46368408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 194]
[4 193]
[5 192]
[6 191]
[7 190]
[19 189]
[20 188]
[21 187]
[24 184]
[25 183]
[26 182]
[31 178]
[32 177]
[33 176]
[37 175]
[38 174]
[39 173]
[40 172]
[42 171]
[43 170]
[44 169]
[45 155]
[46 154]
[47 151]
[48 150]
[49 149]
[51 147]
[52 146]
[53 135]
[54 134]
[55 133]
[56 132]
[60 126]
[61 125]
[62 124]
[64 121]
[65 120]
[66 119]
[79 118]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
[85 112]
[86 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
