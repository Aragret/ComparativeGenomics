%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[215.26255798 533.66119385]
[210.43656921 519.45874023]
[205.61056519 505.25631714]
[201.79855347 502.37924194]
[199.75341797 497.07693481]
[200.85916138 490.55856323]
[196.45816040 476.21871948]
[192.05717468 461.87887573]
[181.52095032 455.93627930]
[177.73704529 444.02551270]
[183.25376892 432.36666870]
[179.06675720 417.96289062]
[174.87974548 403.55911255]
[170.69273376 389.15533447]
[166.50572205 374.75155640]
[163.60839844 372.74212646]
[161.54040527 369.22949219]
[160.99765015 364.61877441]
[162.46882629 359.61050415]
[158.92915344 345.03414917]
[155.28106689 330.48452759]
[151.52476501 315.96246338]
[147.66046143 301.46878052]
[143.68835449 287.00424194]
[139.71626282 272.53973389]
[135.74417114 258.07519531]
[131.77207947 243.61067200]
[127.79997253 229.14614868]
[123.82788086 214.68162537]
[119.85578156 200.21710205]
[106.82401276 193.09611511]
[102.58969116 178.48361206]
[110.14720154 164.86297607]
[106.17510223 150.39845276]
[102.20301056 135.93392944]
[98.23091125 121.46939850]
[94.25881958 107.00487518]
[91.21127319 104.64164734]
[89.22020721 100.94657898]
[88.85706329 96.42163086]
[90.44779205 91.80541992]
[87.12553406 77.17795563]
[83.80327606 62.55049896]
[70.98262787 49.33261490]
[76.82316589 32.78404999]
[73.17507935 18.23442841]
[69.41877747 3.71236944]
[58.47216797 -7.71051693]
[62.77577209 -21.96983910]
[59.01947021 -36.49189758]
[55.26317215 -51.01395798]
[44.31656265 -62.43684387]
[48.62016678 -76.69616699]
[44.86386490 -91.21822357]
[41.10756683 -105.74028015]
[37.13547134 -120.20480347]
[32.94845963 -134.60859680]
[28.76144791 -149.01237488]
[16.54380417 -151.65756226]
[6.66744709 -159.20248413]
[0.96938133 -170.16659546]
[0.47649184 -182.44088745]
[5.22099972 -193.69355774]
[14.24597359 -201.81297302]
[10.48967266 -216.33503723]
[6.73337221 -230.85710144]
[2.97707152 -245.37915039]
[-11.86745548 -243.13325500]
[-26.86423111 -242.42561340]
[-41.85428238 -243.26373291]
[-56.67870331 -245.63871765]
[-71.18034363 -249.52540588]
[-85.20549011 -254.88258362]
[-98.60546112 -261.65347290]
[-111.23820496 -269.76629639]
[-122.96981049 -279.13504028]
[-133.67591858 -289.66040039]
[-143.24304199 -301.23080444]
[-151.56974792 -313.72360229]
[-158.56779480 -327.00634766]
[-164.16297913 -340.93826294]
[-168.29598999 -355.37161255]
[-170.92301941 -370.15347290]
[-172.01622009 -385.12707520]
[-171.56401062 -400.13372803]
[-169.57116699 -415.01434326]
[-166.05882263 -429.61117554]
[-161.06420898 -443.76947021]
[-154.64028931 -457.33920288]
[-146.85513306 -470.17645264]
[-137.79129028 -482.14520264]
[-127.54483032 -493.11853027]
[-116.22436523 -502.98013306]
[-103.94991302 -511.62548828]
[-90.85158539 -518.96289062]
[-77.06822968 -524.91461182]
[-62.74595642 -529.41760254]
[-48.03659058 -532.42401123]
[-33.09606171 -533.90203857]
[-18.08274460 -533.83599854]
[-3.15579152 -532.22662354]
[11.52656460 -529.09100342]
[25.80868340 -524.46221924]
[39.53916550 -518.38952637]
[52.57246017 -510.93719482]
[64.77040863 -502.18423462]
[76.00370026 -492.22348022]
[86.15325928 -481.16046143]
[95.11149597 -469.11245728]
[102.78345490 -456.20721436]
[109.08779144 -442.58154297]
[113.95769501 -428.37985229]
[117.34152985 -413.75268555]
[119.20342255 -398.85513306]
[119.52365112 -383.84506226]
[118.29880524 -368.88165283]
[115.54187775 -354.12350464]
[111.28208923 -339.72702026]
[105.56459808 -325.84487915]
[98.45001984 -312.62417603]
[90.01375580 -300.20510864]
[80.34525299 -288.71926880]
[69.54699707 -278.28848267]
[57.73344803 -269.02325439]
[45.02984238 -261.02185059]
[31.57084656 -254.36907959]
[17.49913025 -249.13545227]
[21.25543213 -234.61340332]
[25.01173210 -220.09133911]
[28.76803207 -205.56927490]
[45.48249435 -199.86854553]
[55.51726913 -185.14596558]
[54.69841766 -167.19021606]
[43.16522980 -153.19938660]
[47.35224152 -138.79559326]
[51.53925323 -124.39181519]
[55.21899796 -121.34739685]
[57.02532578 -115.95905304]
[55.62962341 -109.49658203]
[59.38592529 -94.97452545]
[63.14222717 -80.45246887]
[73.82015991 -70.06829071]
[69.78523254 -54.77025604]
[73.54153442 -40.24819946]
[77.29782867 -25.72613907]
[87.97576141 -15.34196758]
[83.94083405 -0.04393123]
[87.69713593 14.47812843]
[92.41548920 20.16662025]
[91.39953613 29.24437714]
[101.56336975 35.80358124]
[104.63162231 47.91843033]
[98.43073273 59.22824097]
[101.75299072 73.85569763]
[105.07525635 88.48316193]
[108.72334290 103.03278351]
[112.69543457 117.49730682]
[116.66753387 131.96182251]
[120.63963318 146.42634583]
[124.61172485 160.89086914]
[138.06549072 168.74162292]
[141.88769531 183.46728516]
[134.32031250 196.24501038]
[138.29240417 210.70953369]
[142.26449585 225.17405701]
[146.23660278 239.63858032]
[150.20869446 254.10310364]
[154.18078613 268.56762695]
[158.15287781 283.03216553]
[162.12498474 297.49667358]
[167.41514587 304.94326782]
[166.04682922 312.20617676]
[169.80311584 326.72821045]
[174.98184204 334.25277710]
[173.50552368 341.49447632]
[177.04519653 356.07083130]
[180.90950012 370.56454468]
[185.09651184 384.96832275]
[189.28352356 399.37210083]
[193.47053528 413.77587891]
[197.65754700 428.17965698]
[211.24221802 440.61102295]
[206.39701843 457.47787476]
[210.79801941 471.81771851]
[215.19900513 486.15756226]
[219.81301880 500.43029785]
[224.63902283 514.63275146]
[229.46501160 528.83520508]
[244.50196838 527.67718506]
[259.35433960 530.29589844]
[273.08853149 536.52673340]
[284.84115601 545.97796631]
[293.87347412 558.05560303]
[299.61767578 572.00030518]
[301.71270752 586.93554688]
[300.02682495 601.92248535]
[294.66607666 616.01904297]
[285.96737671 628.33911133]
[274.47753906 638.10815430]
[260.91888428 644.71221924]
[246.14364624 647.73602295]
[231.08065796 646.98962402]
[216.67677307 642.51983643]
[203.83744812 634.60766602]
[193.36973572 623.75048828]
[185.93168640 610.63079834]
[181.99084473 596.07330322]
[181.79493713 580.99310303]
[185.35626221 566.33819580]
[192.45098877 553.02966309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[6 185]
[7 184]
[8 183]
[11 181]
[12 180]
[13 179]
[14 178]
[15 177]
[19 176]
[20 175]
[21 173]
[22 172]
[23 170]
[24 169]
[25 168]
[26 167]
[27 166]
[28 165]
[29 164]
[30 163]
[33 160]
[34 159]
[35 158]
[36 157]
[37 156]
[41 155]
[42 154]
[43 153]
[45 150]
[46 148]
[47 147]
[49 145]
[50 144]
[51 143]
[53 141]
[54 140]
[55 139]
[56 136]
[57 135]
[58 134]
[64 130]
[65 129]
[66 128]
[67 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
