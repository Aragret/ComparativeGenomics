%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[47.36286163 568.57562256]
[41.16492844 582.24713135]
[33.73197174 595.28845215]
[25.12741280 607.58831787]
[15.42466068 619.04174805]
[4.70649862 629.55108643]
[-6.93562841 639.02661133]
[-19.40239143 647.38745117]
[-32.58742523 654.56237793]
[-46.37823868 660.49011230]
[-60.65716934 665.12011719]
[-75.30239105 668.41284180]
[-90.18896484 670.34020996]
[-105.18986511 670.88580322]
[-120.17710876 670.04492188]
[-135.02282715 667.82476807]
[-149.60037231 664.24432373]
[-163.78536987 659.33404541]
[-177.45677185 653.13586426]
[-190.49797058 645.70269775]
[-202.79766846 637.09790039]
[-214.25094604 627.39495850]
[-224.76007080 616.67663574]
[-234.23541260 605.03436279]
[-242.59608459 592.56744385]
[-249.77079773 579.38232422]
[-255.69830322 565.59136963]
[-260.32803345 551.31237793]
[-263.62054443 536.66711426]
[-265.54766846 521.78051758]
[-266.09298706 506.77960205]
[-265.25186157 491.79235840]
[-263.03146362 476.94668579]
[-259.45074463 462.36920166]
[-254.54023743 448.18429565]
[-248.34184265 434.51296997]
[-240.90846252 421.47192383]
[-232.30348206 409.17236328]
[-222.60035706 397.71923828]
[-211.88183594 387.21029663]
[-200.23939514 377.73513794]
[-187.77235413 369.37466431]
[-174.58708191 362.20019531]
[-160.79606628 356.27291870]
[-146.51698303 351.64340210]
[-131.87165833 348.35116577]
[-116.98502350 346.42428589]
[-101.98410797 345.87921143]
[-86.99688721 346.72058105]
[-72.15122986 348.94122314]
[-57.57380676 352.52218628]
[-43.38898468 357.43292236]
[-29.71778107 363.63156128]
[-16.67683983 371.06515503]
[-8.07827568 358.77432251]
[0.52028811 346.48348999]
[9.11885166 334.19265747]
[17.71741676 321.90179443]
[26.31598091 309.61096191]
[32.89600754 296.13122559]
[37.29700470 281.79138184]
[41.69800186 267.45153809]
[38.03540421 253.01426697]
[49.48115158 242.09156799]
[53.88214874 227.75172424]
[50.21955109 213.31445312]
[61.66529846 202.39175415]
[58.00269699 187.95449829]
[69.44844818 177.03179932]
[73.84944916 162.69194031]
[78.14356995 148.31973267]
[82.33058167 133.91595459]
[86.51759338 119.51216888]
[90.70460510 105.10838318]
[94.13566589 90.50606537]
[96.80146027 75.74484253]
[88.05891418 62.85277176]
[90.97268677 47.92077255]
[103.31718445 39.66553879]
[105.98297882 24.90432167]
[108.64878082 10.14310360]
[110.87389374 -4.69093990]
[112.65635681 -19.58465767]
[114.43882751 -34.47837448]
[116.22129059 -49.37209320]
[110.17870331 -63.99391556]
[119.37357330 -75.71157837]
[112.02972412 -86.31490326]
[113.82096100 -98.68321991]
[123.24725342 -106.26422119]
[125.25126648 -121.12975311]
[119.42704010 -135.83992004]
[128.79534912 -147.41938782]
[130.79936218 -162.28491211]
[132.80337524 -177.15043640]
[123.49388885 -189.63928223]
[125.73801422 -204.68649292]
[137.70158386 -213.48471069]
[139.70559692 -228.35023499]
[141.70960999 -243.21575928]
[127.98335266 -249.54673767]
[116.73412323 -259.64358521]
[108.96218109 -272.60845947]
[105.35861206 -287.28857422]
[106.24383545 -302.37857056]
[111.53914642 -316.53665161]
[120.77368927 -328.50387573]
[133.12632751 -337.21615601]
[147.49867249 -341.89877319]
[162.61276245 -342.13537598]
[177.12463379 -337.90493774]
[189.74392700 -329.58355713]
[199.34852600 -317.91125488]
[205.08441162 -303.92587280]
[206.44152832 -288.87097168]
[203.29924011 -274.08526611]
[195.93692017 -260.88345337]
[185.00923157 -250.43945312]
[171.48786926 -243.68191528]
[156.57513428 -241.21174622]
[154.57112122 -226.34622192]
[152.56710815 -211.48069763]
[161.77378845 -199.82853699]
[159.95318604 -184.72422791]
[147.66891479 -175.14642334]
[145.66490173 -160.28089905]
[143.66088867 -145.41537476]
[149.62844849 -131.76847839]
[140.11679077 -119.12574005]
[138.11277771 -104.26020813]
[145.64324951 -88.40906525]
[134.26728821 -73.92910767]
[140.43737793 -60.37258530]
[131.11500549 -47.58962631]
[129.33255005 -32.69590759]
[127.55007935 -17.80219078]
[125.76760864 -2.90847373]
[127.39218140 -0.62398130]
[128.20971680 2.44167352]
[127.91816711 5.98432779]
[126.33103180 9.59618568]
[123.40999603 12.80889988]
[120.74420166 27.57011604]
[118.07840729 42.33133316]
[126.75559235 54.38297272]
[124.26237488 69.39092255]
[111.56267548 78.41064453]
[108.89688110 93.17185974]
[121.16938019 84.54714203]
[136.12474060 85.70349121]
[146.92558289 96.11223602]
[148.63389587 111.01464081]
[140.46865845 123.59752655]
[126.16291809 128.10816956]
[112.25706482 122.48435974]
[105.10838318 109.29539490]
[100.92137146 123.69918060]
[96.73435974 138.10296631]
[92.54734802 152.50674438]
[93.15694427 161.62080383]
[88.18929291 167.09294128]
[83.78829193 181.43278503]
[87.13610840 196.89573669]
[76.00514984 206.79275513]
[79.35295868 222.25570679]
[68.22200012 232.15272522]
[63.82099915 246.49256897]
[67.16880798 261.95550537]
[56.03784943 271.85253906]
[51.63685226 286.19238281]
[47.23585510 300.53222656]
[57.63435364 289.72152710]
[70.53584290 282.06964111]
[85.00894928 278.12890625]
[100.00884247 278.18386841]
[114.45268250 282.23056030]
[127.29774475 289.97680664]
[137.61672974 300.86343384]
[144.66471863 314.10449219]
[147.93289185 328.74414062]
[147.18531799 343.72549438]
[142.47598267 357.96707153]
[134.14483643 370.44070435]
[122.79332733 380.24597168]
[109.24092102 386.67498779]
[94.46598053 389.26367188]
[79.53512573 387.82510376]
[65.52622223 382.46313477]
[53.45058441 373.56488037]
[44.17996597 361.77270508]
[38.38362122 347.93786621]
[36.47999191 333.05914307]
[38.60681915 318.20953369]
[30.00825310 330.50036621]
[21.40969086 342.79119873]
[12.81112576 355.08203125]
[4.21256208 367.37289429]
[-4.38600206 379.66372681]
[7.06759787 389.36627197]
[17.57708931 400.08425903]
[27.05280495 411.72622681]
[35.41390228 424.19287109]
[42.58904266 437.37777710]
[48.51701355 451.16848755]
[53.14723587 465.44735718]
[56.44020844 480.09252930]
[58.36782837 494.97906494]
[58.91365814 509.97994995]
[58.07303619 524.96722412]
[55.85313416 539.81298828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 198]
[55 197]
[56 196]
[57 195]
[58 194]
[59 193]
[60 171]
[61 170]
[62 169]
[64 167]
[65 166]
[67 164]
[69 162]
[70 161]
[71 159]
[72 158]
[73 157]
[74 156]
[75 148]
[76 147]
[79 144]
[80 143]
[81 142]
[82 137]
[83 136]
[84 135]
[85 134]
[87 132]
[90 130]
[91 129]
[93 127]
[94 126]
[95 125]
[98 122]
[99 121]
[100 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
