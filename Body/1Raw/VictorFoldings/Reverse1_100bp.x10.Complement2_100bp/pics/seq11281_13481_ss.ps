%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[2.72192454 531.79809570]
[7.79383564 546.06536865]
[7.95587349 561.20642090]
[3.19046211 575.57897949]
[-5.98548317 587.62390137]
[-18.57662392 596.03472900]
[-33.21716690 599.89904785]
[-48.31901932 598.79779053]
[-62.24403763 592.85028076]
[-73.48174286 582.70178223]
[-80.81316376 569.45300293]
[-83.44302368 554.54119873]
[-81.08606720 539.58380127]
[-73.99796295 526.20330811]
[-62.94755936 515.85113525]
[-49.13353729 509.65023804]
[-34.05433273 508.27319336]
[-30.51465988 493.69680786]
[-26.97498703 479.12042236]
[-31.49041367 464.92675781]
[-20.71508980 453.34216309]
[-17.17541695 438.76577759]
[-23.01595688 422.21722412]
[-10.19530678 408.99932861]
[-14.92155647 394.87448120]
[-4.31990290 383.13073730]
[-0.99764359 368.50326538]
[2.32461596 353.87582397]
[5.42872620 339.20050049]
[8.31399822 324.48062134]
[3.16929388 310.50274658]
[13.41659260 298.44854736]
[16.30186462 283.72866821]
[19.18713760 269.00875854]
[9.39556885 280.37210083]
[-3.80525064 287.49517822]
[-18.67852592 289.44085693]
[-33.26742172 285.95315552]
[-45.65251923 277.49090576]
[-54.20434189 265.16751099]
[-57.79775620 250.60429382]
[-55.95998001 235.71730042]
[-48.93281174 222.46516418]
[-37.64079285 212.59146118]
[-23.56957817 207.39520264]
[-8.57048512 207.56008911]
[5.38310146 213.06439209]
[16.45534706 223.18394470]
[23.18950653 236.58734131]
[24.69939041 251.51351929]
[30.77322578 237.79824829]
[36.84705734 224.08297729]
[42.92089462 210.36772156]
[48.99472809 196.65245056]
[55.06856155 182.93717957]
[61.14239502 169.22190857]
[67.21623230 155.50665283]
[65.29517365 140.73645020]
[77.95777893 131.25125122]
[84.03161621 117.53598022]
[90.10544586 103.82071686]
[95.56080627 89.84791565]
[100.38680267 75.64546204]
[105.21279907 61.44300842]
[110.03880310 47.24055099]
[114.86479950 33.03809738]
[119.58493042 18.80010796]
[124.19894409 4.52737379]
[128.81294250 -9.74535942]
[133.42695618 -24.01809311]
[132.36726379 -28.22891235]
[132.67198181 -32.16231918]
[134.08636475 -35.42344284]
[136.25358582 -37.74071503]
[138.76380920 -38.98847198]
[144.21916199 -52.96126938]
[149.67453003 -66.93406677]
[155.12988281 -80.90686035]
[160.58523560 -94.87966156]
[165.72720337 -108.97080231]
[170.55319214 -123.17325592]
[175.27333069 -137.41123962]
[179.88734436 -151.68397522]
[184.39497375 -165.99066162]
[188.79595947 -180.33052063]
[193.19696045 -194.67036438]
[197.59796143 -209.01020813]
[201.46226501 -223.50390625]
[196.97364807 -238.67501831]
[207.33767700 -249.37251282]
[210.65992737 -263.99996948]
[213.98219299 -278.62744141]
[217.30444336 -293.25488281]
[220.62670898 -307.88235474]
[223.94897461 -322.50982666]
[227.27122498 -337.13726807]
[230.26600647 -351.83526611]
[232.93179321 -366.59649658]
[235.59759521 -381.35769653]
[221.83113098 -387.50164795]
[209.93547058 -396.76211548]
[200.60218811 -408.60076904]
[194.37394714 -422.32928467]
[191.61282349 -437.14953613]
[192.47935486 -452.19985962]
[196.92315674 -466.60528564]
[204.68586731 -479.52828979]
[215.31619263 -490.21752930]
[228.19607544 -498.05154419]
[242.57672119 -502.57489014]
[257.62203979 -503.52459717]
[272.45730591 -500.84542847]
[286.22003174 -494.69314575]
[298.11010742 -485.42544556]
[307.43618774 -473.58114624]
[313.65609741 -459.84884644]
[316.40823364 -445.02694702]
[315.53259277 -429.97714233]
[311.08004761 -415.57440186]
[303.30950928 -402.65612793]
[292.67269897 -391.97332764]
[279.78808594 -384.14712524]
[265.40469360 -379.63247681]
[250.35881042 -378.69192505]
[247.69302368 -363.93069458]
[245.02722168 -349.16949463]
[246.72647095 -346.08001709]
[247.01373291 -342.01397705]
[245.44633484 -337.64401245]
[241.89869690 -333.81500244]
[238.57643127 -319.18756104]
[235.25416565 -304.56008911]
[231.93191528 -289.93261719]
[228.60964966 -275.30517578]
[225.28739929 -260.67770386]
[221.96513367 -246.05024719]
[226.69137573 -231.92538452]
[216.08972168 -220.18164062]
[229.97964478 -225.84469604]
[243.14137268 -218.64964294]
[245.87257385 -203.90039062]
[236.15991211 -192.46954346]
[221.16319275 -192.78349304]
[211.93780518 -204.60920715]
[207.53681946 -190.26936340]
[203.13581848 -175.92951965]
[198.73481750 -161.58967590]
[199.77748108 -154.27293396]
[194.16007996 -147.06997681]
[189.54606628 -132.79724121]
[190.47967529 -125.46578979]
[184.75564575 -118.34725952]
[179.92965698 -104.14480591]
[181.15180969 -100.83744049]
[180.83273315 -96.77378845]
[178.63442993 -92.68469238]
[174.55804443 -89.42430115]
[169.10267639 -75.45150757]
[163.64732361 -61.47871017]
[158.19197083 -47.50591278]
[152.73660278 -33.53311157]
[147.69969177 -19.40408325]
[143.08567810 -5.13135052]
[138.47167969 9.14138317]
[133.85766602 23.41411591]
[134.79127502 30.74556732]
[129.06724548 37.86409378]
[124.24125671 52.06655121]
[119.41526031 66.26900482]
[114.58925629 80.47145844]
[109.76325989 94.67391968]
[123.66203308 89.03263092]
[137.53204346 94.74428558]
[143.42790222 108.53699493]
[137.97221375 122.50965881]
[124.29022980 128.65811157]
[110.21961975 123.46022797]
[103.82071686 109.89455414]
[97.74687958 123.60981750]
[91.67304993 137.32508850]
[93.15966034 153.07629395]
[80.93149567 161.58047485]
[74.85765839 175.29574585]
[68.78382874 189.01101685]
[62.70999527 202.72628784]
[56.63615799 216.44154358]
[50.56232452 230.15681458]
[44.48849106 243.87208557]
[38.41465759 257.58734131]
[33.90702820 271.89404297]
[31.02175713 286.61392212]
[28.13648415 301.33383179]
[33.07481384 316.36456299]
[23.03388977 327.36590576]
[20.14861679 342.08578491]
[21.92649651 348.45373535]
[20.44409180 353.94003296]
[16.95207596 357.19805908]
[13.62981701 371.82553101]
[10.30755711 386.45300293]
[14.79617691 401.62411499]
[4.43215322 412.32159424]
[10.63304138 423.63140869]
[7.56478739 435.74624634]
[-2.59904122 442.30545044]
[-6.13871384 456.88183594]
[-1.87646675 472.11810303]
[-12.39861107 482.66009521]
[-15.93828392 497.23648071]
[-19.47795677 511.81286621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 210]
[18 209]
[19 208]
[21 206]
[22 205]
[24 202]
[26 200]
[27 199]
[28 198]
[29 195]
[30 194]
[32 192]
[33 191]
[34 190]
[50 189]
[51 188]
[52 187]
[53 186]
[54 185]
[55 184]
[56 183]
[57 182]
[59 180]
[60 179]
[61 178]
[62 171]
[63 170]
[64 169]
[65 168]
[66 167]
[67 165]
[68 164]
[69 163]
[70 162]
[75 161]
[76 160]
[77 159]
[78 158]
[79 157]
[80 153]
[81 152]
[82 150]
[83 149]
[84 147]
[85 146]
[86 145]
[87 144]
[88 138]
[90 136]
[91 135]
[92 134]
[93 133]
[94 132]
[95 131]
[96 130]
[97 126]
[98 125]
[99 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
