%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[112.92860413 597.53094482]
[103.50374603 585.69763184]
[98.19876862 571.53027344]
[97.53339386 556.41699219]
[101.57281494 541.83831787]
[109.92128754 529.22247314]
[121.76091003 519.80560303]
[135.93176270 514.51007080]
[135.26197815 499.52505493]
[134.59219360 484.54000854]
[133.92240906 469.55496216]
[121.41251373 461.51504517]
[115.97127533 447.48446655]
[119.88081360 432.76818848]
[131.84439087 423.06359863]
[131.17460632 408.07855225]
[130.50482178 393.09353638]
[122.20693207 380.72442627]
[129.32029724 366.59252930]
[128.65051270 351.60751343]
[127.98073578 336.62246704]
[127.31095123 321.63742065]
[126.64116669 306.65237427]
[125.97138214 291.66735840]
[114.84045410 281.83688354]
[113.94772339 266.64947510]
[124.33428955 255.04096985]
[123.66450500 240.05593872]
[122.99472046 225.07089233]
[120.88009644 210.22070312]
[117.34042358 195.64431763]
[113.80075073 181.06794739]
[110.26107788 166.49157715]
[106.50478363 151.96951294]
[102.53268433 137.50498962]
[98.56058502 123.04046631]
[94.58849335 108.57594299]
[89.58687592 102.25483704]
[90.66664886 93.86645508]
[86.91034698 79.34439087]
[83.15405273 64.82233429]
[79.39775085 50.30027390]
[75.64144897 35.77821732]
[71.98137665 32.05652618]
[70.28455353 27.73517418]
[70.45063019 23.66240311]
[72.05714417 20.52370262]
[68.95303345 5.84840059]
[63.91547394 19.97720146]
[53.62586594 30.89159203]
[39.81818771 36.75230789]
[24.81927299 36.57171631]
[11.15670776 30.38024712]
[1.13287044 19.22127342]
[-3.56304502 4.97527838]
[-2.13969445 -9.95703793]
[5.16306257 -23.05931854]
[17.11458206 -32.12359619]
[31.70082664 -35.62238693]
[46.46375275 -32.96607590]
[58.91555023 -24.60230255]
[66.95845795 -11.93895626]
[66.73513031 -26.93729401]
[66.51180267 -41.93563080]
[66.28847504 -56.93396759]
[66.06514740 -71.93230438]
[65.84181976 -86.93064117]
[65.61849213 -101.92897797]
[56.92385864 -111.45610809]
[57.04661942 -123.95285797]
[65.37557983 -132.72526550]
[65.37557983 -147.72526550]
[65.37557983 -162.72526550]
[65.37557983 -177.72526550]
[65.37557983 -192.72526550]
[65.37557983 -207.72526550]
[65.37557983 -222.72526550]
[65.37557983 -237.72526550]
[65.37557983 -252.72526550]
[63.07200623 -256.40594482]
[62.15203094 -260.24237061]
[62.49471283 -263.78045654]
[63.84406662 -266.65200806]
[65.84877777 -268.61141968]
[66.74159241 -283.58483887]
[67.63440704 -298.55822754]
[68.41573334 -313.53787231]
[69.08551788 -328.52291870]
[69.75530243 -343.50796509]
[60.89250946 -359.64895630]
[70.90671539 -374.06015015]
[71.35332489 -389.05352783]
[56.72441483 -392.61563110]
[43.15596008 -399.14178467]
[31.24111366 -408.34667969]
[21.50074196 -419.82791138]
[14.36065197 -433.08358765]
[10.13297844 -447.53421021]
[9.00253677 -462.54806519]
[11.01874447 -477.46881104]
[16.09346199 -491.64416504]
[24.00484657 -504.45446777]
[34.40704346 -515.33972168]
[46.84531021 -523.82397461]
[60.77590942 -529.53643799]
[75.58984375 -532.22735596]
[90.63951874 -531.77905273]
[105.26702881 -528.21118164]
[118.83291626 -521.67968750]
[130.74414062 -512.47009277]
[140.47999573 -500.98504639]
[147.61486816 -487.72656250]
[151.83685303 -473.27426147]
[152.96139526 -458.25997925]
[150.93931580 -443.34002686]
[145.85902405 -429.16665649]
[137.94259644 -416.35946655]
[127.53611755 -405.47836304]
[115.09451294 -396.99896240]
[101.16166687 -391.29199219]
[86.34667206 -388.60690308]
[85.90007019 -373.61355591]
[93.96414185 -364.59704590]
[93.71477509 -352.10220337]
[84.74034119 -342.83816528]
[84.07055664 -327.85311890]
[83.40077209 -312.86807251]
[86.24246216 -306.04559326]
[82.60781860 -297.66540527]
[81.71499634 -282.69201660]
[80.82218170 -267.71859741]
[80.37557983 -252.72526550]
[80.37557983 -237.72526550]
[80.37557983 -222.72526550]
[80.37557983 -207.72526550]
[80.37557983 -192.72526550]
[80.37557983 -177.72526550]
[80.37557983 -162.72526550]
[80.37557983 -147.72526550]
[80.37557983 -132.72526550]
[89.95626831 -118.02229309]
[80.61682892 -102.15230560]
[80.84015656 -87.15396881]
[81.06348419 -72.15563202]
[81.28681183 -57.15729523]
[81.51013947 -42.15895844]
[81.73346710 -27.16062164]
[81.95679474 -12.16228390]
[83.62833405 2.74429035]
[86.73244476 17.41959190]
[90.16350555 32.02191544]
[93.91980743 46.54397583]
[97.67610931 61.06603241]
[101.43241119 75.58809662]
[105.18871307 90.11015320]
[109.05301666 104.60384369]
[113.02510834 119.06836700]
[116.99720764 133.53289795]
[120.96930695 147.99742126]
[125.39707947 152.90724182]
[126.51310730 158.47962952]
[124.83745575 162.95190430]
[128.37713623 177.52827454]
[131.91680908 192.10464478]
[135.45646667 206.68103027]
[140.07113647 192.40850830]
[150.03121948 181.19259644]
[163.65827942 174.92337036]
[178.65591431 174.65730286]
[192.49676514 180.43923950]
[202.84840393 191.29483032]
[207.96640015 205.39468384]
[206.98826599 220.36276245]
[200.07885742 233.67666626]
[188.40251160 243.09277344]
[173.92691040 247.02429199]
[159.09143066 244.80870056]
[146.39613342 236.81938171]
[137.97976685 224.40110779]
[138.64955139 239.38615417]
[139.31933594 254.37118530]
[150.70013428 265.00674438]
[151.16592407 280.21325684]
[140.95642090 290.99755859]
[141.62620544 305.98260498]
[142.29598999 320.96765137]
[142.96577454 335.95266724]
[143.63555908 350.93771362]
[144.30534363 365.92276001]
[152.65113831 379.36367798]
[145.48985291 392.42373657]
[146.15963745 407.40878296]
[146.82942200 422.39382935]
[159.61109924 430.99237061]
[164.81796265 445.30117798]
[160.65017700 459.76123047]
[148.90744019 468.88519287]
[149.57723999 483.87023926]
[150.24702454 498.85525513]
[150.91680908 513.84033203]
[165.50358582 517.85040283]
[178.13613892 526.17352295]
[187.57684326 537.99420166]
[192.90080261 552.15435791]
[193.58642578 567.26678467]
[189.56654358 581.85089111]
[181.23498535 594.47784424]
[169.40798950 603.91058350]
[155.24424744 609.22509766]
[140.13137817 609.90057373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 200]
[9 199]
[10 198]
[11 197]
[15 193]
[16 192]
[17 191]
[19 189]
[20 188]
[21 187]
[22 186]
[23 185]
[24 184]
[27 181]
[28 180]
[29 179]
[30 165]
[31 164]
[32 163]
[33 162]
[34 159]
[35 158]
[36 157]
[37 156]
[39 155]
[40 154]
[41 153]
[42 152]
[43 151]
[47 150]
[48 149]
[62 148]
[63 147]
[64 146]
[65 145]
[66 144]
[67 143]
[68 142]
[71 140]
[72 139]
[73 138]
[74 137]
[75 136]
[76 135]
[77 134]
[78 133]
[79 132]
[84 131]
[85 130]
[86 129]
[87 127]
[88 126]
[89 125]
[91 122]
[92 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
