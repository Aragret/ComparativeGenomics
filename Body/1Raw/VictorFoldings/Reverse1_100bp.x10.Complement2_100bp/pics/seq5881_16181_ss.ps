%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[72.97839355 472.49063110]
[73.68041229 487.55575562]
[70.61303711 502.32199097]
[63.96906662 515.86114502]
[54.16615295 527.32214355]
[41.82051849 535.98443604]
[27.70821953 541.30364990]
[12.71636486 542.94531250]
[-2.21264482 540.80627441]
[-16.14035797 535.02099609]
[-28.19126892 525.95312500]
[-37.60784531 514.17266846]
[-43.79815292 500.42019653]
[-46.37306595 485.56015015]
[-45.17072296 470.52667236]
[-40.26670456 456.26480103]
[-31.96927643 443.67098999]
[-20.80002785 433.53695679]
[-7.46106482 426.49972534]
[7.20911407 423.00161743]
[22.28832817 423.26257324]
[26.26042557 408.79806519]
[30.23252106 394.33352661]
[34.20461655 379.86898804]
[37.85270691 365.31936646]
[41.17496490 350.69192505]
[44.49722290 336.06445312]
[47.81948471 321.43701172]
[51.14174271 306.80953979]
[43.01134109 294.38247681]
[46.17221069 279.50082397]
[59.26199722 271.05715942]
[54.53574753 256.93228149]
[65.13739777 245.18855286]
[68.45966339 230.56109619]
[71.45443726 215.86308289]
[74.12023163 201.10186768]
[68.76798248 187.20213318]
[78.83467865 174.99671936]
[81.50047302 160.23548889]
[84.16626740 145.47427368]
[86.83206177 130.71305847]
[89.49786377 115.95184326]
[81.32261658 103.98892212]
[83.89768982 89.73005676]
[95.74092102 81.38236237]
[98.40671539 66.62113953]
[101.07250977 51.85992432]
[102.63303375 36.94132233]
[103.07964325 21.94797134]
[103.52624512 6.95462084]
[103.97285461 -8.03872871]
[101.77989197 -11.78637981]
[100.97454834 -15.64849663]
[101.42242432 -19.17480087]
[102.85667419 -22.00491142]
[104.91883087 -23.90376282]
[106.25706482 -38.84394836]
[107.59530640 -53.78413391]
[108.93354034 -68.72431946]
[110.27177429 -83.66450500]
[111.61000824 -98.60469055]
[112.94824219 -113.54487610]
[114.28647614 -128.48506165]
[107.81121826 -142.92048645]
[116.65313721 -154.90672302]
[117.99137115 -169.84690857]
[119.32960510 -184.78709412]
[117.88018799 -199.71690369]
[113.69317627 -214.12068176]
[109.50616455 -228.52445984]
[98.22430420 -239.61636353]
[102.10144806 -253.99749756]
[97.91443634 -268.40127563]
[91.58357239 -254.80274963]
[78.52514648 -247.42185974]
[63.60961533 -249.01153564]
[52.40011597 -258.97882080]
[49.07750702 -273.60620117]
[54.88104248 -287.43801880]
[67.64614868 -295.31533813]
[82.61175537 -294.30010986]
[94.19668579 -284.77001953]
[91.75096130 -299.56930542]
[89.30523682 -314.36856079]
[86.85950470 -329.16784668]
[84.41378021 -343.96710205]
[81.96805573 -358.76638794]
[66.94351196 -360.07559204]
[52.71686554 -365.08093262]
[40.18240356 -373.46771240]
[30.12805557 -384.70874023]
[23.18584824 -398.09741211]
[19.79217148 -412.79211426]
[20.16035652 -427.86907959]
[24.26725960 -442.38061523]
[31.85471535 -455.41445923]
[42.44577026 -466.15133667]
[55.37466431 -473.91629028]
[69.82867432 -478.22122192]
[84.89920807 -478.79550171]
[99.63892365 -475.60305786]
[113.12126160 -468.84457397]
[124.49871826 -458.94485474]
[133.05609131 -446.52624512]
[138.25546265 -432.36935425]
[139.77000427 -417.36410522]
[137.50448608 -402.45376587]
[131.60133362 -388.57559204]
[122.43163300 -376.60198975]
[110.57179260 -367.28561401]
[96.76732635 -361.21209717]
[99.21305084 -346.41284180]
[101.65877533 -331.61355591]
[104.10450745 -316.81430054]
[106.55023193 -302.01501465]
[108.99596405 -287.21575928]
[112.31822205 -272.58828735]
[116.50523376 -258.18450928]
[127.48760223 -248.12286377]
[123.90994263 -232.71147156]
[128.09695435 -218.30769348]
[132.28396606 -203.90391541]
[134.90359497 -218.67338562]
[140.81501770 -232.45944214]
[149.70814514 -244.53886414]
[161.11642456 -254.27799988]
[174.44145203 -261.16595459]
[188.98417664 -264.84140015]
[203.98175049 -265.11154175]
[218.64739990 -261.96218872]
[232.21182251 -255.55856323]
[243.96345520 -246.23657227]
[253.28579712 -234.48524475]
[259.68984985 -220.92102051]
[262.83966064 -206.25546265]
[262.57000732 -191.25788879]
[258.89498901 -176.71502686]
[252.00744629 -163.38980103]
[242.26867676 -151.98120117]
[230.18952942 -143.08772278]
[216.40365601 -137.17585754]
[201.63426208 -134.55577087]
[186.65609741 -135.36489868]
[172.25489807 -139.56077576]
[159.18611145 -146.92330933]
[148.13531494 -157.06628418]
[139.68220520 -169.45759583]
[134.26979065 -183.44885254]
[132.93154907 -168.50866699]
[131.59332275 -153.56848145]
[138.16429138 -140.20167542]
[129.22665405 -127.14682770]
[127.88842773 -112.20664215]
[126.55019379 -97.26645660]
[125.21195984 -82.32627106]
[123.87371826 -67.38608551]
[122.53548431 -52.44589996]
[121.19725037 -37.50571442]
[119.85901642 -22.56552887]
[118.96620178 -7.59212303]
[118.51959991 7.40122700]
[118.07299042 22.39457703]
[117.62638855 37.38792801]
[126.83242035 25.54525375]
[140.68887329 19.80078697]
[155.57368469 21.65611839]
[167.59600830 30.62626648]
[173.61325073 44.36645889]
[172.05250549 59.28503799]
[163.32174683 71.48233032]
[149.70317078 77.76998138]
[134.75665283 76.50442505]
[122.38917542 68.01647186]
[115.83373260 54.52572250]
[113.16793823 69.28694153]
[110.50213623 84.04815674]
[118.67738342 96.01107788]
[116.10231018 110.26994324]
[104.25907898 118.61763763]
[101.59328461 133.37886047]
[98.92749023 148.14007568]
[96.26168823 162.90129089]
[93.59589386 177.66250610]
[98.75746155 192.61807251]
[88.88144684 203.76766968]
[86.21565247 218.52888489]
[87.98230743 223.44070435]
[87.71495819 228.07556152]
[85.85971069 231.70503235]
[83.08712006 233.88334656]
[79.76486206 248.51081848]
[84.25347900 263.68194580]
[73.88945770 274.37942505]
[82.04762268 287.64901733]
[78.47000885 302.43600464]
[65.76920319 310.13180542]
[62.44694519 324.75924683]
[59.12468338 339.38671875]
[55.80242538 354.01419067]
[52.48016739 368.64163208]
[54.02573776 373.62744141]
[53.55169678 378.24572754]
[51.53623199 381.78875732]
[48.66913986 383.84109497]
[44.69704437 398.30563354]
[40.72494888 412.77014160]
[36.75285339 427.23468018]
[49.85055542 434.71136475]
[60.67681503 445.21102905]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 208]
[22 207]
[23 206]
[24 205]
[25 201]
[26 200]
[27 199]
[28 198]
[29 197]
[32 194]
[34 192]
[35 191]
[36 187]
[37 186]
[39 184]
[40 183]
[41 182]
[42 181]
[43 180]
[46 177]
[47 176]
[48 175]
[49 164]
[50 163]
[51 162]
[52 161]
[57 160]
[58 159]
[59 158]
[60 157]
[61 156]
[62 155]
[63 154]
[64 153]
[66 151]
[67 150]
[68 149]
[69 123]
[70 122]
[71 121]
[73 119]
[74 118]
[83 117]
[84 116]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
