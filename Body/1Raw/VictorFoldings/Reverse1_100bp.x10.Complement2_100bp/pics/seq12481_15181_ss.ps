%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[69.05535126 541.86645508]
[54.47366714 538.04046631]
[41.23164368 530.83544922]
[30.09915924 520.67022705]
[21.72344208 508.13586426]
[16.59144211 493.96102905]
[15.00152779 478.96984863]
[17.04613495 464.03387451]
[22.60639381 450.02151489]
[31.35903740 437.74734497]
[42.79520035 427.92504883]
[56.24999619 421.12564087]
[70.94117737 417.74444580]
[71.16450500 402.74612427]
[71.38783264 387.74777222]
[71.61116028 372.74945068]
[59.19383240 381.16430664]
[44.82806015 376.84869385]
[39.10375977 362.98388672]
[46.24066925 349.79052734]
[60.97772598 346.99426270]
[72.45063782 356.65490723]
[73.78887177 341.71472168]
[75.12710571 326.77453613]
[76.46533966 311.83435059]
[68.23458862 296.33526611]
[78.95263672 281.36178589]
[80.06828308 266.40332031]
[81.18392944 251.44487000]
[67.53447723 245.36395264]
[56.76889038 234.96052551]
[50.19993210 221.47633362]
[48.63777924 206.53039551]
[52.29017258 191.92457581]
[60.73501587 179.42637634]
[72.96906281 170.55506897]
[87.52706909 166.39698792]
[88.64272308 151.43852234]
[81.87345886 138.17103577]
[90.61574554 124.98455811]
[91.73139191 110.02610779]
[92.40117645 95.04106903]
[92.62450409 80.04272461]
[92.84783173 65.04438782]
[93.07115936 50.04605484]
[82.34356689 38.75196075]
[82.78371429 23.54469299]
[93.61701202 13.38717747]
[93.84033966 -1.61115956]
[94.06366730 -16.60949707]
[86.86235046 -3.45119429]
[75.99055481 6.88341570]
[62.48452759 13.40930367]
[47.63157272 15.50446415]
[32.84737778 12.96919918]
[19.54107666 6.04515409]
[8.98094559 -4.60771513]
[2.17350650 -17.97404480]
[-0.23239908 -32.77984238]
[1.99254477 -47.61391068]
[8.63627052 -61.06236649]
[19.06554031 -71.84338379]
[32.28630447 -78.92938232]
[47.03844070 -81.64498138]
[61.91587067 -79.73133087]
[75.50057220 -73.37084198]
[86.49774170 -63.16975021]
[93.85919952 -50.10035706]
[96.88334656 -35.40722275]
[101.07035828 -49.81100464]
[105.25736237 -64.21479034]
[97.90348053 -77.94643402]
[102.35489655 -92.49427032]
[115.49124146 -99.42045593]
[119.67825317 -113.82423401]
[123.86526489 -128.22801208]
[128.05227661 -142.63180542]
[132.23928833 -157.03558350]
[119.73934937 -164.38973999]
[109.37377167 -174.51953125]
[101.74396515 -186.83090210]
[97.29107666 -200.60339355]
[96.27050781 -215.03233337]
[98.73725128 -229.27584839]
[104.54297638 -242.50395203]
[113.34490967 -253.94692993]
[124.62607574 -262.94015503]
[137.72569275 -268.96261597]
[151.87780762 -271.66723633]
[166.25616455 -270.90063477]
[170.65716553 -285.24047852]
[175.05815125 -299.58035278]
[169.71562195 -311.32003784]
[173.67645264 -323.17312622]
[184.29997253 -328.95819092]
[188.91398621 -343.23092651]
[193.52798462 -357.50366211]
[198.14199829 -371.77639771]
[184.82028198 -378.75064087]
[172.86894226 -387.87606812]
[162.63183594 -398.89010620]
[154.40351868 -411.47592163]
[148.42071533 -425.27136230]
[144.85557556 -439.87951660]
[143.81068420 -454.88006592]
[145.31608582 -469.84140015]
[149.32847595 -484.33306885]
[155.73240662 -497.93814087]
[164.34364319 -510.26513672]
[174.91439819 -520.95941162]
[187.14053345 -529.71319580]
[200.67030334 -536.27471924]
[215.11439514 -540.45520020]
[230.05723572 -542.13427734]
[245.06890869 -541.26367188]
[259.71746826 -537.86846924]
[273.58148193 -532.04626465]
[286.26199341 -523.96472168]
[297.39422607 -513.85620117]
[306.65786743 -502.01165771]
[313.78634644 -488.77185059]
[318.57461548 -474.51770020]
[320.88485718 -459.65936279]
[320.65063477 -444.62429810]
[317.87866211 -429.84512329]
[312.64874268 -415.74703979]
[305.11129761 -402.73568726]
[295.48318481 -391.18545532]
[284.04150391 -381.42864990]
[271.11538696 -373.74597168]
[257.07675171 -368.35848999]
[242.32952881 -365.42123413]
[227.29803467 -365.01864624]
[212.41473389 -367.16238403]
[207.80072021 -352.88964844]
[203.18672180 -338.61691284]
[198.57270813 -324.34417725]
[203.16624451 -307.40704346]
[189.39801025 -295.17935181]
[184.99700928 -280.83950806]
[180.59600830 -266.49963379]
[193.82937622 -258.35113525]
[204.51501465 -247.05143738]
[211.92277527 -233.36428833]
[215.54428101 -218.21687317]
[215.12791443 -202.63696289]
[210.69618225 -187.68324280]
[202.54467773 -174.37330627]
[191.22230530 -163.61444092]
[177.49433899 -156.14178467]
[162.29074097 -152.46810913]
[146.64306641 -152.84857178]
[142.45605469 -138.44479370]
[138.26904297 -124.04100800]
[134.08203125 -109.63722229]
[129.89501953 -95.23344421]
[137.27133179 -82.34447479]
[133.23030090 -67.67734528]
[119.66114807 -60.02777863]
[115.47413635 -45.62399673]
[111.28712463 -31.22021294]
[109.06201172 -16.38616943]
[108.83868408 -1.38783181]
[108.61535645 13.61050510]
[119.14142609 24.08606529]
[119.12860107 39.29969406]
[108.06949615 50.26938248]
[107.84616852 65.26771545]
[107.62284088 80.26605988]
[107.39951324 95.26439667]
[109.32935333 97.62346649]
[110.44347382 100.73686981]
[110.46083069 104.30381775]
[109.21543884 107.92393494]
[106.68984222 111.14175415]
[105.57419586 126.10020447]
[112.26365662 140.43762207]
[103.60117340 152.55416870]
[102.48552704 167.51263428]
[116.26565552 173.78427124]
[127.04836273 184.37223816]
[133.54577637 197.98486328]
[134.99111938 212.97090149]
[131.22915649 227.51974487]
[122.73261261 239.88031006]
[110.54287720 248.57165527]
[96.14238739 252.56051636]
[95.02673340 267.51898193]
[93.91108704 282.47741699]
[101.72108459 292.74224854]
[100.48390198 305.17822266]
[91.40552521 313.17257690]
[90.06729126 328.11276245]
[88.72905731 343.05294800]
[87.39082336 357.99313354]
[86.60950470 372.97277832]
[86.38616943 387.97109985]
[86.16284180 402.96945190]
[85.93951416 417.96777344]
[100.52352142 421.78488159]
[113.76990509 428.98187256]
[124.90855408 439.14031982]
[133.29187012 451.66961670]
[138.43246460 465.84133911]
[140.03146362 480.83157349]
[137.99591064 495.76876831]
[132.44415283 509.78451538]
[123.69894409 522.06396484]
[112.26874542 531.89318848]
[98.81806946 538.70074463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 199]
[14 198]
[15 197]
[16 196]
[22 195]
[23 194]
[24 193]
[25 192]
[27 189]
[28 188]
[29 187]
[37 179]
[38 178]
[40 176]
[41 175]
[42 170]
[43 169]
[44 168]
[45 167]
[48 164]
[49 163]
[50 162]
[69 161]
[70 160]
[71 159]
[74 156]
[75 155]
[76 154]
[77 153]
[78 152]
[90 141]
[91 140]
[92 139]
[95 137]
[96 136]
[97 135]
[98 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
