%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[37.91159058 854.24249268]
[22.91824150 854.83587646]
[7.91744900 854.47711182]
[-7.03038836 853.16760254]
[-21.86507797 850.91271973]
[-36.52688599 847.72149658]
[-50.95677567 843.60681152]
[-65.09664154 838.58520508]
[-78.88954926 832.67687988]
[-92.27995300 825.90563965]
[-105.21394348 818.29876709]
[-117.63942719 809.88690186]
[-129.50637817 800.70385742]
[-140.76701355 790.78668213]
[-151.37599182 780.17523193]
[-161.29058838 768.91235352]
[-170.47088623 757.04327393]
[-178.87989807 744.61584473]
[-186.48379517 731.68011475]
[-193.25195312 718.28814697]
[-199.15710449 704.49389648]
[-204.17547607 690.35284424]
[-208.28684998 675.92199707]
[-211.47470093 661.25946045]
[-213.72616577 646.42425537]
[-215.03219604 631.47613525]
[-215.38751221 616.47528076]
[-214.79069519 601.48205566]
[-213.24415588 586.55688477]
[-210.75410461 571.75982666]
[-207.33059692 557.15051270]
[-202.98738098 542.78778076]
[-197.74197388 528.72937012]
[-191.61547852 515.03198242]
[-184.63256836 501.75073242]
[-176.82138062 488.93911743]
[-168.21334839 476.64868164]
[-158.84312439 464.92898560]
[-148.74847412 453.82714844]
[-137.97001648 443.38793945]
[-126.55115509 433.65335083]
[-114.53787994 424.66259766]
[-101.97856140 416.45187378]
[-88.92376709 409.05422974]
[-75.42607117 402.49948120]
[-61.53981781 396.81402588]
[-47.32093048 392.02072144]
[-32.82666016 388.13888550]
[-18.11536598 385.18417358]
[-3.24629235 383.16842651]
[11.72069073 382.09982300]
[26.72531700 381.98263550]
[41.70716476 382.81732178]
[43.48963165 367.92361450]
[45.27209854 353.02990723]
[47.05456543 338.13616943]
[44.85934448 333.89471436]
[45.30528259 328.22918701]
[49.11825180 322.82800293]
[51.34336853 307.99395752]
[42.31120300 296.20602417]
[44.35647202 281.13049316]
[56.78199005 271.73663330]
[59.00710678 256.90261841]
[61.23222351 242.06855774]
[63.45734024 227.23451233]
[65.68245697 212.40046692]
[67.90757751 197.56642151]
[55.89730835 206.55271912]
[40.91414642 205.84216309]
[29.80819321 195.75961304]
[27.65694046 180.91467285]
[35.44390869 168.09425354]
[49.60900879 163.15968323]
[63.67613602 168.36697388]
[71.21433258 181.33723450]
[74.97063446 166.81518555]
[70.66703033 152.55586243]
[81.61363983 141.13298035]
[85.36994171 126.61091614]
[89.12624359 112.08885193]
[84.22846985 96.04553986]
[96.11619568 84.21091461]
[99.65586853 69.63454437]
[95.39361572 54.39827728]
[105.91576385 43.85627747]
[109.45543671 29.27990150]
[112.99510956 14.70352650]
[116.53478241 0.12715094]
[112.27253723 -15.10911560]
[122.79467773 -25.65111542]
[126.22573853 -40.25343704]
[129.54800415 -54.88089752]
[132.87025452 -69.50835419]
[136.19252014 -84.13581848]
[131.70390320 -99.30693817]
[142.06791687 -110.00442505]
[145.39018250 -124.63188934]
[131.68081665 -130.84785461]
[119.50354767 -139.69653320]
[109.35703278 -150.81556702]
[101.65676117 -163.74966431]
[96.71805573 -177.96916199]
[94.74314880 -192.89178467]
[95.81291962 -207.90644836]
[99.88356018 -222.39834595]
[106.78836823 -235.77400208]
[116.24461365 -247.48573303]
[127.86505890 -257.05392456]
[141.17385864 -264.08676147]
[155.62600708 -268.29626465]
[170.62973022 -269.51004028]
[185.57061768 -267.67843628]
[199.83685303 -262.87637329]
[212.84422302 -255.30058289]
[224.06011963 -245.26121521]
[233.02523804 -233.16941833]
[239.37246704 -219.52033997]
[242.84187317 -204.87287903]
[243.29141235 -189.82685852]
[240.70268250 -174.99839783]
[235.18165588 -160.99470520]
[226.95443726 -148.38923645]
[216.35792542 -137.69818115]
[203.82603455 -129.35931396]
[189.87194824 -123.71411896]
[175.06706238 -120.99375916]
[160.01763916 -121.30962372]
[156.69538879 -106.68216705]
[161.42163086 -92.55730438]
[150.81997681 -80.81356049]
[147.49771118 -66.18609619]
[144.17546082 -51.55863953]
[140.85319519 -36.93117905]
[142.43716431 -29.71225548]
[137.37104797 -22.11144257]
[141.88647461 -7.91777563]
[131.11116028 3.66682339]
[127.57148743 18.24319839]
[124.03181458 32.81957245]
[120.49214172 47.39595032]
[125.00756836 61.58961487]
[114.23223877 73.17421722]
[110.69256592 87.75058746]
[116.14162445 98.04374695]
[113.30912781 109.34056854]
[103.64830017 115.84515381]
[99.89199829 130.36721802]
[96.13569641 144.88926697]
[100.17063141 160.18731689]
[89.49269867 170.57148743]
[85.73639679 185.09353638]
[82.74162292 199.79154968]
[80.51650238 214.62559509]
[78.29138184 229.45964050]
[76.06626892 244.29367065]
[73.84114838 259.12771606]
[71.61603546 273.96176147]
[80.73854828 286.58782959]
[78.27065277 301.59994507]
[66.17741394 310.21908569]
[63.95229340 325.05313110]
[61.94828033 339.91864014]
[60.16581345 354.81237793]
[58.38335037 369.70608521]
[56.60088348 384.59979248]
[71.35659027 387.32406616]
[85.90980530 390.97869873]
[100.20192719 395.54901123]
[114.17540741 401.01660156]
[127.77397919 407.35943604]
[140.94288635 414.55194092]
[153.62908936 422.56521606]
[165.78152466 431.36697388]
[177.35124207 440.92178345]
[188.29167175 451.19113159]
[198.55874634 462.13369751]
[208.11111450 473.70541382]
[216.91033936 485.85968018]
[224.92097473 498.54757690]
[232.11074829 511.71795654]
[238.45074463 525.31787109]
[243.91540527 539.29248047]
[248.48272705 553.58557129]
[252.13433838 568.13952637]
[254.85552979 582.89581299]
[256.63531494 597.79498291]
[257.46658325 612.77697754]
[257.34594727 627.78161621]
[256.27386475 642.74835205]
[254.25473022 657.61694336]
[251.29661560 672.32757568]
[247.41145325 686.82092285]
[242.61488342 701.03875732]
[236.92620850 714.92364502]
[230.36836243 728.41986084]
[222.96772766 741.47296143]
[214.75410461 754.03039551]
[205.76058960 766.04156494]
[196.02336121 777.45819092]
[185.58166504 788.23425293]
[174.47752380 798.32635498]
[162.75566101 807.69384766]
[150.46325684 816.29907227]
[137.64984131 824.10729980]
[124.36698151 831.08715820]
[110.66818237 837.21051025]
[96.60858917 842.45269775]
[82.24481964 846.79260254]
[67.63471985 850.21276855]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 166]
[54 165]
[55 164]
[56 163]
[59 162]
[60 161]
[63 158]
[64 157]
[65 156]
[66 155]
[67 154]
[68 153]
[76 152]
[77 151]
[79 149]
[80 148]
[81 147]
[83 144]
[84 143]
[86 141]
[87 140]
[88 139]
[89 138]
[91 136]
[92 134]
[93 133]
[94 132]
[95 131]
[97 129]
[98 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
