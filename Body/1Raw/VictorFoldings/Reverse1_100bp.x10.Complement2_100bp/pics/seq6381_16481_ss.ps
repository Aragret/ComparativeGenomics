%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[88.45295715 586.56237793]
[78.37611389 574.88073730]
[76.23712921 559.60235596]
[82.71855164 545.60253906]
[95.75218201 537.34857178]
[95.75218201 522.34857178]
[95.75218201 507.34857178]
[95.75218201 492.34857178]
[95.75218201 477.34857178]
[95.75218201 462.34857178]
[95.75218201 447.34857178]
[83.50035095 441.31451416]
[75.00281525 430.53860474]
[71.96265411 417.08843994]
[75.02877808 403.57632446]
[83.65840912 392.65179443]
[96.21220398 386.48208618]
[96.43553162 371.48376465]
[96.54719543 356.48419189]
[96.54719543 341.48419189]
[96.54719543 326.48419189]
[81.54405975 322.22381592]
[68.33457947 313.90469360]
[57.99142838 302.19268799]
[51.35723114 288.02957153]
[48.97592163 272.55734253]
[51.04817200 257.02606201]
[57.41448975 242.69285583]
[67.56748199 230.72026062]
[80.69226837 222.08181763]
[95.73188019 217.48300171]
[95.50855255 202.48466492]
[95.28522491 187.48632812]
[95.06189728 172.48799133]
[94.83856964 157.48965454]
[94.39196777 142.49629211]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[90.62299347 58.17348862]
[89.73017883 43.20008087]
[88.61453247 28.24162865]
[87.49887848 13.28317451]
[86.38323212 -1.67527843]
[75.66518402 -16.64875412]
[83.89594269 -32.14783859]
[82.55770874 -47.08802414]
[80.99718475 -62.00662613]
[79.21471405 -76.90034485]
[77.43225098 -91.79405975]
[75.64978790 -106.68778229]
[73.86731720 -121.58149719]
[71.20152283 -136.34271240]
[67.66184998 -150.91908264]
[64.12217712 -165.49546814]
[60.58250427 -180.07183838]
[57.04283142 -194.64820862]
[42.22084427 -192.29132080]
[27.25726509 -191.13476562]
[12.24914360 -191.18601990]
[-2.70618486 -192.44477844]
[-17.51172829 -194.90286255]
[-32.07146835 -198.54434204]
[-46.29097366 -203.34558105]
[-60.07802582 -209.27546692]
[-73.34320831 -216.29551697]
[-86.00049591 -224.36022949]
[-97.96779633 -233.41728210]
[-109.16748810 -243.40792847]
[-119.52694702 -254.26739502]
[-128.97898865 -265.92523193]
[-137.46229553 -278.30584717]
[-144.92187500 -291.32894897]
[-151.30932617 -304.91006470]
[-156.58322144 -318.96112061]
[-160.70938110 -333.39099121]
[-163.66101074 -348.10610962]
[-165.41900635 -363.01098633]
[-165.97193909 -378.00900269]
[-165.31623840 -393.00289917]
[-163.45614624 -407.89538574]
[-160.40371704 -422.58990479]
[-156.17877197 -436.99114990]
[-150.80870056 -451.00573730]
[-144.32832336 -464.54278564]
[-136.77967834 -477.51443481]
[-128.21173096 -489.83663940]
[-118.68001556 -501.42944336]
[-108.24637604 -512.21765137]
[-96.97847748 -522.13128662]
[-84.94939423 -531.10614014]
[-72.23713684 -539.08392334]
[-58.92415237 -546.01287842]
[-45.09678650 -551.84814453]
[-30.84470940 -556.55181885]
[-16.26035690 -560.09344482]
[-1.43831515 -562.45001221]
[13.52528858 -563.60626221]
[28.53340912 -563.55462646]
[43.48870850 -562.29553223]
[58.29420090 -559.83715820]
[72.85385895 -556.19537354]
[87.07325745 -551.39379883]
[100.86017609 -545.46362305]
[114.12520599 -538.44323730]
[126.78231812 -530.37829590]
[138.74942017 -521.32098389]
[149.94889832 -511.33004761]
[160.30810547 -500.47036743]
[169.75988770 -488.81231689]
[178.24293518 -476.43151855]
[185.70220947 -463.40823364]
[192.08937073 -449.82699585]
[197.36296082 -435.77581787]
[201.48880005 -421.34585571]
[204.44010925 -406.63067627]
[206.19776917 -391.72576904]
[206.75038147 -376.72772217]
[206.09434509 -361.73385620]
[204.23391724 -346.84140015]
[201.18118286 -332.14694214]
[196.95591736 -317.74578857]
[191.58552551 -303.73132324]
[185.10485840 -290.19442749]
[177.55592346 -277.22293091]
[168.98770142 -264.90093994]
[159.45573425 -253.30834961]
[149.02185059 -242.52037048]
[137.75373840 -232.60694885]
[125.72444916 -223.63238525]
[113.01201630 -215.65490723]
[99.69888306 -208.72621155]
[85.87139130 -202.89126587]
[71.61920929 -198.18788147]
[75.15888214 -183.61151123]
[78.69855499 -169.03514099]
[82.23822784 -154.45875549]
[85.77790070 -139.88238525]
[92.70965576 -153.18467712]
[106.08463287 -159.97509766]
[120.91429901 -157.72100830]
[131.66755676 -147.26312256]
[134.33370972 -132.50196838]
[127.91833496 -118.94309235]
[114.81422424 -111.64362335]
[99.90887451 -113.32608032]
[88.76103210 -123.36396027]
[90.54350281 -108.47024536]
[92.32596588 -93.57653046]
[94.10843658 -78.68280792]
[95.89089966 -63.78909302]
[99.02501678 -60.18543625]
[99.92861176 -54.57468033]
[97.49788666 -48.42625809]
[98.83612061 -33.48607254]
[107.91450500 -25.49172401]
[109.15167999 -13.05576134]
[101.34169006 -2.79092717]
[102.45733643 12.16752625]
[103.57298279 27.12598038]
[104.68863678 42.08443451]
[107.65871429 45.82444382]
[108.31087494 51.46994781]
[105.60803223 57.50370407]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[109.37700653 141.82650757]
[112.60736847 147.59507751]
[112.46147919 153.27624512]
[109.83690643 157.26632690]
[110.06023407 172.26466370]
[110.28356171 187.26300049]
[110.50688934 202.26133728]
[110.73021698 217.25967407]
[124.71637726 220.91038513]
[137.26828003 228.05458069]
[147.53157043 238.19874573]
[154.80955505 250.64543152]
[158.61050415 264.54119873]
[158.68080139 278.93511963]
[155.02195740 292.84387207]
[147.88998413 305.31893921]
[137.77754211 315.51119995]
[125.37992096 322.72882080]
[111.54719543 326.48419189]
[111.54719543 341.48419189]
[111.54719543 356.48419189]
[114.67660522 365.06582642]
[111.43386841 371.70709229]
[111.21054077 386.70541382]
[125.49186707 395.03823853]
[133.57589722 409.35409546]
[133.33865356 425.69915771]
[124.93958282 439.61358643]
[110.75218201 447.34857178]
[110.75218201 462.34857178]
[110.75218201 477.34857178]
[110.75218201 492.34857178]
[110.75218201 507.34857178]
[110.75218201 522.34857178]
[110.75218201 537.34857178]
[123.78581238 545.60253906]
[130.26722717 559.60235596]
[128.12825012 574.88073730]
[118.05140686 586.56237793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 206]
[6 205]
[7 204]
[8 203]
[9 202]
[10 201]
[11 200]
[17 195]
[18 194]
[19 192]
[20 191]
[21 190]
[31 179]
[32 178]
[33 177]
[34 176]
[35 175]
[36 172]
[37 171]
[38 170]
[40 168]
[41 167]
[42 166]
[43 163]
[44 162]
[45 161]
[46 160]
[48 157]
[49 156]
[50 153]
[51 152]
[52 151]
[53 150]
[54 149]
[55 140]
[56 139]
[57 138]
[58 137]
[59 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
