%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[26.33201599 501.99819946]
[25.01474571 516.97186279]
[21.37117195 531.55511475]
[15.49102116 545.38879395]
[7.51909733 558.13220215]
[-2.34828329 569.47155762]
[-13.86812782 579.12762451]
[-26.75675011 586.86260986]
[-40.69675446 592.48602295]
[-55.34486008 595.85937500]
[-70.34033966 596.89965820]
[-85.31391907 595.58111572]
[-99.89685822 591.93634033]
[-113.73003387 586.05505371]
[-126.47280121 578.08209229]
[-137.81135559 568.21374512]
[-147.46647644 556.69311523]
[-155.20039368 543.80383301]
[-160.82264709 529.86340332]
[-164.19480896 515.21502686]
[-165.23379517 500.21945190]
[-163.91406250 485.24597168]
[-160.26808167 470.66333008]
[-154.38565063 456.83062744]
[-146.41162109 444.08853149]
[-136.54237366 432.75079346]
[-125.02092743 423.09661865]
[-112.13102722 415.36376953]
[-98.19009399 409.74264526]
[-83.54143524 406.37173462]
[-68.54578400 405.33395386]
[-53.57242584 406.65493774]
[-38.99008942 410.30212402]
[-33.12112808 396.49795532]
[-27.25216675 382.69375610]
[-21.38320732 368.88958740]
[-15.51424599 355.08541870]
[-17.65499306 340.34545898]
[-5.13501072 330.67279053]
[0.73395026 316.86859131]
[6.60291100 303.06442261]
[12.47187233 289.26025391]
[12.19606781 281.87472534]
[18.53234482 275.29525757]
[24.60617828 261.58001709]
[30.68001366 247.86473083]
[36.75384521 234.14947510]
[42.82768250 220.43420410]
[48.59371567 206.58671570]
[54.04907227 192.61392212]
[59.50442886 178.64112854]
[59.00885391 171.26710510]
[65.14642334 164.50189209]
[70.80921173 150.61186218]
[76.47200012 136.72184753]
[72.07112122 125.45423889]
[76.67520142 113.83588409]
[88.32312012 108.29613495]
[86.81798553 94.39555359]
[97.87270355 85.83489990]
[96.15174103 70.10757446]
[108.25193787 61.42226791]
[114.12089539 47.61808777]
[119.98986053 33.81391144]
[125.85881805 20.00973511]
[131.62484741 6.16225004]
[130.88127136 1.88427651]
[131.47770691 -2.01556945]
[133.13072205 -5.16246367]
[135.46429443 -7.31212711]
[138.06036377 -8.36972523]
[144.53987122 -21.89807129]
[151.01936340 -35.42641830]
[155.63337708 -49.69915009]
[158.29916382 -64.46036530]
[160.96496582 -79.22158813]
[163.63075256 -93.98280334]
[166.29655457 -108.74401855]
[168.96234131 -123.50523376]
[162.33546448 -140.68562317]
[174.18524170 -153.62973022]
[176.63096619 -168.42900085]
[179.07670593 -183.22827148]
[164.62121582 -187.29057312]
[150.70037842 -192.91848755]
[137.48315430 -200.04365540]
[125.12999725 -208.57962036]
[113.79085541 -218.42274475]
[103.60338593 -229.45355225]
[94.69124603 -241.53813171]
[87.16263580 -254.52978516]
[81.10892487 -268.27081299]
[76.60361481 -282.59442139]
[73.70139313 -297.32669067]
[72.43748474 -312.28884888]
[72.82723999 -327.29922485]
[74.86592102 -342.17559814]
[78.52877808 -356.73742676]
[83.77135468 -370.80789185]
[90.53001404 -384.21624756]
[98.72270203 -396.79968262]
[108.24996948 -408.40548706]
[118.99617004 -418.89273071]
[130.83085632 -428.13412476]
[143.61035156 -436.01751709]
[157.17953491 -442.44717407]
[171.37368774 -447.34506226]
[186.02049255 -450.65170288]
[200.94218445 -452.32699585]
[215.95759583 -452.35055542]
[230.88446045 -450.72216797]
[245.54159546 -447.46151733]
[259.75106812 -442.60824585]
[273.34036255 -436.22122192]
[286.14456177 -428.37802124]
[298.00820923 -419.17382812]
[308.78729248 -408.72036743]
[318.35095215 -397.14456177]
[326.58312988 -384.58691406]
[333.38385010 -371.19985962]
[338.67059326 -357.14590454]
[342.37915039 -342.59567261]
[344.46456909 -327.72573853]
[344.90145874 -312.71667480]
[343.68453979 -297.75064087]
[340.82858276 -283.00930786]
[336.36828613 -268.67163086]
[330.35775757 -254.91166687]
[322.86999512 -241.89642334]
[313.99584961 -229.78392029]
[303.84307861 -218.72117615]
[292.53488159 -208.84248352]
[280.20861816 -200.26777649]
[267.01382446 -193.10112000]
[253.11071777 -187.42953491]
[238.66807556 -183.32183838]
[223.86119080 -180.82792664]
[208.86984253 -179.97805786]
[193.87597656 -180.78254700]
[191.43023682 -165.98326111]
[188.98451233 -151.18399048]
[195.77168274 -141.17095947]
[193.85522461 -128.82142639]
[183.72357178 -120.83943939]
[181.05776978 -106.07822418]
[178.39196777 -91.31700897]
[175.72618103 -76.55578613]
[173.06037903 -61.79457092]
[170.39459229 -47.03335571]
[179.64498901 -58.84140778]
[192.05633545 -67.26509094]
[206.44566345 -71.50151062]
[221.44146729 -71.14688110]
[235.61445618 -66.23500824]
[247.61372375 -57.23404694]
[256.29562378 -45.00191879]
[260.83258057 -30.70451355]
[260.79223633 -15.70456886]
[256.17840576 -1.43178141]
[247.43083191 10.75345612]
[235.38330078 19.68972588]
[221.18408203 24.52527809]
[206.18658447 24.79921913]
[191.82026672 20.48543739]
[179.45442200 11.99509811]
[170.26768494 0.13744485]
[165.13569641 -13.95732689]
[164.54769897 -28.94692039]
[158.06820679 -15.41857529]
[151.58871460 -1.89022982]
[145.51487732 11.82503700]
[145.90061951 19.20561981]
[139.66299438 25.87869644]
[133.79403687 39.68287277]
[127.92507172 53.48704910]
[122.05611420 67.29122925]
[124.19686127 82.03118896]
[111.67687988 91.70386505]
[113.18201447 105.60444641]
[102.12729645 114.16510010]
[104.78441620 132.38655090]
[90.36202240 142.38462830]
[84.69924164 156.27465820]
[79.03645325 170.16468811]
[73.47722626 184.09648132]
[68.02186584 198.06927490]
[62.56651306 212.04206848]
[63.35538483 217.20199585]
[62.20150757 221.69886780]
[59.68276596 224.90370178]
[56.54294586 226.50804138]
[50.46911240 240.22329712]
[44.39527893 253.93856812]
[38.32144547 267.65383911]
[32.24761200 281.36911011]
[26.27604866 295.12921143]
[20.40708733 308.93338013]
[14.53812695 322.73754883]
[8.66916656 336.54174805]
[10.39012623 352.26907349]
[-1.71006894 360.95437622]
[-7.57902956 374.75854492]
[-13.44799042 388.56271362]
[-19.31695175 402.36691284]
[-25.18591309 416.17108154]
[-12.44182777 424.14196777]
[-1.10164464 434.00839233]
[8.55537510 445.52743530]
[16.29141808 458.41543579]
[21.91597748 472.35498047]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 205]
[34 204]
[35 203]
[36 202]
[37 201]
[39 199]
[40 198]
[41 197]
[42 196]
[44 195]
[45 194]
[46 193]
[47 192]
[48 191]
[49 187]
[50 186]
[51 185]
[53 184]
[54 183]
[55 182]
[58 180]
[60 178]
[62 176]
[63 175]
[64 174]
[65 173]
[66 171]
[71 170]
[72 169]
[73 168]
[74 149]
[75 148]
[76 147]
[77 146]
[78 145]
[79 144]
[81 141]
[82 140]
[83 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
