%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxAUGUAUUUAUAAUAUGAUCGUAAAUGGUAGAGUGAAGAUCCUUAUGAUCAUAUAGCGAGUGUGGAGUAUAGGAGGGAUGAUACGGAUCUUCCUUAUUAUG\
) } def
/len { sequence length } bind def

/coor [
[13.14437675 583.96362305]
[9.28392506 598.49450684]
[3.08427954 612.19171143]
[-5.28542805 624.68164062]
[-15.59686565 635.62347412]
[-27.56873131 644.71875000]
[-40.87442398 651.71936035]
[-55.15095139 656.43432617]
[-70.00884247 658.73492432]
[-85.04276276 658.55853271]
[-99.84257507 655.90985107]
[-114.00452423 650.86120605]
[-127.14227295 643.55029297]
[-138.89741516 634.17657471]
[-148.94924927 622.99578857]
[-157.02355957 610.31286621]
[-162.90007019 596.47393799]
[-166.41847229 581.85644531]
[-167.48277283 566.85925293]
[-166.06394958 551.89135742]
[-162.20069885 537.36120605]
[-155.99841309 523.66516113]
[-147.62629700 511.17687988]
[-137.31275940 500.23703003]
[-125.33914185 491.14404297]
[-112.03209686 484.14599609]
[-97.75466156 479.43380737]
[-82.89633179 477.13604736]
[-67.86244202 477.31536865]
[-53.06314087 479.96685791]
[-48.02622604 465.83782959]
[-42.98931122 451.70880127]
[-37.95239258 437.57977295]
[-46.50135422 425.41207886]
[-46.24313736 410.36557007]
[-37.06722641 398.21417236]
[-22.32526398 393.74420166]
[-17.28834915 379.61517334]
[-12.25143242 365.48614502]
[-13.45271397 360.86380005]
[-11.76302624 355.43774414]
[-6.84848213 351.01522827]
[-1.39312518 337.04241943]
[4.06223202 323.06964111]
[9.51758862 309.09683228]
[9.02201271 301.72280884]
[15.15958595 294.95761108]
[20.82237244 281.06756592]
[26.48515892 267.17755127]
[32.14794540 253.28752136]
[37.81073380 239.39749146]
[43.47351837 225.50747681]
[40.15243149 208.27560425]
[54.79199219 197.10578918]
[60.24734879 183.13299561]
[52.84276199 168.03295898]
[58.76688385 151.93266296]
[74.81221008 144.96366882]
[80.05892944 130.91120911]
[79.45362091 123.54537964]
[85.48979187 116.68953705]
[90.94514465 102.71674347]
[89.98129272 97.56068420]
[91.97489929 92.23162079]
[96.77655792 88.41310883]
[102.64551544 74.60893250]
[108.51447296 60.80475616]
[114.38343811 47.00057983]
[112.66247559 31.27325249]
[124.76267242 22.58794594]
[130.63163757 8.78376865]
[136.50059509 -5.02040815]
[142.36955261 -18.82458496]
[146.12585449 -33.34664536]
[147.68638611 -48.26524734]
[141.42675781 -62.79548645]
[150.44615173 -74.64874268]
[152.00668335 -89.56735229]
[150.09852600 -93.46772766]
[149.58267212 -97.37904358]
[150.29158020 -100.86226654]
[151.93234253 -103.57786560]
[154.13003540 -105.31808472]
[156.57575989 -120.11735535]
[159.02148438 -134.91662598]
[161.46720886 -149.71589661]
[163.91293335 -164.51516724]
[158.52928162 -179.39222717]
[168.23820496 -190.68762207]
[159.30467224 -203.44810486]
[161.99580383 -218.42182922]
[174.21603394 -226.85993958]
[176.66175842 -241.65921021]
[179.10748291 -256.45849609]
[181.55322266 -271.25775146]
[167.43920898 -276.47225952]
[154.56724548 -284.26388550]
[143.40264893 -294.35092163]
[134.34901428 -306.36874390]
[127.73362732 -319.88293457]
[123.79561615 -334.40493774]
[122.67734528 -349.40979004]
[124.41924286 -364.35510254]
[128.95834351 -378.70059204]
[136.13053894 -391.92770386]
[145.67658997 -403.55822754]
[157.25138855 -413.17178345]
[170.43652344 -420.42083740]
[184.75537109 -425.04333496]
[199.69029236 -426.87216187]
[214.70140076 -425.84121704]
[229.24607849 -421.98776245]
[242.79852295 -415.45111084]
[254.86882019 -406.46755981]
[265.02066040 -395.36184692]
[272.88702393 -382.53543091]
[278.18359375 -368.45199585]
[280.71884155 -353.62066650]
[280.40118408 -338.57754517]
[277.24206543 -323.86642456]
[271.35568237 -310.01916504]
[262.95483398 -297.53628540]
[252.34323120 -286.86901855]
[239.90443420 -278.40304565]
[226.08811951 -272.44433594]
[211.39375305 -269.20834351]
[196.35249329 -268.81201172]
[193.90675354 -254.01275635]
[191.46102905 -239.21348572]
[189.01530457 -224.41421509]
[197.87097168 -212.49310303]
[195.60147095 -197.44969177]
[183.03747559 -188.24189758]
[188.59606934 -174.42338562]
[178.71220398 -162.06944275]
[176.26647949 -147.27017212]
[173.82075500 -132.47090149]
[171.37503052 -117.67162323]
[168.92930603 -102.87235260]
[166.92529297 -88.00682831]
[165.36476135 -73.08822632]
[171.73599243 -59.62506485]
[162.60498047 -46.70472717]
[161.04446411 -31.78612137]
[169.22824097 -44.35695648]
[180.58456421 -54.15663147]
[194.21784973 -60.41231155]
[209.05291748 -62.63064575]
[223.91978455 -60.63668060]
[237.64602661 -54.58767700]
[249.14910889 -44.96067810]
[257.52185059 -32.51491165]
[262.10397339 -18.23190498]
[262.53405762 -3.23807287]
[258.77822876 11.28410816]
[251.13267517 24.18935776]
[240.20036316 34.45991516]
[226.84342957 41.28580093]
[212.11529541 44.12869644]
[197.17747498 42.76440048]
[183.20800781 37.30050278]
[171.30860901 28.16791725]
[162.41769409 16.08687019]
[157.23645020 2.01012683]
[156.17373657 -12.95562458]
[150.30476379 0.84855258]
[144.43580627 14.65272903]
[138.56684875 28.45690727]
[140.70759583 43.19686890]
[128.18760681 52.86954117]
[122.31865692 66.67372131]
[116.44969177 80.47789764]
[110.58073425 94.28207397]
[104.91794586 108.17209625]
[99.46258545 122.14489746]
[94.11140442 136.15791321]
[88.86468506 150.21038818]
[95.82917786 161.73907471]
[94.89583588 174.98063660]
[86.62890625 185.11671448]
[74.22014618 188.58834839]
[68.76478577 202.56114197]
[73.21936035 214.66566467]
[68.38792419 226.19132996]
[57.36354446 231.17025757]
[51.70075989 245.06028748]
[46.03797150 258.95031738]
[40.37518692 272.84033203]
[34.71239853 286.73037720]
[29.04961205 300.62039185]
[23.49038696 314.55218506]
[18.03503036 328.52499390]
[12.57967281 342.49777222]
[7.12431574 356.47058105]
[1.87759733 370.52304077]
[-3.15931892 384.65206909]
[-8.19623470 398.78112793]
[0.39349833 411.56872559]
[-0.18678217 426.78439331]
[-9.50511551 438.60101318]
[-23.82336426 442.61669922]
[-28.86028099 456.74572754]
[-33.89719772 470.87475586]
[-38.93411255 485.00378418]
[-25.79495621 492.31216431]
[-14.03801441 501.68362427]
[-3.98402715 512.86248779]
[4.09272623 525.54382324]
[9.97190666 539.38165283]
[13.49312401 553.99841309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 204]
[31 203]
[32 202]
[33 201]
[37 197]
[38 196]
[39 195]
[42 194]
[43 193]
[44 192]
[45 191]
[47 190]
[48 189]
[49 188]
[50 187]
[51 186]
[52 185]
[54 182]
[55 181]
[58 177]
[59 176]
[61 175]
[62 174]
[65 173]
[66 172]
[67 171]
[68 170]
[70 168]
[71 167]
[72 166]
[73 165]
[74 144]
[75 143]
[77 141]
[78 140]
[83 139]
[84 138]
[85 137]
[86 136]
[87 135]
[89 133]
[92 130]
[93 129]
[94 128]
[95 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
