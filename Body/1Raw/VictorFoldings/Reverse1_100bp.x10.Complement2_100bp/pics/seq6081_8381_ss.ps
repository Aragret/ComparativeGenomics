%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[44.19961166 506.20330811]
[29.01383781 505.52453613]
[15.24587917 499.08157349]
[4.99525023 487.85693359]
[-0.17490333 473.56225586]
[0.52382976 458.37738037]
[6.98489761 444.61788940]
[18.22303391 434.38204956]
[32.52450562 429.23071289]
[33.19429016 414.24566650]
[33.86407471 399.26062012]
[34.42228699 384.27102661]
[34.86889267 369.27767944]
[25.66285896 381.12033081]
[11.80641174 386.86480713]
[-3.07840443 385.00949097]
[-15.10073471 376.03933716]
[-21.11797142 362.29913330]
[-19.55722237 347.38055420]
[-10.82646465 335.18325806]
[2.79210281 328.89559937]
[17.73861885 330.16116333]
[30.10610199 338.64910889]
[36.66154861 352.13986206]
[39.32734299 337.37866211]
[41.99314117 322.61743164]
[44.65893555 307.85623169]
[47.21476746 293.07556152]
[49.66049576 278.27630615]
[47.91542816 275.21246338]
[47.56766129 271.15115356]
[49.06983566 266.75836182]
[52.56007385 262.87695312]
[55.66418457 248.20164490]
[58.76829529 233.52635193]
[61.87240601 218.85104370]
[60.26588821 215.71234131]
[60.09981155 211.63957214]
[61.79663849 207.31822205]
[65.45671082 203.59652710]
[69.21301270 189.07447815]
[72.96930695 174.55241394]
[76.72560883 160.03034973]
[63.92741394 153.33018494]
[52.94519424 143.94525146]
[44.33182144 132.34802246]
[38.52091599 119.12230682]
[35.80500793 104.93393707]
[36.32082748 90.49717712]
[40.04240417 76.53881073]
[46.78238678 63.76153946]
[56.20146561 52.80859375]
[67.82546234 44.23137283]
[81.06920624 38.46167374]
[95.26596832 35.78995895]
[109.70104980 36.35072708]
[113.67314148 21.88620186]
[117.64524078 7.42167759]
[116.90002441 -1.68230319]
[121.78565216 -7.22779036]
[118.20798492 -22.63917923]
[129.19036865 -32.70082474]
[133.37738037 -47.10460663]
[137.56439209 -61.50838852]
[141.75140381 -75.91217041]
[145.93841553 -90.31595612]
[150.12541199 -104.71973419]
[135.92306519 -99.89345551]
[123.21292114 -107.85916901]
[121.36445618 -122.74483490]
[131.74028015 -133.57730103]
[146.69171143 -132.37127686]
[155.19686890 -120.01743317]
[160.44358826 -134.06990051]
[165.69030762 -148.12237549]
[170.93701172 -162.17485046]
[176.18373108 -176.22731018]
[181.43045044 -190.27978516]
[186.67716980 -204.33226013]
[191.92388916 -218.38473511]
[191.05828857 -223.53233337]
[192.14508057 -228.04588318]
[194.61582947 -231.28787231]
[197.73141479 -232.93876648]
[203.60037231 -246.74295044]
[201.87940979 -262.47027588]
[213.97961426 -271.15557861]
[219.84857178 -284.95974731]
[225.71752930 -298.76394653]
[231.58648682 -312.56811523]
[237.45544434 -326.37228394]
[243.32441711 -340.17648315]
[240.66729736 -358.39791870]
[255.08969116 -368.39599609]
[260.75247192 -382.28601074]
[266.41525269 -396.17605591]
[272.07803345 -410.06607056]
[277.74084473 -423.95611572]
[283.40362549 -437.84613037]
[289.06640625 -451.73614502]
[276.26669312 -459.62393188]
[264.93994141 -469.51101685]
[255.39514160 -481.12768555]
[247.89268494 -494.15701294]
[242.63726807 -508.24353027]
[239.77223206 -523.00299072]
[239.37574768 -538.03271484]
[241.45864868 -552.92266846]
[245.96408081 -567.26672363]
[252.76916504 -580.67346191]
[261.68823242 -592.77716064]
[272.47796631 -603.24768066]
[284.84399414 -611.79931641]
[298.44900513 -618.19885254]
[312.92184448 -622.27160645]
[327.86764526 -623.90649414]
[342.87869263 -623.05895996]
[357.54547119 -619.75207520]
[371.46786499 -614.07611084]
[384.26605225 -606.18585205]
[395.59091187 -596.29656982]
[405.13348389 -584.67810059]
[412.63342285 -571.64733887]
[417.88610840 -557.55975342]
[420.74832153 -542.79974365]
[421.14187622 -527.76995850]
[419.05612183 -512.88037109]
[414.54791260 -498.53723145]
[407.74026489 -485.13180542]
[398.81887817 -473.02978516]
[388.02713013 -462.56137085]
[375.65942383 -454.01208496]
[362.05319214 -447.61523438]
[347.57955933 -443.54525757]
[332.63345337 -441.91323853]
[317.62258911 -442.76367188]
[302.95642090 -446.07336426]
[297.29364014 -432.18334961]
[291.63085938 -418.29330444]
[285.96807861 -404.40328979]
[280.30529785 -390.51327515]
[274.64248657 -376.62322998]
[268.97970581 -362.73321533]
[273.38058472 -351.46560669]
[268.77651978 -339.84725952]
[257.12860107 -334.30749512]
[251.25962830 -320.50332642]
[245.39067078 -306.69915771]
[239.52171326 -292.89498901]
[233.65274048 -279.09078979]
[227.78378296 -265.28662109]
[229.92453003 -250.54666138]
[217.40455627 -240.87399292]
[211.53558350 -227.06980896]
[205.97636414 -213.13801575]
[200.72964478 -199.08554077]
[195.48292542 -185.03306580]
[190.23620605 -170.98060608]
[184.98948669 -156.92813110]
[179.74276733 -142.87565613]
[174.49604797 -128.82318115]
[169.24932861 -114.77071381]
[164.52920532 -100.53272247]
[160.34219360 -86.12894440]
[156.15518188 -71.72515869]
[151.96817017 -57.32137680]
[147.78115845 -42.91759491]
[143.59414673 -28.51381493]
[147.47128296 -14.13267994]
[136.18943787 -3.04077935]
[132.10977173 11.39377403]
[128.13766479 25.85829735]
[124.16557312 40.32282257]
[137.71577454 47.81895828]
[149.08418274 58.33366776]
[157.61317444 71.25868988]
[162.80935669 85.84635162]
[164.37213135 101.25276184]
[162.21110535 116.58671570]
[156.45129395 130.96115112]
[147.42587280 143.54454041]
[135.65696716 153.60896301]
[121.82536316 160.57221985]
[106.73120880 164.03149414]
[91.24767303 163.78665161]
[87.49137115 178.30871582]
[83.73506927 192.83078003]
[79.97876740 207.35282898]
[76.54770660 221.95515442]
[73.44359589 236.63046265]
[70.33948517 251.30575562]
[67.23537445 265.98104858]
[64.45976257 280.72201538]
[62.01403809 295.52130127]
[63.70234680 304.49835205]
[59.42015076 310.52200317]
[56.75435638 325.28323364]
[54.08856201 340.04446411]
[51.42276764 354.80566406]
[49.86224365 369.72427368]
[49.41563797 384.71762085]
[52.28815079 393.38864136]
[48.84911346 399.93041992]
[48.17932892 414.91543579]
[47.50954437 429.90048218]
[61.29440689 436.30722046]
[71.57453156 447.50485229]
[76.78227234 461.78588867]
[76.12349701 476.97253418]
[69.69864655 490.74896240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 205]
[10 204]
[11 203]
[12 201]
[13 200]
[24 199]
[25 198]
[26 197]
[27 196]
[28 194]
[29 193]
[33 192]
[34 191]
[35 190]
[36 189]
[40 188]
[41 187]
[42 186]
[43 185]
[56 173]
[57 172]
[58 171]
[60 170]
[62 168]
[63 167]
[64 166]
[65 165]
[66 164]
[67 163]
[73 162]
[74 161]
[75 160]
[76 159]
[77 158]
[78 157]
[79 156]
[80 155]
[84 154]
[85 153]
[87 151]
[88 150]
[89 149]
[90 148]
[91 147]
[92 146]
[94 143]
[95 142]
[96 141]
[97 140]
[98 139]
[99 138]
[100 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
