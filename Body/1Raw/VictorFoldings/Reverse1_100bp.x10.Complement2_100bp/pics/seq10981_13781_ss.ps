%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[68.64398956 625.90765381]
[72.99247742 611.34197998]
[82.58788300 599.55230713]
[95.96696472 592.33642578]
[94.40644073 577.41784668]
[92.84592438 562.49920654]
[91.28540039 547.58062744]
[89.72487640 532.66198730]
[87.63467407 530.79406738]
[86.15843964 527.98565674]
[85.65811920 524.46636963]
[86.40586853 520.59271240]
[88.54279327 516.81280518]
[87.87300873 501.82778931]
[87.20322418 486.84274292]
[86.53343964 471.85769653]
[85.86365509 456.87265015]
[77.56576538 444.50357056]
[84.67913818 430.37167358]
[84.00935364 415.38662720]
[82.03403473 413.39761353]
[80.72759247 410.50628662]
[80.43762207 406.96350098]
[81.41461182 403.14117432]
[83.77272797 399.49517822]
[83.99605560 384.49685669]
[84.21938324 369.49850464]
[84.44271088 354.50018311]
[76.24528503 345.60473633]
[76.30859375 333.10754395]
[85.14411163 323.71093750]
[85.59071350 308.71759033]
[86.03732300 293.72424316]
[76.89863586 278.74252319]
[86.70644379 263.15765381]
[86.92977142 248.15931702]
[87.15309906 233.16098022]
[87.37642670 218.16264343]
[87.59975433 203.16430664]
[87.59975433 188.16430664]
[87.37642670 173.16596985]
[87.15309906 158.16763306]
[78.01280212 170.06111145]
[63.92968750 175.22500610]
[49.26756287 172.05923462]
[38.56964874 161.54473877]
[35.15081024 146.93954468]
[40.07041168 132.76924133]
[51.80405807 123.42465210]
[66.71595764 121.80128479]
[80.18548584 128.40217590]
[88.03904724 141.18218994]
[89.71058655 126.27561951]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[96.93133545 57.24525070]
[87.25412750 45.03912354]
[89.04924774 29.93176842]
[100.74555969 20.78125572]
[102.30608368 5.86265182]
[100.08644104 -2.99799299]
[104.00251007 -9.26586533]
[101.91503906 -18.15857506]
[105.92398834 -24.36744881]
[107.92800140 -39.23297501]
[109.82129669 -54.11301041]
[111.60375977 -69.00672913]
[113.38623047 -83.90044403]
[111.29875946 -92.79315948]
[115.30770874 -99.00202942]
[117.31172180 -113.86755371]
[119.31573486 -128.73307800]
[121.31974792 -143.59861755]
[123.32376099 -158.46414185]
[124.99530792 -173.37071228]
[126.33354187 -188.31089783]
[127.67177582 -203.25108337]
[117.81391144 -215.31178284]
[119.38390350 -230.44418335]
[130.94267273 -239.76782227]
[132.28091431 -254.70800781]
[133.61914062 -269.64819336]
[123.72454834 -258.37448120]
[109.55075073 -253.46493530]
[94.80275726 -256.20294189]
[83.33565521 -265.87277222]
[78.14691162 -279.94674683]
[80.59286499 -294.74597168]
[90.03414154 -306.40197754]
[104.00280762 -311.86788940]
[118.84750366 -309.71496582]
[130.68785095 -300.50592041]
[136.42868042 -286.64889526]
[139.96835327 -301.22528076]
[143.50802612 -315.80166626]
[147.04769897 -330.37802124]
[150.58737183 -344.95440674]
[154.12704468 -359.53079224]
[140.64277649 -366.24810791]
[128.99166870 -375.79794312]
[119.75813293 -387.70126343]
[113.40531158 -401.36105347]
[110.25186157 -416.09210205]
[110.45596313 -431.15548706]
[114.00737762 -445.79568481]
[120.72796631 -459.27832031]
[130.28062439 -470.92712402]
[142.18620300 -480.15777588]
[155.84751892 -486.50729370]
[170.57931519 -489.65716553]
[185.64266968 -489.44940186]
[200.28199768 -485.89443970]
[213.76300049 -479.17059326]
[225.40948486 -469.61511230]
[234.63725281 -457.70730591]
[240.98345947 -444.04446411]
[244.12976074 -429.31188965]
[243.91836548 -414.24859619]
[240.35986328 -399.61010742]
[233.63273621 -386.13073730]
[224.07443237 -374.48657227]
[212.16438293 -365.26168823]
[198.50000000 -358.91879272]
[183.76667786 -355.77606201]
[168.70341492 -355.99111938]
[165.16374207 -341.41473389]
[161.62408447 -326.83834839]
[158.08441162 -312.26199341]
[154.54473877 -297.68560791]
[151.00506592 -283.10922241]
[148.55932617 -268.30996704]
[147.22109985 -253.36978149]
[145.88285828 -238.42959595]
[155.60064697 -227.20014954]
[154.45631409 -212.02961731]
[142.61195374 -201.91285706]
[141.27372742 -186.97267151]
[139.93548584 -172.03248596]
[141.90359497 -169.10691833]
[142.55247498 -165.08274841]
[141.38117981 -160.59037781]
[138.18928528 -156.46012878]
[136.18527222 -141.59460449]
[134.18125916 -126.72907257]
[132.17724609 -111.86354065]
[130.17323303 -96.99801636]
[128.27993774 -82.11798096]
[126.49748230 -67.22426605]
[124.71501160 -52.33054733]
[127.04140472 -45.31558228]
[122.79353333 -37.22896194]
[120.78952026 -22.36343384]
[118.89622498 -7.48339939]
[117.22468567 7.42317486]
[115.66416168 22.34177971]
[125.21367645 33.71465683]
[123.84360504 48.86647415]
[111.84993744 58.80577469]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[104.62918854 127.83614349]
[106.84882355 136.69679260]
[102.93276215 142.96466064]
[102.15143585 157.94430542]
[102.37476349 172.94264221]
[102.59809875 187.94097900]
[105.65527344 193.80316162]
[105.34030151 199.47746277]
[102.59809875 203.38763428]
[102.37476349 218.38597107]
[102.15143585 233.38430786]
[101.92810822 248.38264465]
[101.70478058 263.38098145]
[110.11190033 273.16275024]
[109.61711884 285.65029907]
[101.03067017 294.17083740]
[100.58406830 309.16418457]
[100.13745880 324.15753174]
[109.23958588 340.16482544]
[99.44104767 354.72351074]
[99.21772003 369.72183228]
[98.99439240 384.72018433]
[98.77106476 399.71850586]
[98.99439240 414.71685791]
[99.66417694 429.70190430]
[108.00997162 443.14282227]
[100.84869385 456.20288086]
[101.51847839 471.18792725]
[102.18826294 486.17294312]
[102.85804749 501.15798950]
[103.52783203 516.14300537]
[104.64347839 531.10150146]
[106.20400238 546.02008057]
[107.76452637 560.93872070]
[109.32505035 575.85729980]
[110.88557434 590.77587891]
[125.46829987 595.06689453]
[137.29576111 604.61566162]
[144.56434631 617.96618652]
[146.16566467 633.08251953]
[141.85551453 647.65960693]
[132.29116821 659.47448730]
[118.93110657 666.72552490]
[103.81265259 668.30694580]
[89.24126434 663.97766113]
[77.43896484 654.39776611]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 200]
[5 199]
[6 198]
[7 197]
[8 196]
[13 195]
[14 194]
[15 193]
[16 192]
[17 191]
[19 189]
[20 188]
[25 187]
[26 186]
[27 185]
[28 184]
[31 182]
[32 181]
[33 180]
[35 177]
[36 176]
[37 175]
[38 174]
[39 173]
[40 170]
[41 169]
[42 168]
[52 167]
[53 165]
[54 164]
[56 162]
[57 161]
[58 160]
[61 157]
[62 156]
[64 155]
[66 154]
[67 153]
[68 151]
[69 150]
[70 149]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[77 140]
[78 139]
[79 138]
[82 135]
[83 134]
[84 133]
[95 132]
[96 131]
[97 130]
[98 129]
[99 128]
[100 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
