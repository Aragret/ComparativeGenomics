%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[174.91085815 853.97473145]
[160.32933044 850.44537354]
[145.92219543 846.26074219]
[131.71885681 841.42932129]
[117.74834442 835.96105957]
[104.03920746 829.86706543]
[90.61943817 823.15985107]
[77.51646423 815.85302734]
[64.75704956 807.96160889]
[52.36726379 799.50170898]
[40.37241364 790.49053955]
[28.79700661 780.94659424]
[17.66469193 770.88934326]
[6.99820852 760.33929443]
[-3.18064904 749.31805420]
[-12.85108757 737.84808350]
[-21.99334908 725.95288086]
[-30.58875847 713.65667725]
[-38.61975479 700.98468018]
[-46.06993103 687.96264648]
[-52.92406845 674.61730957]
[-59.16816330 660.97589111]
[-64.78945923 647.06628418]
[-69.77646637 632.91680908]
[-74.11901093 618.55645752]
[-77.80820465 604.01458740]
[-80.83652496 589.32080078]
[-83.19777679 574.50524902]
[-84.88713074 559.59808350]
[-85.90115356 544.62982178]
[-86.23775482 529.63104248]
[-85.89626312 514.63232422]
[-84.87736511 499.66439819]
[-83.18314362 484.75778198]
[-80.81706238 469.94299316]
[-77.78395081 455.25021362]
[-74.09001923 440.70950317]
[-69.74279785 426.35058594]
[-64.75116730 412.20275879]
[-59.12533951 398.29495239]
[-52.87680054 384.65554810]
[-46.01831436 371.31246948]
[-38.56389236 358.29290771]
[-30.52876472 345.62350464]
[-21.92934608 333.33010864]
[-12.78320599 321.43789673]
[-3.10902882 309.97109985]
[7.07342148 298.95315552]
[17.74334335 288.40658569]
[28.87893867 278.35296631]
[40.45745468 268.81277466]
[52.45524216 259.80554199]
[64.84778595 251.34965515]
[77.60977173 243.46238708]
[90.71513367 236.15986633]
[104.13708496 229.45700073]
[117.84820557 223.36749268]
[131.82049561 217.90377808]
[126.99449921 203.70130920]
[122.16850281 189.49885559]
[117.34250641 175.29640198]
[112.51651001 161.09394836]
[101.09580994 151.53273010]
[103.98175049 135.97695923]
[98.85337830 130.65515137]
[99.19133759 121.52697754]
[94.57733154 107.25424957]
[91.42729950 105.02945709]
[89.27322388 101.42697906]
[88.70839691 96.92276001]
[90.09141541 92.24011993]
[86.11931610 77.77559662]
[82.14722443 63.31107330]
[78.17512512 48.84654999]
[74.20302582 34.38202667]
[63.08756256 23.12338448]
[67.17839050 8.80156898]
[63.20629501 -5.66295481]
[59.49122238 -9.32973957]
[57.73024368 -13.62534809]
[57.83566284 -17.70014000]
[59.39527130 -20.86241150]
[56.07301331 -35.48987198]
[52.75075150 -50.11733246]
[49.42849350 -64.74478912]
[34.35935593 -64.87851715]
[19.72739601 -68.48440552]
[6.32169104 -75.36798859]
[-5.13480377 -85.15805817]
[-14.02425480 -97.32664490]
[-19.86726379 -111.21749878]
[-22.34872627 -126.08152008]
[-21.33481979 -141.11709595]
[-16.88022423 -155.51339722]
[-9.22516632 -168.49403381]
[1.21752226 -179.35897827]
[13.88468266 -187.52229309]
[28.09318924 -192.54374695]
[43.07679749 -194.15254211]
[58.02745819 -192.26191711]
[72.13890076 -186.97383118]
[84.65011597 -178.57345581]
[94.88638306 -167.51382446]
[102.29568481 -154.39135742]
[106.47843170 -139.91374207]
[107.20906830 -124.86174011]
[104.44818115 -110.04708099]
[98.34466553 -96.26869965]
[89.22768402 -84.26964569]
[77.58889008 -74.69701385]
[64.05595398 -68.06705475]
[67.37821198 -53.43959045]
[70.70046997 -38.81212997]
[74.02272797 -24.18467140]
[77.67082214 -9.63505077]
[81.64291382 4.82947254]
[92.47426605 15.05351448]
[88.66754913 30.40992928]
[92.63964844 44.87445450]
[96.61174774 59.33897781]
[100.58383942 73.80350494]
[104.55593872 88.26802826]
[108.85005951 102.64023590]
[113.46407318 116.91297150]
[118.18420410 131.15095520]
[129.95008850 141.72804260]
[126.71896362 156.26794434]
[131.54496765 170.47041321]
[136.37095642 184.67286682]
[141.19696045 198.87532043]
[146.02294922 213.07777405]
[160.43142700 208.89770508]
[175.01406860 205.37298584]
[189.74110413 202.51081848]
[204.58241272 200.31706238]
[219.50769043 198.79618835]
[234.48645020 197.95129395]
[249.48809814 197.78410339]
[264.48196411 198.29498291]
[279.43743896 199.48287964]
[294.32394409 201.34535217]
[309.11111450 203.87861633]
[323.76867676 207.07748413]
[338.26672363 210.93540955]
[352.57562256 215.44453430]
[366.66616821 220.59564209]
[380.50955200 226.37818909]
[394.07751465 232.78039551]
[407.34228516 239.78913879]
[420.27682495 247.39013672]
[432.85464478 255.56785583]
[445.05014038 264.30557251]
[456.83831787 273.58544922]
[468.19509888 283.38851929]
[479.09732056 293.69476318]
[489.52270508 304.48312378]
[499.44992065 315.73156738]
[508.85873413 327.41708374]
[517.72985840 339.51583862]
[526.04522705 352.00311279]
[533.78784180 364.85336304]
[540.94189453 378.04037476]
[547.49273682 391.53717041]
[553.42700195 405.31619263]
[558.73254395 419.34930420]
[563.39855957 433.60781860]
[567.41552734 448.06262207]
[570.77520752 462.68417358]
[573.47076416 477.44262695]
[575.49664307 492.30776978]
[576.84869385 507.24929810]
[577.52423096 522.23663330]
[577.52185059 537.23919678]
[576.84155273 552.22637939]
[575.48468018 567.16741943]
[573.45410156 582.03198242]
[570.75384521 596.78955078]
[567.38952637 611.41003418]
[563.36798096 625.86352539]
[558.69744873 640.12054443]
[553.38739014 654.15197754]
[547.44873047 667.92913818]
[540.89361572 681.42382812]
[533.73541260 694.60858154]
[525.98870850 707.45635986]
[517.66931152 719.94097900]
[508.79434204 732.03692627]
[499.38180542 743.71942139]
[489.45101929 754.96472168]
[479.02221680 765.74975586]
[468.11669922 776.05255127]
[456.75677490 785.85198975]
[444.96563721 795.12811279]
[432.76739502 803.86193848]
[420.18695068 812.03564453]
[407.25000000 819.63256836]
[393.98300171 826.63708496]
[380.41302490 833.03497314]
[366.56777954 838.81311035]
[352.47561646 843.95971680]
[338.16528320 848.46429443]
[323.66598511 852.31762695]
[309.00738525 855.51177979]
[294.21945190 858.04034424]
[279.33233643 859.89807129]
[264.37649536 861.08123779]
[249.38246155 861.58734131]
[234.38087463 861.41540527]
[219.40237427 860.56573486]
[204.47758484 859.04010010]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 131]
[59 130]
[60 129]
[61 128]
[62 127]
[64 125]
[66 124]
[67 123]
[71 122]
[72 121]
[73 120]
[74 119]
[75 118]
[77 116]
[78 115]
[82 114]
[83 113]
[84 112]
[85 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
