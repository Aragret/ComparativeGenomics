%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[77.99254608 625.23541260]
[63.39626694 621.63757324]
[49.56619644 615.74475098]
[36.86056519 607.70959473]
[25.60848808 597.74035645]
[16.10141373 586.09509277]
[8.58560276 573.07550049]
[3.25573087 559.01892090]
[0.24985443 544.28930664]
[-0.35416672 529.26831055]
[1.45931292 514.34490967]
[5.64332008 499.90570068]
[12.08947849 486.32470703]
[20.63081741 473.95370483]
[31.04609489 463.11312866]
[43.06553268 454.08377075]
[56.37779617 447.09951782]
[70.63806152 442.34127808]
[85.47696686 439.93231201]
[85.47696686 424.93231201]
[85.47696686 409.93231201]
[85.47696686 394.93231201]
[85.47696686 379.93231201]
[85.36529541 364.93270874]
[84.91869354 349.93936157]
[84.24890900 334.95431519]
[83.57912445 319.96929932]
[82.90933990 304.98425293]
[82.23955536 289.99920654]
[81.56976318 275.01416016]
[80.89997864 260.02914429]
[71.53895569 271.74966431]
[57.10758972 275.84060669]
[42.98842621 270.77609253]
[34.44756699 258.44509888]
[34.67053604 243.44674683]
[43.57417679 231.37507629]
[57.83764648 226.73251343]
[72.14102936 231.25062561]
[81.14989471 243.24536133]
[82.26554108 228.28691101]
[83.38119507 213.32846069]
[84.49684143 198.36999512]
[85.61248779 183.41154480]
[86.72814178 168.45309448]
[87.84378815 153.49464417]
[88.95943451 138.53619385]
[86.32213593 131.63209534]
[90.20468140 123.36386871]
[91.54291534 108.42368317]
[82.98665619 120.74401093]
[70.59851837 129.20179749]
[56.00837326 132.68424988]
[41.13579559 130.73323059]
[27.93754005 123.60539246]
[18.15005684 112.23854828]
[13.06105995 98.12819672]
[13.34009552 83.13079071]
[18.95044899 69.21950531]
[29.15398598 58.22460175]
[42.60825348 51.59265137]
[57.54310989 50.19620514]
[71.99361420 54.21899033]
[84.05857086 63.13173294]
[92.15060425 75.76181030]
[95.20513916 90.44990540]
[99.81914520 76.17716980]
[104.43315887 61.90443802]
[109.04716492 47.63170242]
[105.92994690 32.12062454]
[117.20702362 22.39042664]
[121.82103729 8.11769390]
[126.43504333 -6.15503931]
[131.04905701 -20.42777252]
[135.66305542 -34.70050812]
[140.27706909 -48.97323990]
[134.77317810 -58.35491943]
[135.32966614 -68.99777985]
[141.52166748 -77.40060425]
[151.11030579 -80.93205261]
[156.14721680 -95.06108093]
[144.90248108 -103.94126892]
[136.96186829 -115.84227753]
[133.09071350 -129.59321594]
[133.65470886 -143.84605408]
[138.58549500 -157.20783997]
[147.38858032 -168.37680054]
[159.19285583 -176.26913452]
[172.83688354 -180.12423706]
[186.98307800 -179.57795715]
[192.22979736 -193.63043213]
[189.80828857 -209.26522827]
[201.50859070 -218.48217773]
[206.75531006 -232.53463745]
[206.82528687 -241.66880798]
[212.18617249 -246.75630188]
[217.64152527 -260.72909546]
[223.09689331 -274.70190430]
[228.55224609 -288.67468262]
[215.60563660 -296.31549072]
[204.05244446 -305.93420410]
[194.19190979 -317.28170776]
[186.27946472 -330.06408691]
[180.52003479 -343.95025635]
[177.06282043 -358.58047485]
[175.99737549 -373.57586670]
[177.35128784 -388.54794312]
[181.08949280 -403.10891724]
[187.11515808 -416.88162231]
[195.27220154 -429.50930786]
[205.34933472 -440.66491699]
[217.08555603 -450.05944824]
[230.17684937 -457.44961548]
[244.28411865 -462.64392090]
[259.04196167 -465.50787354]
[274.06811523 -465.96728516]
[288.97335815 -464.01025391]
[303.37161255 -459.68746948]
[316.88992310 -453.11087036]
[329.17813110 -444.45086670]
[339.91793823 -433.93173218]
[348.83120728 -421.82592773]
[355.68698120 -408.44705200]
[360.30776978 -394.14166260]
[362.57379150 -379.28024292]
[362.42642212 -364.24780273]
[359.86944580 -349.43368530]
[354.96908569 -335.22161865]
[347.85229492 -321.97973633]
[338.70343018 -310.05102539]
[327.75942993 -299.74447632]
[315.30377197 -291.32705688]
[301.65911865 -285.01675415]
[287.17889404 -280.97708130]
[272.23815918 -279.31265259]
[257.22390747 -280.06658936]
[242.52503967 -283.21932983]
[237.06968689 -269.24655151]
[231.61433411 -255.27374268]
[226.15896606 -241.30094910]
[220.80778503 -227.28791809]
[215.56106567 -213.23545837]
[218.35784912 -198.60578918]
[206.28227234 -188.38371277]
[201.03555298 -174.33123779]
[213.14027405 -164.26324463]
[221.07925415 -150.63577271]
[223.87670898 -135.08726501]
[221.17633057 -119.49435425]
[213.28649902 -105.74548340]
[201.14520264 -95.51213074]
[186.20858765 -90.04562378]
[170.27624512 -90.02416992]
[165.23933411 -75.89513397]
[170.10488892 -57.18115234]
[154.54980469 -44.35923004]
[149.93579102 -30.08649635]
[145.32179260 -15.81376362]
[140.70777893 -1.54103017]
[136.09376526 12.73170280]
[131.47975159 27.00443649]
[134.92700195 41.49463272]
[123.31990051 52.24571228]
[118.70589447 66.51844788]
[114.09188080 80.79117584]
[109.47787476 95.06391144]
[106.48310089 109.76191711]
[105.14486694 124.70210266]
[103.91789246 139.65184021]
[102.80223846 154.61029053]
[101.68659210 169.56874084]
[100.57094574 184.52719116]
[99.45529175 199.48564148]
[98.33964539 214.44410706]
[97.22399902 229.40255737]
[96.10834503 244.36100769]
[95.88501740 259.35934448]
[96.55480194 274.34439087]
[97.22459412 289.32943726]
[97.89437866 304.31445312]
[98.56416321 319.29949951]
[99.23394775 334.28454590]
[99.90373230 349.26959229]
[103.13409424 355.03814697]
[102.98820496 360.71929932]
[100.36363220 364.70938110]
[103.62046814 373.24349976]
[100.47696686 379.93231201]
[100.47696686 394.93231201]
[100.47696686 409.93231201]
[100.47696686 424.93231201]
[100.47696686 439.93231201]
[115.31586456 442.34127808]
[129.57614136 447.09951782]
[142.88839722 454.08377075]
[154.90783691 463.11312866]
[165.32312012 473.95370483]
[173.86445618 486.32470703]
[180.31060791 499.90570068]
[184.49461365 514.34490967]
[186.30809021 529.26831055]
[185.70407104 544.28930664]
[182.69819641 559.01892090]
[177.36833191 573.07550049]
[169.85252380 586.09509277]
[160.34544373 597.74035645]
[149.09336853 607.70959473]
[136.38774109 615.74475098]
[122.55766296 621.63757324]
[107.96138000 625.23541260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 192]
[20 191]
[21 190]
[22 189]
[23 188]
[24 186]
[25 183]
[26 182]
[27 181]
[28 180]
[29 179]
[30 178]
[31 177]
[40 176]
[41 175]
[42 174]
[43 173]
[44 172]
[45 171]
[46 170]
[47 169]
[49 168]
[50 167]
[66 166]
[67 165]
[68 164]
[69 163]
[71 161]
[72 160]
[73 159]
[74 158]
[75 157]
[76 156]
[80 154]
[81 153]
[90 145]
[91 144]
[93 142]
[94 141]
[96 140]
[97 139]
[98 138]
[99 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
