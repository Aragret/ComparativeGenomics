%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[214.96533203 441.98431396]
[220.51631165 428.03070068]
[227.64970398 414.81588745]
[236.26902771 402.51858521]
[246.25773621 391.30511475]
[257.48074341 381.32708740]
[248.88217163 369.03625488]
[240.28361511 356.74542236]
[231.68504333 344.45458984]
[218.04943848 338.46130371]
[216.47851562 322.71829224]
[213.08872986 321.74786377]
[210.00057983 319.08734131]
[208.00326538 314.89639282]
[207.78488159 309.68109131]
[199.74371338 297.01855469]
[191.70254517 284.35604858]
[179.96881104 281.41561890]
[173.16593933 270.93206787]
[175.39839172 258.22857666]
[167.54663086 245.44773865]
[159.69488525 232.66690063]
[151.84312439 219.88604736]
[143.99136353 207.10520935]
[136.13961792 194.32437134]
[133.63572693 209.11390686]
[122.99797058 219.68925476]
[108.19394684 222.10606384]
[94.74520111 215.46293640]
[87.66778564 202.23757935]
[89.60138702 187.36273193]
[99.82483673 176.38633728]
[114.52503204 173.40232849]
[128.22003174 179.52444458]
[121.94267273 165.90112305]
[115.66531372 152.27781677]
[109.38795471 138.65449524]
[103.11058807 125.03118134]
[96.83322906 111.40786743]
[95.32040405 126.33138275]
[88.27951813 139.57623291]
[76.75504303 149.17759705]
[62.45656586 153.71121216]
[47.50518036 152.50450134]
[34.11883926 145.73649597]
[24.28332520 134.41119385]
[19.45767593 120.20861816]
[20.35774803 105.23564911]
[26.85002518 91.71343231]
[37.97141266 81.64791107]
[52.07212067 76.53224182]
[67.06038666 77.12530518]
[80.71280670 83.33912659]
[91.00308990 94.25030518]
[80.40143585 82.50656128]
[85.12768555 68.38169861]
[81.80542755 53.75423813]
[78.48316193 39.12677765]
[75.16090393 24.49931717]
[71.83864594 9.87185764]
[66.88626099 2.19646049]
[68.57752991 -4.99807930]
[65.47341919 -19.67338181]
[62.36930847 -34.34868240]
[59.26520157 -49.02398682]
[56.16109085 -63.69928741]
[45.73545837 -75.59957123]
[50.67148209 -89.65250397]
[47.56737137 -104.32781219]
[44.46326065 -119.00311279]
[41.35915375 -133.67842102]
[33.25078964 -121.05880737]
[18.96555519 -116.48365021]
[5.03446293 -122.04464722]
[-2.17337823 -135.19938660]
[0.63735962 -149.93368530]
[12.18164444 -159.51123047]
[27.18158531 -159.55329895]
[38.78036118 -150.03906250]
[37.21984100 -164.95767212]
[28.08882523 -177.87800598]
[34.46006012 -191.34117126]
[32.89953613 -206.25978088]
[17.89053917 -207.11192322]
[3.21262836 -210.36077881]
[-10.75400352 -215.92219543]
[-23.64758682 -223.65211487]
[-35.13414764 -233.35032654]
[-44.91615295 -244.76559448]
[-52.74022675 -257.60226440]
[-58.40370941 -271.52783203]
[-61.75990295 -286.18154907]
[-62.72187042 -301.18392944]
[-61.26469421 -316.14630127]
[-57.42612457 -330.68115234]
[-51.30558395 -344.41195679]
[-43.06161118 -356.98306274]
[-32.90774536 -368.06887817]
[-21.10699272 -377.38223267]
[-7.96502638 -384.68188477]
[6.17774820 -389.77874756]
[20.95499802 -392.54083252]
[35.98395920 -392.89654541]
[50.87533951 -390.83673096]
[65.24342346 -386.41470337]
[78.71604156 -379.74499512]
[90.94421387 -371.00042725]
[101.61121368 -360.40744019]
[110.44072723 -348.24041748]
[117.20405579 -334.81457520]
[121.72601318 -320.47763062]
[123.88946533 -305.60095215]
[123.63838196 -290.56988525]
[120.97925568 -275.77374268]
[115.98097229 -261.59582520]
[108.77299500 -248.40336609]
[99.54203796 -236.53805542]
[88.52719116 -226.30725098]
[76.01377106 -217.97596741]
[62.32590485 -211.75997925]
[47.81814194 -207.82029724]
[49.37866592 -192.90168762]
[58.39805984 -181.04843140]
[52.13844299 -166.51820374]
[53.69896698 -151.59959412]
[56.03445435 -136.78251648]
[59.13856506 -122.10722351]
[62.24267578 -107.43192291]
[65.34678650 -92.75661469]
[75.55039215 -81.90600586]
[70.83639526 -66.80339813]
[73.94050598 -52.12809753]
[77.04460907 -37.45279312]
[80.14871979 -22.77749252]
[83.25283051 -8.10219002]
[86.46611023 6.54959774]
[89.78836823 21.17705727]
[93.11062622 35.80451965]
[96.43288422 50.43198013]
[99.75514221 65.05944061]
[110.11917114 75.75692749]
[105.63054657 90.92804718]
[110.45654297 105.13050079]
[116.73390961 118.75382233]
[123.01126862 132.37713623]
[129.28863525 146.00045776]
[135.56599426 159.62376404]
[141.84335327 173.24708557]
[148.92045593 186.47261047]
[156.77221680 199.25344849]
[164.62396240 212.03430176]
[172.47572327 224.81513977]
[180.32748413 237.59597778]
[188.17922974 250.37683105]
[204.57084656 258.76708984]
[204.36506653 276.31488037]
[212.40623474 288.97738647]
[220.44741821 301.63992310]
[228.76936340 314.11972046]
[243.01998901 320.99212646]
[243.97589111 335.85601807]
[252.57444763 348.14685059]
[261.17300415 360.43768311]
[269.77157593 372.72851562]
[282.99221802 365.60598755]
[296.95037842 360.06643677]
[311.45727539 356.18484497]
[326.31671143 354.01367188]
[341.32769775 353.58227539]
[356.28729248 354.89654541]
[370.99316406 357.93862915]
[385.24639893 362.66744995]
[398.85424805 369.01901245]
[411.63272095 376.90744019]
[423.40896606 386.22604370]
[434.02374268 396.84881592]
[443.33349609 408.63208008]
[451.21228027 421.41647339]
[457.55361938 435.02914429]
[462.27169800 449.28591919]
[465.30270386 463.99407959]
[466.60568237 478.95465088]
[466.16299438 493.96533203]
[463.98065186 508.82312012]
[460.08813477 523.32708740]
[454.53808594 537.28106689]
[447.40557861 550.49633789]
[438.78704834 562.79418945]
[428.79910278 574.00836182]
[417.57678223 583.98712158]
[405.27182007 592.59558105]
[392.05068970 599.71722412]
[378.09216309 605.25585938]
[363.58502197 609.13647461]
[348.72546387 611.30664062]
[333.71441650 611.73699951]
[318.75491333 610.42175293]
[304.04925537 607.37872314]
[289.79635620 602.64892578]
[276.18890381 596.29644775]
[263.41094971 588.40716553]
[251.63533020 579.08776855]
[241.02127075 568.46429443]
[231.71231079 556.68041992]
[223.83436584 543.89550781]
[217.49395752 530.28240967]
[212.77682495 516.02532959]
[209.74678040 501.31695557]
[208.44480896 486.35629272]
[208.88848877 471.34564209]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 164]
[7 163]
[8 162]
[9 161]
[11 159]
[15 158]
[16 157]
[17 156]
[20 154]
[21 153]
[22 152]
[23 151]
[24 150]
[25 149]
[34 148]
[35 147]
[36 146]
[37 145]
[38 144]
[39 143]
[54 142]
[56 140]
[57 139]
[58 138]
[59 137]
[60 136]
[62 135]
[63 134]
[64 133]
[65 132]
[66 131]
[68 129]
[69 128]
[70 127]
[71 126]
[79 125]
[80 124]
[82 122]
[83 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
