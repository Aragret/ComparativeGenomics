%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[64.01889038 639.39813232]
[50.07183838 644.94067383]
[35.72851562 649.35760498]
[21.07960892 652.62097168]
[6.21773195 654.71020508]
[-8.76315117 655.61199951]
[-23.76832390 655.32067871]
[-38.70291901 653.83813477]
[-53.47251511 651.17370605]
[-67.98373413 647.34423828]
[-82.14482117 642.37396240]
[-95.86624908 636.29431152]
[-109.06127167 629.14367676]
[-121.64646149 620.96728516]
[-133.54225159 611.81689453]
[-144.67341614 601.75024414]
[-154.96958923 590.83105469]
[-164.36569214 579.12835693]
[-172.80229187 566.71606445]
[-180.22605896 553.67279053]
[-186.59007263 540.08087158]
[-191.85406494 526.02636719]
[-195.98478699 511.59799194]
[-198.95610046 496.88708496]
[-200.74923706 481.98657227]
[-201.35284424 466.99072266]
[-200.76310730 451.99429321]
[-198.98376465 437.09216309]
[-196.02606201 422.37847900]
[-191.90869141 407.94631958]
[-186.65769958 393.88690186]
[-180.30627441 380.28912354]
[-172.89456177 367.23898315]
[-164.46945190 354.81893921]
[-155.08418274 343.10754395]
[-144.79811096 332.17880249]
[-133.67625427 322.10189819]
[-121.78894806 312.94046021]
[-109.21133423 304.75244141]
[-96.02293396 297.58959961]
[-82.30712891 291.49725342]
[-68.15064240 286.51385498]
[-53.64297867 282.67098999]
[-38.87585449 279.99288940]
[-23.94263649 278.49655151]
[-8.93773842 278.19137573]
[6.04397202 279.07931519]
[20.90777588 281.15475464]
[35.55969620 284.40457153]
[39.96069336 270.06472778]
[44.36169052 255.72486877]
[48.76269150 241.38502502]
[53.16368866 227.04516602]
[49.50108719 212.60791016]
[60.94683838 201.68521118]
[65.34783173 187.34535217]
[61.68523407 172.90809631]
[73.13098145 161.98539734]
[77.53198242 147.64553833]
[81.93297577 133.30569458]
[78.27037811 118.86843109]
[89.71612549 107.94573212]
[93.68822479 93.48120880]
[97.22789764 78.90483093]
[100.76757050 64.32846069]
[104.30724335 49.75208282]
[107.84691620 35.17570496]
[111.38658905 20.59933090]
[105.35477448 9.19845295]
[108.60305786 -2.86937237]
[118.86341858 -9.27652454]
[122.61972046 -23.79858398]
[126.37601471 -38.32064438]
[130.13232422 -52.84270096]
[133.88862610 -67.36476135]
[137.64492798 -81.88681793]
[141.40121460 -96.40888214]
[145.15751648 -110.93093872]
[148.58857727 -125.53326416]
[151.69268799 -140.20855713]
[154.79679871 -154.88386536]
[157.90090942 -169.55917358]
[161.00502014 -184.23446655]
[159.38539124 -189.19671631]
[159.79061890 -193.82154846]
[161.75311279 -197.39418030]
[164.58932495 -199.48898315]
[168.34562683 -214.01104736]
[172.10192871 -228.53309631]
[175.85823059 -243.05516052]
[161.91583252 -248.64425659]
[148.80265808 -255.97042847]
[136.73400879 -264.91336060]
[125.90808868 -275.32623291]
[116.50265503 -287.03802490]
[108.67216492 -299.85644531]
[102.54518890 -313.57098389]
[98.22234344 -327.95642090]
[95.77462006 -342.77658081]
[95.24220276 -357.78808594]
[96.63383484 -372.74441528]
[99.92667389 -387.39996338]
[105.06663513 -401.51409912]
[111.96932983 -414.85507202]
[120.52140045 -427.20376587]
[130.58241272 -438.35745239]
[141.98716736 -448.13293457]
[154.54837036 -456.36968994]
[168.05976868 -462.93249512]
[182.29948425 -467.71356201]
[197.03370667 -470.63439941]
[212.02046204 -471.64703369]
[227.01367188 -470.73483276]
[241.76712036 -467.91278076]
[256.03854370 -463.22720337]
[269.59362793 -456.75506592]
[282.20971680 -448.60263062]
[293.67971802 -438.90377808]
[303.81521606 -427.81774902]
[312.44982910 -415.52664185]
[319.44174194 -402.23220825]
[324.67614746 -388.15283203]
[328.06707764 -373.51965332]
[329.55889893 -358.57299805]
[329.12704468 -343.55825806]
[326.77868652 -328.72204590]
[322.55230713 -314.30795288]
[316.51733398 -300.55267334]
[308.77288818 -287.68209839]
[299.44613647 -275.90753174]
[288.69021606 -265.42239380]
[276.68176270 -256.39880371]
[263.61795044 -248.98493958]
[249.71331787 -243.30255127]
[235.19618225 -239.44497681]
[220.30491638 -237.47552490]
[205.28407288 -237.42655945]
[190.38029480 -239.29885864]
[186.62399292 -224.77679443]
[182.86769104 -210.25474548]
[179.11138916 -195.73268127]
[175.68032837 -181.13035583]
[172.57621765 -166.45506287]
[169.47210693 -151.77975464]
[166.36799622 -137.10444641]
[163.26388550 -122.42915344]
[164.87040710 -119.29045105]
[165.03648376 -115.21768188]
[163.33964539 -110.89633179]
[159.67958069 -107.17463684]
[155.92327881 -92.65258026]
[152.16697693 -78.13052368]
[148.41067505 -63.60845947]
[144.65437317 -49.08640289]
[140.89807129 -34.56434250]
[137.14176941 -20.04228210]
[133.38548279 -5.52022362]
[138.97898865 11.11346436]
[125.96295929 24.13900375]
[122.42328644 38.71537781]
[118.88361359 53.29175568]
[115.34394836 67.86812592]
[111.80427551 82.44450378]
[108.26460266 97.02088165]
[109.62400818 99.74879456]
[110.02089691 103.03163147]
[109.24780273 106.51383972]
[107.23153687 109.76821136]
[104.05597687 112.34673309]
[107.40378571 127.80967712]
[96.27282715 137.70669556]
[91.87182617 152.04653931]
[87.47083282 166.38638306]
[90.81864166 181.84933472]
[79.68768311 191.74635315]
[75.28668213 206.08619690]
[78.63449860 221.54914856]
[67.50353241 231.44616699]
[63.10253525 245.78601074]
[58.70153809 260.12585449]
[54.30054092 274.46569824]
[49.89954376 288.80557251]
[63.85195160 294.33459473]
[77.32096863 300.95471191]
[90.22143555 308.62399292]
[102.47178650 317.29400635]
[113.99457550 326.90988159]
[124.71695709 337.41088867]
[134.57112122 348.73056030]
[143.49478149 360.79739380]
[151.43151855 373.53506470]
[158.33114624 386.86306763]
[164.15003967 400.69711304]
[168.85140991 414.94970703]
[172.40554810 429.53082275]
[174.78997803 444.34817505]
[175.98960876 459.30816650]
[175.99687195 474.31616211]
[174.81170654 489.27728271]
[172.44161987 504.09698486]
[168.90159607 518.68151855]
[164.21401978 532.93865967]
[158.40850830 546.77832031]
[151.52177429 560.11297607]
[143.59738159 572.85833740]
[134.68539429 584.93377686]
[124.84218597 596.26300049]
[114.12997437 606.77435303]
[102.61649323 616.40136719]
[90.37453461 625.08325195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 182]
[50 181]
[51 180]
[52 179]
[53 178]
[55 176]
[56 175]
[58 173]
[59 172]
[60 171]
[62 169]
[63 164]
[64 163]
[65 162]
[66 161]
[67 160]
[68 159]
[71 157]
[72 156]
[73 155]
[74 154]
[75 153]
[76 152]
[77 151]
[78 150]
[79 146]
[80 145]
[81 144]
[82 143]
[83 142]
[87 141]
[88 140]
[89 139]
[90 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
