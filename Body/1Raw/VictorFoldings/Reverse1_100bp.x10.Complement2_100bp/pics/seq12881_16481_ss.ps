%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[80.82942963 577.59417725]
[78.54014587 562.74475098]
[78.33985901 547.72119141]
[80.23246765 532.81604004]
[84.18112946 518.31933594]
[90.10898590 504.51330566]
[97.90065002 491.66665649]
[107.40444946 480.02947998]
[118.43539429 469.82827759]
[130.77876282 461.26165771]
[144.19429016 454.49630737]
[139.36828613 440.29385376]
[134.54228210 426.09140015]
[129.71629333 411.88894653]
[119.00781250 406.26266479]
[114.87095642 394.46984863]
[120.03810883 382.65194702]
[116.18087006 397.14752197]
[106.48210144 408.59014893]
[92.81447601 414.77044678]
[77.81700897 414.49508667]
[64.38545990 407.81723022]
[55.11326218 396.02630615]
[51.79072952 381.39889526]
[55.05939102 366.75936890]
[64.28811646 354.93438721]
[77.69498444 348.20712280]
[92.69134521 347.87655640]
[106.38162994 354.00650024]
[116.12305450 365.41448975]
[114.11904144 350.54895020]
[112.11502075 335.68341064]
[102.74671173 324.10397339]
[108.57093048 309.39379883]
[106.42604065 307.58892822]
[104.86685181 304.82568359]
[104.26196289 301.32287598]
[104.89405060 297.42864990]
[106.91748810 293.58682251]
[105.80183411 278.62835693]
[104.68618774 263.66992188]
[103.57054138 248.71145630]
[102.45488739 233.75300598]
[101.33924103 218.79455566]
[100.22359467 203.83610535]
[99.10794830 188.87765503]
[97.99229431 173.91918945]
[82.71191406 171.89715576]
[68.18267059 166.75129700]
[55.03583908 158.70521545]
[43.84262085 148.10848999]
[35.08934402 135.42153931]
[29.15632820 121.19557190]
[26.30134773 106.04869843]
[26.64844704 90.63902283]
[30.18254852 75.63606262]
[36.75009918 61.69166946]
[46.06575012 49.41171265]
[57.72475052 39.32973099]
[71.22054291 31.88376808]
[85.96675110 27.39734077]
[84.62851715 12.45715618]
[83.29028320 -2.48302937]
[81.84086609 -17.41283798]
[80.28034210 -32.33144379]
[71.14932251 -45.25178146]
[77.52056122 -58.71493912]
[75.96003723 -73.63354492]
[74.39951324 -88.55214691]
[72.39550018 -103.41767883]
[69.83966827 -118.19833374]
[67.17387390 -132.95954895]
[64.50807953 -147.72076416]
[54.44138336 -159.92617798]
[59.79362869 -173.82592773]
[57.12783051 -188.58714294]
[54.46203613 -203.34835815]
[51.79624176 -218.10957336]
[49.13044739 -232.87078857]
[34.10829163 -232.43194580]
[19.18853188 -234.23704529]
[4.70447397 -238.24575806]
[-9.02030087 -244.36851501]
[-21.67917442 -252.46855164]
[-32.98934555 -262.36489868]
[-42.69813919 -273.83645630]
[-50.58865738 -286.62698364]
[-56.48462677 -300.45071411]
[-60.25432205 -314.99880981]
[-61.81352997 -329.94625854]
[-61.12741852 -344.95913696]
[-58.21131516 -359.70208740]
[-53.13036728 -373.84570312]
[-45.99808502 -387.07400513]
[-36.97380447 -399.09149170]
[-26.25913429 -409.62966919]
[-14.09344101 -418.45315552]
[-0.74851179 -425.36477661]
[13.47752190 -430.21014404]
[28.26684570 -432.88101196]
[43.28906250 -433.31771851]
[58.20856476 -431.51049805]
[72.69205475 -427.49972534]
[86.41595459 -421.37500000]
[99.07367706 -413.27316284]
[110.38243866 -403.37521362]
[120.08959961 -391.90225220]
[127.97829437 -379.11062622]
[133.87228394 -365.28604126]
[137.63990784 -350.73742676]
[139.19699097 -335.78973389]
[138.50874329 -320.77694702]
[135.59054565 -306.03442383]
[130.50758362 -291.89154053]
[123.37341309 -278.66424561]
[114.34741974 -266.64804077]
[103.63124847 -256.11138916]
[91.46430206 -247.28965759]
[78.11838531 -240.37992859]
[63.89166260 -235.53659058]
[66.55745697 -220.77537537]
[69.22325134 -206.01416016]
[71.88905334 -191.25292969]
[74.55484772 -176.49171448]
[84.43086243 -165.34211731]
[79.26929474 -150.38656616]
[81.93508911 -135.62535095]
[84.60088348 -120.86412811]
[88.88307953 -114.84045410]
[87.19477081 -105.86340332]
[89.39244843 -104.12319183]
[91.03322601 -101.40759277]
[91.74212646 -97.92436981]
[91.22627258 -94.01304626]
[89.31811523 -90.11267090]
[90.87863922 -75.19406891]
[92.43916321 -60.27546310]
[101.45855713 -48.42220306]
[95.19894409 -33.89196396]
[96.75946808 -18.97336006]
[100.58177948 -12.64787865]
[98.23046875 -3.82126355]
[99.56870270 11.11892128]
[100.90693665 26.05910683]
[115.35343170 27.66501236]
[129.20669556 32.06586075]
[141.93144226 39.09160614]
[153.03601074 48.47077942]
[162.09132385 59.84098434]
[168.74749756 72.76288605]
[172.74734497 86.73719788]
[173.93632507 101.22397614]
[172.26849365 115.66345215]
[167.80828857 129.49771118]
[160.72804260 142.19221497]
[151.30133057 153.25646973]
[139.89241028 162.26293945]
[126.94208527 168.86364746]
[112.95075226 172.80354309]
[114.06639862 187.76199341]
[115.18204498 202.72045898]
[116.29769897 217.67890930]
[117.41334534 232.63735962]
[118.52899170 247.59580994]
[119.64463806 262.55426025]
[120.76029205 277.51272583]
[121.87593842 292.47116089]
[123.43646240 307.38977051]
[132.94812012 320.03253174]
[126.98055267 333.67941284]
[128.98457336 348.54495239]
[130.98858643 363.41046143]
[134.31083679 378.03793335]
[148.25961304 390.05929565]
[143.91874695 407.06295776]
[148.74475098 421.26541138]
[153.57073975 435.46786499]
[158.39674377 449.67031860]
[173.15672302 446.86160278]
[188.16397095 446.13449097]
[203.12635803 447.50317383]
[217.75263977 450.94094849]
[231.75808716 456.38092041]
[244.87011719 463.71719360]
[256.83346558 472.80697632]
[267.41528320 483.47332764]
[276.40960693 495.50863647]
[283.64129639 508.67861938]
[288.96966553 522.72692871]
[292.29095459 537.38006592]
[293.54049683 552.35290527]
[292.69400024 567.35388184]
[289.76794434 582.09106445]
[284.81927490 596.27752686]
[277.94430542 609.63720703]
[269.27688599 621.91003418]
[258.98568726 632.85705566]
[247.27108765 642.26525879]
[234.36108398 649.95147705]
[220.50695801 655.76605225]
[205.97842407 659.59588623]
[191.05824280 661.36639404]
[176.03688049 661.04309082]
[161.20669556 658.63232422]
[146.85638428 654.18090820]
[133.26527405 647.77563477]
[120.69792938 639.54107666]
[109.39895630 629.63757324]
[99.58830261 618.25787354]
[91.45693970 605.62353516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 178]
[12 177]
[13 176]
[14 175]
[17 173]
[30 172]
[31 171]
[32 170]
[34 168]
[39 167]
[40 166]
[41 165]
[42 164]
[43 163]
[44 162]
[45 161]
[46 160]
[47 159]
[61 144]
[62 143]
[63 142]
[64 140]
[65 139]
[67 137]
[68 136]
[69 135]
[70 130]
[71 128]
[72 127]
[73 126]
[75 124]
[76 123]
[77 122]
[78 121]
[79 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
