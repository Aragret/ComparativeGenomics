%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[60.11421204 304.39288330]
[65.97282410 318.24899292]
[69.18539429 332.94573975]
[69.64250946 347.98254395]
[67.32860565 362.84729004]
[62.32247925 377.03366089]
[54.79464722 390.05850220]
[45.00149918 401.47817993]
[33.27659225 410.90371704]
[20.01926994 418.01412964]
[5.68106890 422.56723022]
[-9.24965382 424.40792847]
[-24.26436424 423.47354126]
[-38.85166931 419.79586792]
[-52.51472473 413.50018311]
[-64.78817749 404.80093384]
[-75.25399780 393.99441528]
[-83.55572510 381.44863892]
[-89.41059875 367.59097290]
[-92.61920929 352.89337158]
[-93.07227325 337.85644531]
[-90.75435638 322.99234009]
[-85.74440765 308.80731201]
[-78.21306610 295.78448486]
[-68.41683960 284.36746216]
[-56.68939590 274.94506836]
[-43.43015671 267.83822632]
[-29.09072876 263.28897095]
[-14.15951061 261.45230103]
[0.85494840 262.39074707]
[15.44126034 266.07235718]
[21.71862030 252.44903564]
[27.99598122 238.82572937]
[27.94019318 231.43528748]
[34.46955872 225.04737854]
[40.94905472 211.51904297]
[47.42854691 197.99069214]
[53.90804291 184.46234131]
[60.18540573 170.83903503]
[58.26435089 156.06883240]
[70.92695618 146.58363342]
[77.00079346 132.86836243]
[83.07462311 119.15309906]
[89.14846039 105.43783569]
[77.29243469 114.62666321]
[63.11658478 119.53026581]
[48.11692429 119.63114929]
[33.87640381 114.91866302]
[21.89785385 105.89013672]
[13.44540405 93.49835968]
[9.41106129 79.05107117]
[10.22057819 64.07292938]
[15.78852463 50.14461517]
[25.52730179 38.73601532]
[38.40915680 31.05110168]
[53.07463074 27.90088654]
[67.97604370 29.61781883]
[81.54081726 36.02070618]
[92.33742523 46.43383789]
[99.22647095 59.75828552]
[101.48094940 74.58789825]
[98.86286926 89.35784149]
[108.17774963 77.60059357]
[117.49263000 65.84333801]
[126.80751801 54.08609009]
[136.12239075 42.32883835]
[145.43728638 30.57158661]
[154.75216675 18.81433678]
[150.73333740 3.94304752]
[156.17814636 -10.27691746]
[168.80282593 -18.46724129]
[183.65176392 -17.66276169]
[192.96664429 -29.42001343]
[202.28152466 -41.17726517]
[211.59642029 -52.93451691]
[209.97067261 -68.42627716]
[219.58476257 -80.21710968]
[234.36381531 -81.67153931]
[236.86898804 -97.29315186]
[250.83714294 -102.46419525]
[260.15203857 -114.22145081]
[269.46691895 -125.97869873]
[258.36093140 -136.06979370]
[247.96154785 -146.88763428]
[238.31619263 -158.38285828]
[229.46888733 -170.50300598]
[221.46000671 -183.19279480]
[214.32608032 -196.39431763]
[208.09965515 -210.04731750]
[202.80915833 -224.08952332]
[198.47871399 -238.45686340]
[195.12809753 -253.08377075]
[192.77258301 -267.90350342]
[191.42292786 -282.84844971]
[191.08528137 -297.85040283]
[191.76118469 -312.84094238]
[193.44755554 -327.75164795]
[196.13670349 -342.51449585]
[199.81636047 -357.06210327]
[204.46974182 -371.32809448]
[210.07559204 -385.24743652]
[216.60835266 -398.75653076]
[224.03819275 -411.79379272]
[232.33125305 -424.29971313]
[241.44964600 -436.21725464]
[251.35180664 -447.49203491]
[261.99252319 -458.07257080]
[273.32327271 -467.91061401]
[285.29232788 -476.96130371]
[297.84509277 -485.18328857]
[310.92428589 -492.53906250]
[324.47021484 -498.99511719]
[338.42111206 -504.52194214]
[352.71328735 -509.09432983]
[367.28152466 -512.69140625]
[382.05938721 -515.29681396]
[396.97940063 -516.89855957]
[411.97354126 -517.48944092]
[426.97335815 -517.06671143]
[441.91040039 -515.63232422]
[456.71652222 -513.19281006]
[471.32418823 -509.75927734]
[485.66674805 -505.34741211]
[499.67871094 -499.97738647]
[513.29620361 -493.67361450]
[526.45703125 -486.46493530]
[539.10119629 -478.38421631]
[551.17095947 -469.46832275]
[562.61132812 -459.75790405]
[573.36999512 -449.29733276]
[583.39794922 -438.13430786]
[592.64941406 -426.31976318]
[601.08215332 -413.90759277]
[608.65771484 -400.95446777]
[615.34149170 -387.51943970]
[621.10308838 -373.66384888]
[625.91613770 -359.45092773]
[629.75866699 -344.94546509]
[632.61315918 -330.21371460]
[634.46661377 -315.32287598]
[635.31054688 -300.34085083]
[635.14111328 -285.33602905]
[633.95910645 -270.37689209]
[631.76989746 -255.53169250]
[628.58349609 -240.86813354]
[624.41442871 -226.45315552]
[619.28167725 -212.35250854]
[613.20874023 -198.63055420]
[606.22326660 -185.34988403]
[598.35717773 -172.57109070]
[589.64630127 -160.35250854]
[580.13049316 -148.74986267]
[569.85302734 -137.81610107]
[558.86090088 -127.60112000]
[547.20422363 -118.15151978]
[534.93621826 -109.51042175]
[522.11279297 -101.71724701]
[508.79254150 -94.80756378]
[495.03619385 -88.81289673]
[480.90655518 -83.76058960]
[466.46804810 -79.67370605]
[451.78659058 -76.57089233]
[436.92913818 -74.46630096]
[421.96350098 -73.36954498]
[406.95797729 -73.28561401]
[391.98101807 -74.21489716]
[377.10095215 -76.15315247]
[362.38571167 -79.09154510]
[347.90237427 -83.01666260]
[333.71710205 -87.91059113]
[319.89456177 -93.75100708]
[306.49786377 -100.51125336]
[293.58807373 -108.16049194]
[281.22415161 -116.66381836]
[271.90927124 -104.90656281]
[262.59439087 -93.14931488]
[260.75549316 -78.36865997]
[246.12106323 -72.35665894]
[248.08570862 -57.63674927]
[238.80657959 -45.58052826]
[223.35366821 -43.61963272]
[214.03878784 -31.86238098]
[204.72390747 -20.10512924]
[195.40901184 -8.34787846]
[199.58866882 5.92336702]
[194.50323486 20.08677864]
[181.90570068 28.63987923]
[166.50941467 28.12921906]
[157.19453430 39.88647079]
[147.87965393 51.64372253]
[138.56477356 63.40097427]
[129.24987793 75.15822601]
[119.93499756 86.91547394]
[110.62011719 98.67272949]
[102.86372375 111.51166534]
[96.78989410 125.22693634]
[90.71605682 138.94219971]
[84.64222717 152.65747070]
[86.12883759 168.40867615]
[73.90067291 176.91287231]
[74.22399902 183.51641846]
[71.56328583 188.53813171]
[67.43639374 190.94184875]
[60.95689392 204.47018433]
[54.47739792 217.99853516]
[47.99790192 231.52688599]
[41.61929703 245.10308838]
[35.34193802 258.72640991]
[29.06457710 272.34973145]
[41.34037399 281.04565430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 209]
[32 208]
[33 207]
[35 206]
[36 205]
[37 204]
[38 203]
[39 200]
[41 198]
[42 197]
[43 196]
[44 195]
[62 194]
[63 193]
[64 192]
[65 191]
[66 190]
[67 189]
[68 188]
[72 184]
[73 183]
[74 182]
[75 181]
[78 178]
[80 176]
[81 175]
[82 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
