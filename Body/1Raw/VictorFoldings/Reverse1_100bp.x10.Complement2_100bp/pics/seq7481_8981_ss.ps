%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[248.21530151 463.32595825]
[253.63995361 449.32403564]
[260.59823608 436.01757812]
[269.00265503 423.57385254]
[278.74749756 412.14941406]
[289.71023560 401.88790894]
[280.74954224 389.85852051]
[271.78884888 377.82916260]
[262.82812500 365.79977417]
[259.41098022 364.93069458]
[256.24496460 362.36331177]
[254.12374878 358.23370361]
[253.75019836 353.02722168]
[245.33557129 340.60971069]
[236.92095947 328.19223022]
[228.50634766 315.77471924]
[220.09172058 303.35723877]
[211.67710876 290.93972778]
[203.26248169 278.52224731]
[194.57266235 266.29574585]
[185.61196899 254.26637268]
[176.65127563 242.23699951]
[167.69056702 230.20761108]
[158.64057922 218.24528503]
[149.50177002 206.35064697]
[140.36296082 194.45600891]
[131.22416687 182.56138611]
[122.08536530 170.66674805]
[124.71784210 185.43394470]
[122.94026184 200.32824707]
[116.90641022 214.06114197]
[107.13826752 225.44461060]
[94.48087311 233.49386597]
[80.02922821 237.51255798]
[65.03353119 237.15304565]
[50.79107666 232.44641113]
[38.53396988 223.79983521]
[29.32257080 211.96133423]
[23.95376205 197.95504761]
[22.89199829 182.99267578]
[26.22913170 168.36859131]
[33.67646790 155.34796143]
[44.58973694 145.05715942]
[58.02483368 138.38645935]
[72.81948853 135.91294861]
[87.69380951 137.85060120]
[101.36102295 144.03179932]
[112.63650513 153.91911316]
[107.18115234 139.94631958]
[101.72579193 125.97352600]
[96.27043915 112.00072479]
[94.83328247 126.93171692]
[89.47264862 140.94113159]
[80.57553864 153.01760864]
[68.78423309 162.28935242]
[54.94995880 168.08700562]
[40.07142258 169.99205017]
[25.22272110 167.86694336]
[11.47579288 161.86511230]
[-0.17695777 152.41983032]
[-8.89431000 140.21295166]
[-14.04694939 126.12571716]
[-15.26290321 111.17508698]
[-12.45439148 96.44035339]
[-5.82416153 82.98524475]
[4.14914322 71.78108215]
[16.74554253 63.63671494]
[31.05569077 59.14008713]
[46.04652405 58.61581421]
[60.63584518 62.10174561]
[73.77043915 69.34622955]
[84.50209808 79.82627106]
[92.05655670 92.78639984]
[91.16374207 77.81298828]
[82.61875916 64.49781799]
[89.58480072 51.33258057]
[88.69197845 36.35917282]
[87.79916382 21.38576889]
[76.76295471 13.66458893]
[72.25454712 1.17920899]
[75.70910645 -11.43618202]
[85.64933014 -19.63505554]
[84.97954559 -34.62009430]
[84.30975342 -49.60513306]
[83.63996887 -64.59017181]
[82.97018433 -79.57521057]
[74.62439728 -93.01612854]
[81.78567505 -106.07619476]
[81.11589050 -121.06123352]
[67.99217224 -132.62788391]
[67.30773926 -149.76983643]
[78.99810028 -161.86009216]
[78.10528564 -176.83349609]
[77.21247101 -191.80690002]
[76.31964874 -206.78030396]
[61.78505325 -211.08395386]
[49.60078049 -220.10166931]
[41.23813629 -232.74453735]
[37.70695114 -247.48585510]
[39.43363571 -262.54553223]
[46.20968628 -276.10507202]
[57.21685791 -286.52706909]
[71.12598419 -292.55300903]
[86.25746155 -293.45526123]
[100.78410339 -289.12484741]
[112.95174408 -280.08468628]
[121.29107666 -267.42645264]
[124.79508209 -252.67863464]
[123.04064941 -237.62214661]
[116.23962402 -224.07511902]
[105.21326447 -213.67343140]
[91.29306030 -207.67312622]
[92.18587494 -192.69972229]
[93.07868958 -177.72631836]
[93.97150421 -162.75291443]
[104.71075439 -155.63265991]
[109.45901489 -143.44511414]
[106.27397919 -130.55845642]
[96.10092926 -121.73101807]
[96.77071381 -106.74597931]
[105.06859589 -94.37689209]
[97.95522308 -80.24499512]
[98.62500763 -65.25995636]
[99.29479980 -50.27491760]
[99.96458435 -35.28987885]
[100.63436890 -20.30484200]
[113.51909637 -9.49639606]
[114.62173462 7.62374020]
[102.77257538 20.49295235]
[103.66539001 35.46635818]
[104.55820465 50.43976212]
[113.03932953 62.68393707]
[106.13714600 76.92017365]
[107.02996063 91.89358521]
[110.24323273 106.54537201]
[115.69859314 120.51816559]
[121.15394592 134.49096680]
[126.60930634 148.46376038]
[133.97999573 161.52795410]
[143.11880493 173.42257690]
[152.25759888 185.31721497]
[161.39640808 197.21185303]
[170.53520203 209.10647583]
[178.24514771 214.00491333]
[179.71995544 221.24691772]
[188.68064880 233.27630615]
[197.64134216 245.30567932]
[206.60203552 257.33505249]
[211.39627075 259.39959717]
[214.59893799 262.76058960]
[215.98269653 266.59469604]
[215.67997742 270.10760498]
[224.09460449 282.52511597]
[232.50921631 294.94259644]
[240.92384338 307.36010742]
[249.33845520 319.77758789]
[257.75308228 332.19509888]
[266.16769409 344.61257935]
[274.85751343 356.83908081]
[283.81820679 368.86846924]
[292.77890015 380.89782715]
[301.73959351 392.92721558]
[314.70999146 385.36090088]
[328.44601440 379.29443359]
[342.77490234 374.80410767]
[357.51644897 371.94635010]
[372.48526001 370.75711060]
[387.49313354 371.25137329]
[402.35125732 373.42291260]
[416.87283325 377.24441528]
[430.87521362 382.66781616]
[444.18231201 389.62490845]
[456.62680054 398.02819824]
[468.05212402 407.77200317]
[478.31460571 418.73382568]
[487.28521729 430.77575684]
[494.85113525 443.74636841]
[500.91717529 457.48257446]
[505.40710449 471.81158447]
[508.26440430 486.55322266]
[509.45318604 501.52209473]
[508.95846558 516.52990723]
[506.78649902 531.38800049]
[502.96456909 545.90948486]
[497.54077148 559.91168213]
[490.58325195 573.21856689]
[482.17959595 585.66278076]
[472.43542480 597.08782959]
[461.47332764 607.34997559]
[449.43112183 616.32025146]
[436.46026611 623.88574219]
[422.72390747 629.95141602]
[408.39474487 634.44091797]
[393.65304565 637.29779053]
[378.68414307 638.48608398]
[363.67630005 637.99090576]
[348.81829834 635.81848145]
[334.29693604 631.99615479]
[320.29489136 626.57189941]
[306.98818970 619.61401367]
[294.54425049 611.20996094]
[283.11950684 601.46545410]
[272.85766602 590.50305176]
[263.88778687 578.46057129]
[256.32263184 565.48950195]
[250.25740051 551.75299072]
[245.76834106 537.42370605]
[242.91191101 522.68188477]
[241.72402954 507.71295166]
[242.21963501 492.70513916]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 162]
[7 161]
[8 160]
[9 159]
[13 158]
[14 157]
[15 156]
[16 155]
[17 154]
[18 153]
[19 152]
[20 148]
[21 147]
[22 146]
[23 145]
[24 143]
[25 142]
[26 141]
[27 140]
[28 139]
[48 138]
[49 137]
[50 136]
[51 135]
[73 134]
[74 133]
[76 131]
[77 130]
[78 129]
[82 126]
[83 125]
[84 124]
[85 123]
[86 122]
[88 120]
[89 119]
[92 115]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
