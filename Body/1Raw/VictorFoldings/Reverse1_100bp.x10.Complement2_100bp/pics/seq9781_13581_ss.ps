%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[167.45431519 595.91833496]
[180.45848083 588.18865967]
[177.13621521 573.56121826]
[173.81396484 558.93377686]
[170.49169922 544.30633545]
[167.16943359 529.67883301]
[163.84718323 515.05139160]
[160.52491760 500.42391968]
[157.20266724 485.79647827]
[153.88040161 471.16900635]
[139.74089050 457.97958374]
[145.99844360 438.81695557]
[142.24214172 424.29492188]
[138.48583984 409.77285767]
[134.72955322 395.25079346]
[130.97325134 380.72872925]
[120.71288300 374.32159424]
[117.46459961 362.25375366]
[123.49641418 350.85287476]
[119.95674133 336.27648926]
[116.41706848 321.70013428]
[112.87739563 307.12374878]
[109.33772278 292.54736328]
[104.70458984 286.78927612]
[105.85557556 277.72763062]
[102.53331757 263.10018921]
[96.58625793 276.87088013]
[84.60984039 285.90225220]
[69.73468781 287.83349609]
[55.84911346 282.15979004]
[46.58278275 270.36422729]
[44.35789108 255.53016663]
[49.75601959 241.53515625]
[61.36610794 232.03747559]
[76.15330505 229.51980591]
[90.25228119 234.64024353]
[99.97721100 246.05952454]
[98.86155701 231.10107422]
[97.74591064 216.14262390]
[96.63026428 201.18417358]
[95.51461792 186.22570801]
[94.39896393 171.26725769]
[90.76667786 164.83078003]
[93.37975311 156.07807922]
[92.48693848 141.10467529]
[80.72986603 150.41978455]
[66.08290863 147.18460083]
[59.34324265 133.78396606]
[65.47911072 120.09634399]
[79.96736908 116.21173096]
[92.12702942 124.99227142]
[92.35035706 109.99393463]
[92.23869324 94.99435425]
[84.09394073 81.43066406]
[91.44886780 68.47866821]
[91.00226593 53.48531723]
[90.55565643 38.49197006]
[90.10905457 23.49861908]
[80.57456207 35.07849121]
[66.08388519 38.95410538]
[52.04169083 33.67994308]
[43.68536758 21.22314453]
[44.13161850 6.22978354]
[53.21400070 -5.70798540]
[67.54501343 -10.13767052]
[81.77954102 -5.40710783]
[90.60882568 6.72042847]
[91.94705963 -8.21975613]
[93.28529358 -23.15994072]
[94.62352753 -38.10012817]
[95.29331207 -53.08516693]
[95.29331207 -68.08516693]
[85.71862030 -83.81433868]
[95.07935333 -98.65831757]
[94.85601807 -113.65665436]
[94.63269043 -128.65499878]
[91.37586212 -137.18908691]
[94.51936340 -143.87789917]
[94.51936340 -158.87789917]
[94.51936340 -173.87789917]
[94.51936340 -188.87789917]
[86.06144714 -176.48985291]
[72.85888672 -169.37001038]
[57.86115646 -169.10894775]
[44.41879654 -175.76498413]
[35.53486252 -187.85116577]
[33.19404221 -202.66738892]
[37.91928864 -216.90368652]
[48.65496826 -227.37962341]
[63.00269699 -231.75485229]
[77.75716400 -229.05192566]
[89.62217712 -219.87471008]
[95.94706726 -206.27336121]
[98.39279938 -221.07263184]
[93.00913239 -235.94969177]
[102.71805573 -247.24508667]
[105.16378021 -262.04437256]
[91.17797089 -267.63104248]
[78.72035980 -276.09402466]
[68.37362671 -287.03747559]
[60.62170410 -299.94955444]
[55.82715607 -314.22634888]
[54.21424103 -329.20007324]
[55.85839081 -344.17041016]
[60.68270874 -358.43716431]
[68.46155548 -371.33303833]
[78.83110046 -382.25488281]
[91.30632782 -390.69186401]
[105.30377197 -396.24935913]
[120.16872406 -398.66741943]
[135.20593262 -397.83300781]
[149.71209717 -393.78509521]
[163.00871277 -386.71304321]
[174.47387695 -376.94757080]
[183.57135010 -364.94549561]
[189.87562561 -351.26812744]
[193.09184265 -336.55520630]
[193.06956482 -321.49487305]
[189.80984497 -306.79153442]
[183.46514893 -293.13290405]
[174.33221436 -281.15777588]
[162.83821106 -271.42626953]
[149.52073669 -264.39355469]
[135.00267029 -260.38858032]
[119.96305847 -259.59863281]
[117.51732635 -244.79936218]
[123.07592773 -230.98085022]
[113.19207001 -218.62690735]
[110.74633789 -203.82763672]
[109.51936340 -188.87789917]
[109.51936340 -173.87789917]
[109.51936340 -158.87789917]
[109.51936340 -143.87789917]
[109.63103485 -128.87832642]
[109.85436249 -113.87998199]
[110.07769012 -98.88164520]
[118.53633118 -90.23422241]
[118.84513092 -77.74068451]
[110.29331207 -68.08516693]
[110.29331207 -53.08516693]
[121.63809967 -62.89820480]
[136.60827637 -61.95267105]
[146.62821960 -50.79021072]
[145.95808411 -35.80519104]
[134.98171997 -25.58170509]
[119.98691559 -25.97623444]
[109.56371307 -36.76189423]
[108.22547913 -21.82170677]
[106.88724518 -6.88152218]
[105.54901123 8.05866241]
[105.10240173 23.05201340]
[105.54901123 38.04536438]
[105.99561310 53.03871155]
[106.44222260 68.03206635]
[114.55503082 80.52332306]
[107.23204041 94.54774475]
[109.63584900 97.56338501]
[110.69873047 101.62394714]
[109.98382568 106.10679626]
[107.34869385 110.21726227]
[107.12536621 125.21559906]
[107.46034241 140.21186829]
[108.35315704 155.18527222]
[109.35742188 170.15161133]
[110.47306824 185.11006165]
[111.58871460 200.06851196]
[112.70436859 215.02697754]
[113.82001495 229.98542786]
[114.93566132 244.94387817]
[117.16078186 259.77792358]
[120.48303986 274.40539551]
[123.91410065 289.00769043]
[127.45377350 303.58407593]
[130.99343872 318.16046143]
[134.53311157 332.73681641]
[138.07278442 347.31320190]
[151.08880615 360.33874512]
[145.49530029 376.97244263]
[149.25160217 391.49450684]
[153.00790405 406.01654053]
[156.76420593 420.53860474]
[160.52050781 435.06066895]
[170.19602966 440.02987671]
[175.43167114 449.31256104]
[174.70915222 459.72534180]
[168.50785828 467.84674072]
[171.83012390 482.47421265]
[175.15237427 497.10165405]
[178.47463989 511.72912598]
[181.79690552 526.35656738]
[185.11915588 540.98406982]
[188.44142151 555.61151123]
[191.76367188 570.23895264]
[195.08593750 584.86645508]
[210.15318298 586.22033691]
[224.06382751 592.16589355]
[235.45500183 602.12060547]
[243.21075439 615.10919189]
[246.57124329 629.85919189]
[245.20722961 644.92553711]
[239.25236511 658.83215332]
[229.29003906 670.21667480]
[216.29624939 677.96374512]
[201.54400635 681.31433105]
[186.47859192 679.94018555]
[172.57594299 673.97601318]
[161.19810486 664.00610352]
[153.45976257 651.00708008]
[150.11904907 636.25262451]
[151.50325012 621.18811035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 194]
[3 193]
[4 192]
[5 191]
[6 190]
[7 189]
[8 188]
[9 187]
[10 186]
[12 182]
[13 181]
[14 180]
[15 179]
[16 178]
[19 176]
[20 175]
[21 174]
[22 173]
[23 172]
[25 171]
[26 170]
[37 169]
[38 168]
[39 167]
[40 166]
[41 165]
[42 164]
[44 163]
[45 162]
[51 161]
[52 160]
[53 156]
[55 154]
[56 153]
[57 152]
[58 151]
[67 150]
[68 149]
[69 148]
[70 147]
[71 140]
[72 139]
[74 136]
[75 135]
[76 134]
[78 133]
[79 132]
[80 131]
[81 130]
[93 129]
[94 128]
[96 126]
[97 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
