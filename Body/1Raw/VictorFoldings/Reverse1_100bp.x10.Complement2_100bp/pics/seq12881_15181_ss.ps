%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGAUCAUCACCCCACUCCGAACCUAAUCGCAAAUCUUCCCGAUAAACAACACCCAGAGUACUCAACCUCACAUCCUAUUUAGUACGAUUCCGCUCCUACxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[101.36421967 553.04608154]
[88.04905701 545.83599854]
[77.79827881 534.69146729]
[71.72382355 520.82141113]
[70.48459625 505.73022461]
[74.21501923 491.05499268]
[82.51045227 478.38751221]
[94.47106171 469.10192871]
[108.79945374 464.20538330]
[108.79945374 449.20538330]
[108.79945374 434.20538330]
[108.68778992 419.20581055]
[108.46446228 404.20745850]
[108.24113464 389.20913696]
[108.01780701 374.21078491]
[107.79447937 359.21246338]
[104.55173492 352.57119751]
[107.68114471 343.98953247]
[107.68114471 328.98953247]
[97.00027466 318.67187500]
[96.78659058 303.45971680]
[107.68114471 292.32659912]
[107.68114471 277.32659912]
[107.01136017 262.34155273]
[105.67312622 247.40138245]
[96.83120728 235.41514587]
[103.30646515 220.97972107]
[101.96823120 206.03953552]
[100.62999725 191.09934998]
[99.29176331 176.15916443]
[85.22876740 174.71633911]
[71.67467499 170.69934082]
[59.09646606 164.24656677]
[47.92749023 155.58033752]
[38.55253983 144.99922180]
[31.29461670 132.86776733]
[26.40376663 119.60394287]
[24.04849434 105.66470337]
[24.30994606 91.53030396]
[27.17911339 77.68770599]
[32.55714417 64.61382294]
[40.25875473 52.75908661]
[50.01860428 42.53192139]
[61.50044250 34.28467560]
[74.30868530 28.30148888]
[88.00205994 24.78850174]
[87.10924530 9.81509590]
[86.21643066 -5.15831041]
[72.16265869 -11.01091576]
[62.08469391 -22.33882713]
[57.94141388 -36.85961914]
[60.50311279 -51.67848206]
[69.20890808 -63.86529922]
[82.28847504 -71.03401947]
[81.39566040 -86.00742340]
[80.50283813 -100.98082733]
[79.61002350 -115.95423126]
[78.71720886 -130.92764282]
[66.96014404 -121.61252594]
[52.31317902 -124.84771729]
[45.57351303 -138.24835205]
[51.70938110 -151.93597412]
[66.19764709 -155.82058716]
[78.35729980 -147.04003906]
[78.58062744 -162.03837585]
[65.00108337 -168.92004395]
[55.79356384 -180.96614075]
[52.74176788 -195.75488281]
[56.39854431 -210.34217834]
[65.98664093 -221.84773254]
[79.56316376 -228.02377319]
[79.78649139 -243.02210999]
[80.00981903 -258.02044678]
[80.23314667 -273.01879883]
[80.23314667 -288.01879883]
[80.00981903 -303.01712036]
[79.78649139 -318.01547241]
[79.56316376 -333.01379395]
[71.62268829 -320.28790283]
[58.99349213 -312.19445801]
[44.11408615 -310.29623413]
[29.85744476 -314.95974731]
[18.97630310 -325.28448486]
[13.57163811 -339.27697754]
[14.68700790 -354.23544312]
[22.10704994 -367.27166748]
[34.39907074 -375.86856079]
[49.18967438 -378.36614990]
[63.62302780 -374.28222656]
[74.91227722 -364.40536499]
[80.87787628 -350.64129639]
[83.32360840 -365.44058228]
[85.76933289 -380.23983765]
[88.21505737 -395.03912354]
[74.05028534 -400.09866333]
[61.01665497 -407.60626221]
[49.53316116 -417.32064819]
[39.96894455 -428.92950439]
[32.63145447 -442.05966187]
[27.75656319 -456.28903198]
[25.50097466 -471.16021729]
[25.93720055 -486.19515991]
[29.05121613 -500.91055298]
[34.74291992 -514.83337402]
[42.82934189 -527.51599121]
[53.05054474 -538.55078125]
[65.07795715 -547.58300781]
[78.52494049 -554.32232666]
[92.95924377 -558.55206299]
[107.91684723 -560.13629150]
[122.91693878 -559.02410889]
[137.47732544 -555.25115967]
[151.12994385 -548.93878174]
[163.43592834 -540.28997803]
[173.99967957 -529.58264160]
[182.48162842 -517.16101074]
[188.60911560 -503.42443848]
[192.18516541 -488.81445312]
[193.09480286 -473.80072021]
[191.30882263 -458.86584473]
[186.88461304 -444.48995972]
[179.96440125 -431.13516235]
[170.77064514 -419.23077393]
[159.59887695 -409.15945435]
[146.80822754 -401.24496460]
[132.80987549 -395.74172974]
[118.05379486 -392.82662964]
[103.01432800 -392.59338379]
[100.56860352 -377.79412842]
[98.12287903 -362.99484253]
[95.67714691 -348.19558716]
[94.56150055 -333.23712158]
[94.78482819 -318.23880005]
[95.00815582 -303.24044800]
[95.23148346 -288.24212646]
[97.97368622 -284.33193970]
[98.28866577 -278.65765381]
[95.23148346 -272.79547119]
[95.00815582 -257.79711914]
[94.78482819 -242.79878235]
[94.56150055 -227.80044556]
[107.94812012 -221.22291565]
[117.18939972 -209.43698120]
[120.41024017 -194.74728394]
[116.91947937 -180.05596924]
[107.35738373 -168.28935242]
[93.57896423 -161.81504822]
[93.35563660 -146.81671143]
[93.69061279 -131.82044983]
[94.58342743 -116.84705353]
[95.47624969 -101.87364197]
[96.36906433 -86.90023804]
[97.26187897 -71.92683411]
[111.10063171 -66.36316681]
[121.19291687 -55.29721832]
[125.49740601 -40.88776398]
[123.10900116 -25.97750854]
[114.44855499 -13.53228664]
[101.18983459 -6.05112600]
[102.08264923 8.92227936]
[102.97546387 23.89568520]
[118.64057159 26.15388107]
[133.50071716 31.60100555]
[146.91418457 40.00183487]
[158.30172729 50.99358749]
[167.17161560 64.10160828]
[173.14079285 78.75984192]
[175.95150757 94.33529663]
[175.48237610 110.15537262]
[171.75364685 125.53691101]
[164.92636108 139.81567383]
[155.29533386 152.37506104]
[143.27645874 162.67271423]
[129.38874817 170.26394653]
[114.23194885 174.82093811]
[115.57018280 189.76112366]
[116.90841675 204.70129395]
[118.24665070 219.64147949]
[127.18428802 232.69633484]
[120.61331177 246.06314087]
[121.95154572 261.00332642]
[132.37562561 250.21730042]
[147.37045288 249.82348633]
[158.34631348 260.04748535]
[159.01574707 275.03256226]
[148.99525452 286.19451904]
[134.02503967 287.13934326]
[122.68114471 277.32659912]
[122.68114471 292.32659912]
[133.57569885 303.45971680]
[133.36201477 318.67187500]
[122.68114471 328.98953247]
[122.68114471 343.98953247]
[122.79281616 358.98913574]
[123.01614380 373.98745728]
[123.23947144 388.98580933]
[123.46279907 403.98413086]
[123.68612671 418.98248291]
[126.94295502 427.51657104]
[123.79945374 434.20538330]
[123.79945374 449.20538330]
[123.79945374 464.20538330]
[138.12783813 469.10192871]
[150.08845520 478.38751221]
[158.38388062 491.05499268]
[162.11431885 505.73022461]
[160.87509155 520.82141113]
[154.80062866 534.69146729]
[144.54985046 545.83599854]
[131.23468018 553.04608154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 202]
[10 201]
[11 200]
[12 198]
[13 197]
[14 196]
[15 195]
[16 194]
[18 193]
[19 192]
[22 189]
[23 188]
[24 181]
[25 180]
[27 178]
[28 177]
[29 176]
[30 175]
[46 161]
[47 160]
[48 159]
[54 153]
[55 152]
[56 151]
[57 150]
[58 149]
[64 148]
[65 147]
[71 141]
[72 140]
[73 139]
[74 138]
[75 135]
[76 134]
[77 133]
[78 132]
[91 131]
[92 130]
[93 129]
[94 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
