%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[243.57830811 364.62008667]
[251.94319153 352.14382935]
[261.83486938 340.83972168]
[273.09091187 330.89337158]
[264.67630005 318.47586060]
[256.26168823 306.05838013]
[247.84707642 293.64086914]
[239.43244934 281.22338867]
[230.56155396 269.12762451]
[213.78810120 267.90692139]
[202.87245178 254.67199707]
[204.94602966 237.30191040]
[195.45712280 225.68464661]
[185.96823120 214.06738281]
[176.47932434 202.45011902]
[166.99043274 190.83285522]
[150.26933289 185.50631714]
[147.46334839 167.30720520]
[137.71737671 155.90473938]
[127.88680267 144.57514954]
[121.12883759 141.58320618]
[117.99572754 133.00291443]
[108.33491516 121.52821350]
[98.67410278 110.05352020]
[91.48620605 106.40568542]
[88.95642090 98.33530426]
[79.46752167 86.71804047]
[69.97863007 75.10077667]
[65.86616516 73.70735931]
[62.72676086 71.31807709]
[60.75400162 68.36111450]
[59.98252487 65.28354645]
[60.29563141 62.49784851]
[51.51502991 50.33639145]
[42.73442459 38.17493820]
[33.95382309 26.01348114]
[24.72672462 14.18721104]
[15.06591320 2.71251130]
[5.40510273 -8.76218891]
[-4.25570726 -20.23688889]
[-14.08628845 -31.56648254]
[-24.08446121 -42.74845505]
[-34.08263397 -53.93043137]
[-44.08080292 -65.11240387]
[-42.60481644 -50.18519974]
[-48.69999695 -36.47940826]
[-60.77308273 -27.57768822]
[-75.66819763 -25.80692863]
[-89.49179077 -31.63000488]
[-98.63041687 -43.52477646]
[-100.69525146 -58.38197708]
[-95.14655304 -72.31797791]
[-83.43474579 -81.68992615]
[-68.62126160 -84.04803467]
[-54.57903290 -78.77640533]
[-61.90328979 -84.23470306]
[-62.83537292 -91.56635284]
[-70.87654877 -104.22887421]
[-78.91771698 -116.89140320]
[-86.95889282 -129.55392456]
[-95.00006104 -142.21644592]
[-103.04123688 -154.87896729]
[-116.62940216 -148.47859192]
[-130.91261292 -143.83175659]
[-145.66561890 -141.01179504]
[-160.65573120 -140.06314087]
[-175.64653015 -141.00079346]
[-190.40159607 -143.80993652]
[-204.68821716 -148.44628906]
[-218.28106689 -154.83670044]
[-230.96578979 -162.88041687]
[-242.54229736 -172.45054626]
[-252.82803345 -183.39617920]
[-261.66076660 -195.54467773]
[-268.90121460 -208.70443726]
[-274.43515015 -222.66792297]
[-278.17532349 -237.21488953]
[-280.06271362 -252.11592102]
[-280.06759644 -267.13601685]
[-278.18988037 -282.03826904]
[-274.45916748 -296.58767700]
[-268.93429565 -310.55474854]
[-261.70239258 -323.71920776]
[-252.87754822 -335.87344360]
[-242.59892273 -346.82574463]
[-231.02862549 -356.40341187]
[-218.34913635 -364.45535278]
[-204.76043701 -370.85458374]
[-190.47682190 -375.50021362]
[-175.72358704 -378.31893921]
[-160.73339844 -379.26632690]
[-145.74267578 -378.32742310]
[-130.98785400 -375.51702881]
[-116.70162201 -370.87948608]
[-103.10929871 -364.48791504]
[-90.42526245 -356.44314575]
[-78.84955597 -346.87203979]
[-68.56473541 -335.92553711]
[-59.73302078 -323.77627563]
[-52.49369049 -310.61590576]
[-46.96092606 -296.65197754]
[-43.22198105 -282.10467529]
[-41.33583069 -267.20349121]
[-41.33221817 -252.18339539]
[-43.21120071 -237.28129578]
[-46.94314575 -222.73220825]
[-52.46919250 -208.76560974]
[-59.70218658 -195.60176086]
[-68.52806091 -183.44827271]
[-78.80760956 -172.49682617]
[-90.37871552 -162.92015076]
[-82.33753967 -150.25762939]
[-74.29636383 -137.59509277]
[-66.25519562 -124.93257141]
[-58.21401978 -112.27005005]
[-50.17284775 -99.60752106]
[-42.03763199 -87.00521088]
[-32.89883041 -75.11058044]
[-22.90065765 -63.92860413]
[-12.90248585 -52.74662781]
[-2.90431380 -41.56465530]
[1.72950029 -40.40844727]
[5.68618965 -36.32903290]
[7.21899271 -29.89769936]
[16.87980270 -18.42299843]
[26.54061317 -6.94829941]
[36.20142365 4.52640104]
[40.06544495 -9.96736813]
[53.74433899 -16.12268066]
[67.15453339 -9.40206814]
[70.41053772 5.24028349]
[61.11213684 17.01057625]
[46.11527634 17.23287773]
[54.89588165 29.39433289]
[63.67648315 41.55578995]
[72.45708466 53.71724701]
[81.59588623 65.61187744]
[91.08478546 77.22914124]
[100.57368469 88.84640503]
[110.14880371 100.39270782]
[119.80961609 111.86740875]
[129.47042847 123.34210968]
[139.21640015 134.74456787]
[149.04696655 146.07415771]
[157.03480530 150.50500488]
[158.93804932 157.64639282]
[171.69869995 159.52484131]
[179.50898743 169.28103638]
[178.60769653 181.34396362]
[188.09658813 192.96122742]
[197.58549500 204.57849121]
[207.07438660 216.19575500]
[216.56329346 227.81301880]
[230.03082275 227.61276245]
[240.99468994 235.09634399]
[245.57856750 247.34666443]
[242.31880188 259.81274414]
[246.61264038 245.44046021]
[260.46875000 239.69514465]
[273.67288208 246.81204224]
[276.49148560 261.54486084]
[266.84677124 273.03308105]
[251.84994507 272.80877686]
[260.26455688 285.22625732]
[268.67916870 297.64376831]
[277.09381104 310.06124878]
[285.50842285 322.47875977]
[298.91812134 315.71054077]
[313.08322144 310.71276855]
[327.77114868 307.56744385]
[342.74072266 306.32626343]
[357.74609375 307.00961304]
[372.54089355 309.60623169]
[386.88214111 314.07348633]
[400.53439331 320.33804321]
[413.27340698 328.29702759]
[424.89004517 337.81976318]
[435.19354248 348.74984741]
[444.01467896 360.90777588]
[451.20861816 374.09396362]
[456.65725708 388.09185791]
[460.27105713 402.67160034]
[461.99075317 417.59375000]
[461.78805542 432.61331177]
[459.66632080 447.48364258]
[455.66036987 461.96054077]
[449.83599854 475.80630493]
[442.28884888 488.79354858]
[433.14282227 500.70904541]
[422.54815674 511.35708618]
[410.67877197 520.56286621]
[397.72961426 528.17517090]
[383.91326904 534.06903076]
[369.45669556 538.14770508]
[354.59722900 540.34411621]
[339.57885742 540.62225342]
[324.64825439 538.97760010]
[310.05053711 535.43707275]
[296.02545166 530.05883789]
[282.80328369 522.93127441]
[270.60116577 514.17132568]
[259.61944580 503.92288208]
[250.03849792 492.35421753]
[242.01559448 479.65536499]
[235.68251038 466.03475952]
[231.14324951 451.71612549]
[228.47232056 436.93457031]
[227.71360779 421.93280029]
[228.87954712 406.95721436]
[231.95101929 392.25366211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 167]
[5 166]
[6 165]
[7 164]
[8 163]
[9 157]
[12 153]
[13 152]
[14 151]
[15 150]
[16 149]
[18 146]
[19 144]
[20 143]
[22 142]
[23 141]
[24 140]
[26 139]
[27 138]
[28 137]
[33 136]
[34 135]
[35 134]
[36 133]
[37 127]
[38 126]
[39 125]
[40 124]
[41 121]
[42 120]
[43 119]
[44 118]
[55 117]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
