%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[151.63063049 801.36254883]
[137.80068970 795.54144287]
[124.36778259 788.85491943]
[111.38601685 781.32983398]
[98.90765381 772.99664307]
[86.98294067 763.88873291]
[75.65990448 754.04284668]
[64.98412323 743.49865723]
[54.99860001 732.29852295]
[45.74353409 720.48767090]
[37.25619507 708.11364746]
[29.57075882 695.22619629]
[22.71817017 681.87719727]
[16.72602654 668.12054443]
[11.61845112 654.01147461]
[7.41601467 639.60687256]
[4.13563681 624.96478271]
[1.79052746 610.14410400]
[0.39012933 595.20446777]
[-0.05991859 580.20617676]
[0.44219586 565.20947266]
[1.89445090 550.27484131]
[4.29099846 535.46234131]
[7.62218904 520.83172607]
[11.87460899 506.44180298]
[17.03113365 492.35058594]
[23.07100105 478.61477661]
[29.96989059 465.28970337]
[37.70002365 452.42898560]
[46.23027039 440.08447266]
[55.52628326 428.30581665]
[65.55062866 417.14047241]
[76.26295471 406.63339233]
[87.62010193 396.82687378]
[99.57636261 387.76043701]
[112.08358002 379.47055054]
[125.09139252 371.99063110]
[138.54742432 365.35076904]
[152.39749146 359.57772827]
[166.58583069 354.69470215]
[162.61372375 340.23019409]
[158.64163208 325.76565552]
[154.56196594 311.33111572]
[150.37495422 296.92733765]
[146.18794250 282.52355957]
[142.00093079 268.11978149]
[137.81391907 253.71598816]
[133.62690735 239.31219482]
[129.43989563 224.90841675]
[118.45752716 214.84677124]
[122.03518677 199.43537903]
[111.05281067 189.37373352]
[114.63047028 173.96235657]
[101.32649231 162.51809692]
[105.86486053 144.67195129]
[101.46385956 130.33210754]
[97.06285858 115.99225616]
[87.12122345 109.92553711]
[83.78712463 98.76645660]
[88.77113342 88.24025726]
[77.86403656 81.35562897]
[74.67319489 69.27248383]
[80.38183594 58.60768127]
[76.40973663 44.14315796]
[71.90908813 58.45204163]
[61.70905304 69.45018768]
[47.77909851 75.01403046]
[32.80887985 74.06928253]
[19.68891335 66.79834747]
[10.95245838 54.60513687]
[8.28638744 39.84397125]
[12.20547676 25.36499405]
[21.95301247 13.96387386]
[35.64689636 7.84198570]
[50.64305878 8.18137169]
[64.04596710 14.91650105]
[73.26828003 26.74807930]
[71.93004608 11.80789375]
[62.99241257 -1.24696004]
[69.56338501 -14.61376762]
[68.22515106 -29.55395317]
[66.88691711 -44.49413681]
[65.54868317 -59.43432236]
[64.21044922 -74.37451172]
[53.78637695 -63.58846664]
[38.79154587 -63.19465637]
[27.81568146 -73.41867065]
[27.14625549 -88.40372467]
[37.16674423 -99.56570435]
[52.13695908 -100.51051331]
[63.48085022 -90.69778442]
[63.48085022 -105.69778442]
[63.48085022 -120.69778442]
[63.48085022 -135.69778442]
[63.48085022 -150.69778442]
[63.48085022 -165.69778442]
[49.08767700 -170.35522461]
[36.83937454 -179.23408508]
[27.93590546 -191.46452332]
[23.24954033 -205.84829712]
[23.23940277 -220.97625732]
[27.90648651 -235.36630249]
[36.79356003 -247.60865784]
[49.02995300 -256.50393677]
[63.41687012 -261.18066406]
[78.54483032 -261.18066406]
[92.93174744 -256.50393677]
[105.16814423 -247.60865784]
[114.05521393 -235.36630249]
[118.72229767 -220.97625732]
[118.71215820 -205.84829712]
[114.02579498 -191.46452332]
[105.12232971 -179.23408508]
[92.87402344 -170.35522461]
[78.48085022 -165.69778442]
[78.48085022 -150.69778442]
[78.48085022 -135.69778442]
[78.48085022 -120.69778442]
[78.48085022 -105.69778442]
[78.48085022 -90.69778442]
[79.15063477 -75.71274567]
[80.48886871 -60.77255630]
[81.82710266 -45.83237076]
[83.16533661 -30.89218712]
[84.50357056 -15.95200157]
[93.34548950 -3.96577024]
[86.87023163 10.46965981]
[88.20846558 25.40984535]
[90.87426758 40.17106247]
[94.84635925 54.63558578]
[107.97847748 66.27664948]
[103.17491150 84.05324554]
[115.57922363 95.34524536]
[111.40270996 111.59125519]
[115.80371094 125.93110657]
[120.20470428 140.27095032]
[131.21308899 146.99243164]
[134.58348083 159.02671814]
[129.03425598 169.77534485]
[140.31611633 180.86723328]
[136.43896484 195.24836731]
[147.72082520 206.34027100]
[143.84368896 220.72140503]
[148.03070068 235.12519836]
[152.21771240 249.52897644]
[156.40472412 263.93276978]
[160.59172058 278.33654785]
[164.77873230 292.74032593]
[168.96574402 307.14410400]
[174.36619568 314.51110840]
[173.10615540 321.79357910]
[177.07826233 336.25808716]
[181.05035400 350.72262573]
[195.74263000 347.67471313]
[210.59863281 345.56481934]
[225.55853271 344.40139771]
[240.56211853 344.18911743]
[255.54896545 344.92886353]
[270.45870972 346.61764526]
[285.23132324 349.24868774]
[299.80734253 352.81134033]
[314.12802124 357.29129028]
[328.13577271 362.67053223]
[341.77410889 368.92733765]
[354.98818970 376.03656006]
[367.72473145 383.96957397]
[379.93252563 392.69439697]
[391.56234741 402.17593384]
[402.56741333 412.37600708]
[412.90338135 423.25350952]
[422.52865601 434.76467896]
[431.40444946 446.86312866]
[439.49502563 459.50015259]
[446.76785278 472.62490845]
[453.19360352 486.18447876]
[458.74639893 500.12432861]
[463.40390015 514.38824463]
[467.14736938 528.91888428]
[469.96166992 543.65771484]
[471.83554077 558.54528809]
[472.76138306 573.52178955]
[472.73550415 588.52685547]
[471.75799561 603.50006104]
[469.83276367 618.38110352]
[466.96762085 633.11010742]
[463.17407227 647.62774658]
[458.46737671 661.87554932]
[452.86651611 675.79614258]
[446.39401245 689.33349609]
[439.07595825 702.43304443]
[430.94180298 715.04211426]
[422.02432251 727.10986328]
[412.35940552 738.58770752]
[401.98596191 749.42950439]
[390.94577026 759.59155273]
[379.28329468 769.03289795]
[367.04550171 777.71557617]
[354.28164673 785.60455322]
[341.04312134 792.66815186]
[327.38327026 798.87786865]
[313.35705566 804.20874023]
[299.02099609 808.63928223]
[284.43276978 812.15161133]
[269.65115356 814.73168945]
[254.73568726 816.36901855]
[239.74638367 817.05706787]
[224.74362183 816.79302979]
[209.78781128 815.57800293]
[194.93917847 813.41680908]
[180.25750732 810.31823730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 153]
[41 152]
[42 151]
[43 149]
[44 148]
[45 147]
[46 146]
[47 145]
[48 144]
[49 143]
[51 141]
[53 139]
[55 136]
[56 135]
[57 134]
[60 132]
[63 130]
[64 129]
[77 128]
[78 127]
[80 125]
[81 124]
[82 123]
[83 122]
[84 121]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
