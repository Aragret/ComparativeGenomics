%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[166.03427124 485.69348145]
[166.70391846 470.68115234]
[169.55233765 455.92636108]
[174.51881409 441.74353027]
[181.49746704 428.43502808]
[190.33956909 416.28451538]
[200.85662842 405.55096436]
[212.82449341 396.46316528]
[225.98805237 389.21481323]
[220.74133301 375.16235352]
[215.49461365 361.10989380]
[199.90991211 354.78881836]
[193.59457397 338.83792114]
[200.91065979 322.94787598]
[195.45530701 308.97506714]
[183.61906433 299.93334961]
[185.80752563 284.26422119]
[180.35217285 270.29141235]
[174.17639160 256.62176514]
[167.29698181 243.29232788]
[160.41757202 229.96290588]
[145.16070557 221.29139709]
[146.18159485 202.90554810]
[139.10449219 189.68002319]
[132.02737427 176.45448303]
[124.95027924 163.22895813]
[117.87316895 150.00343323]
[110.79606628 136.77790833]
[99.31352997 132.97293091]
[93.30923462 122.01243591]
[96.48034668 109.51016235]
[90.27890015 104.36092377]
[89.59940338 95.93067169]
[82.91921234 82.50029755]
[76.23901367 69.06992340]
[69.55882263 55.63954544]
[62.87862778 42.20916748]
[49.80511475 33.29884720]
[51.06472778 18.45759773]
[44.38453293 5.02722216]
[37.11130142 -8.09147167]
[28.88249588 -20.63287163]
[20.28393173 -32.92370987]
[11.68536758 -45.21454620]
[3.08680320 -57.50538635]
[-5.51176071 -69.79622650]
[-14.47245693 -81.82559967]
[-23.78734016 -93.58285522]
[-33.10222244 -105.34010315]
[-42.41710663 -117.09735870]
[-50.19912338 -121.88045502]
[-51.78158569 -129.09970093]
[-60.92038727 -140.99433899]
[-70.05918884 -152.88897705]
[-79.19799042 -164.78359985]
[-92.02330017 -156.97599792]
[-105.61758423 -150.60084534]
[-119.82146454 -145.73287964]
[-134.46841431 -142.42919922]
[-149.38668823 -140.72853088]
[-164.40138245 -140.65080261]
[-179.33647156 -142.19692993]
[-194.01683044 -145.34878540]
[-208.27035522 -150.06942749]
[-221.92991638 -156.30348206]
[-234.83537292 -163.97789001]
[-246.83540344 -173.00265503]
[-257.78933716 -183.27195740]
[-267.56872559 -194.66542053]
[-276.05889893 -207.04943848]
[-283.16033936 -220.27883911]
[-288.78976440 -234.19848633]
[-292.88119507 -248.64518738]
[-295.38665771 -263.44958496]
[-296.27676392 -278.43807983]
[-295.54107666 -293.43493652]
[-293.18823242 -308.26434326]
[-289.24581909 -322.75244141]
[-283.76007080 -336.72933960]
[-276.79525757 -350.03115845]
[-268.43307495 -362.50198364]
[-258.77154541 -373.99554443]
[-247.92398071 -384.37713623]
[-236.01753235 -393.52502441]
[-223.19180298 -401.33193970]
[-209.59716797 -407.70635986]
[-195.39303589 -412.57354736]
[-180.74591064 -415.87643433]
[-165.82754517 -417.57632446]
[-150.81283569 -417.65322876]
[-135.87783813 -416.10632324]
[-121.19764709 -412.95367432]
[-106.94438171 -408.23226929]
[-93.28515625 -401.99746704]
[-80.38011169 -394.32235718]
[-68.38056183 -385.29696655]
[-57.42718887 -375.02703857]
[-47.64841461 -363.63305664]
[-39.15889740 -351.24859619]
[-32.05817032 -338.01882935]
[-26.42948151 -324.09887695]
[-22.33882523 -309.65194702]
[-19.83416557 -294.84741211]
[-18.94486809 -279.85885620]
[-19.68135643 -264.86203003]
[-22.03499603 -250.03276062]
[-25.97819519 -235.54489136]
[-31.46471786 -221.56828308]
[-38.43024063 -208.26683044]
[-46.79309464 -195.79647827]
[-56.45522690 -184.30340576]
[-67.30335999 -173.92240906]
[-58.16455841 -162.02777100]
[-49.02575302 -150.13314819]
[-39.88695145 -138.23851013]
[-30.65985298 -126.41223907]
[-21.34497070 -114.65498352]
[-12.03008842 -102.89773560]
[-2.71520543 -91.14048767]
[0.05063853 -90.68414307]
[2.80236983 -89.10471344]
[5.11131811 -86.40209198]
[6.55668497 -82.73120117]
[6.77907705 -78.39479065]
[15.37764168 -66.10395050]
[23.97620583 -53.81311035]
[32.57476807 -41.52227402]
[41.17333221 -29.23143578]
[43.90711212 -28.61127663]
[46.55995560 -26.87086487]
[48.70394516 -24.03560448]
[49.92825699 -20.28519249]
[49.89214706 -15.94322681]
[54.42190552 -30.24292183]
[67.67227173 -37.27341461]
[82.05282593 -33.00732422]
[89.32574463 -19.88845444]
[85.32476044 -5.43189478]
[72.34181976 2.08098292]
[57.81490707 -1.65297234]
[64.49510193 11.77740383]
[77.09080505 19.72709465]
[76.30900574 35.52897263]
[82.98919678 48.95935059]
[89.66939545 62.38972473]
[96.34958649 75.82009888]
[103.02977753 89.25048065]
[109.80977631 102.63075256]
[125.53194427 112.21692657]
[124.02159119 129.70080566]
[131.09869385 142.92633057]
[138.17579651 156.15185547]
[145.25291443 169.37738037]
[152.33001709 182.60290527]
[159.40711975 195.82844543]
[171.50282288 200.30691528]
[177.12509155 211.46818542]
[173.74699402 223.08348083]
[180.62641907 236.41291809]
[187.50582886 249.74234009]
[191.98298645 235.42608643]
[204.54672241 227.23144531]
[219.45307922 228.90487671]
[229.88706970 239.68132019]
[231.07841492 254.63394165]
[222.48243713 266.92657471]
[208.02911377 270.93923950]
[194.32496643 264.83605957]
[199.78031921 278.80886841]
[212.00675964 288.85000610]
[209.42810059 303.51971436]
[214.88345337 317.49249268]
[227.75962830 321.44458008]
[235.88995361 331.93783569]
[236.48338318 345.00418091]
[229.54708862 355.86315918]
[234.79380798 369.91564941]
[240.04052734 383.96810913]
[254.73341370 380.81579590]
[269.72869873 379.83645630]
[284.70678711 381.05099487]
[299.34838867 384.43350220]
[313.34143066 389.91186523]
[326.38763428 397.36935425]
[338.20895386 406.64697266]
[348.55340576 417.54699707]
[357.20046997 429.83706665]
[363.96585083 443.25524902]
[368.70538330 457.51550293]
[371.31796265 472.31387329]
[371.74795532 487.33496094]
[369.98620605 502.25857544]
[366.07025146 516.76660156]
[360.08352661 530.54980469]
[352.15368652 543.31445312]
[342.44973755 554.78839111]
[331.17849731 564.72705078]
[318.58026123 572.91864014]
[304.92352295 579.18853760]
[290.49942017 583.40307617]
[275.61532593 585.47247314]
[260.58859253 585.35253906]
[245.73942566 583.04589844]
[231.38439941 578.60174561]
[217.82945251 572.11468506]
[205.36354065 563.72314453]
[194.25234985 553.60583496]
[184.73274231 541.97851562]
[177.00759888 529.08898926]
[171.24160767 515.21197510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 178]
[10 177]
[11 176]
[14 172]
[15 171]
[17 169]
[18 168]
[19 160]
[20 159]
[21 158]
[23 155]
[24 154]
[25 153]
[26 152]
[27 151]
[28 150]
[31 148]
[33 147]
[34 146]
[35 145]
[36 144]
[37 143]
[39 141]
[40 140]
[41 133]
[42 128]
[43 127]
[44 126]
[45 125]
[46 124]
[47 119]
[48 118]
[49 117]
[50 116]
[52 115]
[53 114]
[54 113]
[55 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
