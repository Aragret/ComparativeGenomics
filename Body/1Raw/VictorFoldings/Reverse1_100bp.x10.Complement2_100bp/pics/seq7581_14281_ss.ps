%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[43.02125549 619.38110352]
[34.87131119 606.60009766]
[31.58726311 591.80175781]
[33.56567383 576.77307129]
[40.56763840 563.32879639]
[51.74764252 553.09240723]
[65.75563812 547.30004883]
[65.08585358 532.31500244]
[64.41606903 517.32995605]
[63.74628448 502.34490967]
[61.77096939 500.35586548]
[60.46451950 497.46453857]
[60.17455292 493.92175293]
[61.15154266 490.09945679]
[63.50965881 486.45346069]
[63.73298645 471.45510864]
[63.84465408 456.45553589]
[63.84465408 441.45553589]
[63.73298645 426.45596313]
[63.50965881 411.45761108]
[63.28633118 396.45928955]
[63.06300354 381.46093750]
[60.32080078 377.55078125]
[60.00582123 371.87646484]
[63.06300354 366.01428223]
[63.28633118 351.01596069]
[63.50965881 336.01760864]
[63.73298645 321.01928711]
[63.95631409 306.02093506]
[64.17964172 291.02261353]
[64.40296936 276.02426147]
[64.51463318 261.02468872]
[64.51463318 246.02467346]
[56.66230011 258.80517578]
[44.33679199 267.35394287]
[29.61518097 270.23043823]
[14.97831440 266.94985962]
[2.89276218 258.06509399]
[-4.60484838 245.07331848]
[-6.25103760 230.16392517]
[-1.76839411 215.84939575]
[8.08767796 204.54197693]
[21.65625763 198.14715576]
[36.65080261 197.74258423]
[50.54446411 203.39645386]
[60.99591827 214.15596008]
[66.24416351 228.20959473]
[69.12944031 213.48970032]
[72.01470947 198.76980591]
[74.89997864 184.04992676]
[77.78525543 169.33003235]
[75.98706055 162.16146851]
[80.82461548 154.41319275]
[83.92872620 139.73788452]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[101.39597321 57.15800476]
[104.50007629 42.48270035]
[107.60418701 27.80739975]
[106.11216736 23.72967339]
[106.00601959 19.78591347]
[107.07345581 16.39533997]
[108.98784637 13.86517525]
[111.35463715 12.36303806]
[115.32673645 -2.10148621]
[119.29883575 -16.56600952]
[123.27092743 -31.03053474]
[127.24302673 -45.49505615]
[131.21511841 -59.95958328]
[121.83020782 -70.05484009]
[118.68399811 -83.36347961]
[122.49420929 -96.38468933]
[132.16296387 -105.74734497]
[145.09034729 -109.08272552]
[149.27735901 -123.48650360]
[153.46437073 -137.89028931]
[157.65138245 -152.29406738]
[160.64616394 -166.99208069]
[153.00842285 -183.74757385]
[164.06675720 -197.37402344]
[165.62727356 -212.29263306]
[167.18780518 -227.21124268]
[168.74832153 -242.12983704]
[162.48870850 -256.66006470]
[171.50810242 -268.51333618]
[173.06861877 -283.43194580]
[160.75056458 -292.49905396]
[154.66503906 -306.42254639]
[156.35459900 -321.42294312]
[165.26600647 -333.48291016]
[178.92543030 -339.42306519]
[180.48596191 -354.34167480]
[182.04647827 -369.26028442]
[175.78686523 -383.79049683]
[184.80625916 -395.64376831]
[186.36679077 -410.56237793]
[187.92730713 -425.48098755]
[174.18608093 -431.84158325]
[163.25639343 -442.32113647]
[156.32383728 -455.78286743]
[154.14039612 -470.76657104]
[156.94290161 -485.64691162]
[164.42736816 -498.80978394]
[175.78193665 -508.82739258]
[189.77494812 -514.61309814]
[204.88854980 -515.53930664]
[219.48332214 -511.50552368]
[231.97613525 -502.94934082]
[241.01187134 -490.79885864]
[245.61039734 -476.37207031]
[245.27288818 -461.23388672]
[240.03596497 -447.02636719]
[230.46769714 -435.29064941]
[217.60595703 -427.29977417]
[202.84591675 -423.92047119]
[201.28538513 -409.00186157]
[199.72486877 -394.08325195]
[206.09609985 -380.62008667]
[196.96508789 -367.69973755]
[195.40457153 -352.78115845]
[193.84403992 -337.86254883]
[205.97853088 -329.22427368]
[212.20133972 -315.58123779]
[210.75013733 -300.55590820]
[201.91499329 -288.19317627]
[187.98722839 -281.87142944]
[186.42671204 -266.95281982]
[192.79794312 -253.48965454]
[183.66693115 -240.56932068]
[182.10639954 -225.65071106]
[180.54588318 -210.73210144]
[178.98536682 -195.81350708]
[186.35649109 -186.22219849]
[185.17848206 -173.78050232]
[175.53987122 -165.20960999]
[185.40994263 -176.50482178]
[199.36502075 -182.00534058]
[214.28750610 -180.48236084]
[226.84367371 -172.27610779]
[234.22845459 -159.21987915]
[234.79205322 -144.23048401]
[228.40858459 -130.65655518]
[216.50410461 -121.53058624]
[201.73811340 -118.89131165]
[187.40939331 -123.32836914]
[176.71897888 -133.85049438]
[172.05516052 -148.10705566]
[167.86814880 -133.70327759]
[163.68113708 -119.29949951]
[159.49414062 -104.89571381]
[169.96388245 -92.25206757]
[170.84313965 -75.69342804]
[161.58753967 -61.73508453]
[145.67964172 -55.98748398]
[141.70755005 -41.52296066]
[137.73545837 -27.05843735]
[133.76335144 -12.59391403]
[129.79125977 1.87061000]
[125.81916809 16.33513451]
[122.27949524 30.91150856]
[119.17538452 45.58681107]
[116.07127380 60.26211548]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[98.60402679 142.84199524]
[95.49992371 157.51730347]
[92.50514984 172.21530151]
[89.61987305 186.93519592]
[86.73460388 201.65509033]
[83.84932709 216.37496948]
[80.96405792 231.09486389]
[79.51463318 246.02467346]
[79.51463318 261.02468872]
[82.64404297 269.60632324]
[79.40130615 276.24758911]
[79.17797852 291.24594116]
[78.95465088 306.24426270]
[78.73132324 321.24261475]
[78.50799561 336.24093628]
[78.28466797 351.23928833]
[78.06134033 366.23760986]
[78.06134033 381.23760986]
[78.28466797 396.23596191]
[78.50799561 411.23428345]
[78.73132324 426.23263550]
[81.98815155 434.76672363]
[78.84465027 441.45553589]
[78.84465027 456.45553589]
[81.97406006 465.03717041]
[78.73132324 471.67843628]
[78.50799561 486.67678833]
[78.73132324 501.67510986]
[79.40110779 516.66015625]
[80.07089233 531.64520264]
[80.74067688 546.63024902]
[95.20958710 551.14978027]
[107.25825500 560.34790039]
[115.43173981 573.11389160]
[118.74305725 587.90612793]
[116.79234314 602.93847656]
[109.81516266 616.39562988]
[98.65404510 626.65258789]
[84.65674591 632.47076416]
[69.51350403 633.14764404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 201]
[8 200]
[9 199]
[10 198]
[15 197]
[16 196]
[17 194]
[18 193]
[19 191]
[20 190]
[21 189]
[22 188]
[25 187]
[26 186]
[27 185]
[28 184]
[29 183]
[30 182]
[31 181]
[32 179]
[33 178]
[47 177]
[48 176]
[49 175]
[50 174]
[51 173]
[53 172]
[54 171]
[55 170]
[56 169]
[58 167]
[59 166]
[60 165]
[61 164]
[62 163]
[67 162]
[68 161]
[69 160]
[70 159]
[71 158]
[72 157]
[77 153]
[78 152]
[79 151]
[80 150]
[81 138]
[83 135]
[84 134]
[85 133]
[86 132]
[88 130]
[89 129]
[94 124]
[95 123]
[96 122]
[98 120]
[99 119]
[100 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
