%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[45.38592148 430.84112549]
[50.02288437 445.17971802]
[51.22754669 460.20120239]
[48.93494415 475.09552002]
[43.26871109 489.05941772]
[34.53442764 501.33987427]
[23.20311356 511.27456665]
[9.88585854 518.32775879]
[-4.69915676 522.11907959]
[-19.76538086 522.44403076]
[-34.50031281 519.28515625]
[-48.10931015 512.81274414]
[-59.85846329 503.37591553]
[-69.11415863 491.48352051]
[-75.37723541 477.77691650]
[-78.30994415 462.99533081]
[-77.75411987 447.93585205]
[-73.73974609 433.41064453]
[-66.48331451 420.20303345]
[-56.37614059 409.02529907]
[-43.96330643 400.48022461]
[-29.91421127 395.02865601]
[-14.98651028 392.96456909]
[0.01476642 394.39929199]
[4.84076405 380.19683838]
[9.66676140 365.99438477]
[6.43563652 351.45446777]
[18.20152092 340.87738037]
[23.02751923 326.67492676]
[27.85351562 312.47247314]
[32.46752548 298.19973755]
[36.86852264 283.85989380]
[41.26951981 269.52005005]
[45.67052078 255.18019104]
[42.00791931 240.74293518]
[53.45366669 229.82023621]
[57.85466766 215.48037720]
[44.94007874 206.61811829]
[35.38438034 194.18331909]
[30.13249969 179.38592529]
[29.70985794 163.67041016]
[34.16983414 148.57484436]
[43.08736420 135.58032227]
[55.59941483 125.96569061]
[70.48850250 120.68163300]
[86.30116272 120.25672150]
[90.48816681 105.85293579]
[94.56784058 91.41838837]
[98.53993225 76.95386505]
[102.51203156 62.48933792]
[106.37633514 47.99564362]
[109.58960724 33.34385681]
[112.25540161 18.58264160]
[114.92120361 3.82142353]
[117.58699799 -10.93979359]
[120.25279236 -25.70101166]
[122.91858673 -40.46222687]
[125.58438110 -55.22344589]
[116.64568329 -43.17771149]
[105.11544800 -33.58325577]
[91.64575958 -26.98268509]
[76.99839783 -23.74930000]
[62.00173950 -24.06596375]
[47.50392151 -27.91476250]
[34.32486343 -35.07803345]
[23.20990753 -45.15065765]
[14.78765488 -57.56297684]
[9.53442764 -71.61301422]
[7.74731922 -86.50617218]
[9.52740097 -101.40017700]
[14.77399921 -115.45269775]
[23.19039536 -127.86898804]
[34.30059814 -137.94685364]
[47.47627640 -145.11633301]
[61.97227478 -148.97198486]
[76.96878052 -149.29571533]
[91.61766815 -146.06924438]
[105.09046936 -139.47502136]
[116.62522888 -129.88601685]
[125.56961060 -117.84449768]
[131.41775513 -104.03148651]
[133.83892822 -89.22817993]
[132.69598389 -74.27072144]
[140.35658264 -87.16704559]
[148.01718140 -100.06336975]
[155.67778015 -112.95970154]
[163.33837891 -125.85602570]
[170.99897766 -138.75234985]
[178.56335449 -151.70535278]
[186.03109741 -164.71430969]
[193.49884033 -177.72325134]
[181.26138306 -186.41809082]
[169.92022705 -196.25343323]
[159.58129883 -207.13745117]
[150.34109497 -218.96852112]
[142.28590393 -231.63616943]
[135.49093628 -245.02212524]
[130.01965332 -259.00140381]
[125.92311096 -273.44351196]
[123.23957062 -288.21356201]
[121.99409485 -303.17364502]
[122.19831085 -318.18408203]
[123.85031128 -333.10476685]
[126.93466187 -347.79632568]
[131.42257690 -362.12164307]
[137.27214050 -375.94689941]
[144.42875671 -389.14306641]
[152.82557678 -401.58688354]
[162.38421631 -413.16220093]
[173.01542664 -423.76092529]
[184.61994934 -433.28408813]
[197.08941650 -441.64279175]
[210.30740356 -448.75897217]
[224.15051270 -454.56619263]
[238.48948669 -459.01025391]
[253.19042969 -462.04962158]
[268.11608887 -463.65594482]
[283.12710571 -463.81420898]
[298.08331299 -462.52294922]
[312.84506226 -459.79425049]
[327.27453613 -455.65350342]
[341.23703003 -450.13946533]
[354.60211182 -443.30355835]
[367.24505615 -435.20962524]
[379.04779053 -425.93325806]
[389.90011597 -415.56106567]
[399.70071411 -404.18988037]
[408.35803223 -391.92584229]
[415.79129028 -378.88354492]
[421.93106079 -365.18469238]
[426.72003174 -350.95718384]
[430.11349487 -336.33392334]
[432.07971191 -321.45138550]
[432.60037231 -306.44857788]
[431.67062378 -291.46557617]
[429.29910278 -276.64221191]
[425.50799561 -262.11697388]
[420.33267212 -248.02542114]
[413.82147217 -234.49916077]
[406.03515625 -221.66448975]
[397.04647827 -209.64122009]
[386.93933105 -198.54162598]
[375.80807495 -188.46932983]
[363.75668335 -179.51840210]
[350.89764404 -171.77241516]
[337.35101318 -165.30366516]
[323.24331665 -160.17257690]
[308.70623779 -156.42704773]
[293.87551880 -154.10205078]
[278.88964844 -153.21928406]
[263.88854980 -153.78701782]
[249.01226807 -155.79992676]
[234.39971924 -159.23922729]
[220.18731689 -164.07279968]
[206.50779724 -170.25550842]
[199.04005432 -157.24656677]
[191.57231140 -144.23760986]
[190.96853638 -136.87165833]
[183.89530945 -131.09175110]
[176.23471069 -118.19542694]
[168.57411194 -105.29910278]
[160.91351318 -92.40277863]
[153.25291443 -79.50644684]
[145.59231567 -66.61012268]
[140.34559631 -52.55765152]
[137.67980957 -37.79643250]
[135.01400757 -23.03521538]
[132.34820557 -8.27399826]
[129.68241882 6.48721886]
[127.01662445 21.24843597]
[124.35082245 36.00965500]
[137.97401428 29.73202324]
[151.44389343 36.33221054]
[154.83096313 50.94479752]
[145.63839722 62.79793549]
[130.64262390 63.15392685]
[120.89839172 51.75194550]
[122.26672363 59.01482773]
[116.97655487 66.46143341]
[113.00445557 80.92595673]
[109.03236389 95.39048004]
[110.10429382 103.37944031]
[104.89195251 110.03994751]
[100.70494080 124.44373322]
[112.76063538 132.31462097]
[122.09879303 143.25224304]
[127.96904755 156.36387634]
[129.90361023 170.58271790]
[127.75450134 184.75460815]
[121.70485687 197.73178101]
[112.25334167 208.46577454]
[100.17306519 216.09213257]
[86.44834900 220.00009155]
[72.19451141 219.88137817]
[67.79351807 234.22122192]
[71.14132690 249.68417358]
[60.01036835 259.58120728]
[55.60936737 273.92105103]
[51.20837021 288.26089478]
[46.80737305 302.60073853]
[47.91311646 309.11907959]
[45.86798859 314.42138672]
[42.05597305 317.29846191]
[37.22997284 331.50091553]
[32.40397644 345.70336914]
[35.28991318 361.25915527]
[23.86921692 370.82037354]
[19.04322052 385.02282715]
[14.21722221 399.22528076]
[26.98697472 407.22717285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 209]
[25 208]
[26 207]
[28 205]
[29 204]
[30 203]
[31 200]
[32 199]
[33 198]
[34 197]
[36 195]
[37 194]
[46 184]
[47 183]
[48 181]
[49 180]
[50 179]
[51 177]
[52 171]
[53 170]
[54 169]
[55 168]
[56 167]
[57 166]
[58 165]
[83 164]
[84 163]
[85 162]
[86 161]
[87 160]
[88 159]
[89 157]
[90 156]
[91 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
