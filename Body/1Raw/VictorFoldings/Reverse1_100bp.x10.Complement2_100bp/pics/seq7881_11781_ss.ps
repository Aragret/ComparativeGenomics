%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[72.24238586 657.44171143]
[67.26330566 671.70306396]
[58.46691513 683.98315430]
[46.56629181 693.28643799]
[32.52617264 698.85888672]
[17.48471832 700.24859619]
[2.66127968 697.34301758]
[-10.74247646 690.37768555]
[-21.63996696 679.91723633]
[-29.14778137 666.80963135]
[-32.65729523 652.11743164]
[-31.88400650 637.03173828]
[-26.89060402 622.77539062]
[-18.08188057 610.50421143]
[-6.17191744 601.21282959]
[7.87379599 595.65454102]
[22.91663742 594.27990723]
[25.80190849 579.55999756]
[28.68718147 564.84008789]
[31.57245445 550.12023926]
[34.45772552 535.40032959]
[37.34299850 520.68041992]
[40.22827148 505.96054077]
[43.11354446 491.24066162]
[45.99881744 476.52075195]
[48.88409042 461.80087280]
[51.76936340 447.08099365]
[49.89569092 442.68798828]
[50.76177597 437.07131958]
[54.96590424 431.96868896]
[58.28816223 417.34124756]
[61.61042404 402.71377563]
[56.88417435 388.58889771]
[67.48582458 376.84515381]
[70.04165649 362.06451416]
[71.82412720 347.17080688]
[73.60659027 332.27706909]
[75.27812958 317.37051392]
[76.83865356 302.45190430]
[78.39917755 287.53329468]
[79.73741150 272.59310913]
[80.85305786 257.63464355]
[81.96871185 242.67619324]
[73.50811005 227.30137634]
[84.00203705 212.16998291]
[84.89485168 197.19657898]
[85.78766632 182.22317505]
[83.34388733 178.11988831]
[83.45181274 172.43786621]
[86.93653870 166.81930542]
[88.27477264 151.87911987]
[89.61300659 136.93893433]
[90.95124054 121.99874878]
[92.06688690 107.04029846]
[92.40186310 92.04403687]
[92.17853546 77.04570007]
[91.95520782 62.04735947]
[82.14739990 46.46248245]
[91.28608704 31.48078156]
[90.83947754 16.48743248]
[90.39287567 1.49408245]
[89.94626617 -13.49926758]
[81.80151367 -27.06295395]
[89.15644836 -40.01494980]
[88.70983887 -55.00830078]
[80.56508636 -68.57198334]
[87.92002106 -81.52398682]
[87.47341156 -96.51733398]
[76.42581940 -86.37087250]
[61.43413925 -86.87026215]
[51.08627701 -97.72944641]
[51.30996323 -112.72777557]
[61.97706223 -123.27353668]
[76.97697449 -123.32563019]
[87.71668243 -112.85509491]
[88.60949707 -127.82849884]
[89.39082336 -142.80813599]
[90.06060791 -157.79318237]
[90.73039246 -172.77821350]
[91.40017700 -187.76325989]
[91.84678650 -202.75660706]
[92.07011414 -217.75494385]
[92.29344177 -232.75328064]
[89.29214478 -241.38056946]
[92.63339996 -247.97280884]
[93.08000946 -262.96615601]
[90.20749664 -271.63717651]
[93.64653015 -278.17895508]
[94.31631470 -293.16400146]
[94.98609924 -308.14901733]
[80.32045746 -311.48950195]
[66.48704529 -317.39511108]
[53.93054581 -325.67608643]
[43.05460358 -336.06616211]
[34.20883560 -348.23135376]
[27.67759132 -361.78060913]
[23.67082596 -376.27841187]
[22.31734276 -391.25863647]
[23.66064835 -406.23980713]
[27.65756226 -420.74029541]
[34.17959976 -434.29400635]
[43.01710129 -446.46520996]
[53.88598251 -456.86267090]
[66.43685150 -465.15216064]
[80.26625061 -471.06719971]
[94.92961884 -474.41760254]
[109.95559692 -475.09573364]
[124.86115265 -473.07977295]
[139.16714478 -468.43450928]
[152.41368103 -461.30926514]
[164.17494202 -451.93310547]
[174.07287598 -440.60742188]
[181.78927612 -427.69631958]
[187.07609558 -413.61477661]
[189.76339722 -398.81552124]
[189.76480103 -383.77426147]
[187.08023071 -368.97448730]
[181.79602051 -354.89199829]
[174.08201599 -341.97946167]
[164.18618774 -330.65194702]
[152.42666626 -321.27359009]
[139.18144226 -314.14590454]
[124.87631989 -309.49798584]
[109.97113800 -307.47924805]
[109.30135345 -292.49420166]
[108.63156891 -277.50915527]
[108.07335663 -262.51956177]
[107.62675476 -247.52621460]
[107.29177856 -232.52995300]
[107.06845093 -217.53161621]
[106.84512329 -202.53327942]
[109.46968842 -198.54319763]
[109.61557770 -192.86203003]
[106.38521576 -187.09347534]
[105.71543121 -172.10842896]
[105.04564667 -157.12339783]
[104.37586212 -142.13835144]
[107.21755219 -135.31584167]
[103.58290863 -126.93568420]
[102.69009399 -111.96228027]
[102.46676636 -96.96394348]
[102.91336823 -81.97058868]
[111.02617645 -69.47933197]
[103.70318604 -55.45490646]
[104.14979553 -40.46155548]
[112.26260376 -27.97029686]
[104.93961334 -13.94587326]
[105.38622284 1.04747653]
[105.83282471 16.04082680]
[106.27943420 31.03417587]
[114.86588287 39.55470657]
[115.36066437 52.04225922]
[106.95354462 61.82403183]
[107.17687225 76.82237244]
[107.40019989 91.82070923]
[119.56148529 83.03986359]
[134.04937744 86.92584991]
[140.18395996 100.61405945]
[133.44302368 114.01405334]
[118.79575348 117.24785614]
[107.04029846 107.93311310]
[109.65299988 114.00643921]
[108.91685486 119.64160919]
[105.89142609 123.33698273]
[104.55319214 138.27716064]
[103.21495819 153.21734619]
[101.87672424 168.15753174]
[100.76107788 183.11599731]
[99.86825562 198.08940125]
[98.97544098 213.06280518]
[106.93740082 223.21022034]
[105.88551331 235.66322327]
[96.92716217 243.79185486]
[95.81151581 258.75030518]
[94.69586182 273.70877075]
[97.21785736 279.82031250]
[96.39789581 285.44390869]
[93.31777954 289.09381104]
[91.75726318 304.01242065]
[90.19673920 318.93103027]
[92.41637421 327.79165649]
[88.50030518 334.05953979]
[86.71784210 348.95324707]
[84.93537903 363.84698486]
[96.67276764 354.50708008]
[111.67044067 354.77120972]
[123.07166290 364.51861572]
[125.66395569 379.29293823]
[118.26214600 392.33950806]
[104.25025177 397.69366455]
[90.03431702 392.90750122]
[82.11328888 380.16741943]
[86.60190582 395.33853149]
[76.23788452 406.03604126]
[72.91562653 420.66348267]
[69.59336090 435.29095459]
[66.48925781 449.96624756]
[63.60398102 464.68615723]
[60.71870804 479.40603638]
[57.83343506 494.12591553]
[54.94816208 508.84582520]
[52.06289291 523.56573486]
[49.17761993 538.28558350]
[46.29234695 553.00549316]
[43.40707397 567.72540283]
[40.52180099 582.44525146]
[37.63652802 597.16516113]
[51.04727554 604.11706543]
[61.95526886 614.56652832]
[69.47624969 627.66662598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 207]
[18 206]
[19 205]
[20 204]
[21 203]
[22 202]
[23 201]
[24 200]
[25 199]
[26 198]
[27 197]
[30 196]
[31 195]
[32 194]
[34 192]
[35 184]
[36 183]
[37 182]
[38 180]
[39 179]
[40 178]
[41 175]
[42 174]
[43 173]
[45 170]
[46 169]
[47 168]
[50 167]
[51 166]
[52 165]
[53 164]
[54 161]
[55 155]
[56 154]
[57 153]
[59 150]
[60 149]
[61 148]
[62 147]
[64 145]
[65 144]
[67 142]
[68 141]
[75 140]
[76 139]
[77 137]
[78 136]
[79 135]
[80 134]
[81 131]
[82 130]
[83 129]
[85 128]
[86 127]
[88 126]
[89 125]
[90 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
