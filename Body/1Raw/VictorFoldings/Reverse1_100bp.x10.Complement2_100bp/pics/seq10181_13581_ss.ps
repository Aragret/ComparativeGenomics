%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[216.11456299 365.00869751]
[209.43437195 351.57833862]
[202.75418091 338.14794922]
[196.07398987 324.71755981]
[192.86566162 323.25503540]
[190.20632935 320.16586304]
[188.85281372 315.72500610]
[189.41049194 310.53500366]
[183.33665466 296.81973267]
[177.26281738 283.10446167]
[171.08705139 269.43481445]
[164.80969238 255.81147766]
[158.53233337 242.18817139]
[152.25497437 228.56484985]
[136.72050476 230.56649780]
[121.30871582 227.66609192]
[107.53048706 220.13575745]
[96.74032593 208.70210266]
[90.00321198 194.47610474]
[87.98949432 178.84523010]
[90.90821075 163.33801270]
[98.48543549 149.47468567]
[109.98999786 138.61808777]
[103.51049805 125.08973694]
[97.03100586 111.56139374]
[95.96679688 126.52359772]
[89.63547516 140.12191772]
[78.87003326 150.56726074]
[65.08686066 156.48538208]
[50.09935760 157.09762573]
[35.87939835 152.32345581]
[24.29785728 142.79098511]
[16.87848663 129.75437927]
[14.59743309 114.92884064]
[17.75480843 100.26490784]
[25.93520355 87.69187164]
[38.06234741 78.86394501]
[52.54071045 74.94258118]
[67.46540833 76.44371033]
[80.87284088 83.16983032]
[91.00029755 94.23802185]
[87.67803955 79.61056519]
[84.35578156 64.98310089]
[81.03351593 50.35564041]
[75.08645630 64.12635040]
[63.11004257 73.15771484]
[48.23488617 75.08895874]
[34.34931564 69.41525269]
[25.08298492 57.61969757]
[22.85809135 42.78562164]
[28.25621796 28.79061317]
[39.86630630 19.29293633]
[54.65350723 16.77526283]
[68.75247955 21.89570236]
[78.47740936 33.31498718]
[77.36176300 18.35653305]
[76.24610901 3.39808011]
[75.13046265 -11.56037331]
[74.01481628 -26.51882744]
[72.89916229 -41.47727966]
[71.78351593 -56.43573380]
[70.66786957 -71.39418793]
[69.55221558 -86.35263824]
[54.19602585 -88.40406036]
[39.60422516 -93.59302521]
[26.41025352 -101.69179535]
[15.18634224 -112.34637451]
[6.41871881 -125.09196472]
[0.48652673 -139.37327576]
[-2.35456038 -154.56866455]
[-1.98336029 -170.01727295]
[1.58165097 -185.04768372]
[8.18324471 -199.00717163]
[17.53237152 -211.28999329]
[29.22081566 -221.36369324]
[42.73902512 -228.79222107]
[57.49831009 -233.25476074]
[56.16007614 -248.19494629]
[54.82184219 -263.13513184]
[53.48360825 -278.07531738]
[52.14537430 -293.01550293]
[37.68333435 -297.61172485]
[26.11396599 -307.36837769]
[19.18017960 -320.77496338]
[17.91091347 -335.77416992]
[22.46855927 -350.07775879]
[32.12892532 -361.51553345]
[45.39614105 -368.36465454]
[44.05790710 -383.30484009]
[42.71967316 -398.24502563]
[41.38143921 -413.18521118]
[29.90692711 -403.52416992]
[15.17013359 -406.32183838]
[8.03447151 -419.51586914]
[13.76008511 -433.38009644]
[28.12626648 -437.69436646]
[40.54196167 -429.27975464]
[40.31863403 -444.27810669]
[40.09530640 -459.27642822]
[26.40987778 -466.12973022]
[17.48633385 -478.56472778]
[15.37524033 -493.72393799]
[20.56171227 -508.12390137]
[31.85393524 -518.45562744]
[46.65703964 -522.34490967]
[61.56937790 -518.89807129]
[73.16420746 -508.90716553]
[78.77712250 -494.66799927]
[77.11830902 -479.45263672]
[68.56896210 -466.75747681]
[55.09364319 -459.49975586]
[55.31697083 -444.50143433]
[55.54029846 -429.50308228]
[56.32162094 -414.52343750]
[57.65985489 -399.58325195]
[58.99809265 -384.64306641]
[60.33632660 -369.70288086]
[74.60955811 -365.32064819]
[86.14886475 -355.78179932]
[93.17598724 -342.51589966]
[94.59258270 -327.52987671]
[90.15178680 -313.10443115]
[80.50054169 -301.44696045]
[67.08555603 -294.35372925]
[68.42378998 -279.41354370]
[69.76203156 -264.47335815]
[71.10026550 -249.53318787]
[72.43849945 -234.59300232]
[86.89275360 -233.01130676]
[100.76294708 -228.63069153]
[113.51236725 -221.61862183]
[124.64728546 -212.24444580]
[133.73603821 -200.86900330]
[140.42581177 -187.93077087]
[144.45629883 -173.92895508]
[145.66984558 -159.40420532]
[144.01759338 -144.91780090]
[139.56149292 -131.02990723]
[132.47190857 -118.27789307]
[123.02118683 -107.15562439]
[111.57313538 -98.09426117]
[98.56904602 -91.44557190]
[84.51067352 -87.46829224]
[85.62631989 -72.50983429]
[86.74197388 -57.55138397]
[87.85762024 -42.59292984]
[88.97326660 -27.63447571]
[90.08891296 -12.67602253]
[91.20456696 2.28243136]
[92.32021332 17.24088478]
[93.43585968 32.19933701]
[95.66098022 47.03338242]
[98.98323822 61.66084290]
[102.30549622 76.28829956]
[105.62775421 90.91576385]
[110.55934906 105.08189392]
[117.03884888 118.61024475]
[123.51834106 132.13859558]
[137.75173950 129.97039795]
[152.00341797 131.89971924]
[165.11898804 137.76118469]
[176.03863525 147.07136536]
[183.88275146 159.06849670]
[188.02281189 172.77487183]
[188.13172913 187.07655334]
[184.20960999 200.81378174]
[176.58314514 212.87516785]
[165.87828064 222.28749084]
[172.15565491 235.91081238]
[178.43301392 249.53411865]
[184.71037292 263.15744019]
[191.14390564 269.64184570]
[190.97808838 277.03063965]
[197.05192566 290.74591064]
[203.12576294 304.46118164]
[209.50436401 318.03738403]
[216.18455505 331.46774292]
[222.86474609 344.89813232]
[229.54495239 358.32849121]
[244.01518250 354.21426392]
[258.99502563 352.82919312]
[273.97433472 354.22048950]
[288.44284058 358.34075928]
[301.90780640 365.04968262]
[313.91058350 374.11871338]
[324.04238892 385.23901367]
[331.95812988 398.03182983]
[337.38821411 412.06140137]
[340.14764404 426.84991455]
[340.14248657 441.89367676]
[337.37289429 456.68029785]
[331.93322754 470.70614624]
[324.00872803 483.49349976]
[313.86929321 494.60684204]
[301.86029053 503.66766357]
[288.39071655 510.36737061]
[273.91937256 514.47772217]
[258.93914795 515.85876465]
[243.96025085 514.46337891]
[229.49284363 510.33923340]
[216.02969360 503.62667847]
[204.02934265 494.55441284]
[193.90054321 483.43136597]
[185.98823547 470.63644409]
[180.56195068 456.60540771]
[177.80648804 441.81613159]
[177.81570435 426.77239990]
[180.58927917 411.98651123]
[186.03274536 397.96212769]
[193.96069336 385.17691040]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 176]
[8 175]
[9 174]
[10 173]
[11 171]
[12 170]
[13 169]
[14 168]
[23 158]
[24 157]
[25 156]
[41 155]
[42 154]
[43 153]
[44 152]
[55 151]
[56 150]
[57 149]
[58 148]
[59 147]
[60 146]
[61 145]
[62 144]
[63 143]
[77 128]
[78 127]
[79 126]
[80 125]
[81 124]
[88 117]
[89 116]
[90 115]
[91 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
