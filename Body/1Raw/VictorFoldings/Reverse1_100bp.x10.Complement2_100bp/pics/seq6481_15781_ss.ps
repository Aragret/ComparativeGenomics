%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[75.79104614 526.90069580]
[66.87516022 514.79895020]
[59.96229553 501.45132446]
[55.22268295 487.18658447]
[52.77303696 472.35601807]
[52.67369080 457.32482910]
[54.92708588 442.46316528]
[59.47772980 428.13702393]
[66.21356201 414.69921875]
[74.96869659 402.48062134]
[85.52754974 391.78216553]
[97.63008118 382.86727905]
[110.97826385 375.95550537]
[125.24338531 371.21707153]
[122.79766083 356.41778564]
[120.35192871 341.61853027]
[118.15425110 339.87829590]
[116.51348114 337.16271973]
[115.80457306 333.67947388]
[116.32043457 329.76815796]
[118.22858429 325.86779785]
[116.66806030 310.94918823]
[115.10753632 296.03057861]
[113.43599701 281.12402344]
[111.65353394 266.23028564]
[102.45865631 254.51263428]
[108.50124359 239.89080811]
[106.71878052 224.99708557]
[104.93631744 210.10337830]
[103.15384674 195.20965576]
[93.95897675 183.49198914]
[100.00156403 168.87017822]
[98.21910095 153.97645569]
[94.30303192 147.70858765]
[96.52267456 138.84794617]
[94.96215057 123.92933655]
[93.40162659 109.01072693]
[91.73008728 94.10415649]
[89.94761658 79.21044159]
[80.30901337 70.63954926]
[79.13101196 58.19784546]
[86.50213623 48.60654449]
[84.94161224 33.68793869]
[72.94794464 23.74864006]
[71.57787323 8.59682274]
[81.12738800 -2.77605486]
[79.56686401 -17.69466019]
[78.00634003 -32.61326599]
[76.44581604 -47.53186798]
[72.44059753 -55.74137878]
[74.97482300 -62.68396759]
[73.63658905 -77.62415314]
[72.07606506 -92.54275513]
[70.29359436 -107.43647003]
[68.51113129 -122.33019257]
[66.72866821 -137.22390747]
[64.94619751 -152.11763000]
[63.16373444 -167.01133728]
[61.38126755 -181.90505981]
[59.59880066 -196.79878235]
[57.48417664 -211.64897156]
[55.03844833 -226.44824219]
[52.59272385 -241.24751282]
[50.14699554 -256.04678345]
[47.70126724 -270.84606934]
[32.73389816 -269.71670532]
[17.72528458 -269.91458130]
[2.79289365 -271.43817139]
[-11.94640827 -274.27551270]
[-26.37726212 -278.40444946]
[-40.38672638 -283.79263306]
[-53.86515808 -290.39788818]
[-66.70706177 -298.16854858]
[-78.81193542 -307.04379272]
[-90.08503723 -316.95410156]
[-100.43814087 -327.82199097]
[-109.79022217 -339.56237793]
[-118.06807709 -352.08334351]
[-125.20692444 -365.28692627]
[-131.15089417 -379.06976318]
[-135.85345459 -393.32400513]
[-139.27781677 -407.93807983]
[-141.39717102 -422.79763794]
[-142.19491577 -437.78634644]
[-141.66484070 -452.78689575]
[-139.81108093 -467.68188477]
[-136.64813232 -482.35476685]
[-132.20075989 -496.69070435]
[-126.50376892 -510.57745361]
[-119.60174561 -523.90637207]
[-111.54871368 -536.57312012]
[-102.40769958 -548.47851562]
[-92.25024414 -559.52947998]
[-81.15583801 -569.63946533]
[-69.21131897 -578.72937012]
[-56.51016617 -586.72802734]
[-43.15179062 -593.57281494]
[-29.24073982 -599.21020508]
[-14.88588810 -603.59606934]
[-0.19958225 -606.69610596]
[14.70323372 -608.48596191]
[29.70592308 -608.95172119]
[44.69106674 -608.08972168]
[59.54138565 -605.90667725]
[74.14065552 -602.41973877]
[88.37460327 -597.65606689]
[102.13184357 -591.65307617]
[115.30469513 -584.45770264]
[127.79006195 -576.12622070]
[139.49021912 -566.72387695]
[150.31361389 -556.32427979]
[160.17553711 -545.00878906]
[168.99877930 -532.86596680]
[176.71430969 -519.99090576]
[183.26171875 -506.48425293]
[188.58979797 -492.45181274]
[192.65681458 -478.00338745]
[195.43095398 -463.25207520]
[196.89050293 -448.31326294]
[197.02403259 -433.30395508]
[195.83050537 -418.34155273]
[193.31925964 -403.54321289]
[189.50994873 -389.02471924]
[184.43238831 -374.89968872]
[178.12631226 -361.27871704]
[170.64106750 -348.26837158]
[162.03526306 -335.97052002]
[152.37623596 -324.48135376]
[141.73959351 -313.89080811]
[130.20855713 -304.28182983]
[117.87339783 -295.72952271]
[104.83065033 -288.30090332]
[91.18239594 -282.05410767]
[77.03545380 -277.03796387]
[62.50053787 -273.29177856]
[64.94626617 -258.49252319]
[67.39199066 -243.69323730]
[69.83772278 -228.89396667]
[72.28344727 -214.09469604]
[74.92147064 -211.75521851]
[76.55739594 -208.02174377]
[76.54840088 -203.37921143]
[74.49251556 -198.58123779]
[76.27498627 -183.68753052]
[78.05744934 -168.79380798]
[79.83992004 -153.90008545]
[81.62238312 -139.00637817]
[83.40484619 -124.11265564]
[85.18731689 -109.21894073]
[86.96977997 -94.32522583]
[90.10389709 -90.72156525]
[91.00749207 -85.11080933]
[88.57677460 -78.96238708]
[89.91500854 -64.02220154]
[91.36442566 -49.09239197]
[92.92494965 -34.17378616]
[94.48547363 -19.25518227]
[96.04598999 -4.33657789]
[107.74230957 4.81393337]
[109.53742218 19.92128944]
[99.86021423 32.12741470]
[101.42073822 47.04602051]
[112.47906494 60.67247772]
[104.84133911 77.42797089]
[106.62380219 92.32169342]
[110.63240051 99.31480408]
[108.32022858 107.45020294]
[109.88075256 122.36881256]
[111.44127655 137.28741455]
[113.11281586 152.19398499]
[114.89527893 167.08770752]
[124.21765137 179.87066650]
[118.04756927 193.42718506]
[119.83003235 208.32090759]
[121.61249542 223.21463013]
[123.39496613 238.10833740]
[132.71733093 250.89129639]
[126.54724884 264.44781494]
[128.32971191 279.34155273]
[132.45671082 287.49050903]
[130.02613831 294.47006226]
[131.58666992 309.38867188]
[133.14718628 324.30728149]
[135.15119934 339.17279053]
[137.59692383 353.97207642]
[140.04266357 368.77133179]
[155.07382202 368.66827393]
[169.93603516 370.91799927]
[184.26329041 375.46508789]
[197.70277405 382.19760132]
[209.92353821 390.94970703]
[220.62461853 401.50588989]
[229.54249573 413.60623169]
[236.45756531 426.95269775]
[241.19953918 441.21664429]
[243.65162659 456.04681396]
[243.75344849 471.07797241]
[241.50251770 485.94000244]
[236.95423889 500.26690674]
[230.22062683 513.70581055]
[221.46749878 525.92584229]
[210.91041565 536.62609863]
[198.80935669 545.54296875]
[185.46231079 552.45690918]
[171.19796753 557.19769287]
[156.36759949 559.64855957]
[141.33642578 559.74914551]
[126.47458649 557.49700928]
[112.14807892 552.94757080]
[98.70970154 546.21282959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 186]
[15 185]
[16 184]
[21 183]
[22 182]
[23 181]
[24 179]
[25 178]
[27 176]
[28 175]
[29 174]
[30 173]
[32 171]
[33 170]
[35 169]
[36 168]
[37 167]
[38 165]
[39 164]
[42 162]
[43 161]
[46 158]
[47 157]
[48 156]
[49 155]
[51 154]
[52 153]
[53 150]
[54 149]
[55 148]
[56 147]
[57 146]
[58 145]
[59 144]
[60 143]
[61 139]
[62 138]
[63 137]
[64 136]
[65 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
