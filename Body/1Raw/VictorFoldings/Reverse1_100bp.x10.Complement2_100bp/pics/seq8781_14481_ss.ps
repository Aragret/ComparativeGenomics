%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[121.65950012 456.71057129]
[119.43438721 441.87655640]
[117.20926666 427.04251099]
[114.98415375 412.20846558]
[112.75903320 397.37442017]
[107.14067841 411.28247070]
[96.68256378 422.03552246]
[82.93608856 428.03839111]
[67.94046021 428.40057373]
[53.92019653 423.06842041]
[42.95511627 412.83282471]
[36.67182159 399.21224976]
[36.00240326 384.22720337]
[41.04616547 370.10061646]
[51.05490112 358.92810059]
[64.54386902 352.36700439]
[79.51205444 351.39065552]
[93.73902893 356.14389038]
[105.11430359 365.92160034]
[111.94989014 379.27145386]
[112.84270477 364.29803467]
[113.73551941 349.32461548]
[114.62833405 334.35122681]
[107.66229248 321.18597412]
[116.20727539 307.87081909]
[117.10009003 292.89739990]
[117.99290466 277.92401123]
[117.54630280 262.93063354]
[115.76383972 248.03692627]
[113.98136902 233.14321899]
[102.15011597 224.16786194]
[100.13027954 209.08889771]
[109.62467194 196.74005127]
[107.84220886 181.84632874]
[105.50672150 167.02926636]
[102.62145233 152.30937195]
[99.73617554 137.58947754]
[96.85090637 122.86959076]
[93.96562958 108.14969635]
[89.44801331 101.47409821]
[91.14869690 93.18926239]
[88.48290253 78.42803955]
[85.81710052 63.66682434]
[82.93183136 48.94693375]
[79.82772064 34.27162933]
[76.72360992 19.59632874]
[73.61949921 4.92102575]
[70.51538849 -9.75427628]
[67.50000000 -12.87859631]
[65.80602264 -16.44159698]
[65.40911865 -19.97400093]
[66.13501740 -23.06263733]
[67.69085693 -25.39448738]
[65.46573639 -40.22853088]
[63.24061966 -55.06257248]
[61.01550293 -69.89662170]
[58.79038620 -84.73065948]
[55.53736115 -88.81293488]
[54.29931259 -93.28736115]
[54.88819885 -97.32075500]
[56.81253052 -100.27529144]
[55.25201035 -115.19389343]
[53.69148636 -130.11250305]
[52.13096237 -145.03111267]
[50.57043839 -159.94970703]
[49.00991821 -174.86831665]
[45.79664230 -189.52009583]
[40.97064590 -203.72256470]
[36.14464569 -217.92501831]
[30.42062759 -225.04353333]
[31.35423470 -232.37498474]
[26.74022675 -246.64772034]
[20.81704903 -232.86672974]
[7.98416281 -225.10032654]
[-6.97208261 -226.24519348]
[-18.47337723 -235.87432861]
[-22.23002434 -250.39628601]
[-16.84088516 -264.39477539]
[-4.31597614 -272.64865112]
[10.67322063 -272.07946777]
[22.53676796 -262.89852905]
[19.65149498 -277.61840820]
[16.76622200 -292.33831787]
[13.88094997 -307.05819702]
[10.99567699 -321.77807617]
[-4.06079102 -322.11990356]
[-18.69166183 -325.69085693]
[-32.21261978 -332.32391357]
[-43.99127197 -341.70889282]
[-53.47669983 -353.40676880]
[-60.22526169 -366.87048340]
[-63.92131042 -381.47024536]
[-64.39197540 -396.52322388]
[-61.61524200 -411.32537842]
[-55.72098923 -425.18438721]
[-46.98489380 -437.45202637]
[-35.81556320 -447.55450439]
[-22.73540497 -455.01931763]
[-8.35620308 -459.49734497]
[6.64949989 -460.77911377]
[21.57986259 -458.80468750]
[35.73656082 -453.66641235]
[48.45746613 -445.60458374]
[59.14759445 -434.99633789]
[67.30694580 -422.33776855]
[72.55390167 -408.22100830]
[74.64305115 -393.30624390]
[73.47666931 -378.29113770]
[69.10932159 -363.87792969]
[61.74527359 -350.74078369]
[51.72895432 -339.49411011]
[39.52884674 -330.66397095]
[25.71556854 -324.66336060]
[28.60084152 -309.94348145]
[31.48611450 -295.22357178]
[34.37138748 -280.50369263]
[37.25666046 -265.78378296]
[41.01295853 -251.26173401]
[45.62696838 -236.98899841]
[50.34710312 -222.75100708]
[55.17309952 -208.54855347]
[59.99909973 -194.34609985]
[62.83374405 -209.07582092]
[70.73610687 -221.82543945]
[82.66649628 -230.91751099]
[97.05526733 -235.15582275]
[112.00933075 -233.98274231]
[125.56121826 -227.55262756]
[135.92794800 -216.71145630]
[141.74559021 -202.88557434]
[142.24874878 -187.89401245]
[137.37121582 -173.70918274]
[127.75470734 -162.19731140]
[114.66445923 -154.87301636]
[99.82270813 -152.69992065]
[85.18213654 -155.96392822]
[72.66897583 -164.23561096]
[63.92852020 -176.42883301]
[65.48904419 -161.51023865]
[67.04956818 -146.59162903]
[68.61009216 -131.67301941]
[70.17061615 -116.75441742]
[71.73114014 -101.83581543]
[73.62442780 -86.95578003]
[75.84954834 -72.12173462]
[78.07466125 -57.28769302]
[80.29978180 -42.45364761]
[82.52489471 -27.61960411]
[85.19068909 -12.85838699]
[88.29479980 1.81691575]
[91.39891052 16.49221802]
[94.50302124 31.16752052]
[97.60713196 45.84282303]
[101.05025482 49.15250015]
[102.45081329 54.66026306]
[100.57832336 61.00102997]
[103.24411774 75.76224518]
[105.90991211 90.52346039]
[108.68552399 105.26442719]
[111.57079315 119.98431396]
[114.45606995 134.70420837]
[117.34133911 149.42410278]
[120.22661591 164.14399719]
[130.63377380 153.34162903]
[145.58164978 154.59097290]
[154.05123901 166.97103882]
[149.79905701 181.35571289]
[135.95967102 187.14115906]
[122.73592377 180.06387329]
[124.51839447 194.95758057]
[136.65870667 204.71720886]
[138.25422668 219.84695435]
[128.87509155 231.36074829]
[130.65754700 246.25447083]
[132.44001770 261.14819336]
[139.01347351 247.66523743]
[150.73213196 238.30186462]
[165.33331299 234.86595154]
[179.99777222 238.02095032]
[191.89399719 247.15768433]
[198.72503662 260.51196289]
[199.17192078 275.50531006]
[193.14837646 289.24273682]
[181.81742859 299.07174683]
[167.36691284 303.09454346]
[152.58702087 300.53436279]
[140.33148193 291.88552856]
[132.96630859 278.81680298]
[132.07350159 293.79022217]
[131.18067932 308.76361084]
[138.08287048 322.99987793]
[129.60174561 335.24404907]
[128.70892334 350.21743774]
[127.81610870 365.19085693]
[126.92329407 380.16424561]
[127.59307861 395.14929199]
[129.81819153 409.98333740]
[132.04331970 424.81738281]
[134.26843262 439.65142822]
[136.49354553 454.48547363]
[150.97189331 459.44894409]
[161.47676086 470.58026123]
[165.59422302 485.32153320]
[162.37809753 500.28530884]
[152.56742859 512.03308105]
[138.41664124 517.86523438]
[123.17749023 516.44158936]
[110.35181427 508.08929443]
[102.88684845 494.72769165]
[102.49800873 479.42712402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 200]
[2 199]
[3 198]
[4 197]
[5 196]
[20 195]
[21 194]
[22 193]
[23 192]
[25 190]
[26 189]
[27 188]
[28 175]
[29 174]
[30 173]
[33 170]
[34 169]
[35 163]
[36 162]
[37 161]
[38 160]
[39 159]
[41 158]
[42 157]
[43 156]
[44 153]
[45 152]
[46 151]
[47 150]
[48 149]
[53 148]
[54 147]
[55 146]
[56 145]
[57 144]
[61 143]
[62 142]
[63 141]
[64 140]
[65 139]
[66 138]
[67 122]
[68 121]
[69 120]
[71 119]
[72 118]
[81 117]
[82 116]
[83 115]
[84 114]
[85 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
