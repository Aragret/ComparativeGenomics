%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[267.84997559 442.58950806]
[260.97055054 429.26010132]
[254.09115601 415.93066406]
[241.37849426 408.16937256]
[241.92494202 392.35760498]
[235.04551697 379.02819824]
[228.16610718 365.69876099]
[224.93637085 364.28414917]
[222.23133850 361.23492432]
[220.81184387 356.81469727]
[221.29219055 351.61697388]
[215.01483154 337.99365234]
[208.73747253 324.37033081]
[202.46011353 310.74700928]
[191.22441101 306.26531982]
[185.88314819 294.96688843]
[189.79277039 282.67553711]
[183.71894836 268.96026611]
[177.64511108 255.24501038]
[171.16561890 241.71665955]
[164.28619385 228.38722229]
[157.40678406 215.05780029]
[150.52737427 201.72836304]
[143.64796448 188.39894104]
[136.27726746 175.33476257]
[124.58861542 172.21997070]
[117.94258881 161.63630676]
[120.36392975 148.96743774]
[112.70333099 136.07112122]
[105.04273224 123.17478943]
[97.38213348 110.27846527]
[89.24691772 97.67614746]
[80.64835358 85.38531494]
[72.04978943 73.09447479]
[73.91374207 87.97821045]
[71.14889526 102.72119904]
[64.01878357 115.91822052]
[53.20299530 126.31143188]
[39.73242950 132.91020203]
[24.89101028 135.08560181]
[10.09333134 132.63026428]
[-3.25018978 125.77822113]
[-13.86773300 115.18257141]
[-20.74730110 101.85322571]
[-23.23317719 87.06064606]
[-21.08842659 72.21476746]
[-14.51746941 58.73060989]
[-4.14660931 47.89339066]
[9.03567028 40.73605347]
[23.77291679 37.94078064]
[38.66047287 39.77400589]
[52.27934647 46.06099319]
[63.33218765 56.20339966]
[58.29527283 42.07436752]
[53.25835419 27.94533920]
[48.22143936 13.81630898]
[36.29938126 3.41558194]
[39.31367111 -11.17082691]
[34.27675629 -25.29985619]
[29.23983955 -39.42888641]
[27.41346359 -24.54048920]
[21.84523392 -10.61228657]
[12.90447235 1.43191385]
[1.18418562 10.79326439]
[-12.53826046 16.85086060]
[-27.35270691 19.20292091]
[-42.27656174 17.69344711]
[-56.31998444 12.42255116]
[-68.55152130 3.73983717]
[-78.15989685 -7.77880383]
[-84.50782776 -21.36938095]
[-87.17427063 -36.13048172]
[-85.98237610 -51.08305359]
[-81.01119995 -65.23534393]
[-72.59045410 -77.64868927]
[-61.27866745 -87.49974823]
[-47.82609940 -94.13514709]
[-33.12501907 -97.11476898]
[-18.15048790 -96.24099731]
[-3.89572001 -91.57177734]
[8.69382095 -83.41681671]
[18.78311348 -72.31698608]
[25.70473480 -59.00369263]
[25.48140717 -74.00202942]
[25.03480148 -88.99537659]
[24.36501694 -103.98041534]
[23.69523239 -118.96545410]
[23.02544594 -133.95050049]
[20.21477318 -138.34904480]
[19.44894028 -142.92799377]
[20.45424271 -146.87823486]
[22.67550850 -149.61654663]
[22.67550850 -164.61654663]
[22.67550850 -179.61654663]
[14.93820858 -193.41671753]
[22.67550850 -206.14398193]
[22.67550850 -221.14398193]
[22.67550850 -236.14398193]
[22.67550850 -251.14398193]
[22.67550850 -266.14398193]
[9.33438110 -273.75384521]
[1.59941173 -287.02282715]
[1.55126905 -302.38162231]
[9.20290279 -315.69885254]
[22.49606323 -323.39218140]
[37.85495377 -323.39218140]
[51.14811707 -315.69885254]
[58.79974747 -302.38162231]
[58.75160599 -287.02282715]
[51.01663589 -273.75384521]
[37.67551041 -266.14398193]
[37.67551041 -251.14398193]
[37.67551041 -236.14398193]
[37.67551041 -221.14398193]
[37.67551041 -206.14398193]
[45.41281128 -193.41671753]
[37.67551041 -179.61654663]
[37.67551041 -164.61654663]
[37.67551041 -149.61654663]
[38.01048660 -134.62028503]
[38.68027115 -119.63523865]
[39.35005569 -104.65019989]
[40.01984024 -89.66516113]
[42.87725067 -85.83837891]
[43.36103058 -80.17596436]
[40.47974396 -74.22535706]
[40.70307159 -59.22702026]
[43.36886978 -44.46580124]
[48.40578461 -30.33677292]
[53.44269943 -16.20774269]
[65.00448608 -6.81761885]
[62.35046768 8.77939320]
[67.38738251 22.90842247]
[72.42430115 37.03745270]
[77.46121979 51.16648102]
[84.34062958 64.49591064]
[92.93919373 76.78675079]
[101.53775787 89.07758331]
[106.67943573 74.98634338]
[120.85293579 70.07595062]
[133.61007690 77.96616364]
[135.54676819 92.84060669]
[125.23535156 103.73440552]
[110.27846527 102.61786652]
[117.93905640 115.51419067]
[125.59965515 128.41052246]
[133.26025391 141.30683899]
[149.52513123 149.94023132]
[149.05812073 167.48300171]
[155.02940369 153.72277832]
[169.47004700 149.66470337]
[181.73493958 158.30024719]
[182.78285217 173.26359558]
[171.84130859 183.52433777]
[156.97738647 181.51953125]
[163.85681152 194.84895325]
[170.73622131 208.17839050]
[177.61563110 221.50781250]
[184.49504089 234.83724976]
[188.23013306 237.05152893]
[190.80714417 240.03877258]
[192.12527466 243.33996582]
[192.24317932 246.51057434]
[191.36038208 249.17117310]
[197.43420410 262.88644409]
[203.50804138 276.60171509]
[218.63175964 287.10668945]
[216.08343506 304.46966553]
[222.36079407 318.09298706]
[228.63815308 331.71630859]
[234.91551208 345.33959961]
[241.49554443 358.81933594]
[248.37495422 372.14877319]
[255.25436401 385.47821045]
[268.45907593 394.19290161]
[267.42059326 409.05123901]
[274.29998779 422.38067627]
[281.17941284 435.71011353]
[295.56143188 431.30587769]
[310.49874878 429.54067993]
[325.51123047 430.47119141]
[340.11621094 434.06753540]
[353.84426880 440.21411133]
[366.25405884 448.71331787]
[376.94671631 459.29196167]
[385.57843018 471.60995483]
[391.87179565 485.27133179]
[395.62448120 499.83694458]
[396.71588135 514.83856201]
[395.11083984 529.79394531]
[390.86105347 544.22235107]
[384.10305786 557.65997314]
[375.05410767 569.67480469]
[364.00509644 579.88067627]
[351.31121826 587.94946289]
[337.38052368 593.62176514]
[322.66082764 596.71533203]
[307.62530518 597.13067627]
[292.75726318 594.85443115]
[278.53466797 589.95971680]
[265.41473389 582.60400391]
[253.81918335 573.02368164]
[244.12077332 561.52667236]
[236.63128662 548.48260498]
[231.59144592 534.31085205]
[229.16328430 519.46685791]
[229.42485046 504.42785645]
[232.36775208 489.67727661]
[237.89735413 475.68933105]
[245.83593750 462.91360474]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 178]
[2 177]
[3 176]
[5 174]
[6 173]
[7 172]
[11 171]
[12 170]
[13 169]
[14 168]
[17 166]
[18 165]
[19 164]
[20 159]
[21 158]
[22 157]
[23 156]
[24 155]
[25 149]
[28 147]
[29 146]
[30 145]
[31 144]
[32 138]
[33 137]
[34 136]
[53 135]
[54 134]
[55 133]
[56 132]
[58 130]
[59 129]
[60 128]
[83 127]
[84 126]
[85 123]
[86 122]
[87 121]
[88 120]
[92 119]
[93 118]
[94 117]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
