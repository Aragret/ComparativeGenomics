%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[104.90470123 524.11737061]
[99.73705292 510.01034546]
[96.53851318 495.33099365]
[95.36868286 480.35284424]
[96.24933624 465.35488892]
[99.16407776 450.61657715]
[104.05860901 436.41244507]
[110.84173584 423.00711060]
[119.38710785 410.65032959]
[129.53552246 399.57226562]
[141.09791565 389.97930908]
[153.85890198 382.05017090]
[167.58074951 375.93258667]
[163.39373779 361.52880859]
[159.20672607 347.12503052]
[154.32109070 341.57952881]
[155.06631470 332.47555542]
[151.09422302 318.01104736]
[147.12211609 303.54650879]
[143.15002441 289.08200073]
[139.17793274 274.61746216]
[135.20582581 260.15295410]
[124.37448120 249.92889404]
[128.18119812 234.57247925]
[117.34983826 224.34843445]
[121.15655518 208.99201965]
[110.80194092 202.73834229]
[107.37434387 190.72021484]
[113.23574829 179.23080444]
[109.47944641 164.70874023]
[98.80151367 154.32456970]
[102.83644104 139.02653503]
[99.08014679 124.50447083]
[95.10804749 110.03994751]
[90.81392670 95.66773987]
[86.41292572 81.32788849]
[82.01192474 66.98804474]
[77.61093140 52.64819717]
[73.20993042 38.30834961]
[68.80893707 23.96850204]
[64.40793610 9.62865448]
[58.89839935 2.34285855]
[60.04987717 -4.95754480]
[55.86286545 -19.36132622]
[51.67585373 -33.76511002]
[47.48884201 -48.16889191]
[44.18355942 -33.53758621]
[36.13170624 -20.88184929]
[24.27921104 -11.68846321]
[10.01848984 -7.03745985]
[-4.97512054 -7.47523260]
[-18.94018555 -12.95035267]
[-30.23610497 -22.81960869]
[-37.53584290 -35.92357254]
[-39.98183441 -50.72279739]
[-37.28672791 -65.47869110]
[-29.76714325 -78.45774841]
[-18.30646896 -88.13519287]
[-4.25109720 -93.37413025]
[10.74776268 -93.55910492]
[24.92805862 -88.66838074]
[36.62390137 -79.27651215]
[44.46186066 -66.48538971]
[43.79207611 -81.47042847]
[43.12228775 -96.45546722]
[42.45250320 -111.44050598]
[41.78271866 -126.42554474]
[33.00058365 -114.26519012]
[19.07746124 -108.68427277]
[4.32757998 -111.41210175]
[-6.67864704 -121.60341644]
[-10.53082085 -136.10034180]
[-6.03530455 -150.41084290]
[5.41491842 -160.10064697]
[20.27187157 -162.16726685]
[33.93196487 -155.97035217]
[42.16254807 -143.42982483]
[43.50078201 -158.37001038]
[41.07006454 -164.51843262]
[41.97365570 -170.12918091]
[45.10777283 -173.73284912]
[46.89023972 -188.62655640]
[48.67270660 -203.52027893]
[50.45516968 -218.41400146]
[52.23763657 -233.30770874]
[54.02010345 -248.20143127]
[51.96421814 -252.99938965]
[51.95522308 -257.64193726]
[53.59115601 -261.37539673]
[56.22917175 -263.71487427]
[58.67490005 -278.51416016]
[61.12062836 -293.31341553]
[63.56635666 -308.11270142]
[64.34767914 -323.09234619]
[63.45486069 -338.06573486]
[62.56204605 -353.03915405]
[48.18546295 -357.97698975]
[36.79617691 -368.04440308]
[30.13096619 -381.70614624]
[29.20623016 -396.87893677]
[34.16298294 -411.24899292]
[44.24535751 -422.62503052]
[57.91586685 -429.27227783]
[73.08985138 -430.17703247]
[87.45339203 -425.20138550]
[98.81615448 -415.10406494]
[105.44539642 -401.42483521]
[106.33020782 -386.24966431]
[101.33567047 -371.89266968]
[91.22339630 -360.54321289]
[77.53545380 -353.93197632]
[78.42826843 -338.95855713]
[79.32108307 -323.98516846]
[85.95506287 -337.43841553]
[96.95150757 -347.64028931]
[110.86363983 -353.24853516]
[125.86108398 -353.52532959]
[139.97067261 -348.43420410]
[151.33604431 -338.64498901]
[158.46188354 -325.44564819]
[160.41065979 -310.57278442]
[156.92599487 -295.98315430]
[148.46633911 -283.59631348]
[136.14472961 -275.04190063]
[121.58225250 -271.44546509]
[106.69487762 -273.28012085]
[93.44128418 -280.30453491]
[83.56521606 -291.59451294]
[78.36562347 -305.66696167]
[75.91989899 -290.86770630]
[73.47417450 -276.06842041]
[71.02844238 -261.26916504]
[68.91381836 -246.41896057]
[67.13135529 -231.52525330]
[65.34889221 -216.63153076]
[63.56642151 -201.73780823]
[61.78395844 -186.84410095]
[60.00149155 -171.95037842]
[58.44096756 -157.03176880]
[57.10273361 -142.09158325]
[56.76775742 -127.09532928]
[57.43754196 -112.11029053]
[58.10732651 -97.12525177]
[58.77711487 -82.14021301]
[59.44689941 -67.15517426]
[61.89262390 -52.35590363]
[66.07963562 -37.95212173]
[70.26664734 -23.54833794]
[74.45365906 -9.14455605]
[78.74777985 5.22765684]
[83.14878082 19.56750298]
[87.54978180 33.90735245]
[91.95077515 48.24720001]
[96.35177612 62.58704376]
[100.75276947 76.92689514]
[105.15377045 91.26673889]
[110.34136963 97.43612671]
[109.51183319 105.85293579]
[114.01221466 110.69628906]
[115.21108246 116.25144196]
[113.60220337 120.74817657]
[117.35850525 135.27023315]
[128.30511475 146.69311523]
[124.00151062 160.95243835]
[127.75780487 175.47450256]
[140.96632385 188.30480957]
[135.62107849 205.01992798]
[146.73654175 216.27856445]
[142.64572144 230.60038757]
[153.76118469 241.85902405]
[149.67034912 256.18084717]
[153.64245605 270.64535522]
[157.61454773 285.10989380]
[161.58663940 299.57440186]
[165.55874634 314.03894043]
[169.53083801 328.50344849]
[173.61050415 342.93801880]
[177.79751587 357.34179688]
[181.98452759 371.74557495]
[196.84757996 369.55386353]
[211.87062073 369.40652466]
[226.77380371 371.30621338]
[241.27947998 375.21762085]
[255.11743164 381.06787109]
[268.02984619 388.74792480]
[279.77615356 398.11474609]
[290.13760376 408.99383545]
[298.92108154 421.18252563]
[305.96301270 434.45373535]
[311.13217163 448.56024170]
[314.33230591 463.23922729]
[315.50375366 478.21725464]
[314.62472534 493.21530151]
[311.71157837 507.95394897]
[306.81860352 522.15856934]
[300.03689575 535.56463623]
[291.49288940 547.92236328]
[281.34567261 559.00152588]
[269.78430176 568.59576416]
[257.02416992 576.52624512]
[243.30299377 582.64532471]
[228.87638855 586.83898926]
[214.01310730 589.02905273]
[198.99003601 589.17480469]
[184.08706665 587.27349854]
[169.58180237 583.36053467]
[155.74450684 577.50878906]
[142.83291626 569.82733154]
[131.08760071 560.45922852]
[120.72735596 549.57897949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 179]
[14 178]
[15 177]
[17 176]
[18 175]
[19 174]
[20 173]
[21 172]
[22 171]
[24 169]
[26 167]
[29 165]
[30 164]
[32 162]
[33 161]
[34 158]
[35 156]
[36 155]
[37 154]
[38 153]
[39 152]
[40 151]
[41 150]
[43 149]
[44 148]
[45 147]
[46 146]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[77 140]
[78 139]
[81 138]
[82 137]
[83 136]
[84 135]
[85 134]
[86 133]
[90 132]
[91 131]
[92 130]
[93 129]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
