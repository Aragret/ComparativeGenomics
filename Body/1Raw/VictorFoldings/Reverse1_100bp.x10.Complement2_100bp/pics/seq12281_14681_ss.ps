%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[157.57820129 555.32806396]
[142.69029236 552.82751465]
[129.02961731 546.40191650]
[117.60987091 536.52807617]
[109.27848816 523.93878174]
[104.65370178 509.56820679]
[104.07870483 494.48272705]
[107.59616852 479.80178833]
[114.94507599 466.61480713]
[125.58007812 455.90036011]
[138.71200562 448.45355225]
[153.36636353 444.82693481]
[153.81297302 429.83358765]
[154.25958252 414.84024048]
[154.70617676 399.84689331]
[155.15278625 384.85354614]
[155.59939575 369.86019897]
[156.04600525 354.86682129]
[154.26353455 339.97311401]
[150.29144287 325.50860596]
[146.31933594 311.04406738]
[142.34724426 296.57955933]
[137.54472351 290.96194458]
[138.42539978 281.87005615]
[134.66909790 267.34799194]
[120.76621246 262.07092285]
[112.53926849 249.47006226]
[113.31877899 234.26330566]
[123.01510620 222.29302979]
[119.25881195 207.77096558]
[115.50251007 193.24891663]
[111.74620819 178.72685242]
[107.98990631 164.20478821]
[103.27155304 158.51629639]
[104.28750610 149.43853760]
[100.74783325 134.86216736]
[90.22568512 124.32016754]
[94.48793030 109.08390045]
[89.98030090 94.77721405]
[84.52494812 80.80442047]
[79.06958771 66.83161926]
[73.61423492 52.85882568]
[68.15887451 38.88602448]
[59.83717728 51.36598587]
[44.90522003 52.79306793]
[34.37028122 42.11528015]
[35.99832916 27.20389366]
[48.58922958 19.05102539]
[62.86023331 23.66553116]
[58.45923615 9.32568455]
[54.05823898 -5.01416254]
[49.44422913 -19.28689575]
[44.61822891 -33.48935318]
[39.79223251 -47.69180679]
[34.75531769 -61.82083511]
[29.50859833 -75.87330627]
[24.26188087 -89.92578125]
[19.01516151 -103.97824860]
[13.35237503 -117.86827850]
[7.27854156 -131.58354187]
[1.20470750 -145.29881287]
[-4.86912632 -159.01408386]
[-10.94296074 -172.72933960]
[-17.01679420 -186.44461060]
[-17.85589981 -171.46809387]
[-22.82606888 -157.31544495]
[-31.53533363 -145.10281372]
[-43.29684448 -135.79330444]
[-57.18304062 -130.12112427]
[-72.09879303 -128.53361511]
[-86.86779785 -131.15594482]
[-100.32529449 -137.78134155]
[-111.40997314 -147.88726807]
[-119.24765015 -160.67675781]
[-123.22021484 -175.14114380]
[-123.01437378 -190.13973999]
[-118.64636230 -204.48966980]
[-110.46065521 -217.05923462]
[-99.10282135 -226.85717773]
[-85.46857452 -233.11074829]
[-70.63317108 -235.32681274]
[-55.76659775 -233.33056641]
[-42.04129410 -227.27944946]
[-30.53969002 -217.65068054]
[-22.16734123 -205.20050049]
[-23.94980621 -220.09422302]
[-33.27217484 -232.87718201]
[-27.10209084 -246.43370056]
[-28.88455772 -261.32742310]
[-30.66702271 -276.22113037]
[-45.60368729 -278.35620117]
[-59.47842026 -284.28527832]
[-71.34522247 -293.60415649]
[-80.39499664 -305.67742920]
[-86.01071167 -319.68194580]
[-87.80947113 -334.66284180]
[-85.66864777 -349.59866333]
[-79.73419952 -363.47109985]
[-70.41074371 -375.33432007]
[-58.33397293 -384.37942505]
[-44.32729721 -389.98974609]
[-29.34572220 -391.78271484]
[-14.41071129 -389.63610840]
[-0.54055959 -383.69631958]
[11.31904316 -374.36828613]
[20.35948944 -362.28802490]
[25.96438599 -348.27917480]
[27.75158119 -333.29690552]
[25.59922409 -318.36273193]
[19.65406227 -304.49487305]
[10.32144833 -292.63888550]
[-1.76230466 -283.60308838]
[-15.77330589 -278.00360107]
[-13.99083996 -263.10989380]
[-12.20837402 -248.21617126]
[-3.01350141 -236.49850464]
[-9.05608940 -221.87667847]
[-7.27362394 -206.98297119]
[-3.30152774 -192.51844788]
[2.77230620 -178.80317688]
[8.84613991 -165.08790588]
[14.91997433 -151.37265015]
[20.99380875 -137.65737915]
[27.06764221 -123.94210815]
[29.63108253 -122.80768585]
[31.89961624 -120.58950043]
[33.45820236 -117.39478302]
[33.93825150 -113.47890472]
[33.06763458 -109.22496796]
[38.31435013 -95.17250061]
[43.56106949 -81.12002563]
[48.80778885 -67.06755829]
[52.70377731 -64.30525208]
[54.90586853 -59.06618500]
[53.99468994 -52.51780319]
[58.82068634 -38.31534958]
[63.64668274 -24.11289406]
[67.45870209 -21.23581696]
[69.50382996 -15.93350887]
[68.39808655 -9.41516018]
[72.79907990 4.92468691]
[77.20008087 19.26453400]
[82.13167572 33.43066788]
[87.58702850 47.40346527]
[93.04238892 61.37626648]
[98.49774170 75.34906006]
[103.95310211 89.32186127]
[108.35590363 74.98256683]
[119.74317932 65.21885681]
[134.58644104 63.05611420]
[148.28636169 69.16449738]
[156.59785461 81.65125275]
[156.94552612 96.64721680]
[149.22163391 109.50574493]
[135.81953430 116.24246216]
[120.89198303 114.76993561]
[109.06430817 105.54423523]
[119.83963776 117.12882996]
[115.32420349 131.32249451]
[118.86387634 145.89888000]
[122.51196289 160.44848633]
[126.26826477 174.97055054]
[130.02456665 189.49261475]
[133.78086853 204.01466370]
[137.53717041 218.53672791]
[151.82154846 224.30410767]
[159.87678528 237.22566223]
[158.79158020 252.23519897]
[149.19116211 263.59170532]
[152.94746399 278.11376953]
[156.81176758 292.60745239]
[160.78385925 307.07196045]
[164.75596619 321.53649902]
[168.72805786 336.00100708]
[171.77951050 321.31466675]
[178.79411316 308.05590820]
[189.21865845 297.27032471]
[202.23103333 289.80853271]
[216.80500793 286.25900269]
[231.79122925 286.90167236]
[246.00782776 291.68585205]
[258.33361816 300.23422241]
[267.79653931 311.87265015]
[273.65029907 325.68328857]
[275.43322754 340.57696533]
[273.00476074 355.37905884]
[266.55639648 368.92227173]
[256.59667969 380.13851929]
[243.91105652 388.14318848]
[229.50000000 392.30508423]
[214.50000000 392.29589844]
[200.09402466 388.11642456]
[187.41821289 380.09622192]
[177.47219849 368.86782837]
[171.03935242 355.31344604]
[170.59274292 370.30679321]
[170.14613342 385.30014038]
[169.69953918 400.29348755]
[169.25292969 415.28683472]
[168.80632019 430.28018188]
[168.35971069 445.27352905]
[182.77223206 449.76596069]
[195.43763733 457.98120117]
[205.41604614 469.30966187]
[211.96702576 482.91067505]
[214.60443115 497.77493286]
[213.13255310 512.79943848]
[207.66061401 526.86932373]
[198.59466553 538.94036865]
[186.60746765 548.11694336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 201]
[13 200]
[14 199]
[15 198]
[16 197]
[17 196]
[18 195]
[19 174]
[20 173]
[21 172]
[22 171]
[24 170]
[25 169]
[29 165]
[30 164]
[31 163]
[32 162]
[33 161]
[35 160]
[36 159]
[38 157]
[39 147]
[40 146]
[41 145]
[42 144]
[43 143]
[49 142]
[50 141]
[51 140]
[52 137]
[53 136]
[54 135]
[55 132]
[56 131]
[57 130]
[58 129]
[59 124]
[60 123]
[61 122]
[62 121]
[63 120]
[64 119]
[85 118]
[86 117]
[88 115]
[89 114]
[90 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
