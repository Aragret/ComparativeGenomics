%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[176.81576538 782.12463379]
[164.21171570 773.98291016]
[152.14376831 765.06585693]
[140.65954590 755.40863037]
[129.80436707 745.04937744]
[119.62106323 734.02893066]
[110.14984131 722.39080811]
[101.42807770 710.18096924]
[93.49018860 697.44757080]
[86.36750031 684.24090576]
[80.08812714 670.61303711]
[74.67684937 656.61773682]
[70.15502167 642.31030273]
[66.54048920 627.74719238]
[63.84751892 612.98583984]
[62.08673859 598.08453369]
[61.26509476 583.10205078]
[61.38583755 568.09759521]
[62.44848251 553.13024902]
[64.44883728 538.25921631]
[67.37901306 523.54309082]
[71.22743988 509.04003906]
[75.97892761 494.80725098]
[81.61473083 480.90087891]
[88.11260223 467.37582397]
[95.44689941 454.28546143]
[103.58867645 441.68145752]
[112.50580597 429.61355591]
[122.16309357 418.12936401]
[132.52241516 407.27423096]
[143.54290771 397.09100342]
[155.18106079 387.61984253]
[167.39094543 378.89813232]
[180.12438965 370.96029663]
[193.33111572 363.83770752]
[187.05375671 350.21438599]
[174.70033264 341.89318848]
[175.95227051 326.12158203]
[169.67491150 312.49829102]
[163.39755249 298.87496948]
[155.83341980 311.82809448]
[141.01287842 314.14141846]
[129.86106873 304.10961914]
[130.59869385 289.12777710]
[142.68199158 280.23992920]
[157.20236206 283.99682617]
[151.95564270 269.94436646]
[146.70892334 255.89189148]
[141.46220398 241.83941650]
[136.21548462 227.78694153]
[130.93093872 222.62019348]
[130.99696350 213.48600769]
[125.96005249 199.35697937]
[120.75301361 194.11212158]
[120.95503235 184.97991943]
[116.12903595 170.77746582]
[111.30303955 156.57501221]
[106.47703552 142.37255859]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[79.21491241 62.48976517]
[74.17799377 48.36073303]
[69.14107513 34.23170471]
[64.10416412 20.10267639]
[59.32347107 15.53577995]
[57.79608536 10.06183052]
[59.13446045 5.47731304]
[47.52735519 -5.27376747]
[50.97460175 -19.76396370]
[46.36059189 -34.03669739]
[41.74658203 -48.30942917]
[37.13257599 -62.58216476]
[25.52547073 -73.33324432]
[28.97271538 -87.82344055]
[24.35870743 -102.09617615]
[19.74469757 -116.36890411]
[4.81106186 -114.52960205]
[-10.20077515 -115.55001831]
[-24.74814606 -119.39325714]
[-38.30517197 -125.92040253]
[-50.38177490 -134.89549255]
[-60.54139328 -145.99407959]
[-68.41676331 -158.81495667]
[-73.72319031 -172.89466858]
[-76.26885986 -187.72424316]
[-75.96174622 -202.76757812]
[-72.81294250 -217.48089600]
[-66.93628693 -231.33229065]
[-58.54420471 -243.82107544]
[-47.94007492 -254.49575806]
[-35.50722504 -262.97045898]
[-21.69509888 -268.93884277]
[-7.00299168 -272.18515015]
[8.03798389 -272.59204102]
[22.88410759 -270.14474487]
[36.99869919 -264.93182373]
[49.87152481 -257.14163208]
[61.03724289 -247.05584717]
[70.09221649 -235.03903198]
[76.70912170 -221.52558899]
[80.64875031 -207.00401306]
[81.76869202 -191.99928284]
[80.02845764 -177.05377197]
[75.49096680 -162.70777893]
[68.32023621 -149.47988892]
[58.77548981 -137.84828186]
[47.20175934 -128.23342896]
[34.01742935 -120.98291779]
[38.63143921 -106.71018219]
[43.24544907 -92.43744659]
[54.52252579 -82.70725250]
[51.40530777 -67.19617462]
[56.01931763 -52.92343903]
[60.63332748 -38.65070724]
[65.24733734 -24.37797165]
[76.52441406 -14.64777374]
[73.40719604 0.86330372]
[78.23319244 15.06575966]
[83.27011108 29.19478798]
[88.30702209 43.32381821]
[93.34394073 57.45284653]
[98.55097961 62.69770432]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[120.67949677 137.54655457]
[125.50549316 151.74900818]
[130.33148193 165.95146179]
[135.15748596 180.15393066]
[140.08908081 194.32005310]
[145.12599182 208.44908142]
[150.26795959 222.54022217]
[155.51467896 236.59269714]
[160.76139832 250.64517212]
[166.00811768 264.69763184]
[171.25482178 278.75012207]
[177.02085876 292.59759521]
[183.29821777 306.22091675]
[189.57557678 319.84423828]
[202.37800598 329.13986206]
[200.67707825 343.93701172]
[206.95443726 357.56033325]
[220.94961548 352.14883423]
[235.25697327 347.62677002]
[249.82003784 344.01202393]
[264.58135986 341.31881714]
[279.48263550 339.55780029]
[294.46508789 338.73593140]
[309.46960449 338.85644531]
[324.43692017 339.91885376]
[339.30798340 341.91897583]
[354.02413940 344.84890747]
[368.52728271 348.69711304]
[382.76016235 353.44839478]
[396.66662598 359.08395386]
[410.19177246 365.58163452]
[423.28225708 372.91571045]
[435.88638306 381.05731201]
[447.95440674 389.97424316]
[459.43875122 399.63134766]
[470.29403687 409.99050903]
[480.47744751 421.01083374]
[489.94879150 432.64883423]
[498.67068481 444.85858154]
[506.60870361 457.59188843]
[513.73150635 470.79852295]
[520.01104736 484.42633057]
[525.42248535 498.42153931]
[529.94445801 512.72894287]
[533.55914307 527.29199219]
[536.25225830 542.05334473]
[538.01318359 556.95465088]
[538.83502197 571.93707275]
[538.71441650 586.94158936]
[537.65191650 601.90887451]
[535.65173340 616.77996826]
[532.72167969 631.49609375]
[528.87341309 645.99920654]
[524.12207031 660.23205566]
[518.48645020 674.13848877]
[511.98870850 687.66363525]
[504.65454102 700.75408936]
[496.51287842 713.35815430]
[487.59588623 725.42614746]
[477.93872070 736.91040039]
[467.57949829 747.76568604]
[456.55911255 757.94903564]
[444.92108154 767.42028809]
[432.71127319 776.14215088]
[419.97790527 784.08007812]
[406.77127075 791.20281982]
[393.14343262 797.48229980]
[379.14819336 802.89361572]
[364.84075928 807.41552734]
[350.27767944 811.03015137]
[335.51632690 813.72320557]
[320.61502075 815.48406982]
[305.63256836 816.30578613]
[290.62805176 816.18511963]
[275.66076660 815.12255859]
[260.78970337 813.12225342]
[246.07357788 810.19213867]
[231.57049561 806.34381104]
[217.33766174 801.59240723]
[203.43125916 795.95666504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 147]
[36 146]
[38 144]
[39 143]
[40 142]
[46 141]
[47 140]
[48 139]
[49 138]
[50 137]
[52 136]
[53 135]
[55 134]
[56 133]
[57 132]
[58 131]
[59 130]
[60 129]
[62 127]
[63 126]
[64 124]
[65 123]
[66 122]
[67 121]
[70 120]
[72 118]
[73 117]
[74 116]
[75 115]
[77 113]
[78 112]
[79 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
