%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[115.14022064 492.22973633]
[100.10787964 495.69851685]
[85.59424591 490.46801758]
[76.23056793 478.20730591]
[75.00476837 462.82870483]
[82.30798340 449.23950195]
[95.80978394 441.77593994]
[96.70259857 426.80252075]
[89.73655701 413.63729858]
[98.28153992 400.32211304]
[99.17436218 385.34872437]
[100.06717682 370.37530518]
[97.32736969 363.51126099]
[101.08638763 355.18612671]
[102.20203400 340.22769165]
[103.31768799 325.26922607]
[104.43333435 310.31076050]
[105.54898071 295.35232544]
[106.55324554 280.38598633]
[107.44606018 265.41256714]
[108.33887482 250.43916321]
[109.23168945 235.46575928]
[108.67347717 220.47615051]
[106.66946411 205.61062622]
[97.30115509 194.03115845]
[103.12537384 179.32098389]
[101.12136078 164.45545959]
[91.75305176 152.87599182]
[97.57727051 138.16583252]
[95.57325745 123.30030060]
[93.56924438 108.43476868]
[90.79363251 93.69380951]
[87.25395966 79.11743164]
[83.71428680 64.54106140]
[80.17461395 49.96468353]
[76.63494110 35.38830566]
[73.09526825 20.81193161]
[63.18083954 32.06822205]
[48.19208145 31.48758888]
[39.17815018 19.49805069]
[42.78377914 4.93784952]
[56.35103226 -1.45977521]
[69.87760162 5.01998234]
[67.43186951 -9.77928829]
[64.11843109 -13.81267262]
[62.81390381 -18.26817513]
[63.34267044 -22.30988884]
[65.22280121 -25.29274750]
[63.44033432 -40.18646622]
[61.65787125 -55.08018112]
[59.87540436 -69.97389984]
[57.98211288 -84.85393524]
[55.97809982 -99.71945953]
[53.97408295 -114.58499146]
[44.46243286 -127.22773743]
[50.42999268 -140.87461853]
[48.42597961 -155.74014282]
[46.42196655 -170.60568237]
[44.30734253 -185.45587158]
[42.08222580 -200.28991699]
[39.85710907 -215.12396240]
[37.63199234 -229.95800781]
[35.40687561 -244.79205322]
[29.23777390 -231.11936951]
[17.80308914 -221.41122437]
[3.31067705 -217.54211426]
[-11.44120407 -220.25910950]
[-23.60419655 -229.03758240]
[-30.82981682 -242.18255615]
[-31.72291374 -257.15594482]
[-26.11104012 -271.06661987]
[-15.07776356 -281.22863770]
[-0.75343639 -285.67990112]
[14.09613895 -283.56091309]
[26.60374069 -275.28082275]
[34.35475159 -262.43719482]
[34.80135727 -277.43054199]
[35.24796295 -292.42388916]
[35.69456863 -307.41723633]
[28.37158203 -321.44165039]
[36.48439026 -333.93292236]
[36.93099594 -348.92626953]
[22.09180832 -351.25042725]
[7.66093969 -355.41613770]
[-6.13401270 -361.35775757]
[-19.07548332 -368.98150635]
[-30.95936584 -378.16717529]
[-41.59823608 -388.76989746]
[-50.82430267 -400.62243652]
[-58.49205399 -413.53787231]
[-64.48056030 -427.31253052]
[-68.69538116 -441.72915649]
[-71.07003784 -456.56033325]
[-71.56707001 -471.57220459]
[-70.17864990 -486.52798462]
[-66.92667389 -501.19180298]
[-61.86243057 -515.33239746]
[-55.06578064 -528.72680664]
[-46.64392853 -541.16363525]
[-36.72969437 -552.44689941]
[-25.47944069 -562.39849854]
[-13.07059765 -570.86157227]
[0.30112606 -577.70263672]
[14.42484093 -582.81384277]
[29.07779503 -586.11444092]
[44.02888870 -587.55249023]
[59.04232407 -587.10528564]
[73.88131714 -584.77990723]
[88.31183624 -580.61297607]
[102.10628510 -574.67022705]
[115.04711914 -567.04534912]
[126.93022919 -557.85870361]
[137.56820679 -547.25506592]
[146.79327393 -535.40173340]
[154.45993042 -522.48565674]
[160.44728088 -508.71051025]
[164.66088867 -494.29354858]
[167.03430176 -479.46212769]
[167.53007507 -464.45022583]
[166.14039612 -449.49456787]
[162.88717651 -434.83099365]
[157.82174683 -420.69082642]
[151.02397156 -407.29705811]
[142.60107422 -394.86090088]
[132.68588257 -383.57849121]
[121.43479156 -373.62780762]
[109.02523804 -365.16577148]
[95.65293884 -358.32583618]
[81.52879333 -353.21585083]
[66.87556458 -349.91644287]
[51.92434692 -348.47964478]
[51.47774124 -333.48629761]
[58.83267212 -320.53430176]
[50.68791962 -306.97061157]
[50.24131393 -291.97726440]
[49.79470825 -276.98391724]
[49.34810257 -261.99057007]
[50.24091721 -247.01716614]
[52.46603394 -232.18312073]
[54.69115067 -217.34907532]
[56.91626740 -202.51502991]
[59.14138794 -187.68099976]
[63.24233246 -181.53250122]
[61.28749466 -172.60969543]
[63.29150772 -157.74417114]
[65.29552460 -142.87863159]
[74.66383362 -131.29917908]
[68.83961487 -116.58900452]
[70.84362793 -101.72347260]
[72.84764099 -86.85794830]
[76.85659027 -80.64907837]
[74.76911926 -71.75636292]
[76.55158997 -56.86264801]
[78.33405304 -41.96892929]
[80.11651611 -27.07521248]
[82.23114014 -12.22501564]
[84.67687225 2.57425499]
[87.67164612 17.27225876]
[91.21131897 31.84863472]
[94.75099182 46.42501068]
[98.29066467 61.00138474]
[101.83033752 75.57775879]
[105.37001038 90.15413666]
[113.09904480 77.29870605]
[127.24172211 72.30025482]
[141.33221436 77.44400787]
[148.92852783 90.37830353]
[146.55772400 105.18976593]
[135.30371094 115.10678101]
[120.31168365 115.59543610]
[108.43476868 106.43075562]
[110.43878174 121.29628754]
[112.44279480 136.16181946]
[121.95445251 148.80456543]
[115.98689270 162.45144653]
[117.99090576 177.31697083]
[127.50255585 189.95971680]
[121.53499603 203.60659790]
[123.53900909 218.47213745]
[129.61346436 204.75714111]
[140.68635559 194.63829041]
[154.89167786 189.82077026]
[169.83561707 191.11643982]
[182.99984741 198.30693054]
[192.16595459 210.18052673]
[195.78929138 224.73632812]
[193.25927734 239.52142334]
[185.00224304 252.04426575]
[172.40965271 260.19451904]
[157.60357666 262.59875488]
[143.07911682 258.85177612]
[131.28387451 249.58505249]
[124.20509338 236.35856628]
[123.31227875 251.33198547]
[122.41946411 266.30538940]
[121.52664948 281.27877808]
[124.13971710 290.03149414]
[120.50743866 296.46795654]
[119.39178467 311.42642212]
[118.27613831 326.38488770]
[117.16049194 341.34332275]
[116.04483795 356.30178833]
[115.04058075 371.26812744]
[114.14776611 386.24151611]
[113.25495148 401.21493530]
[120.15712738 415.45117188]
[111.67601013 427.69534302]
[110.78318787 442.66876221]
[123.30242920 451.68386841]
[128.93907166 466.04464722]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 208]
[8 207]
[10 205]
[11 204]
[12 203]
[14 202]
[15 201]
[16 200]
[17 199]
[18 198]
[19 196]
[20 195]
[21 194]
[22 193]
[23 179]
[24 178]
[26 176]
[27 175]
[29 173]
[30 172]
[31 171]
[32 163]
[33 162]
[34 161]
[35 160]
[36 159]
[37 158]
[43 157]
[44 156]
[48 155]
[49 154]
[50 153]
[51 152]
[52 150]
[53 149]
[54 148]
[56 146]
[57 145]
[58 144]
[59 142]
[60 141]
[61 140]
[62 139]
[63 138]
[76 137]
[77 136]
[78 135]
[79 134]
[81 132]
[82 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
