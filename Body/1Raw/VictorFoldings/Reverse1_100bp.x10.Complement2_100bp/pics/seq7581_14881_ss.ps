%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[102.20141602 529.02911377]
[99.09770203 514.32452393]
[98.22035980 499.32159424]
[99.58899689 484.35549927]
[103.17301941 469.76052856]
[108.89237976 455.86282349]
[116.61928558 442.97280884]
[126.18112946 431.37844849]
[137.36428833 421.33880615]
[149.91893005 413.07812500]
[163.56457520 406.78100586]
[159.37756348 392.37722778]
[155.19055176 377.97344971]
[144.20817566 367.91180420]
[147.78584290 352.50039673]
[143.59883118 338.09661865]
[139.41181946 323.69284058]
[135.22480774 309.28906250]
[131.03779602 294.88528442]
[118.98824310 290.32043457]
[111.65856934 279.48724365]
[111.91030884 266.21520996]
[119.87557220 255.35383606]
[109.04421234 245.12979126]
[112.85092926 229.77337646]
[108.87883759 215.30885315]
[104.90673828 200.84432983]
[100.93464661 186.37980652]
[96.96254730 171.91528320]
[92.99044800 157.45075989]
[90.00775146 172.15121460]
[83.21874237 185.52691650]
[73.11353302 196.61225891]
[60.42162704 204.60697937]
[46.05926132 208.93392944]
[31.06327248 209.28074646]
[16.51622963 205.62239075]
[3.46829700 198.22297668]
[-7.13858271 187.61665344]
[-14.53869057 174.56910706]
[-18.19780731 160.02224731]
[-17.85177422 145.02624512]
[-13.52557755 130.66365051]
[-5.53152466 117.97132874]
[5.55328465 107.86553955]
[18.92862892 101.07582855]
[33.62893295 98.09235382]
[48.59296417 99.13049316]
[62.74045944 104.11531067]
[75.05010223 112.68693542]
[84.63323975 124.22657776]
[90.79839325 137.90229797]
[91.46817780 122.91726685]
[92.13796234 107.93222809]
[92.69617462 92.94261932]
[93.14278412 77.94926453]
[79.66719818 70.86618805]
[70.64004517 58.68433380]
[67.80876923 43.85179901]
[71.68232727 29.32057190]
[81.44066620 17.95904350]
[95.10763550 11.98581505]
[95.55423737 -3.00753522]
[96.00084686 -18.00088501]
[96.44744873 -32.99423599]
[96.89405823 -47.98758698]
[97.34066010 -62.98093414]
[90.01767731 -77.00535583]
[98.13048553 -89.49662018]
[98.57708740 -104.48996735]
[98.57708740 -119.48996735]
[98.13048553 -134.48332214]
[90.38035583 -121.64059448]
[77.87306213 -113.36003876]
[63.02356720 -111.24049377]
[48.69906998 -115.69120789]
[37.66541672 -125.85282898]
[32.05302429 -139.76329041]
[32.94556046 -154.73670959]
[40.17068863 -167.88195801]
[52.33335495 -176.66088867]
[67.08513641 -179.37843323]
[81.57769012 -175.50985718]
[93.01273346 -165.80215454]
[99.18260193 -152.12844849]
[101.40772247 -166.96249390]
[103.63283539 -181.79653931]
[105.85795593 -196.63058472]
[108.08307648 -211.46463013]
[110.30818939 -226.29866028]
[108.48641205 -235.24958801]
[112.67845154 -241.33634949]
[115.12417603 -256.13562012]
[100.91528320 -261.05651855]
[87.74249268 -268.30810547]
[75.98480988 -277.68173218]
[65.98052979 -288.90771484]
[58.01748657 -301.66302490]
[52.32480621 -315.58068848]
[49.06627274 -330.26025391]
[48.33563614 -345.27938843]
[50.15392685 -360.20593262]
[54.46882248 -374.61044312]
[61.15617752 -388.07846069]
[70.02358246 -400.22247314]
[80.81590271 -410.69308472]
[93.22262573 -419.18902588]
[106.88678741 -425.46588135]
[121.41522980 -429.34301758]
[136.38995361 -430.70892334]
[151.38011169 -429.52423096]
[165.95437622 -425.82308960]
[179.69345093 -419.71197510]
[192.20202637 -411.36669922]
[203.12019348 -401.02737427]
[212.13383484 -388.99148560]
[218.98358154 -375.60534668]
[223.47238159 -361.25408936]
[225.47106934 -346.35061646]
[224.92213440 -331.32376099]
[221.84136963 -316.60583496]
[216.31744385 -302.62033081]
[208.50924683 -289.76965332]
[198.64147949 -278.42349243]
[186.99801636 -268.90835571]
[173.91389465 -261.49798584]
[159.76556396 -256.40557861]
[144.96008301 -253.77767944]
[129.92344666 -253.68988037]
[127.47772217 -238.89060974]
[125.14223480 -224.07354736]
[122.91711426 -209.23950195]
[120.69200134 -194.40545654]
[118.46688080 -179.57141113]
[116.24176788 -164.73738098]
[114.01664734 -149.90333557]
[113.12383270 -134.92993164]
[113.57043457 -119.93657684]
[115.51592255 -117.91835022]
[116.77917480 -115.00788879]
[117.01636505 -111.46117401]
[115.98257446 -107.65383911]
[113.57043457 -104.04336548]
[113.12383270 -89.05001068]
[120.47876740 -76.09801483]
[112.33401489 -62.53432846]
[111.88740540 -47.54097748]
[111.44079590 -32.54763031]
[110.99419403 -17.55427933]
[110.54758453 -2.56092930]
[110.10098267 12.43242073]
[123.38818359 19.20853233]
[132.45297241 31.13074303]
[135.45474243 45.86676407]
[131.74563599 60.50448227]
[122.00941467 72.12742615]
[108.13613129 78.39587402]
[107.68952942 93.38922119]
[110.61640930 100.89961243]
[107.12300110 108.60201263]
[106.45321655 123.58705139]
[105.78343201 138.57208252]
[107.45497131 153.47866821]
[111.42707062 167.94319153]
[115.39916992 182.40771484]
[119.37126160 196.87223816]
[123.34336090 211.33676147]
[127.31545258 225.80128479]
[138.43092346 237.05992126]
[134.34008789 251.38174438]
[149.69969177 259.75442505]
[154.16380310 276.31906128]
[145.44157410 290.69827271]
[149.62858582 305.10205078]
[153.81559753 319.50582886]
[158.00260925 333.90960693]
[162.18962097 348.31338501]
[173.47148132 359.40530396]
[169.59434509 373.78643799]
[173.78134155 388.19021606]
[177.96835327 402.59399414]
[192.86334229 400.59469604]
[207.88993835 400.83782959]
[222.71244812 403.31793213]
[236.99972534 407.97961426]
[250.43258667 414.71871948]
[262.71096802 423.38473511]
[273.56051636 433.78399658]
[282.73886108 445.68423462]
[290.04098511 458.81954956]
[295.30374146 472.89651489]
[298.40954590 487.60064697]
[299.28903198 502.60345459]
[297.92251587 517.56976318]
[294.34057617 532.16522217]
[288.62319946 546.06378174]
[280.89813232 558.95489502]
[271.33795166 570.55059814]
[260.15621948 580.59179688]
[247.60273743 588.85424805]
[233.95799255 595.15338135]
[219.52677917 599.34832764]
[204.63151550 601.34552002]
[189.60494995 601.10021973]
[174.78280640 598.61804199]
[160.49618530 593.95428467]
[147.06428528 587.21325684]
[134.78715515 578.54553223]
[123.93907928 568.14471436]
[114.76241302 556.24316406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 181]
[12 180]
[13 179]
[15 177]
[16 176]
[17 175]
[18 174]
[19 173]
[23 170]
[25 168]
[26 167]
[27 166]
[28 165]
[29 164]
[30 163]
[52 162]
[53 161]
[54 160]
[55 158]
[56 157]
[62 151]
[63 150]
[64 149]
[65 148]
[66 147]
[67 146]
[69 144]
[70 143]
[71 138]
[72 137]
[85 136]
[86 135]
[87 134]
[88 133]
[89 132]
[90 131]
[92 130]
[93 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
