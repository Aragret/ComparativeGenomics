%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[91.42400360 515.31707764]
[76.44459534 519.80609131]
[62.10475540 513.56890869]
[55.17531967 499.55044556]
[58.92815781 484.36984253]
[71.59129333 475.19491577]
[72.48410797 460.22152710]
[73.37692261 445.24810791]
[74.26973724 430.27471924]
[75.16255188 415.30130005]
[66.47398376 400.05416870]
[76.74146271 384.76818848]
[77.41124725 369.78317261]
[78.08103943 354.79812622]
[66.21196747 342.88327026]
[66.64110565 325.73303223]
[79.59115601 313.97225952]
[80.03776550 298.97891235]
[80.14942932 283.97930908]
[79.92610168 268.98098755]
[79.70277405 253.98265076]
[79.47944641 238.98431396]
[79.25611877 223.98597717]
[79.03279114 208.98764038]
[70.36473846 221.22956848]
[56.77861786 227.58702087]
[41.82580566 226.39819336]
[29.41492653 217.97381592]
[22.79016113 204.51600647]
[23.68320274 189.54261780]
[31.86061478 176.96765137]
[45.18484116 170.07815552]
[60.17295837 170.67506409]
[72.90711212 178.60231018]
[80.05841827 191.78689575]
[82.06243134 176.92135620]
[84.06644440 162.05583191]
[86.07045746 147.19030762]
[70.77865601 139.58622742]
[59.00724792 127.21307373]
[52.17438126 111.56145477]
[51.10323715 94.51699066]
[55.92285538 78.13307953]
[66.05260468 64.38355255]
[80.27210999 54.92486954]
[96.86830902 50.89654160]
[98.20654297 35.95635605]
[91.73128510 21.52092743]
[100.57320404 9.53469658]
[101.91143799 -5.40548897]
[103.24967194 -20.34567451]
[104.58790588 -35.28585815]
[90.12680054 -41.97288132]
[78.84873199 -53.18851471]
[72.10431671 -67.56368256]
[70.69238281 -83.35251617]
[74.76532745 -98.64440155]
[83.81294250 -111.59518433]
[96.72624969 -120.64955139]
[111.93338776 -124.72779846]
[113.04903412 -139.68624878]
[114.16468048 -154.64471436]
[114.83446503 -169.62974548]
[115.05779266 -184.62808228]
[115.16946411 -199.62767029]
[115.16946411 -214.62767029]
[115.16946411 -229.62767029]
[115.16946411 -244.62767029]
[115.16946411 -259.62765503]
[108.44969177 -246.21705627]
[98.52777100 -234.96736145]
[86.06177521 -226.62477112]
[71.87853241 -221.74258423]
[56.91876984 -220.64463806]
[42.17471313 -223.40376282]
[28.62427902 -229.83692932]
[17.16622162 -239.51748657]
[8.56051445 -251.80331421]
[3.37793994 -265.87957764]
[1.96224129 -280.81262207]
[4.40731668 -295.61199951]
[10.55099297 -309.29611206]
[19.98578262 -320.95736694]
[32.08590698 -329.82229614]
[46.04881287 -335.30291748]
[60.94839096 -337.03573608]
[75.79640198 -334.90582275]
[89.60803223 -329.05441284]
[101.46720123 -319.86962891]
[110.58734131 -307.96069336]
[116.36354828 -294.11743164]
[118.41273499 -279.25292969]
[123.23873138 -293.45538330]
[128.06472778 -307.65783691]
[132.89073181 -321.86029053]
[137.71672058 -336.06277466]
[142.54272461 -350.26522827]
[129.24108887 -357.26614380]
[117.19848633 -366.26181030]
[106.71146393 -377.03070068]
[98.03828430 -389.30761719]
[91.39253235 -402.79022217]
[86.93785095 -417.14648438]
[84.78395844 -432.02288818]
[84.98389435 -447.05307007]
[87.53272247 -461.86691284]
[92.36768341 -476.09960938]
[99.36971283 -489.40066528]
[108.36638641 -501.44253540]
[119.13613129 -511.92864990]
[131.41375732 -520.60083008]
[144.89689636 -527.24548340]
[159.25354004 -531.69897461]
[174.13011169 -533.85162354]
[189.16027832 -533.65045166]
[203.97390747 -531.10040283]
[218.20620728 -526.26428223]
[231.50668335 -519.26110840]
[243.54780579 -510.26345825]
[254.03305054 -499.49285889]
[262.70419312 -487.21450806]
[269.34774780 -473.73083496]
[273.80004883 -459.37380981]
[275.95147705 -444.49707031]
[275.74908447 -429.46691895]
[273.19778442 -414.65350342]
[268.36047363 -400.42160034]
[261.35626221 -387.12170410]
[252.35760498 -375.08132935]
[241.58612061 -364.59695435]
[229.30706787 -355.92681885]
[215.82283020 -349.28439331]
[201.46545410 -344.83328247]
[186.58853149 -342.68307495]
[171.55839539 -342.88671875]
[156.74517822 -345.43920898]
[151.91917419 -331.23675537]
[147.09318542 -317.03430176]
[142.26718140 -302.83184814]
[137.44119263 -288.62939453]
[132.61518860 -274.42694092]
[130.16946411 -259.62765503]
[130.16946411 -244.62767029]
[130.16946411 -229.62767029]
[130.16946411 -214.62767029]
[130.16946411 -199.62767029]
[133.31295776 -192.93885803]
[130.05613708 -184.40475464]
[129.83280945 -169.40641785]
[131.68623352 -167.30332947]
[132.81826782 -164.33937073]
[132.89685059 -160.78559875]
[131.69409180 -157.02822876]
[129.12313843 -153.52905273]
[128.00749207 -138.57060242]
[126.89183807 -123.61215210]
[139.96833801 -118.18824768]
[150.74679565 -108.97705841]
[158.16482544 -96.86909485]
[161.48585510 -83.04121399]
[160.37231445 -68.84226227]
[154.91987610 -55.66149902]
[145.64936829 -44.79265976]
[133.45706177 -37.30698013]
[119.52809143 -33.94762421]
[118.18985748 -19.00744057]
[116.85162354 -4.06725454]
[115.51338959 10.87293053]
[122.08436584 24.23973846]
[113.14672852 37.29459381]
[111.80849457 52.23477554]
[123.77030182 56.91949844]
[134.11174011 64.54092407]
[142.12785339 74.57952118]
[147.27220154 86.35098267]
[149.19410706 99.05286407]
[147.76254272 111.81931305]
[143.07511902 123.78006744]
[135.45133972 134.11978149]
[125.41092682 142.13362122]
[113.63830566 147.27529907]
[100.93598175 149.19432068]
[98.93196869 164.05984497]
[96.92795563 178.92536926]
[94.92394257 193.79090881]
[94.03112793 208.76431274]
[94.25445557 223.76264954]
[94.47778320 238.76098633]
[94.70111084 253.75932312]
[94.92443848 268.75765991]
[95.14776611 283.75598145]
[97.82623291 288.23626709]
[98.45539093 292.83599854]
[97.33292389 296.75454712]
[95.03111267 299.42550659]
[94.58450317 314.41885376]
[104.88786316 323.09384155]
[108.26439667 335.93167114]
[103.69812012 348.18853760]
[93.06607819 355.46789551]
[92.39628601 370.45294189]
[91.72650146 385.43798828]
[99.83865356 395.46572876]
[98.97229004 407.93301392]
[90.13596344 416.19412231]
[89.24314880 431.16754150]
[88.35032654 446.14093018]
[87.45751190 461.11434937]
[86.56469727 476.08773804]
[98.04784393 486.70242310]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 209]
[7 208]
[8 207]
[9 206]
[10 205]
[12 202]
[13 201]
[14 200]
[17 196]
[18 195]
[19 191]
[20 190]
[21 189]
[22 188]
[23 187]
[24 186]
[35 185]
[36 184]
[37 183]
[38 182]
[46 171]
[47 170]
[49 168]
[50 167]
[51 166]
[52 165]
[60 156]
[61 155]
[62 154]
[63 149]
[64 148]
[65 146]
[66 145]
[67 144]
[68 143]
[69 142]
[92 141]
[93 140]
[94 139]
[95 138]
[96 137]
[97 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
