%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[66.03530121 732.20678711]
[51.04155731 732.91589355]
[36.04544830 732.25860596]
[21.17124939 730.24035645]
[6.54220772 726.87786865]
[-7.72045040 722.19897461]
[-21.49853897 716.24249268]
[-34.67788315 709.05780029]
[-47.14927673 700.70434570]
[-58.80937195 691.25146484]
[-69.56155396 680.77740479]
[-79.31671906 669.36901855]
[-87.99402618 657.12072754]
[-95.52158356 644.13415527]
[-101.83700562 630.51690674]
[-106.88796234 616.38171387]
[-110.63259888 601.84576416]
[-113.03988647 587.02960205]
[-114.08987427 572.05584717]
[-113.77386475 557.04864502]
[-112.09447479 542.13238525]
[-109.06562042 527.43066406]
[-104.71240234 513.06524658]
[-99.07089233 499.15524292]
[-92.18783569 485.81585693]
[-84.12026978 473.15768433]
[-74.93505096 461.28558350]
[-64.70829010 450.29791260]
[-53.52472305 440.28576660]
[-41.47703552 431.33209229]
[-28.66505432 423.51104736]
[-15.19494343 416.88751221]
[-1.17832625 411.51632690]
[13.26865005 407.44198608]
[28.02627182 404.69830322]
[42.97224808 403.30798340]
[57.98273087 403.28253174]
[59.32096481 388.34234619]
[60.65919876 373.40216064]
[58.96733093 371.16705322]
[58.05887604 368.12707520]
[58.24482727 364.57733154]
[59.72372055 360.91979980]
[62.54780579 357.62155151]
[64.77292633 342.78750610]
[66.99803925 327.95346069]
[64.88154602 320.87234497]
[69.36830139 312.91580200]
[71.81402588 298.11651611]
[73.92864990 283.26632690]
[75.71112061 268.37258911]
[69.54103851 254.81608582]
[78.86340332 242.03312683]
[80.64586639 227.13940430]
[82.42833710 212.24568176]
[84.21080017 197.35197449]
[85.99326324 182.45825195]
[87.44268799 167.52844238]
[88.55833435 152.56999207]
[89.67398071 137.61154175]
[90.78962708 122.65308380]
[91.90528107 107.69462585]
[92.90953827 92.72828674]
[93.80235291 77.75487518]
[93.80235291 62.75487900]
[92.90953827 47.78147125]
[91.46012115 32.85166168]
[89.45610809 17.98613548]
[87.45209503 3.12060714]
[85.22697449 -11.71343613]
[82.78125000 -26.51270676]
[80.33551788 -41.31197739]
[77.88979340 -56.11124802]
[75.22399902 -70.87246704]
[72.33872223 -85.59236145]
[69.45345306 -100.31224823]
[66.56818390 -115.03214264]
[63.68290710 -129.75202942]
[48.98858261 -139.24392700]
[45.76886368 -156.09469604]
[55.53639984 -169.78533936]
[52.43228912 -184.46064758]
[49.32817841 -199.13595581]
[38.90254593 -211.03623962]
[43.83857346 -225.08917236]
[40.73446274 -239.76446533]
[25.66724014 -240.25665283]
[11.15582180 -244.34104919]
[-1.95611668 -251.78016663]
[-12.90626526 -262.14151001]
[-21.05799484 -274.82272339]
[-25.93737793 -289.08648682]
[-27.26073074 -304.10354614]
[-24.95111656 -319.00082397]
[-19.14281273 -332.91223145]
[-10.17350674 -345.02896118]
[1.43533766 -354.64654541]
[15.00879765 -361.20587158]
[29.75773048 -364.32556152]
[44.82464981 -363.82421875]
[59.33359146 -359.73104858]
[72.44101715 -352.28396606]
[83.38488007 -341.91598511]
[91.52892303 -329.22985840]
[96.39965820 -314.96313477]
[97.71390533 -299.94525146]
[95.39525604 -285.04937744]
[89.57852173 -271.14151001]
[80.60187531 -259.03021240]
[68.98719788 -249.41966248]
[55.40976334 -242.86857605]
[58.51387405 -228.19328308]
[68.71747589 -217.34266663]
[64.00347900 -202.24006653]
[67.10758972 -187.56475830]
[70.21170044 -172.88945007]
[81.88835907 -167.44105530]
[88.39199829 -156.09271240]
[87.15383148 -142.87615967]
[78.40280151 -132.63729858]
[81.28807068 -117.91741180]
[84.17334747 -103.19752502]
[87.05861664 -88.47763062]
[89.94389343 -73.75773621]
[93.33735657 -70.39716339]
[94.65575409 -64.86916351]
[92.68906403 -58.55697632]
[95.13478851 -43.75770569]
[97.58052063 -28.95843506]
[100.02624512 -14.15916443]
[103.31815338 -10.69904518]
[104.47137451 -5.13423681]
[102.31761932 1.11659348]
[104.32163239 15.98212147]
[106.32564545 30.84765053]
[117.35732269 20.68388557]
[132.20434570 22.82072258]
[139.92202759 35.68296432]
[134.82119751 49.78904724]
[120.66198730 54.74048615]
[107.88294220 46.88865662]
[108.77576447 61.86206055]
[117.96125031 50.00344467]
[132.33010864 45.69810867]
[146.52310181 50.55184555]
[155.24661255 62.75432205]
[155.24696350 77.75431824]
[146.52404785 89.95721436]
[132.33126831 94.81162262]
[117.96221161 90.50697327]
[108.77576447 78.64769745]
[107.88294220 93.62110138]
[110.58491516 101.21530151]
[106.86373138 108.81027985]
[105.74808502 123.76873016]
[104.63243866 138.72718811]
[103.51678467 153.68563843]
[102.40113831 168.64408875]
[104.66921234 173.34545898]
[104.88549805 177.98297119]
[103.41790771 181.78576660]
[100.88698578 184.24072266]
[99.10451508 199.13442993]
[97.32205200 214.02815247]
[95.53958893 228.92187500]
[93.75711823 243.81558228]
[99.79970551 258.43740845]
[90.60483551 270.15505981]
[88.82237244 285.04879761]
[90.87825012 289.84674072]
[90.88724518 294.48928833]
[89.25131989 298.22274780]
[86.61329651 300.56225586]
[84.16757202 315.36151123]
[81.83208466 330.17858887]
[79.60696411 345.01263428]
[77.38185120 359.84667969]
[75.59938049 374.74038696]
[74.26114655 389.68057251]
[72.92291260 404.62075806]
[87.68992615 407.31344604]
[102.15089417 411.33786011]
[116.18598175 416.66058350]
[129.67889404 423.23757935]
[142.51780701 431.01428223]
[154.59635925 439.92630005]
[165.81443787 449.89974976]
[176.07910156 460.85202026]
[185.30526733 472.69232178]
[193.41651917 485.32257080]
[200.34561157 498.63809204]
[206.03514099 512.52850342]
[210.43795776 526.87878418]
[213.51757812 541.57000732]
[215.24847412 556.48034668]
[215.61633301 571.48638916]
[214.61807251 586.46362305]
[212.26197815 601.28808594]
[208.56758118 615.83685303]
[203.56547546 629.98937988]
[197.29713440 643.62841797]
[189.81448364 656.64093018]
[181.17953491 668.91906738]
[171.46383667 680.36108398]
[160.74790955 690.87225342]
[149.12052917 700.36535645]
[136.67807007 708.76184082]
[123.52362061 715.99200439]
[109.76618958 721.99603271]
[95.51978302 726.72418213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 180]
[38 179]
[39 178]
[44 177]
[45 176]
[46 175]
[48 174]
[49 173]
[50 169]
[51 168]
[53 166]
[54 165]
[55 164]
[56 163]
[57 162]
[58 158]
[59 157]
[60 156]
[61 155]
[62 154]
[63 152]
[64 151]
[65 142]
[66 141]
[67 135]
[68 134]
[69 133]
[70 130]
[71 129]
[72 128]
[73 127]
[74 124]
[75 123]
[76 122]
[77 121]
[78 120]
[81 116]
[82 115]
[83 114]
[85 112]
[86 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
