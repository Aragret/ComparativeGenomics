%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[182.40101624 494.07733154]
[185.41767883 479.36410522]
[190.21960449 465.13311768]
[196.73399353 451.60009766]
[204.86210632 438.97024536]
[214.48069763 427.43496704]
[225.44396973 417.16918945]
[237.58572388 408.32852173]
[230.31248474 395.20980835]
[223.03926086 382.09112549]
[215.76602173 368.97244263]
[208.49279785 355.85372925]
[201.21957397 342.73504639]
[196.05581665 356.81820679]
[182.50473022 363.25003052]
[168.32901001 358.34606934]
[161.64913940 344.91552734]
[166.29165649 330.65203857]
[179.59710693 323.72637939]
[193.94279480 328.10525513]
[187.86897278 314.39001465]
[181.79513550 300.67474365]
[169.56697083 292.17053223]
[171.05358887 276.41934204]
[164.97975159 262.70407104]
[158.90591431 248.98880005]
[152.83207703 235.27354431]
[146.75823975 221.55827332]
[132.04457092 211.99403381]
[134.15798950 193.70155334]
[127.88063049 180.07823181]
[121.60326385 166.45491028]
[115.32590485 152.83160400]
[104.09020233 148.34991455]
[98.74893951 137.05146790]
[102.65856934 124.76011658]
[96.58473969 111.04484558]
[93.86743164 125.79666901]
[84.67863464 137.65272522]
[71.07115936 143.96434021]
[56.08493805 143.32148743]
[43.06793976 135.86778259]
[34.92819214 123.26840210]
[33.48413467 108.33807373]
[39.05837250 94.41227722]
[50.40560913 84.60206604]
[64.99084473 81.09907532]
[79.55569458 84.68586731]
[90.84635162 94.56118011]
[87.09004974 80.03911591]
[83.33374786 65.51705933]
[79.14673615 51.11327744]
[74.53273010 36.84054565]
[69.91871643 22.56781197]
[54.79063416 21.96252823]
[40.80866241 16.22872734]
[29.65301514 6.07630110]
[22.65711594 -7.25514555]
[20.64823341 -22.14762306]
[23.84970093 -36.80112457]
[31.85626411 -49.45118332]
[43.68527222 -58.58134460]
[39.07126617 -72.85408020]
[34.35113144 -87.09207153]
[29.52513313 -101.29452515]
[24.69913483 -115.49697876]
[13.49550629 -121.88771820]
[9.76830864 -133.81632996]
[14.99504375 -144.72540283]
[10.38103485 -158.99812317]
[5.76702547 -173.27085876]
[1.15301633 -187.54359436]
[-3.46099305 -201.81632996]
[-8.07500267 -216.08906555]
[-22.89398575 -213.59596252]
[-37.91805267 -213.28718567]
[-52.82695770 -215.16929626]
[-67.30291748 -219.20220947]
[-81.03738403 -225.29994202]
[-93.73759460 -233.33253479]
[-105.13285828 -243.12875366]
[-114.98027039 -254.47979736]
[-123.06993103 -267.14373779]
[-129.22943115 -280.85061646]
[-133.32745361 -295.30828857]
[-135.27665710 -310.20855713]
[-135.03550720 -325.23385620]
[-132.60913086 -340.06390381]
[-128.04924011 -354.38262939]
[-121.45304871 -367.88476562]
[-112.96114349 -380.28256226]
[-102.75453186 -391.31176758]
[-91.05076599 -400.73724365]
[-78.09931946 -408.35812378]
[-64.17624664 -414.01196289]
[-49.57831573 -417.57824707]
[-34.61668777 -418.98092651]
[-19.61027145 -418.19015503]
[-4.87892675 -415.22277832]
[9.26334476 -410.14202881]
[22.51510048 -403.05621338]
[34.59387970 -394.11636353]
[45.24222183 -383.51303101]
[54.23315430 -371.47222900]
[61.37503815 -358.25061035]
[66.51564026 -344.12997437]
[69.54539490 -329.41134644]
[70.39971924 -314.40841675]
[69.06039429 -299.44097900]
[65.55598450 -284.82806396]
[59.96117401 -270.88116455]
[52.39522171 -257.89755249]
[43.01939392 -246.15397644]
[32.03353882 -235.90074158]
[19.67182159 -227.35639954]
[6.19773102 -220.70307922]
[10.81174088 -206.43034363]
[15.42574978 -192.15760803]
[20.03975868 -177.88487244]
[24.65376854 -163.61213684]
[29.26777840 -149.33940125]
[42.90659714 -138.29632568]
[38.90159225 -120.32297516]
[43.72758865 -106.12052155]
[48.55358505 -91.91806793]
[53.68196106 -86.59626770]
[53.34399796 -77.46808624]
[57.95800781 -63.19535446]
[72.89309692 -62.71734238]
[86.78953552 -57.14796066]
[97.96294403 -47.14148712]
[105.05187225 -33.89126205]
[107.18373108 -18.98739433]
[104.08209991 -4.22595453]
[96.10243988 8.60747910]
[84.19145203 17.95380211]
[88.80545807 32.22653580]
[93.41947174 46.49926758]
[95.85098267 47.89422607]
[97.87643433 50.33638382]
[99.09420776 53.67591095]
[99.16426086 57.62047958]
[97.85580444 61.76075745]
[101.61210632 76.28282166]
[105.36840820 90.80487823]
[110.30000305 104.97101593]
[116.37384033 118.68627930]
[131.49755859 129.19126892]
[128.94921875 146.55424500]
[135.22657776 160.17755127]
[141.50393677 173.80087280]
[147.78131104 187.42419434]
[159.58900452 192.61466980]
[164.53695679 204.09080505]
[160.47351074 215.48443604]
[166.54734802 229.19970703]
[172.62118530 242.91496277]
[178.69500732 256.63024902]
[184.76884460 270.34548950]
[197.43145752 279.83068848]
[195.51040649 294.60089111]
[201.58422852 308.31616211]
[207.65806580 322.03143311]
[214.33825684 335.46182251]
[221.61149597 348.58050537]
[228.88471985 361.69918823]
[236.15795898 374.81790161]
[243.43118286 387.93658447]
[250.70440674 401.05526733]
[264.63494873 395.44104004]
[279.14984131 391.58129883]
[294.02902222 389.53454590]
[309.04696655 389.33184814]
[323.97598267 390.97625732]
[338.58975220 394.44287109]
[352.66674805 399.67910767]
[365.99353027 406.60556030]
[378.36813354 415.11730957]
[389.60287476 425.08523560]
[399.52752686 436.35827637]
[407.99154663 448.76550293]
[414.86669922 462.11886597]
[420.04873657 476.21588135]
[423.45907593 490.84289551]
[425.04602051 505.77810669]
[424.78552246 520.79516602]
[422.68154907 535.66638184]
[418.76599121 550.16632080]
[413.09817505 564.07513428]
[405.76406860 577.18200684]
[396.87481689 589.28826904]
[386.56518555 600.21032715]
[374.99148560 609.78259277]
[362.32916260 617.86004639]
[348.77014160 624.32019043]
[334.52001953 629.06500244]
[319.79483032 632.02270508]
[304.81774902 633.14837646]
[289.81588745 632.42498779]
[275.01663208 629.86340332]
[260.64431763 625.50262451]
[246.91688538 619.40863037]
[234.04238892 611.67382812]
[222.21601868 602.41546631]
[211.61705017 591.77398682]
[202.40618896 579.91064453]
[194.72303772 567.00524902]
[188.68409729 553.25347900]
[184.38088989 538.86383057]
[181.87866211 524.05444336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 169]
[9 168]
[10 167]
[11 166]
[12 165]
[13 164]
[20 163]
[21 162]
[22 161]
[24 159]
[25 158]
[26 157]
[27 156]
[28 155]
[30 152]
[31 151]
[32 150]
[33 149]
[36 147]
[37 146]
[49 145]
[50 144]
[51 143]
[52 138]
[53 137]
[54 136]
[62 128]
[63 127]
[64 125]
[65 124]
[66 123]
[69 121]
[70 120]
[71 119]
[72 118]
[73 117]
[74 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
