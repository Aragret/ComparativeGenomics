%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGGUGUAAUCCGAAUUUUUGUCUACGUUAAGGGCCUGCAGAUUUGGUUUGGUGAAAGUGGCGAUGUGCUGGCCCCCAUAUGAUGCCAGUUACGAGACUUUA\
) } def
/len { sequence length } bind def

/coor [
[103.16207123 565.50451660]
[108.93667603 551.48919678]
[119.15885162 540.29620361]
[132.59422302 533.27716064]
[130.59020996 518.41162109]
[128.58619690 503.54611206]
[126.58217621 488.68057251]
[115.55050659 498.84432983]
[100.70348358 496.70751953]
[92.98579407 483.84527588]
[98.08663177 469.73919678]
[112.24584198 464.78775024]
[125.02488708 472.63958740]
[124.13206482 457.66616821]
[123.23925018 442.69274902]
[114.75812531 430.44857788]
[121.66030884 416.21234131]
[120.76749420 401.23895264]
[119.87467957 386.26553345]
[104.06386566 380.30917358]
[92.40908051 368.00067139]
[87.29026031 351.78305054]
[89.78341675 334.90454102]
[99.43482208 320.76800537]
[114.34269714 312.24481201]
[113.00446320 297.30462646]
[111.66622925 282.36444092]
[110.32799530 267.42425537]
[108.98976135 252.48406982]
[107.65152740 237.54388428]
[106.20211029 222.61407471]
[104.64158630 207.69546509]
[95.62219238 195.84220886]
[101.88180542 181.31196594]
[88.37659454 171.28959656]
[86.25689697 154.26544189]
[97.31906891 140.71377563]
[95.53659821 125.82006073]
[93.75413513 110.92634583]
[91.63951111 96.07614136]
[89.19377899 81.27687073]
[86.74805450 66.47760010]
[84.30233002 51.67833328]
[75.63855743 63.92329407]
[61.16328049 67.85601807]
[47.49439240 61.67851257]
[40.88113022 48.21505356]
[44.34698868 33.62094879]
[56.30741882 24.56843185]
[71.29427338 25.19618607]
[82.45664978 35.21884537]
[81.56383514 20.24544144]
[80.67102051 5.27203512]
[79.77820587 -9.70137024]
[78.88539124 -24.67477608]
[77.99256897 -39.64818192]
[77.09975433 -54.62158966]
[76.20693970 -69.59499359]
[67.09557343 -78.72438049]
[66.66020203 -91.21414948]
[74.58914185 -100.34970856]
[73.91935730 -115.33474731]
[65.57356262 -128.77566528]
[72.73484802 -141.83573914]
[69.22536469 -150.26908875]
[72.16831970 -157.04852295]
[71.72171783 -172.04187012]
[59.69251633 -163.08093262]
[45.14836884 -166.75079346]
[38.81068039 -180.34614563]
[45.35135651 -193.84501648]
[59.94885635 -197.29653931]
[71.84169769 -188.15785217]
[72.51148224 -203.14288330]
[73.18126678 -218.12792969]
[60.38242722 -222.78450012]
[49.42666245 -230.84721375]
[41.19530106 -241.65571594]
[36.34719086 -254.32925415]
[35.26598358 -267.83843994]
[38.02976608 -281.08883667]
[44.40552521 -293.00967407]
[53.86875153 -302.64031982]
[65.64656830 -309.20779419]
[78.78087616 -312.18865967]
[79.89653015 -327.14709473]
[81.01217651 -342.10556030]
[82.12782288 -357.06402588]
[82.57443237 -372.05737305]
[82.35110474 -387.05569458]
[82.12777710 -402.05404663]
[81.90444946 -417.05236816]
[81.68112183 -432.05072021]
[67.01702118 -435.57421875]
[53.69026947 -442.63455200]
[42.53858948 -452.78793335]
[34.26298904 -465.39605713]
[29.38367844 -479.66641235]
[28.20737457 -494.70196533]
[30.80802345 -509.55749512]
[37.02214432 -523.29925537]
[46.45911026 -535.06335449]
[58.52570724 -544.11035156]
[72.46342468 -549.87152100]
[87.39611816 -551.98468018]
[102.38510132 -550.31707764]
[116.48816681 -544.97344971]
[128.81878662 -536.28973389]
[138.60182190 -524.81176758]
[145.22233582 -511.26113892]
[148.26412964 -496.48962402]
[147.53601074 -481.42572021]
[143.08375549 -467.01641846]
[135.18721008 -454.16748047]
[124.34278107 -443.68658447]
[111.23214722 -436.23257446]
[96.67945862 -432.27404785]
[96.90278625 -417.27569580]
[97.12611389 -402.27737427]
[97.34944153 -387.27902222]
[97.57276917 -372.28070068]
[108.77020264 -382.26153564]
[123.75278473 -381.53900146]
[133.93782043 -370.52697754]
[133.49085999 -355.53363037]
[122.66793060 -345.14785767]
[107.66891479 -345.31909180]
[97.08628082 -355.94836426]
[95.97062683 -340.98989868]
[94.85498047 -326.03146362]
[93.73933411 -311.07299805]
[108.87351990 -304.60379028]
[120.89704895 -293.32659912]
[128.34471130 -278.59161377]
[130.30064392 -262.17181396]
[126.51103210 -246.04965210]
[117.41675568 -232.17771912]
[104.10227203 -222.24223328]
[88.16630554 -217.45814514]
[87.49652100 -202.47309875]
[86.82673645 -187.48806763]
[86.71506500 -172.48847961]
[87.16167450 -157.49513245]
[87.71988678 -142.50552368]
[96.01776886 -130.13642883]
[88.90439606 -116.00453186]
[89.57418060 -101.01949310]
[99.80184174 -86.75899506]
[91.18034363 -70.48780823]
[92.07316589 -55.51440430]
[92.96598053 -40.54099655]
[93.85879517 -25.56759262]
[94.75160980 -10.59418678]
[95.64442444 4.37921906]
[96.53723907 19.35262489]
[97.43005371 34.32603073]
[99.10160065 49.23260498]
[101.54732513 64.03187561]
[103.99304962 78.83114624]
[106.43878174 93.63041687]
[109.22393036 96.29787445]
[110.81977844 100.18003082]
[110.71019745 104.71820068]
[108.64785004 109.14387512]
[110.43031311 124.03759003]
[112.21278381 138.93130493]
[123.68900299 145.98191833]
[128.93255615 158.17681885]
[126.23500061 170.97546387]
[116.80041504 179.75144958]
[125.93142700 192.67178345]
[119.56018829 206.13494873]
[121.12071228 221.05354309]
[125.12593079 229.26306152]
[122.59171295 236.20564270]
[123.92994690 251.14582825]
[125.26818085 266.08602905]
[126.60641479 281.02621460]
[127.94464874 295.96640015]
[129.28288269 310.90658569]
[141.95320129 314.65686035]
[152.56930542 322.47076416]
[159.88046265 333.40072632]
[163.03450012 346.13378906]
[161.67709351 359.14916992]
[155.99137878 370.89990234]
[146.67362976 379.99682617]
[134.84808350 385.37271118]
[135.74090576 400.34613037]
[136.63371277 415.31951904]
[145.17869568 428.63470459]
[138.21266174 441.79995728]
[139.10546875 456.77334595]
[139.99829102 471.74676514]
[141.44770813 486.67657471]
[143.45172119 501.54208374]
[145.45573425 516.40759277]
[147.45974731 531.27313232]
[162.27418518 534.48382568]
[175.09541321 542.57037354]
[184.37522888 554.55621338]
[188.99304199 568.99407959]
[188.39122009 584.14044189]
[182.64245605 598.16644287]
[172.44091797 609.37823486]
[159.01850891 616.42199707]
[143.99604797 618.44720459]
[129.18756104 615.20916748]
[116.38124847 607.09906006]
[107.12354279 595.09613037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 198]
[5 197]
[6 196]
[7 195]
[13 194]
[14 193]
[15 192]
[17 190]
[18 189]
[19 188]
[25 180]
[26 179]
[27 178]
[28 177]
[29 176]
[30 175]
[31 173]
[32 172]
[34 170]
[37 166]
[38 165]
[39 164]
[40 160]
[41 159]
[42 158]
[43 157]
[51 156]
[52 155]
[53 154]
[54 153]
[55 152]
[56 151]
[57 150]
[58 149]
[61 147]
[62 146]
[64 144]
[66 143]
[67 142]
[73 141]
[74 140]
[75 139]
[85 131]
[86 130]
[87 129]
[88 128]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
