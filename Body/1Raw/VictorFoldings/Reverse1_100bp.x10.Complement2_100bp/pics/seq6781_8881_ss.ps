%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[103.34980774 642.42864990]
[89.70217896 635.59454346]
[80.37809753 623.51049805]
[77.22885895 608.57580566]
[80.87975311 593.75579834]
[90.60588837 581.99291992]
[104.47613525 575.62274170]
[104.69946289 560.62438965]
[104.92279053 545.62609863]
[105.14611816 530.62774658]
[97.59916687 517.78668213]
[105.54106903 504.10324097]
[105.76439667 489.10488892]
[105.98772430 474.10656738]
[106.21105194 459.10821533]
[106.43437958 444.10989380]
[105.43012238 429.14352417]
[103.20500946 414.30947876]
[100.97988892 399.47543335]
[98.75476837 384.64141846]
[87.87564087 394.96829224]
[72.99845123 393.05273438]
[65.09011841 380.30682373]
[69.98036957 366.12637329]
[84.06429291 360.96466064]
[96.95882416 368.62536621]
[95.84317017 353.66690063]
[81.92311859 348.30990601]
[71.66719818 337.39544678]
[67.14865112 323.05166626]
[69.31479645 308.10751343]
[77.78899384 295.53472900]
[90.93486023 287.85699463]
[89.81921387 272.89852905]
[88.70355988 257.94006348]
[87.58791351 242.98162842]
[86.47226715 228.02316284]
[85.35662079 213.06471252]
[84.24096680 198.10626221]
[83.12532043 183.14781189]
[76.48809052 196.59947205]
[65.25917053 206.54489136]
[51.10429764 211.50871277]
[36.12326431 210.75459290]
[22.53842163 204.39440918]
[12.36499596 193.37164307]
[7.11215687 179.32145691]
[7.55913067 164.32812500]
[13.63961220 150.61579895]
[24.45159721 140.21862793]
[38.39119339 134.67898560]
[53.39054108 134.81863403]
[67.22457886 140.61685181]
[77.84111786 151.21351624]
[83.66484833 165.03479004]
[85.66886139 150.16926575]
[79.70130157 136.52238464]
[89.21295166 123.87963867]
[91.21697235 109.01410675]
[92.88851166 94.10753632]
[94.22674561 79.16735077]
[95.56497955 64.22716522]
[96.90321350 49.28697968]
[98.24144745 34.34679413]
[85.23264313 41.81479263]
[71.22763824 36.44264984]
[66.55040741 22.19050980]
[74.64882660 9.56451988]
[89.55303955 7.87209034]
[100.27565002 18.35926628]
[102.72138214 3.55999565]
[105.16710663 -11.23927498]
[107.17111969 -26.10480309]
[100.91150665 -40.63504028]
[109.93090057 -52.48830032]
[111.49142456 -67.40690613]
[112.49568176 -82.37325287]
[112.94229126 -97.36660004]
[113.38889313 -112.35994720]
[104.28676605 -128.36721802]
[114.08530426 -142.92591858]
[114.30863190 -157.92425537]
[114.53195953 -172.92259216]
[107.00098419 -186.83642578]
[114.92691803 -199.44709778]
[107.39593506 -213.36093140]
[115.32186890 -225.97160339]
[100.52047729 -228.60124207]
[86.33263397 -233.57127380]
[73.12583160 -240.75296021]
[61.24216080 -249.96026611]
[50.98943710 -260.95471191]
[42.63323212 -273.45150757]
[36.38998795 -287.12695312]
[32.42142487 -301.62686157]
[30.83033180 -316.57559204]
[31.65792656 -331.58596802]
[34.88277054 -346.26916504]
[40.42133713 -360.24487305]
[48.13015747 -373.15109253]
[57.80955505 -384.65350342]
[69.20881653 -394.45416260]
[82.03266907 -402.29922485]
[95.94894409 -407.98547363]
[110.59717560 -411.36563110]
[125.59793854 -412.35214233]
[140.56268311 -410.91943359]
[155.10377502 -407.10464478]
[168.84458923 -401.00656128]
[181.42916870 -392.78317261]
[192.53157043 -382.64746094]
[201.86421204 -370.86196899]
[209.18534851 -357.73193359]
[214.30535889 -343.59753418]
[217.09159851 -328.82482910]
[217.47190857 -313.79644775]
[215.43644714 -298.90173340]
[211.03791809 -284.52642822]
[204.39027405 -271.04290771]
[195.66569519 -258.80044556]
[185.09017944 -248.11614990]
[172.93763733 -239.26673889]
[159.52285767 -232.48146057]
[145.19332886 -227.93606567]
[130.32020569 -225.74827576]
[137.86715698 -212.90721130]
[129.92524719 -199.22377014]
[137.47219849 -186.38270569]
[129.53030396 -172.69926453]
[129.30697632 -157.70092773]
[129.08364868 -142.70259094]
[137.28106689 -133.80715942]
[137.21775818 -121.30996704]
[128.38224792 -111.91334534]
[127.93563843 -96.91999054]
[127.48903656 -81.92664337]
[140.03027344 -90.15570068]
[154.33020020 -85.62667084]
[159.84744263 -71.67819214]
[152.51489258 -58.59256363]
[137.73783875 -56.01602173]
[126.41002655 -65.84638214]
[124.84950256 -50.92777634]
[131.22073364 -37.46461868]
[122.08972931 -24.54428101]
[123.74813080 -22.28422928]
[124.61122131 -19.23108482]
[124.37244415 -15.68448353]
[122.83925629 -12.04939556]
[119.96637726 -8.79354763]
[117.52065277 6.00572300]
[115.07492065 20.80499458]
[113.18163300 35.68502808]
[111.84339905 50.62521362]
[110.50516510 65.56539917]
[109.16693115 80.50558472]
[107.82869720 95.44577026]
[109.85711670 98.72569275]
[110.42994690 102.88378143]
[109.18740845 107.24991608]
[106.08249664 111.01811981]
[104.07848358 125.88365173]
[109.90270233 140.59381104]
[100.53439331 152.17327881]
[98.53038025 167.03880310]
[98.08377075 182.03216553]
[99.19942474 196.99061584]
[100.31507111 211.94906616]
[101.43071747 226.90751648]
[102.54637146 241.86596680]
[103.66201782 256.82443237]
[104.77766418 271.78286743]
[105.89331055 286.74133301]
[120.03266144 292.38406372]
[130.27816772 303.56066895]
[134.63717651 318.01815796]
[132.29640198 332.87350464]
[123.77301025 345.18859863]
[110.80162811 352.55126953]
[111.91727448 367.50970459]
[113.58881378 382.41629028]
[115.81393433 397.25033569]
[118.03904724 412.08438110]
[120.26416779 426.91842651]
[126.79084778 413.41278076]
[138.79116821 404.41320801]
[153.58424377 401.93026733]
[167.86524963 406.51861572]
[178.44377136 417.15319824]
[182.95654297 431.45828247]
[180.39540100 446.23800659]
[171.33251953 458.19058228]
[157.79255676 464.64575195]
[142.80036926 464.16143799]
[129.70527649 456.84582520]
[121.43272400 444.33322144]
[121.20939636 459.33154297]
[120.98606873 474.32989502]
[120.76274109 489.32821655]
[120.53940582 504.32656860]
[128.07038879 518.24041748]
[120.14445496 530.85107422]
[119.92112732 545.84942627]
[119.69779968 560.84771729]
[119.47447205 575.84606934]
[133.14891052 582.62640381]
[142.52050781 594.67364502]
[145.72853088 609.59576416]
[142.13603210 624.43011475]
[132.45629883 636.23120117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 205]
[8 204]
[9 203]
[10 202]
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[17 184]
[18 183]
[19 182]
[20 181]
[26 180]
[27 179]
[33 173]
[34 172]
[35 171]
[36 170]
[37 169]
[38 168]
[39 167]
[40 166]
[55 165]
[56 164]
[58 162]
[59 161]
[60 157]
[61 156]
[62 155]
[63 154]
[64 153]
[70 152]
[71 151]
[72 150]
[73 145]
[75 143]
[76 142]
[77 136]
[78 135]
[79 134]
[81 131]
[82 130]
[83 129]
[85 127]
[87 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
