%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[20.82609558 561.16760254]
[5.95284796 558.46984863]
[-7.46367598 551.50646973]
[-18.23048782 540.89672852]
[-25.39021111 527.58392334]
[-28.30620766 512.75195312]
[-26.71918869 497.71954346]
[-20.77027130 483.82342529]
[-10.98843002 472.29925537]
[1.75654292 464.17169189]
[16.33137131 460.16348267]
[16.77797699 445.17013550]
[17.22458267 430.17678833]
[17.67118835 415.18344116]
[18.11779404 400.19009399]
[18.56440163 385.19674683]
[19.01100731 370.20336914]
[19.45761299 355.21002197]
[9.79535770 366.68350220]
[-4.50429153 371.21340942]
[-19.01043129 367.39611816]
[-29.22817993 356.41439819]
[-31.99145317 341.67114258]
[-26.44402122 327.73461914]
[-14.30481815 318.92327881]
[0.66469306 317.96740723]
[13.82604599 325.16314697]
[21.10111046 338.28109741]
[19.09747314 333.94583130]
[19.79594612 328.30587769]
[23.84628487 323.08035278]
[26.73155785 308.36044312]
[29.61683083 293.64056396]
[18.93400002 304.17037964]
[4.60846472 308.61773682]
[-10.15941334 305.98910522]
[-22.07045174 296.87167358]
[-28.46369743 283.30236816]
[-27.91087723 268.31256104]
[-20.53549767 255.25102234]
[-7.98523617 247.03573608]
[6.93614864 245.50201416]
[20.89517975 250.99250793]
[30.77337456 262.28060913]
[34.36391830 276.84457397]
[39.61063766 262.79208374]
[44.85735321 248.73962402]
[49.68335342 234.53715515]
[54.08435059 220.19731140]
[58.48534775 205.85746765]
[62.88634491 191.51762390]
[67.28734589 177.17778015]
[66.24468231 169.86103821]
[71.86208344 162.65808105]
[76.47609711 148.38534546]
[81.09010315 134.11260986]
[85.70411682 119.83987427]
[90.31812286 105.56713867]
[94.82575226 91.26045227]
[99.22675323 76.92060852]
[94.68838501 59.07446671]
[107.99236298 47.63021088]
[112.17937469 33.22642517]
[116.36638641 18.82264519]
[120.55339813 4.41886282]
[124.74040985 -9.98491955]
[128.92741394 -24.38870049]
[133.11442566 -38.79248428]
[128.31086731 -56.56907654]
[141.44297791 -68.21014404]
[145.41508484 -82.67466736]
[149.38717651 -97.13919067]
[153.35926819 -111.60371399]
[148.29158020 -129.30682373]
[161.24891663 -141.14212036]
[165.00521851 -155.66416931]
[168.76152039 -170.18623352]
[172.51782227 -184.70829773]
[176.27412415 -199.23034668]
[163.02561951 -206.41107178]
[151.88752747 -216.54789734]
[143.50434875 -229.04835510]
[138.35978699 -243.18341064]
[136.74880981 -258.12991333]
[138.76074219 -273.01858521]
[144.27433777 -286.98458862]
[152.96504211 -299.21762085]
[164.32415771 -309.00918579]
[177.68855286 -315.79333496]
[192.27940369 -319.17962646]
[207.24758911 -318.97546387]
[211.00389099 -333.49749756]
[214.76019287 -348.01956177]
[217.31602478 -362.80023193]
[218.65426636 -377.74041748]
[219.99249268 -392.68060303]
[221.33073425 -407.62078857]
[222.66896057 -422.56097412]
[208.60775757 -428.07992554]
[196.67182922 -437.33792114]
[187.82881165 -449.58447266]
[182.79553223 -463.82675171]
[181.98002625 -478.91024780]
[185.44841003 -493.61218262]
[192.91950989 -506.74075317]
[203.78768921 -517.23168945]
[217.17190552 -524.23449707]
[231.98715210 -527.18151855]
[247.03244019 -525.83386230]
[261.08810425 -520.30078125]
[273.01470947 -511.03079224]
[281.84542847 -498.77539062]
[286.86441040 -484.52804565]
[287.66473389 -469.44375610]
[284.18157959 -454.74530029]
[276.69729614 -441.62426758]
[265.81860352 -431.14425659]
[252.42735291 -424.15487671]
[237.60914612 -421.22271729]
[236.27091980 -406.28253174]
[234.93267822 -391.34234619]
[233.59445190 -376.40216064]
[232.25621033 -361.46197510]
[241.78561401 -373.04605103]
[255.57072449 -378.95965576]
[270.53195190 -377.88162231]
[283.32687378 -370.05285645]
[291.09710693 -357.22229004]
[292.10675049 -342.25631714]
[286.13024902 -328.49835205]
[274.50277710 -319.02197266]
[259.82189941 -315.94424438]
[245.36741638 -319.95272827]
[234.36846924 -330.15188599]
[229.28225708 -344.26327515]
[225.52595520 -329.74121094]
[221.76965332 -315.21914673]
[234.95953369 -308.13992310]
[246.07844543 -298.10348511]
[254.47714233 -285.69003296]
[259.66384888 -271.61874390]
[261.33297729 -256.70599365]
[259.38320923 -241.81819153]
[253.92355347 -227.82128906]
[245.26733398 -215.53051758]
[233.91416931 -205.66279602]
[220.52116394 -198.79499817]
[205.86485291 -195.33020020]
[190.79618835 -195.47404480]
[187.03988647 -180.95199585]
[183.28358459 -166.42993164]
[179.52728271 -151.90786743]
[175.77098083 -137.38581848]
[181.63777161 -126.80718231]
[178.62718201 -114.67787933]
[167.82379150 -107.63161469]
[163.85169983 -93.16709137]
[159.87960815 -78.70256805]
[155.90751648 -64.23804474]
[161.61614990 -53.57324219]
[158.42530823 -41.49010086]
[147.51821899 -34.60547256]
[143.33120728 -20.20169067]
[139.14419556 -5.79790783]
[134.95718384 8.60587406]
[130.77017212 23.00965691]
[126.58316040 37.41343689]
[122.39614868 51.81721878]
[127.94536591 62.56583405]
[124.57498169 74.60012817]
[113.56659698 81.32160950]
[109.16559601 95.66145325]
[109.99919891 103.67878723]
[104.59085846 110.18115234]
[99.97684479 124.45388794]
[95.36283875 138.72662354]
[90.74883270 152.99934387]
[86.13481903 167.27207947]
[81.62718964 181.57876587]
[77.22619629 195.91862488]
[72.82519531 210.25846863]
[68.42419434 224.59831238]
[64.02320099 238.93815613]
[65.14547729 243.13273621]
[64.89935303 247.07023621]
[63.53367996 250.35206604]
[61.40119934 252.70133972]
[58.90982437 253.98632812]
[53.66310883 268.03881836]
[48.41638947 282.09127808]
[44.33672333 296.52581787]
[41.45145035 311.24572754]
[38.56617737 325.96560669]
[35.90038300 340.72683716]
[34.45096207 355.65664673]
[34.00435638 370.64999390]
[33.55775070 385.64334106]
[33.11114502 400.63668823]
[32.66453934 415.63003540]
[32.21793365 430.62338257]
[31.77132797 445.61672974]
[31.32472038 460.61007690]
[45.63513565 465.47869873]
[57.87375259 474.35043335]
[66.95231628 486.43643188]
[72.06357574 500.66198730]
[72.75303650 515.76220703]
[68.95939636 530.39434814]
[61.01997757 543.25732422]
[49.64075089 553.20745850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 202]
[12 201]
[13 200]
[14 199]
[15 198]
[16 197]
[17 196]
[18 195]
[28 194]
[31 193]
[32 192]
[33 191]
[45 190]
[46 189]
[47 188]
[48 183]
[49 182]
[50 181]
[51 180]
[52 179]
[54 178]
[55 177]
[56 176]
[57 175]
[58 174]
[59 172]
[60 171]
[62 168]
[63 167]
[64 166]
[65 165]
[66 164]
[67 163]
[68 162]
[70 159]
[71 158]
[72 157]
[73 156]
[75 153]
[76 152]
[77 151]
[78 150]
[79 149]
[91 137]
[92 136]
[93 135]
[94 123]
[95 122]
[96 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
