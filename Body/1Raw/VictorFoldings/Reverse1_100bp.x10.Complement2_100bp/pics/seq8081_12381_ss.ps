%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[146.79544067 670.70153809]
[134.41569519 662.22247314]
[122.59865570 652.97534180]
[111.39189148 642.99731445]
[100.84054565 632.32855225]
[90.98709869 621.01214600]
[81.87122345 609.09350586]
[73.52963257 596.62072754]
[65.99591064 583.64398193]
[59.30039215 570.21557617]
[53.47003937 556.38952637]
[48.52833176 542.22155762]
[44.49516678 527.76861572]
[41.38678360 513.08905029]
[39.21570206 498.24185181]
[37.99065781 483.28686523]
[37.71658707 468.28430176]
[38.39459610 453.29452515]
[40.02195358 438.37796021]
[42.59210205 423.59463501]
[46.09469986 409.00405884]
[50.51563644 394.66503906]
[55.83711243 380.63525391]
[62.03770065 366.97125244]
[69.09243774 353.72802734]
[76.97290802 340.95889282]
[85.64738464 328.71527100]
[95.08093262 317.04647827]
[105.23557281 305.99951172]
[116.07041931 295.61880493]
[127.54183197 285.94622803]
[139.60362244 277.02066040]
[152.20722961 268.87808228]
[165.30189514 261.55126953]
[158.82240295 248.02291870]
[152.34291077 234.49456787]
[146.61846924 229.81988525]
[145.86932373 220.71623230]
[139.59196472 207.09291077]
[133.31460571 193.46958923]
[127.66040802 188.71020508]
[127.04689026 179.59640503]
[120.97305298 165.88113403]
[114.89922333 152.16586304]
[102.67105865 143.66168213]
[104.15766907 127.91046906]
[98.08383179 114.19519806]
[86.90288544 105.80008698]
[88.20089722 91.87863159]
[75.53829193 82.39343262]
[77.45934296 67.62323761]
[71.38551331 53.90797043]
[59.65640640 48.54225540]
[54.87985229 36.99373627]
[59.11248398 25.66186142]
[53.24352646 11.85768509]
[47.37456512 -1.94649220]
[41.50560379 -15.75066948]
[27.12358856 -21.73359680]
[21.36827469 -35.81660080]
[27.16071320 -49.49078369]
[21.29175186 -63.29496002]
[15.42279148 -77.09913635]
[9.55383110 -90.90331268]
[3.68486977 -104.70748901]
[-9.30325699 -108.27444458]
[-17.74240685 -118.52096558]
[-18.72461128 -131.56387329]
[-12.11470318 -142.62454224]
[-17.77748871 -156.51457214]
[-23.44027519 -170.40460205]
[-29.10306168 -184.29463196]
[-34.76585007 -198.18466187]
[-40.42863464 -212.07467651]
[-55.09477997 -208.76498413]
[-70.10565948 -207.91455078]
[-85.05178070 -209.54656982]
[-99.52538300 -213.61654663]
[-113.13162994 -220.01341248]
[-125.49932861 -228.56266785]
[-136.29107666 -239.03109741]
[-145.21247864 -251.13310242]
[-152.02012634 -264.53854370]
[-156.52833557 -278.88168335]
[-158.61408997 -293.77127075]
[-158.22050476 -308.80105591]
[-155.35832214 -323.56106567]
[-150.10560608 -337.64862061]
[-142.60568237 -350.67938232]
[-133.06311035 -362.29788208]
[-121.73826599 -372.18713379]
[-108.94007111 -380.07739258]
[-95.01767731 -385.75338745]
[-80.35089111 -389.06024170]
[-65.33984375 -389.90780640]
[-50.39404678 -388.27288818]
[-35.92122650 -384.20013428]
[-22.31621170 -377.80065918]
[-9.95016098 -369.24899292]
[0.83957148 -358.77850342]
[9.75863457 -346.67477417]
[16.56370926 -333.26803589]
[21.06914902 -318.92401123]
[23.15204239 -304.03402710]
[22.75556374 -289.00430298]
[19.89053345 -274.24484253]
[14.63510704 -260.15832520]
[7.13266039 -247.12899780]
[-2.41213608 -235.51234436]
[-13.73889351 -225.62525940]
[-26.53860855 -217.73747253]
[-20.87582207 -203.84744263]
[-15.21303558 -189.95741272]
[-9.55024910 -176.06738281]
[-3.88746238 -162.17736816]
[1.77532411 -148.28733826]
[17.54132271 -142.43310547]
[24.32878304 -126.67729950]
[17.48904610 -110.57645416]
[23.35800743 -96.77227020]
[29.22696877 -82.96809387]
[35.09592819 -69.16391754]
[40.96488953 -55.35974503]
[54.83120346 -50.04364395]
[60.97981262 -36.12785339]
[55.30978012 -21.61963081]
[61.17874146 -7.81545305]
[67.04769897 5.98872375]
[72.91666412 19.79290009]
[87.48631287 29.57514381]
[85.10077667 47.83413315]
[91.17461395 61.54940033]
[103.40277863 70.05358887]
[101.91616821 85.80480194]
[113.09711456 94.19991302]
[111.79910278 108.12136841]
[117.87293243 121.83663177]
[130.53553772 131.32182312]
[128.61448669 146.09202576]
[134.68832397 159.80729675]
[140.76216125 173.52256775]
[146.93792725 187.19223022]
[153.21528625 200.81555176]
[159.49264526 214.43887329]
[165.87124634 228.01507568]
[172.35075378 241.54342651]
[178.83024597 255.07176208]
[192.74696350 249.46128845]
[206.99150085 244.74476624]
[221.50650024 240.94117737]
[236.23352051 238.06585693]
[251.11325073 236.13037109]
[266.08578491 235.14251709]
[281.09082031 235.10627747]
[296.06796265 236.02178955]
[310.95684814 237.88536072]
[325.69760132 240.68949890]
[340.23080444 244.42291260]
[354.49795532 249.07057190]
[368.44161987 254.61375427]
[382.00564575 261.03012085]
[395.13540649 268.29388428]
[407.77801514 276.37576294]
[419.88259888 285.24319458]
[431.40039062 294.86050415]
[442.28503418 305.18896484]
[452.49270630 316.18698120]
[461.98226929 327.81027222]
[470.71551514 340.01202393]
[478.65731812 352.74310303]
[485.77566528 365.95223999]
[492.04190063 379.58627319]
[497.43078613 393.59030151]
[501.92065430 407.90789795]
[505.49337769 422.48144531]
[508.13461304 437.25222778]
[509.83367920 452.16082764]
[510.58377075 467.14712524]
[510.38186646 482.15084839]
[509.22875977 497.11157227]
[507.12911987 511.96902466]
[504.09136963 526.66339111]
[500.12774658 541.13549805]
[495.25424194 555.32714844]
[489.49047852 569.18103027]
[482.85961914 582.64154053]
[475.38839722 595.65435791]
[467.10687256 608.16711426]
[458.04843140 620.12939453]
[448.24951172 631.49310303]
[437.74960327 642.21246338]
[426.59097290 652.24426270]
[414.81854248 661.54815674]
[402.47973633 670.08666992]
[389.62420654 677.82543945]
[376.30374146 684.73321533]
[362.57196045 690.78228760]
[348.48419189 695.94824219]
[334.09713745 700.21026611]
[319.46871948 703.55126953]
[304.65786743 705.95770264]
[289.72418213 707.41992188]
[274.72784424 707.93206787]
[259.72921753 707.49206543]
[244.78869629 706.10168457]
[229.96643066 703.76647949]
[215.32212830 700.49591064]
[200.91473389 696.30310059]
[186.80227661 691.20495605]
[173.04156494 685.22204590]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 147]
[35 146]
[36 145]
[38 144]
[39 143]
[40 142]
[42 141]
[43 140]
[44 139]
[46 137]
[47 136]
[49 134]
[51 132]
[52 131]
[55 129]
[56 128]
[57 127]
[58 126]
[61 123]
[62 122]
[63 121]
[64 120]
[65 119]
[69 116]
[70 115]
[71 114]
[72 113]
[73 112]
[74 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
