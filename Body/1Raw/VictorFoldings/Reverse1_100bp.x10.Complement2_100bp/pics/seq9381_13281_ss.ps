%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[106.67176056 512.07904053]
[105.79524231 527.11828613]
[101.59365845 541.58532715]
[94.27774048 554.75439453]
[84.21446228 565.96502686]
[71.90859222 574.65490723]
[57.97738647 580.38806152]
[43.11962891 582.87701416]
[28.08057594 581.99682617]
[13.61458397 577.79174805]
[0.44726029 570.47265625]
[-10.76092911 560.40661621]
[-19.44778442 548.09863281]
[-25.17757797 534.16607666]
[-27.66290665 519.30767822]
[-26.77910423 504.26885986]
[-22.57050514 489.80389404]
[-15.24820805 476.63833618]
[-5.17949867 465.43258667]
[7.13058186 456.74871826]
[21.06456566 451.02230835]
[35.92352676 448.54055786]
[50.96215057 449.42800903]
[55.14916229 435.02423096]
[59.33617401 420.62045288]
[63.52318573 406.21667480]
[59.64604187 391.83554077]
[70.92789459 380.74365234]
[75.11490631 366.33984375]
[78.97921753 351.84616089]
[82.51889038 337.26977539]
[86.05856323 322.69342041]
[89.59822845 308.11703491]
[85.08280182 293.92337036]
[95.85813141 282.33877563]
[91.34270477 268.14511108]
[102.11802673 256.56051636]
[103.23367310 241.60205078]
[101.89543915 226.66186523]
[100.55720520 211.72167969]
[99.21897125 196.78149414]
[97.88073730 181.84130859]
[96.54250336 166.90112305]
[87.70058441 154.91490173]
[94.17584229 140.47946167]
[92.11368561 138.58061218]
[90.67942810 135.75050354]
[90.23155975 132.22419739]
[91.03690338 128.36207581]
[93.22985840 124.61443329]
[92.78325653 109.62107849]
[92.11347198 94.63603973]
[91.22065735 79.66263580]
[90.32784271 64.68923187]
[89.43502045 49.71582413]
[88.31937408 34.75737000]
[86.98114014 19.81718636]
[85.64290619 4.87700081]
[83.08707428 -9.90365314]
[77.90836334 -17.42819595]
[79.38466644 -24.66990089]
[75.84500122 -39.24627686]
[72.30532837 -53.82265091]
[68.76565552 -68.39902496]
[65.22598267 -82.97540283]
[61.68630981 -97.55178070]
[58.14663696 -112.12815094]
[48.23220825 -100.87186432]
[33.24345016 -101.45249939]
[24.22951698 -113.44203186]
[27.83514595 -128.00224304]
[41.40240097 -134.39985657]
[54.92896652 -127.92010498]
[52.48323822 -142.71937561]
[50.03750992 -157.51864624]
[47.59178162 -172.31791687]
[43.10502625 -180.27447510]
[45.22152328 -187.35559082]
[42.99640656 -202.18963623]
[40.66091919 -217.00669861]
[38.21519089 -231.80596924]
[35.76946640 -246.60523987]
[25.04529190 -236.11753845]
[10.14123535 -237.81137085]
[2.04401016 -250.43812561]
[6.72259045 -264.68981934]
[20.72809982 -270.06063843]
[33.73526001 -262.59277344]
[32.39702225 -277.53295898]
[30.83650017 -292.45156860]
[29.05403519 -307.34527588]
[27.27156830 -322.23901367]
[12.42693043 -325.15307617]
[-0.78967237 -332.51354980]
[-11.08341122 -343.59933472]
[-17.44581032 -357.32431030]
[-19.25354576 -372.34387207]
[-16.32951546 -387.18655396]
[-8.96018600 -400.39822388]
[2.13247156 -410.68450928]
[15.86171150 -417.03771973]
[30.88248253 -418.83538818]
[45.72320175 -415.90142822]
[58.92992783 -408.52325439]
[69.20880127 -397.42370605]
[75.55280304 -383.69018555]
[77.34040833 -368.66821289]
[74.39649200 -353.82946777]
[67.00946045 -340.62768555]
[55.90302658 -330.35626221]
[42.16528702 -324.02145386]
[43.94775391 -309.12774658]
[45.73021698 -294.23403931]
[48.86433411 -290.63037109]
[49.76792908 -285.01962280]
[47.33720779 -278.87118530]
[48.67544174 -263.93099976]
[50.56873703 -249.05097961]
[53.01446152 -234.25170898]
[55.46018982 -219.45243835]
[59.65222549 -213.36567688]
[57.83045197 -204.41474915]
[60.05556870 -189.58070374]
[62.39105606 -174.76364136]
[64.83678436 -159.96437073]
[67.28250885 -145.16510010]
[69.72823334 -130.36582947]
[72.72300720 -115.66782379]
[76.26268005 -101.09145355]
[79.80235291 -86.51507568]
[83.34202576 -71.93869781]
[86.88169861 -57.36232376]
[90.42137146 -42.78594971]
[93.96104431 -28.20957375]
[97.60913086 -13.65995312]
[102.69534302 -27.77131462]
[113.69428253 -37.97049713]
[128.14875793 -41.97897339]
[142.82962036 -38.90124512]
[154.45710754 -29.42488289]
[160.43362427 -15.66692829]
[159.42399597 -0.70094579]
[151.65376282 12.12962723]
[138.85884094 19.95840645]
[123.89762878 21.03642464]
[110.11250305 15.12284851]
[100.58309174 3.53876662]
[101.92132568 18.47895241]
[103.25955963 33.41913605]
[106.28499603 37.11451340]
[107.02113342 42.74967957]
[104.40843201 48.82300949]
[105.30124664 63.79641342]
[106.19406128 78.76982117]
[107.08687592 93.74322510]
[110.12003326 98.02270508]
[110.53955841 103.69697571]
[107.77660370 109.17447662]
[108.22321320 124.16782379]
[109.11602783 139.14123535]
[118.05366516 152.19609070]
[111.48268890 165.56289673]
[112.82092285 180.50308228]
[114.15915680 195.44326782]
[115.49739075 210.38345337]
[116.83562469 225.32363892]
[118.17385864 240.26382446]
[123.67039490 226.30715942]
[132.54910278 214.21714783]
[144.22109985 204.79565430]
[157.91221619 198.66757202]
[172.71437073 196.23936462]
[187.64579773 197.67208862]
[201.71612549 202.87069702]
[213.99215698 211.49040222]
[223.65963745 222.95948792]
[230.07736206 236.51724243]
[232.81967163 251.26443481]
[231.70468140 266.22293091]
[226.80635071 280.40060425]
[218.44955444 292.85708618]
[207.18856812 302.76617432]
[193.77029419 309.47067261]
[179.08473206 312.52584839]
[164.10589600 311.72909546]
[149.82731628 307.13323975]
[137.19599915 299.04309082]
[127.04976654 287.99530029]
[120.06156921 274.72259521]
[116.69440460 260.10018921]
[120.95664978 275.33645630]
[110.43450165 285.87844849]
[114.69675446 301.11471558]
[104.17460632 311.65670776]
[100.63493347 326.23309326]
[97.09526062 340.80944824]
[93.55558777 355.38583374]
[95.02676392 360.39410400]
[94.48400879 365.00482178]
[92.41602325 368.51742554]
[89.51869202 370.52685547]
[85.33168030 384.93063354]
[88.90933990 400.34204102]
[77.92696381 410.40368652]
[73.73995209 424.80746460]
[69.55294037 439.21124268]
[65.36593628 453.61502075]
[78.53680420 460.92776489]
[89.74987030 470.98831177]
[98.44268799 483.29208374]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 207]
[24 206]
[25 205]
[26 204]
[28 202]
[29 201]
[30 197]
[31 196]
[32 195]
[33 194]
[35 192]
[37 190]
[38 167]
[39 166]
[40 165]
[41 164]
[42 163]
[43 162]
[45 160]
[50 159]
[51 158]
[52 155]
[53 154]
[54 153]
[55 152]
[56 149]
[57 148]
[58 147]
[59 135]
[61 134]
[62 133]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[73 127]
[74 126]
[75 125]
[76 124]
[78 123]
[79 122]
[80 120]
[81 119]
[82 118]
[88 117]
[89 116]
[90 113]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
