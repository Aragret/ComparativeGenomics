%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[151.22723389 423.65353394]
[153.49487305 408.79705811]
[157.95152283 394.44448853]
[164.49763489 380.91650391]
[172.98693848 368.51535034]
[183.22981262 357.51800537]
[194.99742126 348.17019653]
[208.02684021 340.68078613]
[196.19061279 331.63903809]
[198.37907410 315.96994019]
[192.92370605 301.99713135]
[187.46835327 288.02435303]
[180.68835449 274.64407349]
[172.64718628 261.98153687]
[164.60601807 249.31901550]
[156.56484985 236.65649414]
[148.52366638 223.99397278]
[135.16926575 217.39781189]
[134.30288696 201.60034180]
[126.26171112 188.93782043]
[118.22054291 176.27528381]
[119.41803741 191.22741699]
[115.99764252 205.83222961]
[108.28535461 218.69772339]
[97.01628113 228.59761047]
[83.26449585 234.58831787]
[68.34074402 236.09883118]
[53.66746140 232.98519897]
[40.64321136 225.54417419]
[30.50937843 214.48498535]
[24.23185730 200.86174011]
[22.40898323 185.97291565]
[25.21450043 171.23762512]
[32.38100052 158.06031799]
[43.22542572 147.69699097]
[56.71414948 141.13540649]
[71.56150818 139.00097656]
[86.35235596 141.49714661]
[99.67692566 148.38597107]
[110.26585388 159.01179504]
[105.86486053 144.67195129]
[101.46385956 130.33210754]
[97.06285858 115.99225616]
[87.12122345 109.92553711]
[83.78712463 98.76645660]
[88.77113342 88.24025726]
[84.58412170 73.83647156]
[75.18219757 85.52423859]
[60.18246460 85.61347198]
[50.64216232 74.03838348]
[53.59404755 59.33170319]
[66.86209869 52.33465195]
[80.66451263 58.20395279]
[77.56040192 43.52865219]
[74.45629120 28.85334778]
[71.35218048 14.17804527]
[66.51462555 6.42976618]
[68.31282043 -0.73879600]
[65.42754364 -15.45868778]
[53.00612640 -29.05243111]
[59.33678818 -45.41976547]
[56.23267746 -60.09506607]
[53.12856674 -74.77037048]
[42.70293808 -86.67065430]
[47.63896179 -100.72358704]
[44.53485107 -115.39888763]
[34.10921860 -127.29917145]
[39.04524231 -141.35211182]
[35.94113541 -156.02740479]
[21.00798607 -154.47215271]
[5.99407625 -154.48637390]
[-8.93609715 -156.06991577]
[-23.61894989 -159.20544434]
[-37.89361191 -163.85859680]
[-51.60367584 -169.97837830]
[-64.59893036 -177.49775696]
[-76.73699188 -186.33433533]
[-87.88487244 -196.39129639]
[-97.92042542 -207.55845642]
[-106.73370361 -219.71345520]
[-114.22812653 -232.72311401]
[-120.32160187 -246.44490051]
[-124.94734955 -260.72845459]
[-128.05470276 -275.41729736]
[-129.60958862 -290.35049438]
[-129.59500122 -305.36441040]
[-128.01109314 -320.29452515]
[-124.87521362 -334.97732544]
[-120.22171783 -349.25186157]
[-114.10159302 -362.96176147]
[-106.58190155 -375.95684814]
[-97.74502563 -388.09469604]
[-87.68779755 -399.24234009]
[-76.52039337 -409.27761841]
[-64.36518097 -418.09057617]
[-51.35533905 -425.58471680]
[-37.63341141 -431.67782593]
[-23.34973526 -436.30325317]
[-8.66081715 -439.41024780]
[6.27240515 -440.96478271]
[21.28631592 -440.94982910]
[36.21641159 -439.36553955]
[50.89911270 -436.22930908]
[65.17354584 -431.57546997]
[78.88331604 -425.45501709]
[91.87820435 -417.93499756]
[104.01583862 -409.09783936]
[115.16323090 -399.04031372]
[125.19824219 -387.87268066]
[134.01092529 -375.71725464]
[141.50471497 -362.70724487]
[147.59751892 -348.98513794]
[152.22257996 -334.70135498]
[155.32920837 -320.01235962]
[156.88337708 -305.07910156]
[156.86807251 -290.06521606]
[155.28343201 -275.13513184]
[152.14683533 -260.45251465]
[147.49264526 -246.17819214]
[141.37185669 -232.46858215]
[133.85153198 -219.47387695]
[125.01406860 -207.33645630]
[114.95629883 -196.18930054]
[103.78840637 -186.15457153]
[91.63276672 -177.34217834]
[78.62255859 -169.84869385]
[64.90033722 -163.75622559]
[50.61643600 -159.13151550]
[53.72054672 -144.45622253]
[63.92415237 -133.60560608]
[59.21015167 -118.50299835]
[62.31426239 -103.82769775]
[72.51786804 -92.97708893]
[67.80387115 -77.87448120]
[70.90798187 -63.19917679]
[74.01209259 -48.52387619]
[83.97612000 -41.66496277]
[86.68231201 -29.46413231]
[80.14743805 -18.34395981]
[83.03270721 -3.62406850]
[86.02748108 11.07393551]
[89.13159180 25.74923706]
[92.23570251 40.42454147]
[95.33981323 55.09984207]
[98.98789978 69.64945984]
[103.17491150 84.05324554]
[115.57922363 95.34524536]
[111.40270996 111.59125519]
[115.80371094 125.93110657]
[120.20470428 140.27095032]
[124.60570526 154.61079407]
[130.88305664 168.23411560]
[138.92424011 180.89663696]
[146.96540833 193.55917358]
[160.89495850 201.06103516]
[161.18618774 215.95278931]
[169.22737122 228.61532593]
[177.26853943 241.27784729]
[185.30970764 253.94036865]
[193.35089111 266.60290527]
[193.12823486 251.60455322]
[198.95022583 237.78048706]
[209.83572388 227.46032715]
[223.95034790 222.38316345]
[238.91552734 223.40461731]
[252.20936584 230.35255432]
[261.59164429 242.05610657]
[265.48123169 256.54302979]
[263.22271729 271.37200928]
[255.19667053 284.04412842]
[242.75563049 292.42391968]
[227.99612427 295.09918213]
[213.40539551 291.61914062]
[201.44114685 282.56896973]
[206.89651489 296.54177856]
[212.35186768 310.51458740]
[224.57830811 320.55572510]
[221.99964905 335.22543335]
[236.65686035 331.90524292]
[251.64523315 330.80679321]
[266.62988281 331.95458984]
[281.27609253 335.32305908]
[295.25662231 340.83688354]
[308.25918579 348.37289429]
[319.99322510 357.76272583]
[330.19668579 368.79666138]
[338.64157104 381.22814941]
[345.13922119 394.77944946]
[349.54446411 409.14785767]
[351.75894165 424.01239014]
[351.73309326 439.04092407]
[349.46759033 453.89773560]
[345.01296997 468.25094604]
[338.46878052 481.77984619]
[329.98123169 494.18222046]
[319.73992920 505.18103027]
[307.97366333 514.53051758]
[294.94531250 522.02178955]
[280.94589233 527.48754883]
[266.28820801 530.80560303]
[251.29969788 531.90191650]
[236.31518555 530.75195312]
[221.66946411 527.38146973]
[207.68971252 521.86566162]
[194.68824768 514.32775879]
[182.95552063 504.93624878]
[172.75364685 493.90087891]
[164.31053162 481.46820068]
[157.81481934 467.91595459]
[153.41160583 453.54690552]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 178]
[10 176]
[11 175]
[12 174]
[13 160]
[14 159]
[15 158]
[16 157]
[17 156]
[19 154]
[20 153]
[21 152]
[40 151]
[41 150]
[42 149]
[43 148]
[46 146]
[47 145]
[53 144]
[54 143]
[55 142]
[56 141]
[58 140]
[59 139]
[61 136]
[62 135]
[63 134]
[65 132]
[66 131]
[68 129]
[69 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
