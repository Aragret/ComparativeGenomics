%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[208.76036072 482.82302856]
[219.66351318 472.43960571]
[232.48744202 464.55032349]
[227.45051575 450.42129517]
[222.41360474 436.29226685]
[217.37669373 422.16323853]
[212.33976746 408.03421021]
[207.30285645 393.90518188]
[201.84750366 379.93240356]
[195.97853088 366.12820435]
[183.87834167 357.44290161]
[185.59930420 341.71557617]
[179.73034668 327.91140747]
[173.86137390 314.10723877]
[167.99241638 300.30303955]
[162.12345886 286.49887085]
[158.10801697 283.91329956]
[155.67417908 278.77777100]
[156.29205322 272.19525146]
[150.83670044 258.22244263]
[145.38133240 244.24964905]
[133.54510498 235.20791626]
[135.73356628 219.53880310]
[123.89732361 210.49708557]
[126.08577728 194.82795715]
[120.63042450 180.85516357]
[115.17506409 166.88237000]
[112.11001587 165.13943481]
[109.73689270 161.82533264]
[108.78495789 157.28141785]
[109.80345154 152.16186523]
[104.97745514 137.95941162]
[100.15145111 123.75695801]
[95.32545471 109.55450439]
[89.45649719 95.75032043]
[74.66932678 90.85365295]
[67.88250732 77.23771667]
[72.64186096 63.17058563]
[65.76245117 49.84115601]
[52.55772400 41.12646866]
[53.59623337 26.26811218]
[46.71682358 12.93868256]
[39.83740997 -0.39074695]
[32.95799637 -13.72017574]
[19.75327301 -22.43486595]
[20.79178238 -37.29322052]
[4.03201151 -42.30614853]
[-3.76335287 -57.58839798]
[1.79441690 -73.46132660]
[-5.28268862 -86.68685913]
[-12.35979366 -99.91238403]
[-19.43689919 -113.13790894]
[-26.51400566 -126.36344147]
[-26.01047516 -111.37189484]
[-28.81044769 -96.63553619]
[-34.77730560 -82.87339783]
[-43.61991119 -70.75695038]
[-54.90681839 -60.87738419]
[-68.08731079 -53.71675110]
[-82.51828003 -49.62443161]
[-97.49561310 -48.80009842]
[-112.28852844 -51.28397369]
[-126.17524719 -56.95486450]
[-138.47821045 -65.53607178]
[-148.59712219 -76.60890198]
[-156.03826904 -89.63308716]
[-160.43856812 -103.97315216]
[-161.58331299 -118.92940521]
[-159.41668701 -133.77210999]
[-154.04435730 -147.77703857]
[-145.72848511 -160.26087952]
[-134.87480164 -170.61450195]
[-122.01288605 -178.33273315]
[-107.77030182 -183.03900146]
[-92.84197998 -184.50366211]
[-77.95630646 -182.65524292]
[-63.83958054 -177.58395386]
[-51.18058777 -169.53721619]
[-40.59699631 -158.90765381]
[-32.60808182 -146.21986389]
[-34.16860199 -161.13847351]
[-35.72912598 -176.05708313]
[-37.28964996 -190.97567749]
[-38.85017395 -205.89428711]
[-40.41069412 -220.81289673]
[-44.41591263 -229.02239990]
[-41.88169479 -235.96499634]
[-43.21992874 -250.90518188]
[-44.55816269 -265.84536743]
[-45.89639664 -280.78555298]
[-60.79837418 -283.06469727]
[-74.72161865 -288.84454346]
[-86.85665131 -297.78906250]
[-96.49796295 -309.37823486]
[-103.08501434 -322.93823242]
[-106.23484802 -337.68075562]
[-105.76432800 -352.74868774]
[-101.70082092 -367.26596069]
[-94.28056335 -380.38858032]
[-83.93496704 -391.35360718]
[-71.26551056 -399.52359009]
[-57.00876999 -404.42346191]
[-41.99362946 -405.76843262]
[-27.09303665 -403.48022461]
[-13.17329788 -397.69195557]
[-1.04368722 -388.74008179]
[8.59059525 -377.14508057]
[15.16942406 -363.58105469]
[18.31031609 -348.83663940]
[17.83066368 -333.76901245]
[13.75835419 -319.25418091]
[6.33014441 -306.13607788]
[-4.02209806 -295.17730713]
[-16.69650841 -287.01501465]
[-30.95621109 -282.12377930]
[-29.61797714 -267.18359375]
[-28.27974319 -252.24340820]
[-26.94150925 -237.30322266]
[-25.49209023 -222.37341309]
[-23.93156815 -207.45481873]
[-22.37104416 -192.53620911]
[-20.81052208 -177.61759949]
[-19.24999809 -162.69898987]
[-17.68947601 -147.78039551]
[-13.28847694 -133.44055176]
[-6.21137190 -120.21501923]
[0.86573356 -106.98948669]
[7.94283915 -93.76396179]
[15.01994419 -80.53843689]
[27.75331688 -78.56594849]
[37.16615677 -69.48406219]
[39.66639328 -56.44722366]
[34.12121201 -44.17263412]
[46.83387375 -36.41135406]
[46.28742599 -20.59958839]
[53.16683960 -7.27015972]
[60.04625320 6.05926991]
[66.92566681 19.38869858]
[79.63832855 27.14997864]
[79.09188080 42.96174622]
[85.97129059 56.29117584]
[100.19459534 60.56121826]
[107.36117554 73.98115540]
[102.78592682 88.87091064]
[105.09503937 74.04971313]
[114.42821503 62.30697632]
[128.34577942 56.71223068]
[143.20973206 58.72792816]
[155.13465881 67.82717133]
[161.00340271 81.63143921]
[159.28190613 96.53232574]
[150.42016602 108.63478088]
[136.73460388 114.77524567]
[121.80259705 113.34862518]
[109.52790833 104.72850037]
[114.35391235 118.93096161]
[119.17990875 133.13340759]
[124.00590515 147.33587646]
[129.14785767 161.42701721]
[134.60322571 175.39981079]
[140.05857849 189.37260437]
[152.28501892 199.41375732]
[149.70635986 214.08345032]
[161.93280029 224.12460327]
[159.35414124 238.79428101]
[164.80949402 252.76708984]
[170.26484680 266.73989868]
[175.92764282 280.62991333]
[181.79660034 294.43408203]
[187.66555786 308.23825073]
[193.53451538 322.04244995]
[199.40347290 335.84661865]
[211.92346191 345.51928711]
[209.78271484 360.25924683]
[215.65167236 374.06344604]
[219.21173096 376.54937744]
[221.55941772 379.72003174]
[222.62837219 383.11010742]
[222.51013184 386.28070068]
[221.43188477 388.86828613]
[226.46879578 402.99731445]
[231.50572205 417.12634277]
[236.54263306 431.25537109]
[241.57954407 445.38439941]
[246.61647034 459.51342773]
[261.53909302 457.51119995]
[276.55187988 458.65573120]
[290.99853516 462.89697266]
[304.24749756 470.04949951]
[315.71960449 479.80062866]
[324.91329956 491.72409058]
[331.42672729 505.29867554]
[334.97512817 519.93090820]
[335.40338135 534.98120117]
[332.69274902 549.79150391]
[326.96173096 563.71447754]
[318.46090698 576.14147949]
[307.56182861 586.52917480]
[294.74102783 594.42346191]
[280.55889893 599.47930908]
[265.63549805 601.47564697]
[250.62316895 600.32519531]
[236.17817688 596.07830811]
[222.93203735 588.92059326]
[211.46377563 579.16491699]
[202.27474976 567.23785400]
[195.76666260 553.66070557]
[192.22402954 539.02703857]
[191.80169678 523.97662354]
[194.51815796 509.16735840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 185]
[4 184]
[5 183]
[6 182]
[7 181]
[8 180]
[9 175]
[10 174]
[12 172]
[13 171]
[14 170]
[15 169]
[16 168]
[19 167]
[20 166]
[21 165]
[23 163]
[25 161]
[26 160]
[27 159]
[31 158]
[32 157]
[33 156]
[34 155]
[35 144]
[38 141]
[39 140]
[41 138]
[42 137]
[43 136]
[44 135]
[46 133]
[49 129]
[50 128]
[51 127]
[52 126]
[53 125]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[85 119]
[87 118]
[88 117]
[89 116]
[90 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
