%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[48.15973663 675.40582275]
[33.32017517 673.04614258]
[18.96750641 668.59844971]
[5.39393234 662.15344238]
[-7.12420845 653.84216309]
[-18.33206177 643.83392334]
[-28.00144958 632.33245850]
[-35.93551636 619.57189941]
[-41.97273254 605.81207275]
[-45.99019241 591.33312988]
[-47.90610123 576.42974854]
[-47.68145752 561.40545654]
[-45.32083130 546.56604004]
[-40.87228394 532.21362305]
[-34.42638016 518.64044189]
[-26.11435509 506.12283325]
[-16.10542488 494.91558838]
[-4.60336113 485.24691772]
[8.15766907 477.31365967]
[21.91786575 471.27728271]
[36.39709091 467.26071167]
[51.30056763 465.34573364]
[51.52389526 450.34738159]
[51.74722290 435.34906006]
[51.97055054 420.35070801]
[52.19387817 405.35238647]
[52.41720581 390.35403442]
[52.64053345 375.35571289]
[52.75220108 360.35610962]
[52.75220108 345.35610962]
[41.40740967 355.16915894]
[26.43724060 354.22363281]
[16.41728592 343.06115723]
[17.08743095 328.07614136]
[28.06378555 317.85266113]
[43.05859756 318.24719238]
[53.48180008 329.03283691]
[54.82003403 314.09265137]
[56.15826797 299.15246582]
[57.49650574 284.21228027]
[58.83473969 269.27209473]
[60.17297363 254.33192444]
[53.60199738 240.96511841]
[62.53963470 227.91026306]
[52.64503098 239.18399048]
[38.47123718 244.09352112]
[23.72324181 241.35551453]
[12.25613880 231.68568420]
[7.06740141 217.61170959]
[9.51335239 202.81246948]
[18.95462608 191.15646362]
[32.92329788 185.69055176]
[47.76798630 187.84350586]
[59.60832977 197.05253601]
[65.34917450 210.90954590]
[68.88884735 196.33317566]
[72.42851257 181.75680542]
[75.96818542 167.18041992]
[71.45275879 152.98675537]
[82.22808838 141.40216064]
[85.76776123 126.82578278]
[89.30743408 112.24941254]
[84.17134094 96.28079224]
[95.88154602 84.27049255]
[99.20380402 69.64303589]
[98.05281830 60.58140945]
[102.68595123 54.82329559]
[106.22562408 40.24692154]
[109.76529694 25.67054558]
[113.30496979 11.09417057]
[116.84464264 -3.48220468]
[120.38431549 -18.05858040]
[123.92398834 -32.63495636]
[127.46366119 -47.21133041]
[131.00332642 -61.78770447]
[134.54299927 -76.36408234]
[138.08267212 -90.94046021]
[141.62234497 -105.51683044]
[137.36010742 -120.75309753]
[147.88224792 -131.29510498]
[146.41107178 -136.30335999]
[146.95382690 -140.91407776]
[149.02182007 -144.42669678]
[151.91914368 -146.43612671]
[156.10615540 -160.83990479]
[152.52850342 -176.25129700]
[163.51086426 -186.31294250]
[167.69787598 -200.71673584]
[171.88488770 -215.12051392]
[176.07189941 -229.52429199]
[180.25891113 -243.92807007]
[184.44592285 -258.33184814]
[188.63293457 -272.73562622]
[192.81994629 -287.13943481]
[197.00695801 -301.54321289]
[199.78257751 -316.28417969]
[201.12080383 -331.22436523]
[202.45904541 -346.16455078]
[203.79727173 -361.10473633]
[189.87701416 -367.02767944]
[178.46968079 -376.96389771]
[170.69287109 -389.93988037]
[167.30844116 -404.68438721]
[168.64799500 -419.75292969]
[174.58029175 -433.66921997]
[184.52412415 -445.06988525]
[197.50532532 -452.83801270]
[212.25210571 -456.21255493]
[227.31974792 -454.86288452]
[241.23205566 -448.92129517]
[252.62606812 -438.96981812]
[260.38549805 -425.98339844]
[263.75015259 -411.23437500]
[262.39038086 -396.16763306]
[256.43945312 -382.25930786]
[246.48034668 -370.87197876]
[233.48875427 -363.12124634]
[218.73745728 -359.76647949]
[217.39923096 -344.82629395]
[216.06098938 -329.88610840]
[214.72276306 -314.94592285]
[223.68400574 -326.97491455]
[236.72303772 -334.38998413]
[251.64257812 -335.94158936]
[265.92840576 -331.36825562]
[277.17309570 -321.44070435]
[283.48175049 -307.83184814]
[283.79122925 -292.83502197]
[278.04937744 -278.97750854]
[267.22378540 -268.59448242]
[253.13880920 -263.43569946]
[238.16796875 -264.37048340]
[224.83412170 -271.24133301]
[215.38426208 -282.89038086]
[211.41073608 -297.35620117]
[207.22373962 -282.95242310]
[203.03672791 -268.54861450]
[198.84971619 -254.14485168]
[194.66270447 -239.74105835]
[190.47569275 -225.33728027]
[186.28868103 -210.93350220]
[182.10166931 -196.52972412]
[177.91465759 -182.12593079]
[181.79179382 -167.74479675]
[170.50993347 -156.65290833]
[166.32292175 -142.24911499]
[162.45861816 -127.75542450]
[166.97404480 -113.56175995]
[156.19873047 -101.97715759]
[152.65905762 -87.40078735]
[149.11938477 -72.82440948]
[145.57971191 -58.24803543]
[142.04003906 -43.67165756]
[138.50036621 -29.09528351]
[134.96069336 -14.51890755]
[131.42102051 0.05746770]
[127.88134766 14.63384342]
[124.34167480 29.21021843]
[120.80200195 43.78659439]
[117.26232910 58.36296844]
[113.83126831 72.96529388]
[110.50901031 87.59275055]
[116.11071014 97.80363464]
[113.44671631 109.14138031]
[103.88380432 115.78908539]
[100.34413147 130.36546326]
[96.80445862 144.94183350]
[101.06671143 160.17810059]
[90.54456329 170.72009277]
[87.00489044 185.29647827]
[83.46521759 199.87284851]
[79.92554474 214.44921875]
[77.47982025 229.24848938]
[83.95507812 243.68392944]
[75.11315918 255.67015076]
[73.77492523 270.61035156]
[72.43669128 285.55053711]
[71.09845734 300.49072266]
[69.76022339 315.43090820]
[68.42198944 330.37109375]
[67.75220490 345.35610962]
[67.75220490 360.35610962]
[70.88160706 368.93777466]
[67.63887024 375.57904053]
[67.41554260 390.57736206]
[67.19221497 405.57571411]
[66.96888733 420.57403564]
[66.74555969 435.57238770]
[66.52223206 450.57070923]
[66.29890442 465.56906128]
[81.13875580 467.92694092]
[95.49197388 472.37280273]
[109.06634521 478.81619263]
[121.58551788 487.12588501]
[132.79461670 497.13275146]
[142.46542358 508.63302612]
[150.40106201 521.39257812]
[156.43998718 535.15167236]
[160.45924377 549.63012695]
[162.37699890 564.53326416]
[162.15420532 579.55761719]
[159.79542542 594.39727783]
[155.34864807 608.75024414]
[148.90441895 622.32421875]
[140.59394836 634.84289551]
[130.58641052 646.05133057]
[119.08554077 655.72143555]
[106.32549286 663.65631104]
[92.56604004 669.69439697]
[78.08731079 673.71270752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 190]
[23 189]
[24 188]
[25 187]
[26 186]
[27 185]
[28 184]
[29 182]
[30 181]
[37 180]
[38 179]
[39 178]
[40 177]
[41 176]
[42 175]
[44 173]
[55 172]
[56 171]
[57 170]
[58 169]
[60 167]
[61 166]
[62 165]
[64 162]
[65 161]
[67 160]
[68 159]
[69 158]
[70 157]
[71 156]
[72 155]
[73 154]
[74 153]
[75 152]
[76 151]
[77 150]
[78 149]
[80 147]
[84 146]
[85 145]
[87 143]
[88 142]
[89 141]
[90 140]
[91 139]
[92 138]
[93 137]
[94 136]
[95 135]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
