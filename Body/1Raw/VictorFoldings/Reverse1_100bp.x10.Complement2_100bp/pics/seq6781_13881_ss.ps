%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[99.41128540 544.58447266]
[106.99273682 531.28863525]
[119.89092255 523.04876709]
[118.55268860 508.10855103]
[117.21445465 493.16836548]
[115.87622070 478.22817993]
[104.31743622 468.90457153]
[102.74745178 453.77215576]
[112.60530853 441.71145630]
[111.26707458 426.77127075]
[102.42516327 414.78503418]
[108.90041351 400.34960938]
[107.56217957 385.40942383]
[105.66889191 370.52938843]
[103.22315979 355.73010254]
[100.77743530 340.93084717]
[98.33170319 326.13156128]
[95.88597870 311.33230591]
[93.44025421 296.53302002]
[90.99452209 281.73376465]
[85.33110809 295.62353516]
[74.56440735 306.06759644]
[60.50880432 311.30590820]
[45.53291702 310.45574951]
[32.16044235 303.66040039]
[22.64487648 292.06497192]
[18.58976173 277.62350464]
[20.67845535 262.76962280]
[28.55897522 250.00650024]
[40.90331650 241.48492432]
[55.63124084 238.64094543]
[70.26083374 241.95379639]
[82.32675171 250.86523438]
[89.79618835 263.87509155]
[90.24279022 248.88172913]
[90.68939972 233.88838196]
[91.13600159 218.89503479]
[91.58261108 203.90168762]
[92.02921295 188.90834045]
[81.64311981 172.59834290]
[92.50000000 155.61332703]
[92.50000000 140.61332703]
[92.50000000 125.61332703]
[92.50000000 110.61332703]
[92.05339050 95.61997223]
[91.16057587 80.64656830]
[90.26776123 65.67316437]
[89.37494659 50.69975662]
[88.25930023 35.74130630]
[86.92106628 20.80111885]
[77.98342896 7.74626589]
[84.55440521 -5.62054205]
[83.21616364 -20.56072617]
[81.87792969 -35.50091171]
[80.53969574 -50.44109726]
[79.20146179 -65.38127899]
[76.42585754 -80.12224579]
[72.23884583 -94.52602386]
[68.05183411 -108.92980957]
[63.86481857 -123.33358765]
[59.67781067 -137.73736572]
[42.44167709 -143.36529541]
[32.12474060 -158.08401489]
[32.70333099 -175.89176941]
[43.75710678 -189.66439819]
[39.14309692 -203.93713379]
[34.52908707 -218.20986938]
[29.91507912 -232.48260498]
[25.30106926 -246.75534058]
[20.68705940 -261.02807617]
[16.07304955 -275.30081177]
[11.45904160 -289.57354736]
[6.73890686 -303.81152344]
[-5.02697754 -314.38861084]
[-1.79585195 -328.92852783]
[-6.62184954 -343.13098145]
[-11.44784737 -357.33343506]
[-26.31060028 -355.03784180]
[-41.34617615 -355.35824585]
[-56.09765625 -358.28482056]
[-70.11676025 -363.72869873]
[-82.97746277 -371.52444458]
[-94.28894806 -381.43511963]
[-103.70746613 -393.15954590]
[-110.94680023 -406.34149170]
[-115.78695679 -420.58029175]
[-118.08084869 -435.44332886]
[-117.75875854 -450.47885132]
[-114.83049011 -465.23001099]
[-109.38502502 -479.24850464]
[-101.58783722 -492.10830688]
[-91.67588043 -503.41867065]
[-79.95036316 -512.83587646]
[-66.76761627 -520.07366943]
[-52.52824783 -524.91223145]
[-37.66497040 -527.20446777]
[-22.62947083 -526.88067627]
[-7.87865591 -523.95068359]
[6.13921356 -518.50366211]
[18.99814987 -510.70501709]
[30.30738449 -500.79177856]
[39.72324371 -489.06518555]
[46.95958710 -475.88162231]
[51.79651260 -461.64169312]
[54.08703232 -446.77816772]
[53.76153946 -431.74270630]
[50.82992172 -416.99221802]
[45.38127518 -402.97497559]
[37.58116913 -390.11691284]
[27.66664696 -378.80880737]
[15.93899632 -369.39428711]
[2.75460839 -362.15942383]
[7.58060598 -347.95697021]
[12.40660381 -333.75451660]
[23.82730103 -324.19329834]
[20.94136238 -308.63751221]
[26.06973648 -303.31573486]
[25.73177528 -294.18756104]
[30.34578323 -279.91482544]
[34.95979309 -265.64208984]
[39.57380295 -251.36935425]
[44.18781281 -237.09661865]
[48.80182266 -222.82388306]
[53.41582870 -208.55114746]
[58.02983856 -194.27841187]
[70.00108337 -192.26234436]
[80.03855896 -185.30662537]
[86.20245361 -174.68083191]
[87.26994324 -162.37066650]
[82.97731018 -150.70697021]
[74.08158875 -141.92437744]
[78.26860046 -127.52059937]
[82.45561218 -113.11682129]
[86.64262390 -98.71303558]
[90.82963562 -84.30925751]
[94.80239105 -98.77359772]
[104.25172424 -110.42306519]
[117.58525848 -117.29451752]
[132.55606079 -118.22999573]
[146.64128113 -113.07184601]
[157.46733093 -102.68932343]
[163.20980835 -88.83204651]
[162.90100098 -73.83522797]
[156.59298706 -60.22608566]
[145.34873962 -50.29800034]
[131.06312561 -45.72402573]
[116.14351654 -47.27496338]
[103.10413361 -54.68944931]
[94.14164734 -66.71951294]
[95.47988129 -51.77933121]
[96.81811523 -36.83914566]
[98.15634918 -21.89896202]
[99.49458313 -6.95877600]
[108.33650208 5.02745581]
[101.86125183 19.46288490]
[103.19948578 34.40307236]
[106.22491455 38.09844589]
[106.96105957 43.73361588]
[104.34835052 49.80694199]
[105.24116516 64.78034973]
[106.13398743 79.75375366]
[107.02680206 94.72715759]
[109.12675476 96.93616486]
[110.46935272 99.95807648]
[110.75196075 103.51385498]
[109.77926636 107.21657562]
[107.50000000 110.61332703]
[107.50000000 125.61332703]
[107.50000000 140.61332703]
[107.50000000 155.61332703]
[115.62284088 162.84713745]
[118.36710358 173.14515686]
[115.06002045 183.04524231]
[107.02256775 189.35493469]
[106.57595825 204.34829712]
[106.12935638 219.34164429]
[105.68274689 234.33499146]
[105.23614502 249.32833862]
[104.78953552 264.32168579]
[105.79379272 279.28802490]
[108.23952484 294.08731079]
[110.68524933 308.88656616]
[113.13098145 323.68585205]
[115.57670593 338.48510742]
[118.02243042 353.28439331]
[120.46816254 368.08364868]
[131.19233704 357.59594727]
[146.09638977 359.28979492]
[154.19361877 371.91653442]
[149.51502991 386.16824341]
[135.50952148 391.53906250]
[122.50236511 384.07119751]
[123.84059906 399.01138306]
[132.77824402 412.06622314]
[126.20726013 425.43304443]
[127.54549408 440.37322998]
[139.38986206 450.48999023]
[140.53417969 465.66052246]
[130.81640625 476.88995361]
[132.15463257 491.83013916]
[133.49287415 506.77032471]
[134.83110046 521.71051025]
[148.98835754 527.52697754]
[158.81205750 539.26379395]
[162.04478455 554.22399902]
[157.94371033 568.96984863]
[147.45120239 580.11279297]
[132.97836304 585.09234619]
[117.85096741 582.76422119]
[105.54515839 573.66333008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 202]
[4 201]
[5 200]
[6 199]
[9 196]
[10 195]
[12 193]
[13 192]
[14 186]
[15 185]
[16 184]
[17 183]
[18 182]
[19 181]
[20 180]
[34 179]
[35 178]
[36 177]
[37 176]
[38 175]
[39 174]
[41 170]
[42 169]
[43 168]
[44 167]
[45 162]
[46 161]
[47 160]
[48 159]
[49 156]
[50 155]
[52 153]
[53 152]
[54 151]
[55 150]
[56 149]
[57 135]
[58 134]
[59 133]
[60 132]
[61 131]
[65 125]
[66 124]
[67 123]
[68 122]
[69 121]
[70 120]
[71 119]
[72 118]
[73 116]
[75 114]
[76 113]
[77 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
