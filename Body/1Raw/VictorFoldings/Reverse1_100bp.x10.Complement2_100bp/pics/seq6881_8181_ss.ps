%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[72.66449738 548.36566162]
[85.43633270 540.00848389]
[83.43231964 525.14294434]
[81.42830658 510.27743530]
[79.42429352 495.41189575]
[77.42028046 480.54635620]
[71.34582520 494.26135254]
[60.27293777 504.38021851]
[46.06760406 509.19772339]
[31.12366486 507.90206909]
[17.95944214 500.71157837]
[8.79333401 488.83795166]
[5.16999388 474.28216553]
[7.70001650 459.49707031]
[15.95704937 446.97424316]
[28.54963684 438.82397461]
[43.35570526 436.41973877]
[57.88017654 440.16671753]
[69.67541504 449.43344116]
[76.75418854 462.65991211]
[77.64701080 447.68652344]
[78.53982544 432.71310425]
[79.43264008 417.73971558]
[72.46659851 404.57446289]
[81.01158142 391.25930786]
[81.90439606 376.28588867]
[71.85658264 365.35076904]
[72.54872131 350.15289307]
[84.08661652 339.68795776]
[84.97943115 324.71453857]
[85.87224579 309.74114990]
[86.76506042 294.76773071]
[87.65787506 279.79434204]
[71.79586029 273.40304565]
[59.05826187 261.95529175]
[50.99288177 246.81951904]
[48.58752060 229.81353760]
[52.14904404 212.98637390]
[61.26434708 198.37138367]
[74.84819031 187.74044800]
[91.27237701 182.38926697]
[91.49570465 167.39093018]
[91.71903229 152.39259338]
[91.94235992 137.39425659]
[92.16568756 122.39591980]
[92.38901520 107.39758301]
[91.71923065 92.41254425]
[90.15870667 77.49393463]
[88.59818268 62.57533264]
[87.03766632 47.65672684]
[85.03365326 32.79119873]
[82.58792114 17.99192810]
[80.14219666 3.19265747]
[77.69646454 -11.60661316]
[75.25074005 -26.40588379]
[72.80501556 -41.20515442]
[58.21863174 -45.56391907]
[47.01685333 -55.78190231]
[41.38538742 -69.79285431]
[42.39150620 -84.79781342]
[49.78220749 -97.82420349]
[62.04500198 -106.31475067]
[59.59927368 -121.11402130]
[57.15354538 -135.91329956]
[54.70781708 -150.71257019]
[51.71304321 -165.41056824]
[48.17337036 -179.98693848]
[44.63369751 -194.56332397]
[41.09402847 -209.13969421]
[37.55435562 -223.71606445]
[34.01468277 -238.29244995]
[30.47500992 -252.86882019]
[26.93533707 -267.44519043]
[22.32067871 -253.17266846]
[12.36059284 -241.95675659]
[-1.26646948 -235.68753052]
[-16.26411057 -235.42147827]
[-30.10496140 -241.20341492]
[-40.45660019 -252.05899048]
[-45.57458878 -266.15884399]
[-44.59645844 -281.12692261]
[-37.68704605 -294.44082642]
[-26.01070023 -303.85693359]
[-11.53509617 -307.78845215]
[3.30037451 -305.57287598]
[15.99567413 -297.58355713]
[24.41205025 -285.16528320]
[23.74226379 -300.15032959]
[23.07247925 -315.13534546]
[22.40269470 -330.12039185]
[21.73290825 -345.10543823]
[18.22343063 -353.53878784]
[21.16638756 -360.31823730]
[20.71977997 -375.31158447]
[6.10237455 -379.12051392]
[-6.84910822 -386.89456177]
[-17.08474922 -398.00350952]
[-23.77478981 -411.54678345]
[-26.37690163 -426.42648315]
[-24.68013763 -441.43640137]
[-18.82205200 -455.35974121]
[-9.27753067 -467.06781006]
[3.17969394 -475.61148071]
[17.53977013 -480.29815674]
[32.63859177 -480.74789429]
[47.25216293 -476.92425537]
[60.19583130 -469.13720703]
[70.42030334 -458.01800537]
[77.09674072 -444.46801758]
[79.68389893 -429.58569336]
[77.97206116 -414.57748413]
[72.09999084 -400.66003418]
[62.54370880 -388.96157837]
[50.07790756 -380.43041992]
[35.71313095 -375.75817871]
[36.15973663 -360.76483154]
[36.71794891 -345.77523804]
[37.38773346 -330.79019165]
[38.05751801 -315.80514526]
[38.72730255 -300.82009888]
[39.39708710 -285.83508301]
[41.51171112 -270.98486328]
[45.05138397 -256.40850830]
[48.59105682 -241.83212280]
[52.13072968 -227.25573730]
[55.67040253 -212.67936707]
[59.21007538 -198.10299683]
[62.74974823 -183.52661133]
[66.28942108 -168.95024109]
[76.20384979 -180.20652771]
[91.19260406 -179.62590027]
[100.20653534 -167.63636780]
[96.60090637 -153.07615662]
[83.03365326 -146.67854309]
[69.50708771 -153.15829468]
[71.95281982 -138.35902405]
[74.39854431 -123.55975342]
[76.84426880 -108.76048279]
[91.18674469 -104.66671753]
[102.37551117 -94.71076965]
[108.15572357 -80.82732391]
[107.33147430 -65.74949646]
[100.01275635 -52.47081757]
[87.60428619 -43.65088272]
[90.05001068 -28.85161209]
[92.49573517 -14.05234051]
[94.94146729 0.74693000]
[97.38719177 15.54620075]
[99.83292389 30.34547234]
[102.03060150 32.08568573]
[103.67137146 34.80128479]
[104.38027954 38.28451157]
[103.86441803 42.19582748]
[101.95626831 46.09620285]
[103.51679230 61.01480865]
[105.07731628 75.93341064]
[106.63784027 90.85202026]
[115.28464508 78.59507751]
[129.44692993 73.65243530]
[143.84251404 77.86757660]
[153.10217285 89.66835785]
[153.77232361 104.65338135]
[145.60298157 117.23359680]
[131.64112854 122.71690369]
[117.09418488 119.05815887]
[107.38735199 107.62091064]
[107.16402435 122.61924744]
[106.94069672 137.61758423]
[106.71736908 152.61592102]
[106.49404144 167.61425781]
[106.27071381 182.61259460]
[118.68215179 186.46678162]
[129.66032410 193.39697266]
[138.45968628 202.92424011]
[144.48477173 214.39360046]
[147.33055115 227.01895142]
[146.80961609 239.93705750]
[142.96450806 252.26651001]
[136.06433105 263.16784668]
[126.58596039 271.90075684]
[115.18105316 277.87438965]
[102.63127899 280.68713379]
[101.73846436 295.66055298]
[100.84564972 310.63394165]
[99.95283508 325.60736084]
[99.06002045 340.58078003]
[109.27259827 352.34262085]
[108.15385437 367.51504517]
[96.87779999 377.17871094]
[95.98498535 392.15209961]
[102.88716888 406.38833618]
[94.40604401 418.63253784]
[93.51322937 433.60592651]
[92.62041473 448.57934570]
[91.72760010 463.55273438]
[92.28580475 478.54235840]
[94.28982544 493.40786743]
[96.29383850 508.27340698]
[98.29785156 523.13891602]
[100.30186462 538.00445557]
[114.83080292 542.68127441]
[125.88581848 553.20501709]
[131.27192688 567.48620605]
[129.91970825 582.68933105]
[122.09764862 595.79571533]
[109.35882568 604.20318604]
[94.23253632 606.24237061]
[79.72212219 601.50836182]
[68.70863342 590.94116211]
[63.37881088 576.63885498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 200]
[3 199]
[4 198]
[5 197]
[6 196]
[20 195]
[21 194]
[22 193]
[23 192]
[25 190]
[26 189]
[29 186]
[30 185]
[31 184]
[32 183]
[33 182]
[41 171]
[42 170]
[43 169]
[44 168]
[45 167]
[46 166]
[47 157]
[48 156]
[49 155]
[50 154]
[51 149]
[52 148]
[53 147]
[54 146]
[55 145]
[56 144]
[62 138]
[63 137]
[64 136]
[65 135]
[66 129]
[67 128]
[68 127]
[69 126]
[70 125]
[71 124]
[72 123]
[73 122]
[87 121]
[88 120]
[89 119]
[90 118]
[91 117]
[93 116]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
