%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGGGGAGAUCUCGGGUGACAUUUCGAUUGAAUCGUAAUUGGAAAAUUCAAUUUCUAAUUCUCUUGGUUGUGGAGAAAUGUCACUUUACGGGGUUGAUUUAU\
) } def
/len { sequence length } bind def

/coor [
[100.41252899 478.02536011]
[93.07458496 491.13916016]
[83.90538025 503.04476929]
[73.10034943 513.48840332]
[60.88980865 522.24743652]
[47.53402328 529.13513184]
[33.31767273 534.00476074]
[18.54378128 536.75250244]
[3.52725506 537.31976318]
[-11.41182899 535.69445801]
[-25.95504379 531.91125488]
[-39.79239655 526.05072021]
[-52.62894821 518.23785400]
[-64.19108582 508.63919067]
[-74.23236084 497.45925903]
[-82.53873444 484.93640137]
[-88.93317413 471.33755493]
[-93.27936554 456.95254517]
[-95.48467255 442.08801270]
[-95.50209808 427.06076050]
[-93.33126068 412.19116211]
[-89.01844025 397.79611206]
[-82.65555573 384.18246460]
[-74.37824249 371.64038086]
[-64.36291504 360.43719482]
[-52.82307053 350.81170654]
[-40.00467300 342.96911621]
[-26.18094444 337.07653809]
[-11.64654255 333.25961304]
[3.28873229 331.59967041]
[18.30653381 332.13208008]
[33.08675766 334.84555054]
[37.91275406 320.64309692]
[42.73875427 306.44064331]
[47.56475067 292.23818970]
[52.39074707 278.03573608]
[49.15962219 263.49581909]
[60.92550659 252.91873169]
[65.75150299 238.71627808]
[70.57749939 224.51382446]
[74.22559357 209.96420288]
[76.67131805 195.16493225]
[79.11704254 180.36566162]
[81.56277466 165.56639099]
[84.00849915 150.76712036]
[86.45422363 135.96784973]
[88.89995575 121.16857910]
[91.34568024 106.36930847]
[91.12235260 91.37097168]
[88.23708344 76.65108490]
[85.35180664 61.93119049]
[82.46653748 47.21129990]
[69.63395691 38.38165665]
[66.91756439 23.41249275]
[75.41436768 11.23300076]
[72.52909088 -3.48689055]
[66.86630249 -17.37691689]
[58.63749695 -29.91831779]
[50.40869141 -42.45971680]
[42.17988205 -55.00111771]
[33.95107269 -67.54251862]
[20.47669029 -60.90771866]
[6.28907967 -55.97909164]
[-8.39667606 -52.83136368]
[-23.35794449 -51.51224136]
[-38.36791611 -52.04173279]
[-53.19904327 -54.41180801]
[-67.62649536 -58.58653259]
[-81.43154907 -64.50262451]
[-94.40492249 -72.07039642]
[-106.34994507 -81.17511749]
[-117.08554077 -91.67876434]
[-126.44894409 -103.42211151]
[-134.29823303 -116.22712708]
[-140.51438904 -129.89968872]
[-145.00318909 -144.23252869]
[-147.69657898 -159.00836182]
[-148.55372620 -174.00320435]
[-147.56164551 -188.98970032]
[-144.73538208 -203.74069214]
[-140.11776733 -218.03256226]
[-133.77879333 -231.64862061]
[-125.81459045 -244.38247681]
[-116.34586334 -256.04107666]
[-105.51617432 -266.44766235]
[-93.48968506 -275.44451904]
[-80.44872284 -282.89520264]
[-66.59098053 -288.68682861]
[-52.12654114 -292.73150635]
[-37.27468491 -294.96801758]
[-22.26055336 -295.36239624]
[-7.31176472 -293.90866089]
[7.34506512 -290.62887573]
[21.48774147 -285.57275391]
[34.90186310 -278.81695557]
[47.38407898 -270.46386719]
[58.74515915 -260.64016724]
[68.81287384 -249.49472046]
[77.43460083 -237.19653320]
[84.47962952 -223.93202209]
[89.84117126 -209.90228271]
[93.43793488 -195.32000732]
[95.21539307 -180.40625000]
[95.14661407 -165.38710022]
[93.23263550 -150.49024963]
[89.50246429 -135.94151306]
[84.01264954 -121.96147156]
[76.84642792 -108.76204681]
[68.11242676 -96.54333496]
[57.94305420 -85.49057770]
[46.49247360 -75.77132416]
[54.72128296 -63.22992706]
[62.95008850 -50.68852615]
[71.17889404 -38.14712524]
[79.40770721 -25.60572433]
[77.56870270 -40.49256897]
[79.04280090 -55.41996002]
[83.75806427 -69.65956116]
[91.48443604 -82.51659393]
[101.84491730 -93.36372375]
[114.33400726 -101.67171478]
[128.34233093 -107.03517914]
[143.18640137 -109.19243622]
[158.14192200 -108.03822327]
[172.47920227 -103.62886047]
[185.49868774 -96.17948914]
[196.56510925 -86.05357361]
[205.13854980 -73.74519348]
[210.80065918 -59.85488892]
[213.27517700 -45.06040573]
[212.44137573 -30.08359909]
[208.33993530 -15.65521717]
[201.17097473 -2.47925591]
[191.28427124 8.80140114]
[179.16224670 17.63634682]
[165.39633179 23.59450340]
[150.65820312 26.38515854]
[135.66697693 25.87215233]
[121.15410614 22.08051300]
[107.82770538 15.19524574]
[96.33798981 5.55229473]
[87.24898529 -6.37216330]
[90.13425446 8.34772873]
[102.60029602 16.41825676]
[105.73606110 31.30521774]
[97.18642426 44.32602692]
[100.07170105 59.04591751]
[102.95697021 73.76580811]
[105.84224701 88.48570251]
[109.78790283 74.01393890]
[117.03913116 60.88307571]
[127.18585205 49.83572006]
[139.65420532 41.49665070]
[153.73905945 36.33748627]
[168.64382935 34.65000153]
[183.52560425 36.52963257]
[197.54272461 41.87007904]
[209.90246582 50.36930847]
[219.90580750 61.54664993]
[226.98704529 74.76996613]
[230.74566650 89.29142761]
[230.96911621 104.28976440]
[227.64477539 118.91674805]
[220.96061707 132.34515381]
[211.29469299 143.81553650]
[199.19363403 152.67919922]
[185.34182739 158.43486023]
[170.52265930 160.75698853]
[155.57423401 159.51428223]
[141.34193420 154.77700806]
[128.63069153 146.81307983]
[118.15936279 136.07290649]
[110.52017212 123.16388702]
[106.14495087 108.81504059]
[103.69922638 123.61431122]
[101.25349426 138.41357422]
[98.80776978 153.21284485]
[96.36204529 168.01211548]
[93.91631317 182.81138611]
[91.47058868 197.61065674]
[89.02486420 212.40992737]
[99.38944244 201.56671143]
[113.57621002 196.69479370]
[128.41580200 198.88258362]
[140.59303284 207.64131165]
[147.38745117 221.01426697]
[147.28117371 236.01388550]
[140.29795837 249.28923035]
[127.99785614 257.87454224]
[113.12875366 259.85183716]
[99.01243591 254.77940369]
[88.80253601 243.79042053]
[84.77996063 229.33982849]
[79.95395660 243.54228210]
[75.12796021 257.74475098]
[78.01390076 273.30050659]
[66.59320068 282.86172485]
[61.76720428 297.06417847]
[56.94120789 311.26663208]
[52.11521149 325.46908569]
[47.28921127 339.67153931]
[60.66275406 346.52474976]
[72.89588928 355.25219727]
[83.72786713 365.66784668]
[92.92781067 377.54971313]
[100.29962158 390.64453125]
[105.68615723 404.67318726]
[108.97261810 419.33663940]
[110.08895111 434.32235718]
[109.01135254 449.31091309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 201]
[33 200]
[34 199]
[35 198]
[36 197]
[38 195]
[39 194]
[40 193]
[41 181]
[42 180]
[43 179]
[44 178]
[45 177]
[46 176]
[47 175]
[48 174]
[49 149]
[50 148]
[51 147]
[52 146]
[55 143]
[56 142]
[57 115]
[58 114]
[59 113]
[60 112]
[61 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
