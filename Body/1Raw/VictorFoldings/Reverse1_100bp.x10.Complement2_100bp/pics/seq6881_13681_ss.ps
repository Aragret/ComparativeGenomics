%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[113.15494537 800.25646973]
[98.34600830 802.74505615]
[83.34992218 803.52935791]
[68.36218262 802.59906006]
[53.57819366 799.96630859]
[39.19068527 795.66540527]
[25.38723946 789.75250244]
[12.34780502 782.30462646]
[0.24237958 773.41888428]
[-10.77121735 763.21112061]
[-20.54940033 751.81439209]
[-28.96469307 739.37731934]
[-35.90738297 726.06207275]
[-41.28695679 712.04211426]
[-45.03328323 697.50036621]
[-47.09752274 682.62634277]
[-47.45275497 667.61395264]
[-46.09436035 652.65893555]
[-43.04004288 637.95629883]
[-38.32961655 623.69763184]
[-32.02450180 610.06884766]
[-24.20689201 597.24768066]
[-14.97870827 585.40118408]
[-4.46025753 574.68395996]
[7.21132994 565.23553467]
[19.88389206 557.17926025]
[33.39221191 550.62005615]
[47.56018829 545.64349365]
[62.20310593 542.31439209]
[77.13006592 540.67626953]
[92.14646912 540.75030518]
[93.92893219 525.85662842]
[95.71139526 510.96289062]
[87.94575500 495.22561646]
[99.10487366 480.57791138]
[100.66539764 465.65930176]
[102.22591400 450.74069214]
[103.78643799 435.82208252]
[104.56776428 420.84243774]
[104.56776428 405.84243774]
[96.83045959 393.11517334]
[104.56776428 379.31500244]
[104.56776428 364.31500244]
[104.45609283 349.31542969]
[104.23276520 334.31707764]
[93.39946747 324.15957642]
[92.95932007 308.95230103]
[103.68691254 297.65820312]
[103.46358490 282.65988159]
[103.24025726 267.66152954]
[103.01692963 252.66319275]
[102.79360199 237.66485596]
[102.57027435 222.66651917]
[101.90048981 207.68148804]
[91.25277710 193.73182678]
[99.38599396 177.21116638]
[98.04776001 162.27098083]
[96.70952606 147.33079529]
[95.37129211 132.39060974]
[83.48973846 128.24867249]
[74.04987335 119.92905426]
[68.44776917 108.66213989]
[67.51190186 96.11418915]
[71.38068390 84.14090729]
[79.48196411 74.51301575]
[90.61763763 68.65438843]
[89.72482300 53.68098068]
[88.83200836 38.70757294]
[87.93919373 23.73416901]
[87.04637909 8.76076317]
[83.73048401 3.04093790]
[83.79177856 -2.64177871]
[86.35665131 -6.67048597]
[85.91004181 -21.66383553]
[85.46343994 -36.65718460]
[76.62792206 -46.05380630]
[76.56461334 -58.55099869]
[84.76203918 -67.44643402]
[84.53871155 -82.44477081]
[84.31538391 -97.44310760]
[84.09205627 -112.44144440]
[83.86872864 -127.43978119]
[75.92681885 -141.12322998]
[83.47377014 -153.96429443]
[83.25044250 -168.96263123]
[83.02711487 -183.96096802]
[74.33248138 -193.48808289]
[74.45524597 -205.98483276]
[82.78420258 -214.75723267]
[75.04690552 -228.55741882]
[82.78420258 -241.28468323]
[82.78420258 -256.28469849]
[82.78420258 -271.28469849]
[75.04690552 -285.08486938]
[82.78420258 -297.81213379]
[82.78420258 -312.81213379]
[82.67253876 -327.81170654]
[82.44921112 -342.81005859]
[68.42968750 -348.75756836]
[58.04603577 -359.89755249]
[53.09728622 -374.29998779]
[54.44083786 -389.46951294]
[61.84391403 -402.77795410]
[74.02388763 -411.91952515]
[88.87049866 -415.31039429]
[103.81148529 -412.36306763]
[116.25823975 -403.58819580]
[124.05427551 -390.50607300]
[125.84888458 -375.38327026]
[121.33113861 -360.83990479]
[111.28377533 -349.39566040]
[97.44754791 -343.03338623]
[97.67087555 -328.03503418]
[100.91361237 -321.39376831]
[97.78420258 -312.81213379]
[97.78420258 -297.81213379]
[105.52149963 -285.08486938]
[97.78420258 -271.28469849]
[97.78420258 -256.28469849]
[97.78420258 -241.28468323]
[105.52149963 -228.55741882]
[97.78420258 -214.75723267]
[107.36489868 -200.05427551]
[98.02545166 -184.18429565]
[98.24877930 -169.18595886]
[98.47210693 -154.18762207]
[106.39804077 -141.57695007]
[98.86706543 -127.66310883]
[99.09039307 -112.66477203]
[99.31372070 -97.66643524]
[99.53704834 -82.66809845]
[99.76037598 -67.66976166]
[109.55891418 -53.11106491]
[100.45678711 -37.10379028]
[100.90338898 -22.11044121]
[101.34999847 -7.11709166]
[102.01978302 7.86794710]
[102.91259766 22.84135246]
[103.80541229 37.81475830]
[104.69823456 52.78816605]
[105.59104919 67.76157379]
[121.11790466 75.00779724]
[130.85346985 89.10780334]
[132.12786865 106.19484711]
[124.59163666 121.58303833]
[110.31147766 131.05236816]
[111.64971161 145.99255371]
[112.98794556 160.93273926]
[114.32617950 175.87292480]
[123.70532227 184.72698975]
[124.51236725 197.19825745]
[116.85894012 206.56584167]
[119.42988586 210.06500244]
[120.63265228 213.82238770]
[120.55406952 217.37614441]
[119.42203522 220.34011841]
[117.56861115 222.44319153]
[117.79193878 237.44152832]
[118.01526642 252.43986511]
[118.23859406 267.43820190]
[118.46192169 282.43655396]
[118.68524933 297.43487549]
[129.74435425 308.40457153]
[129.75717163 323.61819458]
[119.23110199 334.09375000]
[119.45442963 349.09210205]
[122.71126556 357.62619019]
[119.56776428 364.31500244]
[119.56776428 379.31500244]
[127.30506134 393.11517334]
[119.56776428 405.84243774]
[119.56776428 420.84243774]
[130.11212158 410.17398071]
[145.03491211 408.65405273]
[157.51364136 416.97756958]
[161.84321594 431.33914185]
[156.04418945 445.17285156]
[142.76782227 452.15411377]
[128.08386230 449.09115601]
[118.70504761 437.38259888]
[117.14452362 452.30120850]
[115.58399963 467.21981812]
[114.02347565 482.13842773]
[121.52438354 492.63125610]
[119.91748810 505.02487183]
[110.60511780 512.74536133]
[108.82264709 527.63909912]
[107.04018402 542.53277588]
[121.64997864 546.00433350]
[135.76879883 551.11871338]
[149.21260071 557.80914307]
[161.80607605 565.98852539]
[173.38507080 575.55010986]
[183.79862976 586.36938477]
[192.91098022 598.30511475]
[200.60333252 611.20184326]
[206.77540588 624.89141846]
[211.34671021 639.19525146]
[214.25765991 653.92700195]
[215.47032166 668.89453125]
[214.96887207 683.90277100]
[212.75984192 698.75598145]
[208.87205505 713.26055908]
[203.35617065 727.22741699]
[196.28410339 740.47442627]
[187.74806213 752.82891846]
[177.85932922 764.12982178]
[166.74682617 774.22985840]
[154.55541992 782.99725342]
[141.44404602 790.31774902]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 188]
[32 187]
[33 186]
[35 183]
[36 182]
[37 181]
[38 180]
[39 172]
[40 171]
[42 169]
[43 168]
[44 166]
[45 165]
[48 162]
[49 161]
[50 160]
[51 159]
[52 158]
[53 157]
[54 152]
[56 149]
[57 148]
[58 147]
[59 146]
[66 141]
[67 140]
[68 139]
[69 138]
[70 137]
[73 136]
[74 135]
[75 134]
[78 132]
[79 131]
[80 130]
[81 129]
[82 128]
[84 126]
[85 125]
[86 124]
[89 122]
[91 120]
[92 119]
[93 118]
[95 116]
[96 115]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
