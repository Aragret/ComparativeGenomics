%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[224.96717834 644.67614746]
[235.83486938 634.22833252]
[248.88745117 626.68554688]
[244.70043945 612.28173828]
[240.29945374 597.94189453]
[235.68544006 583.66918945]
[231.07142639 569.39642334]
[226.45741272 555.12371826]
[221.40884399 549.72613525]
[221.88267517 540.60400391]
[217.48167419 526.26416016]
[213.08068848 511.92431641]
[208.67968750 497.58447266]
[204.27868652 483.24462891]
[193.14772034 473.34759521]
[196.49552917 457.88464355]
[192.09454346 443.54479980]
[177.19464111 445.08337402]
[162.27612305 443.68493652]
[147.91252136 439.40136719]
[134.65643311 432.39553833]
[123.01819611 422.93502808]
[113.44631195 411.38198853]
[106.31008911 398.17926025]
[101.88545227 383.83337402]
[100.34425354 368.89514160]
[101.74757385 353.93850708]
[106.04335785 339.53848267]
[113.06829834 326.24905396]
[122.55404663 314.58184814]
[134.13748169 304.98645020]
[147.37461853 297.83312988]
[142.97361755 283.49328613]
[138.57261658 269.15344238]
[127.57431030 266.11975098]
[119.32075500 258.07025146]
[115.94318390 246.92187500]
[118.39139557 235.41070557]
[126.17034149 226.42045593]
[122.19824219 211.95591736]
[118.22615051 197.49139404]
[114.25405121 183.02687073]
[103.42269897 172.80284119]
[107.22941589 157.44642639]
[102.42688751 151.82881165]
[103.30757141 142.73693848]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.92666626 75.54142761]
[80.74795532 68.01688385]
[82.22426605 60.77518082]
[78.68459320 46.19880295]
[75.14492035 31.62242889]
[71.54066467 27.84665871]
[69.90836334 23.50052261]
[70.13506317 19.43067551]
[71.78813171 16.31624222]
[68.90285492 1.59635031]
[59.65747070 13.40832901]
[44.78498077 15.35998821]
[32.80501938 6.33332872]
[30.58025742 -8.50076771]
[39.38513947 -20.64465904]
[54.17582703 -23.14177132]
[66.47902679 -14.56244278]
[64.91850281 -29.48104858]
[55.78749084 -42.40138626]
[62.15872574 -55.86454391]
[53.02770996 -68.78488159]
[59.39894485 -82.24803925]
[57.83842468 -97.16664886]
[56.27790070 -112.08525085]
[54.71737671 -127.00385284]
[50.71215820 -135.21336365]
[53.24637604 -142.15596008]
[46.27440262 -128.87471008]
[34.28215408 -119.86437988]
[19.58514214 -116.86473846]
[5.02113295 -120.45495605]
[-6.59779119 -129.94181824]
[-13.02819920 -143.49356079]
[-13.02847958 -158.49356079]
[-6.59857798 -172.04554749]
[5.01999187 -181.53285217]
[19.58386612 -185.12361145]
[34.28099060 -182.12451172]
[46.27357483 -173.11463928]
[53.24637604 -159.83242798]
[54.58461380 -174.77261353]
[55.92284775 -189.71279907]
[57.26108170 -204.65298462]
[58.59931564 -219.59315491]
[56.24800110 -228.41978455]
[60.07031250 -234.74525452]
[61.63083649 -249.66386414]
[63.19136047 -264.58245850]
[64.75188446 -279.50106812]
[50.84321594 -285.42056274]
[39.29834747 -295.17800903]
[31.14383888 -307.90573120]
[27.10478592 -322.47204590]
[27.54033470 -337.58169556]
[32.41175842 -351.89117432]
[41.28589630 -364.12805176]
[53.37366104 -373.20422363]
[67.60021973 -378.31271362]
[82.70055389 -378.99920654]
[97.33195496 -375.20269775]
[110.19340515 -367.26074219]
[120.14128113 -355.87957764]
[126.29101562 -342.07116699]
[128.09577942 -327.06335449]
[125.39509583 -312.19064331]
[118.42911530 -298.77548218]
[107.81723785 -288.01074219]
[94.50306702 -280.85363770]
[79.67048645 -277.94055176]
[78.10996246 -263.02194214]
[76.54943848 -248.10334778]
[74.98892212 -233.18473816]
[73.53949738 -218.25492859]
[72.20126343 -203.31474304]
[70.86302948 -188.37455750]
[69.52479553 -173.43437195]
[68.18656158 -158.49418640]
[68.18656158 -143.49418640]
[69.63597870 -128.56437683]
[71.19650269 -113.64577484]
[72.75702667 -98.72717285]
[74.31755066 -83.80856323]
[83.33694458 -71.95530701]
[77.07733154 -57.42506790]
[86.09672546 -45.57180786]
[79.83711243 -31.04157066]
[81.39762878 -16.12296677]
[83.62274933 -1.28892231]
[86.50801849 13.43096924]
[89.72129822 28.08275604]
[93.26097107 42.65913010]
[96.80064392 57.23550797]
[100.44873047 71.78512573]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[117.82963562 138.98063660]
[121.69393921 153.47431946]
[132.80940247 164.73297119]
[128.71858215 179.05477905]
[132.69067383 193.51930237]
[136.66276550 207.98382568]
[140.63485718 222.44834900]
[157.44570923 231.18388367]
[162.44721985 249.12539673]
[152.91247559 264.75244141]
[157.31346130 279.09228516]
[161.71446228 293.43212891]
[176.68544006 291.92819214]
[191.65736389 293.37356567]
[206.05497742 297.71078491]
[219.32548523 304.77142334]
[230.95973206 314.28240967]
[240.51173401 325.87677002]
[247.61584473 339.10769653]
[252.00065613 353.46582031]
[253.49946594 368.39871216]
[252.05648804 383.33227539]
[247.72909546 397.69274902]
[240.68534851 410.92874146]
[231.19766235 422.53244019]
[219.63211060 432.05902100]
[206.43438721 439.14379883]
[210.83538818 453.48364258]
[222.28112793 464.40637207]
[218.61853027 478.84362793]
[223.01953125 493.18347168]
[227.42053223 507.52331543]
[231.82153320 521.86315918]
[236.22251892 536.20300293]
[240.73014832 550.50970459]
[245.34416199 564.78240967]
[249.95817566 579.05517578]
[254.57217407 593.32788086]
[259.21478271 598.03509521]
[260.57849121 603.55212402]
[259.10421753 608.09472656]
[263.29122925 622.49853516]
[278.35333252 621.86871338]
[293.12835693 624.86248779]
[306.75726318 631.30578613]
[318.44772339 640.82397461]
[327.52005005 652.86376953]
[333.44680786 666.72509766]
[335.88342285 681.60217285]
[334.68820190 696.62994385]
[329.93066406 710.93481445]
[321.88742065 723.68505859]
[311.02606201 734.13946533]
[297.97805786 741.69018555]
[283.50198364 745.89819336]
[268.43951416 746.51885986]
[253.66633606 743.51617432]
[240.04132080 737.06457520]
[228.35662842 727.53930664]
[219.29159546 715.49401855]
[213.37324524 701.62908936]
[210.94566345 686.75054932]
[212.14997864 671.72351074]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 189]
[4 188]
[5 185]
[6 184]
[7 183]
[8 182]
[10 181]
[11 180]
[12 179]
[13 178]
[14 177]
[16 175]
[17 174]
[32 159]
[33 158]
[34 157]
[39 154]
[40 153]
[41 152]
[42 151]
[44 149]
[46 148]
[47 147]
[48 146]
[50 144]
[51 143]
[53 142]
[54 141]
[55 140]
[59 139]
[60 138]
[67 137]
[68 136]
[70 134]
[72 132]
[73 131]
[74 130]
[75 129]
[77 128]
[90 127]
[91 126]
[92 125]
[93 124]
[94 123]
[96 122]
[97 121]
[98 120]
[99 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
