%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[44.60729980 537.15014648]
[31.42786407 545.34051514]
[15.95376873 544.18646240]
[4.13511610 534.13165283]
[0.51642090 519.04241943]
[6.48914480 504.72088623]
[19.75665474 496.67398071]
[20.87230301 481.71551514]
[21.98795128 466.75704956]
[23.10359955 451.79861450]
[13.21970558 440.71508789]
[14.13804245 425.52920532]
[25.83046341 415.23721313]
[26.94611359 400.27874756]
[28.06176186 385.32031250]
[18.37005997 376.82910156]
[15.29263687 364.11645508]
[20.17078209 351.77084351]
[31.43198967 344.38168335]
[32.77022552 329.44149780]
[34.10845947 314.50131226]
[35.44669342 299.56112671]
[36.78492737 284.62094116]
[38.12316132 269.68075562]
[39.46139526 254.74057007]
[30.50015259 266.76953125]
[17.46110916 274.18460083]
[2.54157519 275.73623657]
[-11.74424648 271.16290283]
[-22.98894501 261.23532104]
[-29.29759026 247.62646484]
[-29.60706329 232.62966919]
[-23.86521530 218.77212524]
[-13.03964710 208.38911438]
[1.04534340 203.23033142]
[16.01618767 204.16513062]
[29.35003471 211.03596497]
[38.79989624 222.68501282]
[42.77341080 237.15083313]
[46.96041870 222.74703979]
[51.14743042 208.34326172]
[55.33444214 193.93948364]
[42.23126602 201.24063110]
[27.47735786 198.53468323]
[17.81800461 187.05874634]
[17.66933441 172.05949402]
[27.09931564 160.39434814]
[41.79668808 157.39648438]
[55.04201126 164.43646240]
[60.77979279 178.29757690]
[66.44258118 164.40754700]
[72.10536194 150.51751709]
[77.66458893 136.58572388]
[83.11994934 122.61292267]
[88.57530212 108.64012146]
[86.65695953 94.79051971]
[97.45189667 85.90451813]
[102.90725708 71.93172455]
[90.14920044 63.96503067]
[79.07526398 53.79230881]
[70.06162262 41.76107788]
[63.41405869 28.28197098]
[59.35766220 13.81469059]
[58.02916718 -1.14765644]
[59.47236252 -16.09536934]
[63.63663483 -30.51951599]
[70.37875366 -43.92926025]
[79.46779633 -55.86856842]
[90.59305573 -65.93170929]
[103.37464142 -73.77704620]
[117.37650299 -79.13865662]
[132.12124634 -81.83528900]
[147.10644531 -81.77655792]
[161.82176208 -78.96592712]
[167.27711487 -92.93872070]
[172.73248291 -106.91152191]
[178.18783569 -120.88431549]
[178.39379883 -130.01643372]
[183.82983398 -135.02354431]
[189.49261475 -148.91357422]
[195.15541077 -162.80360413]
[200.81819153 -176.69363403]
[194.93278503 -191.11582947]
[200.87351990 -205.12161255]
[214.65914917 -210.64356995]
[212.70422363 -226.34353638]
[224.67376709 -235.20803833]
[229.71069336 -249.33706665]
[234.11167908 -263.67691040]
[238.51268005 -278.01675415]
[242.91368103 -292.35659790]
[247.31468201 -306.69644165]
[233.65153503 -312.93936157]
[220.92019653 -320.91229248]
[209.33847046 -330.47882080]
[199.10456848 -341.47528076]
[190.39358521 -353.71350098]
[183.35458374 -366.98403931]
[178.10801697 -381.05987549]
[174.74365234 -395.70007324]
[173.31906128 -410.65420532]
[173.85862732 -425.66632080]
[176.35311890 -440.47958374]
[180.75982666 -454.84048462]
[187.00337219 -468.50332642]
[194.97691345 -481.23431396]
[204.54400635 -492.81558228]
[215.54095459 -503.04895020]
[227.77958679 -511.75936890]
[241.05047607 -518.79772949]
[255.12654114 -524.04364014]
[269.76690674 -527.40728760]
[284.72109985 -528.83117676]
[299.73318481 -528.29089355]
[314.54632568 -525.79571533]
[328.90704346 -521.38830566]
[342.56958008 -515.14410400]
[355.30017090 -507.16995239]
[366.88098145 -497.60229492]
[377.11386108 -486.60485840]
[385.82366943 -474.36584473]
[392.86138916 -461.09460449]
[398.10662842 -447.01831055]
[401.46960449 -432.37774658]
[402.89276123 -417.42349243]
[402.35177612 -402.41143799]
[399.85586548 -387.59841919]
[395.44778442 -373.23791504]
[389.20294189 -359.57568359]
[381.22817993 -346.84545898]
[371.66000366 -335.26510620]
[360.66207886 -325.03277588]
[348.42260742 -316.32354736]
[335.15106201 -309.28643799]
[321.07449341 -304.04187012]
[306.43377686 -300.67959595]
[291.47946167 -299.25714111]
[276.46743774 -299.79885864]
[261.65451050 -302.29547119]
[257.25354004 -287.95559692]
[252.85252380 -273.61575317]
[248.45153809 -259.27590942]
[244.05053711 -244.93606567]
[257.77517700 -250.98867798]
[271.80908203 -245.69250488]
[278.11300659 -232.08145142]
[273.07574463 -217.95254517]
[259.58288574 -211.39945984]
[245.36376953 -216.17610168]
[238.56379700 -229.54524231]
[240.92376709 -214.83879089]
[228.54917908 -204.98078918]
[234.54457092 -191.39436340]
[228.99955750 -177.22723389]
[214.70822144 -171.03083801]
[209.04542542 -157.14080811]
[203.38264465 -143.25079346]
[197.71986389 -129.36076355]
[192.16062927 -115.42896271]
[186.70527649 -101.45616150]
[181.24992371 -87.48336792]
[175.79455566 -73.51056671]
[188.52146912 -65.60701752]
[199.58226013 -55.49668884]
[208.59924316 -43.52283478]
[215.26417542 -30.09236145]
[219.34872437 -15.66201973]
[220.71241760 -0.72286135]
[219.30731201 14.21646404]
[215.17982483 28.64703178]
[208.46911621 42.07697678]
[199.40240479 54.04826736]
[188.28730774 64.15230560]
[175.50141907 72.04389954]
[161.47937012 77.45303345]
[146.69821167 80.19412994]
[131.66105652 80.17238617]
[116.88005066 77.38707733]
[111.42469788 91.35987854]
[113.34304047 105.20948029]
[102.54810333 114.09548187]
[97.09274292 128.06828308]
[91.63739014 142.04107666]
[91.43143463 151.17318726]
[85.99539185 156.18029785]
[80.33260345 170.07032776]
[74.66981506 183.96035767]
[69.73822784 198.12649536]
[65.55121613 212.53027344]
[61.36420059 226.93405151]
[57.17719269 241.33784485]
[54.40158081 256.07879639]
[53.06334686 271.01898193]
[51.72511292 285.95916748]
[50.38687897 300.89935303]
[49.04864502 315.83953857]
[47.71041107 330.77972412]
[46.37217331 345.71990967]
[57.83292389 358.93621826]
[56.22104263 376.01593018]
[43.02021408 386.43594360]
[41.90456772 401.39440918]
[40.78891754 416.35287476]
[50.82525253 428.26544189]
[49.48073578 443.41955566]
[38.06205368 452.91424561]
[36.94640350 467.87271118]
[35.83075714 482.83114624]
[34.71510696 497.78961182]
[46.64213943 507.71560669]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 209]
[8 208]
[9 207]
[10 206]
[13 203]
[14 202]
[15 201]
[19 198]
[20 197]
[21 196]
[22 195]
[23 194]
[24 193]
[25 192]
[39 191]
[40 190]
[41 189]
[42 188]
[50 187]
[51 186]
[52 185]
[53 183]
[54 182]
[55 181]
[57 179]
[58 178]
[74 162]
[75 161]
[76 160]
[77 159]
[79 158]
[80 157]
[81 156]
[82 155]
[85 152]
[87 150]
[88 143]
[89 142]
[90 141]
[91 140]
[92 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
