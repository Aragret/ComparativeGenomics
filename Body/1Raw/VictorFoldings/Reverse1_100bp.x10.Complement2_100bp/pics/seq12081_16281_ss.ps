%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[88.54109955 815.10485840]
[73.54438782 814.63604736]
[58.59822083 813.31945801]
[43.75047684 811.15948486]
[29.04871559 808.16290283]
[14.54003429 804.33935547]
[0.27090758 799.70111084]
[-13.71295643 794.26306152]
[-27.36676216 788.04254150]
[-40.64677048 781.05950928]
[-53.51044846 773.33636475]
[-65.91658020 764.89782715]
[-77.82543182 755.77087402]
[-89.19885254 745.98486328]
[-100.00040436 735.57104492]
[-110.19549561 724.56280518]
[-119.75146484 712.99542236]
[-128.63771057 700.90588379]
[-136.82574463 688.33300781]
[-144.28935242 675.31707764]
[-151.00462341 661.89965820]
[-156.95005798 648.12384033]
[-162.10659790 634.03375244]
[-166.45771790 619.67443848]
[-169.98950195 605.09204102]
[-172.69061279 590.33312988]
[-174.55242920 575.44500732]
[-175.56895447 560.47546387]
[-175.73693848 545.47235107]
[-175.05586243 530.48376465]
[-173.52789307 515.55773926]
[-171.15792847 500.74206543]
[-167.95355225 486.08419800]
[-163.92504883 471.63110352]
[-159.08529663 457.42904663]
[-153.44981384 443.52355957]
[-147.03666687 429.95916748]
[-139.86637878 416.77932739]
[-131.96191406 404.02627563]
[-123.34860229 391.74081421]
[-114.05404663 379.96237183]
[-104.10800171 368.72860718]
[-93.54233551 358.07553101]
[-82.39089203 348.03726196]
[-70.68939209 338.64599609]
[-58.47531891 329.93176270]
[-45.78780365 321.92251587]
[-32.66748428 314.64389038]
[-19.15638733 308.11920166]
[-5.29779625 302.36935425]
[8.86389637 297.41278076]
[23.28332520 293.26535034]
[37.91430283 289.94033813]
[52.70995712 287.44839478]
[67.62290192 285.79751587]
[82.60535431 284.99298096]
[97.60932922 285.03735352]
[98.50214386 270.06396484]
[99.39495850 255.09056091]
[100.28777313 240.11714172]
[101.18058777 225.14373779]
[102.07341003 210.17033386]
[102.85472870 195.19070435]
[103.52451324 180.20565796]
[104.19429779 165.22062683]
[102.96732330 150.27088928]
[99.86321259 135.59558105]
[96.75910187 120.92028046]
[82.72487640 112.23648834]
[79.18950653 96.11604309]
[88.30160522 82.35604095]
[84.97934723 67.72858429]
[81.65708923 53.10112381]
[78.33482361 38.47366333]
[74.78718567 34.64464951]
[73.21977997 30.27469254]
[73.50704193 26.20867157]
[75.20629883 23.11919403]
[72.54049683 8.35797691]
[69.87470245 -6.40324020]
[65.26998138 -14.29211712]
[67.28081512 -21.40396118]
[64.83509064 -36.20323181]
[62.38936234 -51.00250244]
[59.94363785 -65.80177307]
[44.90209579 -66.38221741]
[30.28537941 -69.97895813]
[16.69203758 -76.44470978]
[4.67870569 -85.51470184]
[-5.26267672 -96.81752777]
[-12.72501659 -109.89033508]
[-17.40273476 -124.19780731]
[-19.10428429 -139.15406799]
[-17.75998497 -154.14665222]
[-13.42488480 -168.56164551]
[-6.27650642 -181.80873108]
[3.39243102 -193.34548950]
[15.18599033 -202.69946289]
[28.62123108 -209.48762512]
[43.14799118 -213.43200684]
[58.17140579 -214.37109375]
[73.07627869 -212.26640320]
[87.25226593 -207.20416260]
[100.11885834 -199.39163208]
[111.14919281 -189.14875793]
[119.89157867 -176.89495850]
[125.98801422 -163.13201904]
[129.18885803 -148.42353821]
[129.36303711 -133.37181091]
[126.50342560 -118.59319305]
[120.72711945 -104.69286346]
[112.27065277 -92.24002838]
[101.48030853 -81.74463654]
[88.79794312 -73.63645172]
[74.74290466 -68.24750519]
[77.18863678 -53.44823074]
[79.63436127 -38.64896011]
[82.08008575 -23.84968948]
[84.63592529 -9.06903553]
[87.30171967 5.69218159]
[89.96751404 20.45339966]
[92.96228790 35.15140152]
[96.28454590 49.77886200]
[99.60680389 64.40632629]
[102.92906189 79.03378296]
[114.38139343 84.46497345]
[120.67839050 95.46503448]
[119.56275177 108.09075928]
[111.43440247 117.81616974]
[114.53851318 132.49147034]
[117.64262390 147.16677856]
[121.87615967 132.77659607]
[130.49899292 120.50276947]
[142.60112000 111.64057922]
[156.90538025 107.12525940]
[171.90220642 107.43334198]
[186.00897217 112.53230286]
[197.73692322 121.88404083]
[205.84840393 134.50164795]
[209.48738098 149.05354309]
[208.26983643 164.00404358]
[202.32423401 177.77539062]
[192.27806091 188.91426086]
[179.19148254 196.24511719]
[164.44557190 198.99435425]
[149.59651184 196.87181091]
[136.21133423 190.10150146]
[125.70262909 179.39790344]
[119.17933655 165.89041138]
[118.50955200 180.87544250]
[117.83976746 195.86048889]
[120.58286285 204.57330322]
[117.04681396 211.06315613]
[116.15399933 226.03656006]
[115.26117706 241.00996399]
[114.36836243 255.98336792]
[113.47554779 270.95678711]
[112.58273315 285.93017578]
[127.48567200 287.66903687]
[142.26635742 290.24826050]
[156.87745667 293.65957642]
[171.27215576 297.89202881]
[185.40435791 302.93209839]
[199.22877502 308.76364136]
[212.70112610 315.36795044]
[225.77825928 322.72387695]
[238.41828918 330.80786133]
[250.58071899 339.59402466]
[262.22659302 349.05419922]
[273.31860352 359.15808105]
[283.82119751 369.87332153]
[293.70077515 381.16558838]
[302.92565918 392.99868774]
[311.46630859 405.33477783]
[319.29537964 418.13424683]
[326.38775635 431.35617065]
[332.72076416 444.95819092]
[338.27407837 458.89669800]
[343.02990723 473.12704468]
[346.97305298 487.60366821]
[350.09088135 502.28021240]
[352.37335205 517.10961914]
[353.81320190 532.04443359]
[354.40582275 547.03674316]
[354.14929199 562.03857422]
[353.04443359 577.00189209]
[351.09478760 591.87872314]
[348.30664062 606.62139893]
[344.68884277 621.18280029]
[340.25305176 635.51611328]
[335.01345825 649.57556152]
[328.98681641 663.31604004]
[322.19247437 676.69360352]
[314.65219116 689.66528320]
[306.39007568 702.18963623]
[297.43264771 714.22644043]
[287.80859375 725.73724365]
[277.54870605 736.68511963]
[266.68588257 747.03503418]
[255.25489807 756.75378418]
[243.29240417 765.81024170]
[230.83668518 774.17541504]
[217.92764282 781.82250977]
[204.60665894 788.72705078]
[190.91638184 794.86688232]
[176.90066528 800.22235107]
[162.60441589 804.77630615]
[148.07342529 808.51409912]
[133.35423279 811.42388916]
[118.49399567 813.49621582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 158]
[58 157]
[59 156]
[60 155]
[61 154]
[62 153]
[63 151]
[64 150]
[65 149]
[66 131]
[67 130]
[68 129]
[71 125]
[72 124]
[73 123]
[74 122]
[78 121]
[79 120]
[80 119]
[82 118]
[83 117]
[84 116]
[85 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
