%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[123.37270355 619.54602051]
[116.81623077 606.03332520]
[111.97004700 591.81738281]
[108.90761566 577.11358643]
[107.67536926 562.14489746]
[108.29197693 547.13824463]
[110.74810028 532.32116699]
[115.00650787 517.91815186]
[121.00263214 504.14767456]
[128.64558411 491.21844482]
[137.81948853 479.32647705]
[148.38528442 468.65203857]
[160.18278503 459.35696411]
[173.03314209 451.58215332]
[186.74156189 445.44546509]
[182.34056091 431.10562134]
[177.93957520 416.76577759]
[173.53857422 402.42593384]
[169.81390381 399.43661499]
[167.92755127 394.07577515]
[169.22688293 387.59323120]
[165.25479126 373.12872314]
[161.28268433 358.66418457]
[157.31059265 344.19967651]
[153.12358093 329.79586792]
[148.72257996 315.45602417]
[144.32157898 301.11618042]
[141.91111755 299.68518066]
[139.92224121 297.21313477]
[138.75433350 293.85586548]
[138.74301147 289.91067505]
[140.11296082 285.79034424]
[136.57328796 271.21395874]
[133.03361511 256.63757324]
[117.34579468 253.59738159]
[104.50759888 243.98518372]
[97.11967468 229.68475342]
[96.70620728 213.53578186]
[103.40069580 198.77001953]
[115.90911102 188.36457825]
[112.15281677 173.84251404]
[108.39651489 159.32046509]
[104.53221130 144.82676697]
[100.56011200 130.36224365]
[96.58801270 115.89772034]
[84.35319519 104.42228699]
[88.77113342 88.24025726]
[84.58412170 73.83647156]
[80.08373260 68.99312592]
[78.88487244 63.43796921]
[80.49374390 58.94123840]
[76.73744965 44.41918182]
[72.98114777 29.89712143]
[62.03453827 18.47423553]
[66.33814240 4.21491385]
[62.58184052 -10.30714512]
[58.82553864 -24.82920456]
[55.06924057 -39.35126495]
[51.31293869 -53.87332153]
[47.44863510 -68.36701965]
[43.47653580 -82.83154297]
[39.50444031 -97.29606628]
[36.66520691 -82.56722260]
[30.54918289 -68.87071991]
[21.47720718 -56.92503738]
[9.92517662 -47.35683060]
[-3.50091314 -40.66802597]
[-18.09675598 -37.20950317]
[-33.09668350 -37.16269302]
[-47.71382904 -40.53004456]
[-61.18140411 -47.13492203]
[-72.79293060 -56.63083649]
[-81.93929291 -68.51966095]
[-88.14067841 -82.17772675]
[-91.07179260 -96.88855743]
[-90.57886505 -111.88045502]
[-86.68775177 -126.36697388]
[-79.60257721 -139.58818054]
[-69.69502258 -150.85052490]
[-57.48479843 -159.56318665]
[-43.61244583 -165.26913452]
[-28.80567551 -167.66903687]
[-13.84122181 -166.63700867]
[0.49591234 -162.22717285]
[13.45362759 -154.67088318]
[24.35218811 -144.36450195]
[32.61987686 -131.84870911]
[37.82338333 -117.77841949]
[39.38390732 -132.69702148]
[40.94443130 -147.61563110]
[31.26722908 -159.82174683]
[33.06233978 -174.92910767]
[44.75865555 -184.07962036]
[46.31917572 -198.99822998]
[47.87969971 -213.91682434]
[49.44022369 -228.83543396]
[35.21533203 -233.81028748]
[22.52147865 -241.93203735]
[12.04323006 -252.76269531]
[4.34566307 -265.71817017]
[-0.15610275 -280.09976196]
[-1.21929193 -295.13195801]
[1.21343184 -310.00402832]
[7.01087475 -323.91397095]
[15.86038780 -336.11163330]
[27.28472900 -345.93917847]
[40.66779709 -352.86669922]
[55.28785706 -356.52050781]
[70.35647583 -356.70364380]
[85.06101227 -353.40618896]
[98.60847473 -346.80593872]
[110.26826477 -337.25891113]
[119.41158295 -325.27990723]
[125.54534149 -311.51495361]
[128.33876038 -296.70639038]
[127.64118958 -281.65283203]
[123.49024200 -267.16604614]
[116.10978699 -254.02735901]
[105.89782715 -242.94526672]
[93.40509796 -234.51744080]
[79.30529785 -229.19836426]
[64.35882568 -227.27491760]
[62.79830551 -212.35630798]
[61.23778152 -197.43769836]
[59.67725754 -182.51910400]
[69.22677612 -171.14622498]
[67.85670471 -155.99440002]
[55.86303711 -146.05509949]
[54.30251312 -131.13650513]
[52.74198914 -116.21789551]
[53.96896362 -101.26815796]
[57.94105911 -86.80363464]
[61.91315842 -72.33911133]
[66.71568298 -66.72150421]
[65.83499908 -57.62962341]
[69.59130096 -43.10756302]
[73.34760284 -28.58550644]
[77.10389709 -14.06344604]
[80.86019897 0.45861301]
[91.53813171 10.84278393]
[87.50320435 26.14082146]
[91.25950623 40.66287994]
[95.01580811 55.18494034]
[98.98789978 69.64945984]
[103.17491150 84.05324554]
[113.02512360 90.26731110]
[116.19271851 101.47479248]
[111.05253601 111.92562103]
[115.02463531 126.39014435]
[118.99673462 140.85467529]
[124.28690338 148.30126953]
[122.91857147 155.56416321]
[126.67487335 170.08621216]
[130.43116760 184.60827637]
[144.38943481 186.82495117]
[156.41213989 194.17198181]
[164.70132446 205.51194763]
[168.03215027 219.11328125]
[165.93382263 232.91459656]
[158.75575256 244.83714294]
[147.60998535 253.09791565]
[151.14965820 267.67428589]
[154.68933105 282.25067139]
[158.66143799 296.71517944]
[163.06243896 311.05502319]
[167.46342468 325.39489746]
[172.03543091 330.17068481]
[173.31686401 335.70739746]
[171.77511597 340.22756958]
[175.74720764 354.69207764]
[179.71931458 369.15661621]
[183.69140625 383.62112427]
[187.87841797 398.02493286]
[192.27941895 412.36477661]
[196.68041992 426.70462036]
[201.08140564 441.04446411]
[215.87222290 438.43453979]
[230.87164307 437.66207886]
[245.85231018 438.73873901]
[260.58712769 441.64825439]
[274.85266113 446.34649658]
[288.43273926 452.76223755]
[301.12139893 460.79821777]
[312.72634888 470.33261108]
[323.07165527 481.22088623]
[332.00045776 493.29800415]
[339.37738037 506.38079834]
[345.09066772 520.27105713]
[349.05361938 534.75805664]
[351.20623779 549.62231445]
[351.51580811 564.63842773]
[349.97772217 579.57879639]
[346.61523438 594.21685791]
[341.47933960 608.33074951]
[334.64791870 621.70654297]
[326.22448730 634.14135742]
[316.33676147 645.44683838]
[305.13467407 655.45141602]
[292.78799438 664.00360107]
[279.48391724 670.97363281]
[265.42413330 676.25585938]
[250.82177734 679.77020264]
[235.89822388 681.46343994]
[220.87969971 681.30987549]
[205.99389648 679.31182861]
[191.46646118 675.49957275]
[177.51763916 669.93090820]
[164.35888672 662.69024658]
[152.18968201 653.88739014]
[141.19451904 643.65582275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 176]
[16 175]
[17 174]
[18 173]
[21 172]
[22 171]
[23 170]
[24 169]
[25 166]
[26 165]
[27 164]
[32 163]
[33 162]
[34 161]
[40 154]
[41 153]
[42 152]
[43 150]
[44 149]
[45 148]
[47 145]
[48 144]
[51 143]
[52 142]
[53 141]
[55 139]
[56 138]
[57 137]
[58 136]
[59 135]
[60 133]
[61 132]
[62 131]
[88 130]
[89 129]
[90 128]
[93 125]
[94 124]
[95 123]
[96 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
