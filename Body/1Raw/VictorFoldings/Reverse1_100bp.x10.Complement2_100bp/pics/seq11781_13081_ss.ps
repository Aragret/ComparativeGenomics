%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[105.52980042 685.81921387]
[91.08808136 681.69409180]
[77.26277161 675.82550049]
[64.26345825 668.30236816]
[52.28720093 659.23876953]
[41.51556015 648.77209473]
[32.11183167 637.06103516]
[24.21857643 624.28308105]
[17.95544815 610.63195801]
[13.41739941 596.31463623]
[10.67322350 581.54815674]
[9.76452255 566.55633545]
[10.70507145 551.56652832]
[13.48061085 536.80590820]
[18.04906654 522.49822998]
[24.34118080 508.86047363]
[32.26156616 496.09930420]
[41.69015121 484.40823364]
[52.48400116 473.96444702]
[64.47948456 464.92630005]
[77.49475861 457.43081665]
[91.33250427 451.59161377]
[105.78295135 447.49719238]
[120.62703705 445.20965576]
[120.18042755 430.21630859]
[119.62221527 415.22671509]
[118.95243073 400.24166870]
[118.28264618 385.25662231]
[117.61286163 370.27157593]
[116.94307709 355.28656006]
[116.27329254 340.30151367]
[112.83425903 333.75973511]
[115.70677185 325.08871460]
[115.26016235 310.09536743]
[114.81356049 295.10202026]
[114.36695099 280.10867310]
[113.25130463 265.15020752]
[111.46883392 250.25650024]
[109.68637085 235.36277771]
[107.90390778 220.46907043]
[106.12143707 205.57534790]
[104.33897400 190.68162537]
[90.68603516 180.86145020]
[88.31311035 163.87074280]
[99.17228699 150.15586853]
[97.16827393 135.29034424]
[87.79996490 123.71087646]
[93.62418365 109.00070953]
[82.59250641 119.16447449]
[67.74549103 117.02764130]
[60.02780151 104.16539764]
[65.12863159 90.05931854]
[79.28784180 85.10787201]
[92.06688690 92.95970154]
[91.17407227 77.98629761]
[90.28125763 63.01289368]
[89.38844299 48.03948593]
[80.20295715 59.89810562]
[65.83409882 64.20343781]
[51.64109421 59.34970474]
[42.91759109 47.14722824]
[42.91723251 32.14722824]
[51.64015579 19.94433403]
[65.83292389 15.08992672]
[80.20198822 19.39457703]
[89.38844299 31.25385475]
[90.28125763 16.28045082]
[91.17407227 1.30704415]
[88.56100464 -7.44565105]
[92.19328308 -13.88213253]
[89.71081543 -22.67276192]
[93.43852997 -29.05445099]
[94.77676392 -43.99463654]
[96.11499786 -58.93482208]
[97.45323181 -73.87500763]
[87.59537506 -85.93569946]
[89.16535950 -101.06810760]
[100.72413635 -110.39174652]
[102.06237030 -125.33193207]
[103.40060425 -140.27210999]
[104.73883820 -155.21229553]
[105.85449219 -170.17076111]
[106.74730682 -185.14416504]
[107.64012146 -200.11756897]
[108.53293610 -215.09097290]
[93.79694366 -218.01745605]
[79.59671783 -222.92330933]
[66.19680023 -229.71711731]
[53.84681702 -238.27233887]
[42.77684784 -248.42956543]
[33.19311523 -259.99960327]
[25.27416039 -272.76690674]
[19.16750717 -286.49362183]
[14.98692036 -300.92401123]
[12.81027985 -315.78927612]
[12.67813683 -330.81246948]
[14.59295273 -345.71371460]
[18.51905441 -360.21542358]
[24.38330269 -374.04742432]
[32.07645035 -386.95205688]
[41.45517731 -398.68887329]
[52.34476471 -409.03927612]
[64.54234314 -417.81042480]
[77.82068634 -424.83889771]
[91.93241882 -429.99377441]
[106.61464691 -433.17901611]
[121.59386444 -434.33529663]
[136.59100342 -433.44107056]
[151.32667542 -430.51296997]
[165.52636719 -425.60559082]
[178.92555237 -418.81033325]
[191.27461243 -410.25378418]
[202.34347534 -400.09533691]
[211.92596436 -388.52426147]
[219.84353638 -375.75610352]
[225.94869995 -362.02874756]
[230.12773132 -347.59790039]
[232.30274963 -332.73239136]
[232.43327332 -317.70919800]
[230.51684570 -302.80813599]
[226.58917236 -288.30685425]
[220.72341919 -274.47549438]
[213.02888489 -261.57171631]
[203.64888000 -249.83589172]
[192.75817871 -239.48666382]
[180.55964661 -230.71685791]
[167.28054810 -223.68981934]
[153.16825867 -218.53646851]
[138.48568726 -215.35281372]
[123.50634003 -214.19815063]
[122.61352539 -199.22474670]
[121.72071075 -184.25134277]
[120.82789612 -169.27793884]
[123.27168274 -165.17465210]
[123.16374969 -159.49263000]
[119.67902374 -153.87406921]
[118.34078979 -138.93388367]
[117.00255585 -123.99369812]
[115.66432190 -109.05351257]
[125.38210297 -97.82407379]
[124.23777771 -82.65354156]
[112.39341736 -72.53677368]
[111.05518341 -57.59658813]
[109.71694946 -42.65640259]
[108.37871552 -27.71621704]
[107.15174103 -12.76648426]
[106.14747620 2.19986010]
[105.25466156 17.17326546]
[104.36184692 32.14667130]
[104.36184692 47.14667130]
[105.25466156 62.12007904]
[106.14747620 77.09348297]
[107.04029846 92.06688690]
[108.48971558 106.99669647]
[118.00136566 119.63944244]
[112.03380585 133.28633118]
[114.03781891 148.15185547]
[125.61773682 155.03080750]
[131.04228210 167.14628601]
[128.53556824 179.98367310]
[119.23268890 188.89916992]
[121.01515961 203.79287720]
[122.79762268 218.68659973]
[124.58008575 233.58032227]
[126.36255646 248.47402954]
[128.14501953 263.36773682]
[138.24333191 252.27612305]
[153.21978760 251.43603516]
[164.49519348 261.32873535]
[165.61048889 276.28720093]
[155.92677307 287.74258423]
[140.99131775 289.13269043]
[129.36030579 279.66207886]
[129.80690002 294.65542603]
[130.25350952 309.64877319]
[130.70011902 324.64212036]
[131.25833130 339.63171387]
[131.92811584 354.61676025]
[132.59790039 369.60180664]
[133.26768494 384.58685303]
[133.93746948 399.57186890]
[134.60725403 414.55691528]
[138.11672974 422.99026489]
[135.17378235 429.76971436]
[135.62039185 444.76306152]
[150.57431030 446.16299438]
[165.24284363 449.39004517]
[179.40361023 454.39526367]
[192.84193420 461.10278320]
[205.35411072 469.41091919]
[216.75045776 479.19372559]
[226.85818481 490.30285645]
[235.52409363 502.56997681]
[242.61679077 515.80908203]
[248.02874756 529.81939697]
[251.67793274 544.38867188]
[253.50901794 559.29595947]
[253.49426270 574.31524658]
[251.63386536 589.21887207]
[247.95605469 603.78094482]
[242.51655579 617.78063965]
[235.39784241 631.00573730]
[226.70785522 643.25579834]
[216.57829285 654.34503174]
[205.16275024 664.10540771]
[192.63426208 672.38891602]
[179.18276978 679.07000732]
[165.01219177 684.04742432]
[150.33734131 687.24560547]
[135.38069153 688.61614990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 185]
[25 184]
[26 182]
[27 181]
[28 180]
[29 179]
[30 178]
[31 177]
[33 176]
[34 175]
[35 174]
[36 173]
[37 166]
[38 165]
[39 164]
[40 163]
[41 162]
[42 161]
[45 157]
[46 156]
[48 154]
[54 153]
[55 152]
[56 151]
[57 150]
[66 149]
[67 148]
[68 147]
[70 146]
[72 145]
[73 144]
[74 143]
[75 142]
[78 139]
[79 138]
[80 137]
[81 136]
[82 133]
[83 132]
[84 131]
[85 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
