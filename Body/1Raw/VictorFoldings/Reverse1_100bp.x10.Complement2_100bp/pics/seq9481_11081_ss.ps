%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[123.49348450 557.10162354]
[119.50192261 542.58398438]
[118.61636353 527.55371094]
[120.87552643 512.66784668]
[126.18063354 498.57705688]
[134.29977417 485.89743042]
[144.87803650 475.18322754]
[157.45294189 466.90280151]
[171.47480774 461.41818237]
[169.02908325 446.61892700]
[166.58335876 431.81964111]
[164.13761902 417.02038574]
[161.69189453 402.22109985]
[159.24617004 387.42184448]
[156.80044556 372.62255859]
[153.91517639 357.90267944]
[150.59291077 343.27520752]
[147.27064514 328.64773560]
[134.67143250 316.43191528]
[140.26397705 298.88754272]
[129.74182129 288.34555054]
[134.00407410 273.10928345]
[130.46440125 258.53289795]
[126.92472839 243.95652771]
[123.38505554 229.38014221]
[119.84538269 214.80377197]
[106.02260590 209.32028198]
[97.98417664 196.59834290]
[98.99000549 181.40486145]
[108.86348724 169.58029175]
[105.32381439 155.00390625]
[101.78414154 140.42753601]
[98.24446869 125.85116577]
[94.70479584 111.27478790]
[91.21742249 125.86376190]
[83.81117249 138.90782166]
[73.07012177 149.37825012]
[59.84135818 156.44929504]
[45.16815567 159.56333923]
[30.20771027 158.47476196]
[16.13985825 153.26942444]
[4.07405138 144.35783386]
[-5.03814983 132.44281006]
[-10.47811985 118.46401215]
[-11.81683922 103.52387238]
[-8.94873142 88.80062866]
[-2.09998727 75.45541382]
[8.18927193 64.54069519]
[21.10759354 56.91724396]
[35.63618469 53.18628311]
[50.62925720 53.64205170]
[64.90440369 58.24860764]
[77.33581543 66.64265442]
[86.94309998 78.16220093]
[92.96952820 91.90211487]
[93.86234283 76.92871094]
[94.75516510 61.95530319]
[92.97269440 47.06158447]
[88.57170105 32.72173691]
[84.17070007 18.38189125]
[70.40245819 6.15417337]
[74.99599457 -10.78295612]
[70.38198853 -25.05568886]
[66.50688934 -28.55292892]
[64.55585480 -32.76562119]
[64.47922516 -36.84105682]
[65.89607239 -40.06981659]
[61.92397690 -54.53433990]
[57.95188141 -68.99886322]
[53.97978592 -83.46338654]
[50.84256744 -68.79512787]
[43.57364273 -55.67404556]
[32.80184937 -45.23524857]
[19.45905304 -38.38179779]
[4.69953918 -35.70658493]
[-10.19984531 -37.44104004]
[-23.95015526 -43.43511963]
[-35.36185074 -53.17026901]
[-43.44770813 -65.80430603]
[-47.50822067 -80.24426270]
[-47.19210815 -95.24092865]
[-42.52672195 -109.49694824]
[-33.91566086 -121.77903748]
[-22.10387230 -131.02467346]
[-8.11319256 -136.43399048]
[6.84604597 -137.53906250]
[21.47971916 -134.24427795]
[34.52186584 -126.83467102]
[44.84421158 -115.95123291]
[51.55267715 -102.53884888]
[51.77600479 -117.53718567]
[51.99933243 -132.53552246]
[52.22266006 -147.53385925]
[52.44598770 -162.53219604]
[52.66931915 -177.53053284]
[52.89264679 -192.52886963]
[38.51132965 -197.18388367]
[26.14198303 -205.87242126]
[16.88447952 -217.82189941]
[11.56198978 -231.96978760]
[10.64778519 -247.05804443]
[14.22315693 -261.74505615]
[21.97018623 -274.72485352]
[33.20000839 -284.84326172]
[46.91408157 -291.20059204]
[61.89295578 -293.23153687]
[76.80471802 -290.75552368]
[90.32343292 -283.99267578]
[101.24701691 -273.54440308]
[108.60414886 -260.33969116]
[111.74065399 -245.55274963]
[110.37761688 -230.49839783]
[104.63625336 -216.51525879]
[95.02706909 -204.84671021]
[82.40451813 -196.53030396]
[67.89098358 -192.30554199]
[67.66765594 -177.30720520]
[67.44432831 -162.30886841]
[67.22100067 -147.31053162]
[66.99767303 -132.31219482]
[66.77434540 -117.31385803]
[66.55101776 -102.31552124]
[68.44430542 -87.43548584]
[72.41640472 -72.97096252]
[76.38850403 -58.50643539]
[80.36059570 -44.04191208]
[84.65472412 -29.66969872]
[89.26873016 -15.39696503]
[99.89225769 -9.61188030]
[103.85307312 2.24120784]
[98.51054382 13.98089314]
[102.91154480 28.32073975]
[107.31254578 42.66058731]
[109.73121643 27.85687065]
[115.57703400 14.04287720]
[124.51938629 1.99985433]
[136.05253601 -7.59110737]
[149.52421570 -14.18759155]
[164.17256165 -17.41653633]
[179.16912842 -17.09532738]
[193.66577148 -13.24213123]
[206.84265137 -6.07486534]
[217.95455933 4.00112677]
[226.37304688 16.41599846]
[231.62202454 30.46763039]
[233.40460205 45.36133194]
[231.62001038 60.25479507]
[226.36915588 74.30571747]
[217.94898987 86.71945953]
[206.83573914 96.79395294]
[193.65788269 103.95944977]
[179.16072083 107.81069183]
[164.16410828 108.12988281]
[149.51620483 104.89896393]
[136.04541016 98.30066681]
[124.51354980 88.70816040]
[115.57282257 76.66393280]
[109.72856903 62.84811783]
[108.83575439 77.82152557]
[107.94293213 92.79492950]
[109.28117371 107.73511505]
[112.82083893 122.31149292]
[116.36051178 136.88786316]
[119.90018463 151.46424866]
[123.43985748 166.04061890]
[137.63679504 172.02001953]
[145.49874878 185.06007385]
[144.19020081 200.05180359]
[134.42176819 211.26409912]
[137.96144104 225.84046936]
[141.50109863 240.41685486]
[145.04077148 254.99322510]
[148.58044434 269.56961060]
[159.35577393 281.15420532]
[154.84034729 295.34786987]
[165.42915344 302.71264648]
[168.07727051 314.92623901]
[161.89811707 325.32550049]
[165.22036743 339.95294189]
[168.54263306 354.58041382]
[171.60420227 357.65948486]
[173.35104370 361.19686890]
[173.80049133 364.72296143]
[173.12065125 367.82208252]
[171.59971619 370.17681885]
[174.04544067 384.97610474]
[176.49116516 399.77536011]
[178.93688965 414.57464600]
[181.38262939 429.37390137]
[183.82835388 444.17318726]
[186.27407837 458.97244263]
[201.31498718 459.65417480]
[215.88537598 463.44854736]
[229.34831238 470.18969727]
[241.11521912 479.58297729]
[250.67172241 491.21771240]
[257.60006714 504.58526611]
[261.59732056 519.10131836]
[262.48880005 534.13122559]
[260.23550415 549.01800537]
[254.93592834 563.11090088]
[246.82176208 575.79370117]
[236.24772644 586.51208496]
[223.67607117 594.79742432]
[209.65637207 600.28759766]
[194.80149841 602.74249268]
[179.76086426 602.05487061]
[165.19195557 598.25476074]
[151.73168945 591.50830078]
[139.96847534 582.11041260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 191]
[10 190]
[11 189]
[12 188]
[13 187]
[14 186]
[15 185]
[16 180]
[17 179]
[18 178]
[20 175]
[22 173]
[23 172]
[24 171]
[25 170]
[26 169]
[30 165]
[31 164]
[32 163]
[33 162]
[34 161]
[55 160]
[56 159]
[57 158]
[58 133]
[59 132]
[60 131]
[62 128]
[63 127]
[67 126]
[68 125]
[69 124]
[70 123]
[90 122]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
