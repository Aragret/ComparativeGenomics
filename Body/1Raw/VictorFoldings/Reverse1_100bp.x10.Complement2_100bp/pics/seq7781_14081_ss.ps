%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[78.33016968 718.31011963]
[63.32201004 718.08038330]
[48.39289093 716.52508545]
[33.65964890 713.65643311]
[19.23759842 709.49682617]
[5.23961067 704.07891846]
[-8.22475719 697.44500732]
[-21.05012703 689.64709473]
[-33.13611984 680.74621582]
[-44.38814545 670.81195068]
[-54.71813965 659.92205811]
[-64.04525757 648.16186523]
[-72.29649353 635.62335205]
[-79.40727997 622.40460205]
[-85.32195282 608.60919189]
[-89.99422455 594.34497070]
[-93.38753510 579.72363281]
[-95.47531891 564.85961914]
[-96.24123383 549.86926270]
[-95.67929077 534.86987305]
[-93.79389191 519.97888184]
[-90.59978485 505.31274414]
[-86.12196350 490.98629761]
[-80.39549255 477.11166382]
[-73.46517181 463.79745483]
[-65.38525391 451.14785767]
[-56.21896362 439.26187134]
[-46.03805161 428.23251343]
[-34.92219543 418.14611816]
[-22.95839691 409.08160400]
[-10.24028397 401.10995483]
[3.13260174 394.29354858]
[17.05559731 388.68569946]
[31.41973305 384.33035278]
[46.11259079 381.26153564]
[61.01917648 379.50329590]
[76.02281952 379.06942749]
[76.91563416 364.09600830]
[77.80844879 349.12261963]
[78.70127106 334.14920044]
[79.59408569 319.17581177]
[80.48690033 304.20239258]
[81.37971497 289.22897339]
[82.27252960 274.25558472]
[83.16534424 259.28216553]
[83.83513641 244.29713440]
[84.28173828 229.30378723]
[84.72834778 214.31044006]
[85.17494965 199.31707764]
[83.03620148 196.51385498]
[82.14895630 192.53543091]
[83.05078125 187.98132324]
[85.99117279 183.66841125]
[87.10681915 168.70994568]
[88.22246552 153.75149536]
[89.33811188 138.79304504]
[90.45376587 123.83459473]
[91.56941223 108.87613678]
[83.59766388 121.58248138]
[72.13002014 131.25166321]
[58.25950623 136.96209717]
[43.30817795 138.16947937]
[28.70109749 134.75872803]
[15.83051586 127.05496216]
[5.92317629 115.79242706]
[-0.07661566 102.04460907]
[-1.59699905 87.12186432]
[1.50693965 72.44652557]
[8.93935299 59.41735458]
[19.99183083 49.27621078]
[33.61091995 42.98968887]
[48.49853516 41.15697098]
[63.23568726 43.95274353]
[76.41772461 51.11053085]
[86.78821564 61.94810104]
[93.35871124 75.43247986]
[95.50294495 90.27957153]
[100.53986359 76.15053558]
[105.57678223 62.02150726]
[110.61369324 47.89247894]
[115.65061188 33.76345062]
[120.68753052 19.63442039]
[125.72444153 5.50539064]
[130.76136780 -8.62363911]
[135.79827881 -22.75266838]
[134.98469543 -29.31388855]
[137.26454163 -34.51958847]
[141.20123291 -37.22357941]
[146.65658569 -51.19637680]
[152.11193848 -65.16917419]
[157.56729126 -79.14197540]
[163.02265930 -93.11476898]
[160.83419800 -108.78388977]
[172.67044067 -117.82561493]
[178.12579346 -131.79841614]
[164.98417664 -139.07723999]
[152.93002319 -148.04278564]
[142.17846680 -158.53503418]
[132.92137146 -170.36674500]
[125.32393646 -183.32678223]
[119.52175140 -197.18385315]
[115.61837006 -211.69064331]
[113.68344879 -226.58827209]
[113.75151062 -241.61088562]
[115.82135010 -256.49038696]
[119.85602570 -270.96121216]
[125.78353882 -284.76510620]
[133.49809265 -297.65576172]
[142.86203003 -309.40310669]
[153.70822144 -319.79751587]
[165.84312439 -328.65347290]
[179.05015564 -335.81289673]
[193.09362793 -341.14810181]
[207.72293091 -344.56378174]
[222.67697144 -345.99905396]
[237.68888855 -345.42825317]
[252.49078369 -342.86163330]
[266.81848145 -338.34490967]
[280.41629028 -331.95874023]
[293.04153442 -323.81710815]
[304.46893311 -314.06527710]
[314.49450684 -302.87728882]
[322.93939209 -290.45281982]
[329.65280151 -277.01358032]
[334.51501465 -262.79940796]
[337.43920898 -248.06398010]
[338.37319946 -233.07028198]
[337.30035400 -218.08587646]
[334.23974609 -203.37818909]
[329.24609375 -189.20967102]
[322.40841675 -175.83320618]
[313.84881592 -163.48750305]
[303.72000122 -152.39288330]
[292.20275879 -142.74732971]
[279.50262451 -134.72300720]
[265.84622192 -128.46308899]
[251.47731018 -124.07931519]
[236.65228271 -121.64990997]
[221.63572693 -121.21822357]
[206.69561768 -122.79196930]
[192.09858704 -126.34305573]
[186.64323425 -112.37025452]
[189.22189331 -97.70056915]
[176.99545288 -87.65941620]
[171.54010010 -73.68661499]
[166.08473206 -59.71381760]
[160.62937927 -45.74102020]
[155.17402649 -31.76822281]
[149.92730713 -17.71575165]
[144.89039612 -3.58672261]
[139.85346985 10.54230690]
[134.81655884 24.67133713]
[129.77964783 38.80036545]
[124.74272156 52.92939377]
[119.70581055 67.05842590]
[114.66889191 81.18745422]
[109.63197327 95.31648254]
[106.52786255 109.99178314]
[105.41221619 124.95024109]
[104.29656982 139.90869141]
[103.18092346 154.86714172]
[102.06526947 169.82560730]
[100.94962311 184.78405762]
[100.16829681 199.76368713]
[99.72169495 214.75703430]
[99.27508545 229.75039673]
[98.82848358 244.74374390]
[101.62085724 250.73658752]
[101.05281830 256.39117432]
[98.13875580 260.17498779]
[97.24594116 275.14840698]
[96.35311890 290.12179565]
[95.46030426 305.09521484]
[94.56748962 320.06860352]
[93.67467499 335.04202271]
[92.78186035 350.01541138]
[91.88904572 364.98883057]
[90.99622345 379.96224976]
[105.84200287 382.17596436]
[120.43403625 385.69308472]
[134.65811157 390.48611450]
[148.40292358 396.51751709]
[161.56088257 403.74011230]
[174.02900696 412.09735107]
[185.70973206 421.52383423]
[196.51161194 431.94577026]
[206.35012817 443.28158569]
[215.14828491 455.44262695]
[222.83718872 468.33361816]
[229.35668945 481.85375977]
[234.65576172 495.89715576]
[238.69293213 510.35394287]
[241.43659973 525.11096191]
[242.86528015 540.05273438]
[242.96780396 555.06231689]
[241.74337769 570.02221680]
[239.20156860 584.81536865]
[235.36227417 599.32592773]
[230.25553894 613.44042969]
[223.92134094 627.04833984]
[216.40924072 640.04321289]
[207.77804565 652.32330322]
[198.09530640 663.79248047]
[187.43679810 674.36102295]
[175.88594055 683.94616699]
[163.53314209 692.47296143]
[150.47508240 699.87463379]
[136.81394958 706.09320068]
[122.65667725 711.08013916]
[108.11405945 714.79626465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 178]
[38 177]
[39 176]
[40 175]
[41 174]
[42 173]
[43 172]
[44 171]
[45 170]
[46 167]
[47 166]
[48 165]
[49 164]
[53 163]
[54 162]
[55 161]
[56 160]
[57 159]
[58 158]
[77 157]
[78 156]
[79 155]
[80 154]
[81 153]
[82 152]
[83 151]
[84 150]
[85 149]
[88 148]
[89 147]
[90 146]
[91 145]
[92 144]
[94 142]
[95 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
