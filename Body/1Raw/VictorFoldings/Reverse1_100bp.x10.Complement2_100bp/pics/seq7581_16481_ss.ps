%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[19.07476997 676.21893311]
[9.34254742 687.72460938]
[-2.78109169 696.67529297]
[-16.64233398 702.58819580]
[-31.49366188 705.14453125]
[-46.53416061 704.20635986]
[-60.95271683 699.82434082]
[-73.97175598 692.23480225]
[-84.88917542 681.84698486]
[-93.11621094 669.22113037]
[-98.20919037 655.03808594]
[-99.89346313 640.06280518]
[-98.07818604 625.10278320]
[-92.86126709 610.96490479]
[-84.52403259 598.41149902]
[-73.51611328 588.11962891]
[-60.43115234 580.64434814]
[-45.97479630 576.38867188]
[-30.92666245 575.58221436]
[-28.26086617 560.82098389]
[-25.59506989 546.05975342]
[-22.92927551 531.29858398]
[-20.26347923 516.53735352]
[-17.59768486 501.77612305]
[-27.56144142 495.49859619]
[-34.84624100 486.20172119]
[-38.58043289 474.96005249]
[-38.30447769 463.08303833]
[-34.02736664 451.96234131]
[-26.22830391 442.90893555]
[-15.80312347 436.99850464]
[-3.96142840 434.94363403]
[-0.63916880 420.31619263]
[2.68309069 405.68872070]
[6.00535011 391.06127930]
[9.32761002 376.43380737]
[12.64986897 361.80633545]
[11.09026051 358.64407349]
[10.98484135 354.56927490]
[12.74581909 350.27368164]
[16.46089363 346.60690308]
[20.43298912 332.14236450]
[24.40508652 317.67782593]
[28.37718201 303.21331787]
[17.92010689 295.50662231]
[10.68658829 284.67837524]
[7.55565119 272.00540161]
[8.92102718 258.99087524]
[14.64178658 247.18612671]
[24.05654335 238.00572205]
[36.05985641 232.55786133]
[49.23199081 231.51075745]
[53.63298798 217.17091370]
[58.03398514 202.83106995]
[62.43498230 188.49122620]
[66.83598328 174.15138245]
[71.23697662 159.81152344]
[75.63797760 145.47167969]
[74.44526672 142.93482971]
[74.18556976 139.77268982]
[75.10208130 136.33824158]
[77.30585480 133.06594849]
[80.75135040 130.42350769]
[85.99806976 116.37103271]
[91.24478912 102.31856537]
[90.15732574 98.61859131]
[90.70603180 94.45724487]
[93.06039429 90.57601166]
[97.05230713 87.76451874]
[102.92127228 73.96034241]
[103.39903259 64.83841705]
[108.98174286 59.99536896]
[115.05557251 46.28010178]
[113.56896210 30.52889442]
[125.79712677 22.02470398]
[131.87095642 8.30943775]
[137.94479370 -5.40582895]
[144.01863098 -19.12109566]
[150.09246826 -32.83636093]
[156.16630554 -46.55162811]
[150.71290588 -61.14266205]
[157.06800842 -74.96537018]
[171.01193237 -80.07443237]
[177.08576965 -93.78969574]
[183.15960693 -107.50495911]
[181.67298889 -123.25617218]
[193.90115356 -131.76036072]
[199.97499084 -145.47563171]
[206.04882812 -159.19088745]
[212.12266541 -172.90615845]
[206.66926575 -187.49719238]
[213.02436829 -201.31990051]
[226.96830750 -206.42895508]
[233.04212952 -220.14422607]
[220.14248657 -227.83555603]
[208.26400757 -237.02571106]
[197.57991028 -247.58068848]
[188.24601746 -259.34655762]
[180.39843750 -272.15173340]
[174.15159607 -285.80950928]
[169.59660339 -300.12066650]
[166.79989624 -314.87652588]
[165.80224609 -329.86193848]
[166.61819458 -344.85830688]
[169.23585510 -359.64700317]
[173.61705017 -374.01232910]
[179.69789124 -387.74481201]
[187.38969421 -400.64416504]
[196.58030701 -412.52230835]
[207.13568115 -423.20599365]
[218.90190125 -432.53945923]
[231.70736694 -440.38656616]
[245.36537170 -446.63287354]
[259.67669678 -451.18734741]
[274.43267822 -453.98348999]
[289.41812134 -454.98059082]
[304.41445923 -454.16406250]
[319.20306396 -451.54586792]
[333.56820679 -447.16412354]
[347.30044556 -441.08279419]
[360.19952393 -433.39050293]
[372.07733154 -424.19943237]
[382.76062012 -413.64367676]
[392.09362793 -401.87710571]
[399.94027710 -389.07131958]
[406.18609619 -375.41308594]
[410.73999023 -361.10159302]
[413.53561401 -346.34552002]
[414.53213501 -331.36004639]
[413.71505737 -316.36370850]
[411.09631348 -301.57522583]
[406.71405029 -287.21023560]
[400.63217163 -273.47821045]
[392.93939209 -260.57943726]
[383.74789429 -248.70198059]
[373.19174194 -238.01907349]
[361.42480469 -228.68649292]
[348.61874390 -220.84034729]
[334.96029663 -214.59504700]
[320.64862061 -210.04167175]
[305.89242554 -207.24661255]
[290.90692139 -206.25062561]
[275.91061401 -207.06826782]
[261.12222290 -209.68759155]
[246.75740051 -214.07038879]
[240.68356323 -200.35513306]
[246.27177429 -186.59622192]
[240.30741882 -172.60046387]
[225.83792114 -166.83232117]
[219.76409912 -153.11706543]
[213.69026184 -139.40179443]
[207.61642456 -125.68652344]
[209.53747559 -110.91632843]
[196.87487793 -101.43112946]
[190.80104065 -87.71585846]
[184.72720337 -74.00059509]
[190.31541443 -60.24168777]
[184.35105896 -46.24593353]
[169.88156128 -40.47779465]
[163.80772400 -26.76252937]
[157.73390198 -13.04726219]
[151.66006470 0.66800487]
[145.58622742 14.38327122]
[139.51239014 28.09853745]
[141.43344116 42.86874008]
[128.77084351 52.35393524]
[122.69700623 66.06920624]
[116.72544861 79.82930756]
[110.85648346 93.63348389]
[105.29725647 107.56528473]
[100.05053711 121.61775208]
[94.80382538 135.67022705]
[89.97782135 149.87268066]
[85.57682800 164.21252441]
[81.17582703 178.55236816]
[76.77483368 192.89222717]
[72.37383270 207.23207092]
[67.97283173 221.57191467]
[63.57183838 235.91175842]
[76.39321136 247.33551025]
[82.91027069 263.16333008]
[81.85661316 280.19238281]
[73.49251556 294.99966431]
[59.54288101 304.62988281]
[42.84170532 307.18542480]
[38.86960983 321.64993286]
[34.89751434 336.11447144]
[30.92541695 350.57897949]
[27.27733040 365.12860107]
[23.95507050 379.75607300]
[20.63281059 394.38351440]
[17.31055069 409.01098633]
[13.98829174 423.63845825]
[10.66603184 438.26589966]
[24.63162994 450.34020996]
[30.50751495 467.75186157]
[26.74882317 485.65274048]
[14.48072910 499.10476685]
[-2.83646679 504.44192505]
[-5.50226259 519.20312500]
[-8.16805744 533.96435547]
[-10.83385372 548.72558594]
[-13.49964905 563.48681641]
[-16.16544342 578.24798584]
[-2.34996486 584.26708984]
[9.70466042 593.31048584]
[19.34834099 604.89044189]
[26.06100464 618.38256836]
[29.48064613 633.05914307]
[29.42284775 648.12878418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 204]
[20 203]
[21 202]
[22 201]
[23 200]
[24 199]
[32 194]
[33 193]
[34 192]
[35 191]
[36 190]
[37 189]
[41 188]
[42 187]
[43 186]
[44 185]
[52 179]
[53 178]
[54 177]
[55 176]
[56 175]
[57 174]
[58 173]
[63 172]
[64 171]
[65 170]
[69 169]
[70 168]
[72 167]
[73 166]
[75 164]
[76 163]
[77 162]
[78 161]
[79 160]
[80 159]
[83 156]
[84 155]
[85 154]
[87 152]
[88 151]
[89 150]
[90 149]
[93 146]
[94 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
