%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAAUUCCUCUAAACAUCCCUCUAAUCAUAUCUCUCCAUCUCAAAAAAAGCACUAUCACCAAGUGACCUAUUCACCGCAACCGAACGGUACUAACACUCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[192.38629150 479.12484741]
[201.42327881 467.09790039]
[212.51649475 456.93643188]
[225.28811646 448.98657227]
[219.83276367 435.01379395]
[214.37741089 421.04098511]
[208.92204285 407.06817627]
[203.46669006 393.09539795]
[198.01133728 379.12258911]
[192.55596924 365.14981079]
[187.10061646 351.17700195]
[181.64526367 337.20419312]
[165.96817017 331.11587524]
[159.41604614 315.26077271]
[166.49473572 299.26354980]
[160.83195496 285.37350464]
[155.16915894 271.48348999]
[149.73312378 266.47637939]
[149.52717590 257.34426880]
[144.07180786 243.37145996]
[138.61645508 229.39866638]
[124.91456604 223.67207336]
[119.18301392 209.57937622]
[125.28249359 195.24641418]
[119.82713318 181.27360535]
[114.37178040 167.30081177]
[111.86154938 166.05305481]
[109.69432831 163.73577881]
[108.27994537 160.47465515]
[107.97522736 156.54125977]
[109.03492737 152.33042908]
[104.42092133 138.05770874]
[99.80690765 123.78496552]
[95.19290161 109.51223755]
[89.32393646 95.70806122]
[82.24683380 82.48252869]
[68.91382599 73.96540833]
[69.73099518 59.09323502]
[62.65389252 45.86770630]
[55.57678986 32.64217758]
[48.49968338 19.41665268]
[32.33641052 22.49093819]
[16.03205872 20.42749786]
[1.17800629 13.43933487]
[-10.77951241 2.21955442]
[-18.68020630 -12.12735653]
[-21.76231384 -28.19425392]
[-19.73603630 -44.40934753]
[-12.81074905 -59.18996429]
[-1.67342257 -71.09702301]
[-9.14116383 -84.10597229]
[-16.60890579 -97.11492920]
[-23.59529305 -102.99949646]
[-24.08933640 -110.37362671]
[-31.36256599 -123.49231720]
[-38.63579559 -136.61100769]
[-45.90902328 -149.72970581]
[-59.19776154 -151.92608643]
[-68.65711212 -161.23904419]
[-70.99090576 -174.10899353]
[-65.56755829 -185.79730225]
[-72.64466858 -199.02284241]
[-79.72177124 -212.24836731]
[-86.79887390 -225.47389221]
[-93.87598419 -238.69941711]
[-100.95308685 -251.92494202]
[-108.03018951 -265.15048218]
[-122.13471222 -259.97274780]
[-136.82257080 -256.80847168]
[-151.80789185 -255.71922302]
[-166.79896545 -256.72619629]
[-181.50398254 -259.80981445]
[-195.63670349 -264.91003418]
[-208.92204285 -271.92758179]
[-221.10139465 -280.72583008]
[-231.93766785 -291.13357544]
[-241.21995544 -302.94821167]
[-248.76757812 -315.93972778]
[-254.43357849 -329.85528564]
[-258.10772705 -344.42398071]
[-259.71844482 -359.36224365]
[-259.23440552 -374.37927246]
[-256.66503906 -389.18283081]
[-252.06034851 -403.48468018]
[-245.50996399 -417.00643921]
[-237.14140320 -429.48495483]
[-227.11753845 -440.67730713]
[-215.63351440 -450.36560059]
[-202.91287231 -458.36129761]
[-189.20318604 -464.50872803]
[-174.77136230 -468.68823242]
[-159.89828491 -470.81848145]
[-144.87348938 -470.85797119]
[-129.98942566 -468.80596924]
[-115.53581238 -464.70239258]
[-101.79400635 -458.62713623]
[-89.03148651 -450.69845581]
[-77.49668121 -441.07064819]
[-67.41411591 -429.93118286]
[-58.98005676 -417.49682617]
[-52.35866928 -404.00967407]
[-47.67884827 -389.73223877]
[-45.03167725 -374.94241333]
[-44.46869278 -359.92813110]
[-46.00085068 -344.98159790]
[-49.59832764 -330.39376831]
[-55.19109726 -316.44863892]
[-62.67029190 -303.41760254]
[-71.89033508 -291.55435181]
[-82.67174530 -281.08975220]
[-94.80466461 -272.22756958]
[-87.72756195 -259.00204468]
[-80.65045166 -245.77651978]
[-73.57334900 -232.55099487]
[-66.49624634 -219.32546997]
[-59.41913605 -206.09994507]
[-52.34203339 -192.87442017]
[-36.05253983 -188.69215393]
[-27.66275787 -173.72798157]
[-32.79032898 -157.00292969]
[-25.51710129 -143.88424683]
[-18.24387169 -130.76554871]
[-10.97064209 -117.64685059]
[-3.59995246 -104.58267212]
[3.86778855 -91.57371521]
[11.33553028 -78.56476593]
[24.55062866 -81.92794800]
[38.19857407 -81.75062561]
[51.34638977 -78.03832245]
[63.09357071 -71.03841400]
[72.63376617 -61.22368622]
[79.31011200 -49.26042175]
[82.66049194 -35.96312332]
[82.44947815 -22.23910904]
[78.68486786 -9.02656937]
[71.61765289 2.76955342]
[61.72520828 12.33954620]
[68.80231476 25.56507301]
[75.87941742 38.79059982]
[82.95652771 52.01612854]
[95.78333282 59.58727646]
[95.47235870 75.40542603]
[102.54946899 88.63095093]
[103.76914978 73.68062592]
[111.27994537 60.69647980]
[123.63162994 52.18555832]
[138.43930054 49.79118347]
[152.84381104 53.97567368]
[164.06388855 63.93106842]
[169.93310547 77.73513794]
[169.31822205 92.72252655]
[162.33793640 105.99941254]
[150.34005737 115.00223541]
[135.64117432 117.99268341]
[121.07940674 114.39336395]
[109.46562958 104.89822388]
[114.07964325 119.17095947]
[118.69364929 133.44369507]
[123.30766296 147.71643066]
[128.34457397 161.84545898]
[133.79992676 175.81825256]
[139.25529480 189.79104614]
[153.45278931 196.19953918]
[158.78625488 210.44764709]
[152.58924866 223.94331360]
[158.04461670 237.91610718]
[163.49996948 251.88890076]
[169.05918884 265.82070923]
[174.72198486 279.71072388]
[180.38476562 293.60076904]
[193.31834412 297.36068726]
[201.60400391 307.73171997]
[202.39190674 320.78781128]
[195.61805725 331.74884033]
[201.07341003 345.72164917]
[206.52877808 359.69442749]
[211.98413086 373.66723633]
[217.43948364 387.64004517]
[222.89485168 401.61282349]
[228.35020447 415.58563232]
[233.80555725 429.55844116]
[239.26091003 443.53121948]
[254.04049683 440.72433472]
[269.08419800 440.68124390]
[283.87960815 443.40338135]
[297.92285156 448.79803467]
[310.73556519 456.68148804]
[321.88140869 466.78521729]
[330.98071289 478.76507568]
[337.72357178 492.21307373]
[341.88031006 506.67114258]
[343.30938721 521.64685059]
[341.96212769 536.63018799]
[337.88436890 551.11077881]
[331.21505737 564.59533691]
[322.18133545 576.62475586]
[311.09085083 586.78918457]
[298.32135010 594.74249268]
[284.30780029 600.21374512]
[269.52746582 603.01666260]
[254.48374939 603.05572510]
[239.68905640 600.32958984]
[225.64729309 594.93115234]
[212.83668518 587.04425049]
[201.69358826 576.93750000]
[192.59751892 564.95520020]
[185.85827637 551.50537109]
[181.70541382 537.04620361]
[180.28038025 522.07006836]
[181.63169861 507.08712769]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 182]
[5 181]
[6 180]
[7 179]
[8 178]
[9 177]
[10 176]
[11 175]
[12 174]
[15 170]
[16 169]
[17 168]
[19 167]
[20 166]
[21 165]
[24 162]
[25 161]
[26 160]
[31 159]
[32 158]
[33 157]
[34 156]
[35 143]
[36 142]
[38 140]
[39 139]
[40 138]
[41 137]
[50 126]
[51 125]
[52 124]
[54 123]
[55 122]
[56 121]
[57 120]
[61 117]
[62 116]
[63 115]
[64 114]
[65 113]
[66 112]
[67 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
