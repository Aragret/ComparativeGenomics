%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[116.35916138 621.24652100]
[114.49230194 606.30230713]
[115.88210297 591.30621338]
[120.46356201 576.95965576]
[128.02238464 563.93359375]
[138.20504761 552.83728027]
[150.53526306 544.18975830]
[164.43635559 538.39550781]
[161.77055359 523.63427734]
[151.89453125 512.48468018]
[157.05610657 497.52911377]
[154.39030457 482.76788330]
[151.72451782 468.00665283]
[141.96911621 460.85412598]
[139.62739563 448.57812500]
[146.49046326 437.65747070]
[144.04472351 422.85818481]
[141.59899902 408.05892944]
[125.45979309 400.88970947]
[116.77851105 385.33059692]
[119.19603729 367.51950073]
[131.93142700 354.61340332]
[129.04615784 339.89352417]
[126.16088867 325.17361450]
[123.27561188 310.45373535]
[120.39034271 295.73382568]
[117.50506592 281.01394653]
[114.61979675 266.29406738]
[111.73451996 251.57415771]
[108.84925079 236.85426331]
[99.60386658 248.66624451]
[84.73136902 250.61790466]
[72.75141144 241.59124756]
[70.52664948 226.75715637]
[79.33152771 214.61326599]
[94.12221527 212.11614990]
[106.42542267 220.69548035]
[104.86489868 205.77687073]
[103.30437469 190.85826111]
[101.74385071 175.93966675]
[100.18332672 161.02105713]
[87.71131134 146.24487305]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[86.92881012 59.17685318]
[74.64453125 49.59905624]
[72.82393646 34.49474716]
[82.03060913 22.84258842]
[80.02659607 7.97706032]
[78.02258301 -6.88846779]
[76.01856995 -21.75399590]
[74.01455688 -36.61952591]
[64.50289917 -49.26227188]
[70.47045898 -62.90915680]
[67.91462708 -77.68981171]
[64.81051636 -92.36511230]
[60.62350845 -106.76889038]
[55.37678909 -120.82136536]
[50.13007355 -134.87384033]
[44.88335419 -148.92630005]
[39.63663483 -162.97877502]
[36.19113922 -165.62123108]
[33.98736954 -168.89352417]
[33.07085419 -172.32795715]
[33.33055115 -175.49011230]
[34.52326202 -178.02694702]
[30.12226486 -192.36680603]
[25.72126579 -206.70664978]
[21.32026863 -221.04649353]
[16.70625877 -235.31922913]
[11.88026142 -249.52168274]
[7.05426407 -263.72415161]
[2.22826624 -277.92660522]
[-12.60887241 -275.49572754]
[-27.64376068 -275.54025269]
[-42.46623611 -278.05899048]
[-56.67193222 -282.98321533]
[-69.87330627 -290.17861938]
[-81.71022034 -299.44885254]
[-91.85974121 -310.54104614]
[-100.04499817 -323.15261841]
[-106.04267883 -336.93948364]
[-109.68917084 -351.52554321]
[-110.88498688 -366.51284790]
[-109.59751129 -381.49258423]
[-105.86186981 -396.05606079]
[-99.77996826 -409.80599976]
[-91.51772308 -422.36724854]
[-81.30053711 -433.39715576]
[-69.40714264 -442.59481812]
[-56.16200256 -449.70932007]
[-41.92644882 -454.54656982]
[-27.08884430 -456.97457886]
[-12.05396366 -456.92715454]
[2.76802731 -454.40554810]
[16.97277451 -449.47860718]
[30.17276192 -442.28067017]
[42.00788498 -433.00814819]
[52.15527344 -421.91397095]
[60.33809662 -409.30084229]
[66.33312225 -395.51281738]
[69.97680664 -380.92605591]
[71.16973877 -365.93850708]
[69.87937927 -350.95901489]
[66.14092255 -336.39627075]
[60.05637360 -322.64752197]
[51.79170990 -310.08786011]
[41.57239914 -299.05990601]
[29.67723274 -289.86453247]
[16.43072128 -282.75259399]
[21.25671959 -268.55014038]
[26.08271790 -254.34768677]
[30.90871429 -240.14523315]
[34.72073364 -237.26815796]
[36.76586151 -231.96583557]
[35.66011429 -225.44749451]
[40.06111526 -211.10765076]
[44.46211243 -196.76780701]
[48.86310959 -182.42794800]
[53.68910599 -168.22549438]
[58.93582535 -154.17301941]
[64.18254089 -140.12055969]
[69.42926025 -126.06808472]
[74.67597961 -112.01560974]
[78.72994995 -126.45740509]
[89.39239502 -137.00785828]
[103.87619019 -140.90911865]
[118.39528656 -137.14140320]
[129.15444946 -126.68959045]
[133.34123230 -112.28574371]
[129.86125183 -97.69500732]
[119.62414551 -86.73135376]
[105.30587006 -82.26066589]
[90.64919281 -85.45156860]
[79.48582458 -95.46922302]
[82.58993530 -80.79392242]
[92.83510590 -91.75003052]
[107.79993439 -90.72338104]
[116.45289612 -78.47077942]
[112.41535187 -64.02439117]
[98.66363525 -58.03354645]
[85.33599091 -64.91316986]
[94.70429993 -53.33370590]
[88.88008118 -38.62353897]
[90.88409424 -23.75800896]
[92.88810730 -8.89248180]
[94.89212036 5.97304678]
[96.89613342 20.83857536]
[108.85971069 29.63678741]
[111.10382843 44.68399811]
[101.79433441 57.17284012]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[120.08364868 132.04136658]
[124.17912292 141.88043213]
[122.22434998 152.13359070]
[115.10192871 159.46054077]
[116.66245270 174.37913513]
[118.22297668 189.29774475]
[119.78350067 204.21635437]
[121.34402466 219.13494873]
[123.56913757 233.96899414]
[126.45441437 248.68888855]
[129.33969116 263.40878296]
[132.22496033 278.12866211]
[135.11022949 292.84857178]
[137.99549866 307.56845093]
[140.88078308 322.28833008]
[143.76605225 337.00823975]
[146.65132141 351.72811890]
[158.58425903 355.45275879]
[167.74810791 363.84875488]
[172.44528198 375.27749634]
[171.84114075 387.54678345]
[166.11163330 398.33129883]
[156.39826965 405.61318970]
[158.84400940 420.41247559]
[161.28973389 435.21173096]
[173.30090332 449.16928101]
[166.48573303 465.34088135]
[169.15153503 480.10208130]
[171.81732178 494.86331177]
[181.88401794 507.06872559]
[176.53176880 520.96844482]
[179.19757080 535.72967529]
[194.24728394 536.29559326]
[208.82336426 540.08398438]
[222.24406433 546.91766357]
[233.88168335 556.47692871]
[243.19189453 568.31475830]
[249.73925781 581.87744141]
[253.21752930 596.53063965]
[253.46401978 611.58892822]
[250.46720886 626.34814453]
[244.36727905 640.11785889]
[235.44949341 652.25402832]
[224.13099670 662.18908691]
[210.94114685 669.45837402]
[196.49687195 673.72180176]
[181.47373962 674.78002930]
[166.57443237 672.58349609]
[152.49580383 667.23504639]
[139.89634705 658.98474121]
[129.36534119 648.21844482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 191]
[9 190]
[11 188]
[12 187]
[13 186]
[16 184]
[17 183]
[18 182]
[22 176]
[23 175]
[24 174]
[25 173]
[26 172]
[27 171]
[28 170]
[29 169]
[30 168]
[37 167]
[38 166]
[39 165]
[40 164]
[41 163]
[43 159]
[44 158]
[46 156]
[47 155]
[48 154]
[51 151]
[52 150]
[53 149]
[54 148]
[55 147]
[57 145]
[58 139]
[59 138]
[60 127]
[61 126]
[62 125]
[63 124]
[64 123]
[69 122]
[70 121]
[71 120]
[72 119]
[73 116]
[74 115]
[75 114]
[76 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
