%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[117.31195068 483.75045776]
[126.90724945 471.99057007]
[140.10469055 464.49444580]
[137.87957764 449.66040039]
[135.65446472 434.82635498]
[133.42933655 419.99230957]
[130.82644653 417.61380005]
[129.24627686 413.85638428]
[129.32440186 409.21450806]
[131.45149231 404.44766235]
[129.89096069 389.52908325]
[128.33044434 374.61047363]
[126.76992035 359.69186401]
[125.20939636 344.77325439]
[122.65356445 329.99261475]
[112.13141632 319.45059204]
[116.39366150 304.21432495]
[112.85399628 289.63796997]
[109.31432343 275.06158447]
[105.77465057 260.48519897]
[102.23497772 245.90882874]
[98.69530487 231.33245850]
[95.15563202 216.75608826]
[91.47886658 231.29847717]
[83.54147339 244.02632141]
[72.09999847 253.72645569]
[58.24496460 259.47433472]
[43.29695129 260.72210693]
[28.68070793 257.35086060]
[15.78935909 249.68186951]
[5.85162640 238.44615173]
[-0.18528883 224.71459961]
[-1.74598610 209.79600525]
[1.31829023 195.11233521]
[8.71547318 182.06314087]
[19.74050903 171.89216614]
[33.34256363 165.56886292]
[48.22517395 163.69593811]
[62.96982574 166.45187378]
[76.17115784 173.57402039]
[86.57089233 184.38352966]
[93.17813110 197.85119629]
[93.62474060 182.85784912]
[94.07134247 167.86450195]
[94.07134247 152.86450195]
[93.62474060 137.87115479]
[93.17813110 122.87779999]
[81.07305908 114.55000305]
[76.13734436 100.71079254]
[80.24058533 86.60234070]
[91.82851410 77.56880188]
[91.38191223 62.57545471]
[87.99838257 54.09078979]
[91.04194641 47.35591888]
[90.81861877 32.35757828]
[90.59529114 17.35924339]
[82.65338898 3.67579675]
[90.20034027 -9.16526127]
[89.97701263 -24.16359901]
[89.75368500 -39.16193771]
[89.53035736 -54.16027451]
[86.47317505 -60.02245712]
[86.78815460 -65.69676971]
[89.53035736 -69.60692596]
[89.75368500 -84.60526276]
[89.97701263 -99.60360718]
[90.20034027 -114.60194397]
[90.42366791 -129.60028076]
[75.12993622 -138.25677490]
[66.37172699 -153.38967896]
[66.48375702 -170.78483582]
[75.34494781 -185.65065002]
[90.43663788 -193.93794250]
[90.21331024 -208.93627930]
[89.98998260 -223.93461609]
[82.04807281 -237.61805725]
[89.59502411 -250.45912170]
[89.37169647 -265.45745850]
[81.42979431 -279.14089966]
[88.97674561 -291.98196411]
[88.75341797 -306.98028564]
[88.53009033 -321.97863770]
[73.61302948 -323.75762939]
[59.06620407 -327.50906372]
[45.14921188 -333.16598511]
[32.11042404 -340.62747192]
[20.18252754 -349.76028442]
[9.57839298 -360.40151978]
[0.48726207 -372.36123657]
[-6.92862272 -385.42599487]
[-12.53691578 -399.36267090]
[-16.23753166 -413.92251587]
[-17.96442795 -428.84567261]
[-17.68678474 -443.86587524]
[-15.40955925 -458.71505737]
[-11.17339039 -473.12817383]
[-5.05387688 -486.84805298]
[2.83977056 -499.62982178]
[12.36668110 -511.24539185]
[23.35683632 -521.48748779]
[35.61410141 -530.17321777]
[48.91973495 -537.14776611]
[63.03627777 -542.28649902]
[77.71180725 -545.49774170]
[92.68441772 -546.72424316]
[107.68691254 -545.94409180]
[122.45154572 -543.17120361]
[136.71482849 -538.45501709]
[150.22222900 -531.87976074]
[162.73266602 -523.56280518]
[174.02288818 -513.65246582]
[183.89141846 -502.32571411]
[192.16212463 -489.78463745]
[198.68742371 -476.25305176]
[203.35084534 -461.97241211]
[206.06916809 -447.19763184]
[206.79389954 -432.19238281]
[205.51208496 -417.22439575]
[202.24661255 -402.56082153]
[197.05575562 -388.46337891]
[190.03215027 -375.18359375]
[181.30113220 -362.95849609]
[171.01852417 -352.00625610]
[159.36782837 -342.52233887]
[146.55697632 -334.67596436]
[132.81459045 -328.60720825]
[118.38590240 -324.42431641]
[103.52842712 -322.20196533]
[103.75175476 -307.20361328]
[103.97508240 -292.20529175]
[111.90101624 -279.59463501]
[104.37003326 -265.68078613]
[104.59336090 -250.68244934]
[112.51929474 -238.07177734]
[104.98831940 -224.15794373]
[105.21164703 -209.15960693]
[105.43497467 -194.16127014]
[117.06731415 -189.23107910]
[126.00390625 -180.23451233]
[130.89208984 -168.48318481]
[130.97303772 -155.70927429]
[126.19941711 -143.81022644]
[117.24758148 -134.56686401]
[105.42200470 -129.37695312]
[105.19867706 -114.37861633]
[104.97534943 -99.38027954]
[104.75202179 -84.38193512]
[104.52869415 -69.38359833]
[104.52869415 -54.38360214]
[104.75202179 -39.38526535]
[104.97534943 -24.38692665]
[105.19867706 -9.38858891]
[113.12461090 3.22207522]
[105.59362793 17.13591385]
[105.81695557 32.13425064]
[106.04028320 47.13259125]
[106.37525940 62.12884903]
[106.82186890 77.12220001]
[118.92694092 85.44999695]
[123.86265564 99.28920746]
[119.75941467 113.39765930]
[108.17148590 122.43119812]
[108.61808777 137.42454529]
[109.06469727 152.41789246]
[111.47682953 156.02838135]
[112.51062775 159.83570862]
[112.27343750 163.38241577]
[111.01017761 166.29287720]
[109.06469727 168.31111145]
[108.61808777 183.30445862]
[108.17148590 198.29780579]
[109.73200226 213.21641541]
[113.27167511 227.79278564]
[116.81134796 242.36915588]
[120.35102081 256.94552612]
[123.89069366 271.52191162]
[127.43036652 286.09829712]
[130.97004700 300.67465210]
[141.74536133 312.25927734]
[137.22993469 326.45294189]
[143.50901794 312.83041382]
[156.09864807 304.67556763]
[171.09777832 304.51528931]
[183.85879517 312.39923096]
[190.42753601 325.88446045]
[188.76861572 340.79244995]
[179.39607239 352.50378418]
[165.21406555 357.38958740]
[150.61708069 353.93591309]
[140.12800598 343.21273804]
[141.68852234 358.13134766]
[143.24903870 373.04995728]
[144.80957031 387.96853638]
[146.37008667 402.88714600]
[148.26338196 417.76718140]
[150.48849487 432.60122681]
[152.71362305 447.43527222]
[154.93873596 462.26931763]
[169.75471497 465.56341553]
[182.37806702 473.99047852]
[191.10159302 486.41079712]
[194.74549866 501.14465332]
[192.81697083 516.19940186]
[185.57684326 529.53900146]
[174.00427246 539.35937500]
[159.66435242 544.33245850]
[144.49644470 543.78558350]
[130.55189514 537.79278564]
[119.71656036 527.16448975]
[113.45585632 513.33819580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 198]
[4 197]
[5 196]
[6 195]
[10 194]
[11 193]
[12 192]
[13 191]
[14 190]
[15 180]
[17 178]
[18 177]
[19 176]
[20 175]
[21 174]
[22 173]
[23 172]
[42 171]
[43 170]
[44 169]
[45 164]
[46 163]
[47 162]
[51 158]
[52 157]
[54 156]
[55 155]
[56 154]
[58 152]
[59 151]
[60 150]
[61 149]
[64 148]
[65 147]
[66 146]
[67 145]
[68 144]
[73 137]
[74 136]
[75 135]
[77 133]
[78 132]
[80 130]
[81 129]
[82 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
