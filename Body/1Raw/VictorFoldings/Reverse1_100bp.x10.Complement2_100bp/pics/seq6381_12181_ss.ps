%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUCUCCGAAUGCUGGGGAAUAAAUGGCUCUUUCGAGUGUUCUUGACGAUUGAGUACGGGGGUACAGAUUGUUGUACCGAAAGAGUUGAAAAUUUCCUAUUG\
) } def
/len { sequence length } bind def

/coor [
[131.29649353 388.83023071]
[142.15663147 378.41180420]
[154.84078979 370.31253052]
[149.38543701 356.33972168]
[143.93008423 342.36694336]
[138.47471619 328.39413452]
[133.01936340 314.42132568]
[127.56401062 300.44854736]
[124.89753723 315.20962524]
[116.52519989 327.65567017]
[103.85787964 335.68927002]
[89.03023529 337.95666504]
[74.54099274 334.07571411]
[62.83183670 324.70043945]
[55.87597275 311.41073608]
[54.84558487 296.44616699]
[59.91431046 282.32852173]
[70.22798157 271.43685913]
[84.04856110 265.60662842]
[99.04703522 265.82031250]
[112.69590759 272.04193115]
[122.69592285 283.22442627]
[120.03012848 268.46319580]
[117.36433411 253.70198059]
[114.69853210 238.94076538]
[112.03273773 224.17955017]
[100.52347565 218.38591003]
[94.36060333 206.84895325]
[95.99172974 193.67512512]
[105.04373169 183.70137024]
[100.85169220 177.61460876]
[102.67346954 168.66368103]
[100.44835663 153.82965088]
[98.22323608 138.99560547]
[95.99811554 124.16156006]
[93.77300262 109.32751465]
[84.92788696 121.44213104]
[70.39566040 125.15889740]
[56.82025909 118.77857208]
[50.40818024 105.21813965]
[54.09093857 90.67725372]
[66.18482208 81.80381775]
[81.16067505 82.65463257]
[92.17258453 92.84236908]
[91.50279999 77.85733032]
[80.58277130 69.97269440]
[76.26074982 57.42157745]
[79.90275574 44.85902023]
[89.96394348 36.80904770]
[89.51733398 21.81569862]
[89.07073212 6.82234859]
[88.62412262 -8.17100143]
[85.48000336 -13.98701668]
[85.71046448 -19.66539001]
[88.39414978 -23.61594391]
[88.39414978 -38.61594391]
[88.39414978 -53.61594391]
[88.39414978 -68.61594391]
[85.50887299 -83.33583832]
[79.84608459 -97.22586060]
[74.18330383 -111.11589050]
[68.52051544 -125.00592041]
[62.85772705 -138.89595032]
[48.43869781 -134.71153259]
[33.66126633 -132.05725098]
[18.68733597 -130.96220398]
[3.68097115 -131.43838501]
[-11.19340897 -133.48057556]
[-25.77283287 -137.06639099]
[-39.89756012 -142.15655518]
[-53.41283417 -148.69529724]
[-66.17057037 -156.61096191]
[-78.03099823 -165.81684875]
[-88.86415100 -176.21205139]
[-98.55135345 -187.68270874]
[-106.98645020 -200.10311890]
[-114.07703400 -213.33721924]
[-119.74541473 -227.24000549]
[-123.92948151 -241.65913391]
[-126.58338928 -256.43661499]
[-127.67807770 -271.41058350]
[-127.20153046 -286.41693115]
[-125.15898132 -301.29125977]
[-121.57280731 -315.87060547]
[-116.48229980 -329.99520874]
[-109.94322968 -343.51031494]
[-102.02725220 -356.26788330]
[-92.82109070 -368.12808228]
[-82.42562103 -378.96096802]
[-70.95472717 -388.64788818]
[-58.53410721 -397.08270264]
[-45.29983521 -404.17294312]
[-31.39692116 -409.84100342]
[-16.97769165 -414.02471924]
[-2.20012832 -416.67825317]
[12.77385521 -417.77258301]
[27.78019524 -417.29568481]
[42.65447617 -415.25277710]
[57.23372650 -411.66622925]
[71.35820770 -406.57537842]
[84.87316132 -400.03598022]
[97.63051605 -392.11968994]
[109.49049377 -382.91323853]
[120.32314301 -372.51751709]
[130.00978088 -361.04638672]
[138.44427490 -348.62554932]
[145.53422546 -335.39111328]
[151.20191956 -321.48806763]
[155.38529968 -307.06872559]
[158.03848267 -292.29110718]
[159.13244629 -277.31710815]
[158.65516663 -262.31076050]
[156.61189270 -247.43653870]
[153.02500916 -232.85737610]
[147.93382263 -218.73301697]
[141.39410400 -205.21821594]
[133.47749329 -192.46105957]
[124.27075958 -180.60130310]
[113.87476349 -169.76890564]
[102.40340424 -160.08255005]
[89.98236847 -151.64834595]
[76.74775696 -144.55873108]
[82.41053772 -130.66870117]
[88.07332611 -116.77867889]
[93.73611450 -102.88864899]
[99.39890289 -88.99861908]
[100.45774841 -103.96120453]
[104.77561951 -118.32630157]
[112.14184570 -131.39300537]
[122.19699860 -142.52375793]
[134.45046997 -151.17549133]
[148.30439758 -156.92602539]
[163.08280945 -159.49482727]
[178.06462097 -158.75651550]
[192.51885986 -154.74713135]
[205.74026489 -147.66232300]
[217.08370972 -137.84773254]
[225.99575806 -125.78227234]
[232.04154968 -112.05461884]
[234.92610168 -97.33458710]
[234.50868225 -82.34040070]
[230.80964661 -67.80364990]
[224.00946045 -54.43362045]
[214.43995667 -42.88266754]
[202.56803894 -33.71438599]
[188.97294617 -27.37611389]
[174.31803894 -24.17711258]
[159.31834412 -24.27346992]
[144.70574951 -27.66048241]
[131.19322205 -34.17288971]
[119.44005585 -43.49293518]
[110.01973724 -55.16587830]
[103.39414978 -68.61594391]
[103.39414978 -53.61594391]
[103.39414978 -38.61594391]
[103.39414978 -23.61594391]
[103.61747742 -8.61760712]
[104.06407928 6.37574291]
[104.51068878 21.36909294]
[104.95729065 36.36244202]
[117.67967224 47.36152649]
[118.52729797 64.49617767]
[106.48783875 77.18754578]
[107.15762329 92.17258453]
[108.60704803 107.10239410]
[110.83216095 121.93643951]
[113.05728149 136.77047729]
[115.28239441 151.60452271]
[117.50751495 166.43856812]
[119.84300232 181.25564575]
[134.24819946 191.18083191]
[136.96478271 208.11999512]
[126.79396057 221.51376343]
[129.45974731 236.27497864]
[132.12554932 251.03619385]
[134.79133606 265.79742432]
[137.45713806 280.55862427]
[141.53680420 294.99316406]
[146.99215698 308.96597290]
[152.44752502 322.93878174]
[157.90287781 336.91156006]
[163.35823059 350.88436890]
[168.81359863 364.85717773]
[183.63009644 362.21945190]
[198.67648315 362.52325439]
[213.37442017 365.75692749]
[227.15896606 371.79620361]
[239.50027466 380.40887451]
[249.92396545 391.26397705]
[258.02938843 403.94418335]
[263.50500488 417.96218872]
[266.14035034 432.77911377]
[265.83410645 447.82543945]
[262.59802246 462.52285767]
[256.55654907 476.30642700]
[247.94186401 488.64633179]
[237.08509827 499.06826782]
[224.40354919 507.17166138]
[210.38468933 512.64501953]
[195.56733704 515.27795410]
[180.52104187 514.96923828]
[165.82414246 511.73080444]
[152.04154968 505.68710327]
[139.70303345 497.07040405]
[129.28285217 486.21194458]
[121.18152618 473.52911377]
[115.71045685 459.50933838]
[113.07992554 444.69155884]
[113.39104462 429.64532471]
[116.63185883 414.94894409]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 183]
[4 182]
[5 181]
[6 180]
[7 179]
[8 178]
[22 177]
[23 176]
[24 175]
[25 174]
[26 173]
[30 170]
[32 169]
[33 168]
[34 167]
[35 166]
[36 165]
[44 164]
[45 163]
[49 160]
[50 159]
[51 158]
[52 157]
[55 156]
[56 155]
[57 154]
[58 153]
[59 126]
[60 125]
[61 124]
[62 123]
[63 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
