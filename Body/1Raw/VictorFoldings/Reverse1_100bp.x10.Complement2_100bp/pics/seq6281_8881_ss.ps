%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGAUUCUAAUUUUUACGGGAUCGGGUGAAGAAUGGUGUUCCGUGUGGAUGUGGGGAAUAGGGGUAUGAUCAAUAAUAGCUUUGGUAGUCGGAUGAGUAAGU\
) } def
/len { sequence length } bind def

/coor [
[63.80775833 671.15393066]
[53.57510376 682.14526367]
[42.13560104 691.87426758]
[29.64395332 700.20947266]
[16.26909637 707.03808594]
[2.19191194 712.26776123]
[-12.39722347 715.82775879]
[-27.30100822 717.66992188]
[-42.31788635 717.76940918]
[-57.24477005 716.12487793]
[-71.87979126 712.75848389]
[-86.02503204 707.71575928]
[-99.48918915 701.06494141]
[-112.09017181 692.89599609]
[-123.65757751 683.31939697]
[-134.03495789 672.46459961]
[-143.08197021 660.47845459]
[-150.67628479 647.52301025]
[-156.71517944 633.77355957]
[-161.11697388 619.41595459]
[-163.82217407 604.64440918]
[-164.79415894 589.65869141]
[-164.01980591 574.66143799]
[-161.50956726 559.85552979]
[-157.29740906 545.44116211]
[-151.44030762 531.61328125]
[-144.01744080 518.55883789]
[-135.12921143 506.45446777]
[-124.89582825 495.46383667]
[-113.45567322 485.73553467]
[-100.96347046 477.40118408]
[-87.58815765 470.57348633]
[-73.51062012 465.34475708]
[-58.92124939 461.78573608]
[-44.01734161 459.94451904]
[-29.00045586 459.84603882]
[-14.07368088 461.49160767]
[0.56111646 464.85900879]
[5.59803247 450.72998047]
[10.63494873 436.60095215]
[15.67186546 422.47189331]
[20.70878220 408.34286499]
[25.74569702 394.21383667]
[30.78261375 380.08480835]
[34.53891373 365.56277466]
[36.98464203 350.76348877]
[35.23957443 347.69964600]
[34.89180756 343.63836670]
[36.39398575 339.24554443]
[39.88422012 335.36413574]
[42.98833084 320.68884277]
[46.09244156 306.01354980]
[49.19655228 291.33822632]
[52.30066299 276.66293335]
[50.60939407 269.46838379]
[55.56177902 261.79299927]
[58.88403702 247.16554260]
[54.15778732 233.04066467]
[64.75943756 221.29692078]
[56.62903976 208.86985779]
[59.78990936 193.98820496]
[72.87969208 185.54455566]
[76.20195007 170.91708374]
[79.52421570 156.28962708]
[82.84647369 141.66217041]
[86.16873169 127.03470612]
[89.49098969 112.40724945]
[83.88928986 102.19636536]
[86.55328369 90.85861969]
[96.11619568 84.21091461]
[99.65586853 69.63454437]
[91.69616699 56.24496078]
[95.49354553 41.51286697]
[108.30751801 34.00702667]
[111.84719086 19.43064880]
[107.58494568 4.19438267]
[118.10708618 -6.34761620]
[121.64675903 -20.92399216]
[125.18643188 -35.50036621]
[128.72610474 -50.07674408]
[132.26577759 -64.65311432]
[135.80545044 -79.22949219]
[139.12771606 -93.85695648]
[142.23182678 -108.53225708]
[145.33593750 -123.20755768]
[148.44004822 -137.88285828]
[142.32762146 -155.25294495]
[154.55754089 -167.83848572]
[149.61921692 -182.86923218]
[159.66014099 -193.87055969]
[162.54541016 -208.59045410]
[165.43067932 -223.31034851]
[168.20628357 -238.05130005]
[170.87208557 -252.81253052]
[173.53788757 -267.57373047]
[159.47558594 -272.91851807]
[146.63494873 -280.75640869]
[135.45332336 -290.82049561]
[126.31153107 -302.76797485]
[119.52096558 -316.19192505]
[115.31289673 -330.63516235]
[113.83065033 -345.60571289]
[115.12471008 -360.59371948]
[119.15100861 -375.08868408]
[125.77239990 -388.59689331]
[134.76336670 -400.65826416]
[145.81768799 -410.86203003]
[158.55885315 -418.86062622]
[172.55288696 -424.38162231]
[187.32318115 -427.23696899]
[202.36665344 -427.32943726]
[217.17094421 -424.65588379]
[231.23179626 -419.30731201]
[244.07031250 -411.46597290]
[255.24923706 -401.39886475]
[264.38778687 -389.44891357]
[271.17474365 -376.02313232]
[275.37893677 -361.57876587]
[276.85714722 -346.60778809]
[275.55902100 -331.62014771]
[271.52883911 -317.12628174]
[264.90380859 -303.61987305]
[255.90957642 -291.56091309]
[244.85250854 -281.36010742]
[232.10919189 -273.36495972]
[218.11366272 -267.84774780]
[203.34259033 -264.99636841]
[188.29910278 -264.90795898]
[185.63330078 -250.14672852]
[182.96751404 -235.38551331]
[184.87223816 -228.24452209]
[180.15057373 -220.42507935]
[177.26530457 -205.70518494]
[174.38002014 -190.98529053]
[179.52473450 -177.00740051]
[169.27743530 -164.95321655]
[175.76347351 -154.74253845]
[173.48016357 -142.45555115]
[163.11534119 -134.77874756]
[160.01123047 -120.10344696]
[156.90711975 -105.42814636]
[153.80300903 -90.75284576]
[155.61106873 -86.33244324]
[154.66145325 -80.72929382]
[150.38182068 -75.68981934]
[146.84214783 -61.11344528]
[143.30247498 -46.53707123]
[139.76280212 -31.96069527]
[136.22312927 -17.38431931]
[132.68347168 -2.80794382]
[137.19889832 11.38572311]
[126.42356873 22.97032166]
[122.88389587 37.54669571]
[130.82836914 50.09344482]
[127.44628906 64.92638397]
[114.23223877 73.17421722]
[110.69256592 87.75058746]
[115.82865906 103.71920776]
[104.11845398 115.72950745]
[100.79619598 130.35696411]
[97.47393036 144.98442078]
[94.15167236 159.61189270]
[90.82941437 174.23934937]
[87.50715637 188.86680603]
[95.66532135 202.13639832]
[92.08770752 216.92340088]
[79.38690186 224.61918640]
[83.87551880 239.79031372]
[73.51149750 250.48779297]
[70.18923950 265.11526489]
[66.97596741 279.76705933]
[63.87185287 294.44235229]
[60.76774216 309.11764526]
[57.66363525 323.79293823]
[54.55952454 338.46826172]
[51.78391266 353.20922852]
[49.33818436 368.00848389]
[59.41390610 356.89633179]
[73.28041840 351.17620850]
[88.26030731 351.95257568]
[101.46120453 359.07550049]
[110.33422089 371.16970825]
[113.16610718 385.89996338]
[109.41007996 400.42208862]
[99.79136658 411.93209839]
[86.16718292 418.20758057]
[71.16815186 418.03683472]
[57.69035721 411.45285034]
[48.33613968 399.72686768]
[44.91164398 385.12173462]
[39.87472534 399.25076294]
[34.83781052 413.37979126]
[29.80089378 427.50881958]
[24.76397896 441.63784790]
[19.72706223 455.76687622]
[14.69014645 469.89590454]
[28.15474510 476.54580688]
[40.75627518 484.71389771]
[52.32431793 494.28976440]
[62.70242310 505.14385986]
[71.75024414 517.12939453]
[79.34541321 530.08435059]
[85.38522339 543.83343506]
[89.78798676 558.19073486]
[92.49415588 572.96209717]
[93.46714783 587.94775391]
[92.69379425 602.94500732]
[90.18455505 617.75109863]
[85.97335815 632.16577148]
[80.11717224 645.99407959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 196]
[39 195]
[40 194]
[41 193]
[42 192]
[43 191]
[44 190]
[45 177]
[46 176]
[50 175]
[51 174]
[52 173]
[53 172]
[54 171]
[56 170]
[57 169]
[59 167]
[62 164]
[63 163]
[64 162]
[65 161]
[66 160]
[67 159]
[70 157]
[71 156]
[74 153]
[75 152]
[77 150]
[78 149]
[79 148]
[80 147]
[81 146]
[82 145]
[83 142]
[84 141]
[85 140]
[86 139]
[88 136]
[90 134]
[91 133]
[92 132]
[93 130]
[94 129]
[95 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
