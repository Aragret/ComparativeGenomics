%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[182.91670227 559.30310059]
[191.34361267 546.80310059]
[202.51756287 536.68347168]
[215.78894043 529.53271484]
[212.03263855 515.01062012]
[201.35470581 504.62646484]
[205.38963318 489.32843018]
[201.63333130 474.80636597]
[197.87702942 460.28430176]
[194.12072754 445.76223755]
[190.14863586 431.29772949]
[185.96162415 416.89392090]
[181.77461243 402.49014282]
[170.79223633 392.42849731]
[174.36988831 377.01712036]
[170.18287659 362.61334229]
[154.76089478 363.60671997]
[139.49629211 361.15075684]
[125.15127563 355.36492920]
[112.44281006 346.53509521]
[102.00681305 335.09933472]
[94.36633301 321.62622070]
[89.90531921 306.78649902]
[88.84933472 291.31976318]
[91.25416565 275.99768066]
[97.00286102 261.58520508]
[105.81143951 248.80273438]
[117.24288940 238.28984070]
[130.72888184 230.57341003]
[126.32788086 216.23356628]
[121.92688751 201.89372253]
[116.95923615 196.42158508]
[117.56882477 187.30751038]
[113.38181305 172.90373230]
[99.32797241 168.04292297]
[90.72949982 155.69261169]
[91.05590057 140.46937561]
[100.39153290 128.21572876]
[96.20452118 113.81194305]
[86.24539948 103.99829865]
[89.39169312 90.37506866]
[85.20468140 75.97129059]
[81.01767731 61.56750488]
[76.83066559 47.16372299]
[72.64365387 32.75994110]
[68.45664215 18.35615921]
[52.88166428 19.04243088]
[37.60208130 15.99068928]
[23.50145912 9.38165951]
[11.39417076 -0.39835256]
[1.97836769 -12.78003693]
[-4.20428181 -27.04421806]
[-6.79975128 -42.36362457]
[-5.66192484 -57.85087204]
[-0.86081821 -72.60987091]
[7.32171535 -85.78764343]
[18.40852928 -96.62367249]
[31.75500298 -104.49375153]
[20.30925369 -115.41645050]
[23.97185326 -129.85371399]
[19.57085609 -144.19355774]
[15.16985798 -158.53340149]
[10.66222954 -172.84010315]
[6.04822016 -187.11282349]
[1.43421090 -201.38555908]
[-3.17979836 -215.65829468]
[-18.89793968 -223.33679199]
[-24.09724045 -239.68556213]
[-16.02578545 -254.43989563]
[-20.85178375 -268.64236450]
[-25.67778206 -282.84481812]
[-30.50377846 -297.04727173]
[-34.52634430 -282.59667969]
[-44.73624039 -271.60769653]
[-58.85255051 -266.53524780]
[-73.72165680 -268.51254272]
[-86.02175903 -277.09783936]
[-93.00498962 -290.37316895]
[-93.11127472 -305.37280273]
[-86.31686401 -318.74575806]
[-74.13964844 -327.50448608]
[-59.30005646 -329.69229126]
[-45.11328506 -324.82037354]
[-34.74868011 -313.97714233]
[-37.19440842 -328.77642822]
[-39.64013672 -343.57568359]
[-49.52399445 -355.92962646]
[-43.96539688 -369.74813843]
[-46.41112518 -384.54742432]
[-61.41862869 -386.18368530]
[-75.42772675 -391.80929565]
[-87.39885712 -401.00683594]
[-96.44367218 -413.09378052]
[-101.89099121 -427.17315674]
[-103.33658600 -442.20022583]
[-100.67317963 -457.05987549]
[-94.09842682 -470.64941406]
[-84.10020447 -481.96038818]
[-71.42045593 -490.15347290]
[-57.00009918 -494.62066650]
[-41.90922165 -495.03048706]
[-27.26766396 -491.35253906]
[-14.16193008 -483.85971069]
[-3.56455112 -473.10806274]
[3.73807740 -459.89538574]
[7.20405149 -445.20220947]
[6.57617235 -430.11883545]
[1.90103376 -415.76455688]
[-6.47443867 -403.20452881]
[-17.92873001 -393.37081909]
[-31.61185265 -386.99316406]
[-29.16612625 -372.19387817]
[-19.45720291 -360.89846802]
[-24.84086609 -346.02142334]
[-22.39513779 -331.22213745]
[-19.94941139 -316.42288208]
[-16.30132294 -301.87326050]
[-11.47532558 -287.67080688]
[-6.64932775 -273.46835327]
[-1.82333028 -259.26589966]
[10.41803360 -255.24363708]
[18.22412491 -244.74855042]
[18.56526756 -231.47850037]
[11.09293461 -220.27230835]
[15.70694447 -205.99957275]
[20.32095337 -191.72683716]
[24.93496323 -177.45410156]
[29.98353577 -172.05653381]
[29.50970459 -162.93440247]
[33.91070175 -148.59455872]
[38.31170273 -134.25471497]
[49.44266129 -124.35769653]
[46.09484863 -108.89474487]
[60.51220322 -109.91833496]
[74.80216217 -107.69971466]
[88.24442291 -102.34731293]
[100.16065979 -94.12761688]
[109.94876099 -83.45190430]
[117.11321259 -70.85562897]
[121.29024506 -56.97161484]
[122.26624298 -42.49822617]
[119.98870850 -28.16426849]
[114.56903076 -14.69226265]
[106.27710724 -2.76204276]
[95.52784729 7.02355337]
[82.86042023 14.16914749]
[87.04743195 28.57292938]
[91.23444366 42.97671127]
[95.42145538 57.38049316]
[99.60846710 71.78427887]
[103.79547882 86.18805695]
[113.75460052 96.00170135]
[110.60830688 109.62493134]
[114.79531860 124.02870941]
[129.24508667 129.36822510]
[137.68145752 142.04421997]
[137.04364014 157.07942200]
[127.78559875 168.71672058]
[131.97261047 183.12049866]
[136.26673889 197.49272156]
[140.66772461 211.83256531]
[145.06872559 226.17240906]
[159.59803772 224.96664429]
[174.05349731 226.81518555]
[187.80036926 231.63433838]
[200.23553467 239.20997620]
[210.81401062 249.20712280]
[219.07278442 261.18475342]
[224.65109253 274.61517334]
[227.30621338 288.90737915]
[226.92398071 303.43304443]
[223.52371216 317.55404663]
[217.25727844 330.65060425]
[208.40222168 342.14846802]
[197.34962463 351.54397583]
[184.58666992 358.42633057]
[188.77368164 372.83010864]
[200.05552673 383.92199707]
[196.17839050 398.30313110]
[200.36540222 412.70690918]
[204.55241394 427.11071777]
[209.05279541 431.95407104]
[210.25166321 437.50921631]
[208.64279175 442.00595093]
[212.39909363 456.52798462]
[216.15538025 471.05004883]
[219.91168213 485.57211304]
[230.85829163 496.99499512]
[226.55468750 511.25433350]
[230.31098938 525.77636719]
[245.38516235 525.59527588]
[260.06448364 529.02764893]
[273.49551392 535.87384033]
[284.89739990 545.73590088]
[293.60723877 558.04046631]
[299.11868286 572.07214355]
[301.11126709 587.01513672]
[299.46914673 602.00067139]
[294.28781128 616.15759277]
[285.86849976 628.66271973]
[274.70068359 638.78906250]
[261.43365479 645.94793701]
[246.83871460 649.72308350]
[231.76443481 649.89501953]
[217.08720398 646.45379639]
[203.66032410 639.59942627]
[192.26441956 629.73046875]
[183.56202698 617.42059326]
[178.05911255 603.38562012]
[176.07559204 588.44140625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 190]
[5 189]
[7 187]
[8 186]
[9 185]
[10 184]
[11 181]
[12 180]
[13 179]
[15 177]
[16 176]
[29 162]
[30 161]
[31 160]
[33 159]
[34 158]
[38 154]
[39 153]
[41 151]
[42 150]
[43 149]
[44 148]
[45 147]
[46 146]
[58 133]
[60 131]
[61 130]
[62 129]
[63 127]
[64 126]
[65 125]
[66 124]
[69 120]
[70 119]
[71 118]
[72 117]
[84 116]
[85 115]
[86 114]
[88 112]
[89 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
