%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[99.52914429 796.19128418]
[84.69355011 793.94982910]
[70.00698090 790.88000488]
[55.51564407 786.99157715]
[41.26513290 782.29669189]
[27.30028152 776.81011963]
[13.66503429 770.54919434]
[0.40229115 763.53363037]
[-12.44621849 755.78540039]
[-24.84006691 747.32897949]
[-36.74026108 738.19085693]
[-48.10935593 728.39990234]
[-58.91157913 717.98687744]
[-69.11294556 706.98455811]
[-78.68135834 695.42755127]
[-87.58670807 683.35223389]
[-95.80097961 670.79656982]
[-103.29831696 657.80004883]
[-110.05514526 644.40362549]
[-116.05020142 630.64941406]
[-121.26461029 616.58068848]
[-125.68197632 602.24176025]
[-129.28840637 587.67761230]
[-132.07254028 572.93426514]
[-134.02561951 558.05792236]
[-135.14151001 543.09552002]
[-135.41668701 528.09405518]
[-134.85029602 513.10083008]
[-133.44412231 498.16287231]
[-131.20257568 483.32730103]
[-128.13270569 468.64074707]
[-124.24419403 454.14941406]
[-119.54926300 439.89892578]
[-114.06268311 425.93408203]
[-107.80171204 412.29885864]
[-100.78605652 399.03616333]
[-93.03779602 386.18768311]
[-84.58129883 373.79385376]
[-75.44318390 361.89367676]
[-65.65218353 350.52462769]
[-55.23912811 339.72244263]
[-44.23676300 329.52111816]
[-32.67971420 319.95275879]
[-20.60434341 311.04745483]
[-8.04864502 302.83322144]
[4.94787884 295.33593750]
[18.34433365 288.57916260]
[32.09857178 282.58416748]
[46.16731262 277.36978149]
[60.50629044 272.95248413]
[75.07039642 269.34609985]
[89.81379700 266.56201172]
[104.69011688 264.60900879]
[103.57446289 249.65054321]
[102.45881653 234.69209290]
[101.34317017 219.73364258]
[100.22751617 204.77517700]
[86.30746460 199.41816711]
[76.05154419 188.50370789]
[71.53299713 174.15994263]
[73.69914246 159.21577454]
[82.17333984 146.64299011]
[95.31920624 138.96525574]
[94.20355988 124.00680542]
[93.08790588 109.04835510]
[84.67173004 121.46479034]
[70.92094421 127.45777130]
[56.09638214 125.17031860]
[44.79160309 115.31121826]
[40.50950623 100.93541718]
[44.57695389 86.49741364]
[55.73360062 76.47098541]
[70.52243042 73.96292877]
[84.36097717 79.75038910]
[92.96128845 92.04030609]
[93.85410309 77.06689453]
[94.74692535 62.09349060]
[87.84474182 47.85725403]
[96.32586670 35.61307907]
[97.21868134 20.63967514]
[98.11149597 5.66626835]
[99.00431061 -9.30713749]
[99.89712524 -24.28054237]
[100.78993988 -39.25394821]
[90.79035950 -28.07323265]
[76.36218262 -23.97109032]
[61.97612762 -28.21861267]
[52.08987808 -39.49966049]
[49.76679230 -54.31867981]
[55.72670364 -68.08383179]
[68.12287140 -76.52983856]
[83.11420441 -77.03961182]
[96.05548096 -69.45519257]
[102.93675232 -56.12644196]
[105.82202148 -70.84632874]
[108.70729828 -85.56622314]
[111.59256744 -100.28611755]
[114.47783661 -115.00600433]
[117.36311340 -129.72589111]
[103.63877869 -135.94999695]
[91.72013092 -145.17184448]
[82.24993134 -156.89413452]
[75.73889160 -170.48468018]
[72.53813934 -185.21057129]
[72.82029724 -200.27766418]
[76.57013702 -214.87339783]
[83.58544922 -228.21064758]
[93.48789215 -239.57014465]
[105.74344635 -248.33929443]
[119.69119263 -254.04519653]
[134.57893372 -256.38012695]
[149.60379028 -255.21815491]
[163.95550537 -250.62196350]
[176.86010742 -242.83941650]
[187.62165833 -232.29020691]
[195.65980530 -219.54324341]
[200.54106140 -205.28596497]
[202.00218201 -190.28723145]
[199.96437073 -175.35592651]
[194.53753662 -161.29725647]
[186.01432800 -148.86940002]
[174.85440063 -138.74256897]
[161.65959167 -131.46289062]
[147.14147949 -127.42295074]
[132.08300781 -126.84062195]
[129.19773865 -112.12073517]
[126.31246185 -97.40084076]
[123.42718506 -82.68095398]
[120.54191589 -67.96105957]
[117.65663910 -53.24116898]
[115.76335144 -38.36113358]
[114.87052917 -23.38772774]
[113.97771454 -8.41432095]
[113.08489990 6.55908442]
[112.19208527 21.53248978]
[111.29927063 36.50589752]
[118.26531219 49.67113495]
[109.72032928 62.98630905]
[108.82751465 77.95971680]
[107.93469238 92.93312073]
[108.04636383 107.93270111]
[109.16201019 122.89115906]
[110.27765656 137.84960938]
[124.41700745 143.49232483]
[134.66250610 154.66893005]
[139.02153015 169.12643433]
[136.68074036 183.98179626]
[128.15734863 196.29687500]
[115.18597412 203.65953064]
[116.30162048 218.61799622]
[117.41726685 233.57644653]
[118.53292084 248.53489685]
[119.64856720 263.49334717]
[134.65000916 263.21798706]
[149.64328003 263.78421021]
[164.58123779 265.19024658]
[179.41683960 267.43161011]
[194.10342407 270.50131226]
[208.59480286 274.38967896]
[222.84535217 279.08444214]
[236.81024170 284.57089233]
[250.44552612 290.83169556]
[263.70831299 297.84719849]
[276.55688477 305.59530640]
[288.95080566 314.05166626]
[300.85107422 323.18966675]
[312.22024536 332.98052979]
[323.02252197 343.39346313]
[333.22399902 354.39572144]
[342.79248047 365.95266724]
[351.69790649 378.02792358]
[359.91229248 390.58355713]
[367.40972900 403.57998657]
[374.16665649 416.97634888]
[380.16180420 430.73052979]
[385.37631226 444.79922485]
[389.79379272 459.13815308]
[393.40032959 473.70220947]
[396.18457031 488.44558716]
[398.13775635 503.32186890]
[399.25375366 518.28430176]
[399.52905273 533.28570557]
[398.96276855 548.27899170]
[397.55670166 563.21691895]
[395.31527710 578.05255127]
[392.24551392 592.73913574]
[388.35711670 607.23046875]
[383.66229248 621.48101807]
[378.17581177 635.44586182]
[371.91494751 649.08111572]
[364.89938354 662.34393311]
[357.15121460 675.19244385]
[348.69482422 687.58630371]
[339.55676270 699.48657227]
[329.76586914 710.85571289]
[319.35287476 721.65795898]
[308.35061646 731.85937500]
[296.79360962 741.42779541]
[284.71832275 750.33319092]
[272.16268921 758.54754639]
[259.16619873 766.04492188]
[245.76980591 772.80181885]
[232.01560974 778.79687500]
[217.94691467 784.01135254]
[203.60797119 788.42877197]
[189.04388428 792.03527832]
[174.30050659 794.81945801]
[159.42420959 796.77258301]
[144.46179199 797.88854980]
[129.46035767 798.16375732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[53 153]
[54 152]
[55 151]
[56 150]
[57 149]
[63 143]
[64 142]
[65 141]
[75 140]
[76 139]
[77 138]
[79 136]
[80 135]
[81 134]
[82 133]
[83 132]
[84 131]
[94 130]
[95 129]
[96 128]
[97 127]
[98 126]
[99 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
