%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[80.68801117 718.42651367]
[67.76139832 726.16284180]
[53.43723297 730.82824707]
[38.43400574 732.18872070]
[23.50427437 730.17602539]
[9.39690495 724.89117432]
[-3.18048072 716.59918213]
[-13.59700680 705.71600342]
[-21.33018494 692.78753662]
[-25.99212074 678.46221924]
[-27.34897614 663.45867920]
[-25.33268929 648.52941895]
[-20.04439735 634.42333984]
[-11.74936008 621.84796143]
[-0.86365092 611.43408203]
[12.06670666 603.70404053]
[26.39313126 599.04553223]
[41.39701462 597.69232178]
[43.40102768 582.82678223]
[45.40504074 567.96130371]
[47.40905762 553.09576416]
[49.41307068 538.23022461]
[51.41708374 523.36468506]
[53.42109680 508.49917603]
[55.42510986 493.63363647]
[57.20757675 478.73992920]
[58.76810074 463.82131958]
[60.32862091 448.90270996]
[52.32954025 433.28280640]
[63.26933289 418.47055054]
[56.69835663 405.10375977]
[65.63599396 392.04888916]
[59.06501770 378.68209839]
[68.00265503 365.62722778]
[69.34088898 350.68704224]
[70.67912292 335.74685669]
[72.01735687 320.80667114]
[73.35559082 305.86648560]
[74.69382477 290.92630005]
[72.15960693 283.98373413]
[76.16482544 275.77423096]
[77.72534943 260.85562134]
[79.28587341 245.93701172]
[80.73529053 231.00720215]
[82.07352448 216.06701660]
[83.41175842 201.12683105]
[84.74999237 186.18664551]
[86.08822632 171.24645996]
[87.42646027 156.30627441]
[88.76469421 141.36608887]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[94.28843689 72.19100952]
[94.28843689 57.19100952]
[94.28843689 42.19100952]
[94.28843689 27.19100761]
[92.39514160 12.31097317]
[81.44853210 0.88808686]
[85.75213623 -13.37123489]
[81.99584198 -27.89329338]
[78.23954010 -42.41535187]
[74.48323822 -56.93741226]
[69.30452728 -64.46195221]
[70.78083038 -71.70365906]
[67.24115753 -86.28003693]
[63.70148849 -100.85641479]
[47.15818024 -110.08859253]
[42.69308090 -128.17106628]
[52.68887711 -143.50729370]
[48.71677780 -157.97181702]
[44.74468231 -172.43634033]
[39.45451355 -179.88294983]
[40.82284164 -187.14582825]
[37.06653976 -201.66789246]
[33.20223618 -216.16157532]
[29.23014069 -230.62609863]
[25.25804329 -245.09062195]
[21.28594780 -259.55514526]
[17.31385040 -274.01968384]
[13.34175491 -288.48419189]
[-1.68845868 -287.59744263]
[-16.57453728 -289.85537720]
[-30.66572380 -295.15936279]
[-43.34601212 -303.27749634]
[-54.06107712 -313.85485840]
[-62.34250259 -326.42910767]
[-67.82825470 -340.45053101]
[-70.27852631 -355.30618286]
[-69.58619690 -370.34658813]
[-65.78153229 -384.91430664]
[-59.03086090 -398.37246704]
[-49.62929153 -410.13275146]
[-37.98781967 -419.68103027]
[-24.61535645 -426.59991455]
[-10.09649372 -430.58694458]
[4.93406773 -431.46780396]
[19.81925583 -429.20397949]
[33.90835571 -423.89447021]
[46.58544922 -415.77136230]
[57.29635239 -405.18975830]
[65.57283020 -392.61224365]
[71.05307007 -378.58868408]
[73.49748993 -363.73208618]
[72.79924774 -348.69192505]
[68.98885345 -334.12570190]
[62.23288727 -320.67019653]
[52.82669067 -308.91363525]
[41.18146133 -299.36993408]
[27.80627823 -292.45629883]
[31.77837563 -277.99176025]
[35.75047302 -263.52725220]
[39.72256851 -249.06272888]
[43.69466400 -234.59820557]
[47.66675949 -220.13368225]
[52.46928406 -214.51606750]
[51.58860016 -205.42419434]
[55.34490204 -190.90213013]
[59.20920563 -176.40843201]
[63.18130493 -161.94390869]
[67.15339661 -147.47938538]
[78.05651093 -144.11958313]
[86.06674957 -135.82791138]
[89.11089325 -124.58392334]
[86.32102966 -113.15074158]
[78.27786255 -104.39608765]
[81.81753540 -89.81970978]
[85.35720825 -75.24333191]
[89.00529480 -60.69371414]
[92.76159668 -46.17165375]
[96.51789856 -31.64959526]
[100.27420044 -17.12753487]
[110.95213318 -6.74336386]
[106.91720581 8.55467224]
[110.50395966 -6.01018810]
[118.57012939 -18.65680504]
[130.26446533 -28.05055046]
[144.35284424 -33.20007706]
[159.34848022 -33.56195068]
[173.66885376 -29.09797287]
[185.80268860 -20.27924347]
[194.46948242 -8.03642368]
[198.75460815 6.33847475]
[198.20584106 21.32843399]
[192.88110352 35.35152435]
[183.34231567 46.92786407]
[170.59613037 54.83576584]
[155.98770142 58.24069214]
[141.05865479 56.78331375]
[127.38452911 50.61743546]
[116.40836334 40.39374924]
[109.28843689 27.19100761]
[109.28843689 42.19100952]
[109.28843689 57.19100952]
[109.28843689 72.19100952]
[120.63322449 62.37796783]
[135.60339355 63.32350159]
[145.62335205 74.48596191]
[144.95320129 89.47098541]
[133.97685242 99.69446564]
[118.98204041 99.29994202]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[103.70487976 142.70433044]
[102.36664581 157.64450073]
[101.02841187 172.58468628]
[99.69017792 187.52487183]
[98.35194397 202.46505737]
[97.01371002 217.40524292]
[95.67547607 232.34542847]
[98.02678680 241.17204285]
[94.20447540 247.49752808]
[92.64395142 262.41613770]
[91.08343506 277.33474731]
[89.63401031 292.26455688]
[88.29577637 307.20474243]
[86.95754242 322.14492798]
[85.61930847 337.08511353]
[84.28107452 352.02529907]
[82.94284058 366.96548462]
[89.41809845 381.40090942]
[80.57617950 393.38714600]
[87.05143738 407.82257080]
[78.20951843 419.80880737]
[85.86581421 430.18878174]
[84.44362640 442.60494995]
[75.24723053 450.46322632]
[73.68670654 465.38183594]
[72.12618256 480.30044556]
[74.46508789 486.48437500]
[73.47805786 492.08105469]
[70.29064178 495.63766479]
[68.28662872 510.50317383]
[66.28260803 525.36871338]
[64.27859497 540.23425293]
[62.27458572 555.09979248]
[60.27056885 569.96527100]
[58.26655579 584.83081055]
[56.26254272 599.69635010]
[70.37247467 604.97436523]
[82.95387268 613.26025391]
[93.37567139 624.13842773]
[101.11511230 637.06317139]
[105.78399658 651.38616943]
[107.14811707 666.38909912]
[105.13906860 681.31927490]
[99.85761261 695.42797852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 202]
[19 201]
[20 200]
[21 199]
[22 198]
[23 197]
[24 196]
[25 195]
[26 192]
[27 191]
[28 190]
[30 187]
[32 185]
[34 183]
[35 182]
[36 181]
[37 180]
[38 179]
[39 178]
[41 177]
[42 176]
[43 175]
[44 173]
[45 172]
[46 171]
[47 170]
[48 169]
[49 168]
[50 167]
[51 166]
[52 165]
[54 163]
[55 156]
[56 155]
[57 154]
[58 153]
[59 135]
[61 133]
[62 132]
[63 131]
[64 130]
[66 129]
[67 128]
[68 127]
[71 122]
[72 121]
[73 120]
[75 119]
[76 118]
[77 116]
[78 115]
[79 114]
[80 113]
[81 112]
[82 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
