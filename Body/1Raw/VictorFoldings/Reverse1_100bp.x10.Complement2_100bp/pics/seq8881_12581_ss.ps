%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[110.70675659 540.72290039]
[110.63854218 524.91876221]
[121.82469940 513.75427246]
[121.60137177 498.75595093]
[121.37804413 483.75762939]
[121.15471649 468.75927734]
[110.32141113 458.60177612]
[109.88126373 443.39450073]
[120.60885620 432.10040283]
[120.38552856 417.10208130]
[120.16220093 402.10372925]
[119.93887329 387.10540771]
[119.60389709 372.10913086]
[119.15728760 357.11578369]
[118.71068573 342.12243652]
[118.26407623 327.12908936]
[115.46396637 323.26019287]
[115.06453705 317.59118652]
[118.03410339 311.68414307]
[118.03410339 296.68414307]
[118.03410339 281.68414307]
[118.03410339 266.68414307]
[116.80712891 251.73440552]
[114.36139679 236.93513489]
[111.91567230 222.13586426]
[102.20674896 210.84046936]
[107.59040833 195.96340942]
[105.14468384 181.16413879]
[102.69895935 166.36486816]
[93.05113220 159.06788635]
[90.89243317 146.75837708]
[97.91733551 135.94110107]
[95.69221497 121.10705566]
[93.46710205 106.27301025]
[90.72197723 103.56438446]
[89.18410492 99.65889740]
[89.36123657 95.12286377]
[91.48924255 90.72838593]
[89.92872620 75.80977631]
[78.76960754 61.16205978]
[86.53524780 45.42478561]
[84.75278473 30.53106880]
[82.97032166 15.63735104]
[77.46983337 29.59244728]
[67.78637695 41.04804230]
[54.94186401 48.79520035]
[40.29180527 52.01634216]
[25.38225746 50.37154007]
[11.78666019 44.03437042]
[0.93979043 33.67360687]
[-6.01365662 20.38264656]
[-8.33986664 5.56412029]
[-5.79335022 -9.21814156]
[1.35715413 -22.40412903]
[12.35703564 -32.60229492]
[26.04545212 -38.73640442]
[40.97782898 -40.15910721]
[55.57831955 -36.72026062]
[68.30609894 -28.78277969]
[77.81797791 -17.18432236]
[83.11017609 -3.14871311]
[85.11418915 -18.01424217]
[79.28996277 -32.72440720]
[88.65827942 -44.30387115]
[90.66229248 -59.16939926]
[92.66630554 -74.03492737]
[90.68208313 -78.86296844]
[90.74221039 -83.50512695]
[92.43354797 -87.21382904]
[95.10610199 -89.51377869]
[97.77189636 -104.27499390]
[100.32772827 -119.05564880]
[102.77346039 -133.85491943]
[105.21918488 -148.65419006]
[93.46265411 -158.43843079]
[88.21664429 -172.69943237]
[90.79605865 -187.57266235]
[100.40948486 -199.08082581]
[114.39826202 -204.19743347]
[116.84399414 -218.99670410]
[119.28971863 -233.79598999]
[121.51483917 -248.63002014]
[123.51885223 -263.49554443]
[125.52286530 -278.36108398]
[127.52687836 -293.22662354]
[113.00132751 -297.04605103]
[99.05525208 -302.62158203]
[85.90007782 -309.86871338]
[73.73522186 -318.67758179]
[62.74511337 -328.91461182]
[53.09634781 -340.42465210]
[44.93520737 -353.03320312]
[38.38540649 -366.54910278]
[33.54623795 -380.76748657]
[30.49106789 -395.47277832]
[29.26620865 -410.44204712]
[29.89022827 -425.44839478]
[32.35366821 -440.26428223]
[36.61918259 -454.66516113]
[42.62210846 -468.43267822]
[50.27143860 -481.35812378]
[59.45121765 -493.24557495]
[70.02227783 -503.91479492]
[81.82437134 -513.20404053]
[94.67856598 -520.97253418]
[108.39001465 -527.10241699]
[122.75083923 -531.50085449]
[137.54335022 -534.10113525]
[152.54327393 -534.86383057]
[167.52323914 -533.77740479]
[182.25613403 -530.85827637]
[196.51863098 -526.15069580]
[210.09449768 -519.72613525]
[222.77793884 -511.68185425]
[234.37666321 -502.13989258]
[244.71484375 -491.24487305]
[253.63575745 -479.16195679]
[261.00418091 -466.07434082]
[266.70837402 -452.18038940]
[270.66189575 -437.69076538]
[272.80480957 -422.82510376]
[273.10461426 -407.80877686]
[271.55676270 -392.86944580]
[268.18472290 -378.23358154]
[263.03961182 -364.12301636]
[256.19946289 -350.75170898]
[247.76792908 -338.32235718]
[237.87284851 -327.02337646]
[226.66423035 -317.02606201]
[214.31198120 -308.48196411]
[201.00335693 -301.52062988]
[186.94012451 -296.24755859]
[172.33547974 -292.74270630]
[157.41082764 -291.05923462]
[142.39241028 -291.22259521]
[140.38839722 -276.35705566]
[138.38438416 -261.49154663]
[136.38037109 -246.62600708]
[138.51219177 -242.35232544]
[137.98194885 -236.69407654]
[134.08898926 -231.35025024]
[131.64326477 -216.55097961]
[129.19754028 -201.75170898]
[140.79634094 -192.40649414]
[146.19607544 -178.41725159]
[143.85313416 -163.50494385]
[134.29780579 -151.69000244]
[120.01845551 -146.20846558]
[117.57273102 -131.40919495]
[115.12699890 -116.60992432]
[117.13783264 -109.49807739]
[112.53311920 -101.60919952]
[109.86732483 -86.84798431]
[107.53183746 -72.03091431]
[105.52781677 -57.16538620]
[103.52380371 -42.29985809]
[109.49137115 -28.65297318]
[99.97971344 -16.01022720]
[97.97570038 -1.14469934]
[97.86403656 13.85488510]
[99.64649963 28.74860191]
[101.42897034 43.64231873]
[110.74134064 51.36282730]
[112.34823608 63.75643921]
[104.84732819 74.24925232]
[106.40785217 89.16786194]
[108.30113983 104.04789734]
[110.52626038 118.88194275]
[112.75138092 133.71598816]
[124.55341339 147.85081482]
[117.49822998 163.91914368]
[119.94395447 178.71841431]
[122.38967896 193.51768494]
[132.27354431 205.87162781]
[126.71494293 219.69013977]
[129.16067505 234.48941040]
[131.60639954 249.28868103]
[137.93127441 235.68736267]
[149.79627991 226.51013184]
[164.55075073 223.80720520]
[178.89848328 228.18241882]
[189.63417053 238.65834045]
[194.35942078 252.89463806]
[192.01861572 267.71087646]
[183.13468933 279.79705811]
[169.69233704 286.45309448]
[154.69459534 286.19204712]
[141.49203491 279.07220459]
[133.03410339 266.68414307]
[133.03410339 281.68414307]
[133.03410339 296.68414307]
[133.03410339 311.68414307]
[133.25743103 326.68249512]
[133.70404053 341.67584229]
[134.15063477 356.66918945]
[134.59724426 371.66253662]
[137.98077393 380.14718628]
[134.93721008 386.88208008]
[135.16053772 401.88040161]
[135.38386536 416.87875366]
[135.60719299 431.87707520]
[146.66629028 442.84677124]
[146.67912292 458.06039429]
[136.15304565 468.53594971]
[136.37637329 483.53430176]
[136.59970093 498.53262329]
[136.82302856 513.53094482]
[148.33663940 524.35742188]
[148.73899841 540.15661621]
[137.79141235 551.55511475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 207]
[4 206]
[5 205]
[6 204]
[9 201]
[10 200]
[11 199]
[12 198]
[13 196]
[14 195]
[15 194]
[16 193]
[19 192]
[20 191]
[21 190]
[22 189]
[23 177]
[24 176]
[25 175]
[27 173]
[28 172]
[29 171]
[32 169]
[33 168]
[34 167]
[38 166]
[39 165]
[41 162]
[42 161]
[43 160]
[61 159]
[62 158]
[64 156]
[65 155]
[66 154]
[70 153]
[71 152]
[72 150]
[73 149]
[74 148]
[79 143]
[80 142]
[81 141]
[82 138]
[83 137]
[84 136]
[85 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
