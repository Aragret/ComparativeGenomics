%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[190.14059448 534.56909180]
[178.21974182 544.94543457]
[162.45921326 543.76995850]
[152.20948792 531.74005127]
[153.55151367 515.99285889]
[165.68911743 505.87088013]
[166.80476379 490.91244507]
[167.92041016 475.95397949]
[158.03651428 464.87045288]
[158.95484924 449.68457031]
[170.64727783 439.39257812]
[171.76292419 424.43414307]
[172.87857056 409.47567749]
[173.99421692 394.51721191]
[175.10987854 379.55877686]
[173.43832397 364.65219116]
[169.03733826 350.31234741]
[164.63633728 335.97250366]
[160.23533630 321.63265991]
[155.83433533 307.29281616]
[151.43333435 292.95297241]
[147.03234863 278.61312866]
[142.41833496 264.34039307]
[137.59233093 250.13792419]
[132.76634216 235.93547058]
[127.94033813 221.73301697]
[124.95617676 219.85496521]
[122.73339844 216.43818665]
[121.98531342 211.85630798]
[123.23138428 206.78733826]
[119.04437256 192.38356018]
[114.85736084 177.97978210]
[103.87498474 167.91813660]
[107.45265198 152.50674438]
[103.26564026 138.10296631]
[99.07862854 123.69918060]
[94.89161682 109.29539490]
[90.17147827 95.05741119]
[84.92475891 81.00493622]
[79.67804718 66.95246887]
[73.91201019 53.10498047]
[67.63465118 39.48166275]
[61.35728836 25.85834694]
[54.28018570 12.63282013]
[46.42842865 -0.14802255]
[38.57667160 -12.92886543]
[24.76035309 -20.63729477]
[24.69087219 -35.53173828]
[16.83911705 -48.31258011]
[11.21683598 -51.79129791]
[8.58973122 -56.83067703]
[8.95040989 -61.59292221]
[1.48266864 -74.60187531]
[-5.98507261 -87.61082458]
[-13.45281410 -100.61978149]
[-20.92055511 -113.62873077]
[-26.43676949 -117.27330780]
[-28.91266823 -122.38866425]
[-28.41036034 -127.13806152]
[-35.48746490 -140.36358643]
[-42.56457138 -153.58911133]
[-49.64167404 -166.81463623]
[-63.60280609 -161.28430176]
[-78.10335541 -157.38150024]
[-92.95427704 -155.15711975]
[-107.96195984 -154.64013672]
[-122.93074036 -155.83729553]
[-137.66548157 -158.73301697]
[-151.97409058 -163.28952026]
[-165.66999817 -169.44741821]
[-178.57467651 -177.12641907]
[-190.51988220 -186.22640991]
[-201.34986877 -196.62876892]
[-210.92346191 -208.19786072]
[-219.11584473 -220.78288269]
[-225.82022095 -234.21974182]
[-230.94917297 -248.33326721]
[-234.43583679 -262.93945312]
[-236.23475647 -277.84790039]
[-236.32247925 -292.86422729]
[-234.69787598 -307.79266357]
[-231.38211060 -322.43859863]
[-226.41841125 -336.61108398]
[-219.87149048 -350.12536621]
[-211.82670593 -362.80523682]
[-202.38893127 -374.48541260]
[-191.68122864 -385.01358032]
[-179.84315491 -394.25253296]
[-167.02908325 -402.08178711]
[-153.40605164 -408.39929199]
[-139.15167236 -413.12265015]
[-124.45176697 -416.19033813]
[-109.49798584 -417.56231689]
[-94.48529053 -417.22073364]
[-79.60939026 -415.16998291]
[-65.06423950 -411.43688965]
[-51.03944397 -406.07003784]
[-37.71785355 -399.13946533]
[-25.27314949 -390.73547363]
[-13.86756516 -380.96765137]
[-3.64980030 -369.96331787]
[5.24693727 -357.86596680]
[12.70665932 -344.83331299]
[18.63211441 -331.03524780]
[22.94605064 -316.65164185]
[25.59222794 -301.87005615]
[26.53614807 -286.88317871]
[25.76550293 -271.88638306]
[23.29034424 -257.07516479]
[19.14293480 -242.64268494]
[13.37734890 -228.77705383]
[6.06875134 -215.65904236]
[-2.68757558 -203.45968628]
[-12.77747440 -192.33799744]
[-24.06940269 -182.43901062]
[-36.41614914 -173.89175415]
[-29.33904266 -160.66621399]
[-22.26193810 -147.44068909]
[-15.18483162 -134.21516418]
[-7.91160250 -121.09647369]
[-0.44386140 -108.08751678]
[7.02388000 -95.07856750]
[14.49162102 -82.06961823]
[21.95936203 -69.06066132]
[29.61995888 -56.16433716]
[37.47171402 -43.38349152]
[50.72642517 -36.58923340]
[51.35751724 -20.78062057]
[59.20927048 -7.99977779]
[67.06102753 4.78106451]
[69.56491089 -10.00847816]
[80.20266724 -20.58382797]
[95.00669098 -23.00063896]
[108.45543671 -16.35750389]
[115.53285217 -3.13214397]
[113.59925079 11.74270630]
[103.37580109 22.71909523]
[88.67560577 25.70310211]
[74.98060608 19.58098602]
[81.25796509 33.20430374]
[87.53532410 46.82761765]
[95.09944916 33.87446976]
[109.91999817 31.56115341]
[121.07180786 41.59295654]
[120.33419037 56.57481003]
[108.25087738 65.46264648]
[93.73051453 61.70574570]
[98.97723389 75.75821686]
[104.22395325 89.81069183]
[112.73053741 77.45601654]
[127.68209076 76.25140381]
[138.05688477 87.08485413]
[136.20700073 101.97035217]
[123.49611664 109.93485260]
[109.29539490 105.10838318]
[113.48240662 119.51216888]
[117.66941833 133.91595459]
[121.85643005 148.31973267]
[133.13829041 159.41163635]
[129.26113892 173.79277039]
[133.44815063 188.19654846]
[137.63516235 202.60032654]
[142.14279175 216.90701294]
[146.96879578 231.10946655]
[151.79478455 245.31193542]
[156.62078857 259.51437378]
[161.33294678 264.15194702]
[162.77867126 269.64804077]
[161.37219238 274.21212769]
[165.77319336 288.55197144]
[170.17417908 302.89181519]
[174.57518005 317.23165894]
[178.97618103 331.57150269]
[183.37718201 345.91134644]
[187.77818298 360.25119019]
[190.17762756 345.44436646]
[195.88313293 331.57183838]
[204.59542847 319.36132812]
[215.85745239 309.45343018]
[229.07843018 302.36782837]
[243.56483459 298.47628784]
[258.55673218 297.98287964]
[273.26763916 300.91354370]
[286.92590332 307.11450195]
[298.81500244 316.26049805]
[308.31127930 327.87173462]
[314.91659546 341.33908081]
[318.28439331 355.95614624]
[318.23803711 370.95605469]
[314.77996826 385.55200195]
[308.09158325 398.97830200]
[298.52374268 410.53063965]
[286.57833862 419.60299683]
[272.88201904 425.71942139]
[258.15328979 428.55914307]
[243.16473389 427.97311401]
[228.70265198 423.99209595]
[215.52569580 416.82495117]
[204.32511902 406.84762573]
[195.68844604 394.58355713]
[190.06832886 380.67440796]
[188.95268250 395.63287354]
[187.83702087 410.59133911]
[186.72137451 425.54977417]
[185.60572815 440.50823975]
[195.64205933 452.42083740]
[194.29754639 467.57492065]
[182.87886047 477.06964111]
[181.76321411 492.02807617]
[180.64756775 506.98654175]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 210]
[7 209]
[8 208]
[11 205]
[12 204]
[13 203]
[14 202]
[15 201]
[16 175]
[17 174]
[18 173]
[19 172]
[20 171]
[21 170]
[22 169]
[23 166]
[24 165]
[25 164]
[26 163]
[30 162]
[31 161]
[32 160]
[34 158]
[35 157]
[36 156]
[37 155]
[38 149]
[39 148]
[40 147]
[41 141]
[42 140]
[43 139]
[44 130]
[45 129]
[46 128]
[48 126]
[49 125]
[52 124]
[53 123]
[54 122]
[55 121]
[56 120]
[59 119]
[60 118]
[61 117]
[62 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
