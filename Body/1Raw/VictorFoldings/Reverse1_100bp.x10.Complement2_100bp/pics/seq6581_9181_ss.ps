%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[71.48334503 548.65319824]
[58.02941513 555.33502197]
[43.81841660 560.20355225]
[29.09351349 563.17541504]
[14.10666752 564.19989014]
[-0.88567591 563.25927734]
[-15.62697792 560.36981201]
[-29.86499596 555.58087158]
[-43.35609818 548.97442627]
[-55.86943436 540.66351318]
[-67.19088745 530.79034424]
[-77.12672424 519.52386475]
[-85.50694275 507.05679321]
[-92.18813324 493.60256958]
[-97.05597687 479.39132690]
[-100.02718353 464.66629028]
[-101.05090332 449.67938232]
[-100.10962677 434.68710327]
[-97.21945953 419.94592285]
[-92.42984772 405.70812988]
[-85.82275391 392.21734619]
[-77.51123810 379.70440674]
[-67.63751221 368.38342285]
[-56.37053680 358.44812012]
[-43.90309906 350.06851196]
[-30.44853783 343.38793945]
[-16.23707581 338.52078247]
[-1.51188874 335.55026245]
[13.47505474 334.52728271]
[28.46730804 335.46926880]
[31.35258102 320.74935913]
[34.23785400 306.02947998]
[37.12312698 291.30960083]
[31.97842216 277.33169556]
[42.22571945 265.27752686]
[45.11099243 250.55761719]
[47.99626541 235.83772278]
[50.88153839 221.11784363]
[53.76681137 206.39794922]
[51.89313889 202.00495911]
[52.75922394 196.38829041]
[56.96335220 191.28565979]
[45.97174454 201.49273682]
[31.52014542 205.51161194]
[16.83708000 202.44442749]
[5.20278025 192.97642517]
[-0.78362012 179.22277832]
[0.21525575 164.25607300]
[7.97625637 151.41992188]
[20.76555443 143.58193970]
[35.72598648 142.49316406]
[49.51535797 148.39683533]
[59.05308533 159.97404480]
[62.20841217 174.63844299]
[67.87120056 160.74841309]
[73.53398895 146.85838318]
[79.09321594 132.92658997]
[84.54856873 118.95379639]
[90.00392914 104.98099518]
[95.35511017 90.96797180]
[100.60182953 76.91550446]
[105.84854889 62.86302948]
[93.16162109 54.76236725]
[82.44047546 44.20491791]
[74.15203094 31.65388298]
[68.65654755 17.65921974]
[66.19197845 2.83353233]
[66.86365509 -12.17473793]
[70.63977814 -26.70968056]
[77.35294342 -40.13656998]
[86.70753479 -51.86960220]
[98.29276276 -61.39743042]
[111.60067749 -68.30546570]
[126.04846954 -72.29390717]
[141.00395203 -73.19077301]
[155.81327820 -70.95928192]
[161.05999756 -85.01174927]
[166.30671692 -99.06422424]
[171.55343628 -113.11669159]
[176.80015564 -127.16916656]
[181.62614441 -141.37161255]
[186.02714539 -155.71147156]
[190.32127380 -170.08367920]
[194.50828552 -184.48745728]
[198.69529724 -198.89123535]
[202.88230896 -213.29502869]
[207.06932068 -227.69880676]
[194.43511963 -219.61318970]
[179.45487976 -220.38282776]
[167.71585083 -229.72065735]
[163.59638977 -244.14390564]
[168.63298035 -258.27307129]
[180.94706726 -266.83828735]
[195.94583130 -266.64495850]
[208.03507996 -257.76522827]
[212.70584106 -243.50978088]
[218.57479858 -257.31396484]
[224.44375610 -271.11813354]
[230.31271362 -284.92230225]
[236.18168640 -298.72650146]
[223.46830750 -306.74935913]
[212.20661926 -316.70779419]
[202.68832397 -328.34387207]
[195.15995789 -341.35617065]
[189.81652832 -355.40765381]
[186.79644775 -370.13433838]
[186.17793274 -385.15475464]
[187.97702026 -400.07989502]
[192.14709473 -414.52310181]
[198.58015442 -428.11032104]
[207.10955811 -440.48953247]
[217.51437378 -451.34017944]
[229.52510071 -460.38110352]
[242.83061218 -467.37820435]
[257.08630371 -472.15020752]
[271.92285156 -474.57348633]
[286.95602417 -474.58532715]
[301.79638672 -472.18536377]
[316.05953979 -467.43579102]
[329.37606812 -460.45962524]
[341.40100098 -451.43759155]
[351.82284546 -440.60333252]
[360.37170410 -428.23754883]
[366.82614136 -414.66049194]
[371.01892090 -400.22384644]
[372.84149170 -385.30154419]
[372.24661255 -370.28015137]
[369.24969482 -355.54873657]
[363.92834473 -341.48889160]
[356.42047119 -328.46475220]
[346.92047119 -316.81372070]
[335.67446899 -306.83758545]
[322.97372437 -298.79473877]
[309.14724731 -292.89352417]
[294.55316162 -289.28677368]
[279.56948853 -288.06793213]
[264.58432007 -289.26852417]
[249.98585510 -292.85754395]
[244.11689758 -279.05334473]
[238.24794006 -265.24917603]
[232.37898254 -251.44500732]
[226.51000977 -237.64082336]
[221.47309875 -223.51179504]
[217.28608704 -209.10801697]
[213.09907532 -194.70423889]
[208.91206360 -180.30044556]
[204.72505188 -165.89666748]
[205.87652588 -158.59626770]
[200.36698914 -151.31047058]
[195.96600342 -136.97062683]
[197.15870667 -134.43377686]
[197.41841125 -131.27163696]
[196.50189209 -127.83718872]
[194.29812622 -124.56488800]
[190.85263062 -121.92244720]
[185.60591125 -107.86997223]
[180.35919189 -93.81750488]
[175.11247253 -79.76502991]
[169.86575317 -65.71256256]
[182.51377869 -57.69240189]
[193.22198486 -47.21358871]
[201.52056885 -34.73241425]
[207.04478455 -20.79309845]
[209.55090332 -6.00403738]
[208.92698669 8.98873425]
[205.19787598 23.52976990]
[198.52421570 36.98286819]
[189.19552612 48.75890350]
[177.61769104 58.34162903]
[164.29519653 65.31029510]
[149.80929565 69.35815430]
[134.79248047 70.30592346]
[119.90102386 68.10974884]
[114.65430450 82.16222382]
[109.40758514 96.21469116]
[109.76250458 104.26742554]
[103.97672272 110.43635559]
[98.52136993 124.40914917]
[93.06600952 138.38194275]
[92.86005402 147.51405334]
[87.42401123 152.52117920]
[81.76123047 166.41120911]
[76.09844208 180.30122375]
[71.59081268 194.60791016]
[68.48670197 209.28321838]
[65.60143280 224.00311279]
[62.71615601 238.72300720]
[59.83088303 253.44288635]
[56.94561005 268.16278076]
[61.88394165 283.19354248]
[51.84301758 294.19485474]
[48.95774460 308.91476440]
[46.07247162 323.63464355]
[43.18719864 338.35452271]
[57.42567444 343.14212036]
[70.91740417 349.74728394]
[83.43153381 358.05700684]
[94.75392151 367.92910767]
[104.69083405 379.19467163]
[113.07223511 391.66091919]
[119.75470734 405.11450195]
[124.62390900 419.32528687]
[127.59651184 434.05004883]
[128.62165833 449.03683472]
[127.68181610 464.02923584]
[124.79304504 478.77066040]
[120.00479126 493.00891113]
[113.39898682 506.50033569]
[105.08865356 519.01403809]
[95.21601105 530.33599854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 194]
[31 193]
[32 192]
[33 191]
[35 189]
[36 188]
[37 187]
[38 186]
[39 185]
[42 184]
[54 183]
[55 182]
[56 181]
[57 179]
[58 178]
[59 177]
[60 175]
[61 174]
[62 173]
[76 159]
[77 158]
[78 157]
[79 156]
[80 155]
[81 150]
[82 149]
[83 147]
[84 146]
[85 145]
[86 144]
[87 143]
[96 142]
[97 141]
[98 140]
[99 139]
[100 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
