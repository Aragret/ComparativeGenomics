%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[40.23361206 308.28826904]
[48.05188751 321.15136719]
[53.12047577 335.32510376]
[55.23181534 350.22903442]
[54.29944992 365.25286865]
[50.36156082 379.78137207]
[43.57940674 393.21966553]
[34.23070145 405.01739502]
[22.69827843 414.69149780]
[9.45437908 421.84579468]
[-4.95866680 426.18734741]
[-19.95065498 427.53833008]
[-34.90766907 425.84347534]
[-49.21723557 421.17214966]
[-62.29338074 413.71566772]
[-73.60064697 403.77932739]
[-82.67600250 391.77005005]
[-89.14783478 378.17959595]
[-92.75110626 363.56448364]
[-93.33827209 348.52322388]
[-90.88529968 333.67169189]
[-85.49261475 319.61807251]
[-77.38106537 306.93786621]
[-66.88280487 296.15032959]
[-54.42772675 287.69717407]
[-40.52586365 281.92453003]
[-25.74648857 279.06884766]
[-10.69480705 279.24703979]
[4.01282549 282.45178223]
[10.08665943 268.73651123]
[16.16049385 255.02125549]
[21.71971893 241.08944702]
[26.75663567 226.96041870]
[31.79355240 212.83139038]
[36.83046722 198.70236206]
[41.86738586 184.57333374]
[29.14434814 192.51841736]
[14.14460754 192.43011475]
[1.51599669 184.33578491]
[-4.82837200 170.74354553]
[-2.92262721 155.86509705]
[6.64271545 144.31069946]
[20.90373039 139.66059875]
[35.44148636 143.35566711]
[45.75130463 154.25097656]
[48.63854599 168.97073364]
[55.51795959 155.64131165]
[62.39737320 142.31187439]
[48.72692490 148.48593140]
[33.87345123 146.39443970]
[22.43946457 136.68547058]
[17.96790695 122.36746979]
[21.84434128 107.87701416]
[32.86761093 97.70413208]
[47.62203598 95.00100708]
[61.53580093 100.60521698]
[70.29756927 112.78025055]
[71.19235229 127.75378418]
[79.79091644 115.46295166]
[88.38948059 103.17211151]
[74.91739655 109.76777649]
[60.00941467 111.42674255]
[45.41691971 107.95410919]
[32.85422516 99.75785065]
[23.79717827 87.80084991]
[19.30979729 73.48780060]
[19.91925049 58.50018692]
[25.55394173 44.59873962]
[35.55191422 33.41658401]
[48.73861313 26.26739311]
[63.56488037 23.99104500]
[78.28894043 26.85496140]
[91.18103027 34.52269363]
[100.72659302 46.09344101]
[105.80422211 60.20788956]
[105.81741333 75.20788574]
[100.76383972 89.33260345]
[112.01993561 79.41795349]
[123.27603149 69.50330353]
[134.45800781 59.50513077]
[145.56524658 49.42399216]
[156.67247009 39.34285355]
[167.77970886 29.26171303]
[178.88694763 19.18057442]
[189.99417114 9.09943581]
[201.10140991 -0.98170274]
[212.20864868 -11.06284142]
[221.25863647 -23.02517891]
[227.93884277 -36.45555496]
[234.61903381 -49.88592911]
[241.29922485 -63.31630707]
[247.97941589 -76.74668121]
[254.65962219 -90.17705536]
[261.33981323 -103.60743713]
[268.02001953 -117.03781128]
[274.70019531 -130.46818542]
[278.67230225 -144.93270874]
[279.78793335 -159.89115906]
[280.90359497 -174.84962463]
[282.01925659 -189.80807495]
[268.30081177 -196.30186462]
[257.85745239 -207.31550598]
[252.10148621 -221.35948181]
[251.81138611 -236.53446960]
[257.02639771 -250.78817749]
[267.04122925 -262.19290161]
[280.50143433 -269.20623779]
[295.58663940 -270.87973022]
[310.25674438 -266.98699951]
[322.52764893 -258.05453491]
[330.73989868 -245.29039001]
[333.78277588 -230.42077637]
[331.24484253 -215.45671082]
[323.46923828 -202.42196655]
[311.50762939 -193.07936096]
[296.97769165 -188.69242859]
[295.86206055 -173.73396301]
[294.74639893 -158.77551270]
[293.63073730 -143.81706238]
[301.24234009 -156.74238586]
[311.50582886 -167.68133545]
[323.92044067 -176.10020447]
[337.88043213 -181.58819580]
[352.70471191 -183.87754822]
[367.66992188 -182.85655212]
[382.04589844 -178.57502747]
[395.13119507 -171.24188232]
[406.28735352 -161.21492004]
[414.97003174 -148.98336792]
[420.75561523 -135.14402771]
[423.36178589 -120.37216949]
[422.66137695 -105.38852692]
[418.68856812 -90.92419434]
[411.63720703 -77.68492126]
[401.85134888 -66.31667328]
[389.80847168 -57.37414169]
[376.09616089 -51.29364014]
[361.38348389 -48.37186050]
[346.38827515 -48.75135803]
[331.84222412 -52.41361618]
[318.45501709 -59.17994690]
[306.87991333 -68.72020721]
[297.68161011 -80.56890106]
[291.30899048 -94.14791107]
[288.07290649 -108.79467773]
[288.13058472 -123.78799438]
[281.45037842 -110.35761261]
[274.77020264 -96.92723846]
[268.08999634 -83.49686432]
[261.40979004 -70.06649017]
[254.72959900 -56.63611221]
[248.04940796 -43.20573425]
[241.36921692 -29.77536011]
[234.68902588 -16.34498405]
[246.62300110 -25.43234062]
[260.31161499 -31.56600380]
[275.03677368 -34.42420959]
[290.02606201 -33.85702896]
[304.49313354 -29.89420700]
[317.67907715 -22.74363136]
[328.89221191 -12.78040504]
[337.54428101 -0.52717865]
[343.18142700 13.37326717]
[345.50796509 28.19174385]
[344.40182495 43.15090179]
[339.92105103 57.46601868]
[332.30065918 70.38614655]
[321.94042969 81.23352051]
[309.38381958 89.43911743]
[295.28955078 94.57247925]
[280.39694214 96.36431885]
[265.48727417 94.72064972]
[251.34265137 89.72768402]
[238.70507812 81.64735413]
[228.23750305 70.90353394]
[220.48901367 58.05981827]
[215.86610413 43.78996658]
[214.61126709 28.84254646]
[216.79034424 14.00166798]
[222.28977966 0.04439216]
[211.18255615 10.12553120]
[200.07531738 20.20666885]
[188.96807861 30.28780937]
[177.86085510 40.36894608]
[166.75361633 50.45008469]
[155.64637756 60.53122330]
[144.53915405 70.61236572]
[141.69886780 77.43545532]
[133.19068909 80.75939941]
[121.93458557 90.67404938]
[110.67848969 100.58869934]
[100.68032074 111.77067566]
[92.08175659 124.06151581]
[83.48319244 136.35235596]
[75.72679901 149.19128418]
[68.84738922 162.52072144]
[61.96797562 175.85014343]
[55.99641418 189.61026001]
[50.95949936 203.73928833]
[45.92258072 217.86831665]
[40.88566589 231.99734497]
[35.84874725 246.12637329]
[50.31319427 242.15399170]
[62.52666855 250.86209106]
[63.48584747 265.83139038]
[52.48366547 276.02706909]
[37.63051987 273.93325806]
[29.87576103 261.09509277]
[23.80192566 274.81036377]
[17.72809219 288.52563477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 210]
[30 209]
[31 208]
[32 202]
[33 201]
[34 200]
[35 199]
[36 198]
[46 197]
[47 196]
[48 195]
[58 194]
[59 193]
[60 192]
[77 191]
[78 190]
[79 189]
[80 187]
[81 186]
[82 185]
[83 184]
[84 183]
[85 182]
[86 181]
[87 180]
[88 154]
[89 153]
[90 152]
[91 151]
[92 150]
[93 149]
[94 148]
[95 147]
[96 146]
[97 119]
[98 118]
[99 117]
[100 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
