%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[119.70365906 615.44427490]
[119.96430969 600.41656494]
[122.51599121 585.60479736]
[127.29888153 571.35607910]
[134.20086670 558.00457764]
[143.06015015 545.86322021]
[153.66906738 535.21655273]
[165.77891541 526.31420898]
[179.10585022 519.36480713]
[174.27984619 505.16238403]
[169.45384216 490.95989990]
[164.62785339 476.75744629]
[159.80184937 462.55499268]
[152.21743774 475.49627686]
[137.73901367 479.41741943]
[124.66049194 472.07220459]
[120.47382355 457.66833496]
[127.57733154 444.45697021]
[141.90180969 440.00619507]
[155.24092102 446.86489868]
[151.70124817 432.28851318]
[148.16157532 417.71215820]
[144.62190247 403.13577271]
[141.08222961 388.55938721]
[137.54255676 373.98303223]
[134.00288391 359.40664673]
[130.46321106 344.83026123]
[126.92353821 330.25390625]
[123.38387299 315.67752075]
[113.46943665 326.93380737]
[98.48068237 326.35317993]
[89.46675110 314.36364746]
[93.07238007 299.80343628]
[106.63963318 293.40582275]
[120.16619873 299.88555908]
[117.72047424 285.08630371]
[115.27474213 270.28701782]
[112.82901764 255.48774719]
[110.38329315 240.68847656]
[100.73546600 233.39149475]
[98.57676697 221.08200073]
[105.60166931 210.26470947]
[93.50843048 201.64559937]
[91.04052734 186.63346863]
[100.16304779 174.00740051]
[97.93792725 159.17335510]
[95.71280670 144.33930969]
[93.48769379 129.50527954]
[86.96101379 143.01091003]
[74.96068573 152.01048279]
[60.16761398 154.49343872]
[45.88661194 149.90509033]
[35.30808640 139.27047729]
[30.79531288 124.96541595]
[33.35645294 110.18568420]
[42.41933823 98.23310852]
[55.95930481 91.77793121]
[70.95148468 92.26224518]
[84.04658508 99.57786560]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.12918091 57.68951416]
[93.35250854 42.69117737]
[85.82152557 28.77733803]
[93.74745941 16.16667366]
[81.33547211 3.83939028]
[81.67256165 -13.31290531]
[94.06181335 -24.68590355]
[94.06181335 -39.68590546]
[94.06181335 -54.68590546]
[94.06181335 -69.68590546]
[91.09225464 -75.59295654]
[91.49167633 -81.26194763]
[94.29179382 -85.13084412]
[94.73840332 -100.12419891]
[86.47785187 -110.03005981]
[87.15849304 -122.50885773]
[95.87085724 -130.90060425]
[96.54064178 -145.88565063]
[97.21042633 -160.87068176]
[97.88021088 -175.85572815]
[98.54999542 -190.84075928]
[99.21977997 -205.82580566]
[99.88956451 -220.81083679]
[100.55934906 -235.79588318]
[101.22913361 -250.78091431]
[101.89891815 -265.76596069]
[99.49187469 -270.39770508]
[99.13761139 -275.02673340]
[100.49132538 -278.87152100]
[102.94803619 -281.40075684]
[104.28627014 -296.34094238]
[92.82552338 -309.55722046]
[94.43740082 -326.63696289]
[107.63822937 -337.05697632]
[108.75387573 -352.01544189]
[109.86952209 -366.97387695]
[95.94500732 -372.92254639]
[84.70816040 -383.07202148]
[77.37786865 -396.32138062]
[74.74926758 -411.23342896]
[77.10749054 -426.19061279]
[84.19673157 -439.57049561]
[95.24800873 -449.92175293]
[109.06255341 -456.12149048]
[124.14187622 -457.49728394]
[138.85028076 -453.89984131]
[151.59231567 -445.71939087]
[160.98580933 -433.84332275]
[166.01182556 -419.55984497]
[166.12518311 -404.41833496]
[161.31359863 -390.06118774]
[152.09898376 -378.04580688]
[139.48086548 -369.67550659]
[124.82798004 -365.85824585]
[123.71233368 -350.89978027]
[122.59667969 -335.94131470]
[132.28839111 -327.45013428]
[135.36581421 -314.73748779]
[130.48765564 -302.39187622]
[119.22645569 -295.00268555]
[117.88822174 -280.06250000]
[116.88395691 -265.09616089]
[116.21417236 -250.11112976]
[115.54438782 -235.12609863]
[114.87460327 -220.14105225]
[114.20481873 -205.15602112]
[113.53503418 -190.17097473]
[112.86524963 -175.18594360]
[112.19546509 -160.20089722]
[111.52568054 -145.21586609]
[110.85589600 -130.23081970]
[119.77050781 -115.11471558]
[109.73175049 -99.67758942]
[109.28514099 -84.68424225]
[109.06181335 -69.68590546]
[109.06181335 -54.68590546]
[109.06181335 -39.68590546]
[109.06181335 -24.68590355]
[119.35822296 -16.93906212]
[123.37264252 -4.49050760]
[119.42623138 8.18373013]
[108.74579620 16.39000130]
[116.29274750 29.23106003]
[108.35084534 42.91450500]
[108.12751770 57.91284180]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[108.32173920 127.28015137]
[110.54685211 142.11419678]
[112.77197266 156.94824219]
[114.99708557 171.78228760]
[127.42260742 181.17613220]
[129.46788025 196.25164795]
[120.43570709 208.03959656]
[132.23774719 222.17442322]
[125.18256378 238.24275208]
[127.62828827 253.04202271]
[130.07402039 267.84130859]
[132.51974487 282.64056396]
[134.96546936 297.43984985]
[137.96025085 312.13784790]
[141.49992371 326.71423340]
[145.03959656 341.29058838]
[148.57926941 355.86697388]
[152.11892700 370.44335938]
[155.65859985 385.01971436]
[159.19827271 399.59609985]
[162.73794556 414.17248535]
[166.27761841 428.74884033]
[169.81729126 443.32522583]
[174.00430298 457.72900391]
[178.83030701 471.93145752]
[183.65629578 486.13391113]
[188.48229980 500.33636475]
[193.30830383 514.53881836]
[208.11013794 511.93002319]
[223.13674927 511.61138916]
[238.03587341 513.59045410]
[252.45825195 517.82067871]
[266.06582642 524.20306396]
[278.53958130 532.58789062]
[289.58715820 542.77868652]
[298.94952393 554.53649902]
[306.40725708 567.58575439]
[311.78555298 581.62048340]
[314.95828247 596.31182861]
[315.85110474 611.31524658]
[314.44311523 626.27911377]
[310.76727295 640.85266113]
[304.90975952 654.69427490]
[297.00787354 667.47949219]
[287.24688721 678.90850830]
[275.85556030 688.71356201]
[263.10095215 696.66467285]
[249.28205872 702.57556152]
[234.72279358 706.30761719]
[219.76443481 707.77331543]
[204.75765991 706.93835449]
[190.05424500 703.82232666]
[175.99884033 698.49822998]
[162.92092896 691.09088135]
[151.12707520 681.77392578]
[140.89375305 670.76580811]
[132.46084595 658.32446289]
[126.02603149 644.74163818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 180]
[10 179]
[11 178]
[12 177]
[13 176]
[20 175]
[21 174]
[22 173]
[23 172]
[24 171]
[25 170]
[26 169]
[27 168]
[28 167]
[29 166]
[35 165]
[36 164]
[37 163]
[38 162]
[39 161]
[42 159]
[45 156]
[46 155]
[47 154]
[48 153]
[60 152]
[62 150]
[63 149]
[64 148]
[65 147]
[67 145]
[70 141]
[71 140]
[72 139]
[73 138]
[76 137]
[77 136]
[80 134]
[81 133]
[82 132]
[83 131]
[84 130]
[85 129]
[86 128]
[87 127]
[88 126]
[89 125]
[93 124]
[94 123]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
