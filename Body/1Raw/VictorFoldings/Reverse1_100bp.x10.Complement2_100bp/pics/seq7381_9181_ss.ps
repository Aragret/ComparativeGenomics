%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[108.15497589 479.87161255]
[106.83133698 464.90145874]
[107.75376129 449.90121460]
[110.90165710 435.20605469]
[116.20468903 421.14419556]
[123.54438782 408.02984619]
[132.75679016 396.15594482]
[143.63606262 385.78778076]
[155.93919373 377.15698242]
[169.39129639 370.45632935]
[164.77729797 356.18362427]
[160.16328430 341.91088867]
[155.54927063 327.63815308]
[150.72328186 313.43569946]
[145.68635559 299.30667114]
[140.64944458 285.17764282]
[135.61253357 271.04858398]
[130.57560730 256.91955566]
[124.22592926 270.50933838]
[110.68000793 276.95199585]
[96.13084412 273.30206299]
[87.23014069 261.22821045]
[88.04716492 246.25048828]
[98.20838928 235.21647644]
[113.06823730 233.17077637]
[125.83414459 241.05010986]
[122.29447174 226.47373962]
[111.77232361 215.93173218]
[116.03456879 200.69546509]
[112.49489594 186.11909485]
[101.97275543 175.57710266]
[106.23500061 160.34083557]
[96.07117462 153.78163147]
[93.00292206 141.66677856]
[99.20380402 130.35696411]
[95.88154602 115.72950745]
[86.41867065 108.94016266]
[83.92377472 97.56401825]
[89.67687988 87.43766022]
[86.57276917 72.76235962]
[83.46865845 58.08705902]
[68.41091919 57.82166672]
[53.79684830 54.21372604]
[40.35860443 47.44730377]
[28.76870346 37.86462784]
[19.60636139 25.94876671]
[13.32853985 12.29929543]
[10.24716949 -2.39788795]
[10.51363945 -17.40502167]
[14.11137009 -31.96951866]
[20.85680580 -45.36170197]
[30.40877151 -56.91136932]
[42.28573608 -66.04132080]
[55.89007568 -72.29622650]
[52.78596878 -86.97152710]
[49.68185806 -101.64682770]
[46.57774734 -116.32212830]
[43.47363663 -130.99743652]
[30.51101685 -139.63504028]
[27.57206345 -154.56210327]
[35.88658524 -166.86674500]
[32.78247452 -181.54205322]
[29.29223633 -185.42346191]
[27.79006004 -189.81626892]
[28.13782883 -193.87756348]
[29.88289452 -196.94139099]
[27.43716621 -211.74066162]
[24.99143982 -226.53993225]
[22.54571152 -241.33920288]
[20.09998512 -256.13848877]
[17.65425682 -270.93774414]
[14.22319603 -285.54006958]
[9.82219791 -299.87991333]
[5.42119980 -314.21975708]
[1.02020168 -328.55960083]
[-3.38079643 -342.89947510]
[-7.88842487 -357.20614624]
[-12.50243473 -371.47888184]
[-27.41010094 -369.47857666]
[-42.43535614 -370.17248535]
[-57.09519577 -373.53829956]
[-70.91837311 -379.46786499]
[-83.46053314 -387.77050781]
[-94.31848145 -398.17938232]
[-103.14319611 -410.35986328]
[-109.65099335 -423.92041016]
[-113.63266754 -438.42510986]
[-114.96023560 -453.40765381]
[-113.59101868 -468.38647461]
[-109.56903076 -482.88006592]
[-103.02355957 -496.42245483]
[-94.16501617 -508.57833862]
[-83.27816010 -518.95697021]
[-70.71297455 -527.22473145]
[-56.87336349 -533.11584473]
[-42.20421982 -536.44091797]
[-27.17709541 -537.09301758]
[-12.27504826 -535.05126953]
[2.02288198 -530.38128662]
[15.25707531 -523.23315430]
[27.00210762 -513.83666992]
[36.88042450 -502.49386597]
[44.57447815 -489.56942749]
[49.83694077 -475.47879028]
[52.49863815 -460.67489624]
[52.47401428 -445.63363647]
[49.76385880 -430.83853149]
[44.45529175 -416.76519775]
[36.71896362 -403.86602783]
[26.80356026 -392.55563354]
[15.02782631 -383.19766235]
[1.77029908 -376.09289551]
[6.38430834 -361.82015991]
[11.43288040 -356.42257690]
[10.95905113 -347.30044556]
[15.36004925 -332.96060181]
[19.76104736 -318.62075806]
[24.16204453 -304.28091431]
[28.56304359 -289.94107056]
[34.02016068 -303.91317749]
[46.10208130 -312.80291748]
[61.06509018 -313.85565186]
[74.27274323 -306.74523926]
[81.63249207 -293.67489624]
[80.86385345 -278.69461060]
[72.20498657 -266.44616699]
[58.33894348 -260.72491455]
[43.56226349 -263.30361938]
[32.45352936 -273.38348389]
[34.89925385 -258.58419800]
[37.34498215 -243.78494263]
[39.79071045 -228.98567200]
[42.23643875 -214.18640137]
[44.68216324 -199.38713074]
[47.45777512 -184.64616394]
[50.56188583 -169.97085571]
[63.14670181 -162.08682251]
[66.50376892 -147.24819946]
[58.14894104 -134.10154724]
[61.25304794 -119.42623901]
[64.35716248 -104.75093842]
[67.46127319 -90.07563782]
[70.56537628 -75.40033722]
[85.53726959 -75.18985748]
[100.09391022 -71.65112305]
[113.50447845 -64.95848083]
[125.09497070 -55.44469452]
[134.28204346 -43.58443451]
[140.60241699 -29.97054291]
[143.73617554 -15.28444099]
[143.52302551 -0.26200238]
[139.97041321 14.34331417]
[133.25341797 27.79825592]
[123.70602417 39.42658615]
[111.80456543 48.64307404]
[98.14396667 54.98294830]
[101.24807739 69.65824890]
[104.35218811 84.33355713]
[115.88227844 96.51686859]
[110.50901031 112.40724945]
[113.83126831 127.03470612]
[126.65191650 140.25259399]
[120.81137848 156.80116272]
[131.58670044 168.38575745]
[127.07127380 182.57942200]
[130.61094666 197.15579224]
[141.38627625 208.74040222]
[136.87084961 222.93406677]
[140.41052246 237.51043701]
[144.70463562 251.88265991]
[149.74156189 266.01168823]
[154.77847290 280.14071655]
[159.81538391 294.26974487]
[164.85231018 308.39877319]
[169.63299561 312.96566772]
[171.16038513 318.43960571]
[169.82200623 323.02413940]
[174.43601990 337.29687500]
[179.05003357 351.56961060]
[183.66403198 365.84234619]
[198.49288940 363.40045166]
[213.52006531 363.19607544]
[228.40983582 365.23376465]
[242.82957458 369.46798706]
[256.45715332 375.80416870]
[268.98806763 384.10073853]
[280.14245605 394.17239380]
[289.67105103 405.79406738]
[297.36102295 418.70614624]
[303.04055786 432.62017822]
[306.58279419 447.22531128]
[307.90856934 462.19528198]
[306.98828125 477.19564819]
[303.84246826 491.89129639]
[298.54144287 505.95388794]
[291.20361328 519.06927490]
[281.99291992 530.94451904]
[271.11511230 541.31420898]
[258.81320190 549.94677734]
[245.36206055 556.64929199]
[231.06214905 561.27209473]
[216.23294067 563.71185303]
[201.20574951 563.91412354]
[186.31625366 561.87432861]
[171.89712524 557.63800049]
[158.27046204 551.29992676]
[145.74070740 543.00152588]
[134.58776855 532.92834473]
[125.06081390 521.30529785]
[117.37268066 508.39212036]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 180]
[11 179]
[12 178]
[13 177]
[14 174]
[15 173]
[16 172]
[17 171]
[18 170]
[26 169]
[27 168]
[29 166]
[30 165]
[32 163]
[35 161]
[36 160]
[39 158]
[40 157]
[41 156]
[54 143]
[55 142]
[56 141]
[57 140]
[58 139]
[61 136]
[62 135]
[66 134]
[67 133]
[68 132]
[69 131]
[70 130]
[71 129]
[72 119]
[73 118]
[74 117]
[75 116]
[76 115]
[77 113]
[78 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
