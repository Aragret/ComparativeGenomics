%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[73.02416992 702.78582764]
[58.59674835 707.06781006]
[43.61113739 708.45263672]
[28.64334106 706.88696289]
[14.26868439 702.43103027]
[1.03968978 695.25604248]
[-10.53515530 685.63787842]
[-20.01094437 673.94616699]
[-27.02345276 660.63037109]
[-31.30314064 646.20227051]
[-32.68550491 631.21643066]
[-31.11741447 616.24890137]
[-26.65913963 601.87493896]
[-19.48204613 588.64709473]
[-9.86200333 577.07379150]
[1.83122206 567.59991455]
[15.14817238 560.58959961]
[29.57698059 556.31219482]
[44.56304169 554.93225098]
[46.12356186 540.01367188]
[47.68408585 525.09509277]
[49.24460983 510.17645264]
[50.69402695 495.24664307]
[52.03226089 480.30645752]
[42.31447983 469.07702637]
[43.45881271 453.90649414]
[55.30316925 443.78973389]
[56.64140320 428.84954834]
[57.97963715 413.90936279]
[59.31787109 398.96917725]
[60.65610504 384.02899170]
[61.99433899 369.08880615]
[53.03309631 381.11776733]
[39.99405289 388.53286743]
[25.07452011 390.08447266]
[10.78869820 385.51113892]
[-0.45599982 375.58355713]
[-6.76464462 361.97470093]
[-7.07411861 346.97790527]
[-1.33227026 333.12036133]
[9.49329853 322.73736572]
[23.57828903 317.57858276]
[38.54913330 318.51336670]
[51.88298035 325.38421631]
[61.33283997 337.03326416]
[65.30635071 351.49905396]
[69.49336243 337.09527588]
[73.68037415 322.69149780]
[77.86738586 308.28771973]
[82.05439758 293.88394165]
[86.24140930 279.48016357]
[88.57689667 264.66308594]
[89.02350616 249.66973877]
[86.08054352 242.89030457]
[89.59002686 234.45695496]
[90.25981140 219.47190857]
[90.92959595 204.48687744]
[91.59938049 189.50183105]
[92.26916504 174.51679993]
[92.93894958 159.53175354]
[93.16227722 144.53341675]
[92.93894958 129.53507996]
[92.71562195 114.53674316]
[83.74431610 100.36310577]
[92.07379150 85.80301666]
[91.62718201 70.80966949]
[91.18058014 55.81631851]
[90.73397064 40.82297134]
[90.28736877 25.82962036]
[87.54248810 21.38971519]
[86.84491730 16.79986954]
[87.90892029 12.86503220]
[90.17070770 10.16010189]
[90.39403534 -4.83823538]
[81.98691559 -14.62001133]
[82.48169708 -27.10756302]
[91.06815338 -35.62809372]
[83.74516296 -49.65251541]
[91.85797119 -62.14377594]
[92.30458069 -77.13712311]
[90.11161804 -80.88477325]
[89.30627441 -84.74689484]
[89.75415039 -88.27319336]
[91.18840027 -91.10330963]
[93.25055695 -93.00215912]
[94.58879089 -107.94234467]
[95.92702484 -122.88253021]
[97.26525879 -137.82270813]
[87.40740204 -149.88340759]
[88.97738647 -165.01582336]
[100.53617096 -174.33946228]
[101.87440491 -189.27964783]
[103.21263885 -204.21981812]
[104.43961334 -219.16955566]
[105.55525970 -234.12800598]
[106.67090607 -249.08647156]
[107.78656006 -264.04492188]
[93.58901215 -269.17642212]
[81.30307770 -277.94900513]
[71.84045410 -289.71170044]
[65.90332794 -303.59167480]
[63.93228149 -318.55886841]
[66.07357025 -333.50268555]
[72.16830444 -347.31417847]
[81.76421356 -358.96841431]
[94.14920807 -367.60058594]
[108.40425110 -372.57012939]
[123.47151184 -373.50827026]
[138.23291016 -370.34539795]
[151.59304810 -363.31622314]
[162.56051636 -352.94235229]
[170.32144165 -339.99359131]
[174.29994202 -325.43081665]
[174.20075989 -310.33471680]
[170.03126526 -295.82546997]
[162.10086060 -282.97979736]
[150.99803162 -272.75094604]
[137.54669189 -265.89791870]
[122.74501038 -262.92926025]
[121.62936401 -247.97080994]
[120.51371765 -233.01235962]
[119.39806366 -218.05390930]
[122.03536987 -211.14982605]
[118.15282440 -202.88159180]
[116.81459045 -187.94140625]
[115.47635651 -173.00122070]
[125.19413757 -161.77178955]
[124.04980469 -146.60124207]
[112.20544434 -136.48448181]
[110.86721039 -121.54429626]
[109.52897644 -106.60411072]
[108.19074249 -91.66392517]
[107.29792786 -76.69052124]
[106.85132599 -61.69717026]
[114.20625305 -48.74517059]
[106.06150055 -35.18148804]
[115.20018768 -20.19978523]
[105.39237976 -4.61490726]
[105.16904449 10.38342953]
[105.28071594 25.38301468]
[105.72731781 40.37636566]
[106.17392731 55.36971283]
[106.62053680 70.36306763]
[107.06713867 85.35641479]
[115.04737091 93.83917236]
[115.30745697 105.48278046]
[107.71395874 114.31341553]
[107.93728638 129.31175232]
[108.16061401 144.31008911]
[110.51873016 147.95608521]
[111.49571991 151.77838135]
[111.20575714 155.32116699]
[109.89930725 158.21250916]
[107.92398834 160.20153809]
[107.25420380 175.18658447]
[106.58441925 190.17161560]
[105.91463470 205.15666199]
[105.24485016 220.14169312]
[104.57506561 235.12673950]
[104.01685333 250.11634827]
[103.57024384 265.10968018]
[111.07998657 252.12493896]
[122.35564423 242.23254395]
[136.20727539 236.47647095]
[151.17308044 235.46417236]
[165.67367554 239.30247498]
[178.17878723 247.58631897]
[187.36872864 259.44149780]
[192.27365112 273.61688232]
[192.37593079 288.61654663]
[187.66476440 302.85748291]
[178.63734436 314.83688354]
[166.24635315 323.29049683]
[151.79943848 327.32617188]
[136.82122803 326.51803589]
[122.89239502 320.95138550]
[111.48288727 311.21368408]
[103.79678345 298.33255005]
[100.64519501 283.66717529]
[96.45818329 298.07095337]
[92.27117157 312.47473145]
[88.08415985 326.87850952]
[83.89714813 341.28228760]
[79.71013641 355.68606567]
[76.93452454 370.42703247]
[75.59629059 385.36721802]
[74.25805664 400.30740356]
[72.91982269 415.24758911]
[71.58158875 430.18777466]
[70.24335480 445.12796021]
[80.10121155 457.18865967]
[78.53122711 472.32107544]
[66.97245026 481.64471436]
[65.63421631 496.58489990]
[67.98552704 505.41149902]
[64.16321564 511.73699951]
[62.60269165 526.65557861]
[61.04216766 541.57421875]
[59.48164368 556.49279785]
[73.85774231 560.94409180]
[87.08905792 568.11474609]
[98.66701508 577.72918701]
[108.14659119 589.41778564]
[115.16341400 602.73138428]
[119.44776917 617.15808105]
[120.83498383 632.14349365]
[119.27173615 647.11151123]
[114.81811523 661.48687744]
[107.64530945 674.71704102]
[98.02900696 686.29345703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 199]
[20 198]
[21 197]
[22 196]
[23 194]
[24 193]
[27 190]
[28 189]
[29 188]
[30 187]
[31 186]
[32 185]
[46 184]
[47 183]
[48 182]
[49 181]
[50 180]
[51 179]
[52 161]
[53 160]
[55 159]
[56 158]
[57 157]
[58 156]
[59 155]
[60 154]
[61 149]
[62 148]
[63 147]
[65 144]
[66 143]
[67 142]
[68 141]
[69 140]
[73 139]
[74 138]
[77 136]
[79 134]
[80 133]
[85 132]
[86 131]
[87 130]
[88 129]
[91 126]
[92 125]
[93 124]
[94 122]
[95 121]
[96 120]
[97 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
