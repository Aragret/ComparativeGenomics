%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[182.00312805 444.50155640]
[178.15037537 429.99688721]
[175.43321228 415.23730469]
[173.86799622 400.31155396]
[173.46412659 385.30938721]
[174.22401428 370.32101440]
[176.14312744 355.43661499]
[179.20989990 340.74569702]
[183.40588379 326.33660889]
[188.70587158 312.29598999]
[195.07795715 298.70834351]
[202.48382568 285.65530396]
[210.87893677 273.21545410]
[220.21281433 261.46353149]
[230.42932129 250.47029114]
[220.26576233 239.43841553]
[205.95169067 235.32060242]
[202.29158020 219.92858887]
[192.12802124 208.89671326]
[181.96447754 197.86483765]
[171.80093384 186.83294678]
[154.79244995 182.51112366]
[150.90820312 164.51127625]
[140.58152771 153.63194275]
[130.25485229 142.75260925]
[119.92819214 131.87327576]
[109.60152435 120.99394226]
[99.27485657 110.11460876]
[91.88257599 106.90107727]
[88.87691498 98.99558258]
[78.71337128 87.96369934]
[68.54982758 76.93182373]
[58.38627625 65.89994812]
[43.34523392 60.99305344]
[40.41208267 46.39011383]
[32.29587173 42.19906235]
[30.18084717 35.11750412]
[20.18267441 23.93553162]
[10.18450260 12.75355625]
[0.18633088 1.57158196]
[-11.72535515 10.70005989]
[-24.29330635 18.90152359]
[-37.44553375 26.12899399]
[-51.10670090 32.34107208]
[-65.19855499 37.50217819]
[-79.64038086 41.58274460]
[-94.34945679 44.55940247]
[-109.24152374 46.41510010]
[-124.23129272 47.13920593]
[-139.23289490 46.72757339]
[-154.16038513 45.18256378]
[-168.92829895 42.51302338]
[-183.45201111 38.73424530]
[-197.64833069 33.86787033]
[-211.43597412 27.94177818]
[-224.73593140 20.98991013]
[-237.47203064 13.05208778]
[-249.57133484 4.17377710]
[-260.96450806 -5.59416628]
[-271.58633423 -16.19579124]
[-281.37591553 -27.57037163]
[-290.27725220 -39.65275574]
[-298.23928833 -52.37373734]
[-305.21643066 -65.66044617]
[-311.16876221 -79.43677521]
[-316.06213379 -93.62382507]
[-319.86853027 -108.14031982]
[-322.56616211 -122.90312195]
[-324.13955688 -137.82765198]
[-324.57974243 -152.82844543]
[-323.88415527 -167.81956482]
[-322.05679321 -182.71513367]
[-319.10812378 -197.42984009]
[-315.05502319 -211.87940979]
[-309.92074585 -225.98106384]
[-303.73468018 -239.65402222]
[-296.53222656 -252.81997681]
[-288.35470581 -265.40350342]
[-279.24890137 -277.33251953]
[-269.26699829 -288.53872681]
[-258.46615601 -298.95791626]
[-246.90827942 -308.53039551]
[-234.65953064 -317.20135498]
[-221.79008484 -324.92111206]
[-208.37364197 -331.64547729]
[-194.48709106 -337.33587646]
[-180.20993042 -341.95977783]
[-165.62397766 -345.49066162]
[-150.81274414 -347.90829468]
[-135.86109924 -349.19885254]
[-120.85466766 -349.35491943]
[-105.87940979 -348.37561035]
[-91.02110291 -346.26657104]
[-76.36485291 -343.03982544]
[-61.99461746 -338.71389771]
[-47.99270630 -333.31353760]
[-34.43932343 -326.86968994]
[-21.41209602 -319.41928101]
[-8.98564816 -311.00494385]
[2.76884198 -301.67492676]
[13.78404522 -291.48263550]
[23.99686623 -280.48648071]
[33.34880829 -268.74942017]
[41.78630066 -256.33868408]
[49.26101685 -243.32537842]
[55.73013687 -229.78404236]
[61.15661240 -215.79223633]
[65.50935364 -201.43009949]
[68.76343536 -186.77989197]
[70.90021515 -171.92555237]
[71.90744781 -156.95214844]
[71.77937317 -141.94544983]
[70.51672363 -126.99141693]
[68.12672424 -112.17570496]
[64.62307739 -97.58317566]
[60.02583694 -83.29742432]
[54.36134338 -69.40026855]
[47.66204453 -55.97131729]
[39.96630859 -43.08748627]
[31.31822205 -30.82257843]
[21.76731873 -19.24684525]
[11.36830521 -8.42658997]
[21.36647797 2.75538445]
[31.36464882 13.93735886]
[41.36282349 25.11933327]
[51.44396210 36.22656631]
[65.75804138 40.34438705]
[69.41815186 55.73640060]
[79.58170319 66.76828003]
[89.74524689 77.80015564]
[99.90879822 88.83203125]
[110.15419006 99.78794098]
[120.48085785 110.66727448]
[130.80752563 121.54660797]
[141.13418579 132.42594910]
[151.46086121 143.30528259]
[161.78753662 154.18461609]
[174.63735962 155.30020142]
[183.01449585 164.57421875]
[182.83280945 176.66940308]
[192.99635315 187.70127869]
[203.15991211 198.73315430]
[213.32345581 209.76504517]
[228.36450195 214.67193604]
[231.29765320 229.27487183]
[241.46119690 240.30674744]
[253.25329590 231.02371216]
[265.72930908 222.68240356]
[278.81417847 215.33297729]
[292.42926025 209.01963806]
[306.49261475 203.78036499]
[320.91970825 199.64663696]
[335.62374878 196.64335632]
[350.51629639 194.78855896]
[365.50778198 194.09339905]
[380.50808716 194.56207275]
[395.42694092 196.19174194]
[410.17465210 198.97262573]
[424.66250610 202.88798523]
[438.80340576 207.91427612]
[452.51226807 214.02127075]
[465.70666504 221.17225647]
[478.30722046 229.32418823]
[490.23815918 238.42807007]
[501.42776489 248.42913818]
[511.80868530 259.26724243]
[521.31854248 270.87722778]
[529.90008545 283.18920898]
[537.50170898 296.12921143]
[544.07775879 309.61935425]
[549.58862305 323.57852173]
[554.00122070 337.92279053]
[557.28887939 352.56585693]
[559.43200684 367.41964722]
[560.41760254 382.39486694]
[560.23974609 397.40142822]
[558.89953613 412.34906006]
[556.40496826 427.14788818]
[552.77117920 441.70892334]
[548.01989746 455.94458008]
[542.17974854 469.76922607]
[535.28582764 483.09973145]
[527.37963867 495.85592651]
[518.50872803 507.96109009]
[508.72637939 519.34240723]
[498.09152222 529.93145752]
[486.66806030 539.66455078]
[474.52468872 548.48309326]
[461.73446655 556.33410645]
[448.37429810 563.17034912]
[434.52456665 568.95074463]
[420.26852417 573.64050293]
[405.69192505 577.21142578]
[390.88244629 579.64196777]
[375.92916870 580.91760254]
[360.92196655 581.03063965]
[345.95117188 579.98040771]
[331.10675049 577.77319336]
[316.47802734 574.42224121]
[302.15298462 569.94775391]
[288.21771240 564.37664795]
[274.75610352 557.74243164]
[261.84906006 550.08496094]
[249.57424927 541.45031738]
[238.00547791 531.89044189]
[227.21229553 521.46276855]
[217.25965881 510.23010254]
[208.20738220 498.25991821]
[200.10993958 485.62426758]
[193.01602173 472.39910889]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 146]
[16 145]
[18 143]
[19 142]
[20 141]
[21 140]
[23 137]
[24 136]
[25 135]
[26 134]
[27 133]
[28 132]
[30 131]
[31 130]
[32 129]
[33 128]
[35 126]
[37 125]
[38 124]
[39 123]
[40 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
