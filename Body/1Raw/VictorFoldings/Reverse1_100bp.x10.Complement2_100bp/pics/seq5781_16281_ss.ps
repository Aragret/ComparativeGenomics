%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[129.80732727 484.72076416]
[131.90420532 469.81811523]
[136.86843872 455.61096191]
[144.50923157 442.64544678]
[154.53288269 431.41992188]
[166.55410767 422.36584473]
[180.11083984 415.83123779]
[176.35453796 401.30917358]
[172.59823608 386.78710938]
[168.84193420 372.26504517]
[155.88459778 360.42974854]
[160.95228577 342.72665405]
[156.98019409 328.26211548]
[153.00810242 313.79760742]
[142.17674255 303.57354736]
[145.98345947 288.21713257]
[142.01136780 273.75262451]
[138.03927612 259.28808594]
[134.06716919 244.82357788]
[130.09507751 230.35905457]
[126.12297821 215.89453125]
[122.15088654 201.43000793]
[118.17878723 186.96546936]
[101.75254822 178.88499451]
[96.35659790 161.05813599]
[105.86486053 144.67195129]
[101.46385956 130.33210754]
[97.06285858 115.99225616]
[87.12122345 109.92553711]
[83.78712463 98.76645660]
[88.77113342 88.24025726]
[84.47700500 73.86804199]
[80.07601166 59.52819824]
[75.67501068 45.18835068]
[71.27400970 30.84850311]
[63.80627060 17.83955002]
[53.64272690 6.80767250]
[43.47917938 -4.22420454]
[33.31563187 -15.25608158]
[22.90825844 -26.05823898]
[12.26224995 -36.62528610]
[1.61624110 -47.19233322]
[-9.02976799 -57.75938034]
[-19.67577553 -68.32643127]
[-31.14967537 -58.64927673]
[-43.43394852 -50.02406693]
[-56.43245697 -42.51830673]
[-70.04346466 -36.19073868]
[-84.16043854 -31.09088326]
[-98.67290497 -27.25865746]
[-113.46727753 -24.72405243]
[-128.42776489 -23.50690651]
[-143.43728638 -23.61674690]
[-158.37835693 -25.05270958]
[-173.13404846 -27.80356216]
[-187.58886719 -31.84776878]
[-201.62969971 -37.15368271]
[-215.14665222 -43.67977142]
[-228.03390503 -51.37496567]
[-240.19064331 -60.17903137]
[-251.52168274 -70.02307129]
[-261.93835449 -80.83003235]
[-271.35913086 -92.51534271]
[-279.71029663 -104.98754120]
[-286.92648315 -118.14901733]
[-292.95120239 -131.89675903]
[-297.73727417 -146.12318420]
[-301.24731445 -160.71691895]
[-303.45379639 -175.56378174]
[-304.33947754 -190.54754639]
[-303.89739990 -205.55094910]
[-302.13101196 -220.45657349]
[-299.05419922 -235.14775085]
[-294.69100952 -249.50950623]
[-289.07556152 -263.42944336]
[-282.25186157 -276.79861450]
[-274.27325439 -289.51235962]
[-265.20223999 -301.47122192]
[-255.10977173 -312.58157349]
[-244.07487488 -322.75646973]
[-232.18388367 -331.91625977]
[-219.52986145 -339.98928833]
[-206.21186829 -346.91232300]
[-192.33412170 -352.63122559]
[-178.00524902 -357.10122681]
[-163.33738708 -360.28732300]
[-148.44532776 -362.16461182]
[-133.44561768 -362.71835327]
[-118.45568085 -361.94427490]
[-103.59281158 -359.84838867]
[-88.97334290 -356.44708252]
[-74.71169281 -351.76702881]
[-60.91947556 -345.84481812]
[-47.70464325 -338.72683716]
[-35.17061996 -330.46875000]
[-23.41550255 -321.13522339]
[-12.53129196 -310.79928589]
[-2.60317302 -299.54183960]
[6.29115105 -287.45098877]
[14.08206940 -274.62136841]
[20.70860672 -261.15338135]
[26.11889839 -247.15245056]
[30.27060127 -232.72811890]
[33.13122559 -217.99331665]
[34.67837906 -203.06335449]
[34.89995193 -188.05506897]
[33.79421234 -173.08593750]
[31.36981392 -158.27310181]
[27.64573288 -143.73251343]
[22.65111160 -129.57795715]
[16.42504501 -115.92022705]
[9.01625919 -102.86620331]
[0.48273838 -90.51805878]
[-9.10872841 -78.97243500]
[1.53728008 -68.40538788]
[12.18328857 -57.83834076]
[22.82929802 -47.27129364]
[33.47530746 -36.70424652]
[36.98358917 -36.35170364]
[40.49541473 -34.28237152]
[43.20574570 -30.51310158]
[44.34750748 -25.41962814]
[54.51105499 -14.38775158]
[64.67460632 -3.35587430]
[74.83815002 7.67600298]
[70.63042450 -6.72174072]
[69.27216339 -21.66011810]
[70.81416321 -36.58065033]
[75.19876862 -50.92551804]
[82.26205444 -64.15843201]
[91.73995972 -75.78466797]
[103.27814484 -85.36956787]
[116.44524384 -92.55479431]
[130.74899292 -97.07173157]
[145.65464783 -98.75149536]
[160.60493469 -97.53129578]
[175.04093933 -93.45674896]
[188.42294312 -86.68019104]
[200.25067139 -77.45495605]
[210.08192444 -66.12594604]
[217.54914856 -53.11669922]
[222.37318420 -38.91357803]
[224.37368774 -24.04757690]
[223.47586060 -9.07447147]
[219.71325684 5.44595814]
[213.22657776 18.97085571]
[204.25828552 30.99458122]
[193.14370728 41.06761932]
[180.29835510 48.81338120]
[166.20245361 53.94229126]
[151.38301086 56.26259613]
[136.39402771 55.68754959]
[121.79591370 52.23865128]
[108.13440704 46.04484177]
[95.92026520 37.33767700]
[85.61386108 26.44750404]
[90.01486206 40.78734970]
[94.41585541 55.12719727]
[98.81685638 69.46704865]
[103.78450775 74.93917847]
[103.17491150 84.05324554]
[115.57922363 95.34524536]
[111.40270996 111.59125519]
[115.80371094 125.93110657]
[120.20470428 140.27095032]
[131.59092712 143.69012451]
[139.82852173 152.09506226]
[142.95367432 163.31678772]
[140.30145264 174.53648376]
[132.64331055 182.99337769]
[136.61540222 197.45790100]
[140.58750916 211.92242432]
[144.55960083 226.38694763]
[148.53169250 240.85147095]
[152.50379944 255.31599426]
[156.47589111 269.78051758]
[160.44798279 284.24505615]
[171.56344604 295.50369263]
[167.47262573 309.82550049]
[171.44471741 324.29003906]
[175.41680908 338.75454712]
[186.22019958 345.80081177]
[189.23078918 357.93011475]
[183.36399841 368.50875854]
[187.12030029 383.03079224]
[190.87660217 397.55285645]
[194.63290405 412.07492065]
[209.65785217 411.21655273]
[224.56153870 413.30618286]
[238.77107239 418.26351929]
[251.74029541 425.89801025]
[262.97070312 435.91622925]
[272.03060913 447.93304443]
[278.57180786 461.48660278]
[282.34286499 476.05593872]
[283.19882202 491.08102417]
[281.10675049 505.98437500]
[276.14712524 520.19311523]
[268.51052856 533.16107178]
[258.49050903 544.38989258]
[246.47221375 553.44787598]
[232.91760254 559.98687744]
[218.34765625 563.75555420]
[203.32241821 564.60906982]
[188.41941833 562.51458740]
[174.21148682 557.55267334]
[161.24473572 549.91394043]
[150.01756287 539.89215088]
[140.96154785 527.87237549]
[134.42472839 514.31671143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 187]
[8 186]
[9 185]
[10 184]
[12 181]
[13 180]
[14 179]
[16 177]
[17 176]
[18 175]
[19 174]
[20 173]
[21 172]
[22 171]
[23 170]
[26 165]
[27 164]
[28 163]
[31 161]
[32 159]
[33 158]
[34 157]
[35 156]
[36 125]
[37 124]
[38 123]
[39 122]
[40 118]
[41 117]
[42 116]
[43 115]
[44 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
