%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[127.84241486 629.21087646]
[127.17263031 614.22583008]
[126.50284576 599.24078369]
[123.06381226 592.69897461]
[125.93632507 584.02801514]
[125.48971558 569.03460693]
[122.14846039 562.44238281]
[125.14975739 553.81512451]
[124.92642975 538.81677246]
[124.70310211 523.81842041]
[114.90456390 509.25973511]
[124.00669098 493.25244141]
[123.56008148 478.25909424]
[115.44727325 465.76785278]
[122.77026367 451.74340820]
[122.32365417 436.75006104]
[121.87705231 421.75671387]
[121.43044281 406.76336670]
[107.86063385 402.72930908]
[96.18237305 394.68945312]
[87.54495239 383.41891479]
[82.80335236 370.01156616]
[82.43366241 355.77380371]
[86.48526001 342.09732056]
[94.57472992 330.32302856]
[105.92209625 321.60952759]
[119.42599487 316.81930542]
[111.50006104 304.20864868]
[119.03104401 290.29479980]
[118.80771637 275.29647827]
[118.58438873 260.29812622]
[117.35741425 245.34838867]
[115.13229370 230.51435852]
[105.59262085 219.07565308]
[111.19718170 204.28039551]
[108.97206879 189.44635010]
[106.74694824 174.61231995]
[104.52182770 159.77827454]
[101.85603333 145.01704407]
[98.75192261 130.34175110]
[95.64781189 115.66644287]
[84.11772156 103.48313141]
[89.49098969 87.59275055]
[86.16873169 72.96529388]
[75.56707764 61.22154999]
[80.29332733 47.09668350]
[76.97106934 32.46922302]
[73.10676575 17.97552872]
[68.70576477 3.63568211]
[57.26001740 -7.28701925]
[60.92261505 -21.72428513]
[56.52161789 -36.06413269]
[52.12062073 -50.40398026]
[47.71962357 -64.74382782]
[37.83186722 -69.27603912]
[32.18694687 -78.31568146]
[32.44379807 -88.75035095]
[38.27626038 -97.14054871]
[34.30416489 -111.60507202]
[30.33206749 -126.06959534]
[26.35997200 -140.53411865]
[22.64489746 -144.20089722]
[20.88391876 -148.49650574]
[20.98933792 -152.57130432]
[22.54894829 -155.73358154]
[19.22668839 -170.36103821]
[15.90442848 -184.98849487]
[12.35678959 -188.81750488]
[10.78937817 -193.18746948]
[11.07664108 -197.25347900]
[12.77589703 -200.34295654]
[9.85486317 -203.55567932]
[8.26772594 -207.16754150]
[7.97616768 -210.71018982]
[8.79370785 -213.77584839]
[10.41827965 -216.06033325]
[8.63581371 -230.95405579]
[6.85334778 -245.84777832]
[5.07088184 -260.74148560]
[3.28841615 -275.63519287]
[1.50595021 -290.52893066]
[-2.62105107 -298.67788696]
[-0.19047800 -305.65744019]
[-1.75100100 -320.57604980]
[-3.31152391 -335.49465942]
[-4.87204695 -350.41326904]
[-6.54358768 -365.31982422]
[-8.32605362 -380.21353149]
[-10.10851955 -395.10726929]
[-25.07174873 -396.94171143]
[-39.16090775 -402.30447388]
[-51.55687714 -410.88369751]
[-61.53896332 -422.18066406]
[-68.52682495 -435.53854370]
[-72.11420441 -450.18075562]
[-72.09252167 -465.25601196]
[-68.46304321 -479.88781738]
[-61.43679047 -493.22555542]
[-51.42224884 -504.49377441]
[-39.00165558 -513.03735352]
[-24.89713097 -518.35949707]
[-9.92868710 -520.15093994]
[5.03342628 -518.30737305]
[19.11933327 -512.93609619]
[31.51009560 -504.34936523]
[41.48533249 -493.04635620]
[48.46509933 -479.68423462]
[52.04359436 -465.03985596]
[52.01277542 -449.96463013]
[48.37442780 -435.33499146]
[41.34008789 -422.00152588]
[31.31871796 -410.73937988]
[18.89294815 -402.20336914]
[4.78519773 -396.88973999]
[6.56766367 -381.99600220]
[8.35012913 -367.10229492]
[12.26619530 -360.83441162]
[10.04655743 -351.97378540]
[11.60708046 -337.05517578]
[13.16760349 -322.13656616]
[14.72812653 -307.21795654]
[16.39966774 -292.31140137]
[18.18213272 -277.41766357]
[19.96459961 -262.52395630]
[21.74706459 -247.63023376]
[23.52953148 -232.73652649]
[25.31199646 -217.84280396]
[27.53711510 -203.00875854]
[30.53188896 -188.31076050]
[33.85414886 -173.68328857]
[37.17640686 -159.05583191]
[40.82449341 -144.50621033]
[44.79659271 -130.04168701]
[48.76868820 -115.57716370]
[52.74078369 -101.11264038]
[67.45513916 -88.56772614]
[62.05947113 -69.14482117]
[66.46046448 -54.80497742]
[70.86146545 -40.46512985]
[75.26246643 -26.12528229]
[86.39342499 -16.22826385]
[83.04561615 -0.76531595]
[87.44660950 13.57453156]
[96.67347717 1.74807942]
[111.67021942 1.43553782]
[121.38179779 12.86730003]
[118.64920044 27.61629677]
[105.48679352 34.81011581]
[91.59852600 29.14696312]
[94.92079163 43.77442169]
[105.28481293 54.47191238]
[100.79619598 69.64303589]
[104.11845398 84.27049255]
[113.58132935 91.05983734]
[116.07622528 102.43598175]
[110.32312012 112.56233978]
[113.42723083 127.23764038]
[116.53134155 141.91294861]
[119.54673004 145.03726196]
[121.24070740 148.60026550]
[121.63761139 152.13265991]
[120.91171265 155.22129822]
[119.35587311 157.55314636]
[121.58099365 172.38719177]
[123.80610657 187.22123718]
[126.03122711 202.05528259]
[135.73005676 214.55500793]
[129.96633911 228.28923035]
[132.19145203 243.12327576]
[139.66082764 230.11526489]
[152.92779541 223.11613464]
[167.88142395 224.29466248]
[179.88818359 233.28564453]
[185.22764587 247.30314636]
[182.24530029 262.00366211]
[171.86529541 272.83212280]
[157.30397034 276.43319702]
[143.07330322 271.69100952]
[133.58271790 260.07479858]
[133.80604553 275.07315063]
[134.02937317 290.07147217]
[141.97128296 303.75491333]
[134.42433167 316.59597778]
[149.50265503 321.74224854]
[161.88633728 331.72372437]
[170.08967590 345.31921387]
[173.13653564 360.87548828]
[170.67658997 376.50811768]
[163.02539062 390.32989502]
[151.12413025 400.67855835]
[136.42379761 406.31677246]
[136.87040710 421.31011963]
[137.31700134 436.30346680]
[137.76361084 451.29681396]
[145.90837097 464.86050415]
[138.55343628 477.81250000]
[139.00004578 492.80584717]
[147.83555603 502.20248413]
[147.89886475 514.69964600]
[139.70143127 523.59509277]
[139.92475891 538.59344482]
[140.14808655 553.59179688]
[140.48306274 568.58801270]
[140.92967224 583.58135986]
[141.48788452 598.57098389]
[142.15766907 613.55603027]
[142.82745361 628.54107666]
[152.10424805 642.06414795]
[144.78817749 656.74090576]
[128.40538025 657.47314453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 205]
[5 204]
[6 203]
[8 202]
[9 201]
[10 200]
[12 197]
[13 196]
[15 194]
[16 193]
[17 192]
[18 191]
[27 183]
[29 181]
[30 180]
[31 179]
[32 169]
[33 168]
[35 166]
[36 165]
[37 164]
[38 163]
[39 158]
[40 157]
[41 156]
[43 153]
[44 152]
[46 150]
[47 149]
[48 143]
[49 142]
[51 140]
[52 139]
[53 138]
[54 137]
[58 135]
[59 134]
[60 133]
[61 132]
[65 131]
[66 130]
[67 129]
[71 128]
[76 127]
[77 126]
[78 125]
[79 124]
[80 123]
[81 122]
[83 121]
[84 120]
[85 119]
[86 118]
[87 116]
[88 115]
[89 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
