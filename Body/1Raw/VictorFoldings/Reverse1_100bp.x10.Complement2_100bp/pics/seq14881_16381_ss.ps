%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAAGUCGGUAUUAAAUGCAGAGCUCACUACACCCGCUAACUACUUUUCCGCCAACUCCGCAGACCACUCAUCACGUACCGAUCCUUAUCAGGACACCAxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[60.56439972 561.94189453]
[47.45428085 569.29205322]
[33.37576675 574.55474854]
[18.65888023 577.60656738]
[3.64860225 578.37597656]
[-11.30320168 576.84497070]
[-25.84604073 573.04943848]
[-39.63900757 567.07830811]
[-52.35877991 559.07153320]
[-63.70718765 549.21691895]
[-73.41819763 537.74536133]
[-81.26419067 524.92578125]
[-87.06122589 511.05874634]
[-90.67341614 496.46929932]
[-92.01609039 481.49938965]
[-91.05777740 466.50000000]
[-87.82093811 451.82269287]
[-82.38144684 437.81155396]
[-74.86681366 424.79498291]
[-65.45319366 413.07815552]
[-54.36125565 402.93569946]
[-41.85100937 394.60537720]
[-28.21571541 388.28247070]
[-13.77500153 384.11520386]
[1.13261986 382.20123291]
[16.15769196 382.58544922]
[18.82348824 367.82421875]
[21.48928452 353.06301880]
[24.15507889 338.30178833]
[18.80283546 324.40203857]
[28.86952782 312.19662476]
[23.51728439 298.29690552]
[33.58397675 286.09146118]
[36.24977493 271.33026123]
[38.91556931 256.56903076]
[41.58136368 241.80781555]
[44.24716187 227.04660034]
[46.58264542 212.22953796]
[48.58666229 197.36401367]
[40.03223419 209.68560791]
[28.38916397 219.14282227]
[14.57566738 224.98980713]
[-0.31886393 226.76547241]
[-15.11978531 224.32974243]
[-28.65983391 217.87474060]
[-39.87118530 207.90951538]
[-47.86966324 195.21998596]
[-52.02447891 180.80688477]
[-52.00796509 165.80690002]
[-47.82142258 151.40296936]
[-39.79501724 138.73107910]
[-28.56175041 128.79057312]
[-15.00752163 122.36540222]
[-0.20127289 119.96228027]
[14.68931198 121.77072144]
[28.48990059 127.64811707]
[40.11211777 137.13095093]
[48.63938904 149.47135925]
[53.39921951 163.69612122]
[54.01588440 178.68687439]
[60.29324341 165.06356812]
[66.57060242 151.44024658]
[62.18420410 142.21134949]
[63.63214493 131.87443542]
[70.67542267 123.87615967]
[81.16983032 121.01678467]
[87.85002899 107.58641052]
[87.17493439 93.62088776]
[98.71959686 85.73339844]
[105.39978790 72.30302429]
[112.07998657 58.87264633]
[118.76017761 45.44226837]
[125.44037628 32.01189423]
[131.30934143 18.20771599]
[136.34625244 4.07868671]
[141.38316345 -10.05034256]
[146.42008972 -24.17937279]
[141.60708618 -36.14590454]
[146.09321594 -47.81031036]
[156.96447754 -53.11526108]
[162.21119690 -67.16773224]
[159.78968811 -82.80252838]
[171.48999023 -92.01947784]
[175.35429382 -106.51316833]
[177.80001831 -121.31243896]
[180.24575806 -136.11170959]
[182.69148254 -150.91098022]
[169.89849854 -143.07901001]
[155.28283691 -146.45275879]
[147.21697998 -159.09957886]
[150.32144165 -173.77481079]
[162.81784058 -182.07179260]
[177.54766846 -179.23767090]
[186.07279968 -166.89685059]
[182.03787231 -182.19488525]
[192.71580505 -192.57907104]
[196.47210693 -207.10112000]
[200.22840881 -221.62318420]
[203.98471069 -236.14524841]
[207.74101257 -250.66729736]
[194.30938721 -257.47946167]
[182.65647888 -267.02011108]
[173.32733154 -278.84301758]
[166.75828552 -292.39520264]
[163.25656128 -307.04278564]
[162.98597717 -322.10070801]
[165.95915222 -336.86465454]
[172.03704834 -350.64410400]
[180.93539429 -362.79455566]
[192.23797607 -372.74774170]
[205.41618347 -380.03808594]
[219.85362244 -384.32464600]
[234.87503052 -385.40689087]
[249.77783203 -383.23422241]
[263.86499023 -377.90829468]
[276.47766113 -369.67816162]
[287.02587891 -358.92877197]
[295.01629639 -346.16293335]
[300.07519531 -331.97766113]
[301.96597290 -317.03646851]
[300.60015869 -302.03817749]
[296.04168701 -287.68429565]
[288.50372314 -274.64614868]
[278.33883667 -263.53356934]
[266.02246094 -254.86633301]
[252.13066101 -249.04980469]
[237.31318665 -246.35603333]
[222.26306152 -246.91099548]
[218.50675964 -232.38894653]
[214.75047302 -217.86688232]
[210.99417114 -203.34481812]
[207.23786926 -188.82276917]
[211.54147339 -174.56344604]
[200.59486389 -163.14054871]
[197.49075317 -148.46525574]
[195.04502869 -133.66598511]
[192.59928894 -118.86671448]
[190.15356445 -104.06744385]
[199.98466492 -115.39658356]
[213.53909302 -121.82132721]
[228.53271484 -122.25897980]
[242.43881226 -116.63578796]
[252.91398621 -105.89936829]
[258.19299316 -91.85898590]
[257.38619995 -76.88069916]
[250.62956238 -63.48861313]
[239.06173706 -53.93952179]
[224.63206482 -49.84262085]
[209.77221680 -51.88830566]
[196.98632812 -59.73184586]
[188.42904663 -72.05146790]
[185.54246521 -86.77275848]
[188.33924866 -72.14308929]
[176.26365662 -61.92101288]
[171.01693726 -47.86854172]
[174.84960938 -30.74319458]
[160.54911804 -19.14245605]
[155.51219177 -5.01342678]
[150.47528076 9.11560249]
[145.43836975 23.24463272]
[158.53141785 15.92535305]
[173.43930054 17.58526421]
[184.60171509 27.60526276]
[187.85537720 42.24813461]
[181.98674011 56.05244827]
[169.18467712 63.86954117]
[154.22401428 62.78382874]
[142.68473816 53.20025635]
[138.87074280 38.69208908]
[132.19055176 52.12246323]
[125.51036072 65.55284119]
[118.83016968 78.98321533]
[112.14997101 92.41358948]
[112.82506561 106.37911224]
[101.28040314 114.26660156]
[94.60021210 127.69697571]
[96.75679779 147.73973083]
[80.19392395 157.71760559]
[73.91655731 171.34092712]
[67.63919830 184.96423340]
[63.45219040 199.36802673]
[61.44817352 214.23355103]
[63.43239594 219.06158447]
[63.37226868 223.70375061]
[61.68093491 227.41244507]
[59.00837708 229.71240234]
[56.34258270 244.47361755]
[53.67678452 259.23483276]
[51.01099014 273.99606323]
[48.34519577 288.75726318]
[53.50676346 303.71282959]
[43.63074493 314.86242676]
[48.79231644 329.81799316]
[38.91629791 340.96759033]
[36.25049973 355.72879028]
[33.58470535 370.49002075]
[30.91890907 385.25125122]
[45.12926102 390.14678955]
[58.42572021 397.15423584]
[70.49659729 406.10937500]
[81.05893707 416.80224609]
[89.86514282 428.98220825]
[96.70877838 442.36370850]
[101.42942047 456.63311768]
[103.91641998 471.45593262]
[104.11146545 486.48464966]
[102.00999451 501.36697388]
[97.66126251 515.75408936]
[91.16722107 529.30871582]
[82.68008423 541.71313477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 197]
[27 196]
[28 195]
[29 194]
[31 192]
[33 190]
[34 189]
[35 188]
[36 187]
[37 186]
[38 182]
[39 181]
[60 180]
[61 179]
[62 178]
[66 176]
[67 175]
[69 173]
[70 172]
[71 171]
[72 170]
[73 169]
[74 160]
[75 159]
[76 158]
[77 157]
[80 155]
[81 154]
[83 152]
[84 138]
[85 137]
[86 136]
[87 135]
[94 134]
[96 132]
[97 131]
[98 130]
[99 129]
[100 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
