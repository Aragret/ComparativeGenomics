%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[80.68020630 743.82830811]
[66.47329712 738.89532471]
[53.33891678 731.57006836]
[41.67621613 722.07519531]
[31.83960533 710.69921875]
[24.12800980 697.78790283]
[18.77577972 683.73358154]
[15.94555855 668.96331787]
[15.72335529 653.92596436]
[18.11592293 639.07849121]
[23.05055428 624.87213135]
[30.37728882 611.73858643]
[39.87347794 600.07696533]
[51.25054550 590.24163818]
[64.16275024 582.53149414]
[78.21770477 577.18090820]
[92.98829651 574.35235596]
[92.76496887 559.35400391]
[92.54164124 544.35565186]
[92.31831360 529.35729980]
[81.48501587 519.19982910]
[81.04486847 503.99255371]
[91.77246094 492.69845581]
[91.54913330 477.70010376]
[91.32580566 462.70178223]
[78.76859283 451.51449585]
[78.17617035 434.36911011]
[90.40325165 421.85839844]
[89.95664215 406.86505127]
[89.51004028 391.87170410]
[79.49582672 377.46051025]
[88.35861969 361.31948853]
[87.68883514 346.33444214]
[87.01905060 331.34942627]
[86.23773193 316.36978149]
[85.34490967 301.39636230]
[84.45209503 286.42297363]
[83.55928040 271.44955444]
[74.37379456 283.30816650]
[60.00493622 287.61349487]
[45.81193542 282.75976562]
[37.08842850 270.55731201]
[37.08807373 255.55729675]
[45.81099701 243.35440063]
[60.00376511 238.50000000]
[74.37283325 242.80464172]
[83.55928040 254.66392517]
[84.45209503 239.69052124]
[85.34490967 224.71711731]
[78.37886810 211.55187988]
[86.92385101 198.23669434]
[79.95780945 185.07145691]
[88.50279236 171.75628662]
[89.39561462 156.78288269]
[90.28842926 141.80947876]
[91.18124390 126.83607483]
[91.96256256 111.85643768]
[85.69034576 99.36040497]
[93.05239868 87.47377777]
[85.93902588 73.34188080]
[94.23690796 60.97279358]
[94.90669250 45.98775482]
[95.57647705 31.00271606]
[87.46432495 20.97496605]
[88.33068848 8.50768185]
[97.16702271 0.24658090]
[98.05983734 -14.72682476]
[91.15765381 -28.96306229]
[99.63877869 -41.20723724]
[100.53159332 -56.18064117]
[101.42440796 -71.15404510]
[102.31722260 -86.12745667]
[92.10464478 -97.88929749]
[93.22338867 -113.06173706]
[104.49944305 -122.72539520]
[105.39225769 -137.69879150]
[106.28507233 -152.67221069]
[107.17789459 -167.64561462]
[108.07070923 -182.61901855]
[108.96352386 -197.59242249]
[109.74484253 -212.57205200]
[110.41462708 -227.55709839]
[111.08441162 -242.54212952]
[103.97103882 -256.67404175]
[112.26892853 -269.04312134]
[112.82714081 -284.03274536]
[113.27374268 -299.02609253]
[105.95075989 -313.05050659]
[114.06356812 -325.54177856]
[114.51016998 -340.53512573]
[99.81060791 -343.73471069]
[85.94935608 -349.58111572]
[73.39851379 -357.87515259]
[62.58557129 -368.33435059]
[53.87880707 -380.60247803]
[47.57476807 -394.26168823]
[43.88817215 -408.84674072]
[42.94458008 -423.86087036]
[44.77613068 -438.79272461]
[49.32044220 -453.13369751]
[56.42274094 -466.39538574]
[65.84111786 -478.12603760]
[77.25479126 -487.92617798]
[90.27501678 -495.46200562]
[104.45832825 -500.47680664]
[119.32164764 -502.79980469]
[134.35873413 -502.35189819]
[149.05743408 -499.14834595]
[162.91711426 -493.29821777]
[175.46571350 -485.00079346]
[186.27584839 -474.53866577]
[194.97930908 -462.26818848]
[201.27966309 -448.60729980]
[204.96232605 -434.02127075]
[205.90187073 -419.00686646]
[204.06629944 -404.07550049]
[199.51811218 -389.73574829]
[192.41224670 -376.47598267]
[182.99070740 -364.74786377]
[171.57438660 -354.95080566]
[158.55212402 -347.41848755]
[144.36746216 -342.40750122]
[129.50352478 -340.08850098]
[129.05691528 -325.09515381]
[136.41184998 -312.14315796]
[128.26708984 -298.57946777]
[127.82048798 -283.58612061]
[130.76344299 -276.80667114]
[127.25396729 -268.37332153]
[134.41525269 -255.31326294]
[126.06945038 -241.87234497]
[125.39966583 -226.88731384]
[124.72988129 -211.90226746]
[127.57157898 -205.07977295]
[123.93692780 -196.69960022]
[123.04411316 -181.72619629]
[122.15129852 -166.75279236]
[121.25848389 -151.77938843]
[120.36566162 -136.80598450]
[119.47284698 -121.83257294]
[129.52066040 -110.89745331]
[128.82852173 -95.69956970]
[117.29063416 -85.23464203]
[116.39781952 -70.26123047]
[115.50499725 -55.28782654]
[114.61218262 -40.31442261]
[121.57822418 -27.14918137]
[113.03324127 -13.83400917]
[112.14042664 1.13939679]
[120.82899475 16.38654900]
[110.56151581 31.67250252]
[109.89173126 46.65753937]
[109.22194672 61.64257812]
[116.38322449 74.70264435]
[108.03743744 88.14356232]
[114.30965424 100.63959503]
[106.94760132 112.52622223]
[109.69070435 121.23903656]
[106.15464783 127.72888947]
[105.26183319 142.70230103]
[104.36901855 157.67570496]
[103.47620392 172.64910889]
[110.37837982 186.88534546]
[101.89726257 199.12951660]
[108.79943848 213.36575317]
[100.31832123 225.60992432]
[99.42550659 240.58334351]
[98.53268433 255.55674744]
[98.53268433 270.55673218]
[99.42550659 285.53015137]
[100.31832123 300.50354004]
[101.21113586 315.47695923]
[104.84578705 323.85711670]
[102.00408936 330.67962646]
[102.67387390 345.66467285]
[103.34365845 360.64971924]
[112.31809235 369.91372681]
[112.56746674 382.40859985]
[104.50338745 391.42510986]
[104.94998932 406.41845703]
[105.39659882 421.41180420]
[116.19802856 429.45812988]
[120.33270264 442.07220459]
[116.50406647 454.57916260]
[106.32414246 462.47845459]
[106.54747009 477.47677612]
[106.77079773 492.47512817]
[117.82989502 503.44479370]
[117.84272766 518.65844727]
[107.31665039 529.13397217]
[107.53997803 544.13232422]
[107.76330566 559.13067627]
[107.98663330 574.12902832]
[122.83489990 576.51654053]
[137.04293823 581.44628906]
[150.17897034 588.76861572]
[161.84382629 598.26080322]
[171.68301392 609.63452148]
[179.39753723 622.54412842]
[184.75296021 636.59722900]
[187.58653259 651.36688232]
[187.81214905 666.40417480]
[185.42294312 681.25213623]
[180.49153137 695.45965576]
[173.16778564 708.59484863]
[163.67424011 720.25860596]
[152.29939270 730.09649658]
[139.38894653 737.80957031]
[125.33520508 743.16339111]
[110.56524658 745.99530029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 193]
[18 192]
[19 191]
[20 190]
[23 187]
[24 186]
[25 185]
[28 181]
[29 180]
[30 179]
[32 176]
[33 175]
[34 174]
[35 172]
[36 171]
[37 170]
[38 169]
[47 168]
[48 167]
[49 166]
[51 164]
[53 162]
[54 161]
[55 160]
[56 159]
[57 157]
[59 155]
[61 153]
[62 152]
[63 151]
[66 149]
[67 148]
[69 146]
[70 145]
[71 144]
[72 143]
[75 140]
[76 139]
[77 138]
[78 137]
[79 136]
[80 135]
[81 133]
[82 132]
[83 131]
[85 129]
[86 127]
[87 126]
[89 124]
[90 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
