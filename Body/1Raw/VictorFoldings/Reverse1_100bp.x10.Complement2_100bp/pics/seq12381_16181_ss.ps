%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[53.76461792 737.11285400]
[38.83551407 735.23712158]
[24.53126144 730.56970215]
[11.36895466 723.27929688]
[-0.17559963 713.62939453]
[-9.68507290 701.96893311]
[-16.81570244 688.71942139]
[-21.30972290 674.35974121]
[-23.00467682 659.40899658]
[-21.83929062 644.40771484]
[-17.85569572 629.89819336]
[-11.19789600 616.40484619]
[-2.10656500 604.41546631]
[9.08965015 594.36358643]
[21.98601341 586.61242676]
[36.11632919 581.44226074]
[50.96979904 579.03997803]
[51.41640472 564.04663086]
[51.86301041 549.05328369]
[52.30961609 534.05987549]
[52.64459229 519.06365967]
[52.86791992 504.06530762]
[45.32096863 491.22424316]
[53.26287460 477.54080200]
[53.48620224 462.54248047]
[53.70952988 447.54412842]
[53.93285751 432.54580688]
[54.15618515 417.54745483]
[43.63011169 407.07189941]
[43.64294052 391.85827637]
[54.70204163 380.88858032]
[54.92536926 365.89022827]
[55.14869690 350.89190674]
[55.37202454 335.89355469]
[47.17459869 326.99813843]
[47.23791122 314.50094604]
[56.07342148 305.10430908]
[56.52002716 290.11096191]
[56.96663666 275.11761475]
[57.41324234 260.12426758]
[57.85984802 245.13092041]
[49.85919189 257.81909180]
[37.65653229 266.54232788]
[23.06205750 270.00662231]
[8.24077320 267.69805908]
[-4.60867310 259.95907593]
[-13.58014107 247.93772888]
[-17.34276772 233.41731262]
[-15.33838940 218.55183411]
[-7.86434364 205.54649353]
[3.97063947 196.33058167]
[18.41090965 192.27119446]
[33.31434250 193.97053528]
[46.47009659 201.17651367]
[55.92659760 212.82017517]
[60.28083420 227.17231750]
[63.82050705 212.59594727]
[67.36018372 198.01957703]
[56.87826538 189.26477051]
[51.16359711 176.78794861]
[51.38323975 163.00022888]
[57.55133057 150.59326172]
[68.51519775 142.01365662]
[82.17036438 138.98063660]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[88.03550720 72.80058289]
[92.05180359 58.12665558]
[104.97610474 50.81242752]
[108.73240662 36.29036713]
[112.48870850 21.76831055]
[111.09226227 16.73869324]
[111.70359802 12.13656807]
[113.82366180 8.65513134]
[116.75058746 6.68905926]
[121.15158081 -7.65078783]
[125.55258179 -21.99063492]
[129.95358276 -36.33048248]
[134.35458374 -50.67033005]
[138.75556946 -65.01017761]
[143.04969788 -79.38239288]
[145.49542236 -94.18166351]
[146.16520691 -109.16670227]
[146.83499146 -124.15174103]
[147.50477600 -139.13677979]
[148.17457581 -154.12181091]
[141.06118774 -168.25370789]
[149.35908508 -180.62280273]
[150.02886963 -195.60783386]
[150.69865417 -210.59288025]
[151.36843872 -225.57791138]
[152.03822327 -240.56295776]
[152.70800781 -255.54798889]
[153.26622009 -270.53759766]
[153.71282959 -285.53094482]
[154.15942383 -300.52429199]
[140.06674194 -306.10748291]
[128.73558044 -316.17626953]
[121.53421783 -329.51480103]
[119.33227539 -344.51239014]
[122.39562988 -359.35797119]
[130.35438538 -372.25891113]
[142.24746704 -381.65731812]
[156.63873291 -386.41833496]
[171.79037476 -385.96701050]
[185.87274170 -380.35787964]
[197.18533325 -370.26821899]
[204.36210632 -356.91644287]
[206.53640747 -341.91482544]
[203.44569397 -327.07492065]
[195.46318054 -314.18865967]
[183.55279541 -304.81216431]
[169.15278625 -300.07769775]
[168.70617676 -285.08435059]
[168.25956726 -270.09100342]
[171.20252991 -263.31155396]
[167.69303894 -254.87820435]
[167.02325439 -239.89317322]
[166.35346985 -224.90812683]
[165.68368530 -209.92309570]
[165.01390076 -194.93804932]
[164.34411621 -179.95301819]
[171.50540161 -166.89294434]
[163.15960693 -153.45202637]
[162.48982239 -138.46699524]
[161.82003784 -123.48194885]
[161.15025330 -108.49691010]
[160.48046875 -93.51187134]
[168.31738281 -106.30181885]
[180.01289368 -115.69410706]
[194.19300842 -120.58534241]
[209.19187927 -120.40090942]
[223.24743652 -115.16246796]
[234.70846558 -105.48543549]
[242.22851562 -92.50665283]
[244.92414856 -77.75085449]
[242.47868347 -62.95153809]
[235.17941284 -49.84731674]
[223.88385010 -39.97765350]
[209.91897583 -34.50203323]
[194.92538452 -34.06372452]
[180.66450500 -38.71421432]
[168.81167603 -47.90717697]
[160.75936890 -60.56262589]
[157.45347595 -75.19538116]
[158.60496521 -67.89497375]
[153.09542847 -60.60917664]
[148.69442749 -46.26933289]
[144.29342651 -31.92948341]
[139.89242554 -17.58963776]
[135.49142456 -3.24978971]
[131.09043884 11.09005737]
[127.01076508 25.52461052]
[123.25446320 40.04666901]
[119.49816895 54.56872940]
[127.25495911 67.23236847]
[123.65241241 82.01330566]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[96.69242859 142.73693848]
[108.60406494 154.20448303]
[113.08155060 170.02369690]
[108.99394226 185.85115051]
[97.54857635 197.39062500]
[81.93655396 201.55924988]
[78.39688110 216.13562012]
[74.85720825 230.71199036]
[72.85319519 245.57752991]
[72.40659332 260.57086182]
[71.95998383 275.56423950]
[71.51338196 290.55758667]
[71.06677246 305.55093384]
[80.16889954 321.55819702]
[70.37036133 336.11688232]
[70.14703369 351.11523438]
[69.92370605 366.11355591]
[69.70037842 381.11190796]
[80.42797089 392.40600586]
[79.98782349 407.61328125]
[69.15452576 417.77078247]
[68.93119812 432.76913452]
[68.70787048 447.76745605]
[68.48453522 462.76580811]
[68.26120758 477.76412964]
[75.79219055 491.67797852]
[67.86625671 504.28863525]
[67.64292908 519.28698730]
[70.64422607 527.91424561]
[67.30296326 534.50653076]
[66.85636139 549.49987793]
[66.40975189 564.49322510]
[65.96315002 579.48657227]
[80.64729309 582.76867676]
[94.44482422 588.77075195]
[106.85696411 597.27575684]
[117.43502808 607.97625732]
[125.79662323 620.48547363]
[131.63948059 634.35119629]
[134.75239563 649.07214355]
[135.02281189 664.11614990]
[132.44099426 678.93945312]
[127.10023499 693.00622559]
[119.19361877 705.80786133]
[109.00695801 716.88165283]
[96.90850067 725.82720947]
[83.33560181 732.32128906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 196]
[18 195]
[19 194]
[20 193]
[21 191]
[22 190]
[24 188]
[25 187]
[26 186]
[27 185]
[28 184]
[31 181]
[32 180]
[33 179]
[34 178]
[37 176]
[38 175]
[39 174]
[40 173]
[41 172]
[56 171]
[57 170]
[58 169]
[64 164]
[65 163]
[66 162]
[68 160]
[71 157]
[72 156]
[73 155]
[77 154]
[78 153]
[79 152]
[80 151]
[81 150]
[82 149]
[83 147]
[84 130]
[85 129]
[86 128]
[87 127]
[88 126]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
