%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[121.72797394 549.35095215]
[114.83323669 535.99572754]
[110.05807495 521.74444580]
[107.51443481 506.93127441]
[107.26193237 491.90341187]
[109.30649567 477.01312256]
[113.60019684 462.60949707]
[120.04238129 449.03015137]
[128.48204041 436.59341431]
[138.72132874 425.59078979]
[150.52023315 416.28024292]
[163.60215759 408.88000488]
[177.66044617 403.56353760]
[174.55633545 388.88824463]
[171.45222473 374.21292114]
[168.34811401 359.53762817]
[156.65156555 356.28707886]
[147.39219666 348.32485962]
[142.36720276 337.11544800]
[142.58619690 324.76104736]
[148.06896973 313.60720825]
[157.83010864 305.79776001]
[155.16432190 291.03652954]
[152.49851990 276.27529907]
[149.83271790 261.51409912]
[147.05711365 246.77313232]
[144.17184448 232.05323792]
[139.87771606 217.68103027]
[134.21493530 203.79100037]
[122.24538422 194.92649841]
[124.20030975 179.22654724]
[118.53752899 165.33651733]
[112.87474060 151.44648743]
[107.21195221 137.55645752]
[101.54916382 123.66643524]
[95.88638306 109.77640533]
[89.60901642 96.15309143]
[82.72960663 82.82366180]
[75.85019684 69.49423218]
[72.11510468 67.27994537]
[69.53810120 64.29270935]
[68.21996307 60.99150848]
[68.10205841 57.82090759]
[68.98486328 55.16030884]
[62.91102600 41.44504166]
[56.83719254 27.72977448]
[41.64012909 25.99872398]
[29.43057251 16.95308876]
[23.42793655 3.10264754]
[25.15243149 -11.79305935]
[34.04144287 -23.74509048]
[27.96760941 -37.46035767]
[21.89377594 -51.17562485]
[9.23116875 -60.66082001]
[11.15222263 -75.43102264]
[5.07838869 -89.14628601]
[-7.58421755 -98.63148499]
[-5.66316414 -113.40168762]
[-11.73699856 -127.11695099]
[-17.81083298 -140.83221436]
[-23.88466644 -154.54748535]
[-29.95849991 -168.26275635]
[-44.24655151 -163.65087891]
[-58.93840408 -160.55781555]
[-73.87309265 -159.01742554]
[-88.88697815 -159.04660034]
[-103.81557465 -160.64500427]
[-118.49529266 -163.79515076]
[-132.76531982 -168.46252441]
[-146.46928406 -174.59596252]
[-159.45704651 -182.12826538]
[-171.58630371 -190.97692871]
[-182.72415161 -201.04499817]
[-192.74858093 -212.22213745]
[-201.54974365 -224.38591003]
[-209.03121948 -237.40303040]
[-215.11102295 -251.13087463]
[-219.72253418 -265.41903687]
[-222.81526184 -280.11096191]
[-224.35528564 -295.04568481]
[-224.32574463 -310.05957031]
[-222.72697449 -324.98812866]
[-219.57646179 -339.66775513]
[-214.90875244 -353.93768311]
[-208.77497864 -367.64147949]
[-201.24235535 -380.62905884]
[-192.39340210 -392.75811768]
[-182.32507324 -403.89572144]
[-171.14767456 -413.91989136]
[-158.98370361 -422.72076416]
[-145.96640015 -430.20190430]
[-132.23840332 -436.28137207]
[-117.95013428 -440.89254761]
[-103.25812531 -443.98489380]
[-88.32336426 -445.52456665]
[-73.30947876 -445.49465942]
[-58.38096619 -443.89553833]
[-43.70139694 -440.74465942]
[-29.43160439 -436.07659912]
[-15.72793770 -429.94250488]
[-2.74054193 -422.40957642]
[9.38828564 -413.56030273]
[20.52565575 -403.49169922]
[30.54953957 -392.31408691]
[39.35011292 -380.14987183]
[46.83094788 -367.13241577]
[52.91008377 -353.40426636]
[57.52091217 -339.11587524]
[60.61291885 -324.42379761]
[62.15221786 -309.48898315]
[62.12195206 -294.47509766]
[60.52244568 -279.54663086]
[57.37123108 -264.86715698]
[52.70282745 -250.59745789]
[46.56838989 -236.89395142]
[39.03512955 -223.90673828]
[30.18558311 -211.77812195]
[20.11671257 -200.64099121]
[8.93883705 -190.61738586]
[-3.22557116 -181.81710815]
[-16.24323273 -174.33659363]
[-10.16939926 -160.62132263]
[-4.09556580 -146.90605164]
[1.97826838 -133.19078064]
[8.05210209 -119.47552490]
[20.28026772 -110.97132874]
[18.79365540 -95.22012329]
[24.86748886 -81.50485992]
[37.09565353 -73.00066376]
[35.60904312 -57.24945831]
[41.68287659 -43.53419113]
[47.75671005 -29.81892395]
[62.58106613 -28.36840820]
[74.77006531 -19.63431931]
[80.99184418 -5.88092518]
[79.48423004 9.23938847]
[70.55245972 21.65594101]
[76.62629700 35.37120819]
[82.70012665 49.08647537]
[89.17962646 62.61481857]
[96.05903625 75.94425201]
[102.93844604 89.27368164]
[108.51922607 75.35050201]
[122.25579071 69.32499695]
[136.27922058 74.64884949]
[142.55625916 88.27231598]
[137.49111938 102.39125061]
[123.98536682 108.91769409]
[109.77640533 104.11361694]
[115.43919373 118.00364685]
[121.10198212 131.89367676]
[126.76476288 145.78370667]
[132.42755127 159.67372131]
[138.09034729 173.56375122]
[150.46492004 183.42176819]
[148.10494995 198.12821960]
[153.76774597 212.01824951]
[156.21414185 197.21908569]
[164.40025330 184.64976501]
[176.94656372 176.42845154]
[191.73880005 173.94056702]
[206.28422546 177.60537720]
[218.13166809 186.80526733]
[225.28462219 199.98992920]
[226.53768921 214.93750000]
[221.67971802 229.12904358]
[211.52935791 240.17304993]
[197.79711914 246.20840454]
[182.79711914 246.21804810]
[169.05712891 240.20034790]
[158.89173889 229.16796875]
[161.77700806 243.88786316]
[166.49867249 251.70730591]
[164.59394836 258.84829712]
[167.25973511 273.60952759]
[169.92553711 288.37072754]
[172.59132385 303.13195801]
[189.14842224 310.52249146]
[197.87812805 326.23464966]
[195.45004272 343.88558960]
[183.02342224 356.43353271]
[186.12753296 371.10882568]
[189.23164368 385.78411865]
[192.33575439 400.45941162]
[207.34271240 399.62802124]
[222.30072021 401.09729004]
[236.85910034 404.83276367]
[250.67660522 410.74688721]
[263.42932129 418.70104980]
[274.81832886 428.50875854]
[284.57662964 439.94012451]
[292.47549438 452.72717285]
[298.32974243 466.57015991]
[302.00213623 481.14456177]
[303.40661621 496.10879517]
[302.51025391 511.11203003]
[299.33404541 525.80255127]
[293.95245361 539.83605957]
[286.49160767 552.88354492]
[277.12646484 564.63916016]
[266.07650757 574.82733154]
[253.60075378 583.20922852]
[239.99168396 589.58837891]
[225.56829834 593.81524658]
[210.66870117 595.79077148]
[195.64218140 595.46856689]
[180.84094238 592.85626221]
[166.61198425 588.01507568]
[153.28883362 581.05847168]
[141.18380737 572.14959717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 184]
[14 183]
[15 182]
[16 181]
[22 177]
[23 176]
[24 175]
[25 174]
[26 172]
[27 171]
[28 157]
[29 156]
[31 154]
[32 153]
[33 152]
[34 151]
[35 150]
[36 149]
[37 142]
[38 141]
[39 140]
[44 139]
[45 138]
[46 137]
[51 132]
[52 131]
[53 130]
[55 128]
[56 127]
[58 125]
[59 124]
[60 123]
[61 122]
[62 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
