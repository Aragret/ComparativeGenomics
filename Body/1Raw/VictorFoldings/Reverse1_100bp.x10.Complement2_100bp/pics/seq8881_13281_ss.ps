%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[86.74961853 675.99365234]
[74.94731903 685.57348633]
[60.37593079 689.90283203]
[45.25748062 688.32141113]
[31.89742279 681.07037354]
[22.33307266 669.25549316]
[18.02291870 654.67840576]
[19.62423325 639.56207275]
[26.89282417 626.21154785]
[38.72028351 616.66278076]
[53.30301285 612.37176514]
[54.86353683 597.45318604]
[48.49230194 583.99005127]
[57.62331772 571.06970215]
[59.18383789 556.15106201]
[60.74436188 541.23248291]
[62.30488586 526.31384277]
[63.86540985 511.39526367]
[65.42593384 496.47665405]
[54.24709320 486.66995239]
[50.94736862 471.98745728]
[56.99668121 458.01391602]
[70.26748657 450.19140625]
[71.82801056 435.27279663]
[73.38852692 420.35418701]
[60.04360962 406.16168213]
[61.46071625 386.42605591]
[77.17391968 373.90509033]
[78.06673431 358.93167114]
[78.95955658 343.95825195]
[79.85237122 328.98486328]
[72.88632965 315.81961060]
[81.43131256 302.50445557]
[82.32412720 287.53103638]
[83.21694183 272.55764771]
[84.10975647 257.58422852]
[85.00257111 242.61082458]
[85.89539337 227.63742065]
[86.78820801 212.66401672]
[87.68102264 197.69061279]
[73.97916412 189.12489319]
[66.42318726 174.73519897]
[67.15924835 158.40501404]
[76.08103943 144.59570312]
[90.83301544 137.12770081]
[91.50279999 122.14266968]
[92.17258453 107.15763092]
[92.06092072 92.15804291]
[91.16810608 77.18463898]
[90.27529144 62.21123123]
[89.38247681 47.23782730]
[77.84458160 36.77289581]
[77.15244293 21.57501411]
[87.20025635 10.63988781]
[86.30744171 -4.33351803]
[77.76245880 -17.64869118]
[84.72850037 -30.81393051]
[83.83568573 -45.78733444]
[82.94287109 -60.76074219]
[82.05004883 -75.73414612]
[81.15723419 -90.70755005]
[79.48569489 -105.61412811]
[77.03997040 -120.41339874]
[74.26435852 -135.15435791]
[71.16024780 -149.82966614]
[68.05613708 -164.50495911]
[64.95202637 -179.18026733]
[61.84791565 -193.85557556]
[58.74380493 -208.53086853]
[49.67530823 -196.58255005]
[34.83351898 -194.40968323]
[22.72049522 -203.25697327]
[20.27512360 -218.05630493]
[28.89822388 -230.32994080]
[43.65009308 -233.04698181]
[56.07966232 -224.65179443]
[54.29719925 -239.54550171]
[52.51473236 -254.43922424]
[37.49394226 -254.61491394]
[22.62459564 -256.74975586]
[8.16113091 -260.80725098]
[-5.64896584 -266.71792603]
[-18.56938553 -274.38070679]
[-30.37904167 -283.66439819]
[-40.87585831 -294.41018677]
[-49.88021851 -306.43417358]
[-57.23804474 -319.53063965]
[-62.82343674 -333.47546387]
[-66.54082489 -348.03005981]
[-68.32659149 -362.94534302]
[-68.15018463 -377.96612549]
[-66.01462555 -392.83538818]
[-61.95645142 -407.29864502]
[-56.04510498 -421.10845947]
[-48.38173676 -434.02853394]
[-39.09748077 -445.83773804]
[-28.35119629 -456.33404541]
[-16.32676888 -465.33782959]
[-3.22995400 -472.69503784]
[10.71514606 -478.27975464]
[25.26991272 -481.99645996]
[40.18529129 -483.78152466]
[55.20606613 -483.60440063]
[70.07521057 -481.46813965]
[84.53828430 -477.40927124]
[98.34782410 -471.49725342]
[111.26750946 -463.83328247]
[123.07628632 -454.54846191]
[133.57208252 -443.80166626]
[142.57528687 -431.77682495]
[149.93186951 -418.67965698]
[155.51593018 -404.73428345]
[159.23193359 -390.17935181]
[161.01628113 -375.26388550]
[160.83845520 -360.24310303]
[158.70147705 -345.37408447]
[154.64192200 -330.91119385]
[148.72926331 -317.10192871]
[141.06466675 -304.18261719]
[131.77928162 -292.37426758]
[121.03199768 -281.87899780]
[109.00671387 -272.87634277]
[95.90920258 -265.52038574]
[81.96356964 -259.93698120]
[67.40844727 -256.22167969]
[69.19091797 -241.32797241]
[70.97338104 -226.43424988]
[73.41910553 -211.63497925]
[76.52321625 -196.95968628]
[79.62732697 -182.28437805]
[82.73143768 -167.60906982]
[85.83554840 -152.93377686]
[88.93965912 -138.25846863]
[91.67951202 -136.03910828]
[93.48051453 -132.38241577]
[93.67883301 -127.74410248]
[91.83924103 -122.85912323]
[94.28496552 -108.05985260]
[102.94873810 -120.30481720]
[117.42401123 -124.23754120]
[131.09289551 -118.06003571]
[137.70616150 -104.59657288]
[134.24031067 -90.00247192]
[122.27987671 -80.94995117]
[107.29301453 -81.57771301]
[96.13063812 -91.60037231]
[97.02346039 -76.62696075]
[97.91627502 -61.65355682]
[98.80908966 -46.68015289]
[99.70190430 -31.70674706]
[108.18302917 -19.46257210]
[101.28084564 -5.22633410]
[102.17366028 9.74707222]
[113.44971466 19.41072464]
[114.56845856 34.58316803]
[104.35588074 46.34500885]
[105.24869537 61.31841660]
[106.14151001 76.29182434]
[107.03432465 91.26522827]
[116.92498779 79.98804474]
[131.73085022 77.58259583]
[144.68289185 85.14862061]
[149.85960388 99.22703552]
[144.89425659 113.38137054]
[132.05694580 121.14046478]
[117.21672821 118.95696259]
[107.15762329 107.82741547]
[106.48783875 122.81245422]
[105.81805420 137.79748535]
[117.98236847 144.70346069]
[125.94646454 156.12226868]
[128.20289612 169.79292297]
[124.36755371 183.03826904]
[115.24369049 193.28932190]
[102.65442657 198.58341980]
[101.76161194 213.55682373]
[100.86879730 228.53024292]
[99.97598267 243.50364685]
[99.08316040 258.47705078]
[98.19034576 273.45043945]
[97.29753113 288.42385864]
[96.40471649 303.39727783]
[103.30690002 317.63351440]
[94.82577515 329.87768555]
[93.93296051 344.85107422]
[93.04014587 359.82449341]
[92.14732361 374.79788208]
[100.99498749 380.75967407]
[106.52756500 389.78726196]
[107.80392456 400.21676636]
[104.66029358 410.15811157]
[97.72780609 417.83770752]
[88.30713654 421.91470337]
[86.74661255 436.83331299]
[85.18608856 451.75192261]
[96.55082703 462.15139771]
[99.57749939 477.07427979]
[93.31079865 490.75610352]
[80.34453583 498.03717041]
[78.78401184 512.95581055]
[77.22348785 527.87438965]
[75.66296387 542.79296875]
[74.10244751 557.71160889]
[72.54192352 572.63018799]
[78.80153656 587.16046143]
[69.78214264 599.01373291]
[68.22161865 613.93231201]
[81.60070801 621.14813232]
[91.19610596 632.93786621]
[95.54459381 647.50354004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 207]
[12 206]
[14 204]
[15 203]
[16 202]
[17 201]
[18 200]
[19 199]
[23 195]
[24 194]
[25 193]
[28 187]
[29 186]
[30 185]
[31 184]
[33 182]
[34 181]
[35 180]
[36 179]
[37 178]
[38 177]
[39 176]
[40 175]
[45 169]
[46 168]
[47 167]
[48 159]
[49 158]
[50 157]
[51 156]
[54 153]
[55 152]
[57 150]
[58 149]
[59 148]
[60 147]
[61 146]
[62 138]
[63 137]
[64 133]
[65 132]
[66 131]
[67 130]
[68 129]
[69 128]
[76 127]
[77 126]
[78 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
