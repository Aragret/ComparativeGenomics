%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[75.80630493 669.51507568]
[66.61508179 657.61163330]
[59.63068390 644.29284668]
[55.06534958 629.96356201]
[53.05781555 615.05920410]
[53.66909409 600.03265381]
[56.88060379 585.34051514]
[62.59475327 571.42938232]
[70.63789368 558.72198486]
[80.76560211 547.60437012]
[92.67012024 538.41448975]
[105.98966217 531.43164062]
[120.31948090 526.86791992]
[118.31546783 512.00238037]
[116.31145477 497.13687134]
[112.30250549 490.92797852]
[114.38997650 482.03527832]
[112.60750580 467.14157104]
[110.82504272 452.24783325]
[107.69092560 448.64419556]
[106.78733063 443.03344727]
[109.21804810 436.88500977]
[107.87981415 421.94482422]
[105.42311096 419.41561890]
[104.06938934 415.57080078]
[104.42366028 410.94180298]
[106.83070374 406.31002808]
[106.16091919 391.32498169]
[97.86302948 378.95590210]
[104.97640991 364.82400513]
[104.30661774 349.83895874]
[103.63683319 334.85394287]
[102.96704865 319.86889648]
[102.29726410 304.88385010]
[101.62747955 289.89880371]
[98.77007294 286.07202148]
[98.28629303 280.40960693]
[101.16757965 274.45901489]
[100.94425201 259.46066284]
[100.27445984 244.47563171]
[99.15881348 229.51718140]
[98.04316711 214.55871582]
[96.92752075 199.60026550]
[88.26503754 187.48371887]
[94.95449829 173.14630127]
[93.83884430 158.18785095]
[91.80518341 156.25849915]
[90.41323090 153.40734863]
[90.01790619 149.87477112]
[90.88066101 146.02507019]
[93.12918091 142.31048584]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[89.96102142 84.26352692]
[88.98403168 80.44122314]
[89.27400208 76.89843750]
[90.58045197 74.00710297]
[92.55576324 72.01806641]
[93.22554779 57.03302765]
[93.89533234 42.04798889]
[86.78195953 27.91609192]
[95.07984924 15.54700375]
[87.96647644 1.41510737]
[96.26435852 -10.95398140]
[96.93414307 -25.93902016]
[97.26911926 -40.93527985]
[97.26911926 -55.93527985]
[97.26911926 -70.93527985]
[97.26911926 -85.93527985]
[97.26911926 -100.93527985]
[97.26911926 -115.93527985]
[94.13971710 -124.51692200]
[97.38245392 -131.15818787]
[97.60578156 -146.15652466]
[97.82910919 -161.15486145]
[98.05243683 -176.15319824]
[90.52145386 -190.06704712]
[98.44738770 -202.67770386]
[86.95775604 -193.03466797]
[72.00331879 -194.20297241]
[62.15066910 -205.51338196]
[63.04384613 -220.48677063]
[74.17119598 -230.54570007]
[89.15847015 -229.92796326]
[99.41993713 -218.98831177]
[100.98046112 -233.90690613]
[102.54098511 -248.82551575]
[104.10150909 -263.74411011]
[105.66203308 -278.66271973]
[97.77568054 -295.30264282]
[108.62990570 -309.09225464]
[109.96813965 -324.03240967]
[111.30637360 -338.97259521]
[104.83111572 -353.40805054]
[113.67303467 -365.39425659]
[99.50152588 -370.57412720]
[87.15410614 -379.24612427]
[77.47262573 -390.81900024]
[71.11720276 -404.50369263]
[68.52115631 -419.36715698]
[69.86148071 -434.39599609]
[75.04679871 -448.56552124]
[83.72356415 -460.90957642]
[95.30017853 -470.58657837]
[108.98732758 -476.93673706]
[123.85180664 -479.52703857]
[138.88012695 -478.18090820]
[153.04762268 -472.99011230]
[165.38835144 -464.30859375]
[175.06088257 -452.72824097]
[181.40574646 -439.03863525]
[183.99031067 -424.17315674]
[182.63838196 -409.14535522]
[177.44212341 -394.97985840]
[168.75582886 -382.64248657]
[157.17175293 -372.97442627]
[143.47969055 -366.63485718]
[128.61322021 -364.05603027]
[135.18418884 -350.68923950]
[126.24655914 -337.63436890]
[124.90832520 -322.69418335]
[123.57009125 -307.75399780]
[131.08319092 -298.27349854]
[130.09056091 -285.81564331]
[120.58063507 -277.10220337]
[119.02011108 -262.18359375]
[117.45958710 -247.26499939]
[115.89906311 -232.34638977]
[114.33853912 -217.42778015]
[113.44572449 -202.45437622]
[120.99267578 -189.61332703]
[113.05077362 -175.92987061]
[112.82744598 -160.93153381]
[112.60411835 -145.93319702]
[112.38079071 -130.93486023]
[112.26911926 -115.93527985]
[112.26911926 -100.93527985]
[112.26911926 -85.93527985]
[112.26911926 -70.93527985]
[112.26911926 -55.93527985]
[112.26911926 -40.93527985]
[114.49038696 -38.19697571]
[115.49568939 -34.24673080]
[114.72985840 -29.66777992]
[111.91918182 -25.26923561]
[111.24939728 -10.28419685]
[118.41068268 2.77586961]
[110.06488800 16.21678925]
[117.22616577 29.27685547]
[108.88037109 42.71777344]
[108.21058655 57.70281219]
[107.54080200 72.68785095]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[108.12751770 142.08715820]
[108.79730225 157.07218933]
[109.91294861 172.03065491]
[118.65522766 185.21711731]
[111.88597107 198.48461914]
[113.00161743 213.44306946]
[114.11727142 228.40151978]
[115.23291779 243.35998535]
[117.80386353 246.85914612]
[119.00662994 250.61653137]
[118.92804718 254.17028809]
[117.79601288 257.13424683]
[115.94258881 259.23733521]
[116.16591644 274.23568726]
[116.61251831 289.22903442]
[117.28230286 304.21405029]
[117.95208740 319.19909668]
[118.62187195 334.18414307]
[119.29165649 349.16918945]
[119.96144867 364.15420532]
[128.30723572 377.59515381]
[121.14595795 390.65521240]
[121.81574249 405.64025879]
[122.81999969 420.60659790]
[124.15823364 435.54678345]
[125.71875763 450.46539307]
[127.50122833 465.35910034]
[129.28369141 480.25280762]
[131.17698669 495.13284302]
[133.18099976 509.99838257]
[135.18501282 524.86389160]
[150.21177673 525.47009277]
[164.90495300 528.67657471]
[178.81802368 534.38598633]
[191.52819824 542.42480469]
[202.64923096 552.54876709]
[211.84315491 564.45013428]
[218.83056641 577.76727295]
[223.39915466 592.09558105]
[225.41006470 606.99951172]
[224.80220032 622.02618408]
[221.59402466 636.71899414]
[215.88302612 650.63140869]
[207.84277344 663.34069824]
[197.71757507 674.46057129]
[185.81515503 683.65313721]
[172.49719238 690.63903809]
[158.16841125 695.20599365]
[143.26423645 697.21520996]
[128.23760986 696.60565186]
[113.54516602 693.39581299]
[99.63338470 687.68322754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 189]
[14 188]
[15 187]
[17 186]
[18 185]
[19 184]
[22 183]
[23 182]
[27 181]
[28 180]
[30 178]
[31 177]
[32 176]
[33 175]
[34 174]
[35 173]
[38 172]
[39 171]
[40 166]
[41 165]
[42 164]
[43 163]
[45 161]
[46 160]
[51 159]
[52 158]
[53 157]
[55 155]
[60 154]
[61 153]
[62 152]
[64 150]
[66 148]
[67 147]
[68 143]
[69 142]
[70 141]
[71 140]
[72 139]
[73 138]
[75 137]
[76 136]
[77 135]
[78 134]
[80 132]
[87 131]
[88 130]
[89 129]
[90 128]
[91 127]
[93 124]
[94 123]
[95 122]
[97 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
