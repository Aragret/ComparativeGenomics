%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAAACUUCGAAUCCCUCUCGACCCAACAAACCCAACACCGAGUCACAGUCAAGCUCUAUUAUUGAAGAACCAGAUCCGUGUACUUAUAACAACACCCCUxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[-32.12034988 464.68850708]
[-29.50403976 479.48904419]
[-29.17779160 494.51547241]
[-31.14925385 509.41558838]
[-35.37221527 523.84014893]
[-41.74767685 537.45092773]
[-50.12619400 549.92895508]
[-60.31136322 560.98168945]
[-72.06443024 570.35003662]
[-85.10987854 577.81439209]
[-99.14190674 583.19976807]
[-113.83159637 586.37994385]
[-128.83457947 587.28039551]
[-143.79917908 585.88000488]
[-158.37460327 582.21154785]
[-172.21917725 576.36108398]
[-185.00836182 568.46569824]
[-196.44236755 558.71044922]
[-206.25317383 547.32415771]
[-214.21076965 534.57354736]
[-220.12864685 520.75769043]
[-223.86808777 506.20028687]
[-225.34140015 491.24270630]
[-224.51406860 476.23550415]
[-221.40548706 461.53048706]
[-216.08853149 447.47238159]
[-208.68782043 434.39071655]
[-199.37686157 422.59213257]
[-188.37388611 412.35324097]
[-175.93684387 403.91403198]
[-162.35726929 397.47232056]
[-147.95349121 393.17910767]
[-133.06315613 391.13507080]
[-118.03529358 391.38809204]
[-103.22220612 393.93228149]
[-88.97111511 398.70791626]
[-82.09170532 385.37850952]
[-75.21228790 372.04907227]
[-68.33287811 358.71963501]
[-61.45346451 345.39022827]
[-54.57405090 332.06079102]
[-56.34454727 314.60134888]
[-40.76684189 304.78213501]
[-41.52996063 302.08477783]
[-41.27060318 298.92260742]
[-39.80636978 295.68356323]
[-37.09854507 292.81436157]
[-33.26831055 290.76907349]
[-25.80056953 277.76010132]
[-18.33282852 264.75115967]
[-10.86508751 251.74220276]
[-17.41780853 241.52276611]
[-19.01316452 229.41542053]
[-15.28756142 217.70982361]
[-6.88954210 208.64601135]
[4.63219118 203.98573303]
[17.11414719 204.67028809]
[24.96590233 191.88945007]
[32.81765747 179.10861206]
[40.66941452 166.32775879]
[26.10060883 169.89846802]
[12.58994389 163.38218689]
[6.31431341 149.75807190]
[10.14285088 135.25488281]
[22.32520103 126.50329590]
[37.29175568 127.50440216]
[48.20000839 137.80052185]
[50.06245041 152.68620300]
[59.20125198 140.79158020]
[68.34005737 128.89694214]
[77.47885895 117.00231171]
[86.61766052 105.10767365]
[88.64146423 91.27308655]
[101.48770905 85.75352478]
[110.62651062 73.85888672]
[119.22507477 61.56805038]
[127.26625061 48.90552521]
[135.30741882 36.24300003]
[143.25410461 23.52096558]
[151.10586548 10.74012280]
[158.47654724 -2.32406235]
[165.35595703 -15.65349102]
[172.23538208 -28.98292160]
[179.11479187 -42.31235123]
[185.99420166 -55.64178085]
[192.87361145 -68.97120667]
[186.06932068 -82.79176331]
[188.67723083 -97.79350281]
[199.49073792 -108.25926208]
[214.21711731 -110.32601929]
[221.09652710 -123.65544891]
[227.97595215 -136.98487854]
[234.85536194 -150.31430054]
[241.73477173 -163.64373779]
[229.24562073 -171.98046875]
[217.76844788 -181.66316223]
[207.44757080 -192.57002258]
[198.41279602 -204.56388855]
[190.77775574 -217.49392700]
[184.63844299 -231.19754028]
[180.07209778 -245.50238037]
[177.13610840 -260.22854614]
[175.86743164 -275.19085693]
[176.28201294 -290.20111084]
[178.37463379 -305.07058716]
[182.11898804 -319.61224365]
[187.46797180 -333.64321899]
[194.35430908 -346.98706055]
[202.69142151 -359.47595215]
[212.37445068 -370.95285034]
[223.28161621 -381.27340698]
[235.27575684 -390.30783081]
[248.20602417 -397.94247437]
[261.90982056 -404.08135986]
[276.21481323 -408.64730835]
[290.94107056 -411.58282471]
[305.90341187 -412.85107422]
[320.91366577 -412.43603516]
[335.78305054 -410.34298706]
[350.32461548 -406.59820557]
[364.35540771 -401.24877930]
[377.69906616 -394.36206055]
[390.18771362 -386.02456665]
[401.66430664 -376.34118652]
[411.98452759 -365.43371582]
[421.01858521 -353.43930054]
[428.65286255 -340.50878906]
[434.79135132 -326.80484009]
[439.35684204 -312.49972534]
[442.29193115 -297.77337646]
[443.55972290 -282.81100464]
[443.14425659 -267.80075073]
[441.05075073 -252.93141174]
[437.30551147 -238.38996887]
[431.95568848 -224.35931396]
[425.06854248 -211.01588440]
[416.73071289 -198.52748108]
[407.04699707 -187.05116272]
[396.13919067 -176.73127747]
[384.14453125 -167.69757080]
[371.21377563 -160.06369019]
[357.50964355 -153.92561340]
[343.20437622 -149.36053467]
[328.47793579 -146.42588806]
[313.51553345 -145.15855408]
[298.50531006 -145.57447815]
[283.63601685 -147.66842651]
[269.09469604 -151.41407776]
[255.06419373 -156.76432800]
[248.18478394 -143.43489075]
[241.30537415 -130.10546875]
[234.42596436 -116.77603149]
[227.54655457 -103.44660187]
[234.39324951 -90.24581909]
[232.12712097 -75.36870575]
[221.41003418 -64.55216980]
[206.20304871 -62.09179688]
[199.32362366 -48.76236725]
[192.44421387 -35.43293762]
[185.56480408 -22.10350800]
[178.68539429 -8.77407932]
[171.80598450 4.55535030]
[186.67146301 2.55104351]
[197.61204529 12.81281376]
[196.56271362 27.77606583]
[184.29701233 36.41044617]
[169.85675049 32.35101318]
[163.88670349 18.59187889]
[156.03494263 31.37272072]
[155.21212769 38.71743011]
[147.96994019 44.28417587]
[139.92877197 56.94670105]
[131.88760376 69.60922241]
[146.72506714 67.40706635]
[158.85552979 76.23043060]
[161.33010864 91.02490997]
[152.73124695 103.31553650]
[137.98477173 106.06169891]
[125.53812408 97.69025421]
[122.52114105 82.99768829]
[113.38233948 94.89232635]
[111.35853577 108.72691345]
[98.51229095 114.24647522]
[89.37348938 126.14111328]
[80.23468781 138.03573608]
[71.09588623 149.93037415]
[61.95708084 161.82501221]
[53.45025635 174.17951965]
[45.59849930 186.96035767]
[37.74674606 199.74119568]
[29.89498901 212.52204895]
[37.31159592 229.06748962]
[33.34642029 246.59909058]
[19.77123833 258.13882446]
[2.14386487 259.20996094]
[-5.32387638 272.21890259]
[-12.79161739 285.22784424]
[-20.25935936 298.23681641]
[-27.33646393 311.46234131]
[-23.97956848 323.91601562]
[-29.82000923 334.96469116]
[-41.24462128 338.94018555]
[-48.12403488 352.26962280]
[-55.00344849 365.59906006]
[-61.88286209 378.92849731]
[-68.76227570 392.25790405]
[-75.64168549 405.58734131]
[-63.49308777 414.43673706]
[-52.83779907 425.03698730]
[-43.92559433 437.13958740]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 207]
[37 206]
[38 205]
[39 204]
[40 203]
[41 202]
[43 199]
[48 198]
[49 197]
[50 196]
[51 195]
[57 191]
[58 190]
[59 189]
[60 188]
[68 187]
[69 186]
[70 185]
[71 184]
[72 183]
[74 181]
[75 180]
[76 173]
[77 172]
[78 171]
[79 169]
[80 168]
[81 162]
[82 161]
[83 160]
[84 159]
[85 158]
[86 157]
[90 153]
[91 152]
[92 151]
[93 150]
[94 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
