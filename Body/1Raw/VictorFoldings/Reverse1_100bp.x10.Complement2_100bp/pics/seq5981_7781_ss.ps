%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxGAUAGGACGGGCGGUAGUAGGAUCAGGAGUAGCGGGAGGGUAGGGAUGCGUAGGAAAUGUAUUGUCUGCUCCAGUUGCUAGGGAGGGAAUGGUAGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[139.42393494 741.54919434]
[134.47348022 726.84295654]
[139.14468384 712.04571533]
[151.64137268 702.84716797]
[151.41804504 687.84887695]
[151.19471741 672.85052490]
[150.97138977 657.85217285]
[150.74806213 642.85382080]
[150.52473450 627.85552979]
[150.30140686 612.85717773]
[150.07807922 597.85882568]
[149.85475159 582.86047363]
[148.62777710 567.91076660]
[146.40266418 553.07672119]
[144.17753601 538.24267578]
[141.95242310 523.40863037]
[139.72731018 508.57458496]
[127.71955109 506.23532104]
[116.98706818 500.31326294]
[108.57215881 491.36642456]
[103.29728699 480.24737549]
[101.68472290 468.02203369]
[103.90484619 455.86743164]
[109.75829315 444.95852661]
[118.69377136 436.35443115]
[129.85990906 430.89575195]
[128.29939270 415.97714233]
[126.73886871 401.05853271]
[125.06732941 386.15194702]
[123.28486633 371.25823975]
[121.50239563 356.36453247]
[119.71993256 341.47079468]
[117.93746948 326.57708740]
[108.74259186 314.85943604]
[114.78517914 300.23760986]
[113.00271606 285.34387207]
[109.08664703 279.07601929]
[111.30628967 270.21536255]
[109.74576569 255.29676819]
[108.18524170 240.37815857]
[106.62471771 225.45954895]
[97.60532379 213.60629272]
[103.86493683 199.07604980]
[102.30441284 184.15745544]
[100.74389648 169.23884583]
[91.72449493 157.38558960]
[97.98411560 142.85534668]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[88.93282318 74.04238129]
[86.92881012 59.17685318]
[84.15414429 55.83691406]
[82.72986603 52.15778732]
[82.59678650 48.60564804]
[83.55039978 45.57955551]
[85.27536011 43.36988449]
[74.12541199 35.81387329]
[69.43161774 23.39699936]
[72.69797516 10.73157406]
[82.51502228 2.38561344]
[81.62220764 -12.58779240]
[80.72939301 -27.56119728]
[77.85353851 -31.91740990]
[77.01961517 -36.48445129]
[77.96599579 -40.44922256]
[80.14624786 -43.22029495]
[79.92292023 -58.21863174]
[79.69959259 -73.21697235]
[79.47626495 -88.21530914]
[79.25293732 -103.21364594]
[79.02960968 -118.21198273]
[78.80628204 -133.21032715]
[78.58295441 -148.20866394]
[78.02474213 -163.19827271]
[77.13192749 -178.17167664]
[62.81314468 -183.19642639]
[51.53939819 -193.29324341]
[45.00784683 -206.90031433]
[44.18572998 -221.93067932]
[49.16722488 -236.09223938]
[59.16385651 -247.23730469]
[72.62911224 -253.68836975]
[71.73629761 -268.66177368]
[68.10164642 -277.04193115]
[70.94333649 -283.86444092]
[62.59754562 -297.30535889]
[69.75882721 -310.36541748]
[69.08904266 -325.35046387]
[65.85867310 -331.11901855]
[66.00457001 -336.80020142]
[68.62913513 -340.79028320]
[68.40580750 -355.78860474]
[68.18247986 -370.78695679]
[67.95915222 -385.78527832]
[53.55944824 -390.46795654]
[41.46191788 -399.57446289]
[32.97880554 -412.11700439]
[29.03029823 -426.73507690]
[30.04470253 -441.84301758]
[35.91197968 -455.80200195]
[45.99569702 -467.09790039]
[59.20204163 -474.50543213]
[74.09848785 -477.22100830]
[89.06919098 -474.95013428]
[102.49023438 -467.93911743]
[112.90579987 -456.94845581]
[119.18608856 -443.17034912]
[120.64985657 -428.09930420]
[117.13833618 -413.37014771]
[109.03242493 -400.58059692]
[97.21138763 -391.11791992]
[82.95748901 -386.00860596]
[83.18081665 -371.01028442]
[83.40414429 -356.01193237]
[83.62747192 -341.01361084]
[84.07408142 -326.02026367]
[84.74386597 -311.03521729]
[93.04174805 -298.66613770]
[85.92837524 -284.53424072]
[86.70970154 -269.55459595]
[87.60251617 -254.58119202]
[101.73894501 -249.77592468]
[112.98912811 -239.89772034]
[119.61815643 -226.42846680]
[120.58793640 -211.40692139]
[115.71961212 -197.12010193]
[105.72556305 -185.75515747]
[92.10533142 -179.06448364]
[92.99814606 -164.09107971]
[95.37846375 -161.48985291]
[96.61710358 -157.60644531]
[96.12517548 -152.99002075]
[93.58129120 -148.43199158]
[93.80461884 -133.43365479]
[94.02794647 -118.43531036]
[94.25127411 -103.43697357]
[94.47460175 -88.43863678]
[94.69792938 -73.44029999]
[94.92125702 -58.44195938]
[95.14458466 -43.44362259]
[95.70279694 -28.45401382]
[96.59561157 -13.48060799]
[97.48842621 1.49279761]
[110.53265381 12.10821056]
[111.89006042 29.21003151]
[100.23381805 42.25423431]
[101.79433441 57.17284012]
[103.79835510 72.03836823]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[114.79930115 131.41497803]
[115.16084290 137.08651733]
[112.90271759 141.29483032]
[122.03372955 154.21516418]
[115.66249847 167.67832947]
[117.22302246 182.59692383]
[118.78354645 197.51553345]
[127.91455841 210.43586731]
[121.54331970 223.89903259]
[123.10384369 238.81764221]
[124.66436768 253.73623657]
[126.22489166 268.65484619]
[127.89643097 283.56143188]
[129.67889404 298.45513916]
[139.00126648 311.23809814]
[132.83117676 324.79461670]
[134.61364746 339.68832397]
[136.39611816 354.58206177]
[138.17857361 369.47576904]
[139.96104431 384.36947632]
[144.08804321 392.51846313]
[141.65747070 399.49801636]
[143.21800232 414.41662598]
[144.77851868 429.33520508]
[161.84425354 434.93203735]
[174.70326233 447.39434814]
[180.79576111 464.17675781]
[178.93725586 481.88055420]
[169.54849243 496.94195557]
[154.56135559 506.34945679]
[156.78646851 521.18353271]
[159.01158142 536.01757812]
[161.23670959 550.85162354]
[163.46182251 565.68566895]
[170.93119812 552.67761230]
[184.19816589 545.67852783]
[199.15179443 546.85705566]
[211.15855408 555.84802246]
[216.49800110 569.86553955]
[213.51567078 584.56604004]
[203.13566589 595.39447021]
[188.57432556 598.99554443]
[174.34365845 594.25335693]
[164.85308838 582.63714600]
[165.07641602 597.63549805]
[165.29974365 612.63385010]
[165.52307129 627.63220215]
[165.74639893 642.63049316]
[165.96972656 657.62884521]
[166.19305420 672.62719727]
[166.41638184 687.62554932]
[166.63970947 702.62384033]
[179.40473938 711.44622803]
[184.51443481 726.09783936]
[180.00402832 740.94494629]
[167.60786438 750.27844238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 206]
[5 205]
[6 204]
[7 203]
[8 202]
[9 201]
[10 200]
[11 199]
[12 198]
[13 188]
[14 187]
[15 186]
[16 185]
[17 184]
[26 178]
[27 177]
[28 176]
[29 174]
[30 173]
[31 172]
[32 171]
[33 170]
[35 168]
[36 167]
[38 166]
[39 165]
[40 164]
[41 163]
[43 161]
[44 160]
[45 159]
[47 157]
[48 154]
[49 153]
[51 151]
[52 150]
[53 149]
[58 148]
[62 145]
[63 144]
[64 143]
[68 142]
[69 141]
[70 140]
[71 139]
[72 138]
[73 137]
[74 136]
[75 135]
[76 131]
[77 130]
[84 123]
[85 122]
[87 121]
[89 119]
[90 118]
[93 117]
[94 116]
[95 115]
[96 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
