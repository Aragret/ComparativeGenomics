%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[-34.68759155 322.99511719]
[-27.56455803 336.21878052]
[-22.15510750 350.23095703]
[-18.54454994 364.81063843]
[-16.78983307 379.72787476]
[-16.91863060 394.74743652]
[-18.92890930 409.63238525]
[-22.78896523 424.14801025]
[-28.43791962 438.06533813]
[-35.78668213 451.16491699]
[-44.71934891 463.24014282]
[-55.09503937 474.10052490]
[-66.75011444 483.57482910]
[-79.50076294 491.51361084]
[-93.14588165 497.79168701]
[-107.47026825 502.30999756]
[-122.24800873 504.99731445]
[-137.24603271 505.81124878]
[-152.22779846 504.73898315]
[-166.95703125 501.79739380]
[-181.20143127 497.03286743]
[-194.73632812 490.52059937]
[-207.34826660 482.36325073]
[-218.83833313 472.68951416]
[-229.02532959 461.65191650]
[-237.74856567 449.42456055]
[-244.87048340 436.20028687]
[-250.27876282 422.18765259]
[-253.88809204 407.60766602]
[-255.64155579 392.69027710]
[-255.51148987 377.67074585]
[-253.49995422 362.78594971]
[-249.63867188 348.27066040]
[-243.98855591 334.35379028]
[-236.63868713 321.25482178]
[-227.70500183 309.18035889]
[-217.32839966 298.32083130]
[-205.67253113 288.84750366]
[-192.92120361 280.90979004]
[-179.27555847 274.63290405]
[-164.95080566 270.11578369]
[-150.17283630 267.42971802]
[-135.17474365 266.61703491]
[-120.19306183 267.69058228]
[-105.46407318 270.63339233]
[-91.22008514 275.39910889]
[-77.68573761 281.91253662]
[-65.07448578 290.07092285]
[-55.41367340 278.59622192]
[-45.75286102 267.12152100]
[-43.61239624 249.70356750]
[-26.24678230 243.57846069]
[-16.75788498 231.96119690]
[-7.26898623 220.34393311]
[2.21991229 208.72666931]
[11.70881081 197.10940552]
[13.76757908 182.35777283]
[28.48989296 176.56431580]
[37.97879028 164.94705200]
[47.46768951 153.32978821]
[56.95658875 141.71252441]
[66.44548798 130.09526062]
[75.84763336 118.40768433]
[85.16252136 106.65042877]
[87.18053436 89.99798584]
[102.84218597 83.99059296]
[111.98098755 72.09596252]
[121.11978912 60.20132828]
[130.25859070 48.30669785]
[139.39739990 36.41206360]
[134.28543091 26.15135956]
[133.37573242 14.77537918]
[136.76155090 3.93064666]
[143.91719055 -4.82752132]
[153.77923584 -10.25806236]
[164.90446472 -11.60996723]
[175.68096924 -8.72593594]
[185.34178162 -20.20063591]
[195.00257874 -31.67533684]
[197.97175598 -47.21543121]
[212.08769226 -51.96829987]
[221.74850464 -63.44300079]
[231.40931702 -74.91770172]
[240.89820862 -86.53496552]
[250.21308899 -98.29221344]
[259.52798462 -110.04946899]
[268.84286499 -121.80671692]
[257.81823730 -131.98883057]
[247.59527588 -142.97555542]
[238.23249817 -154.70397949]
[229.78355408 -167.10690308]
[222.29682922 -180.11329651]
[215.81520081 -193.64866638]
[210.37580872 -207.63545227]
[206.00981140 -221.99357605]
[202.74220276 -236.64076233]
[200.59170532 -251.49311829]
[199.57064819 -266.46557617]
[199.68486023 -281.47241211]
[200.93371582 -296.42758179]
[203.31002808 -311.24551392]
[206.80020142 -325.84124756]
[211.38424683 -340.13125610]
[217.03590393 -354.03363037]
[223.72280884 -367.46875000]
[231.40663147 -380.35968018]
[240.04339600 -392.63259888]
[249.58360291 -404.21713257]
[259.97262573 -415.04699707]
[271.15093994 -425.06011963]
[283.05453491 -434.19915771]
[295.61520386 -442.41174316]
[308.76101685 -449.65087891]
[322.41665649 -455.87506104]
[336.50393677 -461.04867554]
[350.94213867 -465.14202881]
[365.64855957 -468.13174438]
[380.53900146 -470.00064087]
[395.52810669 -470.73803711]
[410.53005981 -470.33972168]
[425.45892334 -468.80795288]
[440.22918701 -466.15148926]
[454.75625610 -462.38558960]
[468.95687866 -457.53182983]
[482.74978638 -451.61795044]
[496.05590820 -444.67788696]
[508.79904175 -436.75137329]
[520.90618896 -427.88378906]
[532.30804443 -418.12594604]
[542.93927002 -407.53375244]
[552.73895264 -396.16784668]
[561.65093994 -384.09335327]
[569.62426758 -371.37945557]
[576.61322021 -358.09893799]
[582.57775879 -344.32788086]
[587.48370361 -330.14517212]
[591.30297852 -315.63208008]
[594.01367188 -300.87167358]
[595.60034180 -285.94854736]
[596.05383301 -270.94815063]
[595.37152100 -255.95642090]
[593.55737305 -241.05923462]
[590.62176514 -226.34190369]
[586.58148193 -211.88876343]
[581.45971680 -197.78256226]
[575.28576660 -184.10412598]
[568.09497070 -170.93177795]
[559.92858887 -158.34100342]
[550.83337402 -146.40390015]
[540.86145020 -135.18885803]
[530.06982422 -124.76009369]
[518.52044678 -115.17736053]
[506.27938843 -106.49554443]
[493.41680908 -98.76437378]
[480.00634766 -92.02813721]
[466.12481689 -86.32540894]
[451.85177612 -81.68885803]
[437.26895142 -78.14505005]
[422.45986938 -75.71427917]
[407.50936890 -74.41046906]
[392.50308228 -74.24108887]
[377.52697754 -75.20709991]
[362.66680908 -77.30297852]
[348.00769043 -80.51672363]
[333.63363647 -84.82991028]
[319.62695312 -90.21784973]
[306.06784058 -96.64967346]
[293.03402710 -104.08853912]
[280.60009766 -112.49183655]
[271.28521729 -100.73458099]
[261.97033691 -88.97733307]
[252.65545654 -77.22007751]
[252.30570984 -72.45702362]
[248.96012878 -67.86310577]
[242.88401794 -65.25688934]
[233.22320557 -53.78218842]
[223.56239319 -42.30749130]
[221.28422546 -27.58814240]
[206.47727966 -22.01452637]
[196.81646729 -10.53982544]
[187.15567017 0.93487459]
[192.68952942 18.78618622]
[186.29508972 36.50735474]
[170.38598633 46.87607193]
[151.29202271 45.55086517]
[142.15322876 57.44549942]
[133.01441956 69.34013367]
[123.87562561 81.23476410]
[114.73682404 93.12939453]
[115.55124664 104.74739838]
[108.38700867 113.92971802]
[96.91976929 115.96531677]
[87.60488892 127.72256470]
[84.72863770 136.39233398]
[78.06275177 139.58416748]
[68.57385254 151.20143127]
[59.08495331 162.81869507]
[49.59605408 174.43595886]
[40.10715485 186.05322266]
[37.36967850 201.63578796]
[23.32607460 206.59829712]
[13.83717537 218.21556091]
[4.34827709 229.83282471]
[-5.14062119 241.45008850]
[-14.62951946 253.06735229]
[-14.11428452 265.95523071]
[-22.25677490 275.43594360]
[-34.27816010 276.78234863]
[-43.93897247 288.25704956]
[-53.59978104 299.73175049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 210]
[49 209]
[50 208]
[52 205]
[53 204]
[54 203]
[55 202]
[56 201]
[58 199]
[59 198]
[60 197]
[61 196]
[62 195]
[63 193]
[64 192]
[66 189]
[67 188]
[68 187]
[69 186]
[70 185]
[77 181]
[78 180]
[79 179]
[81 177]
[82 176]
[83 175]
[84 172]
[85 171]
[86 170]
[87 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
