%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[207.45162964 397.65130615]
[220.32092285 389.78796387]
[215.91992188 375.44812012]
[211.51892090 361.10827637]
[206.27220154 347.05578613]
[200.19836426 333.34054565]
[194.12452698 319.62527466]
[188.05070496 305.91000366]
[175.82254028 297.40582275]
[177.30914307 281.65460205]
[165.08097839 273.15042114]
[166.56759644 257.39920044]
[160.49375916 243.68392944]
[154.41992188 229.96867371]
[148.34609985 216.25340271]
[145.20626831 214.64907837]
[142.68753052 211.44422913]
[141.53366089 206.94735718]
[142.32252502 201.78744507]
[136.86717224 187.81463623]
[131.41181946 173.84184265]
[125.03321075 160.26564026]
[117.75997925 147.14694214]
[110.48674774 134.02824402]
[103.21352386 120.90955353]
[95.94029236 107.79086304]
[93.09214783 106.70568848]
[90.57591248 104.56021881]
[88.78504944 101.47537231]
[88.06285858 97.71575928]
[88.65122986 93.66770172]
[75.71182251 84.56372070]
[77.19226074 69.74286652]
[70.71276855 56.21452332]
[57.77336502 47.11054611]
[59.25380325 32.28969574]
[52.77430725 18.76135063]
[52.59787369 33.76031113]
[49.01335144 48.32572174]
[42.20877457 61.69351196]
[32.54109573 73.16242218]
[20.51746750 82.13083649]
[6.76862049 88.12826538]
[-7.98420525 90.84011841]
[-22.96710777 90.12412262]
[-37.39411163 86.01784515]
[-50.50840759 78.73668671]
[-61.62204742 68.66261292]
[-70.15202332 56.32407379]
[-75.65087891 42.36833954]
[-77.83015442 27.52749062]
[-76.57552338 12.58005238]
[-71.95281219 -1.68986320]
[-64.20450592 -14.53368473]
[-53.73707199 -25.27765274]
[-41.09960938 -33.35815811]
[-26.95505524 -38.35131454]
[-12.04540539 -39.99518967]
[2.84721160 -38.20354843]
[16.94155693 -33.07038116]
[29.49827194 -24.86496162]
[39.85865402 -14.01772881]
[47.47989273 -1.09619021]
[46.36424637 -16.05464363]
[45.24859619 -31.01309776]
[32.21657944 -39.22727585]
[26.58599663 -53.37471390]
[30.32141113 -67.95246124]
[41.78727341 -77.42198181]
[40.67162704 -92.38043976]
[39.55597687 -107.33889008]
[38.44033051 -122.29734802]
[37.32468033 -137.25579834]
[36.20903015 -152.21424866]
[35.09338379 -167.17269897]
[33.97773361 -182.13116455]
[27.85960960 -168.43559265]
[17.67429161 -157.42381287]
[4.49666071 -150.25791931]
[-10.28261757 -147.69415283]
[-25.10385132 -150.00305176]
[-38.40291595 -156.94097900]
[-48.77633667 -167.77575684]
[-55.12937546 -181.36393738]
[-56.79158401 -196.27156067]
[-53.58754349 -210.92536926]
[-45.85538483 -223.77891541]
[-34.41110611 -233.47573853]
[-20.46243858 -238.99250793]
[-5.48142815 -239.74702454]
[8.95094776 -235.65966797]
[21.31160545 -227.16177368]
[30.29609680 -215.15016174]
[34.95629120 -200.89224243]
[37.62208939 -215.65345764]
[40.28788376 -230.41467285]
[26.28267479 -235.92288208]
[13.62133598 -244.05780029]
[2.79053473 -254.50671387]
[-5.79342222 -266.86801147]
[-11.80059052 -280.66656494]
[-15.00007057 -295.37200928]
[-15.26888275 -310.41906738]
[-12.59669399 -325.22940063]
[-7.08621740 -339.23370361]
[1.05073977 -351.89373779]
[11.50141430 -362.72283936]
[23.86411095 -371.30477905]
[37.66363907 -377.30972290]
[52.36958313 -380.50683594]
[67.41668701 -380.77319336]
[82.22657776 -378.09860229]
[96.22999573 -372.58587646]
[108.88870239 -364.44686890]
[119.71612549 -353.99444580]
[128.29608154 -341.63034058]
[134.29878235 -327.82986450]
[137.49349976 -313.12338257]
[137.75744629 -298.07623291]
[135.08045959 -283.26678467]
[129.56544495 -269.26425171]
[121.42439270 -256.60687256]
[110.97021484 -245.78114319]
[98.60473633 -237.20318604]
[84.80326843 -231.20272827]
[70.09629059 -228.01039124]
[55.04909897 -227.74888611]
[52.38330460 -212.98765564]
[49.71751022 -198.22644043]
[48.93618774 -183.24681091]
[50.05183792 -168.28836060]
[51.16748428 -153.32989502]
[52.28313446 -138.37144470]
[53.39878082 -123.41299438]
[54.51443100 -108.45454407]
[55.63008118 -93.49608612]
[56.74572754 -78.53763580]
[69.48945618 -70.87373352]
[75.34602356 -57.01139069]
[71.87638092 -42.18523026]
[60.20705032 -32.12874603]
[61.32269669 -17.17029190]
[62.43834686 -2.21183896]
[66.30265045 12.28185463]
[72.78215027 25.81019974]
[85.25809479 33.94654083]
[84.24111176 49.73502731]
[90.72061157 63.26337433]
[103.19655609 71.39971924]
[102.17957306 87.18820190]
[109.05898285 100.51763153]
[116.33221436 113.63632965]
[123.60544586 126.75502014]
[130.87867737 139.87371826]
[138.15190125 152.99240112]
[140.59948730 138.19345093]
[150.58024597 126.99591064]
[165.00149536 122.86948395]
[179.39468384 127.09278870]
[189.29991150 138.35717773]
[191.64793396 153.17225647]
[185.71119690 166.94743347]
[173.32926941 175.41429138]
[158.33880615 175.94929504]
[145.38461304 168.38648987]
[150.83996582 182.35928345]
[156.29533386 196.33207703]
[162.06135559 210.17956543]
[168.13519287 223.89483643]
[174.20903015 237.61010742]
[180.28286743 251.32536316]
[192.94546509 260.81057739]
[191.02441406 275.58078003]
[203.68702698 285.06597900]
[201.76596069 299.83615112]
[207.83979797 313.55142212]
[213.91363525 327.26669312]
[219.98747253 340.98196411]
[224.44479370 326.65951538]
[236.40007019 317.60018921]
[251.39427185 317.18289185]
[263.83493042 325.56323242]
[269.08197021 339.61557007]
[265.17840576 354.09875488]
[253.58015442 363.61087036]
[238.61308289 364.60415649]
[225.85876465 356.70727539]
[230.25976562 371.04711914]
[234.66076660 385.38696289]
[249.72552490 384.67715454]
[264.49334717 387.73693848]
[278.03591919 394.37390137]
[289.50195312 404.17089844]
[298.17065430 416.51205444]
[303.49713135 430.62161255]
[305.14654541 445.61260986]
[303.01522827 460.54272461]
[297.23712158 474.47341919]
[288.17547607 486.52902222]
[276.39987183 495.95166016]
[262.65060425 502.14907837]
[247.79188538 504.73165894]
[232.75779724 503.53707886]
[218.49337769 498.64041138]
[205.89530945 490.34948730]
[195.75550842 479.18548584]
[188.71138000 465.85015869]
[185.20570374 451.18179321]
[185.45887756 436.10244751]
[189.45497131 421.55999756]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 189]
[3 188]
[4 187]
[5 178]
[6 177]
[7 176]
[8 175]
[10 173]
[12 171]
[13 170]
[14 169]
[15 168]
[19 167]
[20 166]
[21 165]
[22 155]
[23 154]
[24 153]
[25 152]
[26 151]
[31 150]
[33 148]
[34 147]
[36 145]
[37 144]
[63 143]
[64 142]
[65 141]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[94 129]
[95 128]
[96 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
