%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[120.27178192 550.76055908]
[107.81324768 542.26141357]
[97.86039734 530.93041992]
[91.03887177 517.47985840]
[87.77748108 502.75521851]
[88.28124237 487.68215942]
[92.51847839 473.20816040]
[100.22284698 460.24307251]
[110.91002655 449.60189819]
[123.90822601 441.95352173]
[138.40037537 437.77874756]
[137.95376587 422.78540039]
[137.50715637 407.79205322]
[129.39434814 395.30078125]
[136.71733093 381.27636719]
[136.27073669 366.28302002]
[135.82412720 351.28964233]
[135.37751770 336.29629517]
[134.03929138 321.35610962]
[131.81416321 306.52206421]
[129.58905029 291.68804932]
[127.03321838 276.90737915]
[124.14794159 262.18750000]
[121.26267242 247.46760559]
[108.79663086 239.39706421]
[105.66086578 224.51011658]
[114.21050262 211.48930359]
[111.32522583 196.76940918]
[108.43995667 182.04951477]
[98.39903259 171.04818726]
[103.33736420 156.01744080]
[100.45208740 141.29754639]
[97.56681824 126.57765961]
[94.68154144 111.85777283]
[91.35928345 97.23030853]
[87.60298157 82.70825195]
[83.84667969 68.18618774]
[72.90007019 56.76330566]
[77.20368195 42.50398254]
[73.44738007 27.98192406]
[69.69107819 13.45986462]
[65.93477631 -1.06219494]
[62.17847443 -15.58425426]
[58.42217636 -30.10631371]
[55.37562180 -15.41895485]
[49.28353882 -1.71178377]
[40.42308044 10.39161491]
[29.19733429 20.34061813]
[16.11700058 27.68261147]
[1.77714550 32.08358383]
[-13.16986275 33.34331894]
[-28.04403496 31.40451050]
[-42.16869736 26.35536003]
[-54.90127182 18.42556763]
[-65.66250610 7.97588873]
[-73.96284485 -4.51828718]
[-79.42466736 -18.48855782]
[-81.79950714 -33.29936981]
[-80.97931671 -48.27692795]
[-77.00141907 -62.73985672]
[-70.04676819 -76.03018951]
[-60.43176651 -87.54329681]
[-48.59382629 -96.75542450]
[-35.07149887 -103.24746704]
[-20.47995758 -106.72408295]
[-5.48301792 -107.02711487]
[9.23705578 -104.14277649]
[23.01060104 -98.20228577]
[35.21100998 -89.47589111]
[45.28324890 -78.36058807]
[52.76910019 -65.36204529]
[57.32886887 -51.06736755]
[59.55398560 -65.90141296]
[61.77910233 -80.73545837]
[64.00421906 -95.56949615]
[66.22933960 -110.40354156]
[68.45445251 -125.23758698]
[70.67957306 -140.07162476]
[72.90468597 -154.90567017]
[75.12980652 -169.73971558]
[62.16080475 -177.61885071]
[53.22053528 -189.83009338]
[49.64622879 -204.49426270]
[51.95229721 -219.36940002]
[59.75656128 -232.19354248]
[71.84317017 -241.02865601]
[86.35193634 -244.55355835]
[88.57705688 -259.38760376]
[81.44158173 -276.36306763]
[92.90071869 -289.65423584]
[93.45893097 -304.64385986]
[92.56610870 -319.61724854]
[91.67329407 -334.59066772]
[90.78047943 -349.56405640]
[89.88766479 -364.53747559]
[75.35306549 -368.84112549]
[63.16879272 -377.85882568]
[54.80614853 -390.50170898]
[51.27496338 -405.24301147]
[53.00165176 -420.30270386]
[59.77769852 -433.86224365]
[70.78487396 -444.28424072]
[84.69399261 -450.31018066]
[99.82547760 -451.21243286]
[114.35211945 -446.88201904]
[126.51975250 -437.84185791]
[134.85908508 -425.18359375]
[138.36309814 -410.43579102]
[136.60865784 -395.37930298]
[129.80763245 -381.83230591]
[118.78127289 -371.43060303]
[104.86106873 -365.43029785]
[105.75388336 -350.45687866]
[106.64669800 -335.48348999]
[107.53952026 -320.51007080]
[108.43233490 -305.53668213]
[115.51004028 -318.76187134]
[127.30486298 -328.02914429]
[141.82916260 -331.77676392]
[156.63534546 -329.37322998]
[169.22830200 -321.22354126]
[177.48590088 -308.70108032]
[180.01658630 -293.91607666]
[176.39390564 -279.36010742]
[167.22834778 -267.48611450]
[154.06445312 -260.29501343]
[139.12057495 -258.99865723]
[124.91501617 -263.81555176]
[113.84167480 -273.93389893]
[107.76624298 -287.65023804]
[114.84853363 -277.84371948]
[113.30061340 -265.44259644]
[103.41109467 -257.16247559]
[101.18598175 -242.32844543]
[114.02200317 -234.70179749]
[122.98445892 -222.70930481]
[126.68265533 -208.15980530]
[124.52287292 -193.26272583]
[116.80340576 -180.29261780]
[104.67382050 -171.24186707]
[89.96385193 -167.51460266]
[87.73873138 -152.68055725]
[85.51361847 -137.84651184]
[83.28849792 -123.01246643]
[81.06338501 -108.17842865]
[78.83826447 -93.34438324]
[76.61314392 -78.51033783]
[74.38803101 -63.67629623]
[72.16291046 -48.84225082]
[72.94423676 -33.86261368]
[76.70053864 -19.34055519]
[80.45683289 -4.81849575]
[84.21313477 9.70356369]
[87.96943665 24.22562218]
[91.72573853 38.74768066]
[102.40367126 49.13185501]
[98.36874390 64.42989349]
[102.12504578 78.95195007]
[105.88134003 93.47400665]
[108.36698914 95.23783112]
[110.26578522 97.94506836]
[111.22707367 101.38008118]
[110.98477173 105.20075989]
[109.40143585 108.97249603]
[112.28670502 123.69239044]
[115.17198181 138.41227722]
[118.05725098 153.13217163]
[128.30455017 165.18635559]
[123.15984344 179.16424561]
[126.04512024 193.88414001]
[128.93038940 208.60403442]
[141.76296997 217.43367004]
[144.47935486 232.40283203]
[135.98255920 244.58232117]
[138.86784363 259.30221558]
[141.75311279 274.02209473]
[145.18516541 277.95504761]
[146.62178040 282.36975098]
[146.21357727 286.42541504]
[144.42309570 289.46292114]
[146.64820862 304.29696655]
[148.87332153 319.13101196]
[156.96421814 306.50018311]
[170.89167786 300.93008423]
[185.46110535 304.49822998]
[195.23847961 315.87377930]
[196.57705688 330.81393433]
[188.97761536 343.74639893]
[175.27452087 349.84765625]
[160.57872009 346.84210205]
[150.37086487 335.84970093]
[150.81747437 350.84304810]
[151.26408386 365.83639526]
[151.71069336 380.82974243]
[159.85543823 394.39343262]
[152.50050354 407.34542847]
[152.94711304 422.33877563]
[153.39372253 437.33212280]
[168.10865784 440.63693237]
[181.53904724 447.49807739]
[192.84065247 457.48428345]
[201.30305481 469.96780396]
[206.39428711 484.16394043]
[207.79432678 499.18029785]
[205.41513062 514.07293701]
[199.40629578 527.90563965]
[190.14552307 539.80895996]
[178.21496582 549.03460693]
[164.36457825 555.00262451]
[149.46499634 557.33789062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 198]
[12 197]
[13 196]
[15 194]
[16 193]
[17 192]
[18 191]
[19 182]
[20 181]
[21 180]
[22 176]
[23 175]
[24 174]
[27 171]
[28 170]
[29 169]
[31 167]
[32 166]
[33 165]
[34 164]
[35 159]
[36 158]
[37 157]
[39 155]
[40 154]
[41 153]
[42 152]
[43 151]
[44 150]
[72 149]
[73 148]
[74 147]
[75 146]
[76 145]
[77 144]
[78 143]
[79 142]
[80 141]
[87 134]
[88 133]
[90 130]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
