%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[68.01511383 559.47167969]
[60.63726425 546.36676025]
[55.64731598 532.17974854]
[53.19691467 517.34173584]
[53.36052322 502.30361938]
[56.13317108 487.52243042]
[61.43059921 473.44732666]
[69.09182739 460.50604248]
[78.88404083 449.09185791]
[90.50965881 439.55163574]
[103.61539459 432.17526245]
[117.80297852 427.18692017]
[115.35725403 412.38766479]
[105.64833069 401.09225464]
[111.03199005 386.21520996]
[108.58626556 371.41592407]
[106.14053345 356.61666870]
[93.92031097 348.17855835]
[91.22917175 333.20483398]
[100.16269684 320.44433594]
[97.71697235 305.64508057]
[95.27124023 290.84579468]
[92.82551575 276.04653931]
[90.37979126 261.24725342]
[87.93405914 246.44798279]
[82.27064514 260.33773804]
[71.50394440 270.78179932]
[57.44834137 276.02014160]
[42.47245407 275.16998291]
[29.09997749 268.37463379]
[19.58441162 256.77917480]
[15.52929783 242.33772278]
[17.61799240 227.48385620]
[25.49851227 214.72071838]
[37.84285355 206.19914246]
[52.57077789 203.35516357]
[67.20037079 206.66801453]
[79.26628876 215.57945251]
[86.73572540 228.58930969]
[79.38079071 215.63731384]
[87.52554321 202.07362366]
[87.97215271 187.08027649]
[88.41875458 172.08691406]
[85.85388184 168.05821228]
[85.79259491 162.37550354]
[89.10848236 156.65567017]
[90.00129700 141.68226624]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[94.13247681 72.39832306]
[92.68305969 57.46851349]
[88.92675781 42.94645691]
[85.17045593 28.42439651]
[81.41415405 13.90233707]
[77.82740021 28.46719742]
[69.76123047 41.11381531]
[58.06689072 50.50756073]
[43.97851562 55.65708923]
[28.98288155 56.01895905]
[14.66251373 51.55498123]
[2.52867603 42.73625183]
[-6.13811922 30.49343300]
[-10.42324448 16.11853409]
[-9.87448025 1.12857568]
[-4.54973841 -12.89451694]
[4.98904753 -24.47085381]
[17.73522758 -32.37875366]
[32.34366608 -35.78368378]
[47.27269745 -34.32630539]
[60.94683075 -28.16042519]
[71.92299652 -17.93673897]
[79.04292297 -4.73399925]
[71.30562592 -18.53417206]
[79.04292297 -31.26144409]
[79.04292297 -46.26144409]
[79.04292297 -61.26144409]
[66.58238220 -67.61735535]
[58.11635208 -78.66916656]
[55.25174713 -92.22543335]
[58.49182129 -105.62882996]
[67.14884949 -116.27704620]
[79.48916626 -122.12801361]
[79.71249390 -137.12634277]
[79.93582153 -152.12469482]
[80.15914917 -167.12303162]
[80.38247681 -182.12136841]
[80.60580444 -197.11970520]
[80.82913208 -212.11804199]
[81.05245972 -227.11637878]
[68.64047241 -239.44366455]
[68.97755432 -256.59594727]
[81.36681366 -267.96896362]
[81.36681366 -282.96896362]
[81.36681366 -297.96896362]
[81.36681366 -312.96896362]
[81.36681366 -327.96896362]
[67.30962372 -333.75375366]
[56.53975296 -344.48120117]
[50.69952393 -358.51544189]
[50.67952728 -373.71636963]
[56.48281479 -387.76593018]
[67.22442627 -398.52169800]
[81.26634216 -404.34347534]
[96.46728516 -404.34347534]
[110.50920105 -398.52169800]
[121.25081635 -387.76593018]
[127.05410004 -373.71636963]
[127.03410339 -358.51544189]
[121.19387054 -344.48120117]
[110.42400360 -333.75375366]
[96.36681366 -327.96896362]
[96.36681366 -312.96896362]
[96.36681366 -297.96896362]
[96.36681366 -282.96896362]
[96.36681366 -267.96896362]
[106.66321564 -260.22210693]
[110.67764282 -247.77355957]
[106.73123169 -235.09931946]
[96.05079651 -226.89305115]
[95.82746887 -211.89471436]
[95.60414124 -196.89637756]
[95.38081360 -181.89804077]
[95.15748596 -166.89970398]
[94.93415833 -151.90136719]
[94.71083069 -136.90301514]
[94.48750305 -121.90468597]
[108.55817413 -113.95932770]
[116.74914551 -99.92138672]
[116.74300385 -83.57461548]
[108.44673157 -69.38069916]
[94.04292297 -61.26144409]
[94.04292297 -46.26144409]
[94.04292297 -31.26144409]
[101.78022766 -18.53417206]
[94.04292297 -4.73399925]
[95.93621826 10.14603615]
[99.69252014 24.66809464]
[103.44881439 39.19015503]
[107.20511627 53.71221542]
[110.40635681 39.05779266]
[117.39376068 25.78465271]
[127.66288757 14.85099316]
[140.47242737 7.04612494]
[154.89761353 2.93348765]
[169.89710999 2.80997634]
[184.38806152 6.68450737]
[197.32438660 14.27737522]
[207.77218628 25.04044342]
[214.97720337 38.19672012]
[218.41934204 52.79643631]
[217.85008240 67.78562927]
[213.31051636 82.08221436]
[205.12838745 94.65411377]
[193.89434814 104.59375000]
[180.41938782 111.18357086]
[165.67630005 113.94784546]
[150.72938538 112.68702698]
[136.65766907 107.49213409]
[124.47701263 98.73818207]
[115.06674194 87.05713654]
[109.10588074 73.29113770]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[104.97470856 142.57508850]
[104.08188629 157.54849243]
[103.41210175 172.53352356]
[102.96549988 187.52687073]
[102.51889038 202.52023315]
[109.84188080 216.54464722]
[101.72907257 229.03590393]
[102.73332977 244.00225830]
[105.17906189 258.80151367]
[107.62478638 273.60079956]
[110.07051086 288.40005493]
[112.51624298 303.19934082]
[114.96196747 317.99859619]
[127.52597046 327.20642090]
[129.79547119 342.24981689]
[120.93980408 354.17092896]
[123.38553619 368.97018433]
[125.83126068 383.76947021]
[135.71511841 396.12341309]
[130.15652466 409.94192505]
[132.60224915 424.74118042]
[147.64039612 424.89968872]
[162.42253113 427.66729736]
[176.49943542 432.95996094]
[189.44331360 440.61676025]
[200.86083984 450.40509033]
[210.40502930 462.02746582]
[217.78585815 475.13070679]
[222.77902222 489.31658936]
[225.23278809 504.15405273]
[225.07258606 519.19219971]
[222.30329895 533.97399902]
[217.00906372 548.05029297]
[209.35076904 560.99328613]
[199.56114197 572.40972900]
[187.93769836 581.95257568]
[174.83363342 589.33190918]
[160.64717102 594.32348633]
[145.80943298 596.77557373]
[130.77131653 596.61364746]
[115.98982239 593.84271240]
[101.91412354 588.54687500]
[88.97197723 580.88708496]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 188]
[13 187]
[15 185]
[16 184]
[17 183]
[20 180]
[21 179]
[22 178]
[23 177]
[24 176]
[25 175]
[39 174]
[41 172]
[42 171]
[43 170]
[46 169]
[47 168]
[48 167]
[49 166]
[51 164]
[52 163]
[53 141]
[54 140]
[55 139]
[56 138]
[74 137]
[76 135]
[77 134]
[78 133]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
