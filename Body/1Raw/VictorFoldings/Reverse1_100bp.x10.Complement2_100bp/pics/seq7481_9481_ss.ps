%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[-12.55652142 389.23861694]
[-14.56076241 404.46615601]
[-23.92299271 416.64172363]
[-38.12482071 422.49011230]
[-53.34602356 420.43814087]
[-65.49217224 411.03781128]
[-71.29602051 396.81771851]
[-69.19635773 381.60302734]
[-59.75798416 369.48638916]
[-45.51977158 363.72714233]
[-43.51575851 348.86160278]
[-41.51174545 333.99609375]
[-39.50773239 319.13055420]
[-37.50371933 304.26504517]
[-35.49970627 289.39950562]
[-33.49568939 274.53396606]
[-41.87687302 286.97406006]
[-52.56146622 297.50210571]
[-65.12390900 305.69873047]
[-79.06384277 311.23754883]
[-93.82604980 313.89785767]
[-108.82254791 313.57379150]
[-123.45603180 310.27819824]
[-137.14367676 304.14233398]
[-149.34027100 295.41061401]
[-159.56007385 284.43081665]
[-167.39599609 271.64028931]
[-172.53594971 257.54840088]
[-174.77522278 242.71649170]
[-174.02462769 227.73529053]
[-170.31402588 213.20147705]
[-163.79124451 199.69395447]
[-154.71607971 187.75070190]
[-143.44998169 177.84742737]
[-130.44166565 170.37855530]
[-116.20927429 165.64158630]
[-101.31965637 163.82519531]
[-86.36586761 165.00170898]
[-71.94351196 169.12429810]
[-58.62702179 176.02871704]
[-46.94679260 185.44000244]
[-37.36804199 196.98329163]
[-30.27229118 210.19882202]
[-25.94215584 224.56022644]
[-24.55010605 239.49549866]
[-26.15072823 254.40567017]
[-25.85949898 239.51391602]
[-11.92994404 232.01205444]
[-3.88877058 219.34951782]
[4.15240240 206.68699646]
[-10.68506622 208.88916016]
[-22.81553078 200.06579590]
[-25.29010773 185.27131653]
[-16.69124985 172.98068237]
[-1.94477141 170.23452759]
[10.50187397 178.60597229]
[13.51885796 193.29852295]
[22.65766144 181.40390015]
[31.79646301 169.50926208]
[40.93526459 157.61462402]
[50.07406616 145.72000122]
[59.21287155 133.82536316]
[68.35166931 121.93073273]
[53.95536423 126.14337158]
[39.35840225 122.68958282]
[28.37639618 112.47216797]
[23.88001442 98.16194153]
[27.04460144 83.49956512]
[37.04294205 72.31774139]
[51.26149368 67.53937531]
[65.98356628 70.41352081]
[77.36083221 80.18888092]
[82.41931152 94.31020355]
[79.83710480 109.08540344]
[90.63925934 98.67803192]
[91.92163086 93.59182739]
[95.96242523 89.58616638]
[101.92140198 88.12756348]
[113.02864075 78.04642487]
[124.13587189 67.96528625]
[135.24310303 57.88414383]
[146.35034180 47.80300522]
[157.45756531 37.72186661]
[168.56480408 27.64072990]
[179.67204285 17.55959129]
[190.77928162 7.47845173]
[200.86041260 -3.62878203]
[209.82110596 -15.65816021]
[218.78179932 -27.68753815]
[227.74250793 -39.71691513]
[236.70320129 -51.74629211]
[244.83840942 -64.34860229]
[244.76298523 -80.16963196]
[257.70108032 -87.54896545]
[264.97433472 -100.66766357]
[272.24755859 -113.78635406]
[279.52078247 -126.90504456]
[279.44534302 -142.72607422]
[292.38345337 -150.10540771]
[299.65667725 -163.22410583]
[287.63058472 -172.22892761]
[276.94271851 -182.78747559]
[267.79217529 -194.70306396]
[260.34939575 -207.75369263]
[254.75309753 -221.69625854]
[251.10749817 -236.27101135]
[249.48051453 -251.20643616]
[249.90246582 -266.22427368]
[252.36549377 -281.04476929]
[256.82369995 -295.39184570]
[263.19403076 -308.99819946]
[271.35781860 -321.61032104]
[281.16299438 -332.99331665]
[292.42684937 -342.93511963]
[304.93957520 -351.25048828]
[318.46807861 -357.78451538]
[332.76031494 -362.41549683]
[347.55001831 -365.05712891]
[362.56167603 -365.66024780]
[377.51562500 -364.21359253]
[392.13330078 -360.74411011]
[406.14236450 -355.31640625]
[419.28186035 -348.03164673]
[431.30697632 -339.02554321]
[441.99371338 -328.46582031]
[451.14297485 -316.54925537]
[458.58432007 -303.49780273]
[464.17910767 -289.55462646]
[467.82315063 -274.97949219]
[469.44851685 -260.04391479]
[469.02493286 -245.02610779]
[466.56030273 -230.20587158]
[462.10055542 -215.85928345]
[455.72872925 -202.25363159]
[447.56359863 -189.64236450]
[437.75720215 -178.26043701]
[426.49224854 -168.31987000]
[413.97860718 -160.00585938]
[400.44943237 -153.47329712]
[386.15667725 -148.84385681]
[371.36669922 -146.20381165]
[356.35498047 -145.60232544]
[341.40115356 -147.05061340]
[326.78387451 -150.52168274]
[312.77539062 -155.95088196]
[305.50216675 -142.83218384]
[306.09780884 -127.94949341]
[292.63946533 -119.63182068]
[285.36624146 -106.51312256]
[278.09301758 -93.39443207]
[270.81979370 -80.27573395]
[271.41543579 -65.39304352]
[257.95709229 -57.07537460]
[271.80532837 -62.83966446]
[286.58993530 -60.30685425]
[297.72976685 -50.26176834]
[301.77304077 -35.81697845]
[297.46691895 -21.44836426]
[286.14562988 -11.60819626]
[271.31726074 -9.34555817]
[257.57653809 -15.36155224]
[249.18115234 -27.79205704]
[248.73257446 -42.78559494]
[239.77188110 -30.75621986]
[230.81118774 -18.72684097]
[221.85047913 -6.69746399]
[212.88978577 5.33191395]
[226.82183838 -0.22667798]
[241.81326294 0.28055137]
[255.33773804 6.76812506]
[265.11614990 18.14277267]
[269.50067139 32.48766708]
[267.75244141 47.38544083]
[260.16604614 60.32555771]
[248.01992798 69.12738037]
[233.36094666 72.30764771]
[218.65937805 69.33042908]
[206.39268494 60.69743347]
[198.62805176 47.86347961]
[196.67393494 32.99131012]
[200.86041260 18.58568573]
[189.75317383 28.66682434]
[178.64595032 38.74796295]
[167.53871155 48.82910156]
[156.43147278 58.91024017]
[145.32424927 68.99137878]
[134.21701050 79.07251740]
[123.10977936 89.15365601]
[112.00254059 99.23479462]
[101.04663086 109.48018646]
[90.24447632 119.88755798]
[80.24630737 131.06953430]
[71.10750580 142.96417236]
[61.96870041 154.85879517]
[52.82989883 166.75343323]
[43.69109726 178.64807129]
[34.55229187 190.54269409]
[25.41349030 202.43733215]
[16.81492805 214.72816467]
[8.77375412 227.39070129]
[0.73258132 240.05322266]
[-0.13380629 255.85069275]
[-13.48820305 262.44683838]
[-18.63016319 276.53799438]
[-20.63417625 291.40350342]
[-22.63818932 306.26904297]
[-24.64220428 321.13458252]
[-26.64621735 336.00009155]
[-28.65023041 350.86563110]
[-30.65424538 365.73117065]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 210]
[11 209]
[12 208]
[13 207]
[14 206]
[15 205]
[16 204]
[46 203]
[48 201]
[49 200]
[50 199]
[57 198]
[58 197]
[59 196]
[60 195]
[61 194]
[62 193]
[63 192]
[74 191]
[75 190]
[78 189]
[79 188]
[80 187]
[81 186]
[82 185]
[83 184]
[84 183]
[85 182]
[86 181]
[87 167]
[88 166]
[89 165]
[90 164]
[91 163]
[92 153]
[94 151]
[95 150]
[96 149]
[97 148]
[99 146]
[100 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
