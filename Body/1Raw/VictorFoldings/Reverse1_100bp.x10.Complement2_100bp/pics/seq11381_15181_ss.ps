%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[264.53170776 446.66781616]
[257.65228271 433.33837891]
[250.77287292 420.00894165]
[243.89346313 406.67950439]
[237.01403809 393.35009766]
[224.30137634 385.58880615]
[224.84782410 369.77703857]
[217.96841431 356.44760132]
[211.08900452 343.11819458]
[196.59585571 346.87988281]
[181.62178040 347.32217407]
[166.91769409 344.41964722]
[153.22164917 338.31472778]
[141.22186279 329.31063843]
[131.52207947 317.85641479]
[124.61121368 304.52441406]
[120.83872223 289.98181152]
[120.39691925 274.95715332]
[123.31118011 260.20382690]
[129.43849182 246.46238708]
[138.47450256 234.42332458]
[149.96859741 224.69236755]
[143.08918762 211.36293030]
[136.20977783 198.03350830]
[124.78516388 194.05798340]
[118.94472504 183.00932312]
[122.30162048 170.55564880]
[115.62142181 157.12527466]
[108.84143066 143.74499512]
[105.95430756 158.46452332]
[95.64459229 169.35992432]
[81.10687256 173.05514526]
[66.84580994 168.40518188]
[57.28036118 156.85087585]
[55.37447357 141.97244263]
[61.71871185 128.38014221]
[74.34724426 120.28569031]
[89.34698486 120.19724274]
[102.07026672 128.14239502]
[97.03335571 114.01336670]
[86.50777435 104.80989838]
[88.83761597 91.02355194]
[83.80070496 76.89452362]
[78.76378632 62.76549149]
[73.72686768 48.63646317]
[68.06408691 34.74643707]
[55.26166153 25.45081711]
[56.96259308 10.65365219]
[50.68523407 -2.96966434]
[44.40787125 -16.59298134]
[38.13051224 -30.21629715]
[31.85315132 -43.83961105]
[19.05072784 -53.13523102]
[20.75166130 -67.93239594]
[14.47430134 -81.55570984]
[1.67187834 -90.85133362]
[3.37281251 -105.64849854]
[2.97308683 -90.65382385]
[-0.82789677 -76.14339447]
[-7.83074665 -62.87839890]
[-17.66810799 -51.55469513]
[-29.82393074 -42.76629257]
[-43.66054535 -36.97422409]
[-58.45211029 -34.48232269]
[-73.42269135 -35.42131042]
[-87.78696442 -39.74193192]
[-100.79139709 -47.21753311]
[-111.75381470 -57.45595932]
[-120.09915161 -69.92012787]
[-125.38961792 -83.95618439]
[-127.34768677 -98.82783508]
[-125.87065125 -113.75493622]
[-121.03599548 -127.95444489]
[-113.09732056 -140.68148804]
[-102.47108459 -151.26841736]
[-89.71471405 -159.15986633]
[-75.49739075 -163.94187927]
[-60.56491852 -165.36358643]
[-45.70062637 -163.35041809]
[-31.68426704 -158.00798035]
[-19.25111198 -149.61651611]
[-9.05337620 -138.61624146]
[-1.62536478 -125.58266449]
[-2.51818061 -140.55606079]
[-3.41099644 -155.52947998]
[-12.52236557 -164.65885925]
[-12.95773602 -177.14862061]
[-5.02879477 -186.28419495]
[-5.69857979 -201.26922607]
[-6.36836529 -216.25427246]
[-7.03815031 -231.23930359]
[-7.70793533 -246.22434998]
[-8.37772083 -261.20938110]
[-9.04750538 -276.19442749]
[-9.71729088 -291.17947388]
[-10.38707638 -306.16448975]
[-24.77996063 -310.98211670]
[-36.45810699 -320.67669678]
[-43.84214401 -333.93719482]
[-45.93344116 -348.97018433]
[-42.44916534 -363.74258423]
[-33.86053848 -376.25659180]
[-21.32910156 -384.81973267]
[-6.54962778 -388.27395630]
[8.47908020 -386.15206909]
[21.72451401 -378.74105835]
[31.39533424 -367.04321289]
[36.18364716 -352.64056396]
[35.44186783 -337.48092651]
[29.27031708 -323.61456299]
[18.50364685 -312.91674805]
[4.59796286 -306.83428955]
[5.26774788 -291.84924316]
[5.93753338 -276.86419678]
[6.60731840 -261.87918091]
[7.27710342 -246.89413452]
[7.94688845 -231.90908813]
[8.61667347 -216.92405701]
[9.28645897 -201.93901062]
[9.95624447 -186.95397949]
[20.18390274 -172.69346619]
[11.56240940 -156.42228699]
[12.45522499 -141.44888306]
[13.34804058 -126.47547913]
[16.99612808 -111.92585754]
[29.34955215 -103.60466766]
[28.09761810 -87.83307648]
[34.37497711 -74.20975494]
[46.72840118 -65.88857269]
[45.47646713 -50.11697388]
[51.75382996 -36.49365616]
[58.03118896 -22.87034035]
[64.30854797 -9.24702549]
[70.58590698 4.37629128]
[82.93933105 12.69747925]
[81.68740082 28.46907425]
[87.88430786 14.80897713]
[101.87622833 9.40285206]
[115.64794922 15.34757519]
[121.31040192 29.23773766]
[115.61988068 43.11642456]
[101.83617401 49.03329468]
[87.85589600 43.59954834]
[92.89281464 57.72857666]
[97.92973328 71.85760498]
[102.96664429 85.98663330]
[113.49222565 95.19010162]
[111.16238403 108.97644806]
[116.19929504 123.10547638]
[122.17086029 136.86558533]
[128.88752747 143.05624390]
[129.05180359 150.44506836]
[135.73199463 163.87544250]
[151.30969238 173.69464111]
[149.53919983 191.15409851]
[156.41862488 204.48352051]
[163.29803467 217.81294250]
[177.88850403 214.08148193]
[192.93629456 213.69071960]
[207.68659973 216.65705872]
[221.40031433 222.82856750]
[233.39097595 231.89280701]
[243.05915833 243.39260864]
[249.92243958 256.74914551]
[253.63946533 271.29113770]
[254.02693176 286.28839111]
[251.06863403 300.98873901]
[244.91609192 314.65551758]
[235.88078308 326.60464478]
[224.41842651 336.23876953]
[231.29785156 349.56820679]
[238.17726135 362.89764404]
[251.38198853 371.61230469]
[250.34347534 386.47067261]
[257.22290039 399.80010986]
[264.10229492 413.12954712]
[270.98171997 426.45895386]
[277.86111450 439.78839111]
[292.24313354 435.38418579]
[307.18048096 433.61895752]
[322.19293213 434.54946899]
[336.79794312 438.14581299]
[350.52600098 444.29238892]
[362.93579102 452.79159546]
[373.62841797 463.37023926]
[382.26016235 475.68823242]
[388.55352783 489.34960938]
[392.30621338 503.91522217]
[393.39758301 518.91687012]
[391.79257202 533.87225342]
[387.54275513 548.30065918]
[380.78475952 561.73822021]
[371.73580933 573.75311279]
[360.68682861 583.95892334]
[347.99295044 592.02770996]
[334.06225586 597.70007324]
[319.34255981 600.79364014]
[304.30700684 601.20892334]
[289.43899536 598.93267822]
[275.21640015 594.03802490]
[262.09643555 586.68231201]
[250.50090027 577.10192871]
[240.80249023 565.60498047]
[233.31300354 552.56091309]
[228.27316284 538.38909912]
[225.84500122 523.54510498]
[226.10658264 508.50613403]
[229.04946899 493.75555420]
[234.57908630 479.76760864]
[242.51765442 466.99188232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 178]
[2 177]
[3 176]
[4 175]
[5 174]
[7 172]
[8 171]
[9 170]
[22 157]
[23 156]
[24 155]
[27 153]
[28 152]
[29 150]
[39 149]
[40 148]
[42 146]
[43 145]
[44 144]
[45 143]
[46 136]
[48 134]
[49 133]
[50 132]
[51 131]
[52 130]
[54 128]
[55 127]
[57 125]
[83 124]
[84 123]
[85 122]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
[93 115]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
