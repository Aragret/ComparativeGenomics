%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[36.79369354 671.61968994]
[23.13914299 677.84271240]
[9.09562588 683.12976074]
[-5.27277851 687.45660400]
[-19.90051079 690.80358887]
[-34.72082520 693.15545654]
[-49.66610336 694.50140381]
[-64.66815186 694.83532715]
[-79.65851593 694.15570068]
[-94.56880188 692.46563721]
[-109.33097839 689.77282715]
[-123.87767792 686.08959961]
[-138.14253235 681.43267822]
[-152.06047058 675.82336426]
[-165.56796265 669.28729248]
[-178.60337830 661.85418701]
[-191.10725403 653.55804443]
[-203.02253723 644.43670654]
[-214.29484558 634.53173828]
[-224.87275696 623.88842773]
[-234.70799255 612.55523682]
[-243.75569153 600.58392334]
[-251.97457886 588.02911377]
[-259.32711792 574.94812012]
[-265.77981567 561.40057373]
[-271.30316162 547.44830322]
[-275.87200928 533.15502930]
[-279.46551514 518.58587646]
[-282.06723022 503.80737305]
[-283.66531372 488.88696289]
[-284.25247192 473.89270020]
[-283.82604980 458.89297485]
[-282.38793945 443.95629883]
[-279.94476318 429.15075684]
[-276.50759888 414.54394531]
[-272.09219360 400.20248413]
[-266.71868896 386.19186401]
[-260.41156006 372.57592773]
[-253.19961548 359.41687012]
[-245.11575317 346.77471924]
[-236.19686890 334.70715332]
[-226.48364258 323.26922607]
[-216.02040100 312.51312256]
[-204.85488892 302.48794556]
[-193.03804016 293.23941040]
[-180.62379456 284.80975342]
[-167.66877747 277.23739624]
[-154.23211670 270.55691528]
[-140.37510681 264.79876709]
[-126.16096497 259.98925781]
[-111.65457153 256.15032959]
[-96.92210388 253.29946899]
[-82.03079224 251.44970703]
[-67.04856873 250.60946655]
[-52.04380417 250.78260803]
[-37.08496094 251.96832275]
[-22.24028969 254.16120911]
[-7.57752848 257.35125732]
[6.83642149 261.52389526]
[20.93579102 266.66012573]
[27.00962639 252.94483948]
[33.08345795 239.22958374]
[39.15729523 225.51431274]
[37.23624039 210.74411011]
[49.89884567 201.25891113]
[55.97267914 187.54364014]
[62.04651260 173.82838440]
[68.12034607 160.11311340]
[74.19418335 146.39784241]
[79.85697174 132.50781250]
[85.10368347 118.45534515]
[90.35040283 104.40287781]
[95.07054138 90.16488647]
[99.25755310 75.76110840]
[103.44456482 61.35732269]
[96.13708496 53.58400345]
[92.74137878 43.55522919]
[93.80667877 33.10206223]
[99.07408905 24.10387802]
[107.53530884 18.15045547]
[117.62500000 16.26123619]
[122.45099640 2.05878091]
[127.27699280 -12.14367485]
[129.39161682 -26.99387169]
[128.72183228 -41.97891235]
[128.05204773 -56.96395111]
[127.38226318 -71.94898987]
[126.71247864 -86.93402863]
[126.04269409 -101.91906738]
[125.14987946 -116.89247131]
[124.03422546 -131.85092163]
[122.91857910 -146.80937195]
[121.80293274 -161.76783752]
[120.68728638 -176.72628784]
[119.57163239 -191.68473816]
[105.04169464 -196.07167053]
[93.08007812 -205.41427612]
[85.30449677 -218.44903564]
[82.76654053 -233.41310120]
[85.80944061 -248.28269958]
[94.02167511 -261.04687500]
[106.29260254 -269.97930908]
[120.96267700 -273.87203979]
[136.04789734 -272.19857788]
[149.50811768 -265.18521118]
[159.52293396 -253.78048706]
[164.73794556 -239.52677917]
[164.44784546 -224.35179138]
[158.69189453 -210.30781555]
[148.24850464 -199.29417419]
[134.53009033 -192.80038452]
[135.64573669 -177.84193420]
[136.76138306 -162.88348389]
[137.87702942 -147.92503357]
[138.99267578 -132.96656799]
[140.10833740 -118.00811768]
[143.07841492 -114.26811218]
[143.73057556 -108.62260437]
[141.02772522 -102.58885193]
[141.69750977 -87.60381317]
[142.36730957 -72.61877441]
[143.03709412 -57.63373566]
[143.70687866 -42.64869690]
[144.37666321 -27.66365814]
[150.40757751 -41.39784622]
[159.40525818 -53.39958572]
[170.89770508 -63.03928375]
[184.28202820 -69.81126404]
[198.85614014 -73.36028290]
[213.85548401 -73.50016785]
[228.49324036 -70.22357178]
[242.00154114 -63.70238876]
[253.67175293 -54.27869797]
[262.89172363 -42.44685364]
[269.17773438 -28.82753181]
[272.20004272 -14.13516903]
[271.80017090 0.85949981]
[267.99899292 15.36988354]
[260.99600220 28.63479805]
[251.15850830 39.95838928]
[239.00259399 48.74665070]
[225.16590881 54.53856277]
[210.37431335 57.03029251]
[195.40374756 56.09112930]
[181.03952026 51.77034378]
[168.03517151 44.29459000]
[157.07287598 34.05603790]
[148.72767639 21.59177399]
[143.43737793 7.55565310]
[141.47944641 -7.31767702]
[136.65345764 6.88477850]
[131.82745361 21.08723450]
[141.69752502 37.88294601]
[135.94448853 56.81455994]
[117.84834290 65.54433441]
[113.66133118 79.94812012]
[109.47431946 94.35189819]
[123.67668152 89.52561951]
[136.38681030 97.49132538]
[138.23529053 112.37699890]
[127.85946655 123.20946503]
[112.90802765 122.00344849]
[104.40287781 109.64959717]
[99.15615845 123.70206451]
[93.90943909 137.75453186]
[94.78005981 142.00846863]
[94.30001068 145.92434692]
[92.74142456 149.11906433]
[90.47288513 151.33724976]
[87.90944672 152.47167969]
[81.83561707 166.18695068]
[75.76177979 179.90220642]
[69.68795013 193.61747742]
[63.61411285 207.33274841]
[65.10072327 223.08395386]
[52.87255859 231.58815002]
[46.79872513 245.30340576]
[40.72489166 259.01867676]
[34.65105820 272.73394775]
[47.93017960 279.72235107]
[60.70722198 287.59127808]
[72.92388153 296.30484009]
[84.52441406 305.82327271]
[95.45589447 316.10314941]
[105.66844177 327.09756470]
[115.11545563 338.75631714]
[123.75383759 351.02624512]
[131.54415894 363.85137939]
[138.45089722 377.17315674]
[144.44252014 390.93084717]
[149.49168396 405.06161499]
[153.57536316 419.50100708]
[156.67492676 434.18316650]
[158.77621460 449.04107666]
[159.86965942 464.00695801]
[159.95027161 479.01251221]
[159.01765442 493.98925781]
[157.07609558 508.86889648]
[154.13444519 523.58349609]
[150.20611572 538.06591797]
[145.30905151 552.25012207]
[139.46557617 566.07135010]
[132.70234680 579.46661377]
[125.05025482 592.37469482]
[116.54418182 604.73669434]
[107.22296143 616.49627686]
[97.12911224 627.59973145]
[86.30870056 637.99645996]
[74.81108856 647.63897705]
[62.68874359 656.48327637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 179]
[61 178]
[62 177]
[63 176]
[65 174]
[66 173]
[67 172]
[68 171]
[69 170]
[70 165]
[71 164]
[72 163]
[73 157]
[74 156]
[75 155]
[81 152]
[82 151]
[83 150]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
