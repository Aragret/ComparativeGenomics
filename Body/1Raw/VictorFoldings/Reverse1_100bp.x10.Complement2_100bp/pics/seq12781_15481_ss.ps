%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[72.24391174 672.53521729]
[59.68474579 681.02301025]
[44.97923279 684.70050049]
[29.90312958 683.12347412]
[16.27695084 676.48248291]
[5.74612474 665.57934570]
[-0.41770089 651.73077393]
[-1.47021389 636.60900879]
[2.71568155 622.04010010]
[11.63451862 609.78326416]
[24.20930290 601.31860352]
[38.92156982 597.66821289]
[32.55033493 584.20507812]
[41.68135071 571.28472900]
[43.24187469 556.36614990]
[44.80239487 541.44750977]
[34.31354523 552.17059326]
[19.71658325 555.62438965]
[5.53454018 550.73870850]
[-3.83812475 539.02746582]
[-5.49718952 524.11950684]
[1.07142544 510.63421631]
[13.83236313 502.75015259]
[28.83150864 502.91027832]
[41.42121124 511.06500244]
[47.70045853 524.68774414]
[51.24013138 510.11135864]
[54.77980423 495.53497314]
[58.31947327 480.95858765]
[61.85914612 466.38223267]
[65.39881897 451.80584717]
[68.17443085 437.06488037]
[70.17844391 422.19937134]
[71.84998322 407.29278564]
[73.18821716 392.35260010]
[74.52645111 377.41241455]
[75.86468506 362.47222900]
[77.20291901 347.53204346]
[78.54115295 332.59185791]
[70.31040192 317.09277344]
[81.02845001 302.11929321]
[82.14409637 287.16085815]
[83.25975037 272.20239258]
[69.26771545 264.48400879]
[60.00868225 251.38880920]
[57.37778473 235.50920105]
[61.95179367 220.01602173]
[72.86365509 208.02540588]
[87.96633911 201.97204590]
[88.85915375 186.99864197]
[89.75196838 172.02523804]
[90.64478302 157.05183411]
[91.53759766 142.07843018]
[92.09580994 127.08882141]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.12918091 57.68951416]
[85.59819794 43.77567673]
[93.52413177 31.16501045]
[93.74745941 16.16667366]
[93.97078705 1.16833591]
[86.43981171 -12.74550343]
[94.36574554 -25.35616875]
[94.58907318 -40.35450363]
[94.81240082 -55.35284424]
[91.93111420 -61.30345154]
[92.41489410 -66.96586609]
[95.27230072 -70.79264832]
[95.94208527 -85.77768707]
[96.61186981 -100.76272583]
[89.49849701 -114.89462280]
[97.79638672 -127.26371002]
[98.46617126 -142.24874878]
[86.50259399 -151.95333862]
[82.59305573 -166.66961670]
[88.03429413 -180.70019531]
[100.54418945 -188.74012756]
[101.21397400 -203.72515869]
[101.88375854 -218.71020508]
[102.55355072 -233.69523621]
[90.58997345 -243.39982605]
[86.68043518 -258.11611938]
[92.12167358 -272.14666748]
[104.63156891 -280.18661499]
[105.30135345 -295.17166138]
[96.43856049 -311.31265259]
[106.45276642 -325.72384644]
[106.89937592 -340.71722412]
[107.34597778 -355.71057129]
[107.79258728 -370.70391846]
[108.23919678 -385.69726562]
[108.68579865 -400.69061279]
[94.16024780 -404.72442627]
[81.02247620 -412.11785889]
[70.03631592 -422.44100952]
[61.84046936 -435.09371948]
[56.91144180 -449.34042358]
[55.53579712 -464.35278320]
[57.79351807 -479.25802612]
[63.55334091 -493.18957520]
[72.48039246 -505.33746338]
[84.05567169 -514.99542236]
[97.60620880 -521.60198975]
[112.34418488 -524.77301025]
[127.41276550 -524.32415771]
[141.93586731 -520.28149414]
[155.06915283 -512.88012695]
[166.04905701 -502.55032349]
[174.23722839 -489.89263916]
[179.15762329 -475.64294434]
[180.52415466 -460.62976074]
[178.25740051 -445.72589111]
[172.48913574 -431.79785156]
[163.55471802 -419.65536499]
[151.97358704 -410.00442505]
[138.41905212 -403.40609741]
[123.67914581 -400.24401855]
[123.23254395 -385.25064087]
[122.78593445 -370.25729370]
[122.33933258 -355.26394653]
[121.89272308 -340.27059937]
[121.44612122 -325.27725220]
[129.51019287 -316.26077271]
[129.26083374 -303.76589966]
[120.28639221 -294.50186157]
[119.61660767 -279.51681519]
[131.35932922 -270.39288330]
[135.52713013 -255.93281555]
[130.32025146 -241.62400818]
[117.53858948 -233.02545166]
[116.86879730 -218.04042053]
[116.19901276 -203.05537415]
[115.52922821 -188.07034302]
[127.27195740 -178.94639587]
[131.43974304 -164.48632812]
[126.23287964 -150.17752075]
[113.45121002 -141.57896423]
[112.78142548 -126.59392548]
[119.94270325 -113.53385925]
[111.59690857 -100.09294128]
[110.92712402 -85.10790253]
[110.25733948 -70.12286377]
[109.81073761 -55.12951660]
[109.58740997 -40.13117599]
[109.36408234 -25.13284111]
[116.91103363 -12.29178238]
[108.96912384 1.39166355]
[108.74579620 16.39000130]
[108.52246857 31.38833809]
[116.06941986 44.22939682]
[108.12751770 57.91284180]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[107.09414673 127.31214905]
[109.63803101 131.87019348]
[110.12996674 136.48660278]
[108.89131927 140.37001038]
[106.51100922 142.97125244]
[105.61818695 157.94465637]
[104.72537231 172.91806030]
[103.83255768 187.89146423]
[102.93974304 202.86486816]
[115.53939819 209.26763916]
[124.71923065 219.95663452]
[129.11834717 233.29655457]
[128.10389709 247.26300049]
[121.86200714 259.74972534]
[111.36458588 268.88623047]
[98.21820068 273.31805420]
[97.10255432 288.27648926]
[95.98690033 303.23495483]
[103.79689789 313.49978638]
[102.55972290 325.93572998]
[93.48133850 333.93008423]
[92.14310455 348.87026978]
[90.80487061 363.81045532]
[89.46663666 378.75064087]
[88.12840271 393.69082642]
[86.79016876 408.63101196]
[88.98799896 413.36563110]
[89.13521576 418.00585938]
[87.61116791 421.78637695]
[85.04397583 424.20336914]
[83.03996277 439.06890869]
[94.91510773 429.90478516]
[109.90718079 430.39218140]
[121.16201782 440.30825806]
[123.53405762 455.11953735]
[115.93881989 468.05447388]
[101.84876251 473.19940186]
[87.70566559 468.20211792]
[79.97519684 455.34552002]
[76.43552399 469.92190552]
[72.89585114 484.49826050]
[69.35617828 499.07464600]
[65.81650543 513.65100098]
[62.27683258 528.22741699]
[59.72100067 543.00805664]
[58.16047668 557.92663574]
[56.59995651 572.84527588]
[62.85956955 587.37548828]
[53.84017563 599.22875977]
[67.47856903 605.84466553]
[78.02947235 616.72833252]
[84.21880341 630.56549072]
[85.29918671 645.68530273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 206]
[14 204]
[15 203]
[16 202]
[26 201]
[27 200]
[28 199]
[29 198]
[30 197]
[31 196]
[32 188]
[33 187]
[34 183]
[35 182]
[36 181]
[37 180]
[38 179]
[39 178]
[41 175]
[42 174]
[43 173]
[49 166]
[50 165]
[51 164]
[52 163]
[53 162]
[54 158]
[55 157]
[57 155]
[58 154]
[59 153]
[61 151]
[62 150]
[63 149]
[65 147]
[66 146]
[67 145]
[70 144]
[71 143]
[72 142]
[74 140]
[75 139]
[79 135]
[80 134]
[81 133]
[82 132]
[86 128]
[87 127]
[89 124]
[90 123]
[91 122]
[92 121]
[93 120]
[94 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
