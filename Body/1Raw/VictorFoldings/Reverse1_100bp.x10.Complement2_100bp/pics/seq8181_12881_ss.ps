%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[139.65219116 545.40789795]
[138.53654480 530.44946289]
[137.42089844 515.49096680]
[136.30525208 500.53253174]
[127.34689331 492.40390015]
[126.29501343 479.95089722]
[134.25695801 469.80349731]
[133.36415100 454.83007812]
[132.47132874 439.85668945]
[131.57852173 424.88327026]
[130.68569946 409.90988159]
[129.79289246 394.93646240]
[127.78817749 392.97705078]
[126.43881989 390.10549927]
[126.09613800 386.56741333]
[127.01611328 382.73098755]
[129.31968689 379.05029297]
[129.31968689 364.05029297]
[129.31968689 349.05029297]
[128.09271240 334.10055542]
[125.64698029 319.30130005]
[113.42675781 310.86318970]
[110.73562622 295.88946533]
[119.66914368 283.12896729]
[109.96022034 271.83355713]
[115.34388733 256.95651245]
[105.63496399 245.66111755]
[111.01862335 230.78405762]
[108.57289886 215.98478699]
[106.12717438 201.18551636]
[103.68144226 186.38624573]
[100.38954163 182.92613220]
[99.23631287 177.36132812]
[101.39006805 171.11048889]
[99.38605499 156.24496460]
[97.38204193 141.37944031]
[95.37802887 126.51390839]
[93.37401581 111.64837646]
[88.59821320 125.86779022]
[81.00745392 138.80534363]
[70.92450714 149.91093445]
[58.77809906 158.71235657]
[45.08470535 164.83534241]
[30.42657661 168.01954651]
[15.42698002 168.12959290]
[0.72370803 165.16079712]
[-13.05804920 159.23937988]
[-25.33228302 150.61712646]
[-35.57708740 139.66067505]
[-43.35684967 126.83587646]
[-48.34077072 112.68806458]
[-50.31692886 97.81880951]
[-49.20129776 82.86035919]
[-45.04131699 68.44874573]
[-38.01386642 55.19676590]
[-28.41776085 43.66790009]
[-16.66102982 34.35235977]
[-3.24357629 27.64624596]
[11.26408291 23.83470917]
[26.24507523 23.07981682]
[41.06240082 25.41366386]
[55.08602142 30.73701859]
[67.71964264 38.82352829]
[78.42607880 49.32934570]
[86.75008392 61.80776596]
[92.33772278 75.72819519]
[94.95140839 90.49890137]
[91.37374878 75.08750916]
[102.35612488 65.02586365]
[106.54313660 50.62208557]
[105.93354034 41.50801849]
[110.90119171 36.03588486]
[115.30219269 21.69603729]
[119.70318604 7.35619020]
[124.10418701 -6.98365688]
[128.18385315 -21.41820908]
[131.94015503 -35.94026947]
[135.69645691 -50.46232986]
[139.45275879 -64.98439026]
[143.20906067 -79.50644684]
[146.96536255 -94.02850342]
[150.28761292 -108.65596771]
[145.34928894 -123.68671417]
[155.39021301 -134.68803406]
[158.27548218 -149.40792847]
[161.16075134 -164.12782288]
[163.93637085 -178.86878967]
[166.60215759 -193.63000488]
[161.44059753 -208.58555603]
[171.31660461 -219.73515320]
[173.32063293 -234.60069275]
[174.65885925 -249.54087830]
[175.99710083 -264.48104858]
[177.33532715 -279.42123413]
[162.94438171 -283.84777832]
[149.78842163 -291.16998291]
[138.44258118 -301.06771851]
[129.40286255 -313.10836792]
[123.06442261 -326.76553345]
[119.70436096 -341.44216919]
[119.46955872 -356.49667358]
[122.37029266 -371.27096558]
[128.27973938 -385.11914062]
[136.93959045 -397.43582153]
[147.97123718 -407.68261719]
[160.89245605 -415.41149902]
[175.13835144 -420.28466797]
[190.08619690 -422.08908081]
[205.08250427 -420.74581909]
[219.47171021 -416.31362915]
[232.62478638 -408.98623657]
[243.96673584 -399.08401489]
[253.00172424 -387.03982544]
[259.33477783 -373.38018799]
[262.68908691 -358.70220947]
[262.91793823 -343.64761353]
[260.01141357 -328.87448120]
[254.09649658 -315.02862549]
[245.43182373 -302.71533203]
[234.39613342 -292.47290039]
[221.47187805 -284.74908447]
[207.22406006 -279.88153076]
[192.27551270 -278.08300781]
[190.93728638 -263.14282227]
[189.59904480 -248.20263672]
[188.26081848 -233.26245117]
[200.43583679 -242.02423096]
[215.26196289 -239.74688721]
[224.24609375 -227.73501587]
[222.24171448 -212.86953735]
[210.39703369 -203.66607666]
[195.49722290 -205.39680481]
[186.07783508 -217.06936646]
[191.43006897 -203.16963196]
[181.36337280 -190.96420288]
[178.69758606 -176.20298767]
[180.60231018 -169.06199646]
[175.88064575 -161.24255371]
[172.99537659 -146.52265930]
[170.11010742 -131.80276489]
[175.25480652 -117.82488251]
[165.00750732 -105.77069092]
[166.45767212 -103.37169647]
[167.04493713 -100.25373077]
[166.49069214 -96.74256897]
[164.63931274 -93.25876617]
[161.48741150 -90.27220917]
[157.73110962 -75.75014496]
[153.97482300 -61.22808838]
[150.21852112 -46.70602798]
[146.46221924 -32.18396759]
[142.70591736 -17.66190910]
[144.17068481 -14.45460415]
[144.15472412 -10.37847996]
[142.26663208 -6.13720608]
[138.44403076 -2.58265877]
[134.04302979 11.75718784]
[129.64204407 26.09703636]
[125.24104309 40.43688202]
[120.94691467 54.80909729]
[116.75990295 69.21287537]
[120.63704681 83.59400940]
[109.35519409 94.68591309]
[108.23954010 109.64436340]
[110.24355316 124.50989532]
[112.24757385 139.37542725]
[114.25158691 154.24095154]
[116.25559998 169.10647583]
[118.48071289 183.94052124]
[120.92644501 198.73979187]
[123.37216949 213.53906250]
[125.81789398 228.33833313]
[135.70175171 240.69227600]
[130.14315796 254.51078796]
[140.02700806 266.86474609]
[134.46841431 280.68325806]
[147.03242493 289.89105225]
[149.30191040 304.93444824]
[140.44625854 316.85556030]
[142.89198303 331.65484619]
[149.21685791 318.05352783]
[161.08186340 308.87628174]
[175.83633423 306.17333984]
[190.18406677 310.54858398]
[200.91975403 321.02450562]
[205.64500427 335.26080322]
[203.30419922 350.07702637]
[194.42027283 362.16320801]
[180.97792053 368.81924438]
[165.98017883 368.55819702]
[152.77761841 361.43835449]
[144.31968689 349.05029297]
[144.31968689 364.05029297]
[144.31968689 379.05029297]
[144.76629639 394.04364014]
[145.65910339 409.01705933]
[146.55192566 423.99044800]
[147.44473267 438.96386719]
[148.33755493 453.93725586]
[149.23037720 468.91067505]
[159.72430420 484.04205322]
[151.26370239 499.41690063]
[152.37934875 514.37536621]
[153.49499512 529.33380127]
[154.61064148 544.29223633]
[166.74824524 554.41424561]
[168.09027100 570.16143799]
[157.84054565 582.19134521]
[142.08003235 583.36682129]
[130.15916443 572.99047852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[3 203]
[4 202]
[7 200]
[8 199]
[9 198]
[10 197]
[11 196]
[12 195]
[17 194]
[18 193]
[19 192]
[20 180]
[21 179]
[24 176]
[26 174]
[28 172]
[29 171]
[30 170]
[31 169]
[34 168]
[35 167]
[36 166]
[37 165]
[38 164]
[67 163]
[69 161]
[70 160]
[72 159]
[73 158]
[74 157]
[75 156]
[76 152]
[77 151]
[78 150]
[79 149]
[80 148]
[81 147]
[82 142]
[84 140]
[85 139]
[86 138]
[87 136]
[88 135]
[90 133]
[91 126]
[92 125]
[93 124]
[94 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
