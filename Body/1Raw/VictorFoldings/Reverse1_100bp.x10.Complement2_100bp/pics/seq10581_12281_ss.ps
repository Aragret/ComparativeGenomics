%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[48.31417084 281.36044312]
[52.81604767 295.69085693]
[55.44837570 310.47933960]
[56.16792679 325.48303223]
[54.96288681 340.45553589]
[51.85304260 355.15103149]
[46.88946533 369.32815552]
[40.15365601 382.75415039]
[31.75622559 395.20852661]
[21.83506584 406.48678589]
[10.55309200 416.40371704]
[-1.90443611 424.79644775]
[-15.33295441 431.52722168]
[-29.51195335 436.48547363]
[-44.20860291 439.58981323]
[-59.18156815 440.78921509]
[-74.18498230 440.06405640]
[-88.97247314 437.42617798]
[-103.30122375 432.91891479]
[-116.93592834 426.61627197]
[-129.65270996 418.62179565]
[-141.24273682 409.06671143]
[-151.51568604 398.10794067]
[-160.30288696 385.92541504]
[-167.46002197 372.71920776]
[-172.86956787 358.70617676]
[-176.44270325 344.11642456]
[-178.12075806 329.18954468]
[-177.87617493 314.17059326]
[-175.71296692 299.30624390]
[-171.66665649 284.84057617]
[-165.80368042 271.01110840]
[-158.22032166 258.04498291]
[-149.04109192 246.15504456]
[-138.41674805 235.53659058]
[-126.52174377 226.36396790]
[-113.55139160 218.78779602]
[-99.71868896 212.93247986]
[-85.25077820 208.89419556]
[-70.38523102 206.73921204]
[-55.36615753 206.50296021]
[-40.44018555 208.18928528]
[-25.85241318 211.77050781]
[-11.84238243 217.18783569]
[1.35984778 224.35229492]
[10.14045143 212.19084167]
[8.52276707 200.20294189]
[15.73850250 189.99917603]
[28.36472321 187.36453247]
[37.32542038 175.33514404]
[46.28611755 163.30577087]
[55.06671906 151.14431763]
[63.66528320 138.85348511]
[72.26384735 126.56263733]
[80.86241150 114.27180481]
[76.12950134 100.36193085]
[80.43852234 86.31495667]
[92.15725708 77.45175934]
[106.84674835 77.12963104]
[115.44531250 64.83879852]
[124.04387665 52.54795837]
[132.64244080 40.25711823]
[117.72144318 41.79455566]
[105.99706268 32.43833542]
[104.18556213 17.54812050]
[113.32464600 5.65370703]
[128.17903137 3.56875324]
[140.23947144 12.48761559]
[142.59738159 27.30023956]
[152.25819397 15.82554054]
[161.91900635 4.35084009]
[171.57981873 -7.12385988]
[181.24063110 -18.59856033]
[190.90142822 -30.07325935]
[191.81462097 -35.21263504]
[194.35394287 -39.09917068]
[197.76986694 -41.32324600]
[201.25891113 -41.83209229]
[211.42245483 -52.86396790]
[221.58599854 -63.89584732]
[231.74954224 -74.92772675]
[241.91310120 -85.95960236]
[252.07664490 -96.99147797]
[241.72926331 -107.85858154]
[232.11477661 -119.37916565]
[223.27436829 -131.50390625]
[215.24588013 -144.18087769]
[208.06369019 -157.35580444]
[201.75857544 -170.97225952]
[196.35752869 -184.97192383]
[191.88365173 -199.29487610]
[188.35614014 -213.87976074]
[185.79008484 -228.66412354]
[184.19645691 -243.58467102]
[183.58209229 -258.57748413]
[183.94964600 -273.57839966]
[185.29750061 -288.52316284]
[187.61991882 -303.34774780]
[190.90693665 -317.98870850]
[195.14448547 -332.38333130]
[200.31442261 -346.47000122]
[206.39460754 -360.18838501]
[213.35899353 -373.47970581]
[221.17778015 -386.28707886]
[229.81745911 -398.55566406]
[239.24104309 -410.23291016]
[249.40818787 -421.26882935]
[260.27536011 -431.61614990]
[271.79598999 -441.23056030]
[283.92080688 -450.07092285]
[296.59780884 -458.09933472]
[309.77276611 -465.28143311]
[323.38928223 -471.58645630]
[337.38897705 -476.98742676]
[351.71194458 -481.46121216]
[366.29684448 -484.98864746]
[381.08123779 -487.55462646]
[396.00180054 -489.14816284]
[410.99462891 -489.76242065]
[425.99551392 -489.39480591]
[440.94024658 -488.04684448]
[455.76483154 -485.72433472]
[470.40579224 -482.43722534]
[484.80038452 -478.19958496]
[498.88702393 -473.02957153]
[512.60534668 -466.94931030]
[525.89666748 -459.98486328]
[538.70397949 -452.16598511]
[550.97253418 -443.52624512]
[562.64971924 -434.10256958]
[573.68554688 -423.93536377]
[584.03283691 -413.06814575]
[593.64715576 -401.54745483]
[602.48742676 -389.42260742]
[610.51574707 -376.74554443]
[617.69781494 -363.57052612]
[624.00274658 -349.95401001]
[629.40362549 -335.95425415]
[633.87731934 -321.63125610]
[637.40466309 -307.04632568]
[639.97058105 -292.26193237]
[641.56402588 -277.34136963]
[642.17822266 -262.34854126]
[641.81048584 -247.34764099]
[640.46246338 -232.40290833]
[638.13983154 -217.57833862]
[634.85266113 -202.93742371]
[630.61492920 -188.54283142]
[625.44482422 -174.45623779]
[619.36450195 -160.73794556]
[612.39996338 -147.44668579]
[604.58099365 -134.63940430]
[595.94122314 -122.37091827]
[586.51745605 -110.69377899]
[576.35015869 -99.65798187]
[565.48291016 -89.31079102]
[553.96215820 -79.69651031]
[541.83721924 -70.85631561]
[529.16015625 -62.82805252]
[515.98510742 -55.64610672]
[502.36853027 -49.34123230]
[488.36874390 -43.94042206]
[474.04571533 -39.46681213]
[459.46078491 -35.93955231]
[444.67636108 -33.37374878]
[429.75579834 -31.78039169]
[414.76296997 -31.16629982]
[399.76205444 -31.53410530]
[384.81732178 -32.88223267]
[369.99276733 -35.20491028]
[355.35186768 -38.49219131]
[340.95730591 -42.72999573]
[326.87075806 -47.90018082]
[313.15249634 -53.98060608]
[299.86126709 -60.94523239]
[287.05404663 -68.76423645]
[274.78561401 -77.40413666]
[263.10852051 -86.82793427]
[252.94497681 -75.79605103]
[242.78143311 -64.76417542]
[232.61787415 -53.73229980]
[222.45433044 -42.70042419]
[212.29078674 -31.66854477]
[202.37612915 -20.41244888]
[192.71533203 -8.93774986]
[183.05451965 2.53695059]
[173.39370728 14.01165104]
[163.73289490 25.48635101]
[154.07208252 36.96105194]
[144.93328857 48.85568237]
[136.33471680 61.14652252]
[127.73615265 73.43736267]
[119.13758850 85.72819519]
[123.87049866 99.63806915]
[119.56147766 113.68504333]
[107.84274292 122.54824066]
[93.15325165 122.87036896]
[84.55468750 135.16120911]
[75.95612335 147.45204163]
[67.35755920 159.74287415]
[66.40464020 166.28532410]
[62.82767868 170.70146179]
[58.31549454 172.26646423]
[49.35479736 184.29585266]
[40.39410019 196.32522583]
[38.67631149 214.65908813]
[22.30190659 220.97143555]
[13.52130318 233.13288879]
[24.47622108 243.40995789]
[34.02695084 255.00357056]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 208]
[46 207]
[49 205]
[50 204]
[51 203]
[52 200]
[53 199]
[54 198]
[55 197]
[59 193]
[60 192]
[61 191]
[62 190]
[69 189]
[70 188]
[71 187]
[72 186]
[73 185]
[74 184]
[78 183]
[79 182]
[80 181]
[81 180]
[82 179]
[83 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
