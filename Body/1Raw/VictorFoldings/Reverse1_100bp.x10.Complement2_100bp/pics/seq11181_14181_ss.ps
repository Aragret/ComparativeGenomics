%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:37:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[65.46149445 782.04541016]
[53.65919876 791.62530518]
[39.08781052 795.95458984]
[23.96935844 794.37316895]
[10.60930252 787.12219238]
[1.04495096 775.30725098]
[-3.26520133 760.73022461]
[-1.66388774 745.61383057]
[5.60470343 732.26336670]
[17.43216515 722.71453857]
[32.01489258 718.42358398]
[33.57541656 703.50494385]
[35.13594055 688.58636475]
[36.69646072 673.66778564]
[38.25698471 658.74914551]
[39.70640564 643.81933594]
[40.93338013 628.86962891]
[42.04902649 613.91113281]
[43.05328751 598.94482422]
[36.08724594 585.77960205]
[44.63222885 572.46441650]
[45.52504730 557.49096680]
[46.41786194 542.51757812]
[32.31246185 535.00836182]
[22.85949135 522.05249023]
[19.99246025 506.21380615]
[24.33529091 490.65423584]
[35.06742477 478.50250244]
[50.07830429 472.22494507]
[50.74808884 457.23992920]
[51.41787338 442.25488281]
[52.08765793 427.26983643]
[52.75744247 412.28479004]
[53.42723083 397.29977417]
[54.09701538 382.31472778]
[54.76679993 367.32968140]
[55.43658447 352.34463501]
[44.42637634 362.53167725]
[29.45059586 363.38372803]
[17.35597038 354.51129150]
[13.67199993 339.97073364]
[20.08294487 326.40975952]
[33.65781021 320.02828979]
[48.19034576 323.74386597]
[57.03699875 335.85949707]
[59.26211548 321.02545166]
[61.48723221 306.19140625]
[63.71234894 291.35739136]
[49.60968018 286.30871582]
[36.75889969 278.60317993]
[25.65487099 268.53530884]
[16.72562408 256.49063110]
[10.31584644 242.93096924]
[6.67358160 228.37666321]
[5.94063377 213.38664246]
[8.14704227 198.53694153]
[13.20986080 184.39855957]
[20.93626785 171.51551819]
[31.03091812 160.38392639]
[43.10722351 151.43286133]
[56.70215988 145.00784302]
[71.29402924 141.35752869]
[86.32246399 140.62400818]
[88.54757690 125.78997040]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.61837769 71.98491669]
[91.01380920 57.18966293]
[100.55348969 45.75096512]
[102.77860260 30.91691971]
[97.17404175 16.12166977]
[106.71371460 4.68296862]
[108.93883514 -10.15107536]
[111.16394806 -24.98511887]
[104.13905334 -35.80240250]
[106.29774475 -48.11190414]
[115.94557190 -55.40888977]
[118.39130402 -70.20816040]
[120.83702850 -85.00743103]
[123.28275299 -99.80670166]
[121.59445190 -108.78375244]
[125.87664032 -114.80742645]
[128.54243469 -129.56863403]
[119.79988861 -142.46070862]
[122.71366119 -157.39271545]
[135.05816650 -165.64794922]
[137.72395325 -180.40916443]
[140.38975525 -195.17037964]
[138.83529663 -204.17156982]
[143.20669556 -210.13082886]
[146.09196472 -224.85070801]
[148.97723389 -239.57060242]
[144.03890991 -254.60134888]
[154.07983398 -265.60269165]
[155.64035034 -280.52127075]
[155.86367798 -295.51962280]
[156.08700562 -310.51794434]
[156.31033325 -325.51629639]
[156.53366089 -340.51461792]
[143.05834961 -347.77233887]
[134.50900269 -360.46752930]
[132.85018921 -375.68286133]
[138.46310425 -389.92202759]
[150.05793762 -399.91296387]
[164.97027588 -403.35980225]
[179.77337646 -399.47048950]
[191.06559753 -389.13876343]
[196.25207520 -374.73880005]
[194.14097595 -359.57958984]
[185.21743774 -347.14459229]
[171.53199768 -340.29129028]
[171.30867004 -325.29296875]
[171.08534241 -310.29461670]
[170.86201477 -295.29629517]
[170.63868713 -280.29794312]
[178.95454407 -292.78179932]
[191.81910706 -300.49563599]
[206.74844360 -301.94998169]
[220.85990906 -296.86410522]
[231.42881775 -286.21994019]
[236.41447449 -272.07272339]
[234.85423279 -257.15411377]
[227.04934692 -244.34458923]
[214.50682068 -236.11750793]
[199.64840698 -234.06138611]
[185.34304810 -238.57321167]
[174.35287476 -248.78184509]
[168.79972839 -262.71740723]
[173.94442749 -248.73951721]
[163.69712830 -236.68533325]
[160.81185913 -221.96543884]
[157.92658997 -207.24554443]
[155.15097046 -192.50459290]
[152.48518372 -177.74337769]
[149.81938171 -162.98214722]
[158.49656677 -150.93051147]
[156.00335693 -135.92256165]
[143.30364990 -126.90284729]
[140.63786316 -112.14162445]
[138.08203125 -97.36097717]
[135.63630676 -82.56170654]
[133.19056702 -67.76243591]
[130.74484253 -52.96316147]
[137.80003357 -36.89483261]
[125.99799347 -22.76000214]
[123.77288055 -7.92595816]
[121.54776001 6.90808582]
[127.31147766 20.64230728]
[117.61264801 33.14203644]
[115.38753510 47.97608185]
[121.15125275 61.71030045]
[111.45242310 74.21002960]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[103.38162231 128.01509094]
[101.15650940 142.84913635]
[115.30831909 147.95970154]
[128.18699646 155.73062134]
[139.29852295 165.86161804]
[148.21710205 177.96192932]
[154.60147095 191.56539917]
[158.20796204 206.14837646]
[158.89976501 221.14996338]
[156.65216064 235.99348450]
[151.55340576 250.10873413]
[143.80120850 262.95385742]
[133.69512939 274.03613281]
[121.62494659 282.93087769]
[108.05569458 289.29776001]
[93.50967407 292.89376831]
[78.54639435 293.58248901]
[76.32127380 308.41653442]
[74.09616089 323.25057983]
[71.87104034 338.08462524]
[70.42162323 353.01443481]
[69.75183868 367.99948120]
[69.08205414 382.98449707]
[68.41226959 397.96954346]
[67.74248505 412.95458984]
[67.07270050 427.93963623]
[66.40291595 442.92465210]
[65.73313141 457.90969849]
[65.06333923 472.89474487]
[77.75692749 479.10922241]
[87.09488678 489.66036987]
[91.69212341 502.93328857]
[90.88573456 516.91326904]
[84.83043671 529.49157715]
[74.47020721 538.78338623]
[61.39126587 543.41040039]
[60.49845123 558.38378906]
[59.60563660 573.35723877]
[66.50782013 587.59344482]
[58.02669525 599.83764648]
[60.63976669 608.59033203]
[57.00748062 615.02679443]
[55.89183426 629.98522949]
[58.37430191 638.77587891]
[54.64659119 645.15759277]
[56.99790192 653.98419189]
[53.17559052 660.30969238]
[51.61506653 675.22827148]
[50.05454254 690.14691162]
[48.49402237 705.06549072]
[46.93349838 719.98406982]
[60.31258392 727.19995117]
[69.90798950 738.98962402]
[74.25647736 753.55529785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 207]
[12 206]
[13 205]
[14 204]
[15 203]
[16 201]
[17 199]
[18 198]
[19 196]
[21 194]
[22 193]
[23 192]
[29 185]
[30 184]
[31 183]
[32 182]
[33 181]
[34 180]
[35 179]
[36 178]
[37 177]
[45 176]
[46 175]
[47 174]
[48 173]
[63 158]
[64 157]
[65 156]
[67 154]
[68 153]
[70 151]
[71 150]
[73 148]
[74 147]
[75 146]
[78 144]
[79 143]
[80 142]
[81 141]
[83 140]
[84 139]
[87 136]
[88 135]
[89 134]
[91 133]
[92 132]
[93 131]
[95 129]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
