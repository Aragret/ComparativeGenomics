%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCCUGCUAAUCAAAAUCGUAACCUCAUCCAAAUCCAAUACAUGCAUCAGAUCCGGUAUACACAACCUCUAACUCUGAUCAUCCCGAUCCGGGUGGCGAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[91.30049133 659.85876465]
[76.49155426 662.34735107]
[61.49546814 663.13159180]
[46.50772858 662.20129395]
[31.72373962 659.56854248]
[17.33623314 655.26770020]
[3.53278589 649.35479736]
[-9.50664806 641.90692139]
[-21.61207390 633.02117920]
[-32.62567139 622.81341553]
[-42.40385437 611.41668701]
[-50.81914520 598.97961426]
[-57.76183701 585.66436768]
[-63.14141083 571.64440918]
[-66.88773346 557.10266113]
[-68.95197296 542.22863770]
[-69.30721283 527.21624756]
[-67.94881439 512.26123047]
[-64.89449310 497.55856323]
[-60.18407059 483.29989624]
[-53.87895584 469.67111206]
[-46.06134415 456.84994507]
[-36.83316040 445.00347900]
[-26.31471062 434.28622437]
[-14.64312363 424.83782959]
[-1.97056222 416.78152466]
[11.53775978 410.22235107]
[25.70573425 405.24578857]
[40.34865189 401.91668701]
[55.27561188 400.27853394]
[70.29201508 400.35260010]
[72.07447815 385.45889282]
[73.85694122 370.56518555]
[75.63941193 355.67147827]
[69.46932983 342.11492920]
[78.79169464 329.33197021]
[80.57415771 314.43826294]
[82.35662842 299.54455566]
[84.13909149 284.65081787]
[85.92156219 269.75711060]
[86.92581940 254.79077148]
[79.37886810 241.94970703]
[87.32077026 228.26626587]
[87.54409790 213.26792908]
[87.76742554 198.26959229]
[79.56999969 189.37414551]
[79.63331604 176.87696838]
[88.46882629 167.48034668]
[88.91543579 152.48698425]
[86.77667999 149.68376160]
[85.88943481 145.70533752]
[86.79126740 141.15121460]
[89.73165131 136.83830261]
[90.84729767 121.87985992]
[91.96295166 106.92140198]
[92.52115631 91.93179321]
[92.52115631 76.93179321]
[78.62365723 64.05648041]
[78.55172729 45.43102264]
[91.88423920 32.88670731]
[91.43762970 17.89335823]
[90.99102783 2.90000772]
[90.43281555 -12.08960247]
[89.76303101 -27.07464027]
[89.09324646 -42.05968094]
[80.74745178 -55.50059891]
[87.90872955 -68.56066132]
[87.23894501 -83.54570007]
[86.56916046 -98.53074646]
[85.89937592 -113.51578522]
[82.38990021 -121.94912720]
[85.33285522 -128.72857666]
[84.88624573 -143.72192383]
[84.43964386 -158.71527100]
[83.99303436 -173.70861816]
[83.54643250 -188.70196533]
[83.09982300 -203.69532776]
[73.06106567 -219.13244629]
[81.97568512 -234.24855042]
[81.30590057 -249.23358154]
[80.63610840 -264.21862793]
[72.29032135 -277.65954590]
[79.45159912 -290.71960449]
[78.78181458 -305.70465088]
[78.11203003 -320.68969727]
[63.18036270 -322.43368530]
[48.72185135 -326.55041504]
[35.11100006 -332.93328857]
[22.70037079 -341.41693115]
[11.81142330 -351.78164673]
[2.72620964 -363.75891113]
[-4.31994247 -377.03851318]
[-9.14451981 -391.27648926]
[-11.62255478 -406.10400391]
[-11.68986034 -421.13702393]
[-9.34469318 -435.98614502]
[-4.64779806 -450.26675415]
[2.27916384 -463.60891724]
[11.25676727 -475.66705322]
[22.05247116 -486.12884521]
[34.38663864 -494.72326660]
[47.93978882 -501.22775269]
[62.36085892 -505.47381592]
[77.27631378 -507.35140991]
[92.29979706 -506.81198120]
[107.04217529 -503.86944580]
[121.12158203 -498.60006714]
[134.17332458 -491.14028931]
[145.85932922 -481.68338013]
[155.87690735 -470.47424316]
[163.96658325 -457.80328369]
[169.91879272 -443.99868774]
[173.57939148 -429.41799927]
[174.85353088 -414.43890381]
[173.70822144 -399.44943237]
[170.17312622 -384.83782959]
[164.33982849 -370.98254395]
[156.35940552 -358.24249268]
[146.43856812 -346.94766235]
[134.83430481 -337.39062500]
[121.84718323 -329.81890869]
[107.81359863 -324.42864990]
[93.09706879 -321.35946655]
[93.76685333 -306.37445068]
[94.43663788 -291.38940430]
[102.73451996 -279.02029419]
[95.62114716 -264.88839722]
[96.29093933 -249.90336609]
[96.96072388 -234.91833496]
[105.67308044 -226.52659607]
[106.35372925 -214.04779053]
[98.09317780 -204.14192200]
[98.53977966 -189.14857483]
[98.98638916 -174.15522766]
[99.43299103 -159.16188049]
[99.87960052 -144.16853333]
[100.32620239 -129.17517090]
[100.88441467 -114.18556976]
[101.55419922 -99.20053101]
[102.22398376 -84.21549225]
[102.89376831 -69.23045349]
[111.19165802 -56.86136246]
[104.07828522 -42.72946548]
[104.74806976 -27.74442673]
[105.41785431 -12.75938702]
[108.85688782 -6.21761179]
[105.98437500 2.45340180]
[106.43098450 17.44675255]
[106.87758636 32.44010162]
[116.67993927 38.27791977]
[122.50729370 48.22566605]
[122.81213379 59.87044907]
[117.40308380 70.32238770]
[107.52115631 76.93179321]
[107.52115631 91.93179321]
[119.81182861 83.33298492]
[134.24026489 87.43424225]
[140.17034912 101.21226501]
[133.23066711 114.51041412]
[118.53687286 117.52578735]
[106.92140198 108.03704834]
[105.80575562 122.99550629]
[104.69010162 137.95396423]
[103.90878296 152.93359375]
[103.46217346 167.92694092]
[112.56430054 183.93421936]
[102.76576233 198.49291992]
[102.54243469 213.49125671]
[102.31910706 228.48959351]
[109.85009003 242.40342712]
[101.92415619 255.01409912]
[112.62618256 244.50378418]
[127.56994629 243.20620728]
[139.92338562 251.71459961]
[144.03865051 266.13903809]
[138.03430176 279.88488770]
[124.65545654 286.66769409]
[110.01873779 283.38647461]
[100.81527710 271.53958130]
[99.03280640 286.43328857]
[97.25034332 301.32699585]
[95.46788025 316.22073364]
[93.68540955 331.11444092]
[99.72800446 345.73626709]
[90.53312683 357.45391846]
[88.75066376 372.34765625]
[86.96819305 387.24136353]
[85.18572998 402.13507080]
[99.79552460 405.60662842]
[113.91435242 410.72097778]
[127.35813904 417.41143799]
[139.95162964 425.59078979]
[151.53062439 435.15240479]
[161.94418335 445.97164917]
[171.05653381 457.90740967]
[178.74888611 470.80413818]
[184.92094421 484.49368286]
[189.49224854 498.79754639]
[192.40321350 513.52929688]
[193.61587524 528.49682617]
[193.11441040 543.50506592]
[190.90539551 558.35827637]
[187.01759338 572.86285400]
[181.50170898 586.82965088]
[174.42964172 600.07672119]
[165.89361572 612.43121338]
[156.00486755 623.73211670]
[144.89236450 633.83215332]
[132.70095825 642.59954834]
[119.58959961 649.92004395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 188]
[32 187]
[33 186]
[34 185]
[36 183]
[37 182]
[38 181]
[39 180]
[40 179]
[41 171]
[43 169]
[44 168]
[45 167]
[48 165]
[49 164]
[53 163]
[54 162]
[55 161]
[56 155]
[57 154]
[60 149]
[61 148]
[62 147]
[63 145]
[64 144]
[65 143]
[67 141]
[68 140]
[69 139]
[70 138]
[72 137]
[73 136]
[74 135]
[75 134]
[76 133]
[77 132]
[79 129]
[80 128]
[81 127]
[83 125]
[84 124]
[85 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
