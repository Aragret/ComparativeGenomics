%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[85.62937927 641.05700684]
[70.61836243 640.38604736]
[55.85563660 637.58557129]
[41.64175415 632.71252441]
[28.26609039 625.86621094]
[16.00095749 617.18591309]
[5.09605598 606.84844971]
[-4.22660398 595.06414795]
[-11.77722454 582.07305908]
[-17.40208435 568.13958740]
[-20.98666954 553.54742432]
[-22.45800018 538.59362793]
[-21.78612518 523.58264160]
[-18.98472214 508.82009888]
[-14.11082172 494.60650635]
[-7.26365328 481.23126221]
[1.41738558 468.96667480]
[11.75555897 458.06240845]
[23.54039574 448.74047852]
[36.53197098 441.19067383]
[50.46579361 435.56668091]
[65.05818939 431.98297119]
[80.01207733 430.51257324]
[80.68186188 415.52752686]
[81.35164642 400.54251099]
[82.02143097 385.55746460]
[82.69121552 370.57241821]
[83.36100006 355.58737183]
[84.03078461 340.60235596]
[82.24079895 338.44500732]
[81.19750977 335.44863892]
[81.22476959 331.89413452]
[82.53887177 328.17422485]
[85.21286774 324.75314331]
[86.77339172 309.83456421]
[88.33391571 294.91595459]
[89.89443970 279.99734497]
[87.46385956 273.01779175]
[91.59086609 264.86883545]
[93.37332916 249.97511292]
[94.15465546 234.99546814]
[86.22872162 222.38481140]
[93.75969696 208.47096252]
[93.53636932 193.47262573]
[85.07772827 184.82521057]
[84.76892090 172.33166504]
[93.32074738 162.67614746]
[93.20908356 147.67655945]
[92.98575592 132.67822266]
[79.51879120 126.41185760]
[70.09697723 114.92901611]
[66.58116913 100.49761200]
[69.66574860 85.96792603]
[78.74149323 74.20965576]
[92.01590729 67.54510498]
[91.79257965 52.54676437]
[91.56925201 37.54842758]
[88.31242371 29.01432800]
[91.45592499 22.32551575]
[91.45592499 7.32551575]
[91.45592499 -7.67448425]
[91.45592499 -22.67448425]
[91.12094879 -37.67074203]
[90.45116425 -52.65578079]
[89.78137970 -67.64082336]
[89.11159515 -82.62586212]
[88.44181061 -97.61090088]
[87.77202606 -112.59593964]
[87.10224152 -127.58097839]
[86.43244934 -142.56600952]
[85.76266479 -157.55105591]
[73.03074646 -163.34423828]
[64.07967377 -174.00698853]
[60.61260605 -187.42182922]
[63.25095367 -200.95652771]
[71.42388153 -211.98068237]
[83.49062347 -218.37684631]
[83.04402161 -233.37019348]
[82.59741211 -248.36354065]
[82.15081024 -263.35690308]
[81.70420074 -278.35025024]
[81.25759888 -293.34359741]
[80.81098938 -308.33694458]
[69.58979034 -319.14074707]
[69.35045624 -334.35250854]
[79.71939850 -344.98361206]
[79.27279663 -359.97698975]
[78.82618713 -374.97033691]
[78.37957764 -389.96368408]
[77.93297577 -404.95703125]
[65.90377045 -395.99609375]
[51.35962677 -399.66595459]
[45.02193832 -413.26129150]
[51.56261444 -426.76016235]
[66.16011810 -430.21170044]
[78.05295563 -421.07299805]
[78.72274017 -436.05804443]
[71.60936737 -450.18994141]
[79.90724945 -462.55902100]
[80.57703400 -477.54406738]
[66.93637085 -484.31549072]
[57.23419571 -496.05377197]
[53.15146637 -510.72521973]
[55.39554596 -525.78790283]
[63.57762527 -538.63208008]
[76.28012085 -547.03247070]
[91.30223846 -549.53363037]
[106.04131317 -545.70227051]
[117.94370270 -536.20208740]
[124.94725800 -522.67913818]
[125.83855438 -507.47634888]
[120.46318817 -493.22763062]
[109.75246429 -482.40173340]
[95.56207275 -476.87426758]
[94.89228821 -461.88925171]
[102.05357361 -448.82916260]
[93.70777893 -435.38824463]
[93.03799438 -420.40322876]
[92.92632294 -405.40362549]
[93.37293243 -390.41027832]
[93.81953430 -375.41693115]
[94.26614380 -360.42358398]
[94.71274567 -345.43023682]
[105.69608307 -335.43511963]
[106.36258698 -320.23611450]
[95.80434418 -308.78353882]
[96.25094604 -293.79019165]
[96.69755554 -278.79684448]
[97.14415741 -263.80349731]
[97.59076691 -248.81015015]
[98.03736877 -233.81680298]
[98.48397827 -218.82344055]
[112.89539337 -211.51429749]
[121.70502472 -197.85610962]
[122.42881012 -181.52537537]
[114.77459717 -166.97515869]
[100.74770355 -158.22084045]
[101.41748810 -143.23579407]
[102.08728027 -128.25076294]
[102.75706482 -113.26572418]
[103.42684937 -98.28068542]
[104.09663391 -83.29564667]
[104.76641846 -68.31060791]
[105.43620300 -53.32556915]
[106.10598755 -38.34052658]
[108.44731140 -35.70413971]
[109.62799835 -31.80272675]
[109.06739044 -27.19414520]
[106.45592499 -22.67448425]
[106.45592499 -7.67448425]
[106.45592499 7.32551575]
[106.45592499 22.32551575]
[106.56758881 37.32509995]
[106.79091644 52.32343674]
[107.01424408 67.32177734]
[120.48120880 73.58814240]
[129.90301514 85.07098389]
[133.41883850 99.50238800]
[130.33425903 114.03207397]
[121.25850677 125.79034424]
[107.98409271 132.45489502]
[108.20742035 147.45323181]
[111.46424866 155.98733521]
[108.32074738 162.67614746]
[117.89543152 178.40531921]
[108.53470612 193.24929810]
[108.75803375 208.24763489]
[116.69994354 221.93107605]
[109.15299225 234.77214050]
[118.29328918 222.87866211]
[132.37640381 217.71475220]
[147.03852844 220.88053894]
[157.73645020 231.39503479]
[161.15528870 246.00021362]
[156.23568726 260.17053223]
[144.50202942 269.51510620]
[129.59013367 271.13848877]
[116.12060547 264.53759766]
[108.26704407 251.75756836]
[106.48458099 266.65127563]
[104.81304169 281.55786133]
[103.25251770 296.47647095]
[101.69199371 311.39508057]
[100.13146973 326.31369019]
[99.01582336 341.27212524]
[98.34603882 356.25717163]
[97.67625427 371.24221802]
[97.00646973 386.22723389]
[96.33668518 401.21228027]
[95.66690063 416.19732666]
[94.99711609 431.18237305]
[109.76018524 433.98101807]
[123.97467041 438.85229492]
[137.35118103 445.69696045]
[149.61738586 454.37573242]
[160.52357483 464.71188354]
[169.84768677 476.49499512]
[177.39991760 489.48516846]
[183.02650452 503.41793823]
[186.61288452 518.00964355]
[188.08607483 532.96325684]
[187.41606140 547.97436523]
[184.61648560 562.73724365]
[179.74433899 576.95141602]
[172.89881897 590.32751465]
[164.21929932 602.59320068]
[153.88247681 613.49871826]
[142.09880066 622.82208252]
[129.10815430 630.37353516]
[115.17503357 635.99926758]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 191]
[24 190]
[25 189]
[26 188]
[27 187]
[28 186]
[29 185]
[34 184]
[35 183]
[36 182]
[37 181]
[39 180]
[40 179]
[41 169]
[43 167]
[44 166]
[47 164]
[48 162]
[49 161]
[55 155]
[56 154]
[57 153]
[59 152]
[60 151]
[61 150]
[62 149]
[63 145]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[69 139]
[70 138]
[71 137]
[77 132]
[78 131]
[79 130]
[80 129]
[81 128]
[82 127]
[83 126]
[86 123]
[87 122]
[88 121]
[89 120]
[90 119]
[96 118]
[97 117]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
