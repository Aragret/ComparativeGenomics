%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[77.07209778 488.28298950]
[70.56668091 474.73541260]
[66.15318298 460.36953735]
[63.93021011 445.50628662]
[63.94741440 430.47772217]
[66.20442200 415.61962891]
[70.65080261 401.26388550]
[77.18721771 387.73120117]
[85.66765594 375.32397461]
[95.90265656 364.31930542]
[107.66355896 354.96307373]
[120.68762207 347.46432495]
[134.68389893 341.99057007]
[131.36163330 327.36309814]
[128.03936768 312.73562622]
[124.71711731 298.10818481]
[121.39485168 283.48071289]
[118.07259369 268.85327148]
[107.99167633 279.96069336]
[93.01322174 279.15695190]
[84.17879486 267.03454590]
[88.00080872 252.52964783]
[101.66180420 246.33473206]
[115.09040070 253.01515198]
[105.55228424 245.57533264]
[103.57710266 233.23506165]
[110.76227570 222.52355957]
[108.75826263 207.65803528]
[106.75424194 192.79251099]
[104.75022888 177.92698669]
[102.74621582 163.06144714]
[100.74220276 148.19592285]
[98.40671539 133.37886047]
[95.74092102 118.61763763]
[83.89768982 110.26994324]
[81.32261658 96.01107788]
[89.49786377 84.04815674]
[86.83206177 69.28694153]
[84.16626740 54.52572250]
[81.50047302 39.76450348]
[75.94124603 25.83270454]
[67.71244049 13.29130554]
[59.48363113 0.74990487]
[51.25482559 -11.79149532]
[43.02601624 -24.33289528]
[34.70407486 -36.81269073]
[26.28945541 -49.23018646]
[17.78262711 -61.58469391]
[9.18406391 -73.87553406]
[1.70053899 -79.11334229]
[0.55057937 -86.41398621]
[-7.86403942 -98.83148193]
[-16.27865791 -111.24897766]
[-24.69327545 -123.66647339]
[-33.10789490 -136.08396912]
[-46.32413864 -128.96203613]
[-60.19309616 -123.21372986]
[-74.57244873 -118.89803314]
[-89.31464386 -116.05924225]
[-104.26839447 -114.72647858]
[-119.28025818 -114.91341400]
[-134.19618225 -116.61814117]
[-148.86311340 -119.82315826]
[-163.13053894 -124.49558258]
[-176.85206604 -130.58746338]
[-189.88685608 -138.03630066]
[-202.10118103 -146.76564026]
[-213.36968994 -156.68589783]
[-223.57675171 -167.69531250]
[-232.61761475 -179.68086243]
[-240.39953613 -192.51959229]
[-246.84262085 -206.07974243]
[-251.88078308 -220.22215271]
[-255.46229553 -234.80172729]
[-257.55044556 -249.66882324]
[-258.12374878 -264.67089844]
[-257.17636108 -279.65402222]
[-254.71801758 -294.46438599]
[-250.77391052 -308.95007324]
[-245.38453674 -322.96240234]
[-238.60517883 -336.35760498]
[-230.50543213 -348.99822998]
[-221.16838074 -360.75451660]
[-210.68986511 -371.50588989]
[-199.17739868 -381.14196777]
[-186.74911499 -389.56387329]
[-173.53254700 -396.68524170]
[-159.66334534 -402.43292236]
[-145.28379822 -406.74798584]
[-130.54148865 -409.58615112]
[-115.58766937 -410.91824341]
[-100.57581329 -410.73065186]
[-85.65995789 -409.02526855]
[-70.99317169 -405.81961060]
[-56.72595215 -401.14654541]
[-43.00470352 -395.05404663]
[-29.97023392 -387.60464478]
[-17.75629616 -378.87478638]
[-6.48822403 -368.95401001]
[3.71835232 -357.94415283]
[12.75869656 -345.95822144]
[20.54004097 -333.11914062]
[26.98253441 -319.55871582]
[32.02006912 -305.41607666]
[35.60094833 -290.83633423]
[37.68842697 -275.96914673]
[38.26108551 -260.96704102]
[37.31304932 -245.98397827]
[34.85404205 -231.17370605]
[30.90930367 -216.68820190]
[25.51930618 -202.67610168]
[18.73936462 -189.28118896]
[10.63905144 -176.64094543]
[1.30148780 -164.88505554]
[-9.17750645 -154.13415527]
[-20.69039917 -144.49858093]
[-12.27578068 -132.08108521]
[-3.86116242 -119.66359711]
[4.55345631 -107.24610138]
[12.96807480 -94.82860565]
[21.47490120 -82.47409821]
[30.07346535 -70.18325806]
[36.48349380 -66.50449371]
[38.70695114 -57.64480209]
[47.12157059 -45.22730637]
[53.47611618 -41.45351410]
[55.56741714 -32.56170273]
[63.79622650 -20.02030373]
[72.02503204 -7.47890282]
[80.25383759 5.06249714]
[88.48265076 17.60389709]
[86.64180756 2.71728253]
[87.99992371 -12.22110844]
[92.49521637 -26.53167725]
[99.92316437 -39.56338882]
[109.94586182 -50.72338867]
[122.10733032 -59.50397110]
[135.85430908 -65.50567627]
[150.56141663 -68.45546722]
[165.55955505 -68.21914673]
[180.16641235 -64.80747223]
[193.71748352 -58.37564850]
[205.59628296 -49.21627426]
[215.26240540 -37.74604797]
[222.27610779 -24.48678589]
[226.31831360 -10.04169655]
[227.20510864 4.93206644]
[224.89617920 19.75329590]
[219.49655151 33.74772263]
[211.25187683 46.27869797]
[200.53723145 56.77614594]
[187.84005737 64.76249695]
[173.73800659 69.87442780]
[158.87260437 71.87938690]
[143.92013550 70.68614960]
[129.56085205 66.34901428]
[116.44798279 59.06528091]
[105.17809296 49.16630936]
[96.26168823 37.09870911]
[98.92749023 51.85992432]
[101.59328461 66.62113953]
[104.25907898 81.38236237]
[116.10231018 89.73005676]
[118.67738342 103.98892212]
[110.50213623 115.95184326]
[113.16793823 130.71305847]
[116.54106140 134.69667053]
[117.91178131 139.13224792]
[117.44324493 143.18139648]
[115.60773468 146.19190979]
[117.61174774 161.05743408]
[119.61576080 175.92297363]
[121.61977386 190.78849792]
[123.62378693 205.65402222]
[125.62779999 220.51954651]
[137.21807861 234.82853699]
[129.92443848 250.79003906]
[132.70005798 265.53100586]
[136.02230835 280.15844727]
[139.34457397 294.78591919]
[142.66683960 309.41339111]
[145.98908997 324.04083252]
[149.31135559 338.66830444]
[164.29891968 337.55911255]
[179.28440857 338.69622803]
[193.93301392 342.05416870]
[207.91749573 347.55798340]
[220.92543030 355.08468628]
[232.66621399 364.46615601]
[242.87756348 375.49276733]
[251.33132935 387.91818237]
[257.83868408 401.46484375]
[262.25421143 415.83010864]
[264.47930908 430.69302368]
[264.46426392 445.72158813]
[262.20935059 460.58001709]
[257.76504517 474.93640137]
[251.23052979 488.47000122]
[242.75186157 500.87844849]
[232.51843262 511.88455200]
[220.75886536 521.24243164]
[207.73587036 528.74304199]
[193.74038696 534.21881104]
[179.08506775 537.54742432]
[164.09733582 538.65447998]
[149.11201477 537.51525879]
[134.46388245 534.15521240]
[120.48018646 528.64941406]
[107.47332764 521.12084961]
[95.73387909 511.73770142]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 183]
[14 182]
[15 181]
[16 180]
[17 179]
[18 178]
[24 177]
[27 175]
[28 174]
[29 173]
[30 172]
[31 171]
[32 170]
[33 166]
[34 165]
[37 162]
[38 161]
[39 160]
[40 159]
[41 131]
[42 130]
[43 129]
[44 128]
[45 127]
[46 125]
[47 124]
[48 122]
[49 121]
[51 120]
[52 119]
[53 118]
[54 117]
[55 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
