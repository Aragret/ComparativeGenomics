%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[106.92797089 520.11816406]
[93.28034210 513.28405762]
[83.95626068 501.20004272]
[80.80702209 486.26535034]
[84.45790863 471.44528198]
[94.18405151 459.68243408]
[108.05429840 453.31225586]
[108.27762604 438.31393433]
[108.50095367 423.31558228]
[108.72428131 408.31726074]
[108.94760895 393.31890869]
[98.42153168 382.84335327]
[98.43436432 367.62973022]
[109.49346161 356.66003418]
[109.71678925 341.66171265]
[109.94011688 326.66336060]
[110.16344452 311.66503906]
[102.61649323 298.82397461]
[110.55840302 285.14053345]
[110.78173065 270.14218140]
[110.55840302 255.14384460]
[109.88861847 240.15881348]
[106.44957733 233.61703491]
[109.32209015 224.94601440]
[108.87548828 209.95266724]
[108.42887878 194.95932007]
[107.75909424 179.97427368]
[106.86627960 165.00086975]
[104.64116669 150.16682434]
[101.10149384 135.59045410]
[97.56182098 121.01407623]
[94.02214813 106.43770599]
[91.56304169 104.63706970]
[89.70475769 101.90186310]
[88.79471588 98.45291138]
[89.09387970 94.63626862]
[90.73319244 90.88852692]
[88.06739807 76.12730408]
[85.40160370 61.36608887]
[69.71895599 59.29841614]
[55.46038818 52.49404526]
[44.01649094 41.62989426]
[36.49923325 27.77816200]
[33.63392258 12.30051708]
[35.68923187 -3.28575110]
[42.45206070 -17.45648003]
[53.24955750 -28.82967377]
[67.01605225 -36.30028152]
[64.13078308 -51.02017593]
[61.24550629 -65.74006653]
[48.41292572 -74.56970978]
[45.69653702 -89.53887177]
[54.19333649 -101.71836853]
[51.30806351 -116.43825531]
[48.42279053 -131.15814209]
[45.53751755 -145.87803650]
[42.10545731 -149.81098938]
[40.66884995 -154.22566223]
[41.07704544 -158.28134155]
[42.86753464 -161.31884766]
[40.64241409 -176.15289307]
[28.84037781 -190.28771973]
[35.89556503 -206.35604858]
[33.44983673 -221.15531921]
[31.00411034 -235.95458984]
[28.55838394 -250.75386047]
[26.11265564 -265.55313110]
[23.66692924 -280.35241699]
[9.08054638 -284.71118164]
[-2.12123108 -294.92913818]
[-7.75269604 -308.94009399]
[-6.74657774 -323.94506836]
[0.64412433 -336.97146606]
[12.90691662 -345.46200562]
[10.46118927 -360.26126099]
[8.01546192 -375.06054688]
[4.70202017 -379.09393311]
[3.39749169 -383.54943848]
[3.92625904 -387.59115601]
[5.80639172 -390.57400513]
[4.02392578 -405.46771240]
[2.24145985 -420.36145020]
[0.45899385 -435.25515747]
[-1.32347202 -450.14886475]
[-3.10593796 -465.04260254]
[-4.88840389 -479.93630981]
[-6.67086983 -494.83001709]
[-8.67488384 -509.69555664]
[-10.90000057 -524.52960205]
[-25.89361191 -526.21899414]
[-39.93872452 -531.73236084]
[-52.07772446 -540.69378662]
[-61.48295212 -552.49224854]
[-67.51313782 -566.32336426]
[-69.75714874 -581.24401855]
[-68.06196594 -596.23699951]
[-62.54317856 -610.27996826]
[-53.57706833 -622.41552734]
[-41.77495956 -631.81616211]
[-27.94153595 -637.84106445]
[-13.01998425 -640.07928467]
[1.97231734 -638.37829590]
[16.01317024 -632.85412598]
[28.14524460 -623.88330078]
[37.54135895 -612.07757568]
[43.56086349 -598.24182129]
[45.79334641 -583.31939697]
[44.08658981 -568.32775879]
[38.55696106 -554.28906250]
[29.58148193 -542.16046143]
[17.77211571 -532.76885986]
[3.93404317 -526.75469971]
[6.15916014 -511.92068481]
[9.39918232 -508.41192627]
[10.46942806 -502.83056641]
[8.22284794 -496.61248779]
[10.00531387 -481.71878052]
[11.78777981 -466.82507324]
[13.57024574 -451.93133545]
[15.35271072 -437.03762817]
[17.13517761 -422.14392090]
[18.91764259 -407.25018311]
[20.70010948 -392.35647583]
[22.81473351 -377.50628662]
[25.26045990 -362.70700073]
[27.70618820 -347.90774536]
[42.04866409 -343.81396484]
[53.23742676 -333.85803223]
[59.01764297 -319.97457886]
[58.19338989 -304.89675903]
[50.87467194 -291.61807251]
[38.46619797 -282.79812622]
[40.91192627 -267.99887085]
[43.35765457 -253.19958496]
[45.80338287 -238.40031433]
[48.24910736 -223.60104370]
[50.69483566 -208.80177307]
[60.34266281 -201.50479126]
[62.50135803 -189.19529724]
[55.47645950 -178.37800598]
[57.70157623 -163.54396057]
[60.25740814 -148.76330566]
[63.14268112 -134.04342651]
[66.02795410 -119.32353210]
[68.91322327 -104.60363770]
[81.37926483 -96.53311157]
[84.51503754 -81.64614868]
[75.96540070 -68.62533569]
[78.85066986 -53.90544891]
[81.73594666 -39.18555450]
[95.92478180 -37.82072449]
[109.16846466 -32.50612640]
[120.38977814 -23.66437340]
[128.67329407 -12.00534630]
[133.34004211 1.53078032]
[134.00311279 15.84935570]
[130.59979248 29.78977585]
[123.39732361 42.21955490]
[112.97194672 52.12632370]
[100.16281891 58.70029449]
[102.82861328 73.46150970]
[105.49441528 88.22273254]
[108.59851837 102.89803314]
[112.13819122 117.47440338]
[115.67786407 132.05078125]
[119.21753693 146.62715149]
[124.14221954 132.45861816]
[134.66519165 121.76903534]
[148.75462341 116.62240601]
[163.69007874 118.01246643]
[176.58775330 125.67080688]
[184.95729065 138.11872864]
[187.18269348 152.95272827]
[182.83424377 167.30859375]
[172.75157166 178.41444397]
[158.88148499 184.12590027]
[143.90208435 183.34016418]
[130.70564270 176.20896912]
[121.83968353 164.10806274]
[122.73250580 179.08146667]
[126.04839325 184.80128479]
[125.98710632 190.48400879]
[123.42223358 194.51271057]
[123.86883545 209.50605774]
[124.31544495 224.49940491]
[124.87365723 239.48902893]
[125.54344177 254.47406006]
[128.00906372 258.04821777]
[129.09942627 261.83975220]
[128.91506958 265.38958740]
[127.69528198 268.31854248]
[125.78006744 270.36550903]
[125.55673981 285.36386108]
[133.08772278 299.27767944]
[125.16178131 311.88836670]
[124.93845367 326.88668823]
[124.71512604 341.88504028]
[124.49179840 356.88336182]
[135.21939087 368.17745972]
[134.77925110 383.38473511]
[123.94594574 393.54223633]
[123.72261810 408.54058838]
[123.49929047 423.53890991]
[123.27596283 438.53726196]
[123.05263519 453.53558350]
[136.72706604 460.31588745]
[146.09866333 472.36312866]
[149.30670166 487.28530884]
[145.71418762 502.11962891]
[136.03445435 513.92071533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 205]
[8 204]
[9 203]
[10 202]
[11 201]
[14 198]
[15 197]
[16 196]
[17 195]
[19 193]
[20 192]
[21 187]
[22 186]
[24 185]
[25 184]
[26 183]
[27 180]
[28 179]
[29 166]
[30 165]
[31 164]
[32 163]
[37 162]
[38 161]
[39 160]
[48 150]
[49 149]
[50 148]
[53 145]
[54 144]
[55 143]
[56 142]
[60 141]
[61 140]
[63 137]
[64 136]
[65 135]
[66 134]
[67 133]
[68 132]
[74 126]
[75 125]
[76 124]
[80 123]
[81 122]
[82 121]
[83 120]
[84 119]
[85 118]
[86 117]
[87 116]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
