%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[188.95805359 496.07772827]
[188.58294678 481.06896973]
[189.75306702 466.10116577]
[192.45600891 451.33300781]
[196.66311646 436.92108154]
[202.32980347 423.01809692]
[209.39599609 409.77148438]
[217.78678894 397.32162476]
[227.41322327 385.80053711]
[238.17327881 375.33032227]
[249.95286560 366.02197266]
[241.91169739 353.35943604]
[233.87051392 340.69692993]
[225.82934570 328.03439331]
[217.78817749 315.37185669]
[209.74699402 302.70935059]
[201.70582581 290.04681396]
[193.66465759 277.38430786]
[177.10922241 274.42517090]
[167.62968445 260.12646484]
[171.49911499 243.06636047]
[163.27029419 230.52496338]
[156.97264099 226.65698242]
[155.01396179 217.73501587]
[146.97279358 205.07249451]
[138.93161011 192.40997314]
[130.89044189 179.74743652]
[122.84926605 167.08491516]
[121.87165070 182.05302429]
[113.62332153 194.58160400]
[100.26038361 201.39569092]
[85.27587891 200.71412659]
[72.58671570 192.71505737]
[65.50981140 179.48942566]
[65.89505005 164.49438477]
[73.64173126 151.64958191]
[86.72489929 144.31263733]
[101.72463989 144.40139771]
[114.71942139 151.89204407]
[108.64558411 138.17678833]
[102.57175446 124.46151733]
[96.49791718 110.74624634]
[92.04058838 125.06868744]
[80.08531189 134.12802124]
[65.09111786 134.54533386]
[52.65047073 126.16498566]
[47.40341949 112.11264038]
[51.30698395 97.62947083]
[62.90523529 88.11734009]
[77.87231445 87.12404633]
[90.62661743 95.02094269]
[86.22562408 80.68109131]
[81.82462311 66.34124756]
[77.42362976 52.00139999]
[73.02262878 37.66155243]
[68.51499939 23.35486603]
[63.47808456 9.22583771]
[58.02272797 -4.74696016]
[52.56737137 -18.71975899]
[47.11201096 -32.69255447]
[41.65665436 -46.66535568]
[36.20129776 -60.63815308]
[23.97485924 -70.67930603]
[26.55352020 -85.34899139]
[21.09816360 -99.32179260]
[15.64280605 -113.29458618]
[4.16499043 -119.17868042]
[-0.09113038 -130.92897034]
[4.64327621 -142.06054688]
[-0.60344177 -156.11300659]
[-5.85016012 -170.16548157]
[-20.50902939 -166.87438965]
[-35.47950745 -165.61006165]
[-50.48270798 -166.39607239]
[-65.23912048 -169.21775818]
[-79.47385406 -174.02256775]
[-92.92171478 -180.72097778]
[-105.33218384 -189.18821716]
[-116.47406006 -199.26652527]
[-126.13977814 -210.76815796]
[-134.14926147 -223.47886658]
[-140.35331726 -237.16181946]
[-144.63635254 -251.56214905]
[-146.91857910 -266.41156006]
[-147.15748596 -281.43344116]
[-145.34861755 -296.34793091]
[-141.52566528 -310.87716675]
[-135.75987244 -324.75048828]
[-128.15863037 -337.70947266]
[-118.86354828 -349.51266479]
[-108.04779053 -359.94018555]
[-95.91284943 -368.79776001]
[-82.68479919 -375.92044067]
[-68.61005402 -381.17547607]
[-53.95082855 -384.46496582]
[-38.98021317 -385.72766113]
[-23.97709846 -384.94003296]
[-9.22098732 -382.11676025]
[5.01322412 -377.31042480]
[18.46036148 -370.61053467]
[30.86991501 -362.14196777]
[42.01070023 -352.06243896]
[51.67516708 -340.55975342]
[59.68328094 -327.84820557]
[65.88584900 -314.16455078]
[70.16732788 -299.76376343]
[72.44794464 -284.91412354]
[72.68522644 -269.89221191]
[70.87474060 -254.97792053]
[67.05022430 -240.44909668]
[61.28292084 -226.57638550]
[53.68027496 -213.61824036]
[44.38391876 -201.81607056]
[33.56703568 -191.38970947]
[21.43113708 -182.53343201]
[8.20231152 -175.41220093]
[13.44902992 -161.35972595]
[18.69574738 -147.30726624]
[32.81406403 -136.88420105]
[29.61560440 -118.74994659]
[35.07096100 -104.77714539]
[40.52631760 -90.80435181]
[52.36255264 -81.76262665]
[50.17409515 -66.09350586]
[55.62945175 -52.12071228]
[61.08481216 -38.14791489]
[66.54016876 -24.17511559]
[71.99552155 -10.20231724]
[77.45088196 3.77048039]
[79.96111298 5.01823711]
[82.12833405 7.33550978]
[83.54271698 10.59663296]
[83.84743500 14.53003788]
[82.78773499 18.74085808]
[87.83630371 24.13842392]
[87.36247253 33.26055527]
[91.76347351 47.60040283]
[96.16447449 61.94025040]
[100.56546783 76.28009796]
[104.96646881 90.61994171]
[110.21318817 104.67241669]
[116.28701782 118.38768005]
[122.36085510 132.10295105]
[128.43469238 145.81822205]
[135.51179504 159.04374695]
[143.55296326 171.70626831]
[151.59414673 184.36878967]
[159.63531494 197.03131104]
[167.67648315 209.69384766]
[175.81170654 222.29615784]
[184.04051208 234.83755493]
[197.45579529 236.03947449]
[207.58161926 244.62309265]
[210.86616516 257.28381348]
[206.32717896 269.34310913]
[214.36834717 282.00564575]
[222.40953064 294.66818237]
[230.45069885 307.33068848]
[238.49186707 319.99322510]
[246.53305054 332.65576172]
[254.57421875 345.31826782]
[262.61538696 357.98080444]
[276.04934692 351.27761841]
[290.10134888 345.99127197]
[304.62240601 342.17779541]
[319.45861816 339.87762451]
[334.45272827 339.11514282]
[349.44573975 339.89843750]
[364.27874756 342.21920776]
[378.79449463 346.05285645]
[392.83914185 351.35870361]
[406.26376343 358.08053589]
[418.92611694 366.14709473]
[430.69189453 375.47290039]
[441.43640137 385.95904541]
[451.04577637 397.49438477]
[459.41812134 409.95663452]
[466.46469116 423.21371460]
[472.11077881 437.12506104]
[476.29653931 451.54321289]
[478.97760010 466.31536865]
[480.12554932 481.28488159]
[479.72821045 496.29306030]
[477.78979492 511.18087769]
[474.33087158 525.79046631]
[469.38806152 539.96691895]
[463.01379395 553.56005859]
[455.27563477 566.42572021]
[446.25561523 578.42749023]
[436.04934692 589.43823242]
[424.76501465 599.34118652]
[412.52227783 608.03131104]
[399.45086670 615.41662598]
[385.68936157 621.41870117]
[371.38363647 625.97399902]
[356.68536377 629.03417969]
[341.75033569 630.56683350]
[326.73687744 630.55572510]
[311.80413818 629.00091553]
[297.11041260 625.91900635]
[282.81146240 621.34252930]
[269.05886841 615.32000732]
[255.99842834 607.91540527]
[243.76855469 599.20715332]
[232.49890137 589.28747559]
[222.30895996 578.26165771]
[213.30673218 566.24652100]
[205.58763123 553.36938477]
[199.23350525 539.76684570]
[194.31170654 525.58306885]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 162]
[12 161]
[13 160]
[14 159]
[15 158]
[16 157]
[17 156]
[18 155]
[21 151]
[22 150]
[24 149]
[25 148]
[26 147]
[27 146]
[28 145]
[39 144]
[40 143]
[41 142]
[42 141]
[51 140]
[52 139]
[53 138]
[54 137]
[55 136]
[56 134]
[57 129]
[58 128]
[59 127]
[60 126]
[61 125]
[62 124]
[64 122]
[65 121]
[66 120]
[69 118]
[70 117]
[71 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
