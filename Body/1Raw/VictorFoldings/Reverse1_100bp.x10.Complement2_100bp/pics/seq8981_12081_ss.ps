%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUAGGGGGUAAGAGGAGGAUAGGGAGUUGGGGCUGUAGUAAUGGCCCAAAAGGAGAACAUUUAUAUCAAAUUGGUUUUGUAGUCUAACACUUAGACUGUUG\
) } def
/len { sequence length } bind def

/coor [
[74.86246490 956.78430176]
[59.87385941 956.11437988]
[44.94215012 954.64764404]
[30.10966873 952.38830566]
[15.41845417 949.34271240]
[0.91015399 945.51959229]
[-13.37410736 940.92968750]
[-27.39383888 935.58605957]
[-41.10929871 929.50384521]
[-54.48161316 922.70031738]
[-67.47286987 915.19470215]
[-80.04624939 907.00823975]
[-92.16610718 898.16424561]
[-103.79809570 888.68774414]
[-114.90923309 878.60559082]
[-125.46802521 867.94641113]
[-135.44454956 856.74029541]
[-144.81051636 845.01916504]
[-153.53938293 832.81610107]
[-161.60639954 820.16577148]
[-168.98870850 807.10406494]
[-175.66539001 793.66796875]
[-181.61749268 779.89550781]
[-186.82815552 765.82586670]
[-191.28262329 751.49877930]
[-194.96826172 736.95495605]
[-197.87461853 722.23553467]
[-199.99345398 707.38232422]
[-201.31875610 692.43743896]
[-201.84678650 677.44311523]
[-201.57603455 662.44201660]
[-200.50727844 647.47656250]
[-198.64353943 632.58917236]
[-195.99009705 617.82208252]
[-192.55448914 603.21716309]
[-188.34643555 588.81579590]
[-183.37786865 574.65881348]
[-177.66287231 560.78631592]
[-171.21766663 547.23767090]
[-164.06048584 534.05120850]
[-156.21165466 521.26440430]
[-147.69338989 508.91342163]
[-138.52986145 497.03332520]
[-128.74702454 485.65774536]
[-118.37262726 474.81896973]
[-107.43606567 464.54772949]
[-95.96834564 454.87307739]
[-84.00197601 445.82250977]
[-71.57086945 437.42160034]
[-58.71026611 429.69424438]
[-45.45662308 422.66232300]
[-31.84751129 416.34573364]
[-17.92150307 410.76239014]
[-3.71807599 405.92816162]
[10.72251034 401.85671997]
[25.35932159 398.55960083]
[40.15086746 396.04617310]
[55.05521774 394.32351685]
[70.03012848 393.39657593]
[85.03314972 393.26794434]
[85.70293427 378.28289795]
[86.37271881 363.29785156]
[87.04250336 348.31283569]
[87.71229553 333.32778931]
[88.38208008 318.34274292]
[89.05186462 303.35769653]
[89.72164917 288.37268066]
[75.41539001 278.01879883]
[70.14184570 260.99996948]
[76.19287872 244.07470703]
[91.32339478 234.08345032]
[83.77644348 221.24238586]
[91.71835327 207.55894470]
[91.94168091 192.56060791]
[92.16500854 177.56227112]
[92.38833618 162.56393433]
[92.50000000 147.56434631]
[92.50000000 132.56434631]
[92.50000000 117.56434631]
[82.32884216 107.24475861]
[82.32884216 92.75524139]
[92.50000000 82.43565369]
[92.50000000 67.43565369]
[84.76270294 53.63548279]
[92.50000000 40.90821075]
[89.88853455 36.38854980]
[89.32792664 31.77996826]
[90.50861359 27.87855339]
[92.84993744 25.24216461]
[93.51972198 10.25712585]
[94.18950653 -4.72791243]
[82.22592926 -14.43249893]
[78.31639862 -29.14878082]
[83.75762939 -43.17935181]
[96.26753235 -51.21928406]
[96.93731689 -66.20432281]
[89.82394409 -80.33621979]
[98.12182617 -92.70530701]
[98.79161072 -107.69034576]
[84.88592529 -113.77281189]
[74.11925507 -124.47062683]
[67.94770813 -138.33700562]
[67.20592499 -153.49662781]
[71.99423981 -167.89927673]
[81.66506195 -179.59713745]
[94.91049194 -187.00813293]
[109.93920135 -189.13000488]
[124.71867371 -185.67579651]
[137.25010681 -177.11265564]
[145.83874512 -164.59866333]
[149.32301331 -149.82624817]
[147.23171997 -134.79325867]
[139.84768677 -121.53276825]
[128.16954041 -111.83816528]
[113.77664948 -107.02056122]
[113.10686493 -92.03552246]
[120.26814270 -78.97545624]
[111.92235565 -65.53453827]
[111.25257111 -50.54949951]
[122.99529266 -41.42554855]
[127.16308594 -26.96548462]
[121.95621490 -12.65667820]
[109.17454529 -4.05812740]
[108.50476074 10.92691135]
[107.83497620 25.91195107]
[107.50000000 40.90821075]
[115.23729706 53.63548279]
[107.50000000 67.43565369]
[107.50000000 82.43565369]
[117.67115784 92.75524139]
[117.67115784 107.24475861]
[107.50000000 117.56434631]
[107.50000000 132.56434631]
[107.50000000 147.56434631]
[110.62940979 156.14599609]
[107.38667297 162.78726196]
[107.16334534 177.78559875]
[106.94001770 192.78393555]
[106.71669006 207.78227234]
[114.24766541 221.69610596]
[106.32173157 234.30677795]
[117.22557831 240.42019653]
[124.45359039 250.53080750]
[126.68402100 262.68417358]
[123.55393982 274.56289673]
[115.71670532 283.92828369]
[104.70668793 289.04244995]
[104.03690338 304.02749634]
[103.36711884 319.01254272]
[102.69733429 333.99755859]
[102.02754211 348.98260498]
[101.35775757 363.96765137]
[100.68797302 378.95269775]
[100.01818848 393.93771362]
[114.94990540 395.40435791]
[129.78240967 397.66360474]
[144.47363281 400.70907593]
[158.98196411 404.53213501]
[173.26625061 409.12191772]
[187.28602600 414.46545410]
[201.00151062 420.54757690]
[214.37387085 427.35107422]
[227.36517334 434.85659790]
[239.93861389 443.04293823]
[252.05853271 451.88684082]
[263.69058228 461.36328125]
[274.80178833 471.44537354]
[285.36062622 482.10452271]
[295.33721924 493.31054688]
[304.70327759 505.03164673]
[313.43222046 517.23461914]
[321.49932861 529.88488770]
[328.88171387 542.94659424]
[335.55847168 556.38262939]
[341.51065063 570.15502930]
[346.72140503 584.22467041]
[351.17596436 598.55175781]
[354.86169434 613.09552002]
[357.76815796 627.81494141]
[359.88708496 642.66809082]
[361.21249390 657.61303711]
[361.74060059 672.60729980]
[361.46994019 687.60839844]
[360.40127563 702.57391357]
[358.53762817 717.46124268]
[355.88430786 732.22833252]
[352.44876099 746.83331299]
[348.24081421 761.23468018]
[343.27233887 775.39172363]
[337.55743408 789.26428223]
[331.11230469 802.81298828]
[323.95523071 815.99945068]
[316.10644531 828.78631592]
[307.58828735 841.13732910]
[298.42480469 853.01751709]
[288.64205933 864.39312744]
[278.26773071 875.23199463]
[267.33123779 885.50329590]
[255.86357117 895.17803955]
[243.89726257 904.22869873]
[231.46620178 912.62963867]
[218.60565186 920.35705566]
[205.35205078 927.38909912]
[191.74298096 933.70581055]
[177.81701660 939.28918457]
[163.61361694 944.12353516]
[149.17304993 948.19506836]
[134.53627014 951.49224854]
[119.74473572 954.00579834]
[104.84039307 955.72851562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 154]
[61 153]
[62 152]
[63 151]
[64 150]
[65 149]
[66 148]
[67 147]
[71 141]
[73 139]
[74 138]
[75 137]
[76 136]
[77 134]
[78 133]
[79 132]
[82 129]
[83 128]
[85 126]
[89 125]
[90 124]
[91 123]
[95 119]
[96 118]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
