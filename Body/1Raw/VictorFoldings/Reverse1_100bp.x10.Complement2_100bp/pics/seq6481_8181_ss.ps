%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGACACCUCGUUUGGUGUCAAAGUACGGGUAGCAGGAUCUUAAUUAAGGGGAUUUUUAGAAACUUUAUCCCGGGCAUAAAUGGGAUAUCGUGGGGGAGAUG\
) } def
/len { sequence length } bind def

/coor [
[79.66378021 447.32113647]
[76.99843597 462.13967896]
[71.31002045 476.08010864]
[62.84719849 488.53298950]
[51.97993851 498.95394897]
[39.18330765 506.88742065]
[25.01671982 511.98657227]
[10.09947586 514.02850342]
[-4.91630554 512.92401123]
[-19.37419891 508.72125244]
[-32.64216614 501.60403442]
[-44.14019012 491.88348389]
[-53.36562347 479.98452759]
[-59.91517639 466.42733765]
[-63.50252533 451.80459595]
[-63.97084808 436.75555420]
[-61.29967117 421.93804932]
[-55.60576630 407.99984741]
[-47.13805008 395.55029297]
[-36.26669312 385.13360596]
[-23.46693993 377.20516968]
[-9.29834652 372.11157227]
[5.61969900 370.07550049]
[20.63504410 371.18597412]
[24.82205582 356.78216553]
[29.00906563 342.37838745]
[25.13192368 327.99725342]
[36.41378021 316.90536499]
[40.60079193 302.50158691]
[44.78780365 288.09780884]
[48.97481537 273.69403076]
[36.61639786 261.70617676]
[32.00810623 245.02455139]
[36.50642776 228.22071838]
[48.95926666 215.94726562]
[65.99933624 211.64967346]
[69.75563049 197.12760925]
[73.51193237 182.60554504]
[62.41999054 166.59046936]
[66.74902344 147.28338623]
[84.14575958 137.23187256]
[87.24987030 122.55656433]
[90.35398102 107.88126373]
[80.90680695 119.53248596]
[68.59259033 128.09753418]
[54.38247681 132.90092468]
[39.39713287 133.56385803]
[24.81836700 130.03404236]
[11.79592228 122.58985901]
[1.35680318 111.81837463]
[-5.67571878 98.56908417]
[-8.74702930 83.88688660]
[-7.61491203 68.92967224]
[-2.36865020 54.87702942]
[6.57801390 42.83721161]
[18.51950836 33.75972748]
[32.51408005 28.36046791]
[47.45805359 27.06523895]
[62.17288971 29.97618675]
[75.49810791 36.86374283]
[86.38283539 47.18472672]
[93.96865845 60.12518311]
[97.65731049 74.66457367]
[97.15730286 89.65967560]
[104.43053436 76.54097748]
[111.70376587 63.42228699]
[117.26299286 49.49048615]
[121.01929474 34.96842575]
[116.98435974 19.67039108]
[127.66229248 9.28621960]
[131.41859436 -5.23583937]
[134.30386353 -19.95573044]
[136.30787659 -34.82125854]
[138.31188965 -49.68678665]
[140.31590271 -64.55231476]
[142.31991577 -79.41784668]
[144.32394409 -94.28337097]
[146.32795715 -109.14890289]
[148.11041260 -124.04261780]
[149.67094421 -138.96122742]
[151.23146057 -153.87982178]
[152.79199219 -168.79843140]
[138.13212585 -172.05207825]
[123.93872070 -176.95564270]
[110.39680481 -183.44520569]
[97.68293762 -191.43615723]
[85.96286774 -200.82432556]
[75.38938141 -211.48730469]
[66.10033417 -223.28610229]
[58.21682358 -236.06686401]
[51.84162903 -249.66299438]
[47.05786514 -263.89721680]
[43.92789459 -278.58398438]
[42.49252701 -293.53179932]
[42.77047348 -308.54583740]
[44.75811005 -323.43026733]
[48.42952347 -337.99114990]
[53.73685455 -352.03854370]
[60.61090088 -365.38940430]
[68.96205902 -377.86962891]
[78.68144226 -389.31652832]
[89.64234161 -399.58084106]
[101.70185852 -408.52880859]
[114.70278168 -416.04370117]
[128.47560120 -422.02761841]
[142.84077454 -426.40249634]
[157.61102295 -429.11129761]
[172.59376526 -430.11874390]
[187.59370422 -429.41171265]
[202.41525269 -426.99935913]
[216.86518860 -422.91317749]
[230.75514221 -417.20642090]
[243.90402222 -409.95352173]
[256.14041138 -401.24899292]
[267.30474854 -391.20632935]
[277.25152588 -379.95645142]
[285.85107422 -367.64605713]
[292.99124146 -354.43563843]
[298.57894897 -340.49734497]
[302.54135132 -326.01300049]
[304.82681274 -311.17135620]
[305.40551758 -296.16592407]
[304.26992798 -281.19232178]
[301.43487549 -266.44580078]
[296.93725586 -252.11857605]
[290.83575439 -238.39744568]
[283.20989990 -225.46130371]
[274.15911865 -213.47875977]
[263.80139160 -202.60607910]
[252.27175903 -192.98497009]
[239.72055054 -184.74089050]
[226.31138611 -177.98130798]
[212.21907043 -172.79434204]
[197.62734985 -169.24763489]
[182.72642517 -167.38740540]
[167.71058655 -167.23791504]
[166.15007019 -152.31930542]
[164.58953857 -137.40069580]
[163.02902222 -122.48209381]
[165.28713989 -118.27378082]
[164.92561340 -112.60224152]
[161.19348145 -107.14488983]
[159.18946838 -92.27935791]
[157.18545532 -77.41383362]
[155.18144226 -62.54830170]
[153.17742920 -47.68277359]
[151.17341614 -32.81724548]
[149.16940308 -17.95171738]
[160.46438599 -27.82204628]
[175.39305115 -29.28311157]
[188.38739014 -21.78997040]
[194.60083008 -8.13738155]
[191.71591187 6.58257866]
[180.80862427 16.87972832]
[165.94714355 18.91348457]
[152.67440796 11.92530918]
[145.94065857 -1.47953880]
[142.18435669 13.04252052]
[146.48796082 27.30184174]
[135.54135132 38.72472763]
[131.78504944 53.24678802]
[141.98419189 42.24781036]
[155.17082214 35.09848022]
[169.95330811 32.55327606]
[184.77162170 34.88080215]
[198.06196594 41.83543015]
[208.42176819 52.68321991]
[214.75773621 66.27938080]
[216.40121460 81.18907166]
[213.17875671 95.83884430]
[205.43046570 108.68267059]
[193.97401428 118.36511230]
[180.01841736 123.86435699]
[165.03648376 124.60005188]
[150.60925293 120.49456024]
[138.25927734 111.98115540]
[129.28988647 99.95825958]
[124.64762878 85.69468689]
[124.82245636 70.69551849]
[117.54923248 83.81420898]
[110.27600098 96.93289948]
[105.02928162 110.98537445]
[101.92517090 125.66067505]
[98.82106018 140.33598328]
[106.68645477 147.54426575]
[110.81865692 157.29269409]
[110.53377533 167.79614258]
[105.95021057 177.16117859]
[97.95522308 183.72743225]
[88.03399658 186.36184692]
[84.27769470 200.88391113]
[80.52139282 215.40597534]
[90.55049133 223.54209900]
[96.73506927 234.82598877]
[98.18733215 247.56436157]
[94.72664642 259.86080933]
[86.90114594 269.89822388]
[75.90122986 276.20715332]
[63.37859726 277.88104248]
[59.19158554 292.28482056]
[55.00457382 306.68859863]
[50.81756210 321.09237671]
[54.39522171 336.50375366]
[43.41284943 346.56539917]
[39.22583771 360.96917725]
[35.03882599 375.37298584]
[48.30959320 382.48495483]
[59.81143951 392.20098877]
[69.04155731 404.09631348]
[75.59644318 417.65090942]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 206]
[25 205]
[26 204]
[28 202]
[29 201]
[30 200]
[31 199]
[36 192]
[37 191]
[38 190]
[41 184]
[42 183]
[43 182]
[64 181]
[65 180]
[66 179]
[67 161]
[68 160]
[70 158]
[71 157]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[77 143]
[78 142]
[79 139]
[80 138]
[81 137]
[82 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
