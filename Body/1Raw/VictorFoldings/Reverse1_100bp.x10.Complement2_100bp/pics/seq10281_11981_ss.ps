%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[42.51745224 854.67364502]
[27.63436508 856.59619141]
[12.65064430 857.42718506]
[-2.35376120 857.16217041]
[-17.29879570 855.80267334]
[-32.10472107 853.35583496]
[-46.69254303 849.83477783]
[-60.98442078 845.25823975]
[-74.90410614 839.65069580]
[-88.37733459 833.04199219]
[-101.33220673 825.46746826]
[-113.69961548 816.96746826]
[-125.41357422 807.58740234]
[-136.41157532 797.37731934]
[-146.63493347 786.39160156]
[-156.02911377 774.68896484]
[-164.54399109 762.33184814]
[-172.13414001 749.38610840]
[-178.75904846 735.92083740]
[-184.38339233 722.00793457]
[-188.97714233 707.72155762]
[-192.51579285 693.13800049]
[-194.98045349 678.33502197]
[-196.35800171 663.39166260]
[-196.64106750 648.38757324]
[-195.82815552 633.40283203]
[-193.92358398 618.51745605]
[-190.93751526 603.81079102]
[-186.88589478 589.36132812]
[-181.79034424 575.24621582]
[-175.67803955 561.54064941]
[-168.58158875 548.31781006]
[-160.53886414 535.64831543]
[-151.59277344 523.59967041]
[-141.79104614 512.23614502]
[-131.18597412 501.61849976]
[-119.83416748 491.80325317]
[-107.79616547 482.84286499]
[-95.13620758 474.78506470]
[-81.92184448 467.67291260]
[-68.22357178 461.54431152]
[-54.11447906 456.43197632]
[-39.66984940 452.36318970]
[-24.96675110 449.35961914]
[-10.08363056 447.43734741]
[4.90010309 446.60662842]
[19.90450478 446.87185669]
[34.84951782 448.23162842]
[37.29524612 433.43234253]
[39.74097061 418.63308716]
[42.18669891 403.83380127]
[44.63242722 389.03454590]
[30.54545021 383.93579102]
[17.63185120 376.33325195]
[6.33217144 366.48455811]
[-2.96779251 354.72406006]
[-9.95016384 341.45135498]
[-14.37584686 327.11776733]
[-16.09271622 312.21105957]
[-15.04084587 297.23870850]
[-11.25459576 282.71075439]
[-4.86149549 269.12234497]
[3.92205143 256.93685913]
[14.79809284 246.57015991]
[27.39723778 238.37638855]
[41.29119492 232.63580322]
[56.00733566 229.54527283]
[71.04478455 229.21150208]
[73.49050903 214.41223145]
[75.93624115 199.61296082]
[78.38196564 184.81369019]
[80.82769012 170.01441956]
[83.27342224 155.21514893]
[85.71914673 140.41587830]
[88.16487122 125.61660004]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[97.03585052 71.93767548]
[99.48158264 57.13840103]
[100.70855713 42.18866730]
[100.70855713 27.18866920]
[100.70855713 12.18866825]
[100.70855713 -2.81133175]
[99.59291077 -17.76978493]
[97.36779022 -32.60382843]
[95.14267731 -47.43787384]
[92.91755676 -62.27191544]
[90.69243622 -77.10595703]
[75.69882965 -78.79534912]
[61.65371323 -84.30871582]
[49.51471329 -93.27014160]
[40.10948944 -105.06861877]
[34.07929993 -118.89971161]
[31.83529472 -133.82040405]
[33.53047562 -148.81335449]
[39.04925919 -162.85633850]
[48.01536942 -174.99188232]
[59.81748199 -184.39254761]
[73.65090179 -190.41740417]
[88.57245636 -192.65563965]
[103.56475830 -190.95466614]
[117.60561371 -185.43046570]
[129.73768616 -176.45967102]
[139.13380432 -164.65393066]
[145.15330505 -150.81817627]
[147.38578796 -135.89576721]
[145.67903137 -120.90412140]
[140.14939880 -106.86540222]
[131.17391968 -94.73679352]
[119.36455536 -85.34524536]
[105.52648163 -79.33107758]
[107.75160217 -64.49703217]
[109.97671509 -49.66299057]
[112.20183563 -34.82894516]
[114.42694855 -19.99490166]
[121.38175964 -33.28514862]
[133.99671936 -41.40073395]
[148.97431946 -42.22026062]
[162.39944458 -35.52951050]
[170.76278687 -23.07742882]
[171.87821960 -8.11895943]
[165.45413208 5.43579102]
[153.16979980 14.04364204]
[138.23629761 15.45452213]
[124.55722046 9.29963112]
[115.70855713 -2.81133175]
[115.70855713 12.18866825]
[115.70855713 27.18866920]
[115.70855713 42.18866730]
[124.16647339 29.80062294]
[137.36903381 22.68076897]
[152.36676025 22.41970444]
[165.80912781 29.07575035]
[174.69305420 41.16192627]
[177.03387451 55.97815323]
[172.30862427 70.21444702]
[161.57295227 80.69038391]
[147.22521973 85.06561279]
[132.47076416 82.36269379]
[120.60574341 73.18547058]
[114.28085327 59.58412933]
[111.83512878 74.38339996]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[102.96414948 128.06233215]
[100.51841736 142.86160278]
[98.07269287 157.66087341]
[95.62696075 172.46014404]
[93.18123627 187.25941467]
[90.73551178 202.05868530]
[88.28977966 216.85795593]
[85.84405518 231.65722656]
[99.97457886 236.81129456]
[112.91394806 244.47216797]
[124.22222900 254.37768555]
[133.51527405 266.18936157]
[140.47772217 279.50402832]
[144.87377930 293.86758423]
[146.55511475 308.79037476]
[145.46592712 323.76406860]
[141.64477539 338.27874756]
[135.22320557 351.84051514]
[126.42124939 363.98806763]
[115.53985596 374.30862427]
[102.95062256 382.45172119]
[89.08309174 388.14126587]
[74.41011047 391.18487549]
[59.43169785 391.48028564]
[56.98596954 406.27954102]
[54.54024124 421.07882690]
[52.09451675 435.87808228]
[49.64878845 450.67736816]
[64.23666382 454.19818115]
[78.52861786 458.77447510]
[92.44840240 464.38180542]
[105.92173004 470.99026489]
[118.87673187 478.56457520]
[131.24427795 487.06436157]
[142.95838928 496.44424438]
[153.95655823 506.65417480]
[164.18009949 517.63970947]
[173.57447815 529.34216309]
[182.08955383 541.69915771]
[189.67991638 554.64477539]
[196.30505371 568.10992432]
[201.92961121 582.02276611]
[206.52359009 596.30902100]
[210.06248474 610.89251709]
[212.52740479 625.69549561]
[213.90519714 640.63885498]
[214.18850708 655.64288330]
[213.37582397 670.62762451]
[211.47149658 685.51306152]
[208.48568726 700.21978760]
[204.43431091 714.66931152]
[199.33897400 728.78454590]
[193.22689819 742.49017334]
[186.13066101 755.71313477]
[178.08815002 768.38275146]
[169.14225769 780.43157959]
[159.34071350 791.79522705]
[148.73582458 802.41302490]
[137.38417053 812.22845459]
[125.34632111 821.18908691]
[112.68649292 829.24707031]
[99.47224426 836.35943604]
[85.77407074 842.48828125]
[71.66506958 847.60083008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 174]
[49 173]
[50 172]
[51 171]
[52 170]
[68 154]
[69 153]
[70 152]
[71 151]
[72 150]
[73 149]
[74 148]
[75 147]
[76 146]
[78 144]
[79 143]
[80 142]
[81 130]
[82 129]
[83 128]
[84 127]
[85 116]
[86 115]
[87 114]
[88 113]
[89 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
