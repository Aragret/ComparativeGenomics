%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxUUGUAAGAUGAUGAGUGAGAGUGACGGGUUCUUGAUAGUUUGAGGACUCGGUUGUUGAAUUAUACUGAUCGAAUGUGUUAUCGAAAAUAUCAUUUCUAUG\
) } def
/len { sequence length } bind def

/coor [
[100.12589264 564.41363525]
[95.56384277 550.03869629]
[94.72084045 534.98083496]
[97.64987946 520.18652344]
[104.16683197 506.58578491]
[113.86203766 495.03356934]
[126.12605286 486.25604248]
[140.18794250 480.80499268]
[138.40548706 465.91128540]
[136.62301636 451.01754761]
[134.84054565 436.12384033]
[132.94725037 421.24380493]
[130.94323730 406.37829590]
[128.93922424 391.51275635]
[126.93521881 376.64721680]
[124.36801910 374.23022461]
[122.84397888 370.44970703]
[122.99119568 365.80947876]
[125.18901825 361.07485962]
[123.85078430 346.13467407]
[122.51255035 331.19448853]
[121.17431641 316.25430298]
[119.83608246 301.31411743]
[110.75770569 293.31979370]
[109.52053070 280.88381958]
[117.33052063 270.61898804]
[116.21487427 255.66053772]
[115.09922028 240.70208740]
[113.09520721 225.83654785]
[110.20993805 211.11665344]
[107.32466125 196.39677429]
[97.28373718 185.39544678]
[102.22206879 170.36470032]
[99.97354889 168.69068909]
[98.25265503 166.02514648]
[97.44035339 162.56457520]
[97.83953094 158.63961792]
[99.63070679 154.68417358]
[97.62669373 139.81863403]
[95.62268066 124.95310974]
[93.61866760 110.08757782]
[88.00366974 123.99699402]
[77.79646301 134.98849487]
[64.33998871 141.61595154]
[49.40466309 143.00741577]
[34.95549774 138.97981262]
[22.89352226 130.06304932]
[14.80569935 117.43025970]
[11.75611973 102.74353027]
[14.14600849 87.93514252]
[21.66093445 74.95339203]
[33.31217957 65.50624847]
[47.56682587 60.83665466]
[62.54942322 61.55897141]
[76.28875732 67.57816315]
[86.97718048 78.10230255]
[93.20903015 91.74907684]
[94.54726410 76.80889130]
[95.88549805 61.86870575]
[97.22373199 46.92852020]
[89.09051514 30.40785599]
[99.73822784 16.45819283]
[100.85387421 1.49973929]
[101.96952820 -13.45871449]
[93.59123993 -29.85645294]
[104.03008270 -43.96310043]
[104.92289734 -58.93650436]
[105.81571960 -73.90991211]
[106.70853424 -88.88331604]
[98.08703613 -105.15450287]
[108.31469727 -119.41500092]
[108.98448181 -134.40003967]
[109.65426636 -149.38508606]
[107.24722290 -154.01684570]
[106.89295959 -158.64585876]
[108.24667358 -162.49066162]
[110.70338440 -165.01986694]
[112.04161835 -179.96005249]
[113.37985229 -194.90023804]
[114.71808624 -209.84042358]
[112.52025604 -214.57504272]
[112.37303925 -219.21527100]
[113.89708710 -222.99578857]
[116.46427917 -225.41278076]
[118.46829224 -240.27830505]
[120.47231293 -255.14384460]
[122.47632599 -270.00936890]
[120.49210358 -274.83740234]
[120.55223083 -279.47955322]
[122.24356079 -283.18826294]
[124.91612244 -285.48822021]
[127.58191681 -300.24942017]
[130.24771118 -315.01065063]
[131.69712830 -329.94046021]
[131.92045593 -344.93878174]
[132.14378357 -359.93713379]
[132.36711121 -374.93548584]
[118.11321259 -380.04476929]
[106.29218292 -389.50744629]
[98.18626404 -402.29699707]
[94.67474365 -417.02615356]
[96.13851929 -432.09719849]
[102.41880798 -445.87530518]
[112.83437347 -456.86596680]
[126.25541687 -463.87698364]
[141.22612000 -466.14785767]
[156.12255859 -463.43228149]
[169.32890320 -456.02474976]
[179.41262817 -444.72885132]
[185.27990723 -430.76986694]
[186.29431152 -415.66192627]
[182.34579468 -401.04385376]
[173.86268616 -388.50131226]
[161.76515198 -379.39480591]
[147.36544800 -374.71212769]
[147.14212036 -359.71380615]
[146.91879272 -344.71545410]
[146.69546509 -329.71713257]
[155.33688354 -341.97787476]
[168.64398193 -348.90036011]
[183.64393616 -348.93811035]
[196.98571777 -342.08267212]
[205.68872070 -329.86557007]
[207.80868530 -315.01614380]
[202.87200928 -300.85177612]
[191.98155212 -290.53683472]
[177.57026672 -286.37570190]
[162.85768127 -289.29800415]
[151.13061523 -298.65084839]
[145.00892639 -312.34484863]
[142.34313965 -297.58364868]
[139.67733765 -282.82241821]
[137.34185791 -268.00534058]
[135.33784485 -253.13981628]
[133.33381653 -238.27429199]
[131.32980347 -223.40876770]
[129.65826416 -208.50219727]
[128.32003784 -193.56201172]
[126.98180389 -178.62182617]
[125.64356995 -163.68164062]
[124.63930511 -148.71528625]
[123.96952057 -133.73025513]
[123.29973602 -118.74521637]
[131.22868347 -109.60965729]
[130.79330444 -97.11988831]
[121.68193817 -87.99050140]
[120.78912354 -73.01709747]
[119.89630890 -58.04368973]
[119.00349426 -43.07028580]
[126.79553986 -33.81768799]
[126.17426300 -21.33578873]
[116.92797852 -12.34306526]
[115.81233215 2.61538792]
[114.69668579 17.57384109]
[122.35010529 26.94142532]
[121.54306793 39.41268921]
[112.16391754 48.26675415]
[110.82568359 63.20693970]
[109.48744965 78.14712524]
[108.14921570 93.08731079]
[108.48419189 108.08356476]
[110.48820496 122.94909668]
[112.49221802 137.81462097]
[114.49623108 152.68014526]
[116.94196320 167.47941589]
[127.18926239 179.53361511]
[122.04455566 193.51148987]
[124.92982483 208.23138428]
[127.81510162 222.95127869]
[135.33392334 209.97178650]
[148.99876404 203.78535461]
[163.71299744 206.69937134]
[173.98855591 217.62699890]
[175.99291992 232.49247742]
[168.97851562 245.75135803]
[155.56153870 252.45841980]
[140.74618530 250.11207581]
[130.05767822 239.58642578]
[131.17332458 254.54489136]
[132.28897095 269.50332642]
[143.00701904 284.47680664]
[134.77626038 299.97589111]
[136.11450195 314.91607666]
[137.45272827 329.85626221]
[138.79096985 344.79644775]
[140.12921143 359.73663330]
[141.80075073 374.64321899]
[143.80476379 389.50872803]
[145.80877686 404.37426758]
[147.81278992 419.23980713]
[152.06065369 427.32641602]
[149.73426819 434.34136963]
[151.51673889 449.23510742]
[153.29919434 464.12881470]
[155.08166504 479.02252197]
[170.03276062 481.00134277]
[184.02171326 486.63693237]
[196.16918945 495.57501221]
[205.71156311 507.25381470]
[212.04901123 520.93908691]
[214.78315735 535.77069092]
[213.74211121 550.81616211]
[208.99133301 565.12982178]
[200.82945251 577.81188965]
[189.76953125 588.06512451]
[176.50682068 595.24505615]
[161.87500000 598.90026855]
[146.79385376 598.80102539]
[132.21139526 594.95361328]
[119.04428101 587.59985352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 195]
[9 194]
[10 193]
[11 192]
[12 190]
[13 189]
[14 188]
[15 187]
[19 186]
[20 185]
[21 184]
[22 183]
[23 182]
[26 180]
[27 179]
[28 178]
[29 169]
[30 168]
[31 167]
[33 165]
[38 164]
[39 163]
[40 162]
[41 161]
[57 160]
[58 159]
[59 158]
[60 157]
[62 154]
[63 153]
[64 152]
[66 149]
[67 148]
[68 147]
[69 146]
[71 143]
[72 142]
[73 141]
[77 140]
[78 139]
[79 138]
[80 137]
[84 136]
[85 135]
[86 134]
[87 133]
[91 132]
[92 131]
[93 130]
[94 118]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
