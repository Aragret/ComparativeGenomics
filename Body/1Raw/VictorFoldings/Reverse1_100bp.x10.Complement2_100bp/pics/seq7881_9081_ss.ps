%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxGAAGGGAGAUGUGAAUAGUAGAAGUGUUAAGAUUAAGAUGACUGAUAGGAUCUUUAGCGACAGCGGAAUUAGGUUCGGAUGCAAAAGUGUGAAGAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[180.18452454 417.54678345]
[188.97644043 405.31912231]
[200.19171143 395.26763916]
[213.30575562 387.86251831]
[208.90475464 373.52267456]
[204.50375366 359.18283081]
[200.10275269 344.84298706]
[195.70176697 330.50314331]
[191.30076599 316.16329956]
[185.12500000 302.49362183]
[177.27323914 289.71276855]
[169.42147827 276.93194580]
[161.56973267 264.15109253]
[153.71797180 251.37025452]
[145.86621094 238.58940125]
[138.01446533 225.80856323]
[130.16270447 213.02772522]
[131.00712585 228.00393677]
[127.00646973 242.46058655]
[118.58292389 254.87202454]
[106.62545013 263.92843628]
[92.39595032 268.67410278]
[77.39609528 268.60818481]
[63.20885849 263.73764038]
[51.33144760 254.57646179]
[43.01731873 242.09146118]
[39.14387894 227.60020447]
[40.11990356 212.63200378]
[45.84239197 198.76646423]
[55.70743179 187.46685791]
[68.67394257 179.92567444]
[83.37354279 176.93873596]
[98.25494385 178.82125854]
[111.74767303 185.37458801]
[122.42793274 195.90728760]
[118.02693176 181.56744385]
[113.62593842 167.22760010]
[100.15304565 155.98268127]
[104.42520142 138.07095337]
[99.81119537 123.79821777]
[95.19718170 109.52548981]
[89.22562408 95.76538849]
[81.95239258 82.64669037]
[74.67916107 69.52799988]
[67.40592957 56.40930176]
[60.13270187 43.29060745]
[52.85947418 30.17191505]
[45.58624268 17.05322075]
[32.12790298 8.73554897]
[32.72356415 -6.14714098]
[19.84829140 -5.14370632]
[7.59435797 -9.07005215]
[-2.22861004 -17.30924416]
[-8.18404770 -28.61021805]
[-9.41849136 -41.27765656]
[-5.78372335 -53.42628860]
[2.14643192 -63.26147461]
[-4.73298073 -76.59090424]
[-11.61239338 -89.92033386]
[-18.49180603 -103.24976349]
[-25.37121773 -116.57919312]
[-40.15838623 -121.47586060]
[-46.94520569 -135.09179688]
[-42.18585205 -149.15893555]
[-49.06526184 -162.48835754]
[-63.17025757 -157.32575989]
[-77.81108856 -153.97175598]
[-92.75684357 -152.47923279]
[-107.77180481 -152.87171936]
[-122.61917877 -155.14303589]
[-137.06478882 -159.25737000]
[-150.88079834 -165.14981079]
[-163.84933472 -172.72744751]
[-175.76583862 -181.87075806]
[-186.44238281 -192.43553162]
[-195.71058655 -204.25517273]
[-203.42427063 -217.14323425]
[-209.46177673 -230.89648438]
[-213.72789001 -245.29798889]
[-216.15531921 -260.12063599]
[-216.70579529 -275.13064575]
[-215.37062073 -290.09127808]
[-212.17086792 -304.76660156]
[-207.15699768 -318.92514038]
[-200.40808105 -332.34359741]
[-192.03054810 -344.81036377]
[-182.15653992 -356.12881470]
[-170.94178772 -366.12042236]
[-158.56315613 -374.62765503]
[-145.21586609 -381.51626587]
[-131.11044312 -386.67767334]
[-116.46932983 -390.03045654]
[-101.52344513 -391.52172852]
[-86.50851440 -391.12796021]
[-71.66133881 -388.85540771]
[-57.21607590 -384.73983765]
[-43.40055466 -378.84625244]
[-30.43266487 -371.26751709]
[-18.51692772 -362.12319946]
[-7.84126997 -351.55752563]
[1.42593598 -339.73712158]
[9.13853359 -326.84838867]
[15.17488384 -313.09463501]
[19.43978500 -298.69277954]
[21.86597252 -283.86993408]
[22.41518402 -268.85986328]
[21.07875633 -253.89935303]
[17.87776566 -239.22431946]
[12.86269855 -225.06619263]
[6.11264801 -211.64830017]
[-2.26592708 -199.18223572]
[-12.14088440 -187.86460876]
[-23.35648155 -177.87393188]
[-35.73583221 -169.36776733]
[-28.85642052 -156.03834534]
[-14.63311958 -151.76829529]
[-7.46653461 -138.34835815]
[-12.04178905 -123.45860291]
[-5.16237640 -110.12917328]
[1.71703613 -96.79974365]
[8.59644890 -83.47031403]
[15.47586155 -70.14088440]
[32.69223404 -69.95433044]
[47.51895905 -61.02788162]
[55.82489014 -45.74339676]
[55.24257278 -28.26851273]
[45.84225845 -13.42037010]
[58.78036880 -6.04103518]
[58.70493698 9.77999115]
[65.97816467 22.89868546]
[73.25139618 36.01737976]
[80.52462769 49.13607407]
[87.79785919 62.25476837]
[95.07108307 75.37345886]
[102.34431458 88.49215698]
[103.01478577 73.50714874]
[109.64926147 60.05413055]
[121.12973022 50.40017319]
[135.52153015 46.17213821]
[150.39936829 48.08252716]
[163.25610352 55.80939865]
[171.92512512 68.05064392]
[174.94555664 82.74339294]
[171.80839539 97.41167450]
[163.04232788 109.58360291]
[150.12457275 117.20800781]
[135.23199463 119.00004578]
[120.87427521 114.65772247]
[109.46991730 104.91147614]
[114.08392334 119.18421173]
[118.69793701 133.45693970]
[129.80517578 140.01377869]
[133.35435486 151.99656677]
[127.96578217 162.82659912]
[132.36677551 177.16644287]
[136.76777649 191.50630188]
[142.94354248 205.17596436]
[150.79530334 217.95680237]
[158.64706421 230.73765564]
[166.49880981 243.51849365]
[174.35057068 256.29934692]
[182.20233154 269.08016968]
[190.05407715 281.86102295]
[197.90583801 294.64187622]
[197.06141663 279.66564941]
[201.06207275 265.20901489]
[209.48561096 252.79756165]
[221.44308472 243.74113464]
[235.67259216 238.99546814]
[250.67243958 239.06140137]
[264.85968018 243.93194580]
[276.73709106 253.09312439]
[285.05123901 265.57812500]
[288.92465210 280.06936646]
[287.94863892 295.03759766]
[282.22616577 308.90313721]
[272.36111450 320.20272827]
[259.39459229 327.74392700]
[244.69500732 330.73086548]
[229.81359863 328.84832764]
[216.32086182 322.29498291]
[205.64060974 311.76229858]
[210.04161072 326.10214233]
[214.44261169 340.44198608]
[218.84359741 354.78182983]
[223.24459839 369.12167358]
[227.64559937 383.46151733]
[242.65592957 382.23507690]
[257.57891846 384.26452637]
[271.71658325 389.45498657]
[284.40765381 397.56362915]
[295.05862427 408.21121216]
[303.17126465 420.89978027]
[308.36611938 435.03579712]
[310.40026855 449.95812988]
[309.17855835 464.96884155]
[304.75808716 479.36584473]
[297.34567261 492.47576904]
[287.28796387 503.68542480]
[275.05538940 512.47052002]
[261.22006226 518.42016602]
[246.42915344 521.25610352]
[231.37438965 520.84570312]
[216.75994873 517.20806885]
[203.26936340 510.51342773]
[191.53361511 501.07489014]
[182.10160828 489.33389282]
[175.41448975 475.83956909]
[171.78501892 461.22311401]
[171.38298035 446.16812134]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 187]
[5 186]
[6 185]
[7 184]
[8 183]
[9 182]
[10 164]
[11 163]
[12 162]
[13 161]
[14 160]
[15 159]
[16 158]
[17 157]
[35 156]
[36 155]
[37 154]
[39 151]
[40 150]
[41 149]
[42 135]
[43 134]
[44 133]
[45 132]
[46 131]
[47 130]
[48 129]
[50 127]
[57 122]
[58 121]
[59 120]
[60 119]
[61 118]
[64 115]
[65 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
