%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[123.71648407 689.53973389]
[111.35704803 680.95825195]
[100.84519958 670.19268799]
[92.56093597 657.63214111]
[86.80373383 643.73065186]
[83.78170013 628.99078369]
[83.60408783 613.94537354]
[86.27732086 599.13824463]
[91.70475769 585.10473633]
[99.69020081 572.35217285]
[109.94497681 561.34143066]
[122.09838867 552.47064209]
[135.71110535 546.06042480]
[150.29101562 542.34252930]
[149.39819336 527.36914062]
[148.50538635 512.39575195]
[147.61256409 497.42233276]
[133.21408081 486.11752319]
[131.62403870 467.55990601]
[144.31744385 453.49606323]
[142.97920227 438.55587769]
[134.13728333 426.56964111]
[140.61254883 412.13421631]
[139.27430725 397.19403076]
[137.93608093 382.25384521]
[136.59783936 367.31365967]
[128.36746216 379.85403442]
[114.70742035 386.05108643]
[99.85044861 383.98458862]
[88.40013123 374.29489136]
[83.90447998 359.98443604]
[87.75651550 345.48748779]
[98.76264191 335.29605103]
[113.51249695 332.56808472]
[127.43567657 338.14886475]
[136.21801758 350.30938721]
[136.88780212 335.32434082]
[137.55758667 320.33929443]
[138.22737122 305.35427856]
[138.89715576 290.36923218]
[139.56694031 275.38418579]
[137.78446960 260.49047852]
[133.59745789 246.08668518]
[129.41044617 231.68290710]
[125.22344208 217.27912903]
[114.24106598 207.21748352]
[117.81872559 191.80609131]
[104.89133453 188.47071838]
[95.22258759 179.10804749]
[91.41237640 166.08683777]
[94.55857849 152.77821350]
[103.94349670 142.68295288]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[81.59197998 61.28914642]
[77.51231384 46.85459518]
[73.32530212 32.45081329]
[68.82491302 27.60746002]
[67.62605286 22.05230522]
[69.23493195 17.55557632]
[65.47863007 3.03351760]
[61.72232819 -11.48854160]
[57.85802078 -25.98223495]
[53.88592529 -40.44675827]
[49.91382980 -54.91128159]
[45.94173431 -69.37580872]
[39.40911102 -55.87303543]
[26.24223518 -48.68739700]
[11.35202885 -50.49895477]
[0.29216886 -60.63204193]
[-2.81229043 -75.30727386]
[3.19653797 -89.05113983]
[16.07750893 -96.73753357]
[31.02634048 -95.49960327]
[42.46810532 -85.79808807]
[38.65513611 -91.19927216]
[38.20919800 -96.86479950]
[40.40441513 -101.10626984]
[38.62195206 -115.99998474]
[36.83948517 -130.89370728]
[35.05701828 -145.78741455]
[33.27455139 -160.68113708]
[23.95218658 -173.46409607]
[30.12226868 -187.02061462]
[28.33980179 -201.91433716]
[26.55733681 -216.80805969]
[11.59410858 -218.64251709]
[-2.49505210 -224.00524902]
[-14.89101887 -232.58450317]
[-24.87310600 -243.88145447]
[-31.86097145 -257.23934937]
[-35.44834518 -271.88156128]
[-35.42666245 -286.95678711]
[-31.79718971 -301.58862305]
[-24.77093315 -314.92636108]
[-14.75639248 -326.19454956]
[-2.33580089 -334.73812866]
[11.76872635 -340.06030273]
[26.73716927 -341.85171509]
[41.69928360 -340.00817871]
[55.78519058 -334.63690186]
[68.17594910 -326.05014038]
[78.15119171 -314.74713135]
[85.13095093 -301.38500977]
[88.70944977 -286.74063110]
[88.67862701 -271.66540527]
[85.04028320 -257.03579712]
[78.00594330 -243.70231628]
[67.98457336 -232.44018555]
[55.55880356 -223.90415955]
[41.45105362 -218.59051514]
[43.23352051 -203.69680786]
[45.01598740 -188.80308533]
[54.21085739 -177.08541870]
[48.16827011 -162.46360779]
[49.95073700 -147.56988525]
[51.73320389 -132.67616272]
[53.51566696 -117.78244781]
[55.29813385 -102.88873291]
[57.30214691 -88.02320862]
[60.40625763 -73.34790039]
[64.37835693 -58.88337708]
[68.35044861 -44.41885376]
[72.32254791 -29.95433044]
[77.12506866 -24.33671951]
[76.24438477 -15.24484253]
[80.00068665 -0.72278297]
[83.75698853 13.79927635]
[87.72908783 28.26379967]
[91.91609955 42.66758347]
[96.80172729 48.21306992]
[96.05650330 57.31705093]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[118.40802002 138.71084595]
[134.31591797 144.45845032]
[143.57150269 158.41679382]
[142.69226074 174.97543335]
[132.22250366 187.61907959]
[143.50436401 198.71098328]
[139.62722778 213.09211731]
[143.81423950 227.49589539]
[148.00123596 241.89967346]
[152.18824768 256.30346680]
[154.89756775 241.55017090]
[161.28494263 227.97808838]
[170.92674255 216.48741150]
[183.18344116 207.84025574]
[197.24211121 202.61016846]
[212.17028809 201.14405823]
[226.97784424 203.53913879]
[240.68263245 209.63656616]
[252.37568665 219.03192139]
[261.28143311 231.10203552]
[266.80917358 245.04635620]
[268.59228516 259.94000244]
[266.51251221 274.79510498]
[260.70779419 288.62643433]
[251.56312561 300.51654053]
[239.68504333 309.67684937]
[225.86138916 315.49978638]
[211.00901794 317.59909058]
[196.11303711 315.83557129]
[182.16146851 310.32617188]
[170.07963562 301.43630981]
[160.66889954 289.75564575]
[154.55197144 276.05398560]
[153.88218689 291.03900146]
[153.21240234 306.02404785]
[152.54261780 321.00909424]
[151.87283325 335.99414062]
[151.20304871 350.97915649]
[151.53802490 365.97543335]
[152.87626648 380.91561890]
[154.21449280 395.85580444]
[155.55273438 410.79598999]
[164.49037170 423.85083008]
[157.91938782 437.21765137]
[159.25762939 452.15783691]
[169.68980408 457.85925293]
[176.00976562 467.78695679]
[176.74504089 479.41250610]
[171.82841492 489.84045410]
[162.58596802 496.52951050]
[163.47879028 511.50292969]
[164.37161255 526.47631836]
[165.26441956 541.44976807]
[180.18283081 543.40875244]
[194.46081543 548.15588379]
[207.58224487 555.51965332]
[219.07278442 565.23376465]
[228.51704407 576.94708252]
[235.57363892 590.23620605]
[239.98747253 604.62072754]
[241.59898376 619.58068848]
[240.34992981 634.57519531]
[236.28543091 649.06231689]
[229.55245972 662.51831055]
[220.39437866 674.45672607]
[209.14225769 684.44604492]
[196.20283508 692.12512207]
[182.04389954 697.21636963]
[167.17726135 699.53576660]
[152.14035034 698.99945068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 193]
[15 192]
[16 191]
[17 190]
[20 185]
[21 184]
[23 182]
[24 181]
[25 180]
[26 179]
[36 178]
[37 177]
[38 176]
[39 175]
[40 174]
[41 173]
[42 150]
[43 149]
[44 148]
[45 147]
[47 145]
[52 141]
[53 140]
[54 139]
[56 137]
[57 136]
[58 135]
[59 133]
[60 132]
[63 131]
[64 130]
[65 129]
[66 127]
[67 126]
[68 125]
[69 124]
[78 123]
[81 122]
[82 121]
[83 120]
[84 119]
[85 118]
[87 116]
[88 115]
[89 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
