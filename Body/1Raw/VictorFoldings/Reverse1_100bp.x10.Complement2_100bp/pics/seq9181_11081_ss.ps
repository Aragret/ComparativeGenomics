%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[18.94783974 530.51556396]
[11.19629860 516.93438721]
[14.03891850 501.55737305]
[26.13350105 491.64498901]
[26.13350105 476.64498901]
[26.13350105 461.64498901]
[26.13350105 446.64498901]
[26.13350105 431.64498901]
[22.98999977 424.95617676]
[26.24682999 416.42208862]
[16.06690598 408.52279663]
[12.23826885 396.01586914]
[16.37294197 383.40176392]
[27.17437363 375.35543823]
[27.62097931 360.36209106]
[28.06758499 345.36874390]
[19.24458313 357.49945068]
[5.83588696 364.22308350]
[-9.16296482 364.03747559]
[-22.40119171 356.98416138]
[-30.92133904 344.63882446]
[-32.81998444 329.75949097]
[-27.67296410 315.67019653]
[-16.63013840 305.51852417]
[-2.15850210 301.57241821]
[12.50894547 304.71343994]
[24.09545898 314.23986816]
[30.01258469 328.02349854]
[32.89785767 313.30358887]
[35.78313065 298.58370972]
[38.66840363 283.86383057]
[41.44401169 269.12286377]
[44.10980988 254.36163330]
[46.77560425 239.60041809]
[44.87088013 232.45942688]
[49.59254074 224.63998413]
[52.47781372 209.92008972]
[41.79498291 220.44990540]
[27.46944809 224.89727783]
[12.70156956 222.26863098]
[0.79053009 213.15121460]
[-5.60271406 199.58189392]
[-5.04989529 184.59208679]
[2.32548428 171.53054810]
[14.87574673 163.31526184]
[29.79713058 161.78155518]
[43.75616074 167.27203369]
[53.63435745 178.56013489]
[57.22489929 193.12408447]
[62.47161865 179.07162476]
[67.71833801 165.01914978]
[72.96505737 150.96667480]
[78.21177673 136.91419983]
[83.45848846 122.86173248]
[88.70520782 108.80926514]
[86.58087921 94.98975372]
[97.24231720 85.94401550]
[102.48903656 71.89154816]
[101.61841583 67.63761139]
[102.09846497 63.72173691]
[103.65705872 60.52701950]
[105.92559052 58.30883026]
[108.48902893 57.17440414]
[108.16570282 50.57084656]
[110.82641602 45.54913330]
[114.95330811 43.14542770]
[121.43280792 29.61708260]
[127.91230011 16.08873558]
[134.39179993 2.56039071]
[140.87129211 -10.96795464]
[147.35078430 -24.49629974]
[143.80885315 -36.89861679]
[149.48414612 -48.03301239]
[160.84829712 -52.17818832]
[167.52850342 -65.60856628]
[161.80117798 -77.79923248]
[164.10704041 -90.87185669]
[173.38362122 -100.09287262]
[186.08621216 -102.25472260]
[192.96562195 -115.58415222]
[199.84503174 -128.91357422]
[206.72445679 -142.24301147]
[206.17800903 -158.05477905]
[218.89067078 -165.81605530]
[225.77008057 -179.14549255]
[232.45027161 -192.57586670]
[238.92976379 -206.10420227]
[226.04745483 -213.80943298]
[213.93104553 -222.67044067]
[202.68392944 -232.61161804]
[192.40205383 -243.54814148]
[183.17315674 -255.38671875]
[175.07595825 -268.02633667]
[168.17955017 -281.35916138]
[162.54277039 -295.27145386]
[158.21371460 -309.64447021]
[155.22932434 -324.35562134]
[153.61503601 -339.27938843]
[153.38465881 -354.28845215]
[154.54013062 -369.25473022]
[157.07160950 -384.05053711]
[160.95747375 -398.54968262]
[166.16459656 -412.62838745]
[172.64854431 -426.16659546]
[180.35398865 -439.04879761]
[189.21519470 -451.16503906]
[199.15655518 -462.41198730]
[210.09326172 -472.69369507]
[221.93199158 -481.92239380]
[234.57174683 -490.01937866]
[247.90467834 -496.91558838]
[261.81704712 -502.55212402]
[276.19015503 -506.88092041]
[290.90136719 -509.86508179]
[305.82513428 -511.47912598]
[320.83419800 -511.70925903]
[335.80047607 -510.55352783]
[350.59625244 -508.02182007]
[365.09530640 -504.13568115]
[379.17395020 -498.92834473]
[392.71203613 -492.44415283]
[405.59411621 -484.73849487]
[417.71020508 -475.87710571]
[428.95700073 -465.93554688]
[439.23849487 -454.99868774]
[448.46701050 -443.15979004]
[456.56378174 -430.51989746]
[463.45974731 -417.18685913]
[469.09606934 -403.27438354]
[473.42465210 -388.90121460]
[476.40853882 -374.18994141]
[478.02233887 -359.26614380]
[478.25222778 -344.25708008]
[477.09625244 -329.29083252]
[474.56427002 -314.49511719]
[470.67791748 -299.99609375]
[465.47033691 -285.91754150]
[458.98593140 -272.37954712]
[451.28005981 -259.49761963]
[442.41845703 -247.38166809]
[432.47671509 -236.13504028]
[421.53967285 -225.85371399]
[409.70062256 -216.62541199]
[397.06060791 -208.52883911]
[383.72744751 -201.63310242]
[369.81488037 -195.99702454]
[355.44165039 -191.66868591]
[340.73034668 -188.68502808]
[325.80648804 -187.07148743]
[310.79742432 -186.84185791]
[295.83120728 -187.99807739]
[281.03552246 -190.53028870]
[266.53659058 -194.41688538]
[252.45811462 -199.62471008]
[245.97862244 -186.09635925]
[246.69250488 -181.37414551]
[244.44747925 -176.15332031]
[239.09950256 -172.26606750]
[232.22009277 -158.93664551]
[233.25860596 -144.07829285]
[220.05387878 -135.36360168]
[213.17446899 -122.03417206]
[206.29505920 -108.70474243]
[199.41564941 -95.37531281]
[205.20912170 -79.58688354]
[197.64215088 -64.19026947]
[180.95887756 -58.92836761]
[174.27867126 -45.49799347]
[176.30891418 -28.06684113]
[160.87913513 -18.01680374]
[154.39964294 -4.48845911]
[147.92015076 9.03988647]
[141.44064331 22.56823158]
[134.96115112 36.09657669]
[128.48165894 49.62492371]
[122.20429230 63.24823761]
[116.54151154 77.13826752]
[111.29479218 91.19073486]
[113.41912079 105.01024628]
[102.75768280 114.05598450]
[97.51096344 128.10845947]
[92.26424408 142.16091919]
[87.01752472 156.21339417]
[81.77080536 170.26586914]
[76.52409363 184.31834412]
[71.27737427 198.37080383]
[67.19770813 212.80535889]
[64.31243134 227.52525330]
[61.53682327 242.26622009]
[58.87102509 257.02743530]
[56.20523071 271.78863525]
[57.75969696 280.78985596]
[53.38829422 286.74908447]
[50.50302124 301.46899414]
[47.61774826 316.18887329]
[44.73247528 330.90875244]
[43.06093597 345.81533813]
[42.61433029 360.80868530]
[42.16772461 375.80203247]
[54.39479828 388.31274414]
[53.80237961 405.45812988]
[41.24516678 416.64541626]
[41.13349915 431.64498901]
[41.13349915 446.64498901]
[41.13349915 461.64498901]
[41.13349915 476.64498901]
[41.13349915 491.64498901]
[53.22808456 501.55737305]
[56.07070160 516.93438721]
[48.31916046 530.51556396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 207]
[5 206]
[6 205]
[7 204]
[8 203]
[10 202]
[14 199]
[15 198]
[16 197]
[28 196]
[29 195]
[30 194]
[31 193]
[32 191]
[33 190]
[34 189]
[36 188]
[37 187]
[49 186]
[50 185]
[51 184]
[52 183]
[53 182]
[54 181]
[55 180]
[57 178]
[58 177]
[63 176]
[66 175]
[67 174]
[68 173]
[69 172]
[70 171]
[71 170]
[74 168]
[75 167]
[79 164]
[80 163]
[81 162]
[82 161]
[84 159]
[85 158]
[86 155]
[87 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
