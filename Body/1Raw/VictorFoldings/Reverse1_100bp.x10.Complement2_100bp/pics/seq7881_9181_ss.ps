%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxCGGAGAUGGACGUGCUGUUGUGUAUUACUGGGUGGUUAGUGUACGGAUAGUAUAUCAUUUUGGGUCGGGUACUGGGGAUUGUCCCCGGGAGAGUCGGGAG\
) } def
/len { sequence length } bind def

/coor [
[112.65910339 506.69085693]
[117.12001038 492.26855469]
[125.30755615 479.58523560]
[136.61416626 469.58209229]
[150.20082092 463.00140381]
[147.53501892 448.24017334]
[144.86923218 433.47897339]
[142.20343018 418.71774292]
[139.53088379 416.41778564]
[137.83953857 412.70910645]
[137.77941895 408.06692505]
[139.76364136 403.23889160]
[137.75962830 388.37338257]
[135.75561523 373.50784302]
[133.75160217 358.64230347]
[131.74758911 343.77679443]
[129.74357605 328.91125488]
[127.73955536 314.04571533]
[125.73554230 299.18020630]
[116.36723328 287.60073853]
[122.19145203 272.89056396]
[120.18743896 258.02505493]
[118.18342590 243.15951538]
[116.17941284 228.29399109]
[114.17539978 213.42845154]
[111.95027924 198.59442139]
[109.50455475 183.79515076]
[106.21264648 180.33502197]
[105.05942535 174.77021790]
[107.21318054 168.51937866]
[105.20916748 153.65385437]
[102.32389069 138.93395996]
[98.56758881 124.41190338]
[94.81128693 109.88984680]
[90.94698334 95.39615631]
[86.97489166 80.93163300]
[83.00279236 66.46710968]
[79.03069305 52.00258255]
[66.63555145 46.73237991]
[59.64100266 35.45024109]
[60.41014862 22.39303780]
[68.43851471 12.31460476]
[64.68221283 -2.20745397]
[53.98493958 -9.41377735]
[51.15527344 -21.58656502]
[57.17891312 -32.07667160]
[53.63924026 -46.65304565]
[50.09956741 -61.22942352]
[46.55989456 -75.80580139]
[43.02022171 -90.38217163]
[39.48054886 -104.95854950]
[35.94087601 -119.53492737]
[22.72682953 -127.78275299]
[19.34474564 -142.61569214]
[27.28922462 -155.16244507]
[23.74955177 -169.73881531]
[20.20987892 -184.31518555]
[7.12342310 -186.14445496]
[-4.53434467 -192.29710388]
[-13.38598251 -202.02160645]
[-18.39396858 -214.14591980]
[-18.98228645 -227.21864319]
[-15.10259056 -239.68280029]
[-7.23738909 -250.06129456]
[3.65985823 -257.13192749]
[0.55574811 -271.80722046]
[-2.54836202 -286.48251343]
[-5.65247202 -301.15783691]
[-18.61509323 -309.79544067]
[-21.55404663 -324.72250366]
[-13.23952579 -337.02713013]
[-16.34363556 -351.70245361]
[-19.44774628 -366.37774658]
[-22.55185509 -381.05303955]
[-25.87411499 -395.68051147]
[-29.41378784 -410.25689697]
[-32.95346069 -424.83325195]
[-36.49313354 -439.40963745]
[-51.47499847 -438.18887329]
[-66.46337128 -439.32696533]
[-81.08914185 -442.79586792]
[-94.99214935 -448.51013184]
[-107.83000946 -456.32907104]
[-119.28659058 -466.06011963]
[-129.07974243 -477.46365356]
[-136.96832275 -490.25885010]
[-142.75807190 -504.13058472]
[-146.30638123 -518.73730469]
[-147.52589417 -533.71923828]
[-146.38656616 -548.70751953]
[-142.91647339 -563.33300781]
[-137.20104980 -577.23553467]
[-129.38105774 -590.07275391]
[-119.64906311 -601.52856445]
[-108.24472809 -611.32080078]
[-95.44889069 -619.20831299]
[-81.57666016 -624.99688721]
[-66.96965790 -628.54400635]
[-51.98759460 -629.76226807]
[-36.99941254 -628.62170410]
[-22.37421036 -625.15039062]
[-8.47214794 -619.43383789]
[4.36442518 -611.61279297]
[15.81939507 -601.87982178]
[25.61067390 -590.47473145]
[33.49714279 -577.67822266]
[39.28459167 -563.80554199]
[42.83049393 -549.19824219]
[44.04753494 -534.21606445]
[42.90574265 -519.22796631]
[39.43323135 -504.60305786]
[33.71551514 -490.70144653]
[25.89340210 -477.86553955]
[16.15951729 -466.41137695]
[4.75356340 -456.62103271]
[-8.04357529 -448.73559570]
[-21.91675758 -442.94931030]
[-18.37708473 -428.37292480]
[-14.83741283 -413.79656982]
[-11.29773998 -399.22018433]
[-7.75760365 -396.01449585]
[-6.19368029 -390.55087280]
[-7.87655354 -384.15716553]
[-4.77244329 -369.48184204]
[-1.66833329 -354.80654907]
[1.43577683 -340.13125610]
[14.02059364 -332.24722290]
[17.37765884 -317.40859985]
[9.02283001 -304.26193237]
[12.12694073 -289.58663940]
[15.23105049 -274.91134644]
[18.33516121 -260.23602295]
[34.85461807 -256.69097900]
[48.20632172 -246.24751282]
[55.67424393 -230.96865845]
[55.71244812 -213.90705872]
[48.26485062 -198.49522400]
[34.78625488 -187.85485840]
[38.32592773 -173.27848816]
[41.86560059 -158.70211792]
[54.67957306 -151.19627380]
[58.47695160 -136.46418762]
[50.51725388 -123.07460022]
[54.05692673 -108.49822235]
[57.59659958 -93.92184448]
[61.13626862 -79.34546661]
[64.67594147 -64.76909637]
[68.21561432 -50.19271851]
[71.75528717 -35.61634445]
[84.53498840 -23.58944702]
[79.20427704 -5.96375465]
[82.96057892 8.55830479]
[97.80310059 16.46640968]
[102.42472839 32.98777390]
[93.49521637 48.03048706]
[97.46731567 62.49501038]
[101.43941498 76.95953369]
[105.41150665 91.42405701]
[110.41312408 97.74516296]
[109.33335114 106.13354492]
[113.08965302 120.65560913]
[116.84594727 135.17765808]
[123.57888794 121.77365112]
[136.85128784 114.78484344]
[151.71287537 116.81789398]
[162.62063599 127.11452484]
[165.50625610 141.83435059]
[159.29347229 155.48722839]
[146.29948425 162.98098755]
[131.37074280 161.52062988]
[120.07469177 151.64984131]
[122.07870483 166.51536560]
[124.30382538 181.34941101]
[126.74954987 196.14868164]
[130.64251709 201.49250793]
[131.17274475 207.15075684]
[129.04092407 211.42443848]
[131.04493713 226.28997803]
[133.04895020 241.15550232]
[135.05296326 256.02102661]
[137.05697632 270.88656616]
[146.56863403 283.52929688]
[140.60107422 297.17617798]
[142.60508728 312.04171753]
[144.60910034 326.90725708]
[146.61311340 341.77276611]
[148.61712646 356.63830566]
[150.62113953 371.50381470]
[152.62515259 386.36935425]
[154.62916565 401.23489380]
[156.96464539 416.05194092]
[159.63044739 430.81317139]
[162.29624939 445.57440186]
[164.96203613 460.33560181]
[179.99224854 461.74822998]
[194.08354187 467.16467285]
[206.19027710 476.18295288]
[215.41404724 488.13388062]
[221.07038879 502.13061523]
[222.73954773 517.13452148]
[220.29768372 532.03216553]
[213.92597961 545.71807861]
[204.09727478 557.17663574]
[191.54092407 565.55755615]
[177.18867493 570.23901367]
[162.10556030 570.87347412]
[147.41087341 567.41387939]
[134.19503784 560.11700439]
[123.43875122 549.52435303]
[115.94021606 536.42187500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 194]
[6 193]
[7 192]
[8 191]
[12 190]
[13 189]
[14 188]
[15 187]
[16 186]
[17 185]
[18 184]
[19 183]
[21 181]
[22 180]
[23 179]
[24 178]
[25 177]
[26 174]
[27 173]
[30 172]
[31 171]
[32 162]
[33 161]
[34 160]
[35 158]
[36 157]
[37 156]
[38 155]
[42 152]
[43 151]
[46 149]
[47 148]
[48 147]
[49 146]
[50 145]
[51 144]
[52 143]
[55 140]
[56 139]
[57 138]
[65 132]
[66 131]
[67 130]
[68 129]
[71 126]
[72 125]
[73 124]
[74 123]
[75 120]
[76 119]
[77 118]
[78 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
