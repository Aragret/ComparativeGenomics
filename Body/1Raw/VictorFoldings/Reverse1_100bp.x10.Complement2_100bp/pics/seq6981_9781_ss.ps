%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[88.17651367 533.67156982]
[73.08605957 532.99707031]
[58.79735565 528.09716797]
[46.46871185 519.36895752]
[37.09956741 507.52008057]
[31.44942665 493.51104736]
[29.97632790 478.47753906]
[32.79968643 463.63821411]
[39.69062424 450.19607544]
[50.09052658 439.24075317]
[63.15631866 431.66040039]
[77.82881165 428.06951904]
[70.66753387 415.00942993]
[79.01332855 401.56851196]
[79.68311310 386.58349609]
[80.35289764 371.59844971]
[81.02268219 356.61340332]
[81.69246674 341.62835693]
[82.36225128 326.64334106]
[83.03203583 311.65829468]
[83.70182037 296.67324829]
[84.37160492 281.68820190]
[77.21032715 268.62814331]
[85.55612183 255.18722534]
[86.22590637 240.20219421]
[86.89569092 225.21714783]
[75.15296936 216.09320068]
[70.98517609 201.63313293]
[76.19203949 187.32432556]
[88.97370911 178.72578430]
[89.64349365 163.74073792]
[82.48221588 150.68067932]
[90.82801056 137.23976135]
[91.49779510 122.25471497]
[92.16757965 107.26967621]
[91.16332245 92.30333710]
[88.49752045 77.54211426]
[76.27986908 63.76494598]
[82.85351562 47.49367905]
[79.96824646 32.77378845]
[77.08296967 18.05389595]
[74.19770050 3.33400393]
[71.31242371 -11.38588715]
[68.42715454 -26.10577965]
[64.88748169 -40.68215561]
[60.70046997 -55.08593750]
[56.51345825 -69.48971558]
[52.32645035 -83.89350128]
[48.13943863 -98.29727936]
[43.95242691 -112.70106506]
[39.76541519 -127.10484314]
[35.36441803 -141.44468689]
[30.75040817 -155.71742249]
[26.03027344 -169.95541382]
[21.20427513 -184.15786743]
[16.37827873 -198.36032104]
[11.55228043 -212.56278992]
[6.72628307 -226.76524353]
[1.90028524 -240.96769714]
[-2.92571235 -255.17015076]
[-7.75170994 -269.37261963]
[-13.82554436 -283.08786011]
[-21.09877396 -296.20657349]
[-28.37200356 -309.32525635]
[-35.64523315 -322.44393921]
[-42.91846085 -335.56265259]
[-56.92694473 -330.13345337]
[-71.54424286 -326.66238403]
[-86.49804688 -325.21411133]
[-101.50977325 -325.81558228]
[-116.29976654 -328.45562744]
[-130.59249878 -333.08505249]
[-144.12170410 -339.61764526]
[-156.63533020 -347.93164062]
[-167.90026855 -357.87222290]
[-177.70666504 -369.25415039]
[-185.87182617 -381.86541748]
[-192.24363708 -395.47106934]
[-196.70338440 -409.81762695]
[-199.16801453 -424.63787842]
[-199.59158325 -439.65567017]
[-197.96621704 -454.59127808]
[-194.32220459 -469.16641235]
[-188.72740173 -483.10958862]
[-181.28605652 -496.16104126]
[-172.13679504 -508.07760620]
[-161.45005798 -518.63732910]
[-149.42494202 -527.64343262]
[-136.28546143 -534.92816162]
[-122.27639008 -540.35589600]
[-107.65871429 -543.82537842]
[-92.70475006 -545.27203369]
[-77.69309235 -544.66894531]
[-62.90338135 -542.02728271]
[-48.61115646 -537.39630127]
[-35.08266068 -530.86224365]
[-22.56992722 -522.54687500]
[-11.30606174 -512.60510254]
[-1.50090098 -501.22210693]
[6.66289043 -488.60995483]
[13.03322601 -475.00363159]
[17.49143028 -460.65655518]
[19.95444870 -445.83605957]
[20.37639999 -430.81820679]
[18.74941826 -415.88278198]
[15.10381794 -401.30804443]
[9.50751114 -387.36547852]
[2.06475568 -374.31484985]
[-7.08579540 -362.39926147]
[-17.77367210 -351.84069824]
[-29.79976845 -342.83587646]
[-22.52653885 -329.71719360]
[-15.25330925 -316.59848022]
[-7.98007965 -303.47979736]
[-0.70684999 -290.36111450]
[0.29010975 -305.32794189]
[7.60675716 -318.42245483]
[19.83036232 -327.11633301]
[34.60073853 -329.73089600]
[49.06595612 -325.76135254]
[60.43301392 -315.97412109]
[66.50710297 -302.25894165]
[66.11541748 -287.26406860]
[59.33358383 -273.88473511]
[47.47106552 -264.70428467]
[32.81833649 -261.49530029]
[18.20460129 -264.87744141]
[6.45074558 -274.19860840]
[11.27674294 -259.99615479]
[16.10274124 -245.79368591]
[20.92873764 -231.59123230]
[25.75473595 -217.38877869]
[30.58073425 -203.18632507]
[35.40673065 -188.98387146]
[40.23273087 -174.78141785]
[45.36110306 -169.45960999]
[45.02313995 -160.33143616]
[49.63714981 -146.05870056]
[53.40591049 -143.12518311]
[55.37186813 -137.79301453]
[54.16919708 -131.29185486]
[58.35620880 -116.88807678]
[62.54322052 -102.48429108]
[66.73023224 -88.08051300]
[70.91724396 -73.67672729]
[75.10425568 -59.27294922]
[79.29126740 -44.86916351]
[87.44596863 -57.45887375]
[102.08503723 -60.72961044]
[114.82254028 -52.80774689]
[118.36186981 -38.23128510]
[110.67552185 -25.35028648]
[96.16659546 -21.54357338]
[83.14704895 -28.99105072]
[86.03231812 -14.27116013]
[88.91759491 0.44873133]
[91.80286407 15.16862297]
[94.68813324 29.88851357]
[97.57341003 44.60840607]
[107.43421936 51.61490631]
[109.95845032 63.85467529]
[103.25874329 74.87631989]
[105.92453766 89.63753510]
[110.91284180 75.49127197]
[120.61907196 64.05496216]
[133.76618958 56.83325577]
[148.62449646 54.77628326]
[163.23908997 58.15467834]
[175.68717957 66.52395630]
[184.33102417 78.78299713]
[188.03335571 93.31890869]
[186.30708313 108.21924591]
[179.37931824 121.52360535]
[168.16152954 131.48158264]
[154.12960815 136.78302002]
[139.12969971 136.73043823]
[125.13529968 131.33073425]
[113.98760986 121.29435730]
[107.15261841 107.93946075]
[106.48283386 122.92449951]
[105.81304932 137.90954590]
[112.92642212 152.04144287]
[104.62853241 164.41052246]
[103.95874786 179.39556885]
[115.92232513 189.10015869]
[119.83186340 203.81643677]
[114.39062500 217.84700012]
[101.88072968 225.88693237]
[101.21094513 240.87197876]
[100.54116058 255.85700989]
[107.65453339 269.98892212]
[99.35664368 282.35800171]
[98.68685913 297.34304810]
[98.01707458 312.32806396]
[97.34729004 327.31311035]
[96.67750549 342.29815674]
[96.00772095 357.28320312]
[95.33793640 372.26821899]
[94.66815186 387.25326538]
[93.99836731 402.23831177]
[101.11174011 416.37020874]
[92.81385040 428.73928833]
[107.10747528 433.62487793]
[119.44487762 442.34069824]
[128.82592773 454.18014526]
[134.49012756 468.18347168]
[135.97833252 483.21551514]
[133.16989136 498.05764771]
[126.29245758 511.50671387]
[115.90356445 522.47247314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 202]
[14 200]
[15 199]
[16 198]
[17 197]
[18 196]
[19 195]
[20 194]
[21 193]
[22 192]
[24 190]
[25 189]
[26 188]
[30 184]
[31 183]
[33 181]
[34 180]
[35 179]
[36 163]
[37 162]
[39 159]
[40 158]
[41 157]
[42 156]
[43 155]
[44 154]
[45 147]
[46 146]
[47 145]
[48 144]
[49 143]
[50 142]
[51 141]
[52 138]
[53 137]
[54 135]
[55 134]
[56 133]
[57 132]
[58 131]
[59 130]
[60 129]
[61 128]
[62 115]
[63 114]
[64 113]
[65 112]
[66 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
