%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[93.19624329 437.70367432]
[84.85032654 450.18215942]
[75.32147980 461.78247070]
[64.70146942 472.39297485]
[53.09257889 481.91137695]
[40.60660934 490.24609375]
[27.36380959 497.31680298]
[13.49171829 503.05545044]
[-0.87606424 507.40670776]
[-15.60116577 510.32873535]
[-30.54177094 511.79333496]
[-45.55398941 511.78646851]
[-60.49324417 510.30813599]
[-75.21566010 507.37258911]
[-89.57943726 503.00811768]
[-103.44625854 497.25677490]
[-116.68255615 490.17388916]
[-129.16087341 481.82772827]
[-140.76101685 472.29864502]
[-151.37129211 461.67843628]
[-160.88948059 450.06933594]
[-169.22393799 437.58319092]
[-176.29438782 424.34027100]
[-182.03274536 410.46804810]
[-186.38372803 396.10018921]
[-189.30545044 381.37503052]
[-190.76977539 366.43438721]
[-190.76257324 351.42218018]
[-189.28395081 336.48294067]
[-186.34811401 321.76058960]
[-181.98336792 307.39691162]
[-176.23171997 293.53021240]
[-169.14859009 280.29403687]
[-160.80216980 267.81588745]
[-151.27285767 256.21594238]
[-140.65243530 245.60588074]
[-129.04315186 236.08792114]
[-116.55685425 227.75370789]
[-103.31376648 220.68353271]
[-89.44145203 214.94544983]
[-75.07349396 210.59474182]
[-60.34827423 207.67332458]
[-45.40760803 206.20930481]
[-30.39538956 206.21679688]
[-15.45619488 207.69572449]
[-0.73389971 210.63185120]
[13.62970734 214.99688721]
[27.49629402 220.74880981]
[34.57339859 207.52326965]
[41.65050507 194.29774475]
[40.83332825 179.42558289]
[54.16633987 170.90844727]
[61.24344635 157.68292236]
[68.32054901 144.45739746]
[75.29900360 131.17955017]
[82.17841339 117.85012054]
[89.05783081 104.52069092]
[76.36125946 112.50800323]
[61.58765411 115.10427856]
[46.92859268 111.92436218]
[34.55865479 103.43998718]
[26.31284714 90.90975952]
[23.41438866 76.19245148]
[26.29324913 61.47130966]
[34.52236557 48.93011093]
[46.88099670 40.42927170]
[61.53581238 37.22984314]
[76.31285858 39.80644226]
[89.02005005 47.77684021]
[97.77235413 59.95868301]
[101.27140808 74.54486084]
[98.99880219 89.36980438]
[108.48770142 77.75254059]
[117.97660065 66.13527679]
[127.46549988 54.51801682]
[136.95439148 42.90075302]
[122.30220032 46.11218262]
[108.20307159 40.99217606]
[99.02577209 29.12722206]
[97.61398315 14.19380856]
[104.40516663 0.81921393]
[117.29500580 -6.85229731]
[132.28944397 -6.44362402]
[144.74227905 1.91860223]
[150.79487610 15.64325428]
[148.57165527 30.47783279]
[159.52757263 20.23244095]
[164.32235718 5.15528631]
[178.90304565 2.11350489]
[189.85896301 -8.13188648]
[200.81486511 -18.37727928]
[191.40205383 -30.06513977]
[182.87812805 -42.41624832]
[175.28964233 -55.36314011]
[168.67803955 -68.83511353]
[163.07943726 -82.75858307]
[158.52442932 -97.05749512]
[155.03785706 -111.65376282]
[152.63879395 -126.46766663]
[151.34033203 -141.41828918]
[151.14956665 -156.42398071]
[152.06752014 -171.40278625]
[154.08921814 -186.27290344]
[157.20358276 -200.95307922]
[161.39361572 -215.36317444]
[166.63644409 -229.42446899]
[172.90341187 -243.06018066]
[180.16030884 -256.19580078]
[188.36749268 -268.75961304]
[197.48013306 -280.68298340]
[207.44845581 -291.90081787]
[218.21804810 -302.35180664]
[229.73005676 -311.97891235]
[241.92161560 -320.72952271]
[254.72613525 -328.55584717]
[268.07369995 -335.41513062]
[281.89135742 -341.26995850]
[296.10369873 -346.08831787]
[310.63308716 -349.84387207]
[325.40014648 -352.51614380]
[340.32424927 -354.09054565]
[355.32385254 -354.55844116]
[370.31707764 -353.91729736]
[385.22198486 -352.17062378]
[399.95718384 -349.32794189]
[414.44219971 -345.40478516]
[428.59793091 -340.42257690]
[442.34707642 -334.40850830]
[455.61450195 -327.39547729]
[468.32775879 -319.42175293]
[480.41741943 -310.53091431]
[491.81744385 -300.77148438]
[502.46557617 -290.19674683]
[512.30364990 -278.86453247]
[521.27795410 -266.83666992]
[529.33947754 -254.17889404]
[536.44415283 -240.96031189]
[542.55316162 -227.25312805]
[547.63317871 -213.13221741]
[551.65649414 -198.67468262]
[554.60107422 -183.95948792]
[556.45086670 -169.06703186]
[557.19573975 -154.07861328]
[556.83160400 -139.07612610]
[555.36053467 -124.14150238]
[552.79046631 -109.35630035]
[549.13555908 -94.80127716]
[544.41564941 -80.55593872]
[538.65661621 -66.69807434]
[531.88983154 -53.30337524]
[524.15228271 -40.44500732]
[515.48620605 -28.19318962]
[505.93902588 -16.61484528]
[495.56280518 -5.77320671]
[484.41421509 4.27250910]
[472.55416870 13.46743679]
[460.04745483 21.76135445]
[446.96234131 29.10896683]
[433.37033081 35.47013855]
[419.34567261 40.81013107]
[404.96490479 45.09977722]
[390.30661011 48.31564713]
[375.45086670 50.44017410]
[360.47875977 51.46176147]
[345.47210693 51.37482834]
[330.51284790 50.17984390]
[315.68270874 47.88333893]
[301.06265259 44.49785614]
[286.73257446 40.04188538]
[272.77069092 34.53976440]
[259.25329590 28.02154160]
[246.25421143 20.52282143]
[233.84442139 12.08455849]
[222.09170532 2.75283885]
[211.06025696 -7.42136908]
[200.10435486 2.82402253]
[189.14843750 13.06941414]
[185.13729858 27.41375160]
[169.77296448 31.18835068]
[158.81704712 41.43374252]
[148.57165527 52.38965225]
[139.08276367 64.00691223]
[129.59385681 75.62417603]
[120.10496521 87.24143982]
[110.61606598 98.85870361]
[102.38726044 111.40010834]
[95.50784302 124.72953796]
[88.62843323 138.05895996]
[87.47353363 147.12008667]
[81.54608154 151.53450012]
[74.46897125 164.76002502]
[67.39186859 177.98556519]
[67.70284271 193.80371094]
[54.87603378 201.37484741]
[47.79892731 214.60038757]
[40.72182083 227.82591248]
[53.20046997 236.17156982]
[64.80099487 245.70019531]
[75.41168976 256.31997681]
[84.93034363 267.92868042]
[93.26529694 280.41448975]
[100.33628082 293.65716553]
[106.07518768 307.52914429]
[110.42675781 321.89682007]
[113.34906769 336.62185669]
[114.81398010 351.56243896]
[114.80738831 366.57467651]
[113.32935333 381.51394653]
[110.39411926 396.23641968]
[106.02993774 410.60028076]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 196]
[49 195]
[50 194]
[52 192]
[53 191]
[54 190]
[55 188]
[56 187]
[57 186]
[72 185]
[73 184]
[74 183]
[75 182]
[76 181]
[86 180]
[87 179]
[89 177]
[90 176]
[91 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
