%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxGUUUGGAUGGGUGGGAAUUGUCAUGUAUCAUGUAUUUCGGUAAAUGGCAUGUAUCGUGUAAUGUCAGUUUAGGGAAGAGCAGGGGUACCUACUGGGGGGA\
) } def
/len { sequence length } bind def

/coor [
[51.37458420 465.49603271]
[59.04054642 478.45932007]
[63.74012756 492.76763916]
[65.25351715 507.75177002]
[63.50993729 522.71081543]
[58.59093094 536.94519043]
[50.72657394 549.78912354]
[40.28469467 560.64184570]
[27.75367546 568.99572754]
[13.71962166 574.46008301]
[-1.16107357 576.77935791]
[-16.19241142 575.84503174]
[-30.67134857 571.70086670]
[-43.92068100 564.54058838]
[-55.32071304 554.69915771]
[-64.33824158 542.63690186]
[-70.55149841 528.91796875]
[-73.66989136 514.18402100]
[-73.54755402 499.12414551]
[-70.19020844 484.44277954]
[-63.75489426 470.82659912]
[-54.54259109 458.91241455]
[-42.98418427 449.25750732]
[-29.62027740 442.31344604]
[-15.07592487 438.40499878]
[-0.03139155 437.71499634]
[14.80966091 440.27572632]
[20.47244835 426.38568115]
[26.13523483 412.49566650]
[31.79802132 398.60562134]
[36.41202927 384.33288574]
[39.95170212 369.75653076]
[43.49137497 355.18014526]
[47.03104782 340.60375977]
[50.57072067 326.02740479]
[54.11039352 311.45101929]
[57.10516739 296.75302124]
[59.55089569 281.95373535]
[53.99229813 268.13522339]
[63.87615585 255.78129578]
[66.32188416 240.98202515]
[59.53470993 230.96899414]
[61.45116806 218.61946106]
[71.58283234 210.63746643]
[74.24862671 195.87625122]
[76.91442108 181.11503601]
[79.58021545 166.35380554]
[82.24601746 151.59259033]
[80.34128571 144.45159912]
[85.06295013 136.63215637]
[87.94822693 121.91226196]
[90.83349609 107.19237518]
[80.43139648 117.99960327]
[66.40071869 123.30433655]
[51.45058060 122.08232117]
[38.46761322 114.56949615]
[29.95862389 102.21647644]
[27.56656456 87.40843201]
[31.75330734 73.00457764]
[41.71045685 61.78605270]
[55.51544189 55.91899490]
[70.50273895 56.53623199]
[83.77852631 63.51858902]
[92.77947235 75.51787567]
[95.76760101 90.21850586]
[101.22296143 76.24570465]
[106.67831421 62.27291107]
[92.97601318 68.37593842]
[78.52235413 64.36449432]
[69.92534637 52.07256699]
[71.11544037 37.11985016]
[81.54853058 26.34253120]
[96.45475006 24.66785240]
[109.01918030 32.86145401]
[113.49745178 47.17918396]
[120.37686157 33.84975433]
[127.25627899 20.52032661]
[134.13569641 7.19089699]
[141.01510620 -6.13853216]
[147.89451599 -19.46796227]
[154.77392578 -32.79738998]
[161.65333557 -46.12681961]
[168.23336792 -59.60655594]
[174.51072693 -73.22987366]
[180.78808594 -86.85318756]
[186.55412292 -100.70066833]
[191.80084229 -114.75314331]
[197.04756165 -128.80561829]
[200.69564819 -143.35523987]
[202.69966125 -158.22076416]
[204.70367432 -173.08628845]
[197.31625366 -189.95364380]
[208.57623291 -203.41395569]
[210.35870361 -218.30766296]
[212.14115906 -233.20138550]
[213.92362976 -248.09509277]
[215.15060425 -263.04483032]
[215.82038879 -278.02987671]
[216.49017334 -293.01492310]
[217.15995789 -307.99993896]
[203.51930237 -314.77136230]
[193.81712341 -326.50967407]
[189.73439026 -341.18112183]
[191.97846985 -356.24377441]
[200.16055298 -369.08798218]
[212.86303711 -377.48837280]
[227.88516235 -379.98953247]
[242.62423706 -376.15814209]
[254.52662659 -366.65798950]
[261.53018188 -353.13504028]
[262.42147827 -337.93222046]
[257.04611206 -323.68353271]
[246.33538818 -312.85763550]
[232.14500427 -307.33016968]
[231.47521973 -292.34512329]
[230.80543518 -277.36007690]
[230.13565063 -262.37506104]
[242.79800415 -270.41647339]
[257.02893066 -265.67504883]
[262.33789062 -251.64596558]
[254.81132507 -238.67095947]
[239.99754333 -236.31471252]
[228.81735229 -246.31263733]
[227.03488159 -231.41891479]
[225.25241089 -216.52519226]
[223.46995544 -201.63148499]
[230.69746399 -191.93150330]
[229.33435059 -179.50871277]
[219.56919861 -171.08227539]
[217.56518555 -156.21675110]
[215.56117249 -141.35122681]
[224.65902710 -153.27720642]
[237.41246033 -161.17338562]
[252.14356995 -164.00090027]
[266.91418457 -161.38771057]
[279.78100586 -153.67765808]
[289.05117798 -141.88511658]
[293.50503540 -127.56159973]
[292.55661011 -112.59161377]
[286.33068848 -98.94471741]
[275.64636230 -88.41639709]
[261.90939331 -82.39183044]
[246.92707825 -81.66365051]
[232.67060852 -86.32766724]
[221.01567078 -95.77024841]
[213.49566650 -108.74906158]
[211.10003662 -123.55889893]
[205.85331726 -109.50642395]
[200.60659790 -95.45395660]
[215.12858582 -99.21054077]
[227.21104431 -90.32156372]
[227.94725037 -75.33963776]
[216.79449463 -65.30889130]
[201.97416687 -67.62361145]
[194.41140747 -80.57582855]
[188.13404846 -66.95250702]
[181.85668945 -53.32919312]
[182.72813416 -49.91262817]
[181.98802185 -45.90422440]
[179.37623596 -42.06601715]
[174.98277283 -39.24740601]
[168.10336304 -25.91797829]
[161.22393799 -12.58854866]
[154.34452820 0.74088025]
[147.46511841 14.07030964]
[140.58570862 27.39973831]
[133.70629883 40.72916794]
[126.82688141 54.05859756]
[120.65111542 67.72826385]
[115.19575500 81.70106506]
[109.74040222 95.67386627]
[105.55339050 110.07764435]
[102.66811371 124.79753876]
[99.78284454 139.51742554]
[97.00723267 154.25839233]
[94.34143829 169.01960754]
[91.67564392 183.78082275]
[89.00984192 198.54203796]
[86.34404755 213.30325317]
[92.97093201 230.48365784]
[81.12115479 243.42774963]
[78.67542267 258.22702026]
[84.05908966 273.10406494]
[74.35016632 284.39947510]
[71.90443420 299.19873047]
[85.43265533 292.71899414]
[98.99930573 299.11788940]
[102.60355377 313.67843628]
[93.58849335 325.66711426]
[78.59967804 326.24633789]
[68.68676758 314.99069214]
[65.14709473 329.56707764]
[61.60742188 344.14343262]
[58.06774902 358.71981812]
[54.52807617 373.29620361]
[50.98840714 387.87255859]
[62.44589233 378.19134521]
[77.19116211 375.43869019]
[91.36982727 380.33413696]
[101.27562714 391.59802246]
[104.31920624 406.28601074]
[99.70497894 420.55865479]
[88.63909912 430.68518066]
[74.01415253 434.01849365]
[59.65307236 429.68728638]
[49.30980682 418.82373047]
[45.68804932 404.26843262]
[40.02526093 418.15844727]
[34.36247635 432.04846191]
[28.69968796 445.93850708]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 210]
[28 209]
[29 208]
[30 207]
[31 196]
[32 195]
[33 194]
[34 193]
[35 192]
[36 191]
[37 185]
[38 184]
[40 182]
[41 181]
[44 179]
[45 178]
[46 177]
[47 176]
[48 175]
[50 174]
[51 173]
[52 172]
[65 171]
[66 170]
[67 169]
[75 168]
[76 167]
[77 166]
[78 165]
[79 164]
[80 163]
[81 162]
[82 161]
[83 157]
[84 156]
[85 155]
[86 149]
[87 148]
[88 147]
[89 131]
[90 130]
[91 129]
[93 126]
[94 125]
[95 124]
[96 123]
[97 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
