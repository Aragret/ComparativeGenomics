%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCUUAUUACUACAUACGAAACAAAGACAACUCACACCCAAAUCAUUACCCCAAACACCCCAAAAGAAGAUUCGGAAGAGGAUAAAUACCCCCAAAUCAxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[27.47939491 369.43872070]
[35.34847641 382.26696777]
[40.56340790 396.38400269]
[42.92373657 411.24722290]
[42.33873749 426.28530884]
[38.83090210 440.92025757]
[32.53505325 454.58950806]
[23.69319344 466.76766968]
[12.64517879 476.98666382]
[-0.18433493 484.85366821]
[-14.30221558 490.06631470]
[-29.16580963 492.42422485]
[-44.20380020 491.83679199]
[-58.83816528 488.32659912]
[-72.50640106 482.02853394]
[-84.68313599 473.18469238]
[-94.90032959 462.13504028]
[-102.76526642 449.30422974]
[-107.97562408 435.18551636]
[-110.33113861 420.32153320]
[-109.74127197 405.28363037]
[-106.22869873 390.64984131]
[-99.92842865 376.98263550]
[-91.08262634 364.80731201]
[-80.03130341 354.59191895]
[-67.19924164 346.72906494]
[-53.07967377 341.52099609]
[-38.21531677 339.16787720]
[-23.17751884 339.76019287]
[-8.54428959 343.27511597]
[-2.26692915 329.65182495]
[4.01043177 316.02850342]
[10.28779221 302.40518188]
[16.46356010 288.73550415]
[22.53739548 275.02023315]
[28.61122894 261.30496216]
[34.37726212 247.45748901]
[39.83261871 233.48469543]
[45.28797531 219.51188660]
[50.74333191 205.53909302]
[56.19868851 191.56629944]
[61.65404892 177.59350586]
[67.10940552 163.62069702]
[54.60217667 155.39334106]
[44.07853317 144.74566650]
[35.99828720 132.14289856]
[30.71449280 118.13569641]
[28.45801544 103.33609009]
[29.32744980 88.39071655]
[33.28480530 73.95259094]
[40.15717316 60.65256119]
[49.64427567 49.07175827]
[61.33158875 39.71618271]
[74.70845795 32.99460602]
[89.19039154 29.20072556]
[104.14464569 28.50030136]
[118.91780090 30.92394066]
[124.37315369 16.95114326]
[129.82850647 2.97834587]
[135.28387451 -10.99445152]
[121.97869110 -4.06824636]
[107.12685394 -6.17128563]
[96.26770782 -16.51918793]
[93.45146179 -31.25244141]
[99.72850037 -44.87590790]
[112.75764465 -52.30836868]
[127.67933655 -50.77770233]
[138.92817688 -40.85480881]
[142.30850220 -26.23951721]
[149.38560486 -39.46504593]
[150.67527771 -48.50797272]
[156.66780090 -52.83364487]
[163.94104004 -65.95233917]
[171.21426392 -79.07102966]
[157.10302734 -73.98450470]
[142.66528320 -78.05290985]
[133.28598022 -89.75883484]
[132.46336365 -104.73625946]
[140.50424194 -117.39897919]
[154.40956116 -123.02410126]
[168.99298096 -119.51360321]
[178.81526184 -108.17681122]
[180.21267700 -93.24092865]
[188.99327087 -105.40238953]
[197.77388000 -117.56384277]
[206.55448914 -129.72529602]
[215.33508301 -141.88674927]
[224.11569214 -154.04820251]
[232.89630127 -166.20967102]
[241.67689514 -178.37112427]
[250.45750427 -190.53257751]
[239.10003662 -200.34570312]
[228.64108276 -211.11135864]
[219.16020203 -222.74761963]
[210.72959900 -235.16592407]
[203.41340637 -248.27174377]
[197.26730347 -261.96536255]
[192.33808899 -276.14251709]
[188.66325378 -290.69534302]
[186.27078247 -305.51309204]
[185.17887878 -320.48297119]
[185.39584351 -335.49105835]
[186.92004395 -350.42309570]
[189.73986816 -365.16549683]
[193.83386230 -379.60601807]
[199.17085266 -393.63476562]
[205.71023560 -407.14495850]
[213.40223694 -420.03381348]
[222.18830872 -432.20321655]
[232.00160217 -443.56054688]
[242.76739502 -454.01934814]
[254.40379333 -463.50006104]
[266.82220459 -471.93048096]
[279.92813110 -479.24649048]
[293.62182617 -485.39239502]
[307.79907227 -490.32144165]
[322.35195923 -493.99606323]
[337.16973877 -496.38833618]
[352.13961792 -497.48001099]
[367.14770508 -497.26284790]
[382.07971191 -495.73843384]
[396.82208252 -492.91839600]
[411.26254272 -488.82421875]
[425.29119873 -483.48703003]
[438.80133057 -476.94744873]
[451.69006348 -469.25527954]
[463.85934448 -460.46902466]
[475.21652222 -450.65557861]
[485.67520142 -439.88961792]
[495.15573120 -428.25308228]
[503.58599854 -415.83456421]
[510.90182495 -402.72851562]
[517.04754639 -389.03475952]
[521.97637939 -374.85745239]
[525.65075684 -360.30450439]
[528.04284668 -345.48669434]
[529.13433838 -330.51678467]
[528.91693115 -315.50872803]
[527.39233398 -300.57672119]
[524.57208252 -285.83441162]
[520.47766113 -271.39401245]
[515.14031982 -257.36538696]
[508.60052490 -243.85537720]
[500.90817261 -230.96673584]
[492.12176514 -218.79759216]
[482.30816650 -207.44053650]
[471.54205322 -196.98202515]
[459.90539551 -187.50164795]
[447.48675537 -179.07156372]
[434.38061523 -171.75592041]
[420.68673706 -165.61039734]
[406.50936890 -160.68177795]
[391.95639038 -157.00755310]
[377.13854980 -154.61570740]
[362.16860962 -153.52442932]
[347.16055298 -153.74203491]
[332.22857666 -155.26686096]
[317.48629761 -158.08729553]
[303.04595947 -162.18190002]
[289.01742554 -167.51948547]
[275.50747681 -174.05943298]
[262.61895752 -181.75196838]
[253.83834839 -169.59051514]
[245.05775452 -157.42906189]
[236.27714539 -145.26760864]
[227.49655151 -133.10615540]
[218.71594238 -120.94469452]
[209.93533325 -108.78324127]
[201.15473938 -96.62178040]
[192.37413025 -84.46032715]
[184.33296204 -71.79780579]
[177.05972290 -58.67910767]
[169.78649902 -45.56041336]
[162.61112976 -32.38793945]
[155.53402710 -19.16241074]
[149.25666809 -5.53909492]
[143.80131531 8.43370247]
[138.34594727 22.40649986]
[132.89059448 36.37929916]
[145.39782715 44.60665512]
[155.92146301 55.25433350]
[164.00170898 67.85710144]
[169.28550720 81.86430359]
[171.54197693 96.66390991]
[170.67254639 111.60928345]
[166.71519470 126.04740906]
[159.84283447 139.34744263]
[150.35572815 150.92823792]
[138.66841125 160.28381348]
[125.29154205 167.00538635]
[110.80960846 170.79927063]
[95.85535431 171.49969482]
[81.08219910 169.07606506]
[75.62684631 183.04885864]
[70.17148590 197.02165222]
[64.71613312 210.99444580]
[59.26077271 224.96725464]
[53.80541611 238.94004822]
[48.35005951 252.91284180]
[49.13893127 258.07275391]
[47.98505402 262.56964111]
[45.46631241 265.77447510]
[42.32649612 267.37881470]
[36.25266266 281.09408569]
[30.17882729 294.80932617]
[29.56530762 303.92315674]
[23.91110802 308.68252563]
[17.63374710 322.30584717]
[11.35638714 335.92916870]
[5.07902622 349.55249023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 210]
[31 209]
[32 208]
[33 207]
[34 205]
[35 204]
[36 203]
[37 199]
[38 198]
[39 197]
[40 196]
[41 195]
[42 194]
[43 193]
[57 179]
[58 178]
[59 177]
[60 176]
[69 175]
[70 174]
[72 173]
[73 172]
[74 171]
[83 170]
[84 169]
[85 168]
[86 167]
[87 166]
[88 165]
[89 164]
[90 163]
[91 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
