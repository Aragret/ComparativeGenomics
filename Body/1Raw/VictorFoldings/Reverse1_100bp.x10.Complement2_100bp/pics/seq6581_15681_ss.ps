%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[204.57656860 508.60690308]
[215.40312195 498.15786743]
[228.01167297 489.94683838]
[222.34887695 476.05679321]
[216.68609619 462.16677856]
[211.02331543 448.27676392]
[199.05377197 439.41226196]
[201.00869751 423.71228027]
[195.34590149 409.82226562]
[189.68312073 395.93225098]
[184.02033997 382.04220581]
[172.99595642 377.06329346]
[168.16452026 365.53762817]
[172.61909485 353.43310547]
[167.16372681 339.46029663]
[161.70837402 325.48748779]
[156.25302124 311.51470947]
[150.79766846 297.54190063]
[148.28742981 296.29415894]
[146.12020874 293.97686768]
[144.70582581 290.71575928]
[144.40110779 286.78234863]
[145.46081543 282.57153320]
[140.84680176 268.29879761]
[136.23278809 254.02606201]
[131.61878967 239.75332642]
[120.34170532 230.02313232]
[123.45892334 214.51205444]
[118.84491730 200.23931885]
[114.23090363 185.96658325]
[111.79939270 184.57162476]
[109.77394104 182.12947083]
[108.55617523 178.78994751]
[108.48611450 174.84536743]
[109.79457092 170.70509338]
[106.03826904 156.18302917]
[102.28196716 141.66098022]
[98.52566528 127.13891602]
[94.76936340 112.61685944]
[91.68637085 127.29660797]
[85.83591461 141.10864258]
[77.43672180 153.53657532]
[66.80279541 164.11578369]
[54.33170319 172.45075989]
[40.48967743 178.22988892]
[25.79421616 181.23712158]
[10.79471970 181.36001587]
[-3.94804478 178.59399414]
[-17.88290977 173.04244995]
[-30.48890686 164.91294861]
[-41.29475403 154.50941467]
[-49.89646912 142.22077942]
[-55.97246552 128.50646973]
[-59.29559326 113.87921143]
[-59.74160767 98.88584137]
[-57.29384232 84.08690643]
[-52.04380035 70.03567505]
[-44.18776703 57.25746536]
[-34.01943970 46.22999573]
[-21.91897011 37.36553574]
[-8.33874321 30.99549103]
[6.21353292 27.35801125]
[21.19381142 26.58908653]
[36.04204559 28.71746254]
[50.20312119 33.66356659]
[63.14761353 41.24248886]
[74.39158630 51.17088318]
[83.51467896 63.07757187]
[90.17581177 76.51741028]
[94.12493134 90.98193359]
[97.01020050 76.26203918]
[99.89546967 61.54215240]
[102.78074646 46.82225800]
[101.00286865 40.45431900]
[102.48526764 34.96801758]
[105.97728729 31.70997047]
[109.29954529 17.08250999]
[112.62180328 2.45504975]
[106.76867676 -15.00411320]
[119.18462372 -27.40617752]
[122.28873444 -42.08148193]
[125.39284515 -56.75678253]
[128.38761902 -71.45478821]
[131.27288818 -86.17467499]
[134.15815735 -100.89456940]
[137.04344177 -115.61446381]
[128.49380493 -128.63526917]
[131.62956238 -143.52223206]
[144.09561157 -151.59275818]
[146.98088074 -166.31265259]
[149.86614990 -181.03254700]
[148.08827209 -187.40048218]
[149.57067871 -192.88677979]
[153.06269836 -196.14483643]
[156.38494873 -210.77229309]
[159.70721436 -225.39974976]
[163.02946472 -240.02720642]
[149.25085449 -246.07257080]
[136.86549377 -254.61651611]
[126.32107544 -265.35018921]
[117.99880981 -277.88558960]
[112.19952393 -291.76959229]
[109.13285828 -306.50024414]
[108.90968323 -321.54504395]
[111.53804779 -336.36019897]
[116.92295074 -350.41006470]
[124.86972809 -363.18682861]
[135.09111023 -374.22854614]
[147.21760559 -383.13610840]
[160.81083679 -389.58752441]
[175.37942505 -393.34954834]
[190.39671326 -394.28616333]
[205.31985474 -392.36358643]
[219.60937500 -387.65124512]
[232.74873352 -380.31954956]
[244.26292419 -370.63348389]
[253.73573303 -358.94320679]
[260.82470703 -345.67132568]
[265.27362061 -331.29760742]
[266.92160034 -316.34164429]
[265.70913696 -301.34411621]
[261.67999268 -286.84710693]
[254.97984314 -273.37475586]
[245.85090637 -261.41403198]
[234.62316895 -251.39730835]
[221.70252991 -243.68670654]
[207.55604553 -238.56092834]
[192.69511414 -236.20529175]
[177.65693665 -236.70495605]
[174.33467102 -222.07749939]
[171.01242065 -207.45002747]
[167.69015503 -192.82257080]
[164.58604431 -178.14726257]
[161.70077515 -163.42738342]
[158.81550598 -148.70748901]
[167.31230164 -136.52799988]
[164.59591675 -121.55883026]
[151.76332092 -112.72918701]
[148.87805176 -98.00930023]
[145.99278259 -83.28940582]
[143.10751343 -68.56951141]
[144.90570068 -61.40095139]
[140.06814575 -53.65267181]
[136.96403503 -38.97737122]
[133.85992432 -24.30206680]
[140.19322205 -13.99595737]
[137.72723389 -1.74431658]
[127.24926758 5.77730942]
[123.92700958 20.40476990]
[120.60474396 35.03223038]
[117.50064087 49.70753098]
[114.61536407 64.42742157]
[111.73009491 79.14731598]
[108.84481812 93.86720276]
[109.29142761 108.86055756]
[113.04772949 123.38261414]
[116.80402374 137.90467834]
[120.56032562 152.42672729]
[124.31662750 166.94879150]
[128.50364685 181.35256958]
[133.11764526 195.62530518]
[137.73165894 209.89804077]
[149.33876038 220.64912415]
[145.89151001 235.13931274]
[150.50552368 249.41204834]
[155.11953735 263.68478394]
[159.73355103 277.95751953]
[164.77046204 292.08654785]
[170.22581482 306.05935669]
[175.68116760 320.03213501]
[181.13653564 334.00494385]
[186.59188843 347.97775269]
[201.23144531 359.14755249]
[197.91035461 376.37942505]
[203.57315063 390.26943970]
[209.23593140 404.15948486]
[214.89872742 418.04949951]
[227.27330017 427.90750122]
[224.91334534 442.61395264]
[230.57612610 456.50399780]
[236.23890686 470.39401245]
[241.90170288 484.28405762]
[256.65716553 481.33911133]
[271.70330811 481.24017334]
[286.49624634 483.99078369]
[300.50119019 489.49154663]
[313.21188354 497.54354858]
[324.16882324 507.85574341]
[332.97595215 520.05535889]
[339.31491089 533.70141602]
[342.95648193 548.30059814]
[343.76910400 563.32507324]
[341.72332764 578.23187256]
[336.89318848 592.48199463]
[329.45321655 605.56036377]
[319.67239380 616.99414062]
[307.90429688 626.37011719]
[294.57434082 633.34924316]
[280.16436768 637.67932129]
[265.19531250 639.20373535]
[250.20831299 637.86749268]
[235.74508667 633.71875000]
[222.32850647 626.90759277]
[210.44357300 617.68023682]
[200.51991272 606.37017822]
[192.91624451 593.38629150]
[187.90747070 579.19793701]
[185.67462158 564.31805420]
[186.29844666 549.28454590]
[189.75636292 534.64080811]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 182]
[4 181]
[5 180]
[6 179]
[8 177]
[9 176]
[10 175]
[11 174]
[14 172]
[15 171]
[16 170]
[17 169]
[18 168]
[23 167]
[24 166]
[25 165]
[26 164]
[28 162]
[29 161]
[30 160]
[35 159]
[36 158]
[37 157]
[38 156]
[39 155]
[70 154]
[71 153]
[72 152]
[73 151]
[76 150]
[77 149]
[78 148]
[80 145]
[81 144]
[82 143]
[83 141]
[84 140]
[85 139]
[86 138]
[89 135]
[90 134]
[91 133]
[94 132]
[95 131]
[96 130]
[97 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
