%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[101.67337036 666.66748047]
[88.22270203 659.85992432]
[76.79249573 650.03070068]
[68.04729462 637.75122070]
[62.49553299 623.73547363]
[60.45998001 608.79827881]
[62.05898285 593.80804443]
[67.19957733 579.63635254]
[75.58289337 567.10705566]
[86.72153473 556.94860840]
[99.96792603 549.75158691]
[114.55192566 545.93450928]
[114.32859802 530.93615723]
[114.10527039 515.93780518]
[113.88194275 500.93948364]
[113.65861511 485.94113159]
[113.43528748 470.94281006]
[113.21195984 455.94445801]
[112.87698364 440.94821167]
[112.43037415 425.95486450]
[102.41616821 411.54367065]
[111.27896118 395.40264893]
[110.60917664 380.41760254]
[109.93939209 365.43255615]
[109.26960754 350.44750977]
[100.55725098 342.05578613]
[99.87660217 329.57696533]
[108.13715363 319.67111206]
[100.02434540 307.17984009]
[107.34732819 293.15542603]
[106.90072632 278.16207886]
[106.45411682 263.16873169]
[97.86766815 254.64820862]
[97.37288666 242.16064453]
[105.78000641 232.37887573]
[105.55667877 217.38053894]
[105.33335114 202.38220215]
[104.21770477 187.42375183]
[102.21369171 172.55821228]
[100.20967865 157.69268799]
[98.20566559 142.82716370]
[96.20164490 127.96163177]
[94.19763184 113.09610748]
[85.80446625 101.91368866]
[90.93683624 88.90790558]
[79.35691833 82.02895355]
[73.93238068 69.91347504]
[76.43907928 57.07608414]
[85.74196625 48.16060257]
[83.95949554 33.26688385]
[71.81917572 23.50725365]
[70.22367096 8.37751484]
[79.60280609 -3.13628006]
[70.28043365 -15.91923904]
[76.45051575 -29.47576332]
[74.66805267 -44.36948013]
[72.88558960 -59.26319885]
[71.10311890 -74.15691376]
[69.32065582 -89.05063629]
[67.53818512 -103.94435120]
[65.75572205 -118.83806610]
[61.62872314 -126.98703766]
[64.05929565 -133.96658325]
[62.49877167 -148.88519287]
[50.08498764 -154.87591553]
[42.31401062 -166.12893677]
[41.12760544 -179.64418030]
[46.72913361 -191.88212585]
[57.55820465 -199.69065857]
[56.21997070 -214.63084412]
[42.29099274 -217.99020386]
[30.09869957 -225.47587585]
[20.82818604 -236.34472656]
[15.37574291 -249.52548218]
[14.26220703 -263.72442627]
[17.58324051 -277.55230713]
[25.00126648 -289.66027832]
[35.77972794 -298.87145996]
[48.85622025 -304.29537964]
[47.74057388 -319.25381470]
[46.62492371 -334.21228027]
[45.50927734 -349.17074585]
[44.39362717 -364.12918091]
[43.27797699 -379.08764648]
[42.16233063 -394.04608154]
[28.70005226 -405.21688843]
[27.50554085 -422.33084106]
[38.83074570 -434.76382446]
[37.49251175 -449.70401001]
[36.15427780 -464.64419556]
[21.25230026 -466.92333984]
[7.32905483 -472.70318604]
[-4.80598021 -481.64770508]
[-14.44729042 -493.23684692]
[-21.03434181 -506.79687500]
[-24.18417168 -521.53942871]
[-23.71365547 -536.60729980]
[-19.65014648 -551.12457275]
[-12.22988987 -564.24719238]
[-1.88429344 -575.21228027]
[10.78516579 -583.38220215]
[25.04190063 -588.28210449]
[40.05704498 -589.62707520]
[54.95763779 -587.33886719]
[68.87737274 -581.55059814]
[81.00698853 -572.59869385]
[90.64126587 -561.00372314]
[97.22010040 -547.43969727]
[100.36099243 -532.69525146]
[99.88134003 -517.62762451]
[95.80902863 -503.11282349]
[88.38081360 -489.99468994]
[78.02857208 -479.03594971]
[65.35416412 -470.87365723]
[51.09445953 -465.98242188]
[52.43269730 -451.04223633]
[53.77093124 -436.10205078]
[64.71741486 -429.30468750]
[69.82643127 -417.26391602]
[67.02650452 -404.28814697]
[57.12078476 -395.16174316]
[58.23643112 -380.20327759]
[59.35208130 -365.24484253]
[60.46772766 -350.28637695]
[61.58337784 -335.32794189]
[62.69902802 -320.36947632]
[63.81467438 -305.41101074]
[79.02181244 -301.33276367]
[91.93511963 -292.27841187]
[100.98273468 -279.32763672]
[105.05567932 -264.03573608]
[103.64373779 -248.24690247]
[96.89933014 -233.87173462]
[85.62126160 -222.65609741]
[71.16015625 -215.96908569]
[72.49839020 -201.02890015]
[86.84954834 -193.05883789]
[93.69080353 -177.95390320]
[90.14555359 -161.58526611]
[77.41737366 -150.44570923]
[78.97789764 -135.52711487]
[80.64943695 -120.62053680]
[82.43190765 -105.72681427]
[84.21437073 -90.83309937]
[85.99684143 -75.93938446]
[87.77930450 -61.04566574]
[89.56176758 -46.15194702]
[91.34423828 -31.25823021]
[100.53910828 -19.54056931]
[94.49652100 -4.91874599]
[106.32777405 4.05661011]
[108.34761810 19.13556480]
[98.85321808 31.48441696]
[100.63568115 46.37813568]
[114.28862000 56.19832230]
[116.66154480 73.18902588]
[105.80236816 86.90389252]
[114.19553375 98.08631134]
[109.06316376 111.09209442]
[111.06717682 125.95761871]
[113.07118988 140.82315063]
[115.07520294 155.68867493]
[117.07921600 170.55419922]
[119.08322906 185.41973877]
[127.36127472 172.91078186]
[141.37011719 167.54866028]
[155.88481140 171.33332825]
[165.49172974 182.85317993]
[166.60774231 197.81159973]
[158.81658936 210.62948608]
[145.02418518 216.52604675]
[130.37474060 213.30204773]
[120.33168793 202.15887451]
[120.55501556 217.15721130]
[120.77834320 232.15554810]
[130.58615112 247.74041748]
[121.44747162 262.72213745]
[121.89407349 277.71548462]
[122.34068298 292.70883179]
[130.48542786 306.27252197]
[123.13050079 319.22451782]
[133.16926575 334.66162109]
[124.25464630 349.77774048]
[124.92443085 364.76278687]
[125.59421539 379.74780273]
[126.26399994 394.73284912]
[135.23843384 403.99688721]
[135.48780823 416.49176025]
[127.42372894 425.50823975]
[127.87033081 440.50158691]
[131.25386047 448.98626709]
[128.21029663 455.72113037]
[128.43362427 470.71948242]
[128.65695190 485.71780396]
[128.88027954 500.71615601]
[129.10360718 515.71447754]
[129.32693481 530.71282959]
[129.55026245 545.71118164]
[144.24145508 549.09234619]
[157.69624329 555.89178467]
[169.13240051 565.71405029]
[177.88505554 577.98822021]
[183.44531250 592.00061035]
[185.48991394 606.93658447]
[183.90000916 621.92773438]
[178.76800537 636.10260010]
[170.39228821 648.63696289]
[159.25979614 658.80218506]
[146.01777649 666.00720215]
[131.43609619 669.83312988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 198]
[13 197]
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[19 190]
[20 189]
[22 186]
[23 185]
[24 184]
[25 183]
[28 181]
[30 179]
[31 178]
[32 177]
[35 175]
[36 174]
[37 173]
[38 164]
[39 163]
[40 162]
[41 161]
[42 160]
[43 159]
[45 157]
[49 154]
[50 153]
[53 150]
[55 148]
[56 147]
[57 146]
[58 145]
[59 144]
[60 143]
[61 142]
[63 141]
[64 140]
[69 136]
[70 135]
[79 127]
[80 126]
[81 125]
[82 124]
[83 123]
[84 122]
[85 121]
[88 117]
[89 116]
[90 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
