%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGAGAAAUGCCUGAGGUGAAUACUGAGGGAUUUCGGGUACAGCUUCGGGGGUAGCGACCCAGUUAUCAUGAACGGCGUCAUGAGAAUUUUGAUCCGCCGAU\
) } def
/len { sequence length } bind def

/coor [
[31.21367264 384.38442993]
[28.59385681 399.16519165]
[24.60144234 413.63568115]
[19.27152061 427.66873169]
[12.65092659 441.14099121]
[4.79784775 453.93411255]
[-4.21870327 465.93563843]
[-14.31948566 477.04006958]
[-25.41573334 487.14984131]
[-37.40992737 496.17614746]
[-50.19666290 504.03958130]
[-63.66356277 510.67111206]
[-77.69228363 516.01239014]
[-92.15953064 520.01654053]
[-106.93816376 522.64837646]
[-121.89831543 523.88470459]
[-136.90849304 523.71466064]
[-151.83680725 522.13983154]
[-166.55203247 519.17395020]
[-180.92488098 514.84320068]
[-194.82902527 509.18551636]
[-208.14227295 502.25067139]
[-220.74761963 494.09963989]
[-232.53430176 484.80398560]
[-243.39872742 474.44549561]
[-253.24540710 463.11511230]
[-261.98782349 450.91244507]
[-269.54913330 437.94476318]
[-275.86288452 424.32598877]
[-280.87359619 410.17581177]
[-284.53723145 395.61862183]
[-286.82159424 380.78231812]
[-287.70663452 365.79727173]
[-287.18453979 350.79522705]
[-285.25988770 335.90795898]
[-281.94961548 321.26635742]
[-277.28283691 306.99908447]
[-271.30050659 293.23147583]
[-264.05526733 280.08459473]
[-255.61073303 267.67395020]
[-246.04113770 256.10858154]
[-235.43058777 245.49015808]
[-223.87232971 235.91200256]
[-211.46794128 227.45828247]
[-198.32643127 220.20327759]
[-184.56327820 214.21075439]
[-170.29945374 209.53338623]
[-155.66030884 206.21226501]
[-140.77449036 204.27659607]
[-125.77281952 203.74336243]
[-110.78713226 204.61727905]
[-95.94913483 206.89065552]
[-81.38921356 210.54350281]
[-67.23533630 215.54371643]
[-53.61188889 221.84738159]
[-40.63859177 229.39906311]
[-28.42946243 238.13243103]
[-18.59888268 226.80284119]
[-8.76830101 215.47325134]
[1.06227970 204.14364624]
[3.46183634 186.75949097]
[20.91671753 180.89360046]
[30.57752800 169.41889954]
[40.23833847 157.94419861]
[49.89914703 146.46949768]
[51.80239105 139.32810974]
[59.79022217 134.89726257]
[69.62080383 123.56767273]
[79.45138550 112.23808289]
[89.28196716 100.90849304]
[96.65265656 87.84430695]
[101.26666260 73.57157135]
[105.88066864 59.29883957]
[110.49468231 45.02610397]
[115.10868835 30.75337219]
[119.72270203 16.48063850]
[107.90670013 8.25429153]
[98.89833832 -2.95650673]
[93.42105865 -16.23711205]
[91.91070557 -30.50724411]
[94.48081207 -44.60887146]
[100.91415405 -57.40016937]
[110.68106842 -67.84799194]
[122.98305511 -75.11129761]
[136.81803894 -78.60888672]
[151.06202698 -78.06584167]
[155.88801575 -92.26829529]
[160.71401978 -106.47074890]
[165.54000854 -120.67320251]
[170.36601257 -134.87565613]
[175.19201660 -149.07812500]
[172.30607605 -164.63388062]
[183.72677612 -174.19511414]
[188.55276489 -188.39756775]
[185.66682434 -203.95333862]
[197.08752441 -213.51455688]
[201.91352844 -227.71701050]
[188.61189270 -234.71794128]
[176.56929016 -243.71360779]
[166.08226013 -254.48249817]
[157.40908813 -266.75939941]
[150.76333618 -280.24200439]
[146.30865479 -294.59826660]
[144.15476990 -309.47467041]
[144.35469055 -324.50485229]
[146.90351868 -339.31869507]
[151.73847961 -353.55139160]
[158.74052429 -366.85244751]
[167.73718262 -378.89431763]
[178.50694275 -389.38043213]
[190.78456116 -398.05261230]
[204.26770020 -404.69726562]
[218.62432861 -409.15075684]
[233.50091553 -411.30340576]
[248.53108215 -411.10223389]
[263.34472656 -408.55218506]
[277.57702637 -403.71606445]
[290.87750244 -396.71292114]
[302.91860962 -387.71527100]
[313.40383911 -376.94464111]
[322.07501221 -364.66632080]
[328.71853638 -351.18261719]
[333.17083740 -336.82562256]
[335.32229614 -321.94885254]
[335.11987305 -306.91870117]
[332.56860352 -292.10528564]
[327.73129272 -277.87338257]
[320.72705078 -264.57348633]
[311.72839355 -252.53311157]
[300.95690918 -242.04875183]
[288.67785645 -233.37861633]
[275.19363403 -226.73619080]
[260.83627319 -222.28507996]
[245.95933533 -220.13485718]
[230.92919922 -220.33851624]
[216.11598206 -222.89100647]
[211.28997803 -208.68855286]
[214.52110291 -194.14863586]
[202.75521851 -183.57156372]
[197.92922974 -169.36911011]
[201.16035461 -154.82919312]
[189.39447021 -144.25212097]
[184.56846619 -130.04966736]
[179.74247742 -115.84720612]
[174.91647339 -101.64475250]
[170.09046936 -87.44229889]
[165.26448059 -73.23984528]
[177.90948486 -63.99698639]
[187.09071350 -51.28319550]
[191.89968872 -36.33598709]
[191.85423279 -20.61485291]
[186.94677734 -5.65877151]
[177.64631653 7.06447077]
[164.85354614 16.30231094]
[149.81373596 21.14072418]
[133.99543762 21.09464645]
[129.38142395 35.36738205]
[124.76741791 49.64011383]
[120.15340424 63.91284561]
[115.53939819 78.18557739]
[110.92538452 92.45831299]
[121.37076569 81.69290161]
[133.86161804 73.38757324]
[147.82971191 67.92016602]
[162.63957214 65.53941345]
[177.61746216 66.35361481]
[192.08197021 70.32573700]
[205.37507629 77.27507019]
[216.89202881 86.88547516]
[226.10888672 98.71973419]
[232.60633850 112.23946381]
[236.08879089 126.82962036]
[236.39781189 141.82643127]
[233.51934814 156.54765320]
[227.58436584 170.32357788]
[218.86283875 182.52746582]
[207.75155640 192.60415649]
[194.75601196 200.09519958]
[180.46740723 204.65980530]
[165.53576660 206.09033203]
[150.64041138 204.32168579]
[136.45895386 199.43432617]
[123.63655853 191.65060425]
[112.75656891 181.32463074]
[104.31394958 168.92614746]
[98.69277954 155.01922607]
[96.14878845 140.23652649]
[96.79770660 125.25057220]
[100.61155701 110.73907471]
[90.78097534 122.06866455]
[80.95039368 133.39825439]
[71.11981201 144.72784424]
[61.37384796 156.13031006]
[51.71303940 167.60501099]
[42.05222702 179.07971191]
[32.39141846 190.55441284]
[32.71471405 203.44853210]
[24.43197250 212.80694580]
[12.39187241 213.97422791]
[2.56129193 225.30383301]
[-7.26928902 236.63342285]
[-17.09987068 247.96301270]
[-6.73254538 258.81903076]
[2.57263899 270.59817505]
[10.73390770 283.19689941]
[17.67953682 296.50451660]
[23.34848785 310.40405273]
[27.69093895 324.77340698]
[30.66872787 339.48620605]
[32.25568771 354.41323853]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 202]
[58 201]
[59 200]
[60 199]
[62 196]
[63 195]
[64 194]
[65 193]
[67 192]
[68 191]
[69 190]
[70 189]
[71 161]
[72 160]
[73 159]
[74 158]
[75 157]
[76 156]
[86 147]
[87 146]
[88 145]
[89 144]
[90 143]
[91 142]
[93 140]
[94 139]
[96 137]
[97 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
