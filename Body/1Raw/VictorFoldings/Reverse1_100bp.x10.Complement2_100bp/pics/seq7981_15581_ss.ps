%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[-6.11483812 622.12194824]
[-9.98770046 636.63336182]
[-15.61453152 650.55877686]
[-22.91003036 663.68719482]
[-31.76360130 675.81958008]
[-42.04102325 686.77191162]
[-53.58649445 696.37829590]
[-66.22499084 704.49298096]
[-79.76490784 710.99298096]
[-94.00099182 715.77978516]
[-108.71743011 718.78082275]
[-123.69111633 719.95056152]
[-138.69505310 719.27130127]
[-153.50180054 716.75335693]
[-167.88687134 712.43487549]
[-181.63220215 706.38134766]
[-194.52940369 698.68444824]
[-206.38298035 689.46099854]
[-217.01322937 678.85076904]
[-226.25898743 667.01452637]
[-233.98010254 654.13183594]
[-240.05950928 640.39794922]
[-244.40505981 626.02099609]
[-246.95088196 611.21905518]
[-247.65835571 596.21643066]
[-246.51678467 581.24053955]
[-243.54345703 566.51849365]
[-238.78346252 552.27343750]
[-232.30894470 538.72131348]
[-224.21806335 526.06756592]
[-214.63346863 514.50402832]
[-203.70046997 504.20599365]
[-191.58480835 495.32962036]
[-178.47013855 488.00942993]
[-164.55529785 482.35638428]
[-150.05122375 478.45620728]
[-135.17778015 476.36804199]
[-120.16046143 476.12350464]
[-105.22692108 477.72631836]
[-90.60355377 481.15219116]
[-76.51203156 486.34918213]
[-69.63262177 473.01977539]
[-62.75320816 459.69033813]
[-55.87379456 446.36090088]
[-48.99438095 433.03149414]
[-42.11497116 419.70205688]
[-35.23555756 406.37261963]
[-28.65553093 392.89288330]
[-22.37817001 379.26956177]
[-16.10080910 365.64624023]
[-9.82344818 352.02294922]
[-3.54608727 338.39962769]
[2.73127341 324.77630615]
[8.39406013 310.88629150]
[13.43097591 296.75726318]
[18.46789169 282.62823486]
[6.91596603 273.14990234]
[-0.71040827 260.26708984]
[-3.47416711 245.52474976]
[-1.02277160 230.69868469]
[6.36695290 217.58145142]
[17.81992912 207.76567078]
[31.96641922 202.45069885]
[47.10581970 202.29611206]
[52.14273453 188.16708374]
[57.17965317 174.03804016]
[43.66513443 180.54634094]
[29.09844589 176.96701050]
[20.13927650 164.93649292]
[20.88364220 149.95498657]
[30.99122620 138.87181091]
[45.84097672 136.75405884]
[58.64379120 144.56993103]
[63.54637146 158.74798584]
[62.06593323 143.92713928]
[75.00533295 134.82315063]
[81.48483276 121.29480743]
[87.96432495 107.76646423]
[87.08138275 93.81253815]
[98.50733185 85.75404358]
[104.98682404 72.22569275]
[103.96984100 56.43721008]
[116.44578552 48.30086899]
[122.82439423 34.72465897]
[121.57245636 18.95306396]
[133.92588806 10.63187599]
[132.67395020 -5.13971949]
[145.02737427 -13.46090794]
[151.30473328 -27.08422470]
[157.58209229 -40.70753860]
[163.85945129 -54.33085632]
[170.13681030 -67.95417023]
[176.41416931 -81.57749176]
[176.18920898 -88.18512726]
[178.92439270 -93.16667175]
[183.08660889 -95.50866699]
[189.76679993 -108.93904114]
[196.44700623 -122.36942291]
[184.00717163 -130.79165649]
[172.80096436 -140.79687500]
[163.02835083 -152.20648193]
[154.86373901 -164.81690979]
[148.45283508 -178.40306091]
[143.91006470 -192.72251892]
[141.31646729 -207.51969910]
[140.71836853 -222.53056335]
[142.12641907 -237.48718262]
[145.51548767 -252.12268066]
[150.82508850 -266.17584229]
[157.96049500 -279.39590454]
[166.79432678 -291.54687500]
[177.16897583 -302.41198730]
[188.89926147 -311.79727173]
[201.77584839 -319.53527832]
[215.56895447 -325.48791504]
[230.03240967 -329.54891968]
[244.90811157 -331.64584351]
[259.93057251 -331.74124146]
[274.83169556 -329.83343506]
[289.34558105 -325.95645142]
[303.21316528 -320.17950439]
[316.18701172 -312.60568237]
[328.03555298 -303.37011719]
[338.54736328 -292.63769531]
[347.53482056 -280.59988403]
[354.83755493 -267.47152710]
[360.32525635 -253.48693848]
[363.89993286 -238.89566040]
[365.49783325 -223.95812988]
[365.09042358 -208.94088745]
[362.68499756 -194.11195374]
[358.32446289 -179.73596191]
[352.08666992 -166.06945801]
[344.08288574 -153.35635376]
[334.45596313 -141.82353210]
[323.37774658 -131.67680359]
[311.04589844 -123.09723663]
[297.68048096 -116.23795319]
[283.52008057 -111.22136688]
[268.81735229 -108.13700104]
[253.83470154 -107.03990936]
[238.83950806 -107.94966125]
[224.09938049 -110.85001373]
[209.87738037 -115.68922424]
[203.19718933 -102.25885010]
[196.51698303 -88.82847595]
[190.03749084 -75.30012512]
[183.76013184 -61.67681122]
[177.48277283 -48.05349731]
[171.20541382 -34.43017960]
[164.92805481 -20.80686378]
[158.65069580 -7.18354702]
[160.35162354 7.61361790]
[147.54919434 16.90923691]
[149.25013733 31.70640182]
[136.44770813 41.00202179]
[136.50349426 48.39246750]
[129.97413635 54.78036499]
[131.45457458 69.60121155]
[118.51516724 78.70519257]
[112.03567505 92.23353577]
[112.91861725 106.18746185]
[101.49266815 114.24595642]
[95.01317596 127.77430725]
[88.53367615 141.30264282]
[89.55065918 157.09114075]
[77.07471466 165.22747803]
[71.30868530 179.07496643]
[66.27176666 193.20399475]
[61.23484802 207.33302307]
[72.86228180 217.02983093]
[80.45630646 230.09516907]
[83.11705780 244.94241333]
[80.54240417 259.77618408]
[73.06210327 272.80947876]
[61.59572220 282.47885132]
[47.53961945 287.63201904]
[32.59692001 287.66513062]
[27.56000519 301.79415894]
[22.52309036 315.92318726]
[36.50431061 310.48947144]
[50.28773880 316.40698242]
[55.97759628 330.28594971]
[50.31447601 344.17584229]
[36.54247284 350.11990356]
[22.55081177 344.71310425]
[16.35458946 331.05368042]
[10.07722855 344.67697144]
[3.79986811 358.30029297]
[-2.47749257 371.92361450]
[-8.75485325 385.54693604]
[-15.03221416 399.17025757]
[-14.55186367 404.36798096]
[-15.97135544 408.78817749]
[-18.67638588 411.83743286]
[-21.90612793 413.25204468]
[-28.78554153 426.58145142]
[-35.66495514 439.91088867]
[-42.54436493 453.24032593]
[-49.42377853 466.56976318]
[-56.30319214 479.89916992]
[-63.18260193 493.22860718]
[-50.78302002 501.70385742]
[-39.51895523 511.63867188]
[-29.56117821 522.88244629]
[-21.06063843 535.26470947]
[-14.14620686 548.59777832]
[-8.92270184 562.67944336]
[-5.46931219 577.29638672]
[-3.83838892 592.22686768]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 202]
[42 201]
[43 200]
[44 199]
[45 198]
[46 197]
[47 196]
[48 192]
[49 191]
[50 190]
[51 189]
[52 188]
[53 187]
[54 180]
[55 179]
[56 178]
[64 170]
[65 169]
[66 168]
[74 167]
[76 165]
[77 164]
[78 163]
[80 161]
[81 160]
[83 158]
[84 156]
[86 154]
[88 152]
[89 151]
[90 150]
[91 149]
[92 148]
[93 147]
[96 146]
[97 145]
[98 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
