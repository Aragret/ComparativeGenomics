%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[120.90510559 571.16912842]
[126.18267822 557.04119873]
[134.80857849 544.67010498]
[146.24060059 534.83343506]
[159.76010132 528.14959717]
[156.65599060 513.47424316]
[153.55187988 498.79895020]
[150.44776917 484.12365723]
[138.03182983 471.72158813]
[143.88494873 454.26242065]
[140.56269836 439.63497925]
[138.26533508 438.02865601]
[136.46583557 435.41552734]
[135.55085754 431.98068237]
[135.83299255 428.04559326]
[137.50561523 424.03854370]
[135.05989075 409.23928833]
[132.61415100 394.44000244]
[130.16842651 379.64074707]
[120.45951080 368.34533691]
[125.84317017 353.46829224]
[123.28733826 338.68762207]
[120.62154388 323.92642212]
[117.95574951 309.16519165]
[115.73240662 307.45788574]
[114.05138397 304.76702881]
[113.29069519 301.29473877]
[113.74826050 297.37615967]
[115.59812927 293.44781494]
[113.81566620 278.55410767]
[112.03319550 263.66036987]
[97.27345276 261.22579956]
[83.78414154 254.72428894]
[72.66217804 244.67501831]
[64.81465912 231.88607788]
[60.88484573 217.38943481]
[61.19946289 202.35769653]
[65.74156952 188.00926208]
[74.15120697 175.50953674]
[85.75392151 165.87631226]
[99.61487579 159.89685059]
[97.83241272 145.00312805]
[96.04994202 130.10940552]
[94.26747894 115.21569061]
[85.56227875 107.47872162]
[84.26443481 95.90474701]
[91.03981781 86.43186951]
[89.47929382 71.51325989]
[79.96936798 62.79982376]
[78.97673035 50.34195709]
[86.48984528 40.86146164]
[85.15161133 25.92127609]
[83.81337738 10.98109150]
[82.47514343 -3.95909381]
[81.02571869 -18.88890266]
[79.46519470 -33.80750656]
[65.99018860 -38.07024002]
[55.19037247 -47.11944580]
[48.67507935 -59.56357956]
[47.39873505 -73.50852203]
[51.52116394 -86.84587860]
[60.38841629 -97.57172394]
[72.63627625 -104.08771515]
[71.29803467 -119.02790070]
[69.95980072 -133.96809387]
[66.95552826 -138.23674011]
[65.98600006 -142.77693176]
[66.81391144 -146.76812744]
[68.91069031 -149.60287476]
[68.24090576 -164.58792114]
[67.57112122 -179.57295227]
[66.90133667 -194.55799866]
[59.62751007 -181.43963623]
[47.69601822 -172.34899902]
[33.11753082 -168.81803894]
[18.34877968 -171.44175720]
[5.87855482 -179.77804565]
[-2.19168997 -192.42205811]
[-4.50197649 -207.24307251]
[-0.66298163 -221.74348450]
[8.67835712 -233.47973633]
[21.94786072 -240.47404480]
[36.90938187 -241.54774475]
[51.04164505 -236.51989746]
[61.96311569 -226.23780823]
[67.83364868 -212.43254089]
[70.05876923 -227.26658630]
[72.28388977 -242.10063171]
[63.16136932 -254.72668457]
[65.62927246 -269.73883057]
[77.72251129 -278.35794067]
[79.94762421 -293.19198608]
[82.17274475 -308.02603149]
[75.03726959 -325.00149536]
[86.49640656 -338.29266357]
[88.50041962 -353.15820312]
[90.50443268 -368.02371216]
[92.50844574 -382.88925171]
[78.52926636 -388.54904175]
[66.39730072 -397.50817871]
[56.87516022 -409.20346069]
[50.56142807 -422.89971924]
[47.85298157 -437.73602295]
[48.92007828 -452.77969360]
[53.69564438 -467.08508301]
[61.87947845 -479.75299072]
[72.95713806 -489.98706055]
[86.23227692 -497.14398193]
[100.87040710 -500.77386475]
[115.95135498 -500.64852905]
[130.52713013 -496.77587891]
[143.68148804 -489.39929199]
[154.58752441 -478.98251343]
[162.55967712 -466.18035889]
[167.09683228 -451.79754639]
[167.91374207 -436.73822021]
[164.95909119 -421.94900513]
[158.41859436 -408.35955811]
[148.70338440 -396.82415771]
[136.42419434 -388.06790161]
[122.35287476 -382.64120483]
[107.37397766 -380.88522339]
[105.36996460 -366.01971436]
[103.36595154 -351.15417480]
[101.36193848 -336.28863525]
[108.44422150 -326.48214722]
[106.89630890 -314.08102417]
[97.00679016 -305.80090332]
[94.78166962 -290.96685791]
[92.55654907 -276.13281250]
[101.58871460 -264.34487915]
[99.54344940 -249.26934814]
[87.11792755 -239.87550354]
[84.89281464 -225.04145813]
[82.66769409 -210.20742798]
[81.88637543 -195.22778320]
[82.55615997 -180.24275208]
[83.22594452 -165.25770569]
[83.89572906 -150.27267456]
[84.89998627 -135.30632019]
[86.23822021 -120.36613464]
[87.57645416 -105.42594910]
[102.63972473 -100.09223175]
[113.91000366 -88.68194580]
[119.09484100 -73.44380188]
[117.10817719 -57.41216278]
[108.29738617 -43.80284119]
[94.38380432 -35.36803055]
[95.94432831 -20.44942474]
[99.76663971 -14.12394333]
[97.41532135 -5.29732800]
[98.75355530 9.64285755]
[100.09179688 24.58304214]
[101.43003082 39.52322769]
[112.28424835 53.31281662]
[104.39790344 69.95273590]
[105.95842743 84.87134552]
[116.15846252 98.18807983]
[109.16119385 113.43322754]
[110.94366455 128.32695007]
[112.72612762 143.22065735]
[114.50859070 158.11437988]
[129.38911438 160.65408325]
[142.93737793 167.27728271]
[154.05917358 177.43949890]
[161.85893250 190.31086731]
[165.71182251 204.84384155]
[165.31388855 219.85842896]
[160.70590210 234.13803101]
[152.26945496 246.52803040]
[140.69531250 256.02911377]
[126.92691803 261.87792969]
[128.70938110 276.77163696]
[130.49185181 291.66534424]
[132.71696472 306.49938965]
[135.38276672 321.26062012]
[138.04855347 336.02182007]
[142.65327454 343.91070557]
[140.64244080 351.02255249]
[150.52630615 363.37649536]
[144.96769714 377.19500732]
[147.41342163 391.99429321]
[149.85916138 406.79354858]
[152.30488586 421.59283447]
[155.19015503 436.31271362]
[158.51242065 450.94018555]
[168.99038696 458.46179199]
[171.45637512 470.71343994]
[165.12307739 481.01956177]
[168.22718811 495.69485474]
[171.33129883 510.37014771]
[174.43540955 525.04547119]
[189.50341797 525.68249512]
[203.93937683 530.04754639]
[216.83583069 537.86627197]
[227.38208008 548.64715576]
[234.91520691 561.71252441]
[238.96163940 576.24102783]
[239.26704407 591.31939697]
[235.81222534 605.99981689]
[228.81431580 619.35943604]
[218.71325684 630.55853271]
[206.14398193 638.89306641]
[191.89660645 643.83911133]
[176.86676025 645.08575439]
[161.99919128 642.55462646]
[148.22851562 636.40490723]
[136.42036438 627.02313232]
[127.31700134 614.99896240]
[121.49067688 601.08837891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 192]
[6 191]
[7 190]
[8 189]
[10 186]
[11 185]
[16 184]
[17 183]
[18 182]
[19 181]
[21 179]
[22 177]
[23 176]
[24 175]
[29 174]
[30 173]
[31 172]
[41 162]
[42 161]
[43 160]
[44 159]
[47 157]
[48 156]
[51 154]
[52 153]
[53 152]
[54 151]
[55 149]
[56 148]
[63 142]
[64 141]
[65 140]
[69 139]
[70 138]
[71 137]
[72 136]
[86 135]
[87 134]
[88 133]
[91 130]
[92 129]
[93 128]
[95 125]
[96 124]
[97 123]
[98 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
