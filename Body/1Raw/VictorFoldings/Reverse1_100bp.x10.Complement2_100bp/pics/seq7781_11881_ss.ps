%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[68.04128265 542.36358643]
[71.07294464 557.25915527]
[68.16864777 572.18005371]
[59.77127457 584.85095215]
[47.16136551 593.33972168]
[32.26183701 596.35180664]
[17.34476280 593.42785645]
[4.68488693 585.01379395]
[-3.78725266 572.39276123]
[-6.77971506 557.48925781]
[-3.83617210 542.57604980]
[4.59450769 529.92724609]
[17.22670746 521.47174072]
[32.13410568 518.49890137]
[35.01937866 503.77899170]
[37.90465164 489.05911255]
[40.78992462 474.33920288]
[43.12541199 459.52212524]
[44.90787888 444.62841797]
[46.69034195 429.73471069]
[39.46283722 420.03472900]
[40.82594681 407.61193848]
[50.59109116 399.18548584]
[52.59510422 384.31997681]
[54.59911728 369.45443726]
[52.37742996 362.40560913]
[56.74522781 354.38314819]
[58.97034454 339.54910278]
[61.19546127 324.71505737]
[59.07896423 317.63394165]
[63.56571960 309.67736816]
[58.00712204 295.85885620]
[67.89098358 283.50491333]
[70.33670807 268.70565796]
[64.77811432 254.88714600]
[74.66197205 242.53318787]
[77.10769653 227.73391724]
[79.55342102 212.93464661]
[81.99915314 198.13537598]
[84.44487762 183.33610535]
[86.33817291 168.45606995]
[87.67640686 153.51588440]
[89.01464081 138.57571411]
[90.35287476 123.63552094]
[91.69110870 108.69533539]
[92.80675507 93.73688507]
[93.69956970 78.76348114]
[94.59238434 63.79007339]
[95.48520660 48.81666565]
[86.86370850 32.54548264]
[97.09136963 18.28498268]
[97.76115417 3.29994345]
[98.43093872 -11.68509579]
[98.98915100 -26.67470551]
[99.43575287 -41.66805649]
[87.20867920 -54.17876816]
[87.80110168 -71.32414246]
[100.35831451 -82.51142120]
[100.58164215 -97.50975800]
[100.80496979 -112.50809479]
[91.46552277 -128.37808228]
[101.04621887 -143.08105469]
[101.04621887 -158.08105469]
[101.04621887 -173.08105469]
[101.04621887 -188.08105469]
[90.15166473 -199.21417236]
[90.36534882 -214.42630005]
[101.04621887 -224.74398804]
[101.04621887 -239.74398804]
[97.91680908 -248.32563782]
[101.15954590 -254.96690369]
[101.38287354 -269.96524048]
[101.60620117 -284.96356201]
[90.87861633 -296.25765991]
[91.31875610 -311.46493530]
[102.15206146 -321.62243652]
[102.37538910 -336.62078857]
[102.59871674 -351.61914062]
[102.82204437 -366.61746216]
[103.04537201 -381.61581421]
[88.16087341 -383.61282349]
[73.61705780 -387.35632324]
[59.61808777 -392.79370117]
[46.36049271 -399.84866333]
[34.03038406 -408.42218018]
[22.80086517 -418.39382935]
[12.82957363 -429.62368774]
[4.25649500 -441.95410156]
[-2.79802036 -455.21191406]
[-8.23493767 -469.21109009]
[-11.97793007 -483.75503540]
[-13.97445297 -498.63958740]
[-14.19647694 -513.65582275]
[-12.64088726 -528.59289551]
[-9.32952023 -543.24114990]
[-4.30886269 -557.39489746]
[2.35060334 -570.85552979]
[10.55538845 -583.43402100]
[20.19031143 -594.95373535]
[31.12011337 -605.25305176]
[43.19135284 -614.18731689]
[56.23457718 -621.63116455]
[70.06667328 -627.48010254]
[84.49345398 -631.65191650]
[99.31240082 -634.08813477]
[114.31548309 -634.75451660]
[129.29206848 -633.64172363]
[144.03190613 -630.76538086]
[158.32807922 -626.16583252]
[171.97990417 -619.90771484]
[184.79571533 -612.07885742]
[196.59559631 -602.78912354]
[207.21389771 -592.16894531]
[216.50157166 -580.36743164]
[224.32820129 -567.55023193]
[230.58395386 -553.89733887]
[235.18096924 -539.60034180]
[238.05473328 -524.85998535]
[239.16490173 -509.88320923]
[238.49589539 -494.88027954]
[236.05708313 -480.06173706]
[231.88272095 -465.63568115]
[226.03140259 -451.80462646]
[218.58528137 -438.76269531]
[209.64888000 -426.69302368]
[199.34765625 -415.76501465]
[187.82621765 -406.13211060]
[175.24632263 -397.92953491]
[161.78454590 -391.27243042]
[147.62989807 -386.25424194]
[132.98106384 -382.94543457]
[118.04370880 -381.39248657]
[117.82038116 -366.39413452]
[117.59705353 -351.39581299]
[117.37372589 -336.39746094]
[117.15039825 -321.39910889]
[127.67646790 -310.92355347]
[127.66364288 -295.70993042]
[116.60453796 -284.74023438]
[116.38121033 -269.74191284]
[116.15788269 -254.74357605]
[116.04621887 -239.74398804]
[116.04621887 -224.74398804]
[126.72708893 -214.42630005]
[126.94077301 -199.21417236]
[116.04621887 -188.08105469]
[116.04621887 -173.08105469]
[116.04621887 -158.08105469]
[116.04621887 -143.08105469]
[124.37517548 -134.30863953]
[124.49794006 -121.81189728]
[115.80330658 -112.28476715]
[115.57997894 -97.28643036]
[115.35665131 -82.28809357]
[125.53657532 -74.38881683]
[129.36520386 -61.88187027]
[125.23053741 -49.26779556]
[114.42910767 -41.22145081]
[113.98249817 -26.22809982]
[116.92545319 -19.44865990]
[113.41597748 -11.01531029]
[112.74619293 3.96972871]
[112.07640839 18.95476723]
[120.00534821 28.09032822]
[119.56997681 40.58009338]
[110.45861053 49.70948029]
[109.56579590 64.68288422]
[108.67298126 79.65629578]
[107.78015900 94.62969971]
[110.28328705 99.23928833]
[110.02556610 104.92320251]
[106.63129425 110.03356934]
[105.29306030 124.97375488]
[103.95482635 139.91394043]
[102.61659241 154.85412598]
[101.27835846 169.79431152]
[114.28716278 162.32630920]
[128.29216003 167.69845581]
[132.96939087 181.95059204]
[124.87097931 194.57658386]
[109.96675873 196.26901245]
[99.24414825 185.78184509]
[96.79842377 200.58111572]
[94.35269165 215.38038635]
[91.90696716 230.17965698]
[89.46124268 244.97892761]
[94.84490204 259.85598755]
[85.13597870 271.15136719]
[82.69025421 285.95065308]
[88.07391357 300.82769775]
[78.36499023 312.12310791]
[76.02950287 326.94018555]
[73.80438995 341.77423096]
[71.57926941 356.60824585]
[69.46464539 371.45846558]
[67.46063232 386.32397461]
[65.45661926 401.18951416]
[72.84403992 418.05685425]
[61.58406067 431.51718140]
[59.80159378 446.41088867]
[58.01913071 461.30459595]
[71.24451447 454.22723389]
[85.08335876 460.01397705]
[89.33418274 474.39904785]
[80.86342621 486.77832031]
[65.91542816 488.02624512]
[55.50981522 477.22448730]
[52.62454224 491.94436646]
[49.73926926 506.66427612]
[46.85400009 521.38415527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 210]
[15 209]
[16 208]
[17 207]
[18 201]
[19 200]
[20 199]
[23 197]
[24 196]
[25 195]
[27 194]
[28 193]
[29 192]
[31 191]
[33 189]
[34 188]
[36 186]
[37 185]
[38 184]
[39 183]
[40 182]
[41 176]
[42 175]
[43 174]
[44 173]
[45 172]
[46 169]
[47 168]
[48 167]
[49 166]
[51 163]
[52 162]
[53 161]
[54 159]
[55 158]
[58 154]
[59 153]
[60 152]
[62 149]
[63 148]
[64 147]
[65 146]
[68 143]
[69 142]
[71 141]
[72 140]
[73 139]
[76 136]
[77 135]
[78 134]
[79 133]
[80 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
