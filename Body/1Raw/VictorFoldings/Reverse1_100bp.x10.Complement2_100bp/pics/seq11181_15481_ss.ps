%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCACUCGGAUCCCACAACACUCACAUUUAAUCACGCUACUCAUCCCCUUCCCUCGGAUGAUCCCACAUCUUAUCCUUCAUACACGGACGCAAGUCCGCAxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[60.41521835 592.84014893]
[64.23085785 607.38934326]
[65.38710022 622.38610840]
[63.84677887 637.34832764]
[59.65940094 651.79498291]
[52.95957947 665.26165771]
[43.96268082 677.31555176]
[32.95792389 687.56909180]
[20.29906082 695.69268799]
[6.39302588 701.42523193]
[-8.31316280 704.58239746]
[-23.34675980 705.06274414]
[-38.22449875 702.85083008]
[-52.46812057 698.01770020]
[-65.61975098 690.71875000]
[-77.25662231 681.18865967]
[-87.00465393 669.73370361]
[-94.55049133 656.72216797]
[-99.65156555 642.57232666]
[-102.14389801 627.73895264]
[-101.94736481 612.69897461]
[-99.06829071 597.93585205]
[-93.59922791 583.92407227]
[-85.71597290 571.11413574]
[-75.67195129 559.91784668]
[-63.79003143 550.69506836]
[-50.45216751 543.74224854]
[-36.08712006 539.28302002]
[-21.15666389 537.46057129]
[-6.14075136 538.33355713]
[8.47791862 541.87396240]
[14.55175209 528.15869141]
[20.62558556 514.44342041]
[20.45977211 507.05462646]
[26.89330482 500.57022095]
[33.17066574 486.94689941]
[39.44802856 473.32357788]
[45.72538757 459.70025635]
[49.80505371 445.26571655]
[51.58752060 430.37200928]
[53.36998749 415.47827148]
[55.04152679 400.57171631]
[56.60205078 385.65310669]
[54.17147827 378.67355347]
[58.29847717 370.52459717]
[60.08094406 355.63085938]
[61.86341095 340.73715210]
[63.64587402 325.84344482]
[65.42834473 310.94970703]
[67.21080780 296.05599976]
[68.99327087 281.16229248]
[70.77574158 266.26855469]
[72.55820465 251.37484741]
[66.38812256 237.81831360]
[75.71048737 225.03535461]
[77.49295807 210.14164734]
[79.27542114 195.24792480]
[81.05788422 180.35420227]
[82.84035492 165.46049500]
[80.64513397 161.21902466]
[81.09107208 155.55349731]
[84.90403748 150.15231323]
[87.12915802 135.31826782]
[89.35427094 120.48422241]
[91.57939148 105.65018463]
[89.56571960 97.84520721]
[93.94965363 90.61250305]
[96.39537811 75.81323242]
[91.01171875 60.93618011]
[100.72064209 49.64077759]
[103.16636658 34.84150696]
[97.78270721 19.96445274]
[107.49162292 8.66905117]
[109.93735504 -6.13021994]
[112.38307953 -20.92949104]
[114.82881165 -35.72875977]
[112.86212158 -42.04094696]
[114.18051910 -47.56895065]
[117.57398224 -50.92952347]
[120.45925903 -65.64941406]
[123.34452820 -80.36930847]
[126.22980499 -95.08919525]
[118.84275055 -113.84536743]
[132.17214966 -127.85301971]
[134.61787415 -142.65228271]
[137.06361389 -157.45155334]
[139.50933838 -172.25082397]
[141.95506287 -187.05009460]
[144.40078735 -201.84936523]
[139.01712036 -216.72642517]
[148.72604370 -228.02182007]
[151.17178345 -242.82109070]
[152.39875793 -257.77084351]
[152.39875793 -272.77084351]
[144.66145325 -286.57101440]
[152.39875793 -299.29827881]
[152.39875793 -314.29827881]
[152.39875793 -329.29827881]
[152.39875793 -344.29827881]
[138.62487793 -350.87423706]
[129.07495117 -362.78060913]
[125.64511871 -377.65338135]
[129.01635742 -392.53952026]
[138.51933289 -404.48339844]
[152.26719666 -411.11355591]
[167.53030396 -411.11355591]
[181.27818298 -404.48339844]
[190.78114319 -392.53952026]
[194.15238953 -377.65338135]
[190.72254944 -362.78060913]
[181.17262268 -350.87423706]
[167.39875793 -344.29827881]
[167.39875793 -329.29827881]
[167.39875793 -314.29827881]
[167.39875793 -299.29827881]
[175.13604736 -286.57101440]
[167.39875793 -272.77084351]
[167.39875793 -257.77084351]
[175.85667419 -270.15887451]
[189.05923462 -277.27871704]
[204.05696106 -277.53979492]
[217.49931335 -270.88375854]
[226.38325500 -258.79757690]
[228.72407532 -243.98133850]
[223.99882507 -229.74505615]
[213.26315308 -219.26911926]
[198.91542053 -214.89389038]
[184.16094971 -217.59680176]
[172.29594421 -226.77403259]
[165.97105408 -240.37536621]
[163.52531433 -225.57609558]
[169.08392334 -211.75758362]
[159.20005798 -199.40364075]
[156.75433350 -184.60437012]
[154.30860901 -169.80509949]
[151.86288452 -155.00582886]
[149.41714478 -140.20655823]
[146.97142029 -125.40728760]
[153.64511108 -117.66940308]
[154.98612976 -107.31806946]
[150.31228638 -97.74021149]
[140.94969177 -92.20392609]
[138.06442261 -77.48403168]
[135.17915344 -62.76414108]
[132.29386902 -48.04425049]
[129.62808228 -33.28303528]
[127.18235016 -18.48376274]
[124.73662567 -3.68449235]
[122.29089355 11.11477852]
[127.84949493 24.93329048]
[117.96563721 37.28723526]
[115.51991272 52.08650589]
[121.07850647 65.90501404]
[111.19464874 78.25895691]
[108.74892426 93.05822754]
[106.41343689 107.87529755]
[104.18831635 122.70934296]
[101.96320343 137.54338074]
[99.73808289 152.37742615]
[97.73406982 167.24296570]
[95.95160675 182.13667297]
[94.16913605 197.03039551]
[92.38667297 211.92410278]
[90.60420990 226.81782532]
[96.64679718 241.43965149]
[87.45191956 253.15731812]
[85.66945648 268.05102539]
[83.88699341 282.94473267]
[82.10452271 297.83847046]
[80.32205963 312.73217773]
[78.53959656 327.62588501]
[76.75712585 342.51962280]
[74.97466278 357.41333008]
[73.19219208 372.30703735]
[71.52065277 387.21362305]
[69.96012878 402.13223267]
[72.17977142 410.99285889]
[68.26370239 417.26074219]
[66.48123932 432.15444946]
[64.69876862 447.04818726]
[73.01045990 434.56155396]
[84.34667969 424.73861694]
[97.88904572 418.28848267]
[112.65993500 415.67678833]
[127.59301758 417.09210205]
[141.61026001 422.43222046]
[153.69975281 431.31164551]
[162.98873901 443.08935547]
[168.80664062 456.91513062]
[170.73344421 471.79086304]
[168.63008118 486.64266968]
[162.64837646 500.39837646]
[153.22015381 512.06494141]
[141.02606201 520.80010986]
[126.94637299 525.97338867]
[111.99753571 527.21124268]
[97.25871277 524.42425537]
[83.79390717 517.81372070]
[72.57516479 507.85684204]
[64.41236877 495.27239990]
[59.89480209 480.96884155]
[59.34870529 465.97763062]
[53.07134247 479.60095215]
[46.79398346 493.22427368]
[40.51662064 506.84756470]
[34.34085464 520.51727295]
[28.26701927 534.23248291]
[22.19318581 547.94775391]
[34.63962936 556.39324951]
[45.37790680 566.92553711]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 208]
[32 207]
[33 206]
[35 205]
[36 204]
[37 203]
[38 202]
[39 180]
[40 179]
[41 178]
[42 176]
[43 175]
[45 174]
[46 173]
[47 172]
[48 171]
[49 170]
[50 169]
[51 168]
[52 167]
[53 166]
[55 164]
[56 163]
[57 162]
[58 161]
[59 160]
[62 159]
[63 158]
[64 157]
[65 156]
[67 155]
[68 154]
[70 152]
[71 151]
[73 149]
[74 148]
[75 147]
[76 146]
[79 145]
[80 144]
[81 143]
[82 142]
[84 138]
[85 137]
[86 136]
[87 135]
[88 134]
[89 133]
[91 131]
[92 130]
[93 118]
[94 117]
[96 115]
[97 114]
[98 113]
[99 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
