%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[40.45956421 633.60748291]
[51.32726669 623.15966797]
[64.37984467 615.61688232]
[60.19283676 601.21307373]
[56.00582504 586.80932617]
[51.81881332 572.40551758]
[49.19918060 587.17504883]
[43.28775787 600.96105957]
[34.39464188 613.04046631]
[22.98634720 622.77960205]
[9.66133213 629.66760254]
[-4.88140011 633.34301758]
[-19.87896729 633.61315918]
[-34.54462814 630.46380615]
[-48.10904694 624.06018066]
[-59.86066818 614.73822021]
[-69.18302155 602.98687744]
[-75.58707428 589.42266846]
[-78.73688507 574.75708008]
[-78.46721649 559.75952148]
[-74.79222107 545.21667480]
[-67.90467072 531.89141846]
[-58.16588974 520.48284912]
[-46.08674240 511.58935547]
[-32.30088043 505.67749023]
[-17.53148270 503.05740356]
[-2.55332065 503.86651611]
[11.84788036 508.06240845]
[24.91666031 515.42492676]
[35.96746063 525.56793213]
[44.42057419 537.95922852]
[49.83299255 551.95050049]
[43.26201630 538.58367920]
[52.19965363 525.52880859]
[53.53788757 510.58865356]
[54.87612152 495.64846802]
[56.21435547 480.70828247]
[47.17517090 473.74697876]
[42.57120514 463.17724609]
[43.65229034 451.57876587]
[50.26502991 441.84362793]
[60.86233902 436.45535278]
[62.64480209 421.56161499]
[64.42726898 406.66790771]
[58.25718689 393.11138916]
[67.57955170 380.32843018]
[69.36202240 365.43472290]
[71.14448547 350.54098511]
[72.92694855 335.64727783]
[64.03737640 318.47570801]
[76.36629486 302.52703857]
[77.70452881 287.58685303]
[79.04276276 272.64666748]
[80.38099670 257.70648193]
[81.71923065 242.76629639]
[82.94620514 227.81655884]
[84.06185150 212.85810852]
[85.17750549 197.89965820]
[78.40824127 184.63215637]
[87.15052032 171.44569397]
[88.26617432 156.48722839]
[89.38182068 141.52877808]
[90.49746704 126.57032776]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[90.94596100 78.48184967]
[94.67366791 72.10015869]
[96.01190948 57.15997314]
[97.35014343 42.21978760]
[98.68837738 27.27960396]
[85.67956543 34.74760056]
[71.67456818 29.37545776]
[66.99733734 15.12331772]
[75.09575653 2.49732804]
[89.99996948 0.80489832]
[100.72257996 11.29207516]
[103.16830444 -3.50719619]
[105.61403656 -18.30646706]
[108.05976105 -33.10573959]
[110.50549316 -47.90501022]
[112.39878082 -62.78504181]
[113.73701477 -77.72522736]
[115.07524872 -92.66541290]
[116.41348267 -107.60559845]
[109.93823242 -122.04103088]
[118.78014374 -134.02726746]
[120.11837769 -148.96745300]
[121.45661926 -163.90762329]
[122.34943390 -178.88104248]
[122.79603577 -193.87438965]
[115.47305298 -207.89880371]
[123.58586121 -220.39007568]
[124.03246307 -235.38342285]
[111.92572784 -244.90881348]
[107.79752350 -259.56524658]
[113.02925873 -273.67529297]
[125.41806793 -281.90057373]
[125.86466980 -296.89392090]
[126.31127930 -311.88726807]
[112.73931122 -318.87042236]
[103.54811096 -331.05584717]
[100.56261444 -346.02413940]
[104.37557983 -360.80331421]
[114.22994232 -372.45895386]
[128.16911316 -378.67684937]
[143.42547607 -378.22241211]
[156.96983337 -371.18588257]
[166.11297607 -358.96435547]
[169.03950500 -343.98440552]
[165.16836548 -329.22036743]
[155.26818848 -317.60360718]
[141.30462646 -311.44067383]
[140.85801697 -296.44732666]
[140.41142273 -281.45397949]
[152.28868103 -272.50585938]
[156.67129517 -258.10946655]
[151.67805481 -243.72471619]
[139.02581787 -234.93681335]
[138.57920837 -219.94346619]
[145.93414307 -206.99147034]
[137.78938293 -193.42778015]
[137.34278870 -178.43443298]
[139.16468811 -176.30398560]
[140.25247192 -173.32348633]
[140.27813721 -169.76895142]
[139.01956177 -166.02990723]
[136.39680481 -162.56939697]
[135.05856323 -147.62921143]
[133.72033691 -132.68902588]
[140.29130554 -119.32221985]
[131.35366821 -106.26736450]
[130.01544189 -91.32717896]
[128.67720032 -76.38699341]
[127.33896637 -61.44680786]
[140.34777832 -68.91481018]
[154.35276794 -63.54266357]
[159.03001404 -49.29052353]
[150.93159485 -36.66453552]
[136.02737427 -34.97210312]
[125.30476379 -45.45928192]
[122.85903168 -30.66001129]
[120.41330719 -15.86073971]
[117.96757507 -1.06146872]
[115.52185059 13.73780251]
[113.62856293 28.61783791]
[112.29032135 43.55802155]
[110.95208740 58.49820709]
[109.61385345 73.43839264]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[105.45592499 127.68597412]
[104.34027100 142.64442444]
[103.22462463 157.60289001]
[102.10897827 172.56134033]
[108.79843903 186.89875793]
[100.13595581 199.01530457]
[99.02030945 213.97375488]
[97.90466309 228.93220520]
[100.38713074 237.72283936]
[96.65941620 244.10453796]
[95.32118225 259.04470825]
[93.98294830 273.98489380]
[92.64471436 288.92507935]
[91.30648041 303.86526489]
[98.75156403 311.79492188]
[100.56613159 322.29672241]
[96.38899994 331.86227417]
[87.82067108 337.42974854]
[86.03820038 352.32345581]
[84.25573730 367.21716309]
[82.47327423 382.11090088]
[88.51586151 396.73272705]
[79.32098389 408.45037842]
[77.53852081 423.34408569]
[75.75605774 438.23782349]
[88.02510071 452.67333984]
[85.88323975 471.17538452]
[71.15454102 482.04650879]
[69.81630707 496.98669434]
[68.47807312 511.92687988]
[67.13983917 526.86706543]
[73.61509705 541.30249023]
[64.77317810 553.28869629]
[66.22259521 568.21850586]
[70.40960693 582.62231445]
[74.59661865 597.02606201]
[78.78363037 611.42987061]
[93.84572601 610.80004883]
[108.62073517 613.79382324]
[122.24964905 620.23712158]
[133.94010925 629.75531006]
[143.01245117 641.79510498]
[148.93920898 655.65643311]
[151.37580872 670.53350830]
[150.18060303 685.56127930]
[145.42306519 699.86614990]
[137.37980652 712.61645508]
[126.51844025 723.07080078]
[113.47043610 730.62152100]
[98.99438477 734.82952881]
[83.93190765 735.45025635]
[69.15872192 732.44750977]
[55.53371048 725.99597168]
[43.84902191 716.47064209]
[34.78398514 704.42535400]
[28.86563301 690.56042480]
[26.43804741 675.68194580]
[27.64236641 660.65484619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 189]
[4 188]
[5 187]
[6 186]
[32 185]
[34 183]
[35 182]
[36 181]
[37 180]
[42 177]
[43 176]
[44 175]
[46 173]
[47 172]
[48 171]
[49 170]
[51 166]
[52 165]
[53 164]
[54 163]
[55 162]
[56 160]
[57 159]
[58 158]
[60 156]
[61 155]
[62 154]
[63 153]
[64 152]
[66 150]
[68 149]
[69 148]
[70 147]
[71 146]
[77 145]
[78 144]
[79 143]
[80 142]
[81 141]
[82 135]
[83 134]
[84 133]
[85 132]
[87 130]
[88 129]
[89 128]
[90 123]
[91 122]
[93 120]
[94 119]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
