%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[-97.88778687 388.55285645]
[-92.65887451 402.62844849]
[-89.01015472 417.19381714]
[-86.98592377 432.07217407]
[-86.61074829 447.08291626]
[-87.88919067 462.04382324]
[-90.80571747 476.77328491]
[-95.32493591 491.09249878]
[-101.39199066 504.82763672]
[-108.93321991 517.81195068]
[-117.85708618 529.88787842]
[-128.05526733 540.90881348]
[-139.40396118 550.74090576]
[-151.76541138 559.26489258]
[-164.98954773 566.37719727]
[-178.91584778 571.99157715]
[-193.37525940 576.03985596]
[-208.19226074 578.47283936]
[-223.18699646 579.26110840]
[-238.17742920 578.39495850]
[-252.98158264 575.88500977]
[-267.41976929 571.76165771]
[-281.31671143 566.07495117]
[-294.50372314 558.89398193]
[-306.82070923 550.30590820]
[-318.11813354 540.41497803]
[-328.25891113 529.34124756]
[-337.11990356 517.21911621]
[-344.59356689 504.19573975]
[-350.58917236 490.42926025]
[-355.03393555 476.08676147]
[-357.87387085 461.34234619]
[-359.07455444 446.37500000]
[-358.62139893 431.36639404]
[-356.51986694 416.49874878]
[-352.79550171 401.95254517]
[-347.49353027 387.90432739]
[-340.67828369 374.52465820]
[-332.43249512 361.97595215]
[-322.85629272 350.41052246]
[-312.06585693 339.96878052]
[-300.19226074 330.77743530]
[-287.37954712 322.94815063]
[-273.78332520 316.57586670]
[-259.56860352 311.73800659]
[-244.90795898 308.49325562]
[-229.97932434 306.88104248]
[-214.96394348 306.92089844]
[-200.04408264 308.61236572]
[-185.40086365 311.93490601]
[-171.21203613 316.84817505]
[-157.64984131 323.29254150]
[-144.87889099 331.18978882]
[-133.05424500 340.44403076]
[-122.56674957 329.71963501]
[-112.07924652 318.99526978]
[-101.59174347 308.27087402]
[-91.10424805 297.54650879]
[-80.61674500 286.82214355]
[-70.12924194 276.09774780]
[-59.72187042 265.29559326]
[-49.39520264 254.41625977]
[-39.23165512 243.38438416]
[-36.51624298 228.73939514]
[-21.54992485 223.60910034]
[-11.55175209 212.42712402]
[-1.55357993 201.24514771]
[8.44459248 190.06317139]
[18.44276428 178.88119507]
[28.44093704 167.69923401]
[38.43910980 156.51725769]
[48.43727875 145.33528137]
[45.92528915 132.69726562]
[51.23019791 120.74150848]
[62.62005234 113.92376709]
[76.05178833 114.92527008]
[86.21533966 103.89339447]
[89.46533203 90.29452515]
[102.75278473 85.94306183]
[112.91632843 74.91117859]
[123.07987976 63.87930679]
[133.24342346 52.84742737]
[142.81854248 41.30112457]
[151.77923584 29.27174759]
[153.81819153 13.58247662]
[167.62619019 7.99783850]
[176.58689880 -4.03153896]
[185.54759216 -16.06091690]
[194.50828552 -28.09029388]
[197.12513733 -36.84186172]
[203.69302368 -40.23073578]
[212.83183289 -52.12537003]
[221.79252625 -64.15474701]
[230.57313538 -76.31620026]
[239.35372925 -88.47766113]
[248.13433838 -100.63911438]
[256.91494751 -112.80056763]
[265.60476685 -125.02705383]
[274.20333862 -137.31790161]
[262.95974731 -147.27177429]
[252.92413330 -158.44245911]
[244.22732544 -170.68432617]
[236.98271179 -183.83776855]
[231.28472900 -197.73132324]
[227.20765686 -212.18383789]
[224.80467224 -227.00691223]
[224.10707092 -242.00727844]
[225.12397766 -256.98941040]
[227.84211731 -271.75793457]
[232.22605896 -286.12033081]
[238.21864319 -299.88937378]
[245.74174500 -312.88555908]
[254.69729614 -324.93942261]
[264.96853638 -335.89385986]
[276.42156982 -345.60601807]
[288.90704346 -353.94931030]
[302.26223755 -360.81491089]
[316.31298828 -366.11337280]
[330.87615967 -369.77560425]
[345.76187134 -371.75387573]
[360.77606201 -372.02233887]
[375.72299194 -370.57754517]
[390.40777588 -367.43829346]
[404.63897705 -362.64556885]
[418.23107910 -356.26177979]
[431.00686646 -348.37020874]
[442.79980469 -339.07373047]
[453.45611572 -328.49353027]
[462.83688354 -316.76751709]
[470.81979370 -304.04861450]
[477.30081177 -290.50262451]
[482.19543457 -276.30612183]
[485.43984985 -261.64422607]
[486.99172974 -246.70803833]
[486.83084106 -231.69230652]
[484.95935059 -216.79280090]
[481.40158081 -202.20376587]
[476.20394897 -188.11538696]
[469.43420410 -174.71134949]
[461.18063354 -162.16638184]
[451.55081177 -150.64404297]
[440.67028809 -140.29455566]
[428.68090820 -131.25285339]
[415.73898315 -123.63678741]
[402.01321411 -117.54567719]
[387.68261719 -113.05891418]
[372.93392944 -110.23500061]
[357.95950317 -109.11074829]
[342.95449829 -109.70082092]
[328.11459351 -111.99752045]
[313.63323975 -115.97090149]
[299.69918823 -121.56916809]
[286.49417114 -128.71932983]
[277.89559937 -116.42848969]
[276.63708496 -109.14578247]
[269.07638550 -104.01996613]
[260.29580688 -91.85851288]
[251.51519775 -79.69705963]
[242.73458862 -67.53559875]
[233.95397949 -55.37414551]
[233.81726074 -50.60021973]
[230.68014526 -45.86149597]
[224.72647095 -42.98656845]
[215.58766174 -31.09193420]
[206.53765869 -19.12959862]
[197.57696533 -7.10022068]
[188.61627197 4.92915678]
[179.65557861 16.95853424]
[178.25755310 31.78738594]
[163.80862427 38.23244476]
[154.84791565 50.26182175]
[169.67720032 48.00512314]
[182.55262756 55.70078278]
[187.58775330 69.83045197]
[182.48057556 83.93423462]
[169.56602478 91.56407166]
[154.74845886 89.23170471]
[144.80227661 78.00346375]
[144.27529907 63.01097488]
[134.11175537 74.04285431]
[123.94821167 85.07472992]
[113.78466034 96.10660553]
[110.53466797 109.70547485]
[97.24721527 114.05693817]
[87.08367157 125.08882141]
[88.11968231 142.55151367]
[76.43562317 155.11326599]
[59.61925507 155.33345032]
[49.62108231 166.51542664]
[39.62290955 177.69740295]
[29.62473869 188.87937927]
[19.62656593 200.06135559]
[9.62839508 211.24331665]
[-0.36977732 222.42529297]
[-10.36794949 233.60726929]
[-13.79849625 249.05207825]
[-28.04967880 253.38255310]
[-29.77328682 259.76541138]
[-33.84968185 263.72518921]
[-38.51586533 264.74291992]
[-48.84253693 275.62225342]
[-52.48079681 284.00085449]
[-59.40486145 286.58523560]
[-69.89236450 297.30963135]
[-80.37986755 308.03399658]
[-90.86736298 318.75839233]
[-101.35486603 329.48275757]
[-111.84236908 340.20715332]
[-122.32987213 350.93151855]
[-112.81387329 362.54656982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 209]
[55 208]
[56 207]
[57 206]
[58 205]
[59 204]
[60 203]
[61 201]
[62 200]
[63 197]
[65 195]
[66 194]
[67 193]
[68 192]
[69 191]
[70 190]
[71 189]
[72 188]
[76 185]
[77 184]
[79 182]
[80 181]
[81 180]
[82 179]
[83 171]
[84 170]
[86 168]
[87 167]
[88 166]
[89 165]
[91 164]
[92 163]
[93 160]
[94 159]
[95 158]
[96 157]
[97 156]
[98 154]
[99 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
