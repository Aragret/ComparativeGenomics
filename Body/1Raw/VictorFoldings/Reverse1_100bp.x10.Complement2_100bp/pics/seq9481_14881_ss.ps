%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAUCGCCCCACUACGGACAACCCCCGGUCACGGGAGGAUUAACCCCCCAUCCCCGAUCCGACCUCACCAUUUUCCGAGUCUUUUUAGGACGCUUCUUUxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[79.87962341 609.10095215]
[81.97650146 594.19830322]
[86.94074249 579.99114990]
[94.58153534 567.02563477]
[104.60517883 555.80010986]
[116.62640381 546.74603271]
[130.18313599 540.21142578]
[126.42683411 525.68939209]
[116.16648102 519.28222656]
[112.91819000 507.21438599]
[118.95000458 495.81350708]
[115.41033173 481.23715210]
[111.87065887 466.66076660]
[108.33098602 452.08438110]
[104.79131317 437.50802612]
[101.25164032 422.93164062]
[97.71197510 408.35525513]
[89.98294067 421.21069336]
[75.84025574 426.20913696]
[61.74976730 421.06539917]
[54.15345764 408.13110352]
[56.52425385 393.31964111]
[67.77825928 383.40261841]
[82.77030182 382.91397095]
[94.64720917 392.07864380]
[92.64319611 377.21310425]
[90.63918304 362.34759521]
[88.63516998 347.48205566]
[79.26685333 335.90258789]
[85.09107971 321.19241333]
[78.71909332 334.77172852]
[67.14113617 344.30856323]
[52.59272766 347.96145630]
[37.88293076 345.02514648]
[25.85198593 336.06655884]
[18.82287407 322.81546021]
[18.15280914 307.83044434]
[23.97117043 294.00485229]
[35.15452194 284.00820923]
[49.54353333 279.77072144]
[64.35991669 282.11056519]
[76.74285126 290.57595825]
[84.30178070 303.53359985]
[84.97156525 288.54855347]
[85.64134979 273.56350708]
[72.08154297 267.31362915]
[61.92008591 256.31863403]
[56.72829819 242.23281860]
[57.32654572 227.19187927]
[63.65478134 213.48907471]
[74.77695465 203.22552490]
[89.01934052 197.98814392]
[89.68912506 183.00309753]
[90.35890961 168.01806641]
[90.91712189 153.02845764]
[91.36372375 138.03509521]
[91.81033325 123.04174805]
[92.25693512 108.04840088]
[92.59191132 93.05213928]
[92.81523895 78.05380249]
[93.03856659 63.05546570]
[93.26189423 48.05712891]
[93.15023041 33.05754471]
[92.70362091 18.06419563]
[92.25701904 3.07084584]
[91.58723450 -11.91419315]
[90.69441223 -26.88759804]
[89.80159760 -41.86100388]
[81.25661469 -55.17617798]
[88.22265625 -68.34141541]
[87.32984161 -83.31481934]
[73.69824219 -90.25217438]
[65.42394257 -102.99707794]
[64.64511108 -118.07221985]
[71.47090912 -131.42379761]
[83.97901154 -139.51161194]
[83.08618927 -154.48503113]
[82.19337463 -169.45843506]
[81.30056000 -184.43183899]
[72.75557709 -197.74700928]
[79.72161865 -210.91224670]
[78.82880402 -225.88565063]
[77.93598938 -240.85905457]
[77.04317474 -255.83245850]
[68.49819183 -269.14764404]
[75.46423340 -282.31286621]
[74.57141113 -297.28628540]
[73.67859650 -312.25970459]
[72.78578186 -327.23309326]
[71.89296722 -342.20651245]
[71.00015259 -357.17990112]
[70.10733795 -372.15332031]
[69.21451569 -387.12670898]
[68.32170105 -402.10012817]
[53.67683411 -405.89260864]
[40.92176437 -414.02670288]
[31.30611420 -425.70550537]
[25.77192116 -439.78485107]
[24.86137009 -454.88537598]
[28.66366768 -469.52770996]
[36.80630493 -482.27731323]
[48.49154663 -491.88513184]
[62.57459641 -497.40991211]
[77.67573547 -498.31033325]
[92.31550598 -494.49822998]
[105.05966187 -486.34704590]
[114.65966034 -474.65536499]
[120.17498016 -460.56863403]
[121.06529236 -445.46688843]
[117.24337006 -430.82965088]
[109.08365631 -418.09097290]
[97.38555145 -408.49880981]
[83.29511261 -402.99295044]
[84.18792725 -388.01953125]
[85.08074188 -373.04614258]
[85.97355652 -358.07272339]
[86.86637115 -343.09930420]
[87.75918579 -328.12591553]
[88.65200806 -313.15249634]
[89.54482269 -298.17910767]
[90.43763733 -283.20568848]
[98.91876221 -270.96151733]
[92.01657867 -256.72528076]
[92.90939331 -241.75187683]
[93.80220795 -226.77847290]
[94.69502258 -211.80506897]
[103.17614746 -199.56088257]
[96.27396393 -185.32464600]
[97.16678619 -170.35124207]
[98.05960083 -155.37783813]
[98.95241547 -140.40443420]
[112.33297729 -133.86026001]
[120.69699097 -121.41441345]
[121.71507263 -106.35353851]
[115.01388550 -92.71569061]
[102.30324554 -84.20764160]
[103.19606781 -69.23423004]
[111.67718506 -56.99005890]
[104.77500916 -42.75381851]
[105.66782379 -27.78041458]
[106.56063843 -12.80700874]
[109.47470093 -9.02319336]
[110.04273987 -3.36860561]
[107.25036621 2.62423992]
[107.69697571 17.61758995]
[108.14357758 32.61093903]
[110.44538879 35.28189468]
[111.56786346 39.20045471]
[110.93869781 43.80017853]
[108.26023102 48.28045654]
[108.03690338 63.27879333]
[107.81357574 78.27713013]
[107.59024811 93.27546692]
[110.62862396 100.74144745]
[107.25028992 108.49501038]
[106.80368042 123.48835754]
[106.35707092 138.48170471]
[105.91046906 153.47505188]
[108.78298187 162.14607239]
[105.34394836 168.68785095]
[104.67416382 183.67288208]
[104.00437927 198.65792847]
[117.72270966 205.14506531]
[127.88485718 216.35995483]
[132.96536255 230.57270813]
[132.21932983 245.60704041]
[125.79157257 259.17349243]
[114.68971252 269.21810913]
[100.62638855 274.23330688]
[99.95660400 289.21832275]
[99.28681946 304.20336914]
[99.95660400 319.18841553]
[109.46825409 331.83114624]
[103.50069427 345.47802734]
[105.50470734 360.34356689]
[107.50872040 375.20910645]
[109.51273346 390.07461548]
[112.28834534 404.81558228]
[115.82801819 419.39196777]
[119.36769104 433.96835327]
[122.90736389 448.54470825]
[126.44703674 463.12109375]
[129.98670959 477.69747925]
[133.52638245 492.27383423]
[146.54240417 505.29937744]
[140.94889832 521.93304443]
[144.70520020 536.45513916]
[159.73016357 535.59674072]
[174.63383484 537.68640137]
[188.84336853 542.64373779]
[201.81259155 550.27819824]
[213.04299927 560.29644775]
[222.10292053 572.31323242]
[228.64411926 585.86682129]
[232.41516113 600.43615723]
[233.27110291 615.46124268]
[231.17904663 630.36456299]
[226.21940613 644.57330322]
[218.58282471 657.54132080]
[208.56280518 668.77008057]
[196.54450989 677.82806396]
[182.98989868 684.36706543]
[168.41995239 688.13574219]
[153.39471436 688.98925781]
[138.49171448 686.89477539]
[124.28378296 681.93286133]
[111.31703186 674.29418945]
[100.08986664 664.27233887]
[91.03383636 652.25256348]
[84.49703217 638.69689941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 187]
[8 186]
[11 184]
[12 183]
[13 182]
[14 181]
[15 180]
[16 179]
[17 178]
[25 177]
[26 176]
[27 175]
[28 174]
[30 172]
[43 171]
[44 170]
[45 169]
[52 162]
[53 161]
[54 160]
[55 158]
[56 157]
[57 156]
[58 155]
[59 153]
[60 152]
[61 151]
[62 150]
[63 146]
[64 145]
[65 144]
[66 141]
[67 140]
[68 139]
[70 137]
[71 136]
[76 131]
[77 130]
[78 129]
[79 128]
[81 126]
[82 125]
[83 124]
[84 123]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
