%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[136.55975342 707.70141602]
[122.82619476 713.84179688]
[108.19812775 717.35382080]
[93.17378998 718.11791992]
[78.26489258 716.10803223]
[63.97924042 711.39270020]
[50.80338669 704.13238525]
[39.18609619 694.57452393]
[29.52305794 683.04455566]
[22.14338303 669.93518066]
[17.29842567 655.69299316]
[15.15320015 640.80297852]
[15.78077316 625.77227783]
[19.15977097 611.11291504]
[25.17510414 597.32415771]
[33.62189484 584.87561035]
[44.21244431 574.19128418]
[56.58604813 565.63507080]
[70.32126617 559.49841309]
[84.95027161 555.99029541]
[99.97481537 555.23028564]
[101.97882843 540.36474609]
[103.98284149 525.49920654]
[105.98685455 510.63366699]
[107.99087524 495.76815796]
[98.78420258 484.11599731]
[100.60478973 469.01168823]
[112.88907623 459.43389893]
[114.89308929 444.56835938]
[116.89710236 429.70281982]
[118.90111542 414.83731079]
[111.81882477 405.03079224]
[113.36674500 392.62966919]
[123.25626373 384.34954834]
[125.48137665 369.51550293]
[127.70649719 354.68145752]
[129.93161011 339.84744263]
[132.15673828 325.01339722]
[134.38185120 310.17935181]
[134.27018738 295.17974854]
[131.82444763 280.38049316]
[129.37872314 265.58120728]
[126.38394928 250.88320923]
[122.84427643 236.30683899]
[119.30461121 221.73045349]
[115.76493835 207.15408325]
[112.22526550 192.57771301]
[108.68559265 178.00132751]
[105.14591980 163.42495728]
[102.34120178 161.28816223]
[100.43212128 157.68670654]
[100.09579468 153.05635071]
[101.78913116 148.11877441]
[98.90385437 133.39888000]
[96.01858521 118.67898560]
[84.05237579 110.50854492]
[81.26529694 96.28960419]
[89.26152802 84.20628357]
[86.37625122 69.48639679]
[83.49098206 54.76650238]
[80.60570526 40.04661179]
[77.72043610 25.32671928]
[74.61632538 10.65141678]
[71.29406738 -3.97604299]
[67.97180939 -18.60350418]
[53.15184784 -22.08634377]
[41.36174393 -31.61946678]
[34.90631866 -45.27038956]
[35.01753998 -60.30862808]
[41.61979294 -73.75183105]
[53.35548019 -82.95722198]
[50.03321838 -97.58467865]
[43.55202103 -84.05715179]
[30.84237671 -76.09066010]
[15.84250832 -76.15371704]
[3.20028996 -84.22677612]
[-3.16695070 -97.80831909]
[-1.28625488 -112.68994904]
[8.25962353 -124.26043701]
[22.51279068 -128.93453979]
[37.05674744 -125.26393890]
[47.38500595 -114.38577271]
[46.04677200 -129.32595825]
[37.10913467 -142.38081360]
[43.68011093 -155.74761963]
[42.34187698 -170.68780518]
[41.00364304 -185.62799072]
[32.06600571 -198.68284607]
[38.63698196 -212.04965210]
[37.29874802 -226.98983765]
[35.96051407 -241.93002319]
[21.09403801 -244.50885010]
[7.40198660 -250.84841919]
[-4.18209696 -260.51647949]
[-12.86839008 -272.85385132]
[-18.06464767 -287.01934814]
[-19.41657829 -302.04714966]
[-16.83200645 -316.91262817]
[-10.48715210 -330.60223389]
[-0.81461889 -342.18258667]
[11.52610493 -350.86410522]
[25.69360733 -356.05490112]
[40.72192764 -357.40103149]
[55.58640289 -354.81069946]
[69.27355957 -348.46057129]
[80.85017395 -338.78356934]
[89.52693176 -326.43948364]
[94.71224976 -312.26998901]
[96.05257416 -297.24114990]
[93.45652771 -282.37768555]
[87.10110474 -268.69296265]
[77.41963196 -257.12008667]
[65.07220459 -248.44810486]
[50.90069580 -243.26824951]
[52.23893356 -228.32806396]
[53.57716751 -213.38787842]
[62.41908264 -201.40165710]
[55.94382858 -186.96621704]
[57.28206253 -172.02603149]
[58.62029648 -157.08584595]
[67.46221161 -145.09962463]
[60.98695755 -130.66418457]
[62.32519150 -115.72400665]
[64.66068268 -100.90693665]
[67.98294067 -86.27947998]
[82.54364777 -83.04665375]
[94.30516815 -73.77432251]
[100.90148926 -60.25953293]
[100.97615051 -45.15937805]
[94.46076202 -31.46862411]
[82.59926605 -21.92576218]
[85.92152405 -7.29830265]
[89.24378204 7.32915783]
[92.73580170 10.58720398]
[94.21820831 16.07350540]
[92.44033051 22.44144630]
[95.32559967 37.16133881]
[98.21086884 51.88122940]
[101.09614563 66.60112000]
[103.98141479 81.32101440]
[115.94762421 89.49145508]
[118.73470306 103.71039581]
[110.73847198 115.79371643]
[113.62374878 130.51361084]
[116.50901794 145.23350525]
[119.72229004 159.88528442]
[123.26196289 174.46165466]
[126.80163574 189.03804016]
[130.34130859 203.61441040]
[133.88098145 218.19078064]
[137.42065430 232.76716614]
[140.96032715 247.34353638]
[150.87475586 236.08724976]
[165.86351013 236.66787720]
[174.87744141 248.65742493]
[171.27182007 263.21762085]
[157.70455933 269.61523438]
[144.17799377 263.13549805]
[146.62371826 277.93475342]
[149.06945801 292.73403931]
[153.56532288 278.42364502]
[161.70903015 265.82681274]
[172.91267395 255.85292053]
[186.36743164 249.22198486]
[201.10202026 246.41270447]
[216.05271912 247.62786865]
[230.14022827 252.77976990]
[242.34756470 261.49649048]
[251.79345703 273.14874268]
[257.79602051 286.89535522]
[259.92187500 301.74395752]
[258.01763916 316.62258911]
[252.22068787 330.45715332]
[242.94956970 342.24896240]
[230.87356567 351.14669800]
[216.86442566 356.50805664]
[201.93351746 357.94601440]
[187.15867615 355.35671997]
[173.60655212 348.92712402]
[162.25544739 339.12136841]
[153.92483521 326.64736938]
[149.21589661 312.40444946]
[146.99076843 327.23849487]
[144.76565552 342.07254028]
[142.54054260 356.90658569]
[140.31542969 371.74063110]
[138.09030151 386.57467651]
[145.22578430 403.55014038]
[133.76664734 416.84130859]
[131.76263428 431.70684814]
[129.75862122 446.57235718]
[127.75460052 461.43789673]
[137.06408691 473.92672729]
[134.81997681 488.97393799]
[122.85639954 497.77215576]
[120.85238647 512.63769531]
[118.84837341 527.50323486]
[116.84436035 542.36877441]
[114.84034729 557.23425293]
[129.12727356 561.94580078]
[142.30508423 569.20251465]
[153.92494202 578.75726318]
[163.59109497 590.28466797]
[170.97430420 603.39196777]
[175.82310486 617.63293457]
[177.97233582 632.52233887]
[177.34881592 647.55316162]
[173.97377014 662.21343994]
[167.96215820 676.00384521]
[159.51872253 688.45471191]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 199]
[22 198]
[23 197]
[24 196]
[25 195]
[28 192]
[29 191]
[30 190]
[31 189]
[34 187]
[35 186]
[36 185]
[37 184]
[38 183]
[39 182]
[40 160]
[41 159]
[42 158]
[43 152]
[44 151]
[45 150]
[46 149]
[47 148]
[48 147]
[49 146]
[53 145]
[54 144]
[55 143]
[58 140]
[59 139]
[60 138]
[61 137]
[62 136]
[63 133]
[64 132]
[65 131]
[71 125]
[72 124]
[82 123]
[83 122]
[85 120]
[86 119]
[87 118]
[89 116]
[90 115]
[91 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
