%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[9.10977077 618.84289551]
[-5.80714273 616.76928711]
[-19.92938995 611.53704834]
[-32.59644699 603.39093018]
[-43.21585464 592.71185303]
[-51.29092407 579.99938965]
[-56.44396591 565.84802246]
[-58.43396759 550.91973877]
[-57.16785049 535.91271973]
[-52.70483398 521.52886963]
[-45.25365829 508.44091797]
[-35.16283417 497.26104736]
[-22.90432549 488.51217651]
[-9.05148315 482.60345459]
[5.74776936 479.81130981]
[6.19437504 464.81796265]
[6.64098120 449.82458496]
[7.08758688 434.83123779]
[-0.26734471 421.87924194]
[7.87740803 408.31555176]
[8.32401371 393.32220459]
[8.77061939 378.32885742]
[9.21722603 363.33551025]
[9.66383171 348.34216309]
[10.11043739 333.34881592]
[10.55704308 318.35546875]
[3.33091307 331.50015259]
[-7.26509905 342.11734009]
[-20.39534760 349.36968994]
[-35.02432632 352.68527222]
[-49.99833298 351.80258179]
[-64.13645172 346.79122925]
[-76.32369995 338.04644775]
[-85.59893036 326.25790405]
[-91.23066711 312.35525513]
[-92.77476501 297.43493652]
[-90.10944366 282.67364502]
[-83.44491577 269.23547363]
[-73.30676270 258.18026733]
[-60.49452591 250.37983704]
[-46.01862717 246.44938660]
[-31.02070427 246.69888306]
[-16.68354797 251.10864258]
[-4.13785172 259.33090210]
[5.62698174 270.71719360]
[11.84085560 284.36959839]
[14.01373291 299.21484375]
[18.83973122 285.01239014]
[23.66572952 270.80993652]
[28.49172592 256.60748291]
[24.15086746 239.60385132]
[38.09963226 227.58247375]
[42.71364212 213.30973816]
[47.32765198 199.03700256]
[34.45832062 206.74287415]
[19.50763512 205.52755737]
[8.05183029 195.84434509]
[4.36363745 181.30484009]
[9.81866264 167.33190918]
[22.38231468 159.13711548]
[37.36866379 159.77691650]
[49.18817139 169.01268005]
[53.43242645 183.40084839]
[59.70978928 169.77754211]
[65.98714447 156.15422058]
[72.26451111 142.53091431]
[78.54187012 128.90759277]
[84.81922913 115.28427124]
[91.09658813 101.66095734]
[90.28733063 97.89035034]
[91.14402008 93.78134155]
[93.78054047 90.08596802]
[97.97050476 87.57917023]
[104.84991455 74.24974060]
[111.72933197 60.92031479]
[118.60874176 47.59088516]
[125.48815918 34.26145554]
[132.36756897 20.93202591]
[139.24697876 7.60259724]
[143.96711731 -6.63539171]
[146.41284180 -21.43466187]
[148.74833679 -36.25173187]
[150.97344971 -51.08577347]
[141.77395630 -60.92365646]
[139.94686890 -74.07174683]
[145.93728638 -85.69916534]
[157.35902405 -91.66352844]
[159.80474854 -106.46279907]
[162.25047302 -121.26206970]
[164.03294373 -136.15579224]
[165.14859009 -151.11424255]
[166.26423645 -166.07269287]
[167.37988281 -181.03114319]
[168.49552917 -195.98960876]
[169.61119080 -210.94805908]
[155.24447632 -215.49717712]
[142.31443787 -223.23738098]
[131.51837158 -233.75125122]
[123.43848419 -246.47180176]
[118.51051331 -260.71301270]
[117.00023651 -275.70684814]
[118.98908234 -290.64477539]
[124.36980438 -304.72116089]
[132.85221863 -317.17687988]
[143.97889709 -327.34024048]
[157.14978027 -334.66314697]
[171.65457153 -338.75064087]
[186.71104431 -339.38232422]
[201.50724792 -336.52413940]
[215.24522400 -330.33020020]
[227.18408203 -321.13455200]
[236.68000793 -309.43307495]
[243.22088623 -295.85687256]
[246.45397949 -281.13803101]
[246.20491028 -266.07037354]
[242.48713684 -251.46643066]
[235.50112915 -238.11381531]
[225.62365723 -226.73258972]
[213.38739014 -217.93653870]
[199.45220947 -212.20002747]
[184.56964111 -209.83241272]
[183.45399475 -194.87394714]
[182.33834839 -179.91549683]
[181.22268677 -164.95704651]
[180.10704041 -149.99859619]
[178.99139404 -135.04014587]
[191.03462219 -143.98220825]
[205.89300537 -141.92587280]
[215.05497742 -130.04907227]
[213.27215576 -115.15540314]
[201.56581116 -105.77661896]
[186.64187622 -107.28531647]
[177.04974365 -118.81634521]
[174.60401917 -104.01707458]
[172.15829468 -89.21780396]
[182.52740479 -75.97694397]
[180.06332397 -58.99922180]
[165.80749512 -48.86065674]
[163.58236694 -34.02661133]
[165.69886780 -26.94549561]
[161.21211243 -18.98893547]
[158.76638794 -4.18966436]
[167.62734985 -16.29269791]
[179.39086914 -25.59965324]
[193.20774841 -31.43865776]
[208.08052063 -33.38818359]
[222.93551636 -31.30749512]
[236.70031738 -25.34679985]
[248.38127136 -15.93640518]
[257.13507080 -3.75565434]
[262.32983398 10.31611347]
[263.59048462 25.26304436]
[260.82604980 40.00610733]
[254.23608398 53.48098755]
[244.29632568 64.71492004]
[231.72434998 72.89691925]
[217.42770386 77.43632507]
[202.43850708 78.00542450]
[187.83882141 74.56313324]
[174.68263245 67.35796356]
[163.91967773 56.91005707]
[156.32695007 43.97365570]
[152.45257568 29.48265076]
[152.57641602 14.48200989]
[145.69699097 27.81143951]
[138.81758118 41.14086914]
[131.93817139 54.47029877]
[125.05876160 67.79972839]
[118.17934418 81.12915802]
[111.29993439 94.45858765]
[104.71990967 107.93831635]
[98.44254303 121.56163788]
[92.16518402 135.18495178]
[85.88782501 148.80827332]
[79.61046600 162.43157959]
[73.33310699 176.05490112]
[67.05574036 189.67822266]
[61.60038757 203.65101624]
[56.98637772 217.92375183]
[52.37236786 232.19648743]
[57.53951645 244.01440430]
[53.40266418 255.80720520]
[42.69418335 261.43347168]
[37.86818314 275.63595581]
[33.04218674 289.83840942]
[28.21618843 304.04086304]
[25.55039406 318.80206299]
[25.10378838 333.79541016]
[24.65718079 348.78875732]
[24.21057510 363.78213501]
[23.76396942 378.77548218]
[23.31736374 393.76882935]
[22.87075806 408.76217651]
[30.19374466 422.78659058]
[22.08093643 435.27786255]
[21.63433075 450.27120972]
[21.18772507 465.26455688]
[20.74111938 480.25790405]
[35.34793854 483.92599487]
[48.82452774 490.64877319]
[60.54056168 500.11178589]
[69.94805908 511.87243652]
[76.60700989 525.38067627]
[80.20597839 540.00469971]
[80.57661438 555.06048584]
[77.70159149 569.84381104]
[71.71538544 583.66339111]
[62.89797211 595.87268066]
[51.66176224 605.90069580]
[38.53229523 613.27844238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 198]
[16 197]
[17 196]
[18 195]
[20 193]
[21 192]
[22 191]
[23 190]
[24 189]
[25 188]
[26 187]
[47 186]
[48 185]
[49 184]
[50 183]
[52 180]
[53 179]
[54 178]
[63 177]
[64 176]
[65 175]
[66 174]
[67 173]
[68 172]
[69 171]
[73 170]
[74 169]
[75 168]
[76 167]
[77 166]
[78 165]
[79 164]
[80 142]
[81 141]
[82 139]
[83 138]
[87 135]
[88 134]
[89 133]
[90 126]
[91 125]
[92 124]
[93 123]
[94 122]
[95 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
