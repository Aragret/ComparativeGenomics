%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[93.12255096 583.28143311]
[79.12316132 577.80303955]
[66.18392944 570.14971924]
[54.64001465 560.51989746]
[44.79043579 549.16284180]
[36.89031601 536.37286377]
[31.14428711 522.48114014]
[27.70118904 507.84759521]
[26.65020370 492.85119629]
[28.01855469 477.88043213]
[31.77079773 463.32308960]
[37.80974197 449.55618286]
[45.97896194 436.93637085]
[56.06686020 425.79049683]
[67.81212616 416.40725708]
[80.91054535 409.02975464]
[95.02281952 403.84902954]
[109.78341675 400.99929810]
[109.33681488 386.00595093]
[108.89020538 371.01260376]
[97.90687561 361.01751709]
[97.24036407 345.81848145]
[107.79861450 334.36593628]
[107.35200500 319.37258911]
[106.90540314 304.37921143]
[106.45879364 289.38586426]
[105.78900909 274.40084839]
[104.78475189 259.43447876]
[103.66910553 244.47604370]
[102.33087158 229.53585815]
[100.77034760 214.61724854]
[99.20982361 199.69863892]
[97.64929962 184.78004456]
[96.08877563 169.86143494]
[93.99857330 167.99349976]
[92.52234650 165.18505859]
[92.02201843 161.66580200]
[92.76976776 157.79212952]
[94.90669250 154.01223755]
[86.60881042 141.64315796]
[93.72218323 127.51126099]
[93.05239868 112.52622223]
[85.69034576 100.63959503]
[91.96256256 88.14356232]
[91.29277802 73.15852356]
[90.62299347 58.17348862]
[89.95320892 43.18844986]
[86.44373322 34.75510025]
[89.38668823 27.97566032]
[88.94007874 12.98230934]
[88.49347687 -2.01104021]
[88.04686737 -17.00439072]
[87.60026550 -31.99773979]
[72.53292847 -37.60877609]
[60.80060196 -48.54600906]
[54.17962646 -63.11304092]
[53.65690994 -79.06705475]
[59.28292847 -93.96412659]
[70.16853333 -105.53359985]
[84.62532043 -112.02416229]
[83.95552826 -127.00920105]
[83.28574371 -141.99423218]
[82.61595917 -156.97927856]
[81.94617462 -171.96430969]
[81.27639008 -186.94935608]
[77.76691437 -195.38270569]
[80.70986938 -202.16213989]
[80.26325989 -217.15548706]
[78.92502594 -232.09567261]
[76.69991302 -246.92971802]
[74.47479248 -261.76376343]
[72.24967957 -276.59780884]
[67.88188171 -284.62030029]
[70.10356903 -291.66909790]
[68.09955597 -306.53463745]
[61.72757339 -292.95532227]
[50.14961624 -283.41851807]
[35.60120392 -279.76559448]
[20.89141083 -282.70190430]
[8.86046505 -291.66049194]
[1.83135402 -304.91159058]
[1.16128898 -319.89663696]
[6.97964907 -333.72219849]
[18.16300011 -343.71884155]
[32.55201340 -347.95632935]
[47.36839294 -345.61648560]
[59.75133133 -337.15109253]
[67.31025696 -324.19348145]
[67.98004150 -339.17852783]
[68.64982605 -354.16354370]
[69.31961823 -369.14859009]
[69.87782288 -384.13821411]
[70.32443237 -399.13156128]
[70.77103424 -414.12490845]
[56.24548340 -418.15872192]
[43.10771942 -425.55212402]
[32.12155151 -435.87530518]
[23.92570686 -448.52801514]
[18.99667931 -462.77471924]
[17.62103653 -477.78707886]
[19.87875748 -492.69232178]
[25.63857841 -506.62387085]
[34.56563187 -518.77172852]
[46.14091110 -528.42968750]
[59.69144821 -535.03625488]
[74.42942810 -538.20727539]
[89.49800110 -537.75842285]
[104.02110291 -533.71582031]
[117.15438843 -526.31445312]
[128.13429260 -515.98461914]
[136.32246399 -503.32693481]
[141.24285889 -489.07723999]
[142.60939026 -474.06405640]
[140.34263611 -459.16018677]
[134.57437134 -445.23214722]
[125.63995361 -433.08966064]
[114.05882263 -423.43872070]
[100.50428772 -416.84039307]
[85.76438904 -413.67828369]
[85.31777954 -398.68493652]
[84.87117767 -383.69158936]
[87.81413269 -376.91217041]
[84.30465698 -368.47882080]
[83.63486481 -353.49377441]
[82.96508026 -338.50872803]
[82.29529572 -323.52368164]
[82.96508026 -308.53866577]
[84.96909332 -293.67312622]
[87.08371735 -278.82293701]
[89.30883789 -263.98889160]
[91.53395844 -249.15484619]
[93.75907135 -234.32080078]
[101.84996033 -246.95161438]
[115.77741241 -252.52171326]
[130.34684753 -248.95356750]
[140.12422180 -237.57801819]
[141.46281433 -222.63786316]
[133.86335754 -209.70541382]
[120.16027069 -203.60414124]
[105.46446228 -206.60968018]
[95.25661469 -217.60209656]
[95.70321655 -202.60874939]
[96.26142883 -187.61914062]
[96.93121338 -172.63409424]
[97.60099792 -157.64906311]
[98.27078247 -142.66401672]
[98.94056702 -127.67898560]
[99.61035919 -112.69394684]
[112.97515106 -108.41357422]
[124.09980774 -99.81005859]
[131.63555908 -87.90072632]
[134.65995789 -74.10524750]
[132.78979492 -60.07637787]
[126.22953033 -47.50196075]
[115.74908447 -37.90188217]
[102.59361267 -32.44434738]
[103.04022217 -17.45099640]
[103.48682404 -2.45764613]
[103.93343353 12.53570366]
[104.38003540 27.52905464]
[104.93824768 42.51866531]
[105.60803223 57.50370407]
[106.27781677 72.48873901]
[106.94760132 87.47377777]
[114.30965424 99.36040497]
[108.03743744 111.85643768]
[108.70722198 126.84147644]
[117.05300903 140.28239441]
[109.89173126 153.34245300]
[111.00737762 168.30091858]
[112.56790161 183.21951294]
[114.12842560 198.13812256]
[115.68894958 213.05673218]
[117.24947357 227.97532654]
[120.81745911 233.54138184]
[121.00997925 239.22117615]
[118.62755585 243.36039734]
[119.74320221 258.31884766]
[123.50222015 266.64395142]
[120.76241302 273.50802612]
[124.07830811 279.22784424]
[124.01701355 284.91055298]
[121.45214844 288.93927002]
[121.89875031 303.93261719]
[122.34535980 318.92596436]
[122.79196167 333.91931152]
[134.01316833 344.72314453]
[134.25250244 359.93487549]
[123.88355255 370.56600952]
[124.33016205 385.55935669]
[124.77677155 400.55270386]
[139.68081665 402.51879883]
[154.07643127 406.85037231]
[167.59074402 413.43518066]
[179.87368774 422.10266113]
[190.60711670 432.62832642]
[199.51300049 444.73953247]
[206.36065674 458.12258911]
[210.97271729 472.43078613]
[213.22972107 487.29357910]
[213.07319641 502.32592773]
[210.50720215 517.13848877]
[205.59820557 531.34759521]
[198.47337341 544.58514404]
[189.31723022 556.50823975]
[178.36697388 566.80816650]
[165.90620422 575.21801758]
[152.25772095 581.51995850]
[137.77502441 585.55084229]
[122.83327484 587.20617676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 191]
[19 190]
[20 189]
[23 186]
[24 185]
[25 184]
[26 183]
[27 180]
[28 178]
[29 177]
[30 174]
[31 173]
[32 172]
[33 171]
[34 170]
[39 169]
[41 167]
[42 166]
[44 164]
[45 163]
[46 162]
[47 161]
[49 160]
[50 159]
[51 158]
[52 157]
[53 156]
[60 148]
[61 147]
[62 146]
[63 145]
[64 144]
[65 143]
[67 142]
[68 141]
[69 132]
[70 131]
[71 130]
[72 129]
[74 128]
[75 127]
[88 126]
[89 125]
[90 124]
[91 123]
[92 121]
[93 120]
[94 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
