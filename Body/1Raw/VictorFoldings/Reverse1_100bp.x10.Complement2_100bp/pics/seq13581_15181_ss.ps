%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[105.20607758 570.11511230]
[92.64691162 578.60290527]
[77.94139862 582.28039551]
[62.86529541 580.70336914]
[49.23911667 574.06237793]
[38.70829010 563.15924072]
[32.54446411 549.31066895]
[31.49195290 534.18890381]
[35.67784882 519.61999512]
[44.59668350 507.36312866]
[57.17147064 498.89846802]
[71.88373566 495.24810791]
[73.44425964 480.32952881]
[75.00478363 465.41091919]
[76.56530762 450.49230957]
[65.56920624 460.69454956]
[50.69065475 462.59945679]
[37.47897720 455.49652100]
[30.86180687 442.03497314]
[33.30718231 427.23565674]
[43.90303802 416.61831665]
[58.69738770 414.14297485]
[72.17229462 420.73287964]
[79.30217743 433.93130493]
[82.62443542 419.30383301]
[85.94670105 404.67639160]
[89.26895905 390.04891968]
[92.59121704 375.42144775]
[95.91347504 360.79400635]
[99.23573303 346.16653442]
[102.55799866 331.53909302]
[105.88025665 316.91162109]
[109.20251465 302.28414917]
[112.52477264 287.65670776]
[114.52878571 272.79116821]
[107.36750793 259.73110962]
[115.71330261 246.29019165]
[116.38308716 231.30514526]
[117.05287170 216.32011414]
[116.04860687 201.35375977]
[113.38281250 186.59254456]
[110.27870178 171.91723633]
[106.73902893 157.34086609]
[103.19935608 142.76449585]
[99.55126953 128.21487427]
[95.79496765 113.69281006]
[86.13245392 103.58700562]
[89.68296814 90.06348419]
[85.92666626 75.54142761]
[81.84700012 61.10687637]
[77.44600677 46.76702881]
[73.04500580 32.42718124]
[59.36346817 24.98048782]
[55.10450363 10.37514973]
[62.28810501 -2.62221551]
[57.88710785 -16.96206284]
[53.48610687 -31.30191040]
[48.97848129 -45.60859680]
[44.36447144 -59.88132858]
[41.65098572 -45.12880325]
[34.35186005 -32.02450180]
[23.23737907 -21.95135307]
[9.48048592 -15.97239876]
[-5.46702242 -14.71861362]
[-20.02770042 -18.32231140]
[-32.66492462 -26.40318680]
[-42.04505920 -38.10844421]
[-47.17819595 -52.20280075]
[-47.52262497 -67.19884491]
[-43.04199219 -81.51401520]
[-34.20915604 -93.63758087]
[-21.95626068 -102.29013062]
[-7.57638693 -106.55853271]
[7.41292334 -105.99233246]
[21.42981148 -100.65127563]
[32.99504471 -91.09902954]
[40.88818741 -78.34348297]
[39.99537277 -93.31689453]
[29.50144386 -108.44828033]
[37.96204376 -123.82310486]
[36.84639359 -138.78155518]
[35.73074722 -153.74000549]
[34.61509705 -168.69847107]
[21.15282059 -179.86924744]
[19.95830917 -196.98321533]
[31.28351212 -209.41618347]
[29.94527817 -224.35636902]
[28.60704422 -239.29655457]
[27.26881027 -254.23674011]
[25.93057632 -269.17691040]
[24.59234047 -284.11709595]
[15.65470409 -297.17196655]
[22.22567940 -310.53875732]
[7.47438478 -313.89355469]
[-5.51721001 -321.64425659]
[-15.47632027 -333.03158569]
[-21.42725563 -346.93991089]
[-22.78700066 -362.00665283]
[-19.42234421 -376.75567627]
[-11.66292191 -389.74209595]
[-0.26892027 -399.69357300]
[13.64339161 -405.63519287]
[28.71102715 -406.98483276]
[43.45781326 -403.61029053]
[56.43900681 -395.84216309]
[66.38285065 -384.44149780]
[72.31513977 -370.52520752]
[73.65469360 -355.45666504]
[70.27027130 -340.71215820]
[62.49345398 -327.73617554]
[51.08612442 -317.79995728]
[37.16586304 -311.87701416]
[46.00778198 -299.89077759]
[39.53252792 -285.45535278]
[40.87076187 -270.51516724]
[42.20899582 -255.57496643]
[43.54722977 -240.63478088]
[44.88546371 -225.69459534]
[46.22369766 -210.75440979]
[57.17018127 -203.95706177]
[62.27920151 -191.91630554]
[59.47927094 -178.94052124]
[49.57355118 -169.81411743]
[50.68920135 -154.85566711]
[51.80484772 -139.89720154]
[52.92049789 -124.93875122]
[61.87884521 -116.81012726]
[62.93073273 -104.35712433]
[54.96877670 -94.20970917]
[55.86159134 -79.23630524]
[58.63720322 -64.49533844]
[63.25121307 -50.22260666]
[68.29978180 -44.82503891]
[67.82595825 -35.70290756]
[72.22695160 -21.36306000]
[76.62795258 -7.02321339]
[89.86596680 -0.29338157]
[94.53347778 14.18656826]
[87.38484955 28.02618217]
[91.78585052 42.36603165]
[96.18685150 56.70587921]
[99.11377716 58.67194748]
[101.23383331 62.15338516]
[101.84516907 66.75550842]
[100.44873047 71.78512573]
[104.20503235 86.30718994]
[113.86754608 96.41299438]
[110.31703186 109.93651581]
[114.07333374 124.45857239]
[119.25204468 131.98310852]
[117.77573395 139.22482300]
[121.31540680 153.80119324]
[124.85507965 168.37757874]
[127.96215820 171.41072083]
[129.76145935 174.92170715]
[130.26336670 178.44073486]
[129.62974548 181.54960632]
[128.14402771 183.92675781]
[130.80982971 198.68797302]
[135.79814148 184.54170227]
[145.50436401 173.10539246]
[158.65148926 165.88368225]
[173.50978088 163.82670593]
[188.12437439 167.20510864]
[200.57247925 175.57438660]
[209.21630859 187.83341980]
[212.91865540 202.36933899]
[211.19236755 217.26966858]
[204.26460266 230.57403564]
[193.04681396 240.53201294]
[179.01490784 245.83345032]
[164.01499939 245.78086853]
[150.02059937 240.38116455]
[138.87289429 230.34478760]
[132.03790283 216.98989868]
[131.36811829 231.97492981]
[130.69833374 246.95997620]
[137.81170654 261.09185791]
[129.51382446 273.46096802]
[138.19769287 261.23022461]
[151.28620911 253.90286255]
[166.25222778 252.89364624]
[180.20600891 258.39743042]
[190.45332336 269.35156250]
[195.01556396 283.64093018]
[193.01182556 298.50650024]
[184.82901001 311.07794189]
[172.04708862 318.92794800]
[157.13404846 320.54077148]
[142.96936035 315.60501099]
[132.28800964 305.07366943]
[127.15223694 290.97897339]
[123.82997131 305.60641479]
[120.50771332 320.23388672]
[117.18545532 334.86132812]
[113.86319733 349.48880005]
[110.54093933 364.11627197]
[107.21867371 378.74371338]
[103.89641571 393.37118530]
[100.57415771 407.99862671]
[97.25189972 422.62609863]
[93.92964172 437.25357056]
[91.48390961 452.05282593]
[89.92338562 466.97143555]
[88.36286163 481.89004517]
[86.80234528 496.80865479]
[100.44073486 503.42453003]
[110.99163818 514.30822754]
[117.18097687 528.14538574]
[118.26135254 543.26519775]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 206]
[13 205]
[14 204]
[15 203]
[24 202]
[25 201]
[26 200]
[27 199]
[28 198]
[29 197]
[30 196]
[31 195]
[32 194]
[33 193]
[34 192]
[35 179]
[37 177]
[38 176]
[39 175]
[40 159]
[41 158]
[42 153]
[43 152]
[44 151]
[45 149]
[46 148]
[48 146]
[49 145]
[50 141]
[51 140]
[52 139]
[55 136]
[56 135]
[57 134]
[58 132]
[59 131]
[77 130]
[78 129]
[80 126]
[81 125]
[82 124]
[83 123]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
