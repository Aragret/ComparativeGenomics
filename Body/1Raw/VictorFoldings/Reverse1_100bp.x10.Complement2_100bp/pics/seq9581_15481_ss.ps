%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCAAAGCCAACAAAAGAUAAUCUGAUACCACUCGAGUCCACUAACUAUGAGGACUACGCUCAUUAUGCCUACACAAAUCCUCACCCUGAAGAUCCCCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[-21.02574539 470.32403564]
[-19.27323532 455.37365723]
[-14.54678440 441.08221436]
[-7.03993511 428.03491211]
[2.93990946 416.76602173]
[14.98408222 407.73703003]
[28.59938049 401.31765747]
[25.05970955 386.74127197]
[21.52003670 372.16488647]
[17.98036385 357.58853149]
[14.44069099 343.01214600]
[11.14517021 357.64566040]
[4.48749399 371.08721924]
[-5.15581322 382.57662964]
[-17.23937607 391.46411133]
[-31.07980919 397.24703979]
[-45.89437103 399.59838867]
[-60.84522629 398.38513184]
[-75.08683014 393.67590332]
[-87.81374359 385.73706055]
[-98.30621338 375.01754761]
[-105.97083282 362.12359619]
[-110.37412262 347.78445435]
[-111.26706696 332.81106567]
[-108.59915924 318.05023193]
[-102.52128601 304.33673096]
[-93.37717438 292.44619751]
[-81.68397522 283.05102539]
[-68.10299683 276.68258667]
[-53.40229797 273.70108032]
[-38.41328430 274.27505493]
[-23.98365402 278.37210083]
[-10.92947292 285.76049805]
[0.01098035 296.02239990]
[8.21897125 308.57742310]
[13.23053360 322.71661377]
[15.01299953 307.82287598]
[16.79546547 292.92916870]
[8.15722847 305.19213867]
[-3.95602274 314.03912354]
[-18.26594734 318.53646851]
[-33.26238251 318.20956421]
[-47.36272430 313.09286499]
[-59.07892609 303.72640991]
[-67.17454529 291.09863281]
[-70.79524231 276.54217529]
[-69.55890656 261.59320068]
[-63.59601593 247.82934570]
[-53.53585052 236.70310974]
[-40.44007874 229.38868713]
[-25.69073105 226.65798950]
[-10.84434032 228.79917908]
[2.53231645 235.58630371]
[13.02757072 246.30310059]
[19.53383255 259.81860352]
[21.36447334 274.70666504]
[26.81982994 260.73385620]
[32.27518845 246.76106262]
[37.73054504 232.78825378]
[43.18590164 218.81546021]
[48.64125824 204.84266663]
[54.09661484 190.86987305]
[59.55197144 176.89706421]
[65.00733185 162.92427063]
[62.42866898 148.25457764]
[74.65510559 138.21342468]
[73.65438080 135.59490967]
[73.63059235 132.42219543]
[74.80001068 129.06542969]
[77.24105835 125.96611023]
[80.87355042 123.58724976]
[87.15090942 109.96393585]
[83.78350830 98.81485748]
[88.73607635 88.27382660]
[99.46766663 83.74897766]
[105.94716644 70.22063446]
[112.42665863 56.69228745]
[118.90615845 43.16394424]
[125.38565063 29.63559723]
[131.86514282 16.10725212]
[138.34465027 2.57890558]
[144.72325134 -10.99730110]
[151.00061035 -24.62061691]
[157.27796936 -38.24393463]
[163.55532837 -51.86724854]
[169.83268738 -65.49056244]
[174.01969910 -79.89434814]
[176.02371216 -94.75987244]
[178.02772522 -109.62540436]
[172.20350647 -124.33557129]
[181.57182312 -135.91503906]
[172.26232910 -148.40386963]
[174.50645447 -163.45109558]
[186.47001648 -172.24929810]
[188.47402954 -187.11482239]
[190.47804260 -201.98036194]
[192.48205566 -216.84588623]
[194.48608398 -231.71141052]
[196.37936401 -246.59144592]
[198.16183472 -261.48516846]
[184.42408752 -267.81994629]
[173.31765747 -278.09140015]
[165.93063354 -291.29318237]
[162.98670959 -306.13192749]
[164.77432251 -321.15390015]
[171.11831665 -334.88739014]
[181.39718628 -345.98693848]
[194.60391235 -353.36511230]
[209.44464111 -356.29910278]
[224.46540833 -354.50143433]
[238.19465637 -348.14822388]
[249.28730774 -337.86190796]
[256.65664673 -324.65023804]
[259.58065796 -309.80755615]
[257.77291870 -294.78799438]
[251.41053772 -281.06301880]
[241.11679077 -269.97726440]
[227.90019226 -262.61679077]
[213.05555725 -259.70269775]
[211.27308655 -244.80897522]
[213.59947205 -237.79402161]
[209.35160828 -229.70739746]
[207.34759521 -214.84187317]
[205.34358215 -199.97634888]
[203.33956909 -185.11080933]
[201.33555603 -170.24528503]
[210.54222107 -158.59312439]
[208.72163391 -143.48881531]
[196.43734741 -133.91102600]
[202.40490723 -120.26413727]
[192.89326477 -107.62139130]
[190.88923645 -92.75585938]
[188.88522339 -77.89033508]
[197.43965149 -90.21193695]
[209.08273315 -99.66914368]
[222.89622498 -105.51613617]
[237.79075623 -107.29179382]
[252.59167480 -104.85607147]
[266.13171387 -98.40106964]
[277.34307861 -88.43584442]
[285.34155273 -75.74631500]
[289.49636841 -61.33320999]
[289.47985840 -46.33321762]
[285.29330444 -31.92930031]
[277.26690674 -19.25740814]
[266.03363037 -9.31690025]
[252.47941589 -2.89172673]
[237.67315674 -0.48860303]
[222.78257751 -2.29705000]
[208.98199463 -8.17444611]
[197.35977173 -17.65727425]
[188.83250427 -29.99768066]
[184.07266235 -44.22244644]
[183.45600891 -59.21320343]
[177.17864990 -45.58988953]
[170.90129089 -31.96657372]
[164.62393188 -18.34325600]
[158.34655762 -4.71994066]
[158.40235901 2.67050457]
[151.87298584 9.05840111]
[145.39349365 22.58674622]
[138.91400146 36.11509323]
[132.43449402 49.64343643]
[125.95500183 63.17178345]
[119.47550964 76.70012665]
[112.99600983 90.22847748]
[114.71636963 106.91429901]
[100.77422333 116.24129486]
[94.49686432 129.86460876]
[88.62790680 143.66879272]
[90.81636047 159.33790588]
[78.98012543 168.37962341]
[73.52477264 182.35243225]
[68.06941223 196.32522583]
[62.61405563 210.29801941]
[57.15869904 224.27081299]
[51.70334244 238.24362183]
[46.24798584 252.21641541]
[40.79262924 266.18920898]
[35.33726883 280.16201782]
[31.68918228 294.71163940]
[29.90671730 309.60534668]
[28.12425041 324.49905396]
[29.01706696 339.47247314]
[32.55673981 354.04885864]
[36.09641266 368.62521362]
[39.63608551 383.20159912]
[43.17575836 397.77798462]
[58.21880722 397.23806763]
[73.06255341 399.73770142]
[87.09914398 405.17453003]
[99.75379944 413.32589722]
[110.50830841 423.85800171]
[118.92228699 436.33956909]
[124.65119171 450.25949097]
[127.46042633 465.04779053]
[127.23494720 480.09881592]
[123.98399353 494.79632568]
[117.84068298 508.53839111]
[109.05659485 520.76232910]
[97.99141693 530.96759033]
[85.09826660 538.73620605]
[70.90511322 543.75012207]
[55.99315643 545.80395508]
[40.97302628 544.81372070]
[26.45979500 540.81982422]
[13.04776573 533.98590088]
[1.28615344 524.59179688]
[-8.34341049 513.02215576]
[-15.44660187 499.75079346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 188]
[8 187]
[9 186]
[10 185]
[11 184]
[36 183]
[37 182]
[38 181]
[56 180]
[57 179]
[58 178]
[59 177]
[60 176]
[61 175]
[62 174]
[63 173]
[64 172]
[66 170]
[71 169]
[72 168]
[75 166]
[76 165]
[77 164]
[78 163]
[79 162]
[80 161]
[81 160]
[82 158]
[83 157]
[84 156]
[85 155]
[86 154]
[87 133]
[88 132]
[89 131]
[91 129]
[94 126]
[95 125]
[96 124]
[97 123]
[98 122]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
