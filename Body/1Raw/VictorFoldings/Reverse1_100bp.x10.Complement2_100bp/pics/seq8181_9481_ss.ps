%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[77.60583496 536.16101074]
[87.51637268 523.54510498]
[87.06976318 508.55175781]
[86.62316132 493.55841064]
[78.03671265 485.03787231]
[77.54192352 472.55032349]
[85.94905090 462.76855469]
[85.72571564 447.77020264]
[85.50238800 432.77188110]
[85.27906036 417.77352905]
[85.05573273 402.77520752]
[84.83240509 387.77685547]
[71.60098267 383.10046387]
[60.73741531 374.16955566]
[53.55959702 362.04113770]
[50.94727707 348.16171265]
[53.23429489 334.19473267]
[60.16604614 321.82122803]
[70.92767334 312.53744507]
[84.23979950 307.47402954]
[84.23979950 292.47402954]
[82.01853180 289.73571777]
[81.01322937 285.78546143]
[81.77906799 281.20651245]
[84.58973694 276.80798340]
[85.25952148 261.82293701]
[78.09824371 248.76286316]
[86.44403839 235.32194519]
[87.11382294 220.33691406]
[87.78360748 205.35186768]
[88.45339203 190.36683655]
[89.12317657 175.38179016]
[75.37902069 172.07307434]
[62.48311234 166.28125000]
[50.87976074 158.20585632]
[40.96872330 148.12513733]
[33.09146881 136.38638306]
[27.51938057 123.39401245]
[24.44443703 109.59567261]
[23.97257423 95.46672821]
[26.12005043 81.49397278]
[30.81287956 68.15879059]
[37.88938141 55.92062759]
[47.10575104 45.20110703]
[58.14446640 36.36954880]
[70.62520599 29.73022079]
[84.11798859 25.51186752]
[98.15794373 23.85982132]
[99.27359009 8.90136719]
[100.38924408 -6.05708647]
[101.50489044 -21.01553917]
[102.62053680 -35.97399139]
[103.73619080 -50.93244553]
[104.85183716 -65.89089966]
[105.96748352 -80.84934998]
[95.28002167 -70.32423401]
[80.46478271 -67.97718811]
[67.04747772 -74.68360901]
[60.03244019 -87.94216156]
[62.03610229 -102.80773926]
[72.31114197 -113.73584747]
[87.02523041 -116.65056610]
[100.69037628 -110.46479034]
[108.21006012 -97.48450470]
[111.09532928 -112.20439911]
[113.98060608 -126.92428589]
[116.86587524 -141.64418030]
[119.75115204 -156.36407471]
[108.74586487 -164.99809265]
[102.56375885 -177.47198486]
[102.36021423 -191.32611084]
[108.11795044 -203.85597229]
[118.66152191 -212.64015198]
[131.89683533 -216.00819397]
[135.00094604 -230.68348694]
[138.10505676 -245.35879517]
[129.75022888 -258.50546265]
[133.10728455 -273.34408569]
[145.69210815 -281.22811890]
[148.79621887 -295.90341187]
[147.30419922 -299.98114014]
[147.19804382 -303.92489624]
[148.26548767 -307.31546021]
[150.17987061 -309.84564209]
[152.54666138 -311.34777832]
[156.51876831 -325.81228638]
[160.49085999 -340.27682495]
[164.46295166 -354.74133301]
[168.43505859 -369.20587158]
[157.58572388 -386.11654663]
[162.59356689 -405.25878906]
[179.79515076 -414.40319824]
[183.11741638 -429.03063965]
[186.43966675 -443.65811157]
[189.76193237 -458.28555298]
[175.87112427 -464.04348755]
[163.15330505 -472.06628418]
[151.97439575 -482.12310791]
[142.65603638 -493.92465210]
[135.46632385 -507.13131714]
[130.61213684 -521.36315918]
[128.23312378 -536.21063232]
[128.39773560 -551.24664307]
[131.10124207 -566.03845215]
[136.26585388 -580.16058350]
[143.74298096 -593.20672607]
[153.31748962 -604.80139160]
[164.71391296 -614.61108398]
[177.60432434 -622.35351562]
[191.61785889 -627.80590820]
[206.35131836 -630.81146240]
[221.38079834 -631.28356934]
[236.27384949 -629.20880127]
[250.60198975 -624.64672852]
[263.95297241 -617.72869873]
[275.94262695 -608.65368652]
[286.22604370 -597.68280029]
[294.50729370 -585.13177490]
[300.54815674 -571.36163330]
[304.17480469 -556.76867676]
[305.28286743 -541.77264404]
[303.84048462 -526.80511475]
[299.88919067 -512.29663086]
[293.54260254 -498.66473389]
[284.98336792 -486.30157471]
[274.45776367 -475.56289673]
[262.26858521 -466.75765991]
[248.76658630 -460.13919067]
[234.34022522 -455.89794922]
[219.40458679 -454.15594482]
[204.38938904 -454.96331787]
[201.06712341 -440.33584595]
[197.74487305 -425.70837402]
[194.42260742 -411.08093262]
[202.03068542 -404.18975830]
[206.12379456 -394.68807983]
[205.90182495 -384.26388550]
[201.33779907 -374.79956055]
[193.19491577 -368.03198242]
[182.89958191 -365.23376465]
[178.92747498 -350.76925659]
[174.95538330 -336.30471802]
[170.98329163 -321.84020996]
[167.01118469 -307.37567139]
[163.47152710 -292.79928589]
[160.36741638 -278.12399292]
[168.68193054 -265.81936646]
[165.74298096 -250.89228821]
[152.78034973 -242.25468445]
[149.67623901 -227.57937622]
[146.57212830 -212.90408325]
[158.85174561 -202.40057373]
[164.18954468 -187.04924011]
[161.03919983 -171.00891113]
[150.16761780 -158.67584229]
[134.47103882 -153.47880554]
[131.58576965 -138.75891113]
[128.70050049 -124.03901672]
[125.81522369 -109.31912231]
[122.92995453 -94.59923553]
[120.92594147 -79.73370361]
[119.81028748 -64.77525330]
[118.69464111 -49.81679916]
[117.57899475 -34.85834503]
[116.46334076 -19.89989090]
[115.34769440 -4.94143772]
[114.23204803 10.01701546]
[113.11639404 24.97546959]
[128.33937073 29.30629349]
[142.33854675 36.68991470]
[154.50941467 46.80747986]
[164.32637024 59.22208405]
[171.36549377 73.39761353]
[175.32279968 88.72193146]
[176.02742004 104.53327179]
[173.44892883 120.14884949]
[167.69863892 134.89433289]
[159.02490234 148.13294983]
[147.80226135 159.29302979]
[134.51536560 167.89263916]
[119.73796082 173.56040955]
[104.10821533 176.05157471]
[103.43843079 191.03662109]
[102.76864624 206.02165222]
[102.09886169 221.00669861]
[101.42907715 235.99172974]
[108.54244995 250.12362671]
[100.24456024 262.49270630]
[99.57477570 277.47775269]
[99.23979950 292.47402954]
[99.23979950 307.47402954]
[114.13339233 313.53118896]
[125.53488159 324.81286621]
[131.71920776 339.57058716]
[131.76667786 355.53308105]
[125.69961548 370.25604248]
[114.47437286 381.49627686]
[99.83074951 387.55352783]
[100.05407715 402.55187988]
[100.27740479 417.55020142]
[100.50073242 432.54855347]
[100.72406006 447.54687500]
[100.94738770 462.54522705]
[110.75519562 478.13009644]
[101.61650848 493.11178589]
[102.06311798 508.10516357]
[102.50971985 523.09851074]
[113.15360260 535.10211182]
[110.26328278 550.88269043]
[96.05596924 558.33465576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 207]
[3 206]
[4 205]
[7 203]
[8 202]
[9 201]
[10 200]
[11 199]
[12 198]
[20 191]
[21 190]
[25 189]
[26 188]
[28 186]
[29 185]
[30 184]
[31 183]
[32 182]
[48 168]
[49 167]
[50 166]
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[64 160]
[65 159]
[66 158]
[67 157]
[68 156]
[74 151]
[75 150]
[76 149]
[79 146]
[80 145]
[85 144]
[86 143]
[87 142]
[88 141]
[89 140]
[92 134]
[93 133]
[94 132]
[95 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
