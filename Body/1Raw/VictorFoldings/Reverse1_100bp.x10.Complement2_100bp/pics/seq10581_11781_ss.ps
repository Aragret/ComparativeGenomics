%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[78.06933594 585.39764404]
[65.70185852 576.68554688]
[56.63350677 564.57684326]
[51.75269318 550.25793457]
[51.53759766 535.13146973]
[56.00928879 520.67950439]
[64.72967529 508.31787109]
[76.84442902 499.25762939]
[91.16666412 494.38641357]
[90.94333649 479.38809204]
[83.01740265 466.77743530]
[90.54838562 452.86358643]
[90.32505798 437.86523438]
[79.49175262 427.70773315]
[79.05160522 412.50045776]
[89.77919769 401.20635986]
[89.55587006 386.20803833]
[89.33254242 371.20968628]
[89.10921478 356.21136475]
[88.88588715 341.21301270]
[80.95995331 328.60235596]
[88.49093628 314.68850708]
[88.26760864 299.69018555]
[75.19260406 292.55505371]
[67.39266968 279.74813843]
[67.04810333 264.65682983]
[74.35157013 251.33181763]
[87.42943573 243.39981079]
[87.20610809 228.40147400]
[86.98278046 213.40313721]
[84.24057007 209.49296570]
[83.92559814 203.81866455]
[86.98278046 197.95648193]
[87.20610809 182.95814514]
[87.42943573 167.95980835]
[87.65276337 152.96147156]
[76.16312408 162.60450745]
[61.20869446 161.43620300]
[51.35604095 150.12579346]
[52.24921417 135.15240479]
[63.37656784 125.09348297]
[78.36383820 125.71121979]
[88.62531281 136.65086365]
[90.18582916 121.73226166]
[91.74635315 106.81365967]
[91.41137695 91.81739807]
[89.18626404 76.98335266]
[86.96114349 62.14931107]
[84.73603058 47.31526566]
[82.29029846 32.51599503]
[79.62450409 17.75477791]
[69.55780792 5.54935884]
[74.91005707 -8.35037994]
[72.24426270 -23.11159706]
[69.57846069 -37.87281418]
[66.91266632 -52.63403320]
[64.24687195 -67.39524841]
[61.58107758 -82.15646362]
[47.02970123 -91.86608887]
[44.06122208 -108.76292419]
[54.03150940 -122.30663300]
[51.14623642 -137.02651978]
[46.42457199 -144.84596252]
[48.32929993 -151.98696899]
[45.66350555 -166.74818420]
[42.99770737 -181.50939941]
[40.33191299 -196.27061462]
[30.20024681 -204.25260925]
[28.28379059 -216.60214233]
[35.07096100 -226.61517334]
[32.62523270 -241.41444397]
[18.22003174 -251.33963013]
[15.50345039 -268.27880859]
[25.67427826 -281.67257690]
[23.00848389 -296.43377686]
[20.34268761 -311.19500732]
[17.67689133 -325.95620728]
[15.01109695 -340.71743774]
[12.34530163 -355.47863770]
[-2.67685151 -355.03979492]
[-17.59661293 -356.84490967]
[-32.08066940 -360.85360718]
[-45.80544662 -366.97637939]
[-58.46432114 -375.07641602]
[-69.77449036 -384.97274780]
[-79.48328400 -396.44433594]
[-87.37380219 -409.23483276]
[-93.26976776 -423.05856323]
[-97.03946686 -437.60665894]
[-98.59867859 -452.55410767]
[-97.91256714 -467.56701660]
[-94.99645996 -482.30993652]
[-89.91551208 -496.45355225]
[-82.78323364 -509.68185425]
[-73.75894928 -521.69934082]
[-63.04427719 -532.23754883]
[-50.87858582 -541.06097412]
[-37.53365707 -547.97259521]
[-23.30762291 -552.81799316]
[-8.51829815 -555.48889160]
[6.50391674 -555.92559814]
[21.42342186 -554.11834717]
[35.90690613 -550.10760498]
[49.63080978 -543.98284912]
[62.28853226 -535.88104248]
[73.59729004 -525.98309326]
[83.30445099 -514.51013184]
[91.19314575 -501.71847534]
[97.08714294 -487.89392090]
[100.85476685 -473.34527588]
[102.41184998 -458.39761353]
[101.72360229 -443.38479614]
[98.80539703 -428.64230347]
[93.72243500 -414.49942017]
[86.58827209 -401.27212524]
[77.56227875 -389.25592041]
[66.84610748 -378.71923828]
[54.67915726 -369.89752197]
[41.33324051 -362.98779297]
[27.10651779 -358.14443970]
[29.77231407 -343.38323975]
[32.43811035 -328.62200928]
[35.10390472 -313.86077881]
[37.76969910 -299.09957886]
[40.43549728 -284.33834839]
[51.94475937 -278.54470825]
[58.10763168 -267.00775146]
[56.47650528 -253.83393860]
[47.42450714 -243.86016846]
[49.87023163 -229.06089783]
[61.72001266 -216.11680603]
[55.09312820 -198.93641663]
[57.75892639 -184.17520142]
[60.42472076 -169.41397095]
[63.09051514 -154.65275574]
[65.86612701 -139.91180420]
[68.75139618 -125.19190216]
[80.34564972 -119.57025909]
[86.67960358 -108.12634277]
[85.24479675 -94.92968750]
[76.34229279 -84.82226562]
[79.00808716 -70.06104279]
[81.67388916 -55.29982758]
[84.33968353 -40.53860855]
[87.00547791 -25.77739334]
[89.67127228 -11.01617622]
[99.54728699 0.13342182]
[94.38571930 15.08898163]
[97.05151367 29.85019875]
[100.39456940 33.26092148]
[101.63052368 38.80794525]
[99.57006836 45.09014893]
[101.79518890 59.92419052]
[104.02030182 74.75823212]
[106.24542236 89.59227753]
[111.32797241 75.47959900]
[120.66606140 63.74077225]
[133.27421570 55.61462021]
[147.82186890 51.95871735]
[162.77378845 53.15887833]
[176.55203247 59.08844757]
[187.70257568 69.12166595]
[195.04866028 82.19969940]
[197.81504822 96.94239807]
[195.70977783 111.79393005]
[188.95504761 125.18696594]
[178.26367188 135.70811462]
[164.76396179 142.24707031]
[149.88056946 144.11372375]
[135.18415833 141.11111450]
[122.22569275 133.55610657]
[112.37270355 122.24599457]
[106.66496277 108.37417603]
[105.10443878 123.29278564]
[103.54391479 138.21139526]
[102.65110016 153.18479919]
[102.42777252 168.18313599]
[102.20444489 183.18147278]
[101.98111725 198.17980957]
[101.98111725 213.17980957]
[102.20444489 228.17814636]
[102.42777252 243.17648315]
[115.73600006 250.71559143]
[123.43296051 263.81726074]
[123.53787994 278.91213989]
[116.12271118 291.94561768]
[103.26594543 299.46685791]
[103.48927307 314.46517944]
[111.43117523 328.14862061]
[103.88422394 340.98968506]
[104.10755157 355.98803711]
[104.33087921 370.98635864]
[104.55420685 385.98471069]
[104.77753448 400.98303223]
[115.83663940 411.95272827]
[115.84946442 427.16635132]
[105.32339478 437.64190674]
[105.54672241 452.64025879]
[113.48862457 466.32369995]
[105.94167328 479.16476440]
[106.16500092 494.16308594]
[120.62592316 498.60571289]
[133.00506592 507.30123901]
[142.08963013 519.39776611]
[146.98963928 533.71020508]
[147.22500610 548.83630371]
[142.77268982 563.29425049]
[134.06886292 575.66754150]
[121.96627045 584.74401855]
[107.65057373 589.63446045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 201]
[10 200]
[12 198]
[13 197]
[16 194]
[17 193]
[18 192]
[19 191]
[20 190]
[22 188]
[23 187]
[28 182]
[29 181]
[30 180]
[33 179]
[34 178]
[35 177]
[36 176]
[43 175]
[44 174]
[45 173]
[46 155]
[47 154]
[48 153]
[49 152]
[50 149]
[51 148]
[53 146]
[54 145]
[55 144]
[56 143]
[57 142]
[58 141]
[61 137]
[62 136]
[64 135]
[65 134]
[66 133]
[67 132]
[70 130]
[71 129]
[74 125]
[75 124]
[76 123]
[77 122]
[78 121]
[79 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
