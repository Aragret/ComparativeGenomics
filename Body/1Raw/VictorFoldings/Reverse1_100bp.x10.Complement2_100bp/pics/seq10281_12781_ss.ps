%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[86.47166443 519.04461670]
[71.42923737 519.77911377]
[56.58067703 517.26232910]
[42.62047577 511.61196899]
[30.20157433 503.09228516]
[19.90482903 492.10177612]
[12.21183968 479.15447998]
[7.48241949 464.85601807]
[5.93777180 449.87509155]
[7.65014362 434.91241455]
[12.53944302 420.66778564]
[20.37698936 407.80752563]
[30.79620743 396.93304443]
[43.30976868 388.55300903]
[57.33239365 383.05938721]
[72.20822144 380.70907593]
[73.10103607 365.73568726]
[73.99385071 350.76226807]
[71.25405121 343.89822388]
[75.01306152 335.57308960]
[76.12870789 320.61462402]
[73.74629211 316.47543335]
[73.93880463 310.79562378]
[77.50679016 305.22958374]
[79.06731415 290.31097412]
[72.69608307 276.84780884]
[81.82709503 263.92749023]
[83.38761902 249.00886536]
[84.94814301 234.09027100]
[86.06378937 219.13180542]
[86.73357391 204.14677429]
[87.40335846 189.16172791]
[88.07314301 174.17669678]
[88.74292755 159.19165039]
[89.41271973 144.20661926]
[86.90811157 140.14016724]
[86.93143463 134.45716858]
[90.33211517 128.78735352]
[91.44776917 113.82889557]
[83.77674103 98.91139984]
[93.37198639 85.15248871]
[86.46981049 70.91625214]
[94.95092773 58.67207718]
[95.84374237 43.69867325]
[88.39979553 56.72125244]
[78.09136963 67.61787415]
[65.50147247 75.77229309]
[51.34212494 80.72332764]
[36.41409683 82.19097900]
[21.56164551 80.09223938]
[7.62474918 74.54580688]
[-4.60839319 65.86535645]
[-14.44593811 54.54181290]
[-21.33152580 41.21557236]
[-24.87574005 26.64030075]
[-24.87814140 11.64029980]
[-21.33859444 -2.93610549]
[-14.45727444 -16.26455116]
[-4.62335539 -27.59124565]
[7.60700703 -36.27561188]
[21.54212570 -41.82650757]
[36.39390564 -43.93000412]
[51.32240295 -42.46713257]
[65.48333740 -37.52062988]
[78.07584381 -29.37024498]
[88.38775635 -18.47692108]
[95.83587646 -5.45672607]
[99.99898529 8.95398235]
[100.64155579 23.94128036]
[106.71539307 10.22601318]
[112.78922272 -3.48925400]
[118.86306000 -17.20452118]
[108.44347382 -28.23665237]
[103.05597687 -42.37942123]
[103.49243164 -57.46660614]
[109.65521240 -71.20005798]
[120.57678223 -81.49977112]
[134.57151794 -86.81887817]
[149.49575806 -86.37593842]
[155.56959534 -100.09120178]
[161.64343262 -113.80647278]
[167.71726990 -127.52173615]
[157.91645813 -136.71974182]
[151.43778992 -148.47023010]
[148.89942932 -161.62292480]
[150.53460693 -174.89518738]
[156.17027283 -186.99713135]
[165.24526978 -196.75698853]
[176.86616516 -203.23452759]
[189.89523315 -205.81163025]
[203.06181335 -204.25129700]
[209.54132080 -217.77964783]
[216.02081299 -231.30798340]
[222.50030518 -244.83633423]
[228.97979736 -258.36468506]
[227.96282959 -274.15316772]
[240.43876648 -282.28952026]
[246.81736755 -295.86572266]
[253.09472656 -309.48904419]
[259.37210083 -323.11233521]
[246.84046936 -331.41046143]
[235.72247314 -341.52435303]
[226.27874756 -353.21694946]
[218.73066711 -366.21411133]
[213.25515747 -380.21124268]
[209.98057556 -394.88015747]
[208.98368835 -409.87707520]
[210.28785706 -424.85034180]
[213.86251831 -439.44906616]
[219.62387085 -453.33096313]
[227.43685913 -466.17065430]
[237.11834717 -477.66714478]
[248.44136047 -487.55096436]
[261.14050293 -495.59039307]
[274.91806030 -501.59698486]
[289.45111084 -505.42993164]
[304.39892578 -506.99938965]
[319.41113281 -506.26855469]
[334.13580322 -503.25460815]
[348.22781372 -498.02813721]
[361.35678101 -490.71170044]
[373.21499634 -481.47677612]
[383.52441406 -470.53988647]
[392.04342651 -458.15734863]
[398.57232666 -444.61947632]
[402.95803833 -430.24359131]
[405.09777832 -415.36669922]
[404.94137573 -400.33752441]
[402.49252319 -385.50839233]
[397.80859375 -371.22689819]
[390.99938965 -357.82781982]
[382.22454834 -345.62524414]
[371.68975830 -334.90524292]
[359.64193726 -325.91909790]
[346.36355591 -318.87747192]
[332.16583252 -313.94540405]
[317.38162231 -311.23849487]
[302.35745239 -310.82025146]
[287.44552612 -312.70043945]
[272.99542236 -316.83499146]
[266.71804810 -303.21166992]
[260.44067383 -289.58834839]
[260.49649048 -282.19790649]
[253.96711731 -275.81002808]
[255.44755554 -260.98916626]
[242.50814819 -251.88517761]
[236.02865601 -238.35684204]
[229.54916382 -224.82849121]
[223.06965637 -211.30014038]
[216.59016418 -197.77180481]
[228.00099182 -185.64543152]
[233.89192200 -170.03201294]
[233.33283997 -153.31681824]
[226.38125610 -138.06503296]
[214.07789612 -126.62810516]
[198.29098511 -120.78125000]
[181.43252563 -121.44790649]
[175.35870361 -107.73263550]
[169.28486633 -94.01737213]
[163.21102905 -80.30210114]
[173.56924438 -69.54865265]
[179.03605652 -55.61095810]
[178.74943542 -40.60153961]
[172.72190857 -26.80818748]
[161.84346008 -16.34526443]
[147.75018311 -10.82959843]
[132.57832336 -11.13068676]
[126.50449371 2.58457994]
[120.43065643 16.29984665]
[114.35682678 30.01511383]
[110.81715393 44.59148788]
[109.92433929 59.56489563]
[116.89038086 72.73013306]
[108.34539032 86.04530334]
[115.53700256 95.20619965]
[114.75726318 106.82658386]
[106.40621948 114.94454193]
[105.29057312 129.90299988]
[104.39775848 144.87640381]
[103.72796631 159.86143494]
[103.05818176 174.84648132]
[102.38839722 189.83151245]
[101.71861267 204.81655884]
[101.04882812 219.80160522]
[103.18575287 223.58148193]
[103.93350220 227.45516968]
[103.43318176 230.97441101]
[101.95694733 233.78285217]
[99.86674500 235.65078735]
[98.30622101 250.56939697]
[96.74569702 265.48800659]
[103.00531769 280.01824951]
[93.98592377 291.87149048]
[92.42539978 306.79010010]
[91.08716583 321.73028564]
[89.97151947 336.68875122]
[88.96725464 351.65509033]
[88.07444000 366.62847900]
[87.18162537 381.60189819]
[101.67276001 385.70324707]
[114.94320679 392.82427979]
[126.37229919 402.63192749]
[135.42546082 414.66748047]
[141.67927551 428.36798096]
[144.84123230 443.09265137]
[144.76344299 458.15280151]
[141.44953918 472.84402466]
[135.05451965 486.47921753]
[125.87750244 498.42059326]
[114.34770203 508.10964966]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 199]
[17 198]
[18 197]
[20 196]
[21 195]
[24 194]
[25 193]
[27 191]
[28 190]
[29 189]
[30 184]
[31 183]
[32 182]
[33 181]
[34 180]
[35 179]
[38 178]
[39 177]
[41 174]
[43 172]
[44 171]
[69 170]
[70 169]
[71 168]
[72 167]
[79 160]
[80 159]
[81 158]
[82 157]
[91 150]
[92 149]
[93 148]
[94 147]
[95 146]
[97 144]
[98 142]
[99 141]
[100 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
