%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[79.84540558 669.41522217]
[68.65934753 679.50579834]
[55.50813293 686.85382080]
[41.05141068 691.09069824]
[26.01432800 692.00384521]
[11.15114021 689.54754639]
[-2.79262424 683.84503174]
[-15.11754990 675.18218994]
[-25.20542526 663.99371338]
[-32.55024719 650.84069824]
[-36.78359604 636.38299561]
[-37.69313812 621.34564209]
[-35.23324585 606.48309326]
[-29.52730942 592.54071045]
[-20.86153412 580.21789551]
[-9.67059040 570.13269043]
[3.48418713 562.79107666]
[17.94296074 558.56121826]
[32.98048401 557.65533447]
[35.42620850 542.85607910]
[33.41537857 535.74420166]
[38.02009583 527.85534668]
[40.68589020 513.09411621]
[43.35168839 498.33288574]
[46.01748276 483.57168579]
[48.68327713 468.81045532]
[51.34907532 454.04925537]
[53.57419205 439.21520996]
[55.35665512 424.32147217]
[57.13912201 409.42776489]
[58.92158890 394.53405762]
[60.70405579 379.64035034]
[62.48651886 364.74661255]
[56.31643677 351.19009399]
[65.63880157 338.40713501]
[67.42127228 323.51342773]
[59.65563202 307.77615356]
[70.81474304 293.12841797]
[72.37526703 278.20980835]
[73.93579102 263.29122925]
[60.15287781 258.78665161]
[47.60644531 251.50495911]
[36.84897232 241.76387024]
[28.35476303 229.98947144]
[22.49904823 216.69754028]
[19.54140472 202.47105408]
[19.61424828 187.93447876]
[22.71690941 173.72647095]
[28.71554947 160.47178650]
[37.34893799 148.75376892]
[48.23981476 139.08874512]
[60.91139221 131.90322876]
[74.80821991 127.51508331]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[96.34397125 57.10840988]
[95.67418671 42.12337112]
[95.00440216 27.13833046]
[94.33461761 12.15329266]
[93.66483307 -2.83174658]
[83.39735413 -18.11769867]
[92.08592224 -33.36485291]
[91.19310760 -48.33825684]
[90.30029297 -63.31166458]
[89.40747833 -78.28507233]
[88.51465607 -93.25847626]
[87.28768158 -108.20820618]
[85.72715759 -123.12681580]
[84.16664124 -138.04542542]
[82.60611725 -152.96401978]
[66.35997009 -157.51536560]
[53.13697052 -167.93479919]
[44.94814682 -182.60173035]
[43.02506638 -199.25236511]
[47.63468552 -215.32910156]
[58.04270172 -228.37345886]
[72.63035583 -236.40191650]
[70.62634277 -251.26744080]
[68.62232971 -266.13296509]
[66.61831665 -280.99850464]
[64.61430359 -295.86401367]
[60.36643219 -303.95065308]
[62.69282150 -310.96560669]
[60.91035461 -325.85931396]
[59.12788773 -340.75305176]
[57.34542465 -355.64675903]
[55.56295776 -370.54046631]
[53.78049088 -385.43420410]
[38.88155746 -387.92385864]
[25.28815460 -394.51141357]
[14.10223961 -404.66287231]
[6.23060465 -417.55526733]
[2.31136870 -432.14349365]
[2.66224623 -447.24493408]
[7.25479269 -461.63540649]
[15.71671104 -474.14828491]
[27.36203194 -483.76928711]
[41.24672318 -489.71841431]
[56.24520874 -491.51339722]
[71.14163208 -489.00878906]
[84.72841644 -482.40756226]
[95.90412140 -472.24487305]
[103.76280212 -459.34457397]
[107.66738129 -444.75241089]
[107.30133057 -429.65133667]
[102.69433594 -415.26550293]
[94.21984863 -402.76110840]
[82.56486511 -393.15182495]
[68.67420959 -387.21664429]
[70.45667267 -372.32293701]
[72.23914337 -357.42922974]
[74.02160645 -342.53549194]
[75.80406952 -327.64178467]
[77.58654022 -312.74807739]
[79.47982788 -297.86804199]
[81.48384094 -283.00250244]
[83.48786163 -268.13699341]
[85.49187469 -253.27145386]
[87.49588776 -238.40592957]
[100.50405884 -235.84056091]
[112.10869598 -229.38066101]
[121.17366791 -219.64257812]
[126.80652618 -207.56445312]
[128.44638062 -194.31571960]
[125.91973114 -181.18397522]
[119.45866394 -169.44979858]
[109.67964935 -160.26185608]
[97.52471924 -154.52455139]
[99.08524323 -139.60594177]
[100.64576721 -124.68733978]
[102.20629120 -109.76873016]
[104.70037842 -107.27637482]
[106.11119080 -103.45215607]
[105.82588196 -98.81837463]
[103.48806763 -94.15129089]
[104.38088226 -79.17788696]
[105.27369690 -64.20448303]
[106.16651154 -49.23107529]
[107.05932617 -34.25766754]
[115.89566040 -25.99656677]
[116.76202393 -13.52928257]
[108.64987183 -3.50153160]
[109.31965637 11.48350716]
[109.98944092 26.46854591]
[110.65922546 41.45358658]
[111.32901001 56.43862534]
[119.22533417 43.68526840]
[132.09681702 35.98299026]
[147.06791687 35.05250168]
[160.79408264 41.10167694]
[170.20883179 52.77910995]
[173.20889282 67.47603607]
[169.12405396 81.90912628]
[158.86685181 92.85398102]
[144.72880554 97.86550903]
[129.86836243 95.82410431]
[117.60539246 87.18583679]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[118.85691071 133.09886169]
[131.97473145 141.41279602]
[142.91477966 152.42633057]
[151.13334656 165.58770752]
[156.22293091 180.23851013]
[157.93249512 195.64668274]
[156.17980957 211.04298401]
[151.05540466 225.65951538]
[142.81790161 238.76791382]
[131.88096619 249.71571350]
[118.79255676 257.95883179]
[104.20742035 263.08850098]
[88.85439301 264.85174561]
[87.29386902 279.77035522]
[85.73334503 294.68893433]
[93.23425293 305.18176270]
[91.62736511 317.57537842]
[82.31498718 325.29586792]
[80.53252411 340.18960571]
[86.57511139 354.81143188]
[77.38024139 366.52908325]
[75.59777069 381.42279053]
[73.81530762 396.31652832]
[72.03283691 411.21023560]
[70.25037384 426.10394287]
[68.46791077 440.99768066]
[70.31777954 444.92602539]
[70.77534485 448.84457397]
[70.01465607 452.31686401]
[68.33363342 455.00775146]
[66.11029053 456.71505737]
[63.44449615 471.47625732]
[60.77870178 486.23748779]
[58.11290359 500.99868774]
[55.44710922 515.75988770]
[52.78131485 530.52111816]
[50.22548294 545.30175781]
[47.77975464 560.10107422]
[61.72628021 565.79687500]
[74.05540466 574.45367432]
[84.14869690 585.63726807]
[91.49989319 598.78674316]
[95.74024963 613.24243164]
[96.65708160 628.27929688]
[94.20439148 643.14306641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 203]
[20 202]
[22 201]
[23 200]
[24 199]
[25 198]
[26 197]
[27 196]
[28 191]
[29 190]
[30 189]
[31 188]
[32 187]
[33 186]
[35 184]
[36 183]
[38 180]
[39 179]
[40 178]
[54 165]
[55 164]
[57 162]
[58 161]
[59 149]
[60 148]
[61 147]
[62 146]
[63 145]
[65 142]
[66 141]
[67 140]
[68 139]
[69 138]
[70 134]
[71 133]
[72 132]
[73 131]
[80 122]
[81 121]
[82 120]
[83 119]
[84 118]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
