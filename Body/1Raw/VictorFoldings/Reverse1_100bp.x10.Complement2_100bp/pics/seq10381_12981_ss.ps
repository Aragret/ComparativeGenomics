%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[178.62661743 327.26986694]
[188.59983826 316.03240967]
[200.04002380 306.29235840]
[191.99884033 293.62982178]
[183.95767212 280.96731567]
[175.91650391 268.30477905]
[167.87532043 255.64225769]
[159.83415222 242.97973633]
[151.79298401 230.31721497]
[136.99217224 232.16149902]
[122.79998016 227.37701416]
[112.04847717 216.86196899]
[106.90760803 202.66366577]
[108.44740295 187.58003235]
[116.41572571 174.60826111]
[108.37454987 161.94572449]
[109.98171234 176.85939026]
[108.15341187 191.74754333]
[102.98555756 205.82920837]
[94.74924469 218.36567688]
[83.87653351 228.69932556]
[70.93778229 236.28805542]
[56.61174393 240.73377991]
[41.64992142 241.80329895]
[26.83718491 239.44049072]
[12.95058155 233.76930237]
[0.71857679 225.08724976]
[-9.21716499 213.84977722]
[-16.33543396 200.64634705]
[-20.26281929 186.16963196]
[-20.79330063 171.17900085]
[-17.89904785 156.46087646]
[-11.73188782 142.78732300]
[-2.61533785 130.87562561]
[8.97236633 121.35065460]
[22.42335701 114.71206665]
[37.03202057 111.30810547]
[52.03201675 111.31734467]
[66.63647461 114.73929596]
[80.07927704 121.39444733]
[91.65524292 130.93368530]
[100.75795746 142.85803223]
[97.87268829 128.13813782]
[94.98741913 113.41825104]
[85.94354248 102.75523376]
[90.29269409 89.46702576]
[87.40741730 74.74713135]
[84.52214813 60.02724075]
[80.59529877 74.50411224]
[73.47751617 87.70779419]
[63.54218674 98.94564056]
[51.31050110 107.62815094]
[37.42411041 113.29984283]
[22.61145973 115.66319275]
[7.64959812 114.59423828]
[-6.67660856 110.14903259]
[-19.61563492 102.56078339]
[-30.48872757 92.22753906]
[-38.72550201 79.69136810]
[-43.89387894 65.60990143]
[-45.72272873 50.72180557]
[-44.11611938 35.80809402]
[-39.15832901 21.65110588]
[-31.10943031 8.99348831]
[-20.39165688 -1.50076306]
[-7.56723928 -9.28114319]
[6.69107914 -13.93950748]
[21.63533401 -15.23148823]
[36.48158264 -13.08930969]
[50.45101929 -7.62534809]
[62.81083298 0.87376958]
[72.91265106 11.96219635]
[80.22656250 25.05825424]
[84.36915588 39.47658920]
[87.03495026 24.71537209]
[89.70074463 9.95415401]
[92.25657654 -4.82649946]
[94.70230865 -19.62577057]
[97.14803314 -34.42504120]
[99.59375763 -49.22431183]
[94.21009827 -64.10136414]
[103.91902161 -75.39676666]
[106.36474609 -90.19603729]
[91.90927124 -94.25834656]
[77.98842621 -99.88625336]
[64.77120209 -107.01142883]
[52.41804123 -115.54739380]
[41.07890320 -125.39051819]
[30.89143372 -136.42132568]
[21.97929764 -148.50590515]
[14.45068169 -161.49755859]
[8.39697456 -175.23858643]
[3.89166355 -189.56217957]
[0.98943949 -204.29446411]
[-0.27446753 -219.25660706]
[0.11528512 -234.26698303]
[2.15396619 -249.14337158]
[5.81682825 -263.70520020]
[11.05940723 -277.77566528]
[17.81806183 -291.18402100]
[26.01075172 -303.76745605]
[35.53802109 -315.37326050]
[46.28421783 -325.86050415]
[58.11889648 -335.10189819]
[70.89839172 -342.98529053]
[84.46757507 -349.41494751]
[98.66172791 -354.31283569]
[113.30854797 -357.61947632]
[128.23022461 -359.29476929]
[143.24563599 -359.31832886]
[158.17251587 -357.68994141]
[172.82963562 -354.42929077]
[187.03910828 -349.57601929]
[200.62841797 -343.18899536]
[213.43260193 -335.34579468]
[225.29624939 -326.14160156]
[236.07533264 -315.68814087]
[245.63899231 -304.11233521]
[253.87117004 -291.55468750]
[260.67190552 -278.16763306]
[265.95864868 -264.11367798]
[269.66720581 -249.56343079]
[271.75259399 -234.69352722]
[272.18948364 -219.68444824]
[270.97259521 -204.71841431]
[268.11663818 -189.97708130]
[263.65634155 -175.63940430]
[257.64581299 -161.87944031]
[250.15803528 -148.86419678]
[241.28388977 -136.75169373]
[231.13111877 -125.68894958]
[219.82293701 -115.81026459]
[207.49665833 -107.23554993]
[194.30186462 -100.06889343]
[180.39877319 -94.39730072]
[165.95611572 -90.28961182]
[151.14924622 -87.79569244]
[136.15788269 -86.94582367]
[121.16401672 -87.75031281]
[118.71829224 -72.95104218]
[124.27688599 -59.13253021]
[114.39302826 -46.77858353]
[111.94730377 -31.97931290]
[109.50157928 -17.18004227]
[107.05584717 -2.38077188]
[109.06668091 4.73107338]
[104.46195984 12.61994934]
[101.79616547 27.38116646]
[99.13037109 42.14238358]
[99.24204254 57.14196777]
[102.12731171 71.86186218]
[105.01258087 86.58174896]
[114.05645752 97.24476624]
[109.70730591 110.53297424]
[112.59258270 125.25286865]
[115.47785187 139.97276306]
[121.03707886 153.90455627]
[129.07824707 166.56707764]
[144.20721436 164.87123108]
[158.51390076 169.89176941]
[169.17839050 180.58235168]
[174.12338257 194.78475952]
[172.41864014 209.66438293]
[164.45550537 222.27603149]
[172.49667358 234.93856812]
[180.53785706 247.60108948]
[188.57902527 260.26361084]
[196.62019348 272.92614746]
[204.66136169 285.58865356]
[212.70254517 298.25119019]
[226.38288879 292.03875732]
[240.79472351 287.79083252]
[255.65751648 285.59002686]
[270.68197632 285.47921753]
[285.57559204 287.46060181]
[300.04852295 291.49554443]
[313.81900024 297.50552368]
[326.61898804 305.37356567]
[338.19937134 314.94650269]
[348.33468628 326.03802490]
[356.82763672 338.43218994]
[363.51293945 351.88778687]
[368.26046753 366.14285278]
[370.97778320 380.91995239]
[371.61203003 395.93139648]
[370.15078735 410.88504028]
[366.62258911 425.48974609]
[361.09603882 439.46127319]
[353.67877197 452.52764893]
[344.51513672 464.43453979]
[333.78350830 474.95016479]
[321.69277954 483.86981201]
[308.47830200 491.01989746]
[294.39727783 496.26123047]
[279.72384644 499.49176025]
[264.74362183 500.64865112]
[249.74815369 499.70935059]
[235.02935791 496.69216919]
[220.87376404 491.65579224]
[207.55688477 484.69830322]
[195.33793640 475.95507812]
[184.45478821 465.59637451]
[175.11926270 453.82376099]
[167.51309204 440.86642456]
[161.78431702 426.97662354]
[158.04446411 412.42465210]
[156.36633301 397.49380493]
[156.78257751 382.47473145]
[159.28509521 367.65975952]
[163.82518005 353.33724976]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 170]
[4 169]
[5 168]
[6 167]
[7 166]
[8 165]
[9 164]
[15 158]
[16 157]
[42 156]
[43 155]
[44 154]
[46 152]
[47 151]
[48 150]
[74 149]
[75 148]
[76 147]
[77 145]
[78 144]
[79 143]
[80 142]
[82 140]
[83 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
