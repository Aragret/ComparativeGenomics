%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[-6.10690784 712.96136475]
[-13.38282776 726.09899902]
[-22.16154099 738.28381348]
[-32.31980896 749.34484863]
[-43.71502304 759.12670898]
[-56.18721008 767.49218750]
[-69.56128693 774.32373047]
[-83.64949799 779.52557373]
[-98.25406647 783.02453613]
[-113.16996765 784.77160645]
[-128.18780518 784.74218750]
[-143.09675598 782.93676758]
[-157.68751526 779.38067627]
[-171.75526428 774.12377930]
[-185.10249329 767.23986816]
[-197.54183960 758.82568359]
[-208.89868164 748.99926758]
[-219.01356506 737.89855957]
[-227.74452209 725.67944336]
[-234.96896362 712.51342773]
[-240.58546448 698.58532715]
[-244.51519775 684.09075928]
[-246.70298767 669.23309326]
[-247.11811829 654.22094727]
[-245.75476074 639.26507568]
[-242.63206482 624.57550049]
[-237.79385376 610.35827637]
[-231.30804443 596.81317139]
[-223.26571655 584.13018799]
[-213.77973938 572.48748779]
[-202.98330688 562.04846191]
[-191.02796936 552.95965576]
[-178.08155823 545.34869385]
[-164.32583618 539.32238770]
[-149.95388794 534.96539307]
[-135.16749573 532.33880615]
[-120.17423248 531.47949219]
[-105.18457794 532.39959717]
[-90.40895844 535.08612061]
[-76.05480957 539.50140381]
[-69.98097992 525.78613281]
[-63.90714264 512.07086182]
[-65.82819366 497.30065918]
[-53.16558838 487.81546021]
[-47.09175491 474.10021973]
[-41.01792145 460.38494873]
[-34.94408798 446.66967773]
[-28.87025452 432.95440674]
[-32.93370438 421.56076050]
[-27.98573875 410.08465576]
[-16.17804527 404.89416504]
[-9.90068531 391.27084351]
[-3.62332463 377.64752197]
[2.65403605 364.02420044]
[8.93139648 350.40087891]
[15.20875740 336.77758789]
[21.48611832 323.15426636]
[27.04534340 309.22247314]
[31.87134171 295.02001953]
[36.69733810 280.81753540]
[41.52333832 266.61508179]
[46.34933472 252.41264343]
[51.17533112 238.21018982]
[46.83447266 221.20654297]
[60.78324127 209.18516541]
[65.39724731 194.91242981]
[70.01126099 180.63969421]
[74.62526703 166.36695862]
[78.81227875 151.96318054]
[82.56858063 137.44113159]
[86.32488251 122.91906738]
[90.08118439 108.39700317]
[93.40344238 93.76954651]
[96.28871155 79.04965210]
[99.17398834 64.32976532]
[102.05925751 49.60987091]
[90.89785767 34.30178833]
[94.40991211 16.01030350]
[109.90637207 6.26476717]
[112.35209656 -8.53450394]
[114.68758392 -23.35157204]
[116.91269684 -38.18561554]
[119.13781738 -53.01966095]
[121.36293793 -67.85370636]
[114.22746277 -84.82917023]
[125.68659973 -98.12033844]
[127.69061279 -112.98587036]
[129.69462585 -127.85139465]
[130.25283813 -142.84100342]
[129.36001587 -157.81440735]
[128.46720886 -172.78782654]
[127.57438660 -187.76123047]
[115.81732178 -178.44610596]
[101.17035675 -181.68130493]
[94.43069458 -195.08192444]
[100.56655884 -208.76956177]
[115.05482483 -212.65417480]
[127.21447754 -203.87362671]
[127.43780518 -218.87196350]
[127.66113281 -233.87030029]
[114.18582153 -241.12802124]
[105.63646698 -253.82318115]
[103.97766113 -269.03854370]
[109.59056854 -283.27770996]
[121.18540192 -293.26861572]
[136.09774780 -296.71545410]
[150.90084839 -292.82614136]
[162.19306946 -282.49444580]
[167.37954712 -268.09448242]
[165.26844788 -252.93525696]
[156.34490967 -240.50025940]
[142.65946960 -233.64697266]
[142.43614197 -218.64863586]
[142.21281433 -203.65029907]
[142.54779053 -188.65403748]
[143.44061279 -173.68063354]
[144.33341980 -158.70722961]
[145.22624207 -143.73382568]
[152.30395508 -156.95903015]
[164.09877014 -166.22628784]
[178.62306213 -169.97392273]
[193.42924500 -167.57037354]
[206.02220154 -159.42068481]
[214.27980042 -146.89822388]
[216.81050110 -132.11325073]
[213.18782043 -117.55727386]
[204.02224731 -105.68325806]
[190.85835266 -98.49216461]
[175.91447449 -97.19582367]
[161.70892334 -102.01269531]
[150.63557434 -112.13105011]
[144.56015015 -125.84738159]
[142.55613708 -110.98185730]
[140.55212402 -96.11632538]
[147.63441467 -86.30981445]
[146.08650208 -73.90869141]
[136.19697571 -65.62858582]
[133.97186279 -50.79454041]
[131.74674988 -35.96049881]
[129.52162170 -21.12645531]
[131.63812256 -14.04533577]
[127.15136719 -6.08877659]
[124.70564270 8.71049404]
[133.20202637 16.32479477]
[137.00709534 27.20767784]
[135.06636047 38.69364166]
[127.74787140 47.90996933]
[116.77915192 52.49514389]
[113.89387512 67.21503448]
[111.00860596 81.93492889]
[108.12332916 96.65481567]
[109.60319519 99.31930542]
[110.14627075 102.58114624]
[109.52943420 106.09440613]
[107.66049957 109.43556213]
[104.60324097 112.15330505]
[100.84693909 126.67536926]
[97.09063721 141.19741821]
[93.33433533 155.71948242]
[94.64279175 159.85975647]
[94.57273102 163.80433655]
[93.35496521 167.14385986]
[91.32951355 169.58601379]
[88.89800262 170.98097229]
[84.28398895 185.25370789]
[79.66998291 199.52644348]
[75.05597687 213.79917908]
[80.22312164 225.61709595]
[76.08627319 237.40991211]
[65.37778473 243.03617859]
[60.55179214 257.23864746]
[55.72579193 271.44110107]
[50.89979553 285.64355469]
[46.07379913 299.84600830]
[41.24779892 314.04846191]
[54.66392136 307.33969116]
[69.28228760 310.70172119]
[78.41957855 322.59753418]
[77.89834595 337.58847046]
[67.95689392 348.82089233]
[53.14031982 351.15951538]
[40.22256088 343.53509521]
[35.10943604 329.43161011]
[28.83207321 343.05493164]
[22.55471230 356.67825317]
[16.27735138 370.30157471]
[9.99999142 383.92489624]
[3.72263074 397.54818726]
[-2.55472994 411.17150879]
[-0.44131079 429.46398926]
[-15.15498734 439.02822876]
[-21.22882080 452.74349976]
[-27.30265427 466.45877075]
[-33.37648773 480.17404175]
[-39.45032120 493.88931274]
[-37.96371078 509.64050293]
[-50.19187546 518.14471436]
[-56.26570892 531.85998535]
[-62.33954239 545.57525635]
[-49.42302704 553.23681641]
[-37.50335312 562.37237549]
[-26.74785995 572.85357666]
[-17.30753517 584.53332520]
[-9.31490612 597.24761963]
[-2.88217640 610.81805420]
[1.90034759 625.05407715]
[4.96552706 639.75579834]
[6.27033138 654.71685791]
[5.79644346 669.72729492]
[3.55051565 684.57623291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 199]
[41 198]
[42 197]
[44 195]
[45 194]
[46 193]
[47 192]
[48 191]
[51 189]
[52 188]
[53 187]
[54 186]
[55 185]
[56 184]
[57 183]
[58 175]
[59 174]
[60 173]
[61 172]
[62 171]
[63 170]
[65 167]
[66 166]
[67 165]
[68 164]
[69 159]
[70 158]
[71 157]
[72 156]
[73 151]
[74 150]
[75 149]
[76 148]
[79 143]
[80 142]
[81 140]
[82 139]
[83 138]
[84 137]
[86 134]
[87 133]
[88 132]
[89 118]
[90 117]
[91 116]
[92 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
