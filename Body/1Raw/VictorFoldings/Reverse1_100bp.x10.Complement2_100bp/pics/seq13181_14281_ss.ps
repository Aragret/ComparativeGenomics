%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGAUAAUACUCAGGAUCAACUGAACUUCACCUCUUCCGAUGCUAAAAAAACUACAGUAAAACACAUUCCCGCGUCUGACGACGCUUGUCUCACCACUAUxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[53.69063187 605.79724121]
[41.50576782 596.93853760]
[31.59804726 585.59020996]
[24.46443748 572.32147217]
[20.46275330 557.79791260]
[19.79372215 542.74798584]
[22.49090195 527.92657471]
[28.41900063 514.07720947]
[37.28066635 501.89450073]
[48.63140869 491.98953247]
[61.90187073 484.85913086]
[76.42641449 480.86096191]
[75.75662994 465.87594604]
[67.45874786 453.50683594]
[74.57212067 439.37493896]
[73.90233612 424.38992310]
[70.46329498 417.84814453]
[73.33580780 409.17712402]
[72.88920593 394.18377686]
[64.77639771 381.69250488]
[72.09938812 367.66809082]
[71.65277863 352.67474365]
[68.85266113 348.80584717]
[68.45323944 343.13684082]
[71.42279816 337.22979736]
[71.42279816 322.22979736]
[71.42279816 307.22979736]
[71.42279816 292.22979736]
[69.53826904 290.15454102]
[68.36222839 287.20776367]
[68.23074341 283.65554810]
[69.37743378 279.88067627]
[71.89600372 276.34362793]
[72.78881836 261.37020874]
[73.68163300 246.39682007]
[74.57444763 231.42341614]
[72.52010345 228.55775452]
[71.75170898 224.55467224]
[72.78872681 220.02941895]
[75.85622406 215.80596924]
[77.41674805 200.88735962]
[78.97727203 185.96876526]
[80.53779602 171.05015564]
[82.09832001 156.13154602]
[69.79418945 164.71109009]
[55.00362015 162.21327209]
[46.19932175 150.06895447]
[48.42479706 135.23497009]
[60.40518951 126.20887756]
[75.27758789 128.16125488]
[84.52214813 139.97276306]
[87.40741730 125.25286865]
[90.29269409 110.53297424]
[85.94354248 97.24476624]
[94.98741913 86.58174896]
[97.87268829 71.86186218]
[92.93435669 56.83110809]
[102.97528076 45.82978821]
[105.86055756 31.10989571]
[99.49019623 13.83274174]
[111.53137970 1.06650686]
[114.19717407 -13.69471073]
[116.86297607 -28.45592690]
[119.52877045 -43.21714401]
[122.19456482 -57.97836304]
[123.97702789 -72.87207794]
[124.86984253 -87.84548187]
[125.76266479 -102.81889343]
[115.55007935 -114.58073425]
[116.66882324 -129.75317383]
[127.94487762 -139.41682434]
[128.83769226 -154.39022827]
[129.73051453 -169.36364746]
[130.62332153 -184.33705139]
[131.51614380 -199.31045532]
[132.40895081 -214.28385925]
[133.30177307 -229.25726318]
[123.08919525 -241.01910400]
[124.20793915 -256.19155884]
[135.48399353 -265.85519409]
[136.37680054 -280.82861328]
[137.26962280 -295.80200195]
[138.16244507 -310.77542114]
[138.05076599 -325.77499390]
[136.93511963 -340.73345947]
[135.81947327 -355.69189453]
[134.70382690 -370.65036011]
[123.98577881 -385.62384033]
[132.21653748 -401.12292480]
[130.87829590 -416.06311035]
[129.54006958 -431.00329590]
[128.20182800 -445.94348145]
[124.31928253 -454.21170044]
[126.95658112 -461.11578369]
[125.84093475 -476.07424927]
[111.31099701 -480.46118164]
[99.34938049 -489.80380249]
[91.57379913 -502.83853149]
[89.03584290 -517.80261230]
[92.07874298 -532.67224121]
[100.29097748 -545.43640137]
[112.56190491 -554.36883545]
[127.23197937 -558.26153564]
[142.31719971 -556.58807373]
[155.77742004 -549.57470703]
[165.79223633 -538.16998291]
[171.00724792 -523.91632080]
[170.71714783 -508.74130249]
[164.96119690 -494.69732666]
[154.51780701 -483.68368530]
[140.79939270 -477.18991089]
[141.91503906 -462.23144531]
[143.14201355 -447.28170776]
[144.48025513 -432.34152222]
[145.81848145 -417.40133667]
[147.15672302 -402.46115112]
[156.23509216 -394.46679688]
[157.47227478 -382.03085327]
[149.66227722 -371.76602173]
[150.77792358 -356.80755615]
[151.89356995 -341.84909058]
[153.00923157 -326.89065552]
[161.42539978 -339.30709839]
[175.17619324 -345.30007935]
[190.00074768 -343.01260376]
[201.30552673 -333.15350342]
[205.58763123 -318.77770996]
[201.52018738 -304.33972168]
[190.36354065 -294.31329346]
[175.57470703 -291.80523682]
[161.73616028 -297.59268188]
[153.13584900 -309.88259888]
[152.24302673 -294.90921021]
[151.35021973 -279.93579102]
[150.45739746 -264.96237183]
[160.50521851 -254.02725220]
[159.81307983 -238.82937622]
[148.27517700 -228.36444092]
[147.38237000 -213.39103699]
[146.48954773 -198.41763306]
[145.59672546 -183.44422913]
[144.70391846 -168.47082520]
[143.81109619 -153.49742126]
[142.91828918 -138.52401733]
[152.96609497 -127.58889008]
[152.27395630 -112.39100647]
[140.73606873 -101.92607880]
[139.84324646 -86.95266724]
[138.95043945 -71.97926331]
[149.48001099 -82.66233826]
[164.25866699 -85.22969818]
[177.77432251 -78.72378540]
[184.98599243 -65.57114410]
[183.20387268 -50.67738724]
[173.09268188 -39.59751129]
[158.42361450 -36.46403885]
[144.66789246 -42.44568253]
[136.95578003 -55.31256485]
[134.28999329 -40.55134964]
[131.62419128 -25.79013252]
[128.95838928 -11.02891445]
[126.29260254 3.73230243]
[132.92994690 13.84527779]
[130.82983398 26.16490746]
[120.58044434 33.99516678]
[117.69517517 48.71506119]
[122.83988190 62.69294357]
[112.59258270 74.74713135]
[109.70730591 89.46702576]
[114.05645752 102.75523376]
[105.01258087 113.41825104]
[102.12731171 128.13813782]
[99.24204254 142.85803223]
[97.01692200 157.69207764]
[95.45639801 172.61068726]
[93.89587402 187.52928162]
[92.33535004 202.44789124]
[90.77482605 217.36650085]
[89.54785156 232.31622314]
[88.65503693 247.28962708]
[87.76222229 262.26303101]
[86.86940765 277.23645020]
[86.42279816 292.22979736]
[86.42279816 307.22979736]
[86.42279816 322.22979736]
[86.42279816 337.22979736]
[86.64612579 352.22811890]
[87.09273529 367.22149658]
[95.23748779 380.78515625]
[87.88255310 393.73715210]
[88.32916260 408.73052979]
[88.88737488 423.72012329]
[89.55715942 438.70516968]
[97.90295410 452.14608765]
[90.74166870 465.20614624]
[91.41145325 480.19119263]
[106.23477936 482.87759399]
[120.08847046 488.79562378]
[132.27761841 497.64843750]
[142.19084167 508.99197388]
[149.33088684 522.25726318]
[153.33959961 536.77886963]
[154.01593018 551.82849121]
[151.32592773 566.65112305]
[145.40454102 580.50341797]
[136.54878235 592.69042969]
[125.20284271 602.60089111]
[111.93583679 609.73773193]
[97.41323090 613.74291992]
[82.36347198 614.41558838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 196]
[13 195]
[15 193]
[16 192]
[18 191]
[19 190]
[21 188]
[22 187]
[25 186]
[26 185]
[27 184]
[28 183]
[33 182]
[34 181]
[35 180]
[36 179]
[40 178]
[41 177]
[42 176]
[43 175]
[44 174]
[51 173]
[52 172]
[53 171]
[55 169]
[56 168]
[58 166]
[59 165]
[61 162]
[62 161]
[63 160]
[64 159]
[65 158]
[66 149]
[67 148]
[68 147]
[71 144]
[72 143]
[73 142]
[74 141]
[75 140]
[76 139]
[77 138]
[80 135]
[81 134]
[82 133]
[83 132]
[84 122]
[85 121]
[86 120]
[87 119]
[89 116]
[90 115]
[91 114]
[92 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
