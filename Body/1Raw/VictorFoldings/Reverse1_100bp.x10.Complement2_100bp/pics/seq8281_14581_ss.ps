%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxUGAUUUGGGGGUAUUUAUCCUCUUCCGAAUCUUCUUUUGGGGUGUUUGGGGUAAUGAUUUGGGUGUGAGUUGUCUUUGUUUCGUAUGUAGUAAUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[256.00958252 480.99008179]
[265.98281860 469.75259399]
[277.42300415 460.01254272]
[269.38180542 447.35003662]
[261.34063721 434.68750000]
[253.29946899 422.02499390]
[245.25830078 409.36245728]
[237.21713257 396.69992065]
[228.98832703 384.15853882]
[220.57369995 371.74102783]
[212.15908813 359.32354736]
[203.74446106 346.90603638]
[195.32984924 334.48855591]
[190.89204407 332.72363281]
[187.51583862 328.15216064]
[186.85600281 321.57369995]
[178.81483459 308.91116333]
[170.77366638 296.24865723]
[170.66931152 311.24829102]
[164.14503479 324.75509644]
[152.46057129 334.16113281]
[137.87200928 337.65020752]
[123.19615936 334.54867554]
[111.26670837 325.45535278]
[104.38704681 312.12606812]
[103.88552856 297.13442993]
[109.85898590 283.37515259]
[121.15403748 273.50491333]
[135.58979797 269.42950439]
[150.37892151 271.93579102]
[162.66674805 280.54083252]
[157.00396729 266.65081787]
[151.34117126 252.76078796]
[140.31680298 247.78186035]
[135.48535156 236.25619507]
[139.93992615 224.15167236]
[134.48457336 210.17886353]
[129.02922058 196.20606995]
[123.57386017 182.23327637]
[118.11849976 168.26048279]
[112.66314697 154.28767395]
[107.20778656 140.31488037]
[101.75243378 126.34208679]
[96.29707336 112.36928558]
[94.98614502 127.31188965]
[90.18395996 141.52241516]
[82.16209412 154.19718933]
[71.37423706 164.61936951]
[58.43048859 172.19956970]
[44.06287766 176.50906372]
[29.08396149 177.30413818]
[14.34087658 174.53982544]
[0.66741151 168.37246704]
[-11.16313171 159.15084839]
[-20.48167801 147.39649963]
[-26.76122093 133.77418518]
[-29.64661789 119.05432129]
[-28.97468948 104.06937408]
[-24.78343391 89.66682434]
[-17.30988884 76.66120911]
[-6.97671700 65.78804779]
[5.63168812 57.66228104]
[19.80226135 52.74345398]
[34.73358536 51.30974960]
[49.58122635 53.44225693]
[63.50547409 59.02036667]
[75.71884918 67.72860718]
[85.53062439 79.07449341]
[92.38626099 92.41736603]
[92.16293335 77.41902924]
[91.93960571 62.42069244]
[89.58148956 58.77470016]
[88.60449982 54.95239258]
[88.89447021 51.40961075]
[90.20092010 48.51827621]
[92.17623138 46.52923965]
[92.84601593 31.54420090]
[93.51580048 16.55916214]
[93.18082428 1.56290364]
[91.84259033 -13.37728119]
[90.50435638 -28.31746674]
[89.16612244 -43.25765228]
[79.78697968 -52.11171341]
[78.97993469 -64.58297729]
[86.63336182 -73.95056152]
[77.89108276 -87.13703918]
[84.66033936 -100.40453339]
[83.54469299 -115.36298370]
[82.42904663 -130.32144165]
[81.31339264 -145.27989197]
[80.19774628 -160.23834229]
[76.43872833 -168.56346130]
[79.17853546 -175.42752075]
[78.28572083 -190.40092468]
[77.39289856 -205.37432861]
[62.85830307 -209.67797852]
[50.67403030 -218.69569397]
[42.31138611 -231.33854675]
[38.78020096 -246.07987976]
[40.50688553 -261.13955688]
[47.28293610 -274.69909668]
[58.29010773 -285.12109375]
[72.19923401 -291.14703369]
[87.33071136 -292.04928589]
[101.85735321 -287.71887207]
[114.02499390 -278.67871094]
[122.36432648 -266.02047729]
[125.86833191 -251.27265930]
[124.11389923 -236.21617126]
[117.31287384 -222.66914368]
[106.28651428 -212.26745605]
[92.36631012 -206.26715088]
[93.25912476 -191.29374695]
[94.15193939 -176.32034302]
[95.15619659 -161.35398865]
[96.27185059 -146.39553833]
[97.38749695 -131.43708801]
[98.50314331 -116.47863770]
[99.61879730 -101.52017975]
[108.28127289 -89.40363312]
[101.59181213 -75.06621552]
[112.23952484 -61.11654663]
[104.10630798 -44.59588623]
[105.44454193 -29.65570068]
[106.78277588 -14.71551514]
[108.12100983 0.22466946]
[116.35140228 -12.31569481]
[130.01142883 -18.51274490]
[144.86840820 -16.44626045]
[156.31872559 -6.75656033]
[160.81437683 7.55389404]
[156.96234131 22.05085373]
[145.95620728 32.24227524]
[131.20635986 34.97024155]
[117.28318024 29.38945580]
[108.50083923 17.22894859]
[107.83105469 32.21398544]
[107.16127014 47.19902420]
[106.93794250 62.19736481]
[107.16127014 77.19570160]
[107.38459778 92.19403839]
[110.26987457 106.91393280]
[115.72522736 120.88672638]
[121.18058777 134.85952759]
[126.63594055 148.83232117]
[132.09129333 162.80511475]
[137.54666138 176.77792358]
[143.00201416 190.75071716]
[148.45736694 204.72351074]
[153.91273499 218.69630432]
[168.55229187 229.86611938]
[165.23120117 247.09799194]
[170.89398193 260.98803711]
[176.55677795 274.87805176]
[183.43618774 288.20748901]
[191.47735596 300.86999512]
[199.51853943 313.53253174]
[207.74734497 326.07394409]
[216.16195679 338.49142456]
[224.57658386 350.90890503]
[232.99119568 363.32641602]
[241.40582275 375.74389648]
[247.17782593 378.96810913]
[250.02732849 383.88516235]
[249.87965393 388.65875244]
[257.92083740 401.32128906]
[265.96200562 413.98379517]
[274.00317383 426.64633179]
[282.04434204 439.30886841]
[290.08551025 451.97137451]
[303.76586914 445.75897217]
[318.17770386 441.51101685]
[333.04049683 439.31021118]
[348.06494141 439.19943237]
[362.95858765 441.18078613]
[377.43148804 445.21572876]
[391.20196533 451.22570801]
[404.00198364 459.09375000]
[415.58233643 468.66671753]
[425.71765137 479.75820923]
[434.21060181 492.15240479]
[440.89593506 505.60797119]
[445.64346313 519.86303711]
[448.36077881 534.64013672]
[448.99499512 549.65161133]
[447.53378296 564.60522461]
[444.00555420 579.20996094]
[438.47903442 593.18145752]
[431.06176758 606.24786377]
[421.89810181 618.15472412]
[411.16647339 628.67034912]
[399.07574463 637.59002686]
[385.86126709 644.74011230]
[371.78027344 649.98144531]
[357.10684204 653.21197510]
[342.12658691 654.36883545]
[327.13113403 653.42956543]
[312.41235352 650.41235352]
[298.25674438 645.37597656]
[284.93984985 638.41845703]
[272.72091675 629.67529297]
[261.83776855 619.31652832]
[252.50224304 607.54394531]
[244.89607239 594.58660889]
[239.16729736 580.69677734]
[235.42744446 566.14483643]
[233.74931335 551.21398926]
[234.16554260 536.19494629]
[236.66807556 521.37994385]
[241.20816040 507.05743408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 170]
[4 169]
[5 168]
[6 167]
[7 166]
[8 165]
[9 162]
[10 161]
[11 160]
[12 159]
[13 158]
[16 157]
[17 156]
[18 155]
[31 154]
[32 153]
[33 152]
[36 150]
[37 149]
[38 148]
[39 147]
[40 146]
[41 145]
[42 144]
[43 143]
[44 142]
[69 141]
[70 140]
[71 139]
[76 138]
[77 137]
[78 136]
[79 126]
[80 125]
[81 124]
[82 123]
[85 121]
[87 119]
[88 118]
[89 117]
[90 116]
[91 115]
[93 114]
[94 113]
[95 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
