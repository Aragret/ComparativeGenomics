%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[116.15682983 485.31015015]
[115.26401520 470.33673096]
[114.37120056 455.36334229]
[113.47838593 440.38992310]
[112.58557129 425.41650391]
[111.69275665 410.44311523]
[98.61381531 405.81607056]
[88.25358582 396.52426147]
[82.19828796 383.94601440]
[81.39189911 369.96600342]
[85.98912811 356.69305420]
[95.32709503 346.14190674]
[108.02067566 339.92745972]
[107.35089111 324.94241333]
[106.68110657 309.95736694]
[104.70579529 307.96832275]
[103.39934540 305.07699585]
[103.10937500 301.53421021]
[104.08636475 297.71191406]
[106.44448090 294.06591797]
[106.66780853 279.06759644]
[106.89113617 264.06924438]
[107.11446381 249.07090759]
[107.33779144 234.07257080]
[106.33353424 219.10623169]
[104.10841370 204.27218628]
[92.45266724 191.15310669]
[99.33460999 174.07327271]
[96.88887787 159.27400208]
[94.44315338 144.47473145]
[87.68698883 157.86705017]
[75.19425201 166.16955566]
[60.23051453 167.21199036]
[46.70726776 160.72186279]
[38.15945053 148.39567566]
[36.82144165 133.45547485]
[43.04299545 119.80657959]
[55.19781113 111.01678467]
[70.10865021 109.38372040]
[83.87785339 115.33427429]
[92.90585327 127.31214905]
[92.68252563 112.31381226]
[85.67764282 100.21326447]
[92.31913757 87.90951538]
[84.37723541 74.22607422]
[91.92418671 61.38501358]
[91.70085907 46.38667679]
[90.91953278 31.40703773]
[89.58129883 16.46685410]
[88.24306488 1.52666831]
[86.90483093 -13.41351700]
[83.80072021 -28.08881950]
[78.97472382 -42.29127502]
[64.84852600 -54.10364151]
[68.93574524 -71.17002869]
[63.89882660 -85.29905701]
[58.86191177 -99.42808533]
[53.82499313 -113.55711365]
[37.89504242 -125.91021729]
[42.20126724 -144.76077271]
[36.74591064 -158.73356628]
[31.29055214 -172.70637512]
[25.83519554 -186.67916870]
[11.36273193 -182.68519592]
[-3.44369388 -180.20048523]
[-18.42712593 -179.25137329]
[-33.42873001 -179.84793091]
[-48.28948212 -181.98384094]
[-62.85185242 -185.63642883]
[-76.96146393 -190.76701355]
[-90.46875763 -197.32118225]
[-103.23053741 -205.22946167]
[-115.11152649 -214.40803528]
[-125.98578644 -224.75958252]
[-135.73802185 -236.17439270]
[-144.26489258 -248.53143311]
[-151.47596741 -261.69973755]
[-157.29483032 -275.53973389]
[-161.65979004 -289.90466309]
[-164.52456665 -304.64224243]
[-165.85881042 -319.59631348]
[-165.64837646 -334.60830688]
[-163.89547729 -349.51907349]
[-160.61871338 -364.17059326]
[-155.85279846 -378.40753174]
[-149.64826965 -392.07894897]
[-142.07090759 -405.03994751]
[-133.20101929 -417.15313721]
[-123.13263702 -428.29006958]
[-111.97248840 -438.33273315]
[-99.83888245 -447.17468262]
[-86.86044312 -454.72210693]
[-73.17473602 -460.89508057]
[-58.92685318 -465.62814331]
[-44.26782227 -468.87112427]
[-29.35303688 -470.58959961]
[-14.34060478 -470.76541138]
[0.61033517 -469.39669800]
[15.34129429 -466.49792480]
[29.69611549 -462.09982300]
[43.52263260 -456.24905396]
[56.67427063 -449.00762939]
[69.01161957 -440.45230103]
[80.40390015 -430.67373657]
[90.73033905 -419.77563477]
[99.88147736 -407.87350464]
[107.76029968 -395.09350586]
[114.28329468 -381.57113647]
[119.38131714 -367.44973755]
[123.00031281 -352.87896729]
[125.10192871 -338.01333618]
[125.66387939 -323.01040649]
[124.68021393 -308.02920532]
[122.16136169 -293.22854614]
[118.13401031 -278.76531982]
[112.64086914 -264.79287720]
[105.74015808 -251.45930481]
[97.50503540 -238.90594482]
[88.02278900 -227.26588440]
[77.39393616 -216.66250610]
[65.73116302 -207.20820618]
[53.15808487 -199.00321960]
[39.80799484 -192.13452148]
[45.26335144 -178.16172791]
[50.71870804 -164.18893433]
[56.17406464 -150.21612549]
[65.86358643 -146.97174072]
[72.30303955 -138.75700378]
[73.17613983 -128.13542175]
[67.95402527 -118.59403229]
[72.99093628 -104.46500397]
[78.02785492 -90.33597565]
[83.06477356 -76.20693970]
[93.85583496 -70.74072266]
[98.16780853 -59.01081848]
[93.17717743 -47.11727142]
[98.00318146 -32.91481781]
[100.65184021 -47.67911911]
[108.13055420 -60.68176651]
[119.56072235 -70.39522552]
[133.59954834 -75.67835999]
[148.59774780 -75.91052246]
[162.79336548 -71.06443787]
[174.51869202 -61.70941544]
[182.39628601 -48.94447327]
[185.50065613 -34.26922607]
[183.46711731 -19.40770912]
[176.53457642 -6.10583401]
[165.51745605 4.07370520]
[151.71003723 9.93502712]
[136.73439026 10.78954983]
[122.34986115 6.53688383]
[110.24630737 -2.32337070]
[101.84501648 -14.75175095]
[103.18325043 0.18843414]
[104.52148438 15.12861919]
[105.85971832 30.06880379]
[117.33422852 20.40776825]
[132.07102966 23.20542717]
[139.20668030 36.39945221]
[133.48107910 50.26370239]
[119.11489105 54.57796097]
[106.69919586 46.16334915]
[106.92252350 61.16168594]
[114.84845734 73.77234650]
[107.31747437 87.68618774]
[114.32235718 99.78673553]
[107.68086243 112.09048462]
[107.90419006 127.08882141]
[109.24242401 142.02900696]
[111.68814850 156.82827759]
[114.13388062 171.62754822]
[124.14557648 179.75949097]
[125.87796021 192.13619995]
[118.94245911 202.04707336]
[121.16757965 216.88111877]
[127.69425964 203.37547302]
[139.69458008 194.37590027]
[154.48765564 191.89294434]
[168.76866150 196.48129272]
[179.34718323 207.11590576]
[183.85995483 221.42095947]
[181.29881287 236.20069885]
[172.23593140 248.15327454]
[158.69596863 254.60845947]
[143.70378113 254.12413025]
[130.60868835 246.80851746]
[122.33612823 234.29589844]
[122.11280060 249.29423523]
[121.88947296 264.29257202]
[121.66614532 279.29092407]
[121.44281769 294.28924561]
[121.66614532 309.28759766]
[122.33592987 324.27261353]
[123.00571442 339.25765991]
[138.01660156 345.53518677]
[148.74873352 357.68695068]
[153.09156799 373.24652100]
[150.22453308 389.08520508]
[140.77156067 402.04107666]
[126.66616058 409.55029297]
[127.55897522 424.52371216]
[128.45179749 439.49710083]
[129.34460449 454.47052002]
[130.23742676 469.44390869]
[131.13023376 484.41732788]
[142.12680054 496.09872437]
[139.70759583 511.95834351]
[125.72846222 519.83001709]
[110.91297150 513.67529297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[4 203]
[5 202]
[6 201]
[13 195]
[14 194]
[15 193]
[20 192]
[21 191]
[22 190]
[23 189]
[24 188]
[25 176]
[26 175]
[28 172]
[29 171]
[30 170]
[41 169]
[42 168]
[44 166]
[46 164]
[47 163]
[48 157]
[49 156]
[50 155]
[51 154]
[52 137]
[53 136]
[55 133]
[56 132]
[57 131]
[58 130]
[60 126]
[61 125]
[62 124]
[63 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
