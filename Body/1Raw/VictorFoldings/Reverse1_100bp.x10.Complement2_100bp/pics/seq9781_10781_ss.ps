%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[-38.80934143 603.07336426]
[-33.68583298 617.23541260]
[-31.72697830 632.16778564]
[-33.02439880 647.17218018]
[-37.51741409 661.54669189]
[-44.99587631 674.61907959]
[-55.11000061 685.77783203]
[-67.38673401 694.50115967]
[-81.25186920 700.38092041]
[-96.05691528 703.14221191]
[-111.10941315 702.65582275]
[-125.70531464 698.94458008]
[-139.16195679 692.18194580]
[-150.84996033 682.68432617]
[-160.22262573 670.89593506]
[-166.84159851 657.36804199]
[-170.39727783 642.73345947]
[-170.72338867 627.67663574]
[-167.80465698 612.90185547]
[-161.77760315 599.10009766]
[-152.92410278 586.91687012]
[-141.65829468 576.92211914]
[-128.50704956 569.58325195]
[-114.08551788 565.24353027]
[-99.06819916 564.10589600]
[-84.15748596 566.22357178]
[-78.91076660 552.17108154]
[-73.66404724 538.11865234]
[-68.41732788 524.06616211]
[-63.17061234 510.01370239]
[-58.02865219 495.92254639]
[-52.99173737 481.79351807]
[-47.95482254 467.66448975]
[-42.91790390 453.53546143]
[-37.88098907 439.40643311]
[-32.84407425 425.27740479]
[-34.01685333 421.95220947]
[-33.63731384 417.89376831]
[-31.37836266 413.83782959]
[-27.25388336 410.63851929]
[-21.59109688 396.74847412]
[-15.92831039 382.85845947]
[-10.36908531 368.92666626]
[-4.91372776 354.95385742]
[0.54162920 340.98104858]
[5.99698639 327.00827026]
[11.45234299 313.03546143]
[16.90769958 299.06265259]
[22.36305809 285.08987427]
[27.81841469 271.11706543]
[33.27377319 257.14425659]
[38.52048874 243.09179688]
[43.55740738 228.96276855]
[48.59432220 214.83374023]
[53.52591705 200.66760254]
[58.35191345 186.46514893]
[63.17790985 172.26269531]
[68.00390625 158.06024170]
[53.60020828 162.24752808]
[41.25844193 153.72222900]
[40.07649231 138.76887512]
[50.92565918 128.41050720]
[65.80833435 130.28294373]
[73.75337219 143.00425720]
[79.62233734 129.20007324]
[85.49129486 115.39589691]
[91.36025238 101.59172058]
[90.46381378 98.67866516]
[90.60750580 95.37504578]
[91.93802643 92.06549072]
[94.45792389 89.18341827]
[98.01141357 87.15717316]
[104.69161224 73.72679901]
[111.37180328 60.29642105]
[118.05200195 46.86604309]
[124.73219299 33.43566895]
[131.21168518 19.90732384]
[129.95976257 4.13572741]
[142.31318665 -4.18546104]
[141.06124878 -19.95705605]
[153.41467285 -28.27824402]
[159.69203186 -41.90156174]
[165.96939087 -55.52487564]
[172.24674988 -69.14819336]
[167.01119995 -83.81880188]
[173.57141113 -97.54535675]
[187.58985901 -102.44625092]
[193.86721802 -116.06956482]
[200.14457703 -129.69288635]
[206.42193604 -143.31619263]
[211.03594971 -157.58892822]
[213.92121887 -172.30882263]
[216.58700562 -187.07003784]
[219.03274536 -201.86930847]
[221.47846985 -216.66857910]
[216.09480286 -231.54563904]
[225.80372620 -242.84103394]
[228.24945068 -257.64031982]
[230.69517517 -272.43957520]
[233.14091492 -287.23886108]
[219.45777893 -293.61651611]
[208.00349426 -303.45022583]
[199.62802124 -316.01025391]
[194.95288086 -330.36453247]
[194.32499695 -345.44790649]
[197.79098511 -360.14108276]
[205.09361267 -373.35375977]
[215.69097900 -384.10540771]
[228.79672241 -391.59823608]
[243.43827820 -395.27618408]
[258.52914429 -394.86636353]
[272.94952393 -390.39916992]
[285.62927246 -382.20608521]
[295.62747192 -370.89511108]
[302.20223999 -357.30557251]
[304.86563110 -342.44595337]
[303.42004395 -327.41888428]
[297.97271729 -313.33947754]
[288.92791748 -301.25253296]
[276.95678711 -292.05499268]
[262.94769287 -286.42938232]
[247.94018555 -284.79312134]
[245.49444580 -269.99383545]
[243.04872131 -255.19458008]
[240.60299683 -240.39530945]
[246.16159058 -226.57679749]
[236.27774048 -214.22285461]
[233.83201599 -199.42358398]
[231.38627625 -184.62431335]
[233.38992310 -180.28904724]
[232.69145203 -174.64909363]
[228.64111328 -169.42355347]
[225.75582886 -154.70365906]
[235.40332031 -166.18955994]
[248.36270142 -173.74301147]
[263.11151123 -176.47663879]
[277.91705322 -174.06929016]
[291.04003906 -166.80378723]
[300.93875122 -155.53367615]
[306.45031738 -141.58296204]
[306.92724609 -126.59053802]
[302.31347656 -112.31772614]
[293.15109253 -100.44126129]
[280.51641846 -92.35639191]
[265.89379883 -89.01291656]
[251.00105286 -90.80362701]
[237.58781433 -97.51814270]
[227.22981262 -108.36766052]
[221.14392090 -122.07757568]
[220.04524231 -137.03883362]
[213.76788330 -123.41551971]
[207.49052429 -109.79220581]
[201.21316528 -96.16888428]
[206.59590149 -82.32830811]
[200.42384338 -68.42290497]
[185.87007141 -62.87083435]
[179.59271240 -49.24751663]
[173.31535339 -35.62419891]
[167.03797913 -22.00088501]
[168.73892212 -7.20371914]
[155.93649292 2.09189987]
[157.63743591 16.88906479]
[144.83500671 26.18468285]
[145.61911011 30.89575768]
[143.45207214 36.14942169]
[138.16256714 40.11586380]
[131.48237610 53.54623795]
[124.80218506 66.97661591]
[118.12198639 80.40699005]
[111.44179535 93.83736420]
[105.16443634 107.46068573]
[99.29547119 121.26486206]
[93.42651367 135.06903076]
[87.55754852 148.87321472]
[82.20636749 162.88623047]
[77.38036346 177.08869934]
[72.55436707 191.29115295]
[67.72837067 205.49360657]
[67.93038940 214.62579346]
[62.72335052 219.87065125]
[57.68643570 233.99967957]
[52.64952087 248.12872314]
[53.46310043 254.68994141]
[51.18325424 259.89562988]
[47.24657059 262.59963989]
[41.79121399 276.57241821]
[36.33585358 290.54522705]
[30.88049889 304.51803589]
[25.42514038 318.49081421]
[19.96978378 332.46362305]
[14.51442719 346.43640137]
[9.05906963 360.40921021]
[3.60371280 374.38201904]
[3.39775729 383.51412964]
[-2.03828382 388.52124023]
[-7.70107031 402.41125488]
[-13.36385727 416.30130005]
[-18.71504211 430.31433105]
[-23.75195885 444.44335938]
[-28.78887558 458.57238770]
[-33.82579041 472.70141602]
[-38.86270905 486.83044434]
[-43.89962387 500.95947266]
[-43.83359146 510.09365845]
[-49.11814117 515.26037598]
[-54.36486053 529.31286621]
[-59.61157990 543.36535645]
[-64.85829926 557.41784668]
[-70.10501099 571.47027588]
[-57.45497894 579.64282227]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 209]
[27 208]
[28 207]
[29 206]
[30 205]
[31 203]
[32 202]
[33 201]
[34 200]
[35 199]
[36 198]
[40 197]
[41 196]
[42 195]
[43 193]
[44 192]
[45 191]
[46 190]
[47 189]
[48 188]
[49 187]
[50 186]
[51 185]
[52 182]
[53 181]
[54 180]
[55 178]
[56 177]
[57 176]
[58 175]
[64 174]
[65 173]
[66 172]
[67 171]
[72 170]
[73 169]
[74 168]
[75 167]
[76 166]
[77 163]
[79 161]
[81 159]
[82 158]
[83 157]
[84 156]
[87 153]
[88 152]
[89 151]
[90 150]
[91 133]
[92 132]
[93 129]
[94 128]
[95 127]
[97 125]
[98 124]
[99 123]
[100 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
