%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAACAUUAACUCUAACGAGCCCCCUUAUCCAAUACACUAAUCCUCAUCCCAAUCCUACUCACCCUUCUUCUUUCUCUCCUUCAUUUCAAAUUAAUACxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[82.25469971 593.04876709]
[67.24060059 592.95404053]
[52.32163239 591.26397705]
[37.66683197 587.99761963]
[23.44225693 583.19201660]
[9.80907631 576.90167236]
[-3.07823253 569.19781494]
[-15.07364750 560.16778564]
[-26.04125023 549.91381836]
[-35.85676956 538.55212402]
[-44.40898895 526.21148682]
[-51.60100555 513.03167725]
[-57.35132599 499.16207886]
[-61.59479904 484.75982666]
[-64.28334045 469.98809814]
[-65.38648224 455.01428223]
[-64.89173126 440.00802612]
[-62.80469131 425.13940430]
[-59.14900970 410.57684326]
[-53.96611023 396.48535156]
[-47.31472015 383.02465820]
[-39.27019882 370.34719849]
[-29.92370033 358.59664917]
[-19.38113022 347.90618896]
[-7.76193905 338.39688110]
[4.80221558 330.17654419]
[18.16897202 323.33828735]
[32.18687820 317.95956421]
[46.69709396 314.10137939]
[61.53521347 311.80740356]
[76.53311157 311.10366821]
[77.42592621 296.13024902]
[78.31874084 281.15686035]
[79.21155548 266.18344116]
[80.10437012 251.21003723]
[80.99719238 236.23663330]
[78.25738525 229.37257385]
[82.01640320 221.04745483]
[74.36297607 211.67987061]
[75.17002106 199.20860291]
[84.54916382 190.35453796]
[85.88739777 175.41435242]
[79.31642151 162.04754639]
[88.25405884 148.99269104]
[89.59229279 134.05250549]
[90.93052673 119.11232758]
[92.26876068 104.17214203]
[90.51972961 101.67606354]
[89.64025879 98.48842621]
[89.88824463 94.93006134]
[91.39944458 91.41259766]
[94.15737152 88.39154053]
[96.38248444 73.55749512]
[98.60760498 58.72345352]
[100.05702209 43.79364395]
[100.72680664 28.80860519]
[101.39659119 13.82356548]
[102.06637573 -1.16147327]
[102.73616791 -16.14651299]
[101.84334564 -31.11991692]
[99.39762115 -45.91918945]
[96.51235199 -60.63908005]
[93.19008636 -75.26654053]
[89.86782837 -89.89399719]
[86.54557037 -104.52146149]
[83.22331238 -119.14891815]
[79.90105438 -133.77638245]
[69.42308044 -141.29800415]
[66.95709229 -153.54965210]
[73.29039001 -163.85575867]
[70.18627930 -178.53106689]
[67.08216858 -193.20635986]
[52.12868881 -191.82440186]
[37.11587906 -192.18780518]
[22.24677467 -194.29167175]
[7.72246313 -198.10755920]
[-6.26062965 -203.58383179]
[-19.51339912 -210.64645386]
[-31.85661697 -219.19990540]
[-43.12335205 -229.12850952]
[-53.16123962 -240.29798889]
[-61.83452988 -252.55729675]
[-69.02591705 -265.74063110]
[-74.63815308 -279.66970825]
[-78.59534454 -294.15615845]
[-80.84396362 -309.00405884]
[-81.35359955 -324.01263428]
[-80.11737061 -338.97885132]
[-77.15199280 -353.70037842]
[-72.49756622 -367.97808838]
[-66.21703339 -381.61889648]
[-58.39533615 -394.43829346]
[-49.13825226 -406.26296997]
[-38.57097626 -416.93298340]
[-26.83641624 -426.30404663]
[-14.09326744 -434.24938965]
[-0.51386875 -440.66162109]
[13.71813488 -445.45394897]
[28.41027260 -448.56164551]
[43.36384964 -449.94259644]
[58.37663651 -449.57818604]
[73.24559784 -447.47332764]
[87.76965332 -443.65649414]
[101.75238037 -438.17926025]
[115.00467682 -431.11575317]
[127.34732819 -422.56149292]
[138.61340332 -412.63214111]
[148.65054321 -401.46197510]
[157.32301331 -389.20208740]
[164.51351929 -376.01828003]
[170.12483215 -362.08880615]
[174.08105469 -347.60211182]
[176.32867432 -332.75405884]
[176.83731079 -317.74545288]
[175.60008240 -302.77929688]
[172.63372803 -288.05798340]
[167.97834778 -273.78060913]
[161.69689941 -260.14022827]
[153.87434387 -247.32131958]
[144.61648560 -235.49725342]
[134.04849243 -224.82794189]
[122.31330109 -215.45768738]
[109.56962585 -207.51316833]
[95.98979950 -201.10186768]
[81.75747681 -196.31047058]
[84.86158752 -181.63517761]
[87.96569824 -166.95986938]
[100.38163757 -154.55780029]
[94.52851105 -137.09864807]
[97.85076904 -122.47118378]
[101.17302704 -107.84371948]
[104.49529266 -93.21626282]
[107.81755066 -78.58879852]
[111.13980865 -63.96133804]
[113.43717194 -62.35501862]
[115.23667145 -59.74189377]
[116.15164185 -56.30704117]
[115.86950684 -52.37195206]
[114.19689178 -48.36491776]
[116.64261627 -33.56564713]
[122.05328369 -47.55580902]
[132.35014343 -58.46336365]
[146.00572205 -64.67023468]
[160.99429321 -65.25566864]
[175.09239197 -60.13282013]
[186.20864868 -50.06163406]
[192.69403076 -36.53611374]
[193.58648682 -21.56268501]
[188.75360107 -7.36256933]
[178.91232300 3.95772982]
[165.52253723 10.71891499]
[150.57054138 11.91800308]
[136.27436829 7.37711811]
[124.75479126 -2.23012757]
[117.72120667 -15.47672653]
[117.05141449 -0.49168816]
[116.38162994 14.49335098]
[115.71184540 29.47838974]
[115.04206085 44.46342850]
[126.05226898 34.27641296]
[141.02804565 33.42434311]
[153.12268066 42.29677582]
[156.80664062 56.83735275]
[150.39570618 70.39831543]
[136.82083130 76.77977753]
[122.28829956 73.06422424]
[113.44165039 60.94857025]
[111.21652985 75.78261566]
[108.99141693 90.61665344]
[107.20894623 105.51037598]
[105.87071228 120.45056152]
[104.53247833 135.39074707]
[103.19424438 150.33093262]
[109.66950226 164.76635742]
[100.82758331 176.75259399]
[99.48934937 191.69277954]
[107.62256622 208.21343994]
[96.97485352 222.16310120]
[95.97059631 237.12944031]
[95.07778168 252.10285950]
[94.18495941 267.07626343]
[93.29214478 282.04965210]
[92.39933014 297.02307129]
[91.50651550 311.99645996]
[106.31451416 314.47744751]
[120.77490234 318.51840210]
[134.72383118 324.07351685]
[148.00326538 331.07986450]
[160.46270752 339.45806885]
[171.96101379 349.11318970]
[182.36787415 359.93582153]
[191.56538391 371.80334473]
[199.44932556 384.58126831]
[205.93037415 398.12481689]
[210.93508911 412.28057861]
[214.40675354 426.88809204]
[216.30604553 441.78186035]
[216.61145020 456.79315186]
[215.31948853 471.75186157]
[212.44479370 486.48849487]
[208.01997375 500.83609009]
[202.09512329 514.63201904]
[194.73741150 527.72003174]
[186.03018188 539.95184326]
[176.07211304 551.18878174]
[164.97601318 561.30352783]
[152.86764526 570.18157959]
[139.88417053 577.72222900]
[126.17271423 583.84008789]
[111.88864136 588.46582031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 184]
[32 183]
[33 182]
[34 181]
[35 180]
[36 179]
[38 178]
[41 176]
[42 175]
[44 173]
[45 172]
[46 171]
[47 170]
[52 169]
[53 168]
[54 167]
[55 159]
[56 158]
[57 157]
[58 156]
[59 155]
[60 140]
[61 139]
[62 134]
[63 133]
[64 132]
[65 131]
[66 130]
[67 129]
[70 127]
[71 126]
[72 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
