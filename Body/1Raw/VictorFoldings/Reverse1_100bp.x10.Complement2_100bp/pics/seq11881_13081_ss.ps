%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxGUUCGUGAUAUCAACAUCGUCCUUAGAAGAAUGAGUAGGCGAAGGUGGGGGAUCGUCUUUUAUCGGGUGAUUAGGUUUGAGAUUGUGAUACGAAUCCGCG\
) } def
/len { sequence length } bind def

/coor [
[58.84467697 626.28961182]
[44.92909622 631.96911621]
[30.30959702 635.45776367]
[15.32888222 636.67376709]
[0.33812347 635.58862305]
[-14.31127548 632.22772217]
[-28.27591324 626.66992188]
[-41.22843552 619.04547119]
[-52.86521912 609.53302002]
[-62.91347885 598.35571289]
[-71.13767242 585.77545166]
[-77.34500885 572.08715820]
[-81.38998413 557.61169434]
[-83.17778015 542.68841553]
[-82.66647339 527.66711426]
[-79.86807251 512.89996338]
[-74.84815216 498.73306274]
[-67.72440338 485.49856567]
[-58.66381073 473.50662231]
[-47.87876892 463.03842163]
[-35.62209320 454.33932495]
[-22.18110085 447.61325073]
[-7.87086535 443.01785278]
[6.97316122 440.66088867]
[22.00301170 440.59759521]
[24.22812843 425.76354980]
[26.45324707 410.92950439]
[28.67836380 396.09545898]
[30.79298782 381.24526978]
[32.79700089 366.37973022]
[34.80101395 351.51419067]
[36.80502701 336.64868164]
[25.51004791 346.51901245]
[10.58137321 347.98007202]
[-2.41296554 340.48693848]
[-8.62640285 326.83432007]
[-5.74148083 312.11437988]
[5.16579723 301.81723022]
[20.02728462 299.78347778]
[33.30001450 306.77163696]
[40.03377151 320.17648315]
[35.73016357 305.91717529]
[46.67677307 294.49429321]
[50.43307495 279.97222900]
[54.18937683 265.45016479]
[48.59586716 248.81648254]
[61.61188889 235.79093933]
[65.15156555 221.21456909]
[68.69123840 206.63818359]
[72.23090363 192.06181335]
[75.77057648 177.48544312]
[79.09284210 162.85797119]
[82.19695282 148.18267822]
[85.30105591 133.50737000]
[88.40516663 118.83206940]
[91.50927734 104.15676880]
[89.71763611 99.22686005]
[90.81566620 93.64405823]
[94.93046570 89.09374237]
[98.47013855 74.51737213]
[101.57424927 59.84206772]
[104.24004364 45.08084869]
[106.90583801 30.31963158]
[109.57163239 15.55841541]
[96.66346741 23.19904900]
[82.09964752 19.60807419]
[74.22299194 6.84256506]
[77.54560089 -7.78481531]
[90.16413879 -15.89483929]
[104.85012817 -12.84171677]
[113.19058990 -0.37534580]
[117.16268158 -14.83986950]
[121.13478088 -29.30439377]
[117.32806396 -44.66080856]
[128.15942383 -54.88484955]
[122.46972656 -66.46026611]
[126.07587433 -78.42602539]
[136.52244568 -84.52484894]
[140.70945740 -98.92862701]
[144.89646912 -113.33241272]
[149.08348083 -127.73619080]
[145.50582886 -143.14758301]
[156.48818970 -153.20922852]
[150.97148132 -164.86807251]
[154.75537109 -176.77880859]
[165.29159546 -182.72142029]
[169.69259644 -197.06127930]
[174.09359741 -211.40112305]
[178.49459839 -225.74096680]
[164.74649048 -231.78300476]
[151.79280090 -239.38027954]
[139.80871582 -248.43003845]
[128.95629883 -258.80990601]
[119.38231659 -270.37948608]
[111.21625519 -282.98236084]
[104.56854248 -296.44802856]
[99.52908325 -310.59442139]
[96.16603088 -325.23019409]
[94.52487183 -340.15747070]
[94.62779236 -355.17431641]
[96.47340393 -370.07769775]
[100.03674316 -384.66601562]
[105.26963043 -398.74200439]
[112.10128784 -412.11529541]
[120.43932343 -424.60504150]
[130.17098999 -436.04229736]
[141.16465759 -446.27246094]
[153.27165222 -455.15710449]
[166.32826233 -462.57611084]
[180.15788269 -468.42913818]
[194.57351685 -472.63702393]
[209.38017273 -475.14288330]
[224.37762451 -475.91281128]
[239.36306763 -474.93637085]
[254.13380432 -472.22683716]
[268.49011230 -467.82077026]
[282.23779297 -461.77783203]
[295.19097900 -454.17968750]
[307.17446899 -445.12911987]
[318.02618408 -434.74853516]
[327.59939575 -423.17831421]
[335.76461792 -410.57492065]
[342.41143799 -397.10879517]
[347.44995117 -382.96206665]
[350.81201172 -368.32604980]
[352.45217896 -353.39868164]
[352.34826660 -338.38183594]
[350.50164795 -323.47860718]
[346.93734741 -308.89050293]
[341.70352173 -294.81488037]
[334.87097168 -281.44204712]
[326.53210449 -268.95285034]
[316.79968262 -257.51623535]
[305.80532837 -247.28681946]
[293.69772339 -238.40296936]
[280.64062500 -230.98483276]
[266.81060791 -225.13273621]
[252.39469910 -220.92579651]
[237.58787537 -218.42094421]
[222.59036255 -217.65200806]
[207.60499573 -218.62942505]
[192.83444214 -221.33996582]
[188.43344116 -207.00012207]
[184.03244019 -192.66027832]
[179.63143921 -178.32043457]
[184.47663879 -161.45356750]
[170.89198303 -149.02221680]
[174.76911926 -134.64108276]
[163.48725891 -123.54917908]
[159.30024719 -109.14540100]
[155.11323547 -94.74161530]
[150.92622375 -80.33783722]
[156.02201843 -63.54498291]
[142.62394714 -50.91275406]
[146.71476746 -36.59093857]
[135.59930420 -25.33229828]
[131.62721252 -10.86777306]
[127.65511322 3.59675050]
[124.33285522 18.22421074]
[121.66705322 32.98542786]
[119.00125885 47.74664688]
[116.33546448 62.50786209]
[117.82118225 64.88500214]
[118.45480347 67.99388123]
[117.95289612 71.51290131]
[116.15359497 75.02388763]
[113.04651642 78.05704498]
[109.50684357 92.63341522]
[106.18458557 107.26087952]
[103.08047485 121.93618011]
[99.97636414 136.61148071]
[96.87225342 151.28678894]
[93.76814270 165.96208191]
[95.45101166 172.35578918]
[93.88709259 177.81941223]
[90.34695435 181.02511597]
[86.80728149 195.60148621]
[83.26760864 210.17785645]
[79.72793579 224.75424194]
[76.18826294 239.33061218]
[82.22007751 250.73149109]
[78.97179413 262.79931641]
[68.71143341 269.20645142]
[64.95513153 283.72851562]
[61.19883347 298.25057983]
[65.23376465 313.54861450]
[54.55582809 323.93280029]
[51.67055511 338.65267944]
[49.66654205 353.51821899]
[47.66252899 368.38372803]
[45.65851593 383.24926758]
[47.61335373 392.17205811]
[43.51240921 398.32055664]
[41.28728867 413.15460205]
[39.06217194 427.98864746]
[36.83705521 442.82269287]
[51.18686676 447.29296875]
[64.68606567 453.90145874]
[77.01822662 462.49322510]
[87.89424896 472.86688232]
[97.05918884 484.77923584]
[104.29821014 497.95104980]
[109.44161224 512.07360840]
[112.36883545 526.81573486]
[113.01126099 541.83203125]
[111.35382080 556.77032471]
[107.43537903 571.28051758]
[101.34777832 585.02252197]
[93.23373413 597.67407227]
[83.28343964 608.93872070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 196]
[26 195]
[27 194]
[28 193]
[29 191]
[30 190]
[31 189]
[32 188]
[41 187]
[43 185]
[44 184]
[45 183]
[47 180]
[48 179]
[49 178]
[50 177]
[51 176]
[52 173]
[53 172]
[54 171]
[55 170]
[56 169]
[59 168]
[60 167]
[61 162]
[62 161]
[63 160]
[64 159]
[71 158]
[72 157]
[73 156]
[75 154]
[78 152]
[79 151]
[80 150]
[81 149]
[83 147]
[86 145]
[87 144]
[88 143]
[89 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
