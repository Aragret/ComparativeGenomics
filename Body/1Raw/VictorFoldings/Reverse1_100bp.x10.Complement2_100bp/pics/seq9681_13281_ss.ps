%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[167.65812683 568.14843750]
[163.09606934 553.77355957]
[162.25306702 538.71563721]
[165.18209839 523.92132568]
[171.69905090 510.32058716]
[181.39425659 498.76837158]
[193.65827942 489.99084473]
[207.72016907 484.53979492]
[205.93769836 469.64608765]
[204.15524292 454.75238037]
[202.37277222 439.85864258]
[200.59030151 424.96493530]
[197.48619080 410.28964233]
[193.08520508 395.94979858]
[188.68420410 381.60995483]
[184.28320312 367.27008057]
[179.56306458 353.03210449]
[174.52615356 338.90307617]
[169.48924255 324.77404785]
[164.45231628 310.64501953]
[159.41540527 296.51599121]
[148.62434387 291.04977417]
[144.31237793 279.31985474]
[149.30299377 267.42633057]
[144.47700500 253.22386169]
[139.65100098 239.02140808]
[134.82499695 224.81895447]
[129.89340210 210.65281677]
[118.33162689 201.26269531]
[120.98564148 185.66567993]
[117.13121033 182.84567261]
[115.00737000 177.57440186]
[116.01593781 171.04031372]
[111.40193176 156.76757812]
[106.78792572 142.49484253]
[102.17391205 128.22212219]
[97.24231720 114.05598450]
[86.58087921 105.01024628]
[88.70520782 91.19073486]
[83.45848846 77.13826752]
[78.10730743 63.12524414]
[72.65194702 49.15244675]
[67.19659424 35.17964935]
[52.99908829 28.77116585]
[47.66562653 14.52304840]
[53.86262894 1.02739155]
[48.40727234 -12.94540596]
[42.84804535 -26.87720490]
[37.18526077 -40.76723099]
[31.52247429 -54.65725708]
[25.85968781 -68.54728699]
[13.48510456 -78.40528870]
[15.84506989 -93.11174774]
[10.07903671 -106.95922852]
[4.21007586 -120.76341248]
[-1.65888512 -134.56758118]
[-15.98830605 -132.66812134]
[-30.30845642 -134.54507446]
[-43.64189911 -140.06399536]
[-55.08020020 -148.84207153]
[-63.84579468 -160.27464294]
[-69.34487915 -173.57690430]
[-71.20759583 -187.83772278]
[-69.31294250 -202.08210754]
[-63.79658127 -215.33778381]
[-55.04115295 -226.70166016]
[-43.64974594 -235.40124512]
[-49.31253433 -249.29127502]
[-61.68711853 -259.14929199]
[-59.32715225 -273.85574341]
[-66.12783813 -260.48596191]
[-80.34719849 -255.71000671]
[-93.83973694 -262.26373291]
[-98.87631226 -276.39288330]
[-92.57174683 -290.00363159]
[-78.53759003 -295.29913330]
[-64.81388855 -289.24655151]
[-69.21488190 -303.58639526]
[-73.61588287 -317.92623901]
[-78.01688385 -332.26611328]
[-92.98852539 -330.73767090]
[-107.97064972 -332.15975952]
[-122.38736725 -336.47766113]
[-135.68455505 -343.52542114]
[-147.35108948 -353.03216553]
[-156.93855286 -364.63247681]
[-164.07843018 -377.88043213]
[-168.49626160 -392.26684570]
[-170.02226257 -407.23873901]
[-168.59776306 -422.22061157]
[-164.27752686 -436.63665771]
[-157.22760010 -449.93270874]
[-147.71896362 -461.59768677]
[-136.11712646 -471.18328857]
[-122.86800385 -478.32101440]
[-108.48088074 -482.73651123]
[-93.50873566 -484.26010132]
[-78.52707672 -482.83316040]
[-64.11175537 -478.51058960]
[-50.81685257 -471.45852661]
[-39.15338898 -461.94799805]
[-29.56968307 -450.34460449]
[-22.43410301 -437.09432983]
[-18.02092361 -422.70648193]
[-16.49977303 -407.73410034]
[-17.92912102 -392.75265503]
[-22.25402832 -378.33804321]
[-29.30825615 -365.04428101]
[-38.82065964 -353.38235474]
[-50.42560577 -343.80053711]
[-63.67703629 -336.66708374]
[-59.27603531 -322.32723999]
[-54.87503815 -307.98739624]
[-50.47404099 -293.64755249]
[-45.43712234 -279.51852417]
[-33.46758270 -270.65402222]
[-35.42250824 -254.95407104]
[-29.75971985 -241.06404114]
[-14.25841427 -242.78289795]
[1.11421633 -240.06620789]
[15.11349773 -233.12559509]
[26.60361862 -222.51509094]
[34.64977646 -209.08676147]
[38.59423065 -193.92243958]
[38.11006165 -178.24645996]
[33.22826004 -163.32687378]
[24.33586121 -150.37280273]
[12.14529133 -140.43655396]
[18.01425171 -126.63237000]
[23.88321304 -112.82819366]
[29.39319992 -107.90256500]
[29.73509598 -98.77453613]
[41.70463943 -89.91003418]
[39.74971390 -74.21007538]
[45.41250229 -60.32004547]
[51.07528687 -46.43001938]
[56.73807526 -32.53998947]
[62.17411423 -27.53287125]
[62.38006973 -18.40076256]
[67.83542633 -4.42796564]
[81.53731537 1.29862833]
[87.26886749 15.39131832]
[81.16938782 29.72429085]
[86.62474823 43.69709015]
[92.08010101 57.66988754]
[97.44099426 62.75738525]
[97.51096344 71.89154816]
[102.75768280 85.94401550]
[113.41912079 94.98975372]
[111.29479218 108.80926514]
[115.32218170 112.12998199]
[117.45937347 116.25135803]
[117.71791077 120.31930542]
[116.44664764 123.60810852]
[121.06065369 137.88084412]
[125.67466736 152.15357971]
[130.28868103 166.42630005]
[135.11466980 180.62876892]
[147.03672791 191.02949524]
[144.02244568 205.61590576]
[149.85180664 212.64840698]
[149.02746582 219.99295044]
[153.85345459 234.19540405]
[158.67945862 248.39785767]
[163.50544739 262.60031128]
[177.63165283 274.41268921]
[173.54443359 291.47906494]
[178.58134460 305.60809326]
[183.61827087 319.73712158]
[188.65518188 333.86614990]
[193.69209290 347.99517822]
[197.66960144 351.37548828]
[199.74519348 355.52822876]
[199.94314575 359.59957886]
[198.62304688 362.86911011]
[203.02404785 377.20895386]
[207.42504883 391.54879761]
[211.82604980 405.88864136]
[215.89866638 391.45208740]
[225.76672363 380.15512085]
[239.52485657 374.17901611]
[254.51655579 374.67761230]
[267.84719849 381.55471802]
[276.94281006 393.48239136]
[280.04721069 408.15762329]
[276.56094360 422.74688721]
[267.15716553 434.43316650]
[253.65164185 440.96005249]
[238.65202332 441.06732178]
[225.05451965 434.73422241]
[215.48402405 423.18246460]
[217.26649475 438.07620239]
[219.04895020 452.96990967]
[220.83142090 467.86361694]
[222.61389160 482.75735474]
[237.56498718 484.73614502]
[251.55393982 490.37173462]
[263.70141602 499.30984497]
[273.24380493 510.98861694]
[279.58123779 524.67388916]
[282.31536865 539.50549316]
[281.27435303 554.55096436]
[276.52355957 568.86462402]
[268.36169434 581.54669189]
[257.30175781 591.79992676]
[244.03903198 598.97985840]
[229.40722656 602.63507080]
[214.32608032 602.53588867]
[199.74360657 598.68841553]
[186.57650757 591.33465576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 195]
[9 194]
[10 193]
[11 192]
[12 191]
[13 178]
[14 177]
[15 176]
[16 175]
[17 171]
[18 170]
[19 169]
[20 168]
[21 167]
[24 165]
[25 164]
[26 163]
[27 162]
[28 160]
[30 158]
[33 157]
[34 156]
[35 155]
[36 154]
[37 150]
[39 148]
[40 147]
[41 145]
[42 144]
[43 143]
[46 140]
[47 139]
[48 137]
[49 136]
[50 135]
[51 134]
[53 132]
[54 130]
[55 129]
[56 128]
[67 118]
[68 117]
[70 115]
[77 114]
[78 113]
[79 112]
[80 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
