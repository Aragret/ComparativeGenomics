%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[188.24198914 481.23074341]
[188.71739197 466.20971680]
[191.42636108 451.42730713]
[196.30838013 437.21380615]
[203.25434875 423.88674927]
[212.10913086 411.74380493]
[222.67489624 401.05633545]
[234.71559143 392.06304932]
[247.96223450 384.96487427]
[242.92532349 370.83584595]
[237.88841248 356.70681763]
[232.85148621 342.57778931]
[221.28970337 333.18765259]
[223.94372559 317.59063721]
[218.90681458 303.46160889]
[213.86988831 289.33258057]
[206.99047852 276.00314331]
[198.39192200 263.71231079]
[189.79335022 251.42147827]
[181.19479370 239.13064575]
[162.52038574 239.87886047]
[147.04472351 229.13491821]
[141.12449646 211.09161377]
[147.32395935 192.98355103]
[138.18515015 181.08891296]
[129.04635620 169.19429016]
[130.28062439 184.14341736]
[124.98738098 198.17843628]
[114.18867493 208.58938599]
[99.96955872 213.36608887]
[85.07553101 211.58622742]
[72.38239288 203.59347534]
[64.34098053 190.93109131]
[62.50397491 176.04400635]
[67.22606659 161.80667114]
[77.59550476 150.96809387]
[91.61009979 145.62101746]
[106.56385803 146.79791260]
[119.57038116 154.27236938]
[112.69097137 140.94294739]
[105.81156158 127.61351776]
[98.93214417 114.28408813]
[87.27133179 106.56935883]
[87.73842621 92.59532928]
[80.85900879 79.26589966]
[73.97959900 65.93647003]
[66.60890961 52.87228394]
[58.75715637 40.09144211]
[44.94083405 32.38301086]
[44.87135315 17.48856926]
[37.71285629 11.81461620]
[36.99947739 4.45847034]
[29.33888054 -8.43785667]
[21.67828369 -21.33418274]
[13.63711071 -33.99670792]
[5.22249222 -46.41420364]
[-3.19212627 -58.83169937]
[-11.60674477 -71.24919128]
[-20.02136421 -83.66668701]
[-33.34659958 -76.74176025]
[-47.38568115 -71.41065979]
[-61.94874954 -67.74546814]
[-76.83885193 -65.79577637]
[-91.85462189 -65.58793640]
[-106.79298401 -67.12476349]
[-121.45191956 -70.38547516]
[-135.63317871 -75.32596588]
[-149.14497375 -81.87943268]
[-161.80456543 -89.95724487]
[-173.44078064 -99.45014954]
[-183.89620972 -110.22978210]
[-193.02947998 -122.15034485]
[-200.71707153 -135.05062866]
[-206.85502625 -148.75617981]
[-211.36030579 -163.08164978]
[-214.17201233 -177.83328247]
[-215.25210571 -192.81159973]
[-214.58599854 -207.81402588]
[-212.18266296 -222.63768005]
[-208.07463074 -237.08207703]
[-202.31744385 -250.95187378]
[-194.98896790 -264.05950928]
[-186.18832397 -276.22769165]
[-176.03450012 -287.29190063]
[-164.66484070 -297.10247803]
[-152.23310852 -305.52673340]
[-138.90740967 -312.45077515]
[-124.86796570 -317.78094482]
[-110.30465698 -321.44515991]
[-95.41442108 -323.39385986]
[-80.39863586 -323.60070801]
[-65.46038055 -322.06289673]
[-50.80166245 -318.80120850]
[-36.62073898 -313.85974121]
[-23.10937881 -307.30538940]
[-10.45031643 -299.22674561]
[1.18525231 -289.73303223]
[11.63996983 -278.95272827]
[20.77244759 -267.03155518]
[28.45917892 -254.13075256]
[34.59621048 -240.42478943]
[39.10054398 -226.09901428]
[41.91126251 -211.34719849]
[42.99036026 -196.36880493]
[42.32323837 -181.36642456]
[39.91892242 -166.54293823]
[35.80992126 -152.09881592]
[30.05181503 -138.22940063]
[22.72246552 -125.12226105]
[13.92100048 -112.95465088]
[3.76644588 -101.89112854]
[-7.60386801 -92.08130646]
[0.81075066 -79.66381073]
[9.22536945 -67.24631500]
[17.63998795 -54.82882309]
[26.05460548 -42.41132736]
[28.77884865 -41.75053406]
[31.40548515 -39.97081757]
[33.50702667 -37.10395050]
[34.67536163 -33.33572769]
[34.57461166 -28.99478149]
[42.23520660 -16.09845352]
[49.89580536 -3.20212722]
[57.65219879 9.63681316]
[70.90690613 16.43107033]
[71.53799438 32.23968506]
[79.38975525 45.02052689]
[85.36104584 31.26030731]
[99.80168152 27.20223999]
[112.06656647 35.83778000]
[113.11448669 50.80113220]
[102.17294312 61.06186676]
[87.30902863 59.05705643]
[94.18843842 72.38648224]
[101.06785583 85.71591187]
[112.72866821 93.43064117]
[112.26157379 107.40467072]
[119.14099121 120.73410034]
[126.02040100 134.06353760]
[132.89981079 147.39295959]
[140.94097900 160.05548096]
[150.07978821 171.95011902]
[159.21859741 183.84475708]
[170.44990540 181.54869080]
[181.67625427 183.60038757]
[191.28268433 189.66574097]
[197.90179443 198.83613586]
[200.60836792 209.76432800]
[199.04855347 220.86230469]
[193.48562622 230.53207397]
[202.08418274 242.82292175]
[210.68275452 255.11375427]
[219.28131104 267.40460205]
[217.41737366 252.52085876]
[220.18222046 237.77786255]
[227.31233215 224.58084106]
[238.12811279 214.18763733]
[251.59867859 207.58885193]
[266.44009399 205.41346741]
[281.23779297 207.86880493]
[294.58129883 214.72084045]
[305.19885254 225.31649780]
[312.07839966 238.64584351]
[314.56430054 253.43843079]
[312.41952515 268.28430176]
[305.84857178 281.76846313]
[295.47772217 292.60568237]
[282.29544067 299.76300049]
[267.55819702 302.55828857]
[252.67063904 300.72506714]
[239.05175781 294.43807983]
[227.99891663 284.29565430]
[233.03584290 298.42471313]
[238.07275391 312.55374146]
[249.99481201 322.95446777]
[246.98051453 337.54086304]
[252.01744080 351.66989136]
[257.05435181 365.79891968]
[262.09127808 379.92794800]
[276.84085083 377.04565430]
[291.85525513 376.39395142]
[306.79910278 377.98739624]
[321.33853149 381.79043579]
[335.14871216 387.71804810]
[347.92111206 395.63784790]
[359.37039185 405.37292480]
[369.24081421 416.70574951]
[377.31179810 429.38314819]
[383.40310669 443.12191772]
[387.37860107 457.61511230]
[389.14950562 472.53897095]
[388.67623901 487.56008911]
[385.96939087 502.34286499]
[381.08938599 516.55706787]
[374.14532471 529.88513184]
[365.29226685 542.02929688]
[354.72802734 552.71832275]
[342.68859863 561.71331787]
[329.44296265 568.81335449]
[315.28704834 573.85986328]
[300.53704834 576.74005127]
[285.52255249 577.38964844]
[270.57891846 575.79406738]
[256.04003906 571.98895264]
[242.23071289 566.05938721]
[229.45944214 558.13775635]
[218.01153564 548.40106201]
[208.14274597 537.06683350]
[200.07354736 524.38824463]
[193.98420715 510.64862061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 179]
[10 178]
[11 177]
[12 176]
[14 174]
[15 173]
[16 172]
[17 153]
[18 152]
[19 151]
[20 150]
[24 143]
[25 142]
[26 141]
[39 140]
[40 139]
[41 138]
[42 137]
[44 135]
[45 134]
[46 133]
[47 127]
[48 126]
[50 124]
[52 123]
[53 122]
[54 121]
[55 116]
[56 115]
[57 114]
[58 113]
[59 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
