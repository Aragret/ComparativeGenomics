%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[105.83979034 581.86309814]
[107.79991150 566.84857178]
[114.53127289 553.28509521]
[125.30371857 542.64398193]
[138.94873047 536.07946777]
[137.16625977 521.18579102]
[135.38378906 506.29205322]
[133.60133362 491.39834595]
[131.81886292 476.50460815]
[130.03639221 461.61090088]
[126.12033081 455.34301758]
[128.33996582 446.48239136]
[126.77944183 431.56378174]
[114.88811493 428.69067383]
[104.43077087 422.29528809]
[96.42375183 412.98162842]
[91.65063477 401.63815308]
[90.58557129 389.35296631]
[93.34621429 377.30963135]
[99.68093109 366.67297363]
[108.99168396 358.47644043]
[120.39043427 353.52178955]
[119.49761963 338.54840088]
[118.60480499 323.57498169]
[117.71199036 308.60159302]
[109.23086548 296.35742188]
[116.13304901 282.12118530]
[107.65192413 269.87701416]
[114.55410767 255.64076233]
[113.66129303 240.66735840]
[112.54563904 225.70890808]
[111.20740509 210.76872253]
[109.86917114 195.82853699]
[108.53093719 180.88835144]
[106.30582428 166.05430603]
[103.20171356 151.37899780]
[92.99810791 140.52839661]
[97.71210480 125.42578125]
[94.60799408 110.75048065]
[91.28573608 96.12302399]
[87.74606323 81.54664612]
[84.20639038 66.97026825]
[67.23220062 62.41944504]
[54.96347046 49.96195602]
[50.71583176 33.09300232]
[55.57197952 16.48182869]
[68.10750580 4.67933130]
[64.13540649 -9.78519249]
[53.01994324 -21.04383469]
[57.11077118 -35.36565018]
[53.13867569 -49.83017349]
[39.74060440 -62.46240234]
[44.83638763 -79.25525665]
[40.64937592 -93.65903473]
[37.40995789 -96.55043030]
[35.45567322 -99.97756958]
[34.79713821 -103.47066498]
[35.29130554 -106.60474396]
[36.66939545 -109.04584503]
[33.34713745 -123.67330933]
[30.02487755 -138.30076599]
[26.70261765 -152.92822266]
[23.15497971 -156.75724792]
[21.58756828 -161.12719727]
[21.87483025 -165.19322205]
[23.57408714 -168.28269958]
[20.90829086 -183.04391479]
[8.69063854 -196.82109070]
[15.26428509 -213.09234619]
[12.37901211 -227.81224060]
[9.49374008 -242.53213501]
[6.60846710 -257.25201416]
[3.72319436 -271.97192383]
[0.83792186 -286.69180298]
[-3.60939288 -272.36627197]
[-12.41400146 -260.22216797]
[-24.64673233 -251.54113770]
[-39.01663589 -247.23930359]
[-54.00722122 -247.77062988]
[-68.03649902 -253.07905579]
[-79.62392426 -262.60437012]
[-87.54664612 -275.34133911]
[-90.96856689 -289.94580078]
[-89.52855682 -304.87652588]
[-83.37858582 -318.55783081]
[-73.16767883 -329.54586792]
[-59.97341156 -336.68109131]
[-45.18820572 -339.21047974]
[-30.37238503 -336.86709595]
[-17.08949661 -329.89822388]
[-6.74131298 -319.03936768]
[-0.41985264 -305.43624878]
[-3.03292465 -314.18893433]
[0.59935981 -320.62542725]
[1.71500850 -335.58386230]
[2.83065724 -350.54232788]
[3.94630575 -365.50079346]
[5.06195450 -380.45922852]
[-9.01679134 -385.96197510]
[-20.84705734 -395.37136841]
[-29.37690163 -407.85067749]
[-33.84785843 -422.29025269]
[-33.86237335 -437.40618896]
[-29.41915321 -451.85433960]
[-20.91329002 -464.35000610]
[-9.10111618 -473.78207397]
[4.96703625 -479.31185913]
[20.04023743 -480.44766235]
[34.77818680 -477.08847046]
[47.87039948 -469.53295898]
[58.15272141 -458.45303345]
[64.71086121 -444.83383179]
[66.96166229 -429.88641357]
[64.70499420 -414.93988037]
[58.14151764 -401.32327271]
[47.85485077 -390.24734497]
[34.75967407 -382.69699097]
[20.02040863 -379.34359741]
[18.90475845 -364.38513184]
[17.78911018 -349.42666626]
[16.67346191 -334.46823120]
[15.55781364 -319.50976562]
[14.55355358 -304.54342651]
[15.55781364 -289.57708740]
[18.44308662 -274.85717773]
[21.32835770 -260.13729858]
[24.21363068 -245.41740417]
[27.09890366 -230.69750977]
[29.98417664 -215.97763062]
[39.84498215 -208.97113037]
[42.36922073 -196.73135376]
[35.66950989 -185.70971680]
[38.33530426 -170.94848633]
[41.33007812 -156.25048828]
[44.65233612 -141.62303162]
[47.97459793 -126.99556732]
[51.29685593 -112.36811066]
[55.05315781 -97.84604645]
[59.24016953 -83.44226837]
[69.68674469 -77.34344482]
[73.29289246 -65.37768555]
[67.60320282 -53.80226898]
[71.57529449 -39.33774567]
[82.40664673 -29.11370468]
[78.59992981 -13.75728893]
[82.57202911 0.70723504]
[95.06835175 2.56737113]
[105.97312164 9.03937817]
[113.64831543 19.19217491]
[116.92553711 31.53879738]
[115.28377533 44.25412750]
[108.93189240 55.44468689]
[98.78276825 63.43059921]
[102.32243347 78.00697327]
[105.86210632 92.58335114]
[109.60752869 96.25565338]
[111.02880859 101.76503754]
[109.28329468 107.64636993]
[112.38740540 122.32167053]
[122.81304169 134.22195435]
[117.87701416 148.27488708]
[120.98112488 162.95019531]
[128.30586243 149.86018372]
[141.87709045 143.47099304]
[156.63307190 146.16561890]
[167.07019043 156.93904114]
[169.29566956 171.77302551]
[162.47943115 185.13488770]
[149.16380310 192.04095459]
[134.31515503 189.91545105]
[123.47112274 179.55010986]
[124.80935669 194.49029541]
[126.14759064 209.43048096]
[127.48582458 224.37066650]
[130.97055054 229.98922729]
[131.07847595 235.67124939]
[128.63468933 239.77453613]
[129.52751160 254.74794006]
[138.07249451 268.06311035]
[131.10644531 281.22836304]
[139.65144348 294.54351807]
[132.68539429 307.70877075]
[133.57821655 322.68218994]
[134.47102356 337.65557861]
[135.36384583 352.62899780]
[152.16264343 358.98226929]
[164.45234680 372.00631714]
[169.78939819 389.04403687]
[167.14222717 406.64718628]
[157.09030151 421.27432251]
[141.69804382 430.00326538]
[143.25857544 444.92184448]
[144.93011475 459.82843018]
[146.71258545 474.72213745]
[148.49504089 489.61587524]
[150.27751160 504.50958252]
[152.05998230 519.40332031]
[153.84243774 534.29699707]
[168.65116882 537.45617676]
[181.63044739 545.25469971]
[191.37239075 556.84667969]
[196.82026672 570.97460938]
[197.38311768 586.10614014]
[192.99989319 600.59979248]
[184.14607239 612.88342285]
[171.78202820 621.62469482]
[157.24891663 625.87530518]
[142.12321472 625.17419434]
[128.04560852 619.59747314]
[116.54314423 609.75006104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 198]
[6 197]
[7 196]
[8 195]
[9 194]
[10 193]
[12 192]
[13 191]
[22 185]
[23 184]
[24 183]
[25 182]
[27 180]
[29 178]
[30 177]
[31 174]
[32 173]
[33 172]
[34 171]
[35 162]
[36 161]
[38 159]
[39 158]
[40 155]
[41 154]
[42 153]
[47 146]
[48 145]
[50 143]
[51 142]
[53 139]
[54 138]
[59 137]
[60 136]
[61 135]
[62 134]
[66 133]
[67 132]
[69 129]
[70 128]
[71 127]
[72 126]
[73 125]
[74 124]
[92 123]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
