%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[271.16574097 298.50888062]
[278.54571533 285.43634033]
[287.15292358 273.13708496]
[275.75045776 263.39111328]
[264.34799194 253.64515686]
[249.64602661 251.25747681]
[244.18280029 236.40945435]
[232.78033447 226.66348267]
[220.70028687 227.29515076]
[211.12094116 219.26895142]
[209.52793884 206.46952820]
[198.27183533 196.55488586]
[187.01574707 186.64022827]
[175.75964355 176.72558594]
[164.50355530 166.81092834]
[153.24745178 156.89627075]
[141.99136353 146.98162842]
[130.73526001 137.06697083]
[119.47916412 127.15232086]
[108.22306824 117.23767090]
[93.75629425 118.04916382]
[82.88326263 108.47193146]
[81.86227417 94.01842499]
[70.60617828 84.10377502]
[59.35008621 74.18911743]
[43.88017273 70.87364960]
[39.44372177 56.65509796]
[28.18762589 46.74044418]
[16.93153000 36.82579422]
[21.80633163 51.01157379]
[21.30028534 66.00303650]
[15.47997475 79.82779694]
[5.11115980 90.66696930]
[-8.44196415 97.09447479]
[-23.39624977 98.26466370]
[-37.78420258 94.02358246]
[-49.71284103 84.92921448]
[-57.61275101 72.17807770]
[-60.44455719 57.44780731]
[-57.83568954 42.67642212]
[-50.12939072 29.80735207]
[-38.33955383 20.53374481]
[-24.01733971 16.07570267]
[-9.04707718 17.01975822]
[4.60358667 23.24306870]
[-4.17701626 11.08161259]
[-12.95761967 -1.07984293]
[-21.73822212 -13.24129868]
[-30.51882553 -25.40275383]
[-38.07950592 -30.52856636]
[-39.33803177 -37.81127930]
[-47.93659592 -50.10211563]
[-56.53516006 -62.39295578]
[-65.13372803 -74.68379211]
[-78.23033142 -67.34503174]
[-91.99257660 -61.34675598]
[-106.28367615 -56.74858475]
[-120.96158600 -53.59621811]
[-135.88044739 -51.92098236]
[-150.89195251 -51.73952866]
[-165.84695435 -53.05366135]
[-180.59677124 -55.85031891]
[-194.99484253 -60.10170746]
[-208.89804077 -65.76557159]
[-222.16822815 -72.78562164]
[-234.67347717 -81.09208679]
[-246.28950500 -90.60241699]
[-256.90087891 -101.22207642]
[-266.40213013 -112.84553528]
[-274.69885254 -125.35726929]
[-281.70852661 -138.63291931]
[-287.36154175 -152.54054260]
[-291.60168457 -166.94192505]
[-294.38684082 -181.69392395]
[-295.68930054 -196.64993286]
[-295.49612427 -211.66130066]
[-293.80923462 -226.57884216]
[-290.64541626 -241.25430298]
[-286.03610229 -255.54179382]
[-280.02706909 -269.29934692]
[-272.67810059 -282.39022827]
[-264.06219482 -294.68432617]
[-254.26498413 -306.05944824]
[-243.38385010 -316.40252686]
[-231.52693176 -325.61080933]
[-218.81208801 -333.59274292]
[-205.36566162 -340.26898193]
[-191.32130432 -345.57321167]
[-176.81861877 -349.45269775]
[-162.00170898 -351.86889648]
[-147.01785278 -352.79776001]
[-132.01597595 -352.23007202]
[-117.14517212 -350.17150879]
[-102.55323792 -346.64248657]
[-88.38519287 -341.67810059]
[-74.78186035 -335.32766724]
[-61.87842941 -327.65432739]
[-49.80314636 -318.73434448]
[-38.67602921 -308.65634155]
[-28.60766411 -297.52053833]
[-19.69811440 -285.43753052]
[-12.03593445 -272.52749634]
[-5.69727468 -258.91867065]
[-0.74513209 -244.74633789]
[2.77127433 -230.15135193]
[4.81699610 -215.27877808]
[5.37170172 -200.27641296]
[4.42987776 -185.29336548]
[2.00088477 -170.47856140]
[-1.89113593 -155.97921753]
[-7.20750284 -141.93945312]
[-13.89537811 -128.49880981]
[-21.88829231 -115.79086304]
[-31.10680771 -103.94191742]
[-41.45930099 -93.06972504]
[-52.84288788 -83.28235626]
[-44.24432373 -70.99151611]
[-35.64575958 -58.70067978]
[-27.04719543 -46.40984344]
[-18.35737038 -34.18335724]
[-9.57676697 -22.02190208]
[-0.79616386 -9.86044598]
[7.98443937 2.30100965]
[16.76504326 14.46246529]
[26.84618187 25.56969833]
[38.10227585 35.48435211]
[49.35837173 45.39900208]
[64.02317810 48.00531387]
[69.26473999 62.93302536]
[80.52083588 72.84767914]
[91.77693176 82.76232910]
[106.24370575 81.95083618]
[117.11673737 91.52806854]
[118.13772583 105.98157501]
[129.39381409 115.89622498]
[140.64991760 125.81088257]
[151.90600586 135.72552490]
[163.16210938 145.64018250]
[174.41819763 155.55484009]
[185.67430115 165.46948242]
[196.93038940 175.38414001]
[208.18649292 185.29878235]
[219.44258118 195.21343994]
[237.57450867 198.42515564]
[242.52629089 215.26101685]
[253.92875671 225.00698853]
[269.44631958 228.09176636]
[274.09396362 242.24269104]
[285.49642944 251.98866272]
[296.89889526 261.73461914]
[307.70800781 251.31739807]
[319.47207642 241.99203491]
[332.08126831 233.84562683]
[345.41781616 226.95422363]
[359.35726929 221.38217163]
[373.76940918 217.18150330]
[388.51968384 214.39143372]
[403.47039795 213.03800964]
[418.48193359 213.13388062]
[433.41415405 214.67814636]
[448.12759399 217.65637207]
[462.48492432 222.04077148]
[476.35205078 227.79040527]
[489.59951782 234.85157776]
[502.10360718 243.15837097]
[513.74761963 252.63320923]
[524.42279053 263.18765259]
[534.02947998 274.72311401]
[542.47796631 287.13192749]
[549.68939209 300.29821777]
[555.59637451 314.09906006]
[560.14379883 328.40557861]
[563.28918457 343.08419800]
[565.00317383 357.99786377]
[565.26983643 373.00735474]
[564.08654785 387.97247314]
[561.46441650 402.75357056]
[557.42797852 417.21255493]
[552.01483154 431.21447754]
[545.27557373 444.62857056]
[537.27313232 457.32958984]
[528.08221436 469.19897461]
[517.78857422 480.12588501]
[506.48843384 490.00827026]
[494.28720093 498.75390625]
[481.29888916 506.28109741]
[467.64468384 512.51959229]
[453.45214844 517.41113281]
[438.85375977 520.91003418]
[423.98580933 522.98364258]
[408.98715210 523.61254883]
[393.99780273 522.79095459]
[379.15771484 520.52648926]
[364.60549927 516.84033203]
[350.47695923 511.76687622]
[336.90405273 505.35345459]
[324.01351929 497.66000366]
[311.92568970 488.75833130]
[300.75341797 478.73153687]
[290.60104370 467.67327881]
[281.56338501 455.68679810]
[273.72476196 442.88400269]
[267.15841675 429.38442993]
[261.92562866 415.31411743]
[258.07528687 400.80447388]
[255.64329529 385.99093628]
[254.65238953 371.01181030]
[255.11183167 356.00698853]
[257.01730347 341.11657715]
[260.35104370 326.47958374]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 150]
[4 149]
[5 148]
[7 146]
[8 145]
[11 143]
[12 142]
[13 141]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[23 131]
[24 130]
[25 129]
[27 127]
[28 126]
[29 125]
[45 124]
[46 123]
[47 122]
[48 121]
[49 120]
[51 119]
[52 118]
[53 117]
[54 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
