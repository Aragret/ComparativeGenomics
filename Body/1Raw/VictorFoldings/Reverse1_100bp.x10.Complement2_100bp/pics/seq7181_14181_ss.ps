%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[-69.17414856 634.28948975]
[-70.04074860 649.29302979]
[-73.13393402 663.99981689]
[-78.38459778 678.08129883]
[-85.67544556 691.22290039]
[-94.84358978 703.13098145]
[-105.68421936 713.53955078]
[-117.95513916 722.21606445]
[-131.38221741 728.96673584]
[-145.66549683 733.64068604]
[-160.48587036 736.13348389]
[-175.51225281 736.38952637]
[-190.40893555 734.40301514]
[-204.84313965 730.21838379]
[-218.49240112 723.92907715]
[-231.05177307 715.67559814]
[-242.24069214 705.64233398]
[-251.80917358 694.05346680]
[-259.54348755 681.16790771]
[-265.27081299 667.27343750]
[-268.86318970 652.68060303]
[-270.24041748 637.71527100]
[-269.37167358 622.71179199]
[-266.27639771 608.00543213]
[-261.02371216 593.92474365]
[-253.73100281 580.78417969]
[-244.56115723 568.87738037]
[-233.71905518 558.47033691]
[-221.44689941 549.79559326]
[-208.01885986 543.04687500]
[-193.73490906 538.37493896]
[-178.91418457 535.88421631]
[-163.88777161 535.63031006]
[-148.99136353 537.61895752]
[-134.55775452 541.80566406]
[-128.28038025 528.18237305]
[-122.00302887 514.55902100]
[-122.87447357 511.14248657]
[-122.13436890 507.13406372]
[-119.52257538 503.29586792]
[-115.12911224 500.47726440]
[-108.24970245 487.14782715]
[-113.00905609 473.08068848]
[-106.22223663 459.46475220]
[-91.43506622 454.56808472]
[-84.55565643 441.23864746]
[-77.67623901 427.90924072]
[-70.79682922 414.57980347]
[-63.91741562 401.25036621]
[-72.07926941 388.79043579]
[-72.91410065 373.81851196]
[-66.09771729 360.34991455]
[-53.37139893 352.04702759]
[-38.09824371 351.22360229]
[-31.21883202 337.89416504]
[-24.33942032 324.56472778]
[-35.43385696 314.52169800]
[-43.55677795 301.93936157]
[-48.14942169 287.67218018]
[-48.89300537 272.69088745]
[-45.73084259 258.01638794]
[-38.87261963 244.65023804]
[-28.78049088 233.50633240]
[-16.13795280 225.34832764]
[-1.80354846 220.73739624]
[13.24743557 219.99354553]
[27.98932076 223.17349243]
[34.86873245 209.84405518]
[41.74814606 196.51463318]
[48.62755585 183.18521118]
[55.50696945 169.85577393]
[54.46846008 154.99742126]
[67.67318726 146.28273010]
[74.55259705 132.95329285]
[73.51409149 118.09494019]
[86.71881104 109.38025665]
[85.49601746 92.65060425]
[99.70967865 83.74285126]
[106.38987732 70.31247711]
[113.07006836 56.88210297]
[119.65010071 43.40236664]
[126.02870178 29.82616043]
[132.30606079 16.20284462]
[131.05412292 0.43124947]
[143.40754700 -7.88993883]
[149.68490601 -21.51325417]
[147.57148743 -39.80574036]
[162.28517151 -49.36997604]
[168.35900879 -63.08524323]
[165.97346497 -81.34423828]
[180.54312134 -91.12648010]
[186.41207886 -104.93065643]
[192.28103638 -118.73483276]
[195.49430847 -133.38661194]
[195.94091797 -148.37997437]
[196.38752747 -163.37332153]
[196.83413696 -178.36666870]
[197.16911316 -193.36293030]
[197.39244080 -208.36126709]
[183.55621338 -214.72355652]
[173.50883484 -226.16778564]
[168.99110413 -240.71116638]
[170.78570557 -255.83396912]
[178.58174133 -268.91607666]
[191.02848816 -277.69094849]
[205.96948242 -280.63827515]
[220.81610107 -277.24740601]
[232.99606323 -268.10583496]
[240.39913940 -254.79740906]
[241.74269104 -239.62788391]
[236.79394531 -225.22544861]
[226.41029358 -214.08544922]
[212.39077759 -208.13793945]
[212.16744995 -193.13960266]
[215.21101379 -186.40472412]
[211.82748413 -177.92005920]
[211.38087463 -162.92671204]
[210.93426514 -147.93336487]
[210.48767090 -132.94001770]
[217.52339172 -146.18760681]
[227.38879395 -157.48687744]
[239.56637573 -166.24511719]
[253.41729736 -172.00285339]
[268.21499634 -174.45806885]
[283.18319702 -173.48196411]
[297.53671265 -169.12574768]
[310.52258301 -161.61791992]
[321.45959473 -151.35234070]
[329.77398682 -138.86752319]
[335.02963257 -124.81838989]
[336.95080566 -109.94192505]
[335.43676758 -95.01853180]
[330.56692505 -80.83105469]
[322.59671021 -68.12374115]
[311.94427490 -57.56319427]
[299.16836548 -49.70339203]
[284.93923950 -44.95664978]
[270.00326538 -43.57196808]
[255.14401245 -45.62199020]
[241.14094543 -50.99916840]
[228.72863770 -59.42143250]
[218.55821228 -70.44696808]
[211.16319275 -83.49739075]
[206.93150330 -97.88811493]
[206.08522034 -112.86586761]
[200.21626282 -99.06169128]
[194.34729004 -85.25751495]
[198.57992554 -73.92564392]
[193.80337524 -62.37712479]
[182.07426453 -57.01140976]
[176.00044250 -43.29614258]
[180.06388855 -31.90250778]
[175.11592102 -20.42638397]
[163.30822754 -15.23589420]
[157.03086853 -1.61257815]
[158.73179626 13.18458652]
[145.92938232 22.48020554]
[139.65202332 36.10352325]
[139.70780945 43.49396896]
[133.17843628 49.88186264]
[133.12419128 57.27231979]
[126.50044250 63.56229782]
[119.82025146 76.99267578]
[113.14005280 90.42304993]
[116.17401123 101.66744232]
[110.90979767 112.05634308]
[100.04824066 116.25966644]
[100.59468842 132.07142639]
[87.88202667 139.83271790]
[81.00261688 153.16213989]
[81.54906464 168.97390747]
[68.83640289 176.73518372]
[61.95698547 190.06462097]
[55.07757568 203.39404297]
[48.19816208 216.72348022]
[41.31874847 230.05290222]
[52.45101166 240.22679138]
[60.56406403 252.92576599]
[65.10992432 267.28094482]
[65.78444672 282.31195068]
[62.54764557 296.99395752]
[55.62603378 310.32736206]
[45.49676132 321.40609741]
[32.85474014 329.47900391]
[18.56496811 334.00082397]
[3.60334063 334.66906738]
[-11.00999069 331.44415283]
[-17.88940239 344.77359009]
[-24.76881599 358.10299683]
[-16.59193039 371.02917480]
[-15.98696327 386.21243286]
[-23.01632690 399.57110596]
[-35.70357513 407.56420898]
[-50.58798981 408.12979126]
[-57.46739960 421.45922852]
[-64.34680939 434.78863525]
[-71.22622681 448.11807251]
[-78.10563660 461.44750977]
[-73.53038025 476.33724976]
[-80.69696808 489.75720215]
[-94.92027283 494.02725220]
[-101.79968262 507.35665894]
[-108.37970734 520.83642578]
[-114.65707397 534.45971680]
[-120.93443298 548.08300781]
[-108.37387848 556.33471680]
[-97.18354034 566.36633301]
[-87.61339569 577.95385742]
[-79.87726593 590.83831787]
[-74.14796448 604.73193359]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 205]
[36 204]
[37 203]
[41 202]
[42 201]
[45 198]
[46 197]
[47 196]
[48 195]
[49 194]
[54 189]
[55 188]
[56 187]
[67 176]
[68 175]
[69 174]
[70 173]
[71 172]
[73 170]
[74 169]
[76 167]
[78 164]
[79 163]
[80 162]
[81 160]
[82 158]
[83 157]
[85 155]
[86 154]
[88 151]
[89 150]
[91 147]
[92 146]
[93 145]
[94 119]
[95 118]
[96 117]
[97 116]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
