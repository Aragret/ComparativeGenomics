%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[149.12008667 405.68643188]
[141.49179077 418.83471680]
[129.40950012 428.05895996]
[114.71566772 431.95254517]
[99.65100861 429.92166138]
[86.51276398 422.27609253]
[77.30442810 410.18167114]
[73.43019867 395.48272705]
[75.48087311 380.42074585]
[83.14373779 367.29257202]
[95.25025940 358.10015869]
[109.95427704 354.24526978]
[111.95829010 339.37973022]
[105.99073029 325.73284912]
[115.50238037 313.09011841]
[117.50639343 298.22457886]
[115.28470612 291.17575073]
[119.65250397 283.15328979]
[121.87762451 268.31924438]
[124.10273743 253.48518372]
[126.32785797 238.65115356]
[128.55297852 223.81710815]
[128.55297852 208.81710815]
[126.32785797 193.98306274]
[124.10273743 179.14901733]
[121.87762451 164.31497192]
[119.65250397 149.48092651]
[114.30132294 135.46791077]
[106.07250977 122.92650604]
[97.84370422 110.38510132]
[88.97280884 98.28935242]
[79.48390961 86.67208862]
[69.99501038 75.05482483]
[60.50611496 63.43756104]
[51.01721573 51.82029724]
[41.52831650 40.20303726]
[33.67594910 35.53633118]
[31.98617744 28.34143829]
[22.67129517 16.58418846]
[9.97222805 14.32664394]
[2.45588756 4.34223604]
[3.71592975 -7.68851042]
[-5.42287254 -19.58314323]
[-18.08691978 -22.02950668]
[-25.45377541 -32.12471390]
[-24.01475143 -44.13536835]
[-32.97544861 -56.16474533]
[-41.93614578 -68.19412231]
[-50.89683914 -80.22350311]
[-59.85753632 -92.25287628]
[-76.93232727 -99.14730072]
[-78.29290771 -116.64346313]
[-87.43170929 -128.53810120]
[-96.57051086 -140.43272400]
[-109.36674500 -132.57943726]
[-122.91377258 -126.10675812]
[-137.06318665 -121.08561707]
[-151.65994263 -117.57101440]
[-166.54411316 -115.60147095]
[-181.55262756 -115.19855499]
[-196.52102661 -116.36669159]
[-211.28532410 -119.09307098]
[-225.68376160 -123.34783173]
[-239.55856323 -129.08435059]
[-252.75770569 -136.23979187]
[-265.13659668 -144.73571777]
[-276.55957031 -154.47908020]
[-286.90151978 -165.36311340]
[-296.04907227 -177.26855469]
[-303.90206909 -190.06498718]
[-310.37442017 -203.61216736]
[-315.39520264 -217.76170349]
[-318.90945435 -232.35855103]
[-320.87863159 -247.24276733]
[-321.28118896 -262.25128174]
[-320.11270142 -277.21966553]
[-317.38595581 -291.98388672]
[-313.13082886 -306.38223267]
[-307.39398193 -320.25686646]
[-300.23822021 -333.45587158]
[-291.74200439 -345.83453369]
[-281.99835205 -357.25729370]
[-271.11407471 -367.59896851]
[-259.20840454 -376.74624634]
[-246.41178894 -384.59890747]
[-232.86444092 -391.07092285]
[-218.71479797 -396.09136963]
[-204.11785889 -399.60528564]
[-189.23359680 -401.57409668]
[-174.22506714 -401.97628784]
[-159.25671387 -400.80743408]
[-144.49255371 -398.08032227]
[-130.09432983 -393.82485962]
[-116.21981049 -388.08767700]
[-103.02100372 -380.93157959]
[-90.64253998 -372.43505859]
[-79.22002411 -362.69113159]
[-68.87861633 -351.80661011]
[-59.73162460 -339.90072632]
[-51.87926483 -327.10391235]
[-45.40757370 -313.55639648]
[-40.38745880 -299.40661621]
[-36.87392426 -284.80963135]
[-34.90546036 -269.92529297]
[-34.50364304 -254.91676331]
[-35.67286682 -239.94844055]
[-38.40032959 -225.18434143]
[-42.65613937 -210.78622437]
[-48.39367294 -196.91184998]
[-55.55006409 -183.71321106]
[-64.04690552 -171.33494568]
[-73.79109192 -159.91267395]
[-84.67588043 -149.57153320]
[-75.53707886 -137.67689514]
[-66.39826965 -125.78226471]
[-54.44899750 -123.90041351]
[-46.73796463 -114.06558990]
[-47.82815933 -101.21357727]
[-38.86746216 -89.18419647]
[-29.90676689 -77.15481567]
[-20.94606972 -65.12544250]
[-11.98537445 -53.09606552]
[4.48119831 -47.02820587]
[6.47176027 -28.72194481]
[15.61056232 -16.82731247]
[32.16565323 -11.00529003]
[34.42854691 7.26930475]
[43.74342728 19.02655602]
[53.14558029 30.71413803]
[62.63447952 42.33140182]
[72.12337494 53.94866562]
[81.61227417 65.56592560]
[91.10117340 77.18318939]
[100.59007263 88.80045319]
[102.00769806 73.86759186]
[112.60367584 63.25037766]
[127.53366089 61.80285645]
[139.97187805 70.18681335]
[144.23173523 84.56922150]
[138.36567688 98.37463379]
[125.05560303 105.29140472]
[110.38510132 102.15629578]
[118.61391449 114.69770050]
[126.84272003 127.23909760]
[125.02019501 112.35022736]
[126.19055939 97.39595795]
[130.30718994 82.97190094]
[137.20614624 69.65257263]
[146.61260986 57.96847153]
[158.15196228 48.38497162]
[171.36456299 41.28377914]
[185.72419739 36.94773102]
[200.65888977 35.54953003]
[215.57380676 37.14487076]
[229.87489319 41.67020798]
[242.99256897 48.94529724]
[254.40431213 58.68037796]
[263.65563965 70.48770142]
[270.37805176 83.89699554]
[274.30383301 98.37416077]
[275.27658081 113.34259033]
[273.25753784 128.20608521]
[268.32717896 142.37265015]
[260.68182373 155.27801514]
[250.62602234 166.40820312]
[238.56027222 175.31985474]
[224.96516418 181.65806580]
[210.38215637 185.17034912]
[195.39212036 185.71684265]
[180.59208679 183.27577209]
[166.57151794 177.94436646]
[153.88888550 169.93495178]
[143.04930115 159.56655884]
[134.48654175 147.25581360]
[136.71166992 162.08985901]
[138.93678284 176.92390442]
[141.16189575 191.75793457]
[143.38702393 206.59197998]
[148.16204834 192.37231445]
[156.70249939 180.04103088]
[168.33483887 170.57061768]
[182.14170837 164.70797729]
[197.03421021 162.91543579]
[211.83789062 165.33438110]
[225.38523865 171.77403259]
[236.60787964 181.72654724]
[244.62074280 194.40699768]
[248.79188538 208.81538391]
[248.79237366 223.81538391]
[244.62216187 238.22404480]
[236.61012268 250.90501404]
[225.38813782 260.85824585]
[211.84120178 267.29879761]
[197.03767395 269.71868896]
[182.14505005 267.92712402]
[168.33781433 262.06536865]
[156.70484924 252.59573364]
[148.16360474 240.26499939]
[143.38702393 226.04222107]
[141.16189575 240.87626648]
[138.93678284 255.71031189]
[136.71166992 270.54434204]
[134.48654175 285.37838745]
[132.37191772 300.22860718]
[130.36790466 315.09411621]
[136.19213867 329.80429077]
[126.82382202 341.38375854]
[124.81980896 356.24926758]
[137.97811890 363.86026001]
[147.21824646 375.93041992]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 208]
[13 207]
[15 205]
[16 204]
[18 203]
[19 202]
[20 201]
[21 200]
[22 199]
[23 178]
[24 177]
[25 176]
[26 175]
[27 174]
[28 144]
[29 143]
[30 142]
[31 134]
[32 133]
[33 132]
[34 131]
[35 130]
[36 129]
[38 128]
[39 127]
[42 125]
[43 124]
[46 122]
[47 121]
[48 120]
[49 119]
[50 118]
[52 115]
[53 114]
[54 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
