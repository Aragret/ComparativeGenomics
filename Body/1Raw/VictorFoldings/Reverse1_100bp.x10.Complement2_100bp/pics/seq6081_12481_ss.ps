%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[135.39555359 651.07324219]
[123.23500061 659.92541504]
[109.68916321 666.46380615]
[95.19349670 670.47814941]
[80.21395874 671.83953857]
[65.23208618 670.50408936]
[50.72949219 666.51477051]
[37.17236710 659.99987793]
[24.99651909 651.16876221]
[14.59335136 640.30535889]
[6.29728079 627.75885010]
[0.37499332 613.93255615]
[-2.98313427 599.27093506]
[-3.66915202 584.24530029]
[-1.66100729 569.33868408]
[2.97674632 555.03027344]
[10.09502411 541.77996826]
[19.46500206 530.01379395]
[30.78547668 520.10992432]
[43.69253922 512.38677979]
[57.77128220 507.09252930]
[72.56912994 504.39746094]
[87.61039734 504.38815308]
[90.27619171 489.62695312]
[92.94198608 474.86572266]
[95.60778046 460.10449219]
[98.27358246 445.34329224]
[100.93937683 430.58206177]
[103.49520874 415.80142212]
[105.94093323 401.00213623]
[108.38666534 386.20288086]
[110.83238983 371.40359497]
[113.27811432 356.60433960]
[115.72384644 341.80505371]
[115.61217499 326.80548096]
[112.94638062 312.04425049]
[110.28058624 297.28305054]
[107.61479187 282.52182007]
[104.94899750 267.76062012]
[102.28320312 252.99938965]
[99.61740112 238.23817444]
[93.49572754 251.93215942]
[81.76867676 261.28503418]
[67.05609131 264.20733643]
[52.64480591 260.04620361]
[41.75433731 249.73127747]
[36.81764984 235.56692505]
[38.93760681 220.71748352]
[47.64060211 208.50036621]
[60.98237228 201.64491272]
[75.98232269 201.68264771]
[89.28943634 208.60513306]
[97.93086243 220.86590576]
[97.70753479 205.86756897]
[97.48420715 190.86923218]
[95.56899261 188.82225037]
[94.34920502 185.89331055]
[94.16484833 182.34346008]
[95.25521088 178.55194092]
[97.72083282 174.97776794]
[98.39062500 159.99273682]
[97.83241272 145.00312805]
[96.04994202 130.10940552]
[94.26747894 115.21569061]
[83.87030029 102.05229187]
[90.63981628 86.70465851]
[88.63580322 71.83913422]
[74.53250122 61.48944473]
[72.32146454 44.47691345]
[82.88656616 31.39190483]
[80.66144562 16.55786133]
[76.29364777 8.53538322]
[78.51534271 1.48656082]
[76.51132202 -13.37896729]
[74.50730896 -28.24449539]
[72.50329590 -43.11002350]
[70.49928284 -57.97555161]
[60.56723022 -46.73480988]
[45.60493851 -45.67183685]
[34.18349457 -55.39555359]
[32.84561920 -70.33576965]
[42.35770798 -81.93405151]
[57.27080154 -83.54637909]
[69.04154205 -74.24996185]
[68.37175751 -89.23500061]
[67.70197296 -104.22004700]
[67.03218079 -119.20508575]
[66.36239624 -134.19012451]
[65.69261169 -149.17515564]
[62.88194275 -153.57369995]
[62.11610794 -158.15266418]
[63.12141037 -162.10290527]
[65.34267426 -164.84120178]
[65.34267426 -179.84120178]
[62.37311554 -185.74826050]
[62.77253723 -191.41725159]
[65.57265472 -195.28614807]
[66.01926422 -210.27949524]
[66.46586609 -225.27284241]
[66.91247559 -240.26618958]
[53.34049988 -247.24934387]
[44.14930344 -259.43478394]
[41.16380310 -274.40304565]
[44.97676849 -289.18222046]
[54.83113480 -300.83789062]
[68.77030945 -307.05578613]
[84.02666473 -306.60134888]
[97.57102966 -299.56478882]
[106.71416473 -287.34326172]
[109.64070129 -272.36334229]
[105.76956177 -257.59930420]
[95.86937714 -245.98254395]
[81.90582275 -239.81959534]
[81.45921326 -224.82624817]
[81.01261139 -209.83288574]
[80.56600189 -194.83953857]
[80.34267426 -179.84120178]
[80.34267426 -164.84120178]
[80.67765045 -149.84494019]
[81.34743500 -134.85990906]
[82.01721954 -119.87487030]
[82.68701172 -104.88983154]
[83.35679626 -89.90479279]
[84.02658081 -74.91975403]
[85.36481476 -59.97956467]
[87.36882782 -45.11403656]
[89.37284088 -30.24850845]
[91.37685394 -15.38298130]
[93.38086700 -0.51745278]
[95.49549103 14.33274460]
[97.72061157 29.16678810]
[109.05226898 35.30054092]
[114.86891174 47.01586533]
[112.84627533 60.13529205]
[103.50133514 69.83512115]
[105.50534821 84.70064545]
[114.32477570 92.30715179]
[115.79479218 103.86051941]
[109.16119385 113.43322754]
[110.94366455 128.32695007]
[112.72612762 143.22065735]
[119.65203094 129.91532898]
[131.91499329 121.27704620]
[146.77542114 119.23563385]
[160.91348267 124.24714661]
[171.17068481 135.19200134]
[175.25553894 149.62509155]
[172.25549316 164.32202148]
[162.84075928 175.99945068]
[149.11459351 182.04864502]
[134.14347839 181.11816406]
[121.27199554 173.41589355]
[113.37566376 160.66252136]
[112.70587158 175.64755249]
[112.48254395 190.64590454]
[112.70587158 205.64424133]
[112.92920685 220.64257812]
[114.37862396 235.57238770]
[117.04441833 250.33360291]
[119.71021271 265.09481812]
[122.37600708 279.85601807]
[125.04180145 294.61724854]
[127.70759583 309.37847900]
[130.37339783 324.13967896]
[134.56285095 309.73660278]
[142.15856934 296.80197144]
[152.69606018 286.12670898]
[165.53096008 278.36361694]
[179.87838745 273.98742676]
[194.86102295 273.26571655]
[209.56265259 276.24267578]
[223.08425903 282.73617554]
[234.59901428 292.34921265]
[243.40277100 304.49392700]
[248.95718384 318.42764282]
[250.92259216 333.29833984]
[249.17881775 348.19662476]
[243.83247375 362.21148682]
[235.21051025 374.48593140]
[223.84016418 384.26934814]
[210.41673279 390.96347046]
[195.76106262 394.15899658]
[180.76934814 393.66043091]
[166.35833740 389.49835205]
[153.40928650 381.92721558]
[142.71401978 371.41003418]
[134.92655945 358.58990479]
[130.52311707 344.25079346]
[128.07739258 359.05004883]
[125.63166046 373.84933472]
[123.18593597 388.64859009]
[120.74020386 403.44787598]
[118.29447937 418.24713135]
[119.98278809 427.22418213]
[115.70059204 433.24786377]
[113.03479767 448.00909424]
[110.36900330 462.77029419]
[107.70320892 477.53152466]
[105.03740692 492.29272461]
[102.37161255 507.05395508]
[116.45949554 512.32379150]
[129.37989807 520.02465820]
[140.71748352 529.90893555]
[150.10780334 541.65887451]
[157.24899292 554.89685059]
[161.91148376 569.19720459]
[163.94541931 584.10034180]
[163.28540039 599.12713623]
[159.95263672 613.79449463]
[154.05427551 627.63104248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 200]
[24 199]
[25 198]
[26 197]
[27 196]
[28 195]
[29 193]
[30 192]
[31 191]
[32 190]
[33 189]
[34 188]
[35 164]
[36 163]
[37 162]
[38 161]
[39 160]
[40 159]
[41 158]
[53 157]
[54 156]
[55 155]
[60 154]
[61 153]
[62 141]
[63 140]
[64 139]
[66 136]
[67 135]
[70 131]
[71 130]
[73 129]
[74 128]
[75 127]
[76 126]
[77 125]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 119]
[93 118]
[94 117]
[97 116]
[98 115]
[99 114]
[100 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
