%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGGAGGAUACUACCGUUUAUGUCGAGGAUAACUAUCCUGUAUCACCUUCACCCGAUGUUGCAUCAUGCACAGCACAUCAUGCUACAGAUCACUACUCAxxxxxxxxxxAUGGUACUCGGGAUGUUUGUUGAUUGGACGGUGAUUAUCAAUACAGUAGGGAGAAUAAUUAGUAGUAGGAUCGGGAUUCAGACCGGAUACUCACUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[86.63744354 560.19744873]
[84.16934967 545.16986084]
[88.03319550 530.43927002]
[97.55952454 518.55780029]
[111.09786224 511.58401489]
[110.20504761 496.61062622]
[109.31223297 481.63720703]
[100.83110809 469.39303589]
[107.73329163 455.15679932]
[106.84046936 440.18341064]
[104.83576202 438.22399902]
[103.48641205 435.35241699]
[103.14373016 431.81436157]
[104.06369781 427.97793579]
[106.36727142 424.29724121]
[106.36727142 409.29724121]
[106.36727142 394.29724121]
[98.03831482 385.52484131]
[97.91555786 373.02807617]
[106.61018372 363.50094604]
[99.06323242 350.65988159]
[107.00514221 336.97644043]
[107.22846985 321.97811890]
[107.00514221 306.97976685]
[106.33535767 291.99475098]
[105.66557312 277.00970459]
[104.99578857 262.02465820]
[92.48674011 256.54370117]
[83.51651001 246.15795898]
[79.87880707 232.85697937]
[82.33851624 219.22143555]
[90.47174072 207.92245483]
[102.73751831 201.19836426]
[102.29091644 186.20501709]
[101.84430695 171.21165466]
[101.39770508 156.21830750]
[99.83718109 141.29971313]
[97.17138672 126.53849030]
[94.50558472 111.77726746]
[91.40148163 97.10196686]
[87.86180878 82.52559662]
[84.32213593 67.94921875]
[80.78246307 53.37284088]
[77.24279022 38.79646683]
[61.30472946 35.52352524]
[48.43560028 25.66303825]
[41.18095779 11.22938061]
[40.94785690 -4.86500549]
[47.73221970 -19.39725113]
[60.12980652 -29.47943115]
[56.37350845 -44.00149155]
[52.61720657 -58.52355194]
[48.86090469 -73.04560852]
[45.10460663 -87.56766510]
[41.95271301 -90.55422974]
[40.10133362 -94.03803253]
[39.54709244 -97.54919434]
[40.13435364 -100.66716003]
[41.58451462 -103.06615448]
[38.69924164 -117.78604889]
[35.81396866 -132.50593567]
[22.98138618 -141.33558655]
[20.26499939 -156.30474854]
[28.76179695 -168.48423767]
[25.87652397 -183.20413208]
[22.99125099 -197.92402649]
[20.10597992 -212.64390564]
[16.67391777 -216.57685852]
[15.23731041 -220.99154663]
[15.64550591 -225.04721069]
[17.43599510 -228.08471680]
[15.21087742 -242.91876221]
[12.98575974 -257.75280762]
[3.09624004 -266.03292847]
[1.54832399 -278.43402100]
[8.63061237 -288.24053955]
[6.62659883 -303.10607910]
[4.62258530 -317.97161865]
[2.61857152 -332.83712769]
[0.61455780 -347.70266724]
[-8.89709473 -360.34539795]
[-2.92953300 -373.99230957]
[-4.93354654 -388.85781860]
[-16.52383041 -403.16680908]
[-9.23019028 -419.12829590]
[-11.45530701 -433.96234131]
[-13.68042469 -448.79638672]
[-28.70279312 -449.92608643]
[-43.09698868 -454.37072754]
[-56.14099884 -461.90740967]
[-67.18054962 -472.15808105]
[-75.66189575 -484.60855103]
[-81.15962219 -498.63433838]
[-83.39795685 -513.53192139]
[-82.26463318 -528.55401611]
[-77.81649780 -542.94714355]
[-70.27666473 -555.98931885]
[-60.02332687 -567.02636719]
[-47.57078934 -575.50469971]
[-33.54366684 -580.99902344]
[-18.64555740 -583.23376465]
[-3.62373734 -582.09680176]
[10.76830101 -577.64514160]
[23.80866051 -570.10217285]
[34.84324265 -559.84619141]
[43.31855392 -547.39160156]
[48.80948257 -533.36309814]
[51.04059982 -518.46447754]
[49.89999390 -503.44293213]
[45.44488144 -489.05197144]
[37.89872742 -476.01342773]
[27.64004517 -464.98132324]
[15.18340111 -456.50903320]
[1.15361929 -451.02151489]
[3.37873650 -436.18746948]
[5.60385370 -421.35342407]
[15.14196873 -413.91360474]
[17.11715317 -401.57333374]
[9.93198204 -390.86184692]
[11.93599510 -375.99630737]
[21.30430794 -364.41683960]
[15.48008633 -349.70666504]
[17.48410034 -334.84115601]
[19.48811340 -319.97561646]
[21.49212646 -305.11010742]
[23.49614143 -290.24456787]
[34.95527649 -276.95339966]
[27.81980324 -259.97793579]
[30.04492188 -245.14389038]
[32.27003860 -230.30984497]
[34.82587051 -215.52919006]
[37.71114349 -200.80929565]
[40.59641647 -186.08940125]
[43.48168945 -171.36950684]
[55.94772720 -163.29898071]
[59.08349609 -148.41201782]
[50.53385925 -135.39120483]
[53.41913223 -120.67131805]
[56.30440521 -105.95143127]
[59.62666321 -91.32396698]
[63.38296509 -76.80191040]
[67.13926697 -62.27985001]
[70.89556885 -47.75778961]
[74.65187073 -33.23573303]
[88.37659454 -31.21084785]
[100.33065033 -24.08536911]
[108.69231415 -12.90673351]
[112.17271423 0.65709180]
[110.21440887 14.56646061]
[103.08034515 26.71674538]
[91.81916046 35.25679398]
[95.35883331 49.83317184]
[98.89850616 64.40954590]
[102.43817902 78.98592377]
[105.97785187 93.56229401]
[108.43695831 95.36293030]
[110.29524231 98.09813690]
[111.20528412 101.54708862]
[110.90612030 105.36373138]
[109.26680756 109.11147308]
[111.93260193 123.87269592]
[114.59839630 138.63391113]
[121.15441895 125.14248657]
[133.52215576 116.65490723]
[148.46871948 115.38980103]
[162.08709717 121.67787170]
[170.81748962 133.87542725]
[172.37777710 148.79405212]
[166.36012268 162.53405762]
[154.33752441 171.50384521]
[139.45265198 173.35871887]
[125.59638214 167.61384583]
[116.39105225 155.77169800]
[116.83766174 170.76506042]
[117.28426361 185.75840759]
[117.73087311 200.75175476]
[132.37002563 208.43855286]
[141.08523560 222.37916565]
[141.57807922 238.71850586]
[133.80870056 252.99411011]
[119.98082733 261.35488892]
[120.65061188 276.33990479]
[121.32039642 291.32495117]
[121.99018097 306.30999756]
[124.45580292 309.88415527]
[125.54616547 313.67568970]
[125.36180878 317.22552490]
[124.14202881 320.15447998]
[122.22680664 322.20144653]
[122.00347900 337.19976807]
[129.53445435 351.11361694]
[121.60852814 363.72427368]
[130.94796753 379.59426880]
[121.36727142 394.29724121]
[121.36727142 409.29724121]
[121.36727142 424.29724121]
[121.81388092 439.29058838]
[122.70669556 454.26397705]
[131.25167847 467.57916260]
[124.28563690 480.74441528]
[125.17845154 495.71780396]
[126.07126617 510.69122314]
[140.34237671 516.00677490]
[151.21310425 526.67199707]
[156.80001831 540.83911133]
[156.13516235 556.05352783]
[149.33372498 569.67919922]
[137.57408142 579.35552979]
[122.89369202 583.40594482]
[107.83599854 581.12872314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 202]
[6 201]
[7 200]
[9 198]
[10 197]
[15 196]
[16 195]
[17 194]
[20 192]
[22 190]
[23 189]
[24 184]
[25 183]
[26 182]
[27 181]
[33 176]
[34 175]
[35 174]
[36 173]
[37 162]
[38 161]
[39 160]
[40 155]
[41 154]
[42 153]
[43 152]
[44 151]
[50 144]
[51 143]
[52 142]
[53 141]
[54 140]
[59 139]
[60 138]
[61 137]
[64 134]
[65 133]
[66 132]
[67 131]
[71 130]
[72 129]
[73 128]
[76 126]
[77 125]
[78 124]
[79 123]
[80 122]
[82 120]
[83 119]
[85 116]
[86 115]
[87 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
