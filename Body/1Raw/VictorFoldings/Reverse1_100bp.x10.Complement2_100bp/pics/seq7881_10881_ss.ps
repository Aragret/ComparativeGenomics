%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxAAAAUUGGUUUAGUUGUUGUUGGAUAAAUCGACAAGGGGUUGGAAAAGGAGGCUGGGGGAUUGUUGGGGGGAGGAUUAUGAUUGAUGGACUGAGGAUGGG\
) } def
/len { sequence length } bind def

/coor [
[52.32409668 654.29083252]
[44.58093262 641.40521240]
[39.00516510 627.44433594]
[35.74122620 612.76971436]
[34.87366104 597.76165771]
[36.42493439 582.80871582]
[40.35486603 568.29827881]
[46.56166840 554.60626221]
[54.88455963 542.08728027]
[65.10797119 531.06555176]
[76.96707153 521.82659912]
[90.15470123 514.60980225]
[104.32926178 509.60198975]
[101.66346741 494.84078979]
[98.99767303 480.07955933]
[96.33187866 465.31835938]
[93.66607666 450.55712891]
[91.00028229 435.79592896]
[88.77693939 434.08862305]
[87.09591675 431.39773560]
[86.33522797 427.92544556]
[86.79280090 424.00689697]
[88.64266968 420.07855225]
[86.86019897 405.18481445]
[85.07773590 390.29110718]
[83.29527283 375.39739990]
[81.51280212 360.50366211]
[69.68154907 351.52832031]
[67.66171265 336.44937134]
[77.15610504 324.10049438]
[75.37364197 309.20678711]
[72.84272003 306.75183105]
[71.37512970 302.94906616]
[71.59141541 298.31155396]
[73.85948944 293.61016846]
[72.74383545 278.65170288]
[71.62818909 263.69326782]
[70.51254272 248.73480225]
[69.39689636 233.77635193]
[68.28124237 218.81790161]
[62.46183014 232.64303589]
[53.02787399 244.30496216]
[40.72337341 252.88395691]
[26.51871109 257.70346069]
[11.53412819 258.38336182]
[-3.04862857 254.87008667]
[-16.07950211 247.44065857]
[-26.53082466 236.68101501]
[-33.57836151 223.43971252]
[-36.66630936 208.76100159]
[-35.55114746 193.80250549]
[-30.32081795 179.74392700]
[-21.38780594 167.69398499]
[-9.45660877 158.60296631]
[4.53183222 153.18785095]
[19.47432899 151.87568665]
[34.19245529 154.76995850]
[47.52547455 161.64239502]
[58.42189407 171.95103455]
[66.02237701 184.88288879]
[69.72788239 199.42153931]
[73.05014801 184.79408264]
[76.37240601 170.16661072]
[79.69466400 155.53915405]
[83.01692200 140.91169739]
[72.21318054 134.49760437]
[63.64493179 125.30811310]
[58.00150681 114.08255005]
[55.73693085 101.72402954]
[57.03338623 89.22679901]
[61.78657913 77.59629059]
[69.61409760 67.76820374]
[79.88621521 60.53321075]
[91.77651978 56.47338867]
[104.32841492 55.91534805]
[108.30051422 41.45082474]
[112.27260590 26.98630142]
[116.24470520 12.52177715]
[120.21680450 -1.94274688]
[116.41008759 -17.29916191]
[127.24143982 -27.52320290]
[131.21353149 -41.98772812]
[127.40681458 -57.34414291]
[138.23817444 -67.56818390]
[134.43145752 -82.92459869]
[145.26280212 -93.14864349]
[149.23490906 -107.61316681]
[150.90644836 -122.51973724]
[150.23666382 -137.50477600]
[149.56687927 -152.48982239]
[148.89709473 -167.47485352]
[148.22731018 -182.45989990]
[133.46479797 -185.54522705]
[119.93374634 -192.20565796]
[108.48470306 -202.02249146]
[99.83737946 -214.37864685]
[94.53535461 -228.49740601]
[92.91190338 -243.49124146]
[95.06909943 -258.41763306]
[100.87131500 -272.33831787]
[109.95384216 -284.37820435]
[121.74572754 -293.78042603]
[135.50573730 -299.95401001]
[150.36888123 -302.51086426]
[165.40087891 -301.29025269]
[179.65679932 -296.36889648]
[192.24047852 -288.05615234]
[202.36093140 -276.87457275]
[209.38195801 -263.52706909]
[212.86221313 -248.85266113]
[212.58293152 -233.77377319]
[208.56166077 -219.23829651]
[201.05117798 -206.15992737]
[190.52360535 -195.36080933]
[177.64071655 -187.51976013]
[163.21234131 -183.12968445]
[163.88212585 -168.14463806]
[164.55191040 -153.15960693]
[165.22169495 -138.17456055]
[165.89147949 -123.18952179]
[172.05603027 -136.86425781]
[181.63893127 -148.40411377]
[193.94837952 -156.97598267]
[208.09577942 -161.96109009]
[223.05978394 -162.99955750]
[237.76014709 -160.01638794]
[251.13563538 -153.22695923]
[262.22067261 -143.12139893]
[270.21496582 -130.42922974]
[274.54147339 -116.06673431]
[274.88781738 -101.07073212]
[271.22900391 -86.52380371]
[263.82916260 -73.47610474]
[253.22250366 -62.86956406]
[240.17472839 -55.46986771]
[225.62776184 -51.81121063]
[210.63175964 -52.15771866]
[196.26931763 -56.48437119]
[183.57723999 -64.47882080]
[173.47180176 -75.56394958]
[166.68251038 -88.93951416]
[163.69943237 -103.64106750]
[159.72734070 -89.17654419]
[163.81816101 -74.85472870]
[152.70269775 -63.59608841]
[156.79351807 -49.27427292]
[145.67805481 -38.01563263]
[141.70596313 -23.55110741]
[145.79678345 -9.22929192]
[134.68132019 2.02934933]
[130.70922852 16.49387360]
[126.73712921 30.95839691]
[122.76503754 45.42292023]
[118.79293823 59.88744354]
[132.74594116 70.16889191]
[141.68582153 85.01721954]
[144.24397278 102.15927887]
[140.02876282 118.97077179]
[129.68548584 132.87800598]
[114.79763031 141.75190735]
[97.64438629 144.23394775]
[94.32212830 158.86141968]
[90.99986267 173.48887634]
[87.67760468 188.11633301]
[84.35534668 202.74378967]
[83.23970032 217.70225525]
[84.35534668 232.66070557]
[85.47099304 247.61915588]
[86.58664703 262.57760620]
[87.70229340 277.53607178]
[88.81793976 292.49450684]
[90.26735687 307.42431641]
[92.04982758 322.31805420]
[104.19014740 332.07766724]
[105.78565216 347.20739746]
[96.40652466 358.72119141]
[98.18898773 373.61492920]
[99.97145081 388.50863647]
[101.75392151 403.40234375]
[103.53638458 418.29608154]
[105.76150513 433.13012695]
[108.42729950 447.89132690]
[111.09309387 462.65255737]
[113.75888824 477.41375732]
[116.42468262 492.17498779]
[119.09047699 506.93621826]
[134.12129211 506.66967773]
[149.00018311 508.81784058]
[163.34176636 513.32507324]
[176.77456665 520.07458496]
[188.95062256 528.89160156]
[199.55456543 539.54772949]
[208.31172180 551.76690674]
[214.99525452 565.23266602]
[219.43203735 579.59619141]
[221.50717163 594.48541260]
[221.16688538 609.51477051]
[218.41999817 624.29486084]
[213.33766174 638.44287109]
[206.05151367 651.59228516]
[196.75028992 663.40258789]
[185.67492676 673.56787109]
[173.11228943 681.82476807]
[159.38777161 687.95941162]
[144.85688782 691.81292725]
[129.89601135 693.28546143]
[114.89266968 692.33892822]
[100.23548889 688.99774170]
[86.30411530 683.34857178]
[73.45941925 675.53771973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 186]
[14 185]
[15 184]
[16 183]
[17 182]
[18 181]
[23 180]
[24 179]
[25 178]
[26 177]
[27 176]
[30 173]
[31 172]
[35 171]
[36 170]
[37 169]
[38 168]
[39 167]
[40 166]
[61 165]
[62 164]
[63 163]
[64 162]
[65 161]
[75 154]
[76 153]
[77 152]
[78 151]
[79 150]
[81 148]
[82 147]
[84 145]
[86 143]
[87 142]
[88 120]
[89 119]
[90 118]
[91 117]
[92 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
