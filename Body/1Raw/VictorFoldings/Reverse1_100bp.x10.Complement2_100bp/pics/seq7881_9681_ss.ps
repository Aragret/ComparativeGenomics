%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxAUUAAGUUCGUGACGAAUAAUGUUAAAAUGACCCAGAGAUAAAAUGGGAGGAUGUUCGGAGUCUCAUGAAGCUCAGAGGGAAGUGGUAAAGGCUGCCGUA\
) } def
/len { sequence length } bind def

/coor [
[131.99089050 544.90515137]
[130.87524414 529.94671631]
[129.75959778 514.98828125]
[128.64395142 500.02981567]
[114.07873535 488.94061279]
[112.21257782 470.40875244]
[124.69519043 456.15747070]
[123.13466644 441.23886108]
[121.57414246 426.32028198]
[120.01361847 411.40167236]
[108.68421936 421.23245239]
[93.90740967 418.65451050]
[86.57609558 405.56820679]
[92.09465790 391.62023926]
[106.39501190 387.09255981]
[118.93461609 395.32141113]
[118.48800659 380.32806396]
[118.04140472 365.33468628]
[106.01219940 374.29562378]
[91.46805573 370.62579346]
[85.13036346 357.03042603]
[91.67104340 343.53155518]
[106.26853943 340.08004761]
[118.16137695 349.21871948]
[118.83116913 334.23367310]
[119.50095367 319.24865723]
[119.50095367 304.24865723]
[118.83116913 289.26361084]
[118.16137695 274.27856445]
[117.49159241 259.29351807]
[116.82180786 244.30848694]
[116.15202332 229.32345581]
[114.36956024 214.42973328]
[111.48428345 199.70983887]
[108.59901428 184.98995972]
[105.71374512 170.27006531]
[102.82846832 155.55017090]
[99.94319916 140.83027649]
[97.05792236 126.11038971]
[94.17265320 111.39049530]
[90.19809723 125.85434723]
[82.79579926 138.90065002]
[72.41841125 149.73161316]
[59.70052338 157.68493652]
[45.41983414 162.27426147]
[30.44960976 163.21894836]
[15.70529079 160.46122742]
[2.08849406 154.16972351]
[-9.56810665 144.72920227]
[-18.55170441 132.71691895]
[-24.31295204 118.86743164]
[-26.49954414 104.02766418]
[-24.97776985 89.10505676]
[-19.84068871 75.01213837]
[-11.40243244 62.61069107]
[-0.17900497 52.65907288]
[13.14327717 45.76583099]
[27.74975014 42.35248566]
[42.74722290 42.62776184]
[57.21859741 46.57483292]
[70.27893829 53.95233154]
[81.12960815 64.30912018]
[89.10707092 77.01187134]
[93.72352600 91.28385162]
[95.94863892 76.44980621]
[98.17375946 61.61576080]
[84.54907227 56.42706299]
[72.31035614 48.51560211]
[61.99390411 38.23107529]
[54.05117035 26.02710342]
[48.82898712 12.44123268]
[46.55441666 -1.92876339]
[47.32488632 -16.45116806]
[51.10401917 -30.48810196]
[57.72335052 -43.42353439]
[66.88980865 -54.69032288]
[78.19873047 -63.79508209]
[91.15167999 -70.33978271]
[105.17845917 -74.03914642]
[119.66218567 -74.73310089]
[122.10791016 -89.53237152]
[124.55363464 -104.33164215]
[126.99936676 -119.13091278]
[129.44509888 -133.93019104]
[120.51156616 -146.69067383]
[123.20270538 -161.66439819]
[135.42292786 -170.10250854]
[137.86865234 -184.90177917]
[140.31437683 -199.70104980]
[142.76011658 -214.50032043]
[144.20953369 -229.43013000]
[144.65614319 -244.42347717]
[145.10273743 -259.41683960]
[136.00061035 -275.42410278]
[145.79914856 -289.98278809]
[138.26817322 -303.89663696]
[146.19410706 -316.50729370]
[146.41743469 -331.50564575]
[146.64076233 -346.50396729]
[146.86408997 -361.50231934]
[133.38877869 -368.76004028]
[124.83942413 -381.45520020]
[123.18061066 -396.67053223]
[128.79351807 -410.90969849]
[140.38835144 -420.90063477]
[155.30068970 -424.34747314]
[170.10380554 -420.45816040]
[181.39602661 -410.12643433]
[186.58248901 -395.72647095]
[184.47140503 -380.56726074]
[175.54785156 -368.13226318]
[161.86242676 -361.27899170]
[161.63909912 -346.28063965]
[161.41577148 -331.28231812]
[161.19244385 -316.28396606]
[168.73939514 -303.44290161]
[160.79748535 -289.75946045]
[168.99491882 -280.86404419]
[168.93161011 -268.36685181]
[160.09608459 -258.97021484]
[159.64949036 -243.97686768]
[159.20288086 -228.98352051]
[168.86514282 -240.45700073]
[183.16477966 -244.98690796]
[197.67092896 -241.16960144]
[207.88867188 -230.18789673]
[210.65194702 -215.44461060]
[205.10450745 -201.50811768]
[192.96531677 -192.69677734]
[177.99580383 -191.74087524]
[164.83444214 -198.93663025]
[157.55938721 -212.05459595]
[155.11364746 -197.25532532]
[152.66792297 -182.45605469]
[150.22219849 -167.65676880]
[159.07786560 -155.73567200]
[156.80836487 -140.69226074]
[144.24436951 -131.48445129]
[141.79862976 -116.68518829]
[139.35290527 -101.88591766]
[136.90718079 -87.08664703]
[134.46145630 -72.28737640]
[148.79948425 -66.52151489]
[161.50558472 -57.71270752]
[171.94392395 -46.29796982]
[179.59138489 -32.84481430]
[184.06362915 -18.02302170]
[185.13455200 -2.57130909]
[182.74763489 12.73949718]
[177.01892090 27.14491081]
[168.23138428 39.92495728]
[156.82099915 50.44015884]
[143.35504150 58.16353226]
[128.50392151 62.70699692]
[113.00779724 63.84087753]
[110.78268433 78.67491913]
[108.55756378 93.50896454]
[108.89253998 108.50522614]
[111.77781677 123.22511292]
[114.66308594 137.94500732]
[117.54836273 152.66490173]
[120.43363190 167.38479614]
[123.31890869 182.10467529]
[126.20417786 196.82456970]
[129.08944702 211.54446411]
[135.44387817 197.95692444]
[147.68388367 189.28614807]
[162.60993958 187.79864502]
[176.32043457 193.88327026]
[185.23146057 205.94947815]
[187.01370239 220.84323120]
[181.20127869 234.67131042]
[169.31356812 243.81909180]
[154.45796204 245.89538574]
[140.51768494 240.35743713]
[131.13706970 228.65367126]
[131.80685425 243.63870239]
[132.47663879 258.62374878]
[133.14642334 273.60879517]
[133.81620789 288.59381104]
[134.48599243 303.57885742]
[145.38128662 293.26904297]
[160.37875366 293.54516602]
[170.88714600 304.24908447]
[170.88677979 319.24908447]
[160.37786865 329.95248413]
[145.38040161 330.22790527]
[134.48599243 319.91842651]
[133.81620789 334.90347290]
[133.14642334 349.88851929]
[133.03475952 364.88809204]
[133.48135376 379.88143921]
[133.92796326 394.87478638]
[134.93222046 409.84112549]
[136.49275208 424.75973511]
[138.05326843 439.67834473]
[139.61380005 454.59695435]
[150.12969971 460.14242554]
[156.59677124 469.97491455]
[157.50505066 481.58822632]
[152.74423218 492.08825684]
[143.60240173 498.91418457]
[144.71804810 513.87261963]
[145.83369446 528.83105469]
[146.94934082 543.78955078]
[159.08694458 553.91149902]
[160.42897034 569.65869141]
[150.17924500 581.68859863]
[134.41873169 582.86407471]
[122.49786377 572.48773193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[3 203]
[4 202]
[7 197]
[8 196]
[9 195]
[10 194]
[16 193]
[17 192]
[18 191]
[24 190]
[25 189]
[26 188]
[27 181]
[28 180]
[29 179]
[30 178]
[31 177]
[32 176]
[33 165]
[34 164]
[35 163]
[36 162]
[37 161]
[38 160]
[39 159]
[40 158]
[64 157]
[65 156]
[66 155]
[80 142]
[81 141]
[82 140]
[83 139]
[84 138]
[87 135]
[88 134]
[89 133]
[90 132]
[91 122]
[92 121]
[93 120]
[95 117]
[97 115]
[98 114]
[99 113]
[100 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
