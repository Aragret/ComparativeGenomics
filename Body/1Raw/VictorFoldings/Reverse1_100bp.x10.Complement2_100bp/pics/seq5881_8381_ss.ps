%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGAUGGCAUACCGGGUGGUAUUAAUGGGGGUAUGAGGAAUGUGAUAAGGAGUAGUGGGUUGAUUUUUAUAAUUUGUGUUUGAUGGUGGAUGGAGGGAGUGG\
) } def
/len { sequence length } bind def

/coor [
[70.92060089 607.17449951]
[59.15738678 616.57238770]
[45.69711304 623.31884766]
[31.12821198 627.11895752]
[16.08757210 627.80657959]
[1.23270559 625.35168457]
[-12.78699780 619.86157227]
[-25.35865593 611.57617188]
[-35.93268967 600.85784912]
[-44.04684830 588.17498779]
[-49.34641266 574.08215332]
[-51.59971619 559.19537354]
[-50.70824432 544.16540527]
[-46.71097565 529.64941406]
[-39.78264999 516.28179932]
[-30.22614670 504.64709473]
[-18.45923233 495.25381470]
[-4.99630642 488.51266479]
[9.57408905 484.71829224]
[24.61499786 484.03659058]
[27.06072617 469.23730469]
[29.50645256 454.43801880]
[31.95218086 439.63876343]
[34.39790726 424.83947754]
[27.61073494 414.82644653]
[29.52719307 402.47692871]
[39.65885925 394.49493408]
[42.32465363 379.73370361]
[44.99044800 364.97250366]
[32.71794891 373.59722900]
[17.76258659 372.44085693]
[6.96175289 362.03213501]
[5.25344229 347.12973022]
[13.41867256 334.54684448]
[27.72440910 330.03619385]
[41.63026428 335.66000366]
[48.77894592 348.84896851]
[52.96595764 334.44519043]
[47.87017441 317.65231323]
[61.26824570 305.02011108]
[65.24034119 290.55557251]
[69.21244049 276.09106445]
[73.18453217 261.62652588]
[77.15663147 247.16200256]
[81.12873077 232.69747925]
[83.68456268 217.91682434]
[84.80020905 202.95837402]
[85.91585541 187.99992371]
[79.14659882 174.73242188]
[87.88887787 161.54594421]
[78.00498199 150.46243286]
[78.92331696 135.27655029]
[90.61574554 124.98455811]
[91.73139191 110.02610779]
[92.40117645 95.04106903]
[92.62450409 80.04272461]
[92.84783173 65.04438782]
[93.07115936 50.04605484]
[93.29448700 35.04771805]
[93.51781464 20.04937935]
[93.74114227 5.05104160]
[83.01354980 -6.24305296]
[83.45369720 -21.45031929]
[94.28699493 -31.60783386]
[86.75601959 -45.52167511]
[94.68195343 -58.13233948]
[94.90528107 -73.13067627]
[94.68195343 -88.12901306]
[86.33615875 -101.56993103]
[93.49744415 -114.62999725]
[92.82765198 -129.61503601]
[84.48186493 -143.05595398]
[91.64314270 -156.11602783]
[76.41828918 -160.81108093]
[63.74290085 -170.41940308]
[55.13842010 -183.76464844]
[51.62973785 -199.22329712]
[53.62315750 -214.92225647]
[60.85942459 -228.96569824]
[72.44729614 -239.66412354]
[86.97324371 -245.73750305]
[86.08042908 -260.71090698]
[85.18761444 -275.68432617]
[84.29479980 -290.65771484]
[83.40198517 -305.63113403]
[68.29930878 -311.68447876]
[57.38743973 -323.67507935]
[52.81343079 -339.16827393]
[55.44433212 -355.04788208]
[64.70336151 -368.14306641]
[78.69539642 -375.86145020]
[77.57974243 -390.81991577]
[76.46409607 -405.77838135]
[75.34844971 -420.73681641]
[60.69555664 -424.55407715]
[48.07744598 -432.92437744]
[38.86282730 -444.93978882]
[34.05123901 -459.29690552]
[34.16460419 -474.43844604]
[39.19062424 -488.72192383]
[48.58411789 -500.59799194]
[61.32614517 -508.77841187]
[76.03455353 -512.37585449]
[91.11387634 -511.00009155]
[104.92842102 -504.80032349]
[115.97969818 -494.44909668]
[123.06893921 -481.06921387]
[125.42716217 -466.11203003]
[122.79856110 -451.19998169]
[115.46826935 -437.95062256]
[104.23141479 -427.80111694]
[90.30690002 -421.85247803]
[91.42255402 -406.89401245]
[92.53820038 -391.93557739]
[93.65384674 -376.97711182]
[106.80023193 -372.54531860]
[117.29765320 -363.40878296]
[123.53955078 -350.92205811]
[124.55398560 -336.95562744]
[120.15487671 -323.61572266]
[110.97504425 -312.92669678]
[98.37538910 -306.52392578]
[99.26820374 -291.55053711]
[100.16101837 -276.57711792]
[101.05384064 -261.60372925]
[101.94665527 -246.63031006]
[115.63055420 -243.00205994]
[127.54301453 -235.31346130]
[136.51217651 -224.30509949]
[141.65084839 -211.04487610]
[142.44429016 -196.82444763]
[138.80169678 -183.03340149]
[131.06637573 -171.02343750]
[119.98347473 -161.97596741]
[106.62818146 -156.78581238]
[114.92606354 -144.41671753]
[107.81269073 -130.28482056]
[108.48248291 -115.29978180]
[116.78036499 -102.93069458]
[109.66699219 -88.79879761]
[111.64230347 -86.80976105]
[112.94875336 -83.91842651]
[113.23872375 -80.37564087]
[112.26173401 -76.55333710]
[109.90361786 -72.90734863]
[109.68029022 -57.90901184]
[117.22724152 -45.06795120]
[109.28533936 -31.38450623]
[119.81140900 -20.90894699]
[119.79858398 -5.69531775]
[108.73947906 5.27436924]
[108.51615143 20.27270699]
[108.29282379 35.27104568]
[108.06949615 50.26938248]
[107.84616852 65.26771545]
[107.62284088 80.26605988]
[107.39951324 95.26439667]
[109.32935333 97.62346649]
[110.44347382 100.73686981]
[110.46083069 104.30381775]
[109.21543884 107.92393494]
[106.68984222 111.14175415]
[105.57419586 126.10020447]
[115.61052704 138.01280212]
[114.26601410 153.16690063]
[102.84732819 162.66159058]
[109.53678894 176.99902344]
[100.87431335 189.11557007]
[99.75865936 204.07402039]
[98.64301300 219.03247070]
[107.42417145 206.87141418]
[120.35136414 199.26303101]
[135.24613953 197.48945618]
[149.59848022 201.84957886]
[160.98973083 211.60864258]
[167.50028992 225.12207031]
[168.03302002 240.11259460]
[162.49812317 254.05407715]
[151.82833862 264.59713745]
[137.82171631 269.96505737]
[122.83861542 269.25323486]
[109.40395355 262.58169556]
[99.78170013 251.07463074]
[95.59325409 236.66957092]
[91.62115479 251.13409424]
[87.64905548 265.59863281]
[83.67696381 280.06314087]
[79.70486450 294.52767944]
[75.73277283 308.99218750]
[81.42246246 320.56759644]
[77.81631470 332.53335571]
[67.36973572 338.63220215]
[63.18272781 353.03598022]
[59.75166702 367.63830566]
[57.08587265 382.39950562]
[54.42007446 397.16073608]
[61.04695892 414.34112549]
[49.19717789 427.28521729]
[46.75144958 442.08450317]
[44.30572510 456.88375854]
[41.85999680 471.68304443]
[39.41426849 486.48229980]
[53.43613052 491.96691895]
[66.01104736 500.24734497]
[76.58929443 510.96154785]
[84.70844269 523.64117432]
[90.01355743 537.73193359]
[92.27271271 552.61785889]
[91.38715363 567.64813232]
[87.39559937 582.16571045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 202]
[21 201]
[22 200]
[23 199]
[24 198]
[27 196]
[28 195]
[29 194]
[37 193]
[38 192]
[40 189]
[41 188]
[42 187]
[43 186]
[44 185]
[45 184]
[46 170]
[47 169]
[48 168]
[50 166]
[53 163]
[54 162]
[55 157]
[56 156]
[57 155]
[58 154]
[59 153]
[60 152]
[61 151]
[64 148]
[66 146]
[67 145]
[68 140]
[70 138]
[71 137]
[73 135]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[91 115]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
