%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAUGCGGGAGAGUCGGCUACUUGUCAACCUUAUCCAACAAUCGCCAUUGAUUCUAAUCAUACCAUUAAUCCUUCUACUCAUCUAUAAACUUCUUGACxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[94.59863281 688.40582275]
[80.69469452 682.74481201]
[67.41258240 675.74822998]
[54.88022995 667.48339844]
[43.21833038 658.03002930]
[32.53918839 647.47906494]
[22.94566345 635.93212891]
[14.53014374 623.50048828]
[7.37367725 610.30383301]
[1.54518700 596.46923828]
[-2.89919376 582.13000488]
[-5.91666269 567.42419434]
[-7.47815847 552.49340820]
[-7.56864309 537.48144531]
[-6.18724489 522.53289795]
[-3.34726834 507.79174805]
[0.92393601 493.39996338]
[6.58523273 479.49612427]
[13.58209896 466.21417236]
[21.84714890 453.68197632]
[31.30078506 442.02026367]
[41.85195923 431.34133911]
[53.39905930 421.74804688]
[65.83087158 413.33276367]
[79.02767181 406.17657471]
[92.86236572 400.34835815]
[107.20171356 395.90426636]
[121.90760803 392.88708496]
[120.34708405 377.96847534]
[111.32769012 366.11523438]
[117.58731079 351.58499146]
[116.02678680 336.66638184]
[114.46626282 321.74777222]
[111.38614655 318.09786987]
[110.56618500 312.47427368]
[113.08818054 306.36273193]
[111.97252655 291.40426636]
[110.85688019 276.44580078]
[100.20916748 262.49615479]
[108.34238434 245.97549438]
[107.00415039 231.03530884]
[105.66591644 216.09512329]
[104.32768250 201.15493774]
[102.76715851 186.23632812]
[100.98469543 171.34260559]
[91.78982544 159.62495422]
[97.83241272 145.00312805]
[96.04994202 130.10940552]
[94.26747894 115.21569061]
[83.87030029 102.05229187]
[90.63981628 86.70465851]
[88.63580322 71.83913422]
[86.63179016 56.97360229]
[84.62777710 42.10807419]
[82.62376404 27.24254799]
[80.61975098 12.37701893]
[77.84508514 9.03707886]
[76.42080688 5.35795355]
[76.28772736 1.80581427]
[77.24134064 -1.22027779]
[78.96630096 -3.42995071]
[77.85065460 -18.38840485]
[76.73500824 -33.34685898]
[75.61935425 -48.30530930]
[73.50473022 -63.15550995]
[70.40061951 -77.83081055]
[67.29650879 -92.50611115]
[51.75892258 -99.19037628]
[43.35055542 -113.67487335]
[45.21382904 -130.15182495]
[56.41758728 -142.14988708]
[53.09532547 -156.77734375]
[49.77306747 -171.40480042]
[46.45080566 -186.03225708]
[43.12854767 -200.65972900]
[39.80628967 -215.28718567]
[36.48402786 -229.91464233]
[23.66337967 -243.13252258]
[29.50391960 -259.68109131]
[25.96424675 -274.25747681]
[20.89813614 -281.85827637]
[22.48210144 -289.07720947]
[19.15984154 -303.70465088]
[4.11041880 -303.38879395]
[-10.69446278 -306.10916138]
[-24.64855385 -311.75436401]
[-37.18044281 -320.09320068]
[-47.77695465 -330.78427124]
[-56.00416946 -343.38973999]
[-61.52519226 -357.39343262]
[-64.11393738 -372.22189331]
[-63.66439438 -387.26791382]
[-60.19497681 -401.91537476]
[-53.84775543 -415.56445312]
[-44.88263702 -427.65625000]
[-33.66674805 -437.69561768]
[-20.65936470 -445.27142334]
[-6.39313412 -450.07345581]
[8.54775047 -451.90509033]
[23.55146980 -450.69128418]
[38.00363159 -446.48178101]
[51.31242752 -439.44894409]
[62.93286896 -429.88076782]
[72.38911438 -418.16903687]
[79.29392242 -404.79336548]
[83.36456299 -390.30148315]
[84.43433380 -375.28680420]
[82.45942688 -360.36419678]
[77.52072144 -346.14468384]
[69.82044983 -333.21060181]
[59.67393112 -322.09155273]
[47.49666595 -313.24288940]
[33.78730011 -307.02691650]
[37.10956192 -292.39947510]
[40.54062271 -277.79714966]
[44.08029556 -263.22076416]
[54.24412155 -256.66156006]
[57.31237793 -244.54670715]
[51.11148834 -233.23690796]
[54.43375015 -218.60943604]
[57.75600815 -203.98197937]
[61.07826614 -189.35452271]
[64.40052795 -174.72706604]
[67.72278595 -160.09960938]
[71.04504395 -145.47213745]
[83.75099182 -141.37322998]
[92.84532166 -131.45167542]
[95.87374115 -118.22676086]
[91.94097137 -105.12898254]
[81.97181702 -95.61022186]
[85.07592773 -80.93492126]
[88.18003082 -66.25962067]
[94.86192322 -79.68915558]
[107.68876648 -87.46553040]
[122.68602753 -87.17916107]
[135.20664978 -78.91876984]
[141.37097168 -65.24393463]
[139.26892090 -50.39195251]
[129.55183411 -38.96487045]
[115.23065948 -34.50349426]
[100.74296570 -38.39022827]
[90.57781219 -49.42095947]
[91.69345856 -34.46250534]
[92.80910492 -19.50405312]
[93.92475891 -4.54559946]
[95.48527527 10.37300491]
[97.48928833 25.23853302]
[99.49330902 40.10406113]
[101.49732208 54.96958923]
[103.50133514 69.83512115]
[105.50534821 84.70064545]
[114.32477570 92.30715179]
[115.79479218 103.86051941]
[109.16119385 113.43322754]
[110.94366455 128.32695007]
[112.72612762 143.22065735]
[122.04849243 156.00361633]
[115.87841034 169.56015015]
[117.66088104 184.45385742]
[121.31134033 189.96618652]
[121.58840179 195.64247131]
[119.26786804 199.81669617]
[120.60610199 214.75688171]
[121.94433594 229.69706726]
[123.28256989 244.63725281]
[132.66171265 253.49131775]
[133.46876526 265.96258545]
[125.81533813 275.33016968]
[126.93098450 290.28860474]
[128.04663086 305.24707031]
[129.38487244 320.18725586]
[130.94538879 335.10586548]
[132.50590515 350.02447510]
[141.63693237 362.94479370]
[135.26568604 376.40795898]
[136.82621765 391.32656860]
[151.83816528 391.23516846]
[166.78677368 392.61569214]
[181.52809143 395.45477295]
[195.92013550 399.72512817]
[209.82429504 405.38558960]
[223.10668945 412.38165283]
[235.63937378 420.64593506]
[247.30165100 430.09887695]
[257.98120117 440.64941406]
[267.57519531 452.19595337]
[275.99121094 464.62725830]
[283.14822388 477.82360840]
[288.97726440 491.65795898]
[293.42221069 505.99703979]
[296.44027710 520.70275879]
[298.00234985 535.63348389]
[298.09344482 550.64544678]
[296.71264648 565.59399414]
[293.87326050 580.33526611]
[289.60263062 594.72723389]
[283.94189453 608.63128662]
[276.94555664 621.91351318]
[268.68099976 634.44604492]
[259.22784424 646.10815430]
[248.67709351 656.78747559]
[237.13037109 666.38128662]
[224.69889832 674.79699707]
[211.50238037 681.95373535]
[197.66792297 687.78253174]
[183.32875061 692.22717285]
[168.62297058 695.24493408]
[153.69221497 696.80676270]
[138.68026733 696.89752197]
[123.73171234 695.51641846]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 176]
[29 175]
[31 173]
[32 172]
[33 171]
[36 170]
[37 169]
[38 168]
[40 165]
[41 164]
[42 163]
[43 162]
[44 159]
[45 158]
[47 156]
[48 155]
[49 154]
[51 151]
[52 150]
[53 149]
[54 148]
[55 147]
[56 146]
[61 145]
[62 144]
[63 143]
[64 142]
[65 132]
[66 131]
[67 130]
[71 125]
[72 124]
[73 123]
[74 122]
[75 121]
[76 120]
[77 119]
[79 116]
[80 115]
[82 114]
[83 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
