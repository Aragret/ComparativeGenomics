%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGAUUACGAUCCGACGGUUACCACUCCCUCCAACUUCACUCUCCAUACCAAAACUCAUCAGGAGGAUAAAAAGCUUAUAGAACAAGUAACAAUUCCAxxxxxxxxxxGUAGUAAGGGGGAUUUAUUUAAUUUUUUUGAUAAUUUGGGUAUAUUGGAGGGGGUUUUAAGUCUUAUUAUUGUGUGGGCUGGUGUGGCGAUUGUUAGUUA\
) } def
/len { sequence length } bind def

/coor [
[81.81710815 593.69445801]
[66.98784637 590.46063232]
[54.33030701 582.08502197]
[45.55631638 569.70031738]
[41.85248566 554.98138428]
[43.71973419 539.91894531]
[50.90552139 526.54998779]
[62.43803787 516.68255615]
[76.75759888 511.65121460]
[77.20420837 496.65786743]
[77.65081024 481.66452026]
[78.09741974 466.67117310]
[78.54402161 451.67782593]
[78.99063110 436.68447876]
[76.04767609 429.90502930]
[79.55715179 421.47167969]
[72.39587402 408.41162109]
[80.74166107 394.97070312]
[81.41144562 379.98565674]
[78.90684509 375.91921997]
[78.93016815 370.23620605]
[82.33084869 364.56640625]
[83.44650269 349.60794067]
[84.56214905 334.64947510]
[85.67779541 319.69104004]
[86.79344177 304.73257446]
[79.14002228 295.36499023]
[79.94705963 282.89373779]
[89.32621002 274.03967285]
[90.66444397 259.09948730]
[92.00267792 244.15930176]
[85.43170166 230.79249573]
[94.36933899 217.73764038]
[95.59631348 202.78790283]
[96.71195984 187.82945251]
[96.93528748 172.83111572]
[96.26550293 157.84606934]
[95.59571838 142.86103821]
[94.92593384 127.87599182]
[93.81028748 112.91754150]
[85.75378418 101.49018860]
[91.27111053 88.64298248]
[89.71058655 73.72438049]
[88.15006256 58.80577469]
[86.58953857 43.88716888]
[85.02901459 28.96856308]
[83.46849060 14.04995918]
[81.90796661 -0.86864597]
[80.01467896 -15.74868107]
[77.78955841 -30.58272552]
[75.56444550 -45.41676712]
[73.33932495 -60.25081253]
[63.64049530 -72.75054169]
[69.40421295 -86.48476410]
[67.17910004 -101.31880951]
[64.95397949 -116.15284729]
[53.27292633 -122.85863495]
[47.66860580 -134.89201355]
[49.98390198 -147.76528931]
[59.15301514 -156.81829834]
[57.14900208 -171.68382263]
[55.14498901 -186.54936218]
[53.14097595 -201.41488647]
[44.11647034 -189.43330383]
[29.53051567 -185.93330383]
[16.05161858 -192.51504517]
[9.84214497 -206.16943359]
[13.74098492 -220.65388489]
[25.96564102 -229.34628296]
[40.92716599 -228.27258301]
[51.78617859 -217.92202759]
[51.33957291 -232.91537476]
[50.89296722 -247.90872192]
[50.44636154 -262.90206909]
[49.99975586 -277.89541626]
[42.24962616 -265.05270386]
[29.74233437 -256.77215576]
[14.89283848 -254.65260315]
[0.56834435 -259.10330200]
[-10.46531200 -269.26492310]
[-16.07770348 -283.17538452]
[-15.18516827 -298.14883423]
[-7.96003819 -311.29406738]
[4.20262671 -320.07299805]
[18.95440483 -322.79052734]
[33.44696045 -318.92196655]
[44.88201141 -309.21426392]
[51.05187607 -295.54055786]
[45.44731522 -310.33581543]
[54.98698807 -321.77450562]
[57.21210480 -336.60855103]
[59.43722153 -351.44259644]
[52.30175018 -368.41806030]
[63.76088715 -381.70922852]
[65.76490021 -396.57476807]
[59.94067764 -411.28491211]
[69.30899048 -422.86437988]
[71.31300354 -437.72991943]
[73.31701660 -452.59545898]
[59.45007324 -458.56289673]
[47.70807266 -468.05120850]
[38.96235657 -480.35629272]
[33.86190796 -494.56500244]
[32.78522110 -509.62301636]
[35.81218719 -524.41290283]
[42.71818924 -537.83709717]
[52.99075317 -548.89953613]
[65.86758423 -556.77923584]
[80.39315033 -560.89147949]
[95.48954010 -560.93115234]
[110.03650665 -556.89526367]
[122.95457458 -549.08337402]
[133.28512573 -538.07507324]
[140.26158142 -524.68731689]
[143.36622620 -509.91357422]
[142.36868286 -494.85012817]
[137.34298706 -480.61477661]
[128.66204834 -468.26391602]
[116.97007751 -458.71401978]
[103.13468170 -452.67379761]
[88.18254852 -450.59143066]
[86.17853546 -435.72589111]
[84.17451477 -420.86038208]
[90.14208221 -407.21350098]
[80.63042450 -394.57073975]
[78.62641144 -379.70523071]
[85.70870209 -369.89871216]
[84.16078949 -357.49758911]
[74.27126312 -349.21746826]
[72.04615021 -334.38342285]
[69.82102966 -319.54937744]
[75.58474731 -305.81515503]
[65.88591766 -293.31542969]
[64.99310303 -278.34204102]
[65.43971252 -263.34869385]
[65.88631439 -248.35533142]
[66.33292389 -233.36198425]
[66.77952576 -218.36863708]
[68.00650024 -203.41889954]
[70.01052094 -188.55337524]
[72.01453400 -173.68783569]
[74.01854706 -158.82231140]
[87.81617737 -149.20648193]
[90.44180298 -132.25299072]
[79.78802490 -118.37796783]
[82.01313782 -103.54392242]
[84.23825836 -88.70987701]
[93.77793121 -77.27117920]
[88.17337036 -62.47592926]
[90.39849091 -47.64188385]
[92.62360382 -32.80784225]
[94.84872437 -17.97379875]
[97.45161438 -15.59529495]
[99.03177643 -11.83788395]
[98.95366669 -7.19598866]
[96.82657623 -2.42916894]
[98.38710022 12.48943615]
[99.94762421 27.40804100]
[101.50814056 42.32664490]
[103.06866455 57.24525070]
[104.62918854 72.16385651]
[106.18971252 87.08245850]
[114.24621582 98.50981140]
[108.72888947 111.35701752]
[111.40288544 114.77809143]
[112.71698761 118.49798584]
[112.74424744 122.05251312]
[111.70095825 125.04887390]
[109.91097260 127.20620728]
[110.58075714 142.19125366]
[111.25054169 157.17628479]
[111.92032623 172.16133118]
[121.28135681 160.44078064]
[135.71272278 156.34985352]
[149.83187866 161.41436768]
[158.37274170 173.74536133]
[158.14978027 188.74371338]
[149.24613953 200.81538391]
[134.98266602 205.45794678]
[120.67928314 200.93983459]
[111.67041779 188.94509888]
[110.55477142 203.90354919]
[113.03723907 212.69418335]
[109.30952454 219.07586670]
[115.78478241 233.51129150]
[106.94286346 245.49752808]
[105.60462952 260.43771362]
[104.26639557 275.37789917]
[112.39961243 291.89855957]
[101.75189972 305.84823608]
[100.63625336 320.80667114]
[99.52059937 335.76513672]
[98.40495300 350.72360229]
[97.28930664 365.68203735]
[96.39648438 380.65545654]
[95.72669983 395.64047241]
[102.84007263 409.77236938]
[94.54219055 422.14147949]
[93.98397827 437.13107300]
[93.53737640 452.12442017]
[93.09076691 467.11776733]
[92.64416504 482.11114502]
[92.19755554 497.10449219]
[91.75094604 512.09783936]
[105.74565125 517.97259521]
[116.67040253 528.50891113]
[123.04772186 542.28186035]
[124.01512146 557.42877197]
[119.44177246 571.90112305]
[109.94618988 583.74163818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 204]
[10 203]
[11 202]
[12 201]
[13 200]
[14 199]
[16 198]
[18 196]
[19 195]
[22 194]
[23 193]
[24 192]
[25 191]
[26 190]
[29 188]
[30 187]
[31 186]
[33 184]
[34 182]
[35 181]
[36 172]
[37 171]
[38 170]
[39 169]
[40 164]
[42 162]
[43 161]
[44 160]
[45 159]
[46 158]
[47 157]
[48 156]
[49 152]
[50 151]
[51 150]
[52 149]
[54 147]
[55 146]
[56 145]
[60 142]
[61 141]
[62 140]
[63 139]
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
[88 133]
[90 131]
[91 130]
[92 129]
[94 126]
[95 125]
[97 123]
[98 122]
[99 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
