%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxGUCUAUCCCCAGGGAACUGGUGGUAGGAGGCACUUUAGUUAUAGGGCGUGUUCUCACGAUGAGAGGAGCGAGGCCCGGGUAUUGUGAACCCCCAUCGAUU\
) } def
/len { sequence length } bind def

/coor [
[141.72763062 352.33441162]
[142.38816833 337.33749390]
[144.47129822 322.47122192]
[147.95812988 307.87030029]
[152.81709290 293.66696167]
[159.00418091 279.98980713]
[166.46337891 266.96270752]
[175.12710571 254.70364380]
[184.91691589 243.32365417]
[195.74414062 232.92576599]
[186.42926025 221.16851807]
[177.11437988 209.41127014]
[167.79949951 197.65402222]
[158.48461914 185.89675903]
[143.70556641 184.44233704]
[134.09146118 172.65150452]
[135.71720886 157.15974426]
[126.40233612 145.40249634]
[112.54649353 151.00053406]
[97.67489624 152.46963501]
[82.99153900 149.69085693]
[69.68517303 142.88916016]
[58.83305740 132.61521912]
[51.31377029 119.70076752]
[47.73606491 105.19137573]
[48.38958740 90.26168823]
[53.22143173 76.12040710]
[61.84041595 63.91239548]
[52.52553177 52.15514374]
[43.21065140 40.39789200]
[28.57622528 34.38588715]
[26.73731422 19.60523605]
[21.88372993 17.68434906]
[18.58242416 14.42019939]
[17.08511734 10.62900829]
[17.28310966 7.10861969]
[8.50250626 -5.05283642]
[-0.27809677 -17.21429253]
[-9.05869961 -29.37574768]
[-17.83930397 -41.53720474]
[-26.61990738 -53.69865799]
[-39.38213730 -45.80443573]
[-52.67501831 -38.84078217]
[-66.43081665 -32.84317398]
[-80.57943726 -27.84218216]
[-95.04876709 -23.86328697]
[-109.76509094 -20.92676544]
[-124.65340424 -19.04758072]
[-139.63784790 -18.23531151]
[-154.64205933 -18.49409294]
[-169.58956909 -19.82260895]
[-184.40423584 -22.21408844]
[-199.01054382 -25.65634537]
[-213.33406067 -30.13183975]
[-227.30180359 -35.61776352]
[-240.84259033 -42.08616257]
[-253.88743591 -49.50407410]
[-266.36984253 -57.83369827]
[-278.22622681 -67.03258514]
[-289.39614868 -77.05387115]
[-299.82269287 -87.84647369]
[-309.45275879 -99.35540771]
[-318.23721313 -111.52201843]
[-326.13134766 -124.28430939]
[-333.09487915 -137.57723999]
[-339.09237671 -151.33308411]
[-344.09326172 -165.48173523]
[-348.07205200 -179.95111084]
[-351.00845337 -194.66744995]
[-352.88754272 -209.55578613]
[-353.69970703 -224.54022217]
[-353.44079590 -239.54443359]
[-352.11215210 -254.49194336]
[-349.72058105 -269.30657959]
[-346.27819824 -283.91287231]
[-341.80261230 -298.23635864]
[-336.31655884 -312.20404053]
[-329.84805298 -325.74478149]
[-322.43005371 -338.78958130]
[-314.10034180 -351.27191162]
[-304.90136719 -363.12823486]
[-294.87997437 -374.29806519]
[-284.08731079 -384.72454834]
[-272.57830811 -394.35449219]
[-260.41162109 -403.13888550]
[-247.64926147 -411.03289795]
[-234.35627747 -417.99636841]
[-220.60038757 -423.99374390]
[-206.45169067 -428.99453735]
[-191.98229980 -432.97320557]
[-177.26593018 -435.90948486]
[-162.37759399 -437.78845215]
[-147.39314270 -438.60049438]
[-132.38893127 -438.34149170]
[-117.44142914 -437.01272583]
[-102.62680817 -434.62103271]
[-88.02056122 -431.17855835]
[-73.69710541 -426.70281982]
[-59.72944641 -421.21670532]
[-46.18875504 -414.74807739]
[-33.14402771 -407.32998657]
[-20.66174126 -399.00015259]
[-8.80550575 -389.80108643]
[2.36426425 -379.77963257]
[12.79064941 -368.98687744]
[22.42051697 -357.47778320]
[31.20479774 -345.31103516]
[39.09872818 -332.54864502]
[46.06207657 -319.25558472]
[52.05936813 -305.49966431]
[57.06003571 -291.35092163]
[61.03859711 -276.88150024]
[63.97478104 -262.16510010]
[65.85362244 -247.27674866]
[66.66555023 -232.29229736]
[66.40641785 -217.28808594]
[65.07756042 -202.34060669]
[62.68574142 -187.52600098]
[59.24314880 -172.91976929]
[54.76732254 -158.59635925]
[49.28107834 -144.62873840]
[42.81237030 -131.08808899]
[35.39415741 -118.04342651]
[27.06424713 -105.56120300]
[17.86508369 -93.70503998]
[7.84354639 -82.53534698]
[-2.94929814 -72.10903931]
[-14.45845032 -62.47926331]
[-5.67784739 -50.31780624]
[3.10275578 -38.15635300]
[11.88335896 -25.99489594]
[20.66396141 -13.83343983]
[29.44456482 -1.67198372]
[38.49456406 10.29035282]
[52.46272659 15.46139908]
[54.96789932 31.08300781]
[64.28278351 42.84025955]
[73.59766388 54.59751129]
[87.45350647 48.99946213]
[102.32510376 47.53036118]
[117.00846100 50.30913925]
[130.31481934 57.11083603]
[141.16694641 67.38478851]
[148.68623352 80.29923248]
[152.26393127 94.80862427]
[151.61041260 109.73831177]
[146.77856445 123.87959290]
[138.15959167 136.08760071]
[147.47447205 147.84486389]
[162.92738342 149.80575562]
[172.20651245 161.86196899]
[170.24186707 176.58187866]
[179.55674744 188.33914185]
[188.87162781 200.09638977]
[198.18650818 211.85363770]
[207.50140381 223.61088562]
[220.10020447 215.44909668]
[233.41778564 208.52186584]
[247.33355713 202.89192200]
[261.72146606 198.61027527]
[276.45126343 195.71569824]
[291.38946533 194.23439026]
[306.40084839 194.17977905]
[321.34945679 195.55235291]
[336.09991455 198.33967590]
[350.51861572 202.51651001]
[364.47497559 208.04504395]
[377.84262085 214.87519836]
[390.50045776 222.94509888]
[402.33389282 232.18168640]
[413.23574829 242.50129700]
[423.10726929 253.81048584]
[431.85910034 266.00680542]
[439.41192627 278.97985840]
[445.69738770 292.61209106]
[450.65853882 306.78005981]
[454.25045776 321.35546875]
[456.44061279 336.20632935]
[457.20916748 351.19815063]
[456.54916382 366.19509888]
[454.46658325 381.06143188]
[450.98028564 395.66247559]
[446.12182617 409.86599731]
[439.93524170 423.54339600]
[432.47653198 436.57077026]
[423.81326294 448.83013916]
[414.02386475 460.21047974]
[403.19699097 470.60876465]
[391.43075562 479.93078613]
[378.83163452 488.09213257]
[365.51379395 495.01885986]
[351.59783936 500.64828491]
[337.20974731 504.92941284]
[322.47988892 507.82345581]
[307.54159546 509.30422974]
[292.53021240 509.35827637]
[277.58166504 507.98516846]
[262.83132935 505.19729614]
[248.41278076 501.01992798]
[234.45661926 495.49090576]
[221.08921814 488.66027832]
[208.43165588 480.58990479]
[196.59855652 471.35287476]
[185.69708252 461.03286743]
[175.82595825 449.72332764]
[167.07460022 437.52667236]
[159.52223206 424.55337524]
[153.23727417 410.92089844]
[148.27664185 396.75274658]
[144.68525696 382.17718506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 156]
[11 155]
[12 154]
[13 153]
[14 152]
[17 149]
[18 148]
[28 138]
[29 137]
[30 136]
[32 134]
[36 133]
[37 132]
[38 131]
[39 130]
[40 129]
[41 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
