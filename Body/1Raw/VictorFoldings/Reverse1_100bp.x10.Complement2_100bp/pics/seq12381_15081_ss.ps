%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUGACUAUUAUUUCCACCUACGCUGUUACCUAAAAUGUAUUACCCCCAUACUCAAAAAAAACAAUCCCAAUUGCUCCCACCAUUCCUACCCCCCUUAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[69.81305695 598.88031006]
[63.18175507 612.43347168]
[53.26786041 623.80792236]
[40.74731827 632.22802734]
[26.47380066 637.11975098]
[11.42050076 638.14959717]
[-3.38622451 635.24731445]
[-16.93682671 628.61077881]
[-28.30740356 618.69250488]
[-36.72269058 606.16870117]
[-41.60892105 591.89331055]
[-42.63293839 576.83959961]
[-39.72492981 562.03399658]
[-33.08316422 548.48596191]
[-23.16048813 537.11920166]
[-10.63344765 528.70874023]
[3.64384270 523.82800293]
[18.69793320 522.80981445]
[21.58320618 508.08993530]
[24.46847916 493.37002563]
[27.35375214 478.65014648]
[13.76943302 470.69052124]
[3.71476388 458.53988647]
[-1.58041728 443.65554810]
[-1.45857167 427.83102417]
[4.08394623 412.97970581]
[14.39422607 400.90365601]
[28.23966217 393.07492065]
[43.95529556 390.45602417]
[46.62108994 375.69479370]
[49.28688431 360.93356323]
[51.95267868 346.17236328]
[45.13750839 330.00076294]
[57.14868546 316.04321289]
[59.59440994 301.24395752]
[62.04013824 286.44467163]
[64.48587036 271.64541626]
[58.92726898 257.82690430]
[68.81112671 245.47294617]
[71.25685120 230.67367554]
[58.99406052 222.18313599]
[51.60335922 209.15673828]
[50.59724045 194.15177917]
[56.22870636 180.14082336]
[67.43048096 169.92285156]
[82.01686859 165.56408691]
[84.46259308 150.76481628]
[86.90831757 135.96554565]
[89.24380493 121.14847565]
[91.46892548 106.31443024]
[92.80715942 91.37424469]
[93.25376129 76.38088989]
[93.70037079 61.38754272]
[94.14698029 46.39419174]
[94.59358215 31.40084267]
[86.09278107 43.75950241]
[73.11479950 51.28092957]
[58.16547012 52.51285934]
[44.13128662 47.21742249]
[33.72202301 36.41708755]
[28.94754601 22.19723129]
[30.72973251 7.30348063]
[38.72447205 -5.38841248]
[51.38810349 -13.42784214]
[66.27548218 -15.26251984]
[80.51207733 -10.53819942]
[91.34903717 -0.16707209]
[96.69409943 13.84962177]
[99.79820251 -0.82568032]
[102.90231323 -15.50098228]
[105.78759003 -30.22087479]
[108.45338440 -44.98209000]
[111.11917877 -59.74330902]
[113.78497314 -74.50452423]
[114.90062714 -89.46298218]
[106.75587463 -103.02666473]
[114.11080170 -115.97866058]
[113.66419983 -130.97201538]
[113.21759033 -145.96536255]
[112.77098846 -160.95870972]
[98.27609253 -165.24305725]
[85.83199310 -173.78628540]
[76.65023804 -185.74136353]
[71.62005615 -199.92980957]
[71.22220612 -214.95793152]
[75.48307037 -229.35362244]
[83.97330475 -241.71064758]
[95.85105896 -250.82597351]
[109.94544983 -255.81687927]
[109.49884796 -270.81024170]
[109.05223846 -285.80358887]
[108.60563660 -300.79693604]
[93.86573792 -303.95901489]
[80.31119537 -310.55734253]
[68.73006439 -320.20831299]
[59.79564667 -332.35076904]
[54.02738190 -346.27880859]
[51.76062393 -361.18267822]
[53.12716675 -376.19589233]
[58.04755783 -390.44555664]
[66.23572540 -403.10324097]
[77.21562958 -413.43307495]
[90.34891510 -420.83444214]
[104.87201691 -424.87707520]
[119.94059753 -425.32592773]
[134.67857361 -422.15487671]
[148.22911072 -415.54833984]
[159.80438232 -405.89038086]
[168.73144531 -393.74249268]
[174.49127197 -379.81094360]
[176.74897766 -364.90570068]
[175.37333679 -349.89334106]
[170.44432068 -335.64666748]
[162.24847412 -322.99392700]
[151.26229858 -312.67077637]
[138.12454224 -305.27734375]
[123.59898376 -301.24353027]
[124.04559326 -286.25018311]
[124.49219513 -271.25683594]
[124.93880463 -256.26348877]
[139.30526733 -252.12034607]
[151.70451355 -243.72814941]
[160.91520691 -231.89839172]
[166.02536011 -217.78182983]
[166.52270508 -202.75666809]
[162.34594727 -188.29397583]
[153.89205933 -175.81358337]
[141.97851562 -166.54481506]
[127.76433563 -161.40531921]
[128.21093750 -146.41197205]
[128.65754700 -131.41862488]
[129.10415649 -116.42527008]
[137.21696472 -103.93400574]
[129.89396667 -89.90958405]
[137.12522888 -103.05146027]
[148.78703308 -112.48555756]
[163.14944458 -116.81239319]
[178.08186340 -115.39009094]
[191.36915588 -108.42964935]
[201.04023743 -96.96360779]
[205.66046143 -82.69288635]
[204.54444885 -67.73445892]
[197.85774231 -54.30731964]
[186.59228516 -44.40330887]
[172.41923523 -39.49162674]
[157.44108582 -40.30088806]
[143.87974548 -46.71104431]
[133.74696350 -57.77119064]
[128.54618835 -71.83872986]
[125.88039398 -57.07751465]
[123.21459961 -42.31629562]
[120.54880524 -27.55507851]
[122.48767853 -23.19046783]
[121.70530701 -17.56153107]
[117.57762146 -12.39687252]
[114.47351074 2.27842975]
[111.36940002 16.95373154]
[109.58692932 31.84745026]
[109.14032745 46.84080124]
[108.69371796 61.83414841]
[108.24711609 76.82749939]
[107.80050659 91.82084656]
[118.00733948 80.82901001]
[132.70300293 77.82276917]
[146.40638733 83.92338562]
[154.00645447 96.85547638]
[152.66856384 111.79569244]
[142.89173889 123.17170715]
[128.32247925 126.74053955]
[114.39475250 121.17111206]
[106.30297089 108.53954315]
[104.07785034 123.37358856]
[105.89962769 132.32450867]
[101.70758820 138.41127014]
[99.26186371 153.21054077]
[96.81613922 168.00981140]
[109.22460938 176.82974243]
[116.54332733 190.10842896]
[117.36758423 205.18624878]
[111.58736420 219.06968689]
[100.39859772 229.02565002]
[86.05612183 233.11941528]
[83.61039734 247.91868591]
[88.99405670 262.79574585]
[79.28514099 274.09112549]
[76.83940887 288.89041138]
[74.39368439 303.68966675]
[71.94795227 318.48895264]
[78.81101990 329.40960693]
[76.46929932 341.68560791]
[66.71389771 348.83816528]
[64.04810333 363.59936523]
[61.38230515 378.36059570]
[58.71651077 393.12179565]
[71.25866699 400.04971313]
[81.03346252 410.49676514]
[87.09489441 423.43249512]
[88.86234283 437.58657837]
[86.17615509 451.57351685]
[79.31196594 464.02832031]
[68.95248413 473.73971558]
[56.11960983 479.76788330]
[42.07364273 481.53543091]
[39.18836975 496.25531006]
[36.30309677 510.97518921]
[33.41782379 525.69506836]
[46.97354889 532.32116699]
[58.35177994 542.23065186]
[66.77674103 554.74792480]
[71.67398834 569.01959229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 206]
[19 205]
[20 204]
[21 203]
[29 194]
[30 193]
[31 192]
[32 191]
[34 188]
[35 187]
[36 186]
[37 185]
[39 183]
[40 182]
[46 176]
[47 175]
[48 174]
[49 172]
[50 171]
[51 162]
[52 161]
[53 160]
[54 159]
[55 158]
[68 157]
[69 156]
[70 155]
[71 152]
[72 151]
[73 150]
[74 149]
[75 134]
[77 132]
[78 131]
[79 130]
[80 129]
[89 120]
[90 119]
[91 118]
[92 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
