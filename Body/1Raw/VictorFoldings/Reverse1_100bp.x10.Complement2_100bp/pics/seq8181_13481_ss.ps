%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxUUAUGGAAAGGAGUGUCCAAAGAUGAGGUUUCUGGUGUAGUAGCUUUGGCGUUUGUAUAGUAUGUGUUUGCGGACUCGGGAUAGAUAAUGAGAGUAGCGA\
) } def
/len { sequence length } bind def

/coor [
[96.78473663 409.26858521]
[92.98579407 424.01605225]
[83.51187134 435.93933105]
[70.00437164 442.97262573]
[54.80355835 443.89739990]
[40.54306412 438.55340576]
[29.69360733 427.86654663]
[24.13491631 413.68835449]
[24.83007240 398.47531128]
[31.65863419 384.86315918]
[43.43751526 375.21029663]
[58.12594604 371.18911743]
[60.35106277 356.35507202]
[54.58734512 342.62084961]
[64.28617096 330.12112427]
[66.51129150 315.28707886]
[68.62591553 300.43688965]
[70.62992859 285.57135010]
[64.66236877 271.92446899]
[74.17401886 259.28173828]
[76.17803192 244.41619873]
[78.18204498 229.55067444]
[80.18605804 214.68515015]
[81.85760498 199.77857971]
[83.19583893 184.83839417]
[84.53407288 169.89820862]
[81.99985504 162.95561218]
[86.00506592 154.74610901]
[87.56558990 139.82749939]
[89.12611389 124.90889740]
[90.68663788 109.99028778]
[82.66368866 122.66436768]
[72.35160828 133.55754089]
[60.13592148 142.26252747]
[46.47332001 148.45391846]
[31.87458992 151.90023804]
[16.88551521 152.47262573]
[2.06647372 150.14968872]
[-12.02851391 145.01829529]
[-24.87249565 137.27024841]
[-35.98529053 127.19524384]
[-44.95143890 115.16992950]
[-51.43573380 101.64388275]
[-55.19575882 87.12278748]
[-56.09093475 72.14952087]
[-54.08780289 57.28387451]
[-49.26124573 43.08160782]
[-41.79170990 30.07368469]
[-31.95845222 18.74641609]
[-20.12909317 9.52327919]
[-6.74588251 2.74908781]
[7.69083834 -1.32289958]
[22.64134216 -2.54044890]
[37.54669571 -0.85804129]
[51.84964752 3.66142535]
[65.01547241 10.84898758]
[76.55195618 20.43593216]
[86.02780151 32.06384659]
[93.08874512 45.29801178]
[97.47080231 59.64365387]
[99.01016235 74.56446075]
[97.65039825 89.49660492]
[105.50215149 76.71575928]
[107.32778931 67.76562500]
[113.56715393 63.80430603]
[121.60832977 51.14178085]
[129.64950562 38.47925568]
[131.60818481 29.55729675]
[137.90583801 25.68931007]
[146.13464355 13.14790916]
[146.75814819 -5.25569868]
[162.72779846 -12.53147697]
[170.76896667 -25.19400215]
[171.63536072 -40.99146652]
[184.98976135 -47.58763123]
[193.03092957 -60.25015640]
[201.07209778 -72.91268158]
[209.11328125 -85.57520294]
[217.15444946 -98.23773193]
[225.19561768 -110.90025330]
[226.06201172 -126.69772339]
[239.41641235 -133.29388428]
[247.45758057 -145.95640564]
[247.48611450 -150.29843140]
[248.76612854 -154.03019714]
[250.95210266 -156.83322144]
[253.63055420 -158.53395081]
[256.37326050 -159.11332703]
[265.15386963 -171.27479553]
[273.93447876 -183.43624878]
[282.71508789 -195.59770203]
[291.49566650 -207.75915527]
[300.27627563 -219.92060852]
[288.96841431 -229.79263306]
[278.61965942 -240.66589355]
[269.31832886 -252.44764709]
[261.14376831 -265.03738403]
[254.16572571 -278.32766724]
[248.44372559 -292.20510864]
[244.02661133 -306.55130005]
[240.95205688 -321.24389648]
[239.24627686 -336.15747070]
[238.92385864 -351.16482544]
[239.98751831 -366.13790894]
[242.42820740 -380.94897461]
[246.22508240 -395.47164917]
[251.34577942 -409.58206177]
[257.74658203 -423.15979004]
[265.37286377 -436.08898926]
[274.15960693 -448.25933838]
[284.03179932 -459.56704712]
[294.90524292 -469.91561890]
[306.68716431 -479.21676636]
[319.27700806 -487.39111328]
[332.56741333 -494.36892700]
[346.44494629 -500.09069824]
[360.79122925 -504.50756836]
[375.48385620 -507.58187866]
[390.39746094 -509.28741455]
[405.40484619 -509.60958862]
[420.37789917 -508.54568481]
[435.18893433 -506.10473633]
[449.71154785 -502.30761719]
[463.82186890 -497.18670654]
[477.39947510 -490.78567505]
[490.32855225 -483.15917969]
[502.49877930 -474.37222290]
[513.80633545 -464.49984741]
[524.15472412 -453.62622070]
[533.45562744 -441.84414673]
[541.62976074 -429.25415039]
[548.60736084 -415.96365356]
[554.32891846 -402.08599854]
[558.74554443 -387.73965454]
[561.81964111 -373.04696655]
[563.52490234 -358.13333130]
[563.84680176 -343.12597656]
[562.78265381 -328.15292358]
[560.34149170 -313.34194946]
[556.54412842 -298.81936646]
[551.42297363 -284.70916748]
[545.02172852 -271.13165283]
[537.39495850 -258.20269775]
[528.60784912 -246.03262329]
[518.73529053 -234.72525024]
[507.86148071 -224.37702942]
[496.07925415 -215.07629395]
[483.48913574 -206.90235901]
[470.19848633 -199.92497253]
[456.32077026 -194.20368958]
[441.97433472 -189.78727722]
[427.28161621 -186.71345520]
[412.36795044 -185.00843811]
[397.36056519 -184.68675232]
[382.38754272 -185.75117493]
[367.57659912 -188.19259644]
[353.05410767 -191.99020386]
[338.94396973 -197.11158752]
[325.36654663 -203.51306152]
[312.43774414 -211.14001465]
[303.65713501 -198.97856140]
[294.87652588 -186.81709290]
[286.09591675 -174.65563965]
[277.31533813 -162.49418640]
[268.53472900 -150.33273315]
[260.12011719 -137.91523743]
[252.07893372 -125.25270844]
[251.78770447 -110.36095428]
[237.85813904 -102.85908508]
[229.81697083 -90.19655609]
[221.77580261 -77.53403473]
[213.73463440 -64.87150574]
[205.69345093 -52.20898056]
[197.65228271 -39.54645920]
[197.36105347 -24.65469933]
[183.43150330 -17.15282822]
[175.39031982 -4.49030399]
[177.71867371 7.38005209]
[171.12306213 17.99522018]
[158.67605591 21.37671661]
[150.44723511 33.91811752]
[142.31202698 46.52042770]
[134.27085876 59.18295288]
[126.22968292 71.84548187]
[118.28299713 84.56751251]
[110.43124390 97.34835815]
[105.60523987 111.55081177]
[104.04472351 126.46942139]
[102.48419952 141.38801575]
[100.92367554 156.30662537]
[99.47425842 171.23643494]
[98.13602448 186.17662048]
[96.79779053 201.11680603]
[98.99561310 205.85142517]
[99.14282990 210.49165344]
[97.61878204 214.27217102]
[95.05158997 216.68916321]
[93.04757690 231.55468750]
[91.04356384 246.42021179]
[89.03955078 261.28573608]
[94.86376953 275.99591064]
[85.49546051 287.57537842]
[83.49144745 302.44091797]
[85.44628143 311.36370850]
[81.34533691 317.51220703]
[79.12021637 332.34625244]
[84.72478485 347.14151001]
[75.18510437 358.58020020]
[72.95999146 373.41424561]
[85.82216644 381.56802368]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 209]
[13 208]
[15 206]
[16 205]
[17 203]
[18 202]
[20 200]
[21 199]
[22 198]
[23 197]
[24 193]
[25 192]
[26 191]
[28 190]
[29 189]
[30 188]
[31 187]
[62 186]
[63 185]
[65 184]
[66 183]
[67 182]
[69 181]
[70 180]
[72 177]
[73 176]
[75 174]
[76 173]
[77 172]
[78 171]
[79 170]
[80 169]
[82 167]
[83 166]
[88 165]
[89 164]
[90 163]
[91 162]
[92 161]
[93 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
