%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[118.42980957 509.77285767]
[131.40299988 502.03509521]
[127.64669800 487.51303101]
[123.89039612 472.99096680]
[120.13409424 458.46890259]
[116.37779999 443.94683838]
[105.69985962 433.56268311]
[109.73479462 418.26464844]
[99.05686188 407.88046265]
[103.09178925 392.58242798]
[94.56585693 404.92376709]
[79.83589935 407.75717163]
[67.33989716 399.45959473]
[64.23614502 384.78421021]
[72.30259705 372.13778687]
[86.91842651 368.76473999]
[99.71046448 376.59655762]
[97.26473999 361.79727173]
[94.81901550 346.99801636]
[92.37328339 332.19873047]
[89.92755890 317.39947510]
[87.48182678 302.60018921]
[85.03610229 287.80093384]
[80.84407043 281.71417236]
[82.66584015 272.76324463]
[80.44072723 257.92919922]
[75.03343964 271.92068481]
[64.99102020 283.06292725]
[51.63470459 289.88998413]
[36.72175598 291.50366211]
[22.21422386 287.69165039]
[10.02082825 278.95544434]
[1.74581790 266.44448853]
[-1.52208745 251.80477905]
[0.64706159 236.96244812]
[7.96787596 223.87025452]
[19.47717667 214.25068665]
[33.66071701 209.36938477]
[48.65240860 209.86854553]
[62.47983932 215.68251038]
[73.32376862 226.04635620]
[79.75810242 239.59883118]
[80.87375641 224.64038086]
[81.98940277 209.68193054]
[83.10504913 194.72346497]
[75.45162201 185.35588074]
[76.25866699 172.88462830]
[85.63781738 164.03056335]
[86.97605133 149.09037781]
[84.65551758 144.91613770]
[84.93257904 139.23985291]
[88.58303833 133.72753906]
[90.36550903 118.83381653]
[92.14797211 103.94010162]
[90.47402954 101.39305878]
[89.68985748 98.18064880]
[90.04367828 94.63124084]
[91.65893555 91.16033173]
[94.50558472 88.22273254]
[97.17138672 73.46150970]
[99.83718109 58.70029449]
[97.96469116 52.35952759]
[99.36524200 46.85176468]
[102.80836487 43.54208755]
[98.09436798 28.43947983]
[108.29797363 17.58887100]
[111.40208435 2.91356826]
[114.50619507 -11.76173401]
[108.39376831 -29.13181877]
[120.62369537 -41.71736145]
[123.50896454 -56.43725586]
[109.79382324 -50.36314774]
[96.42370605 -57.16315079]
[93.25457001 -71.82454681]
[102.62258911 -83.53950500]
[117.62200165 -83.67219543]
[127.19539642 -72.12640381]
[131.16749573 -86.59092712]
[127.36077118 -101.94734192]
[138.19212341 -112.17137909]
[142.16423035 -126.63590240]
[146.13632202 -141.10043335]
[150.10841370 -155.56495667]
[154.08052063 -170.02947998]
[158.05261230 -184.49400330]
[161.04737854 -199.19200134]
[153.86221313 -209.90350342]
[155.83740234 -222.24377441]
[165.37551880 -229.68359375]
[167.60063171 -244.51763916]
[169.82574463 -259.35168457]
[172.05085754 -274.18572998]
[173.94415283 -289.06576538]
[175.50468445 -303.98437500]
[177.06520081 -318.90298462]
[178.62573242 -333.82156372]
[164.40083313 -338.79641724]
[151.70698547 -346.91818237]
[141.22872925 -357.74884033]
[133.53115845 -370.70428467]
[129.02940369 -385.08590698]
[127.96620941 -400.11810303]
[130.39894104 -414.99017334]
[136.19638062 -428.90011597]
[145.04588318 -441.09774780]
[156.47023010 -450.92532349]
[169.85330200 -457.85281372]
[184.47335815 -461.50665283]
[199.54197693 -461.68978882]
[214.24652100 -458.39230347]
[227.79397583 -451.79208374]
[239.45376587 -442.24505615]
[248.59709167 -430.26605225]
[254.73085022 -416.50109863]
[257.52426147 -401.69253540]
[256.82669067 -386.63897705]
[252.67575073 -372.15219116]
[245.29528809 -359.01348877]
[235.08332825 -347.93139648]
[222.59059143 -339.50357056]
[208.49079895 -334.18450928]
[193.54432678 -332.26104736]
[191.98381042 -317.34243774]
[190.42327881 -302.42382812]
[188.86276245 -287.50524902]
[190.78709412 -284.55068970]
[191.37597656 -280.51730347]
[190.13792419 -276.04287720]
[186.88490295 -271.96060181]
[184.65979004 -257.12655640]
[182.43467712 -242.29252625]
[180.20954895 -227.45848083]
[187.50318909 -211.49696350]
[175.91291809 -197.18798828]
[186.71638489 -207.59400940]
[201.40969849 -210.61166382]
[215.43998718 -205.30592346]
[224.45980835 -193.32081604]
[225.67428589 -178.37005615]
[218.70706177 -165.08630371]
[205.71705627 -157.58567810]
[190.72932434 -158.19232178]
[178.38800049 -166.71826172]
[172.51713562 -180.52189636]
[168.54504395 -166.05737305]
[164.57293701 -151.59284973]
[160.60084534 -137.12832642]
[156.62875366 -122.66381073]
[152.65664673 -108.19928741]
[156.74748230 -93.87747192]
[145.63201904 -82.61882782]
[141.65991211 -68.15430450]
[138.22885132 -53.55198288]
[135.34358215 -38.83208847]
[141.82962036 -28.62141609]
[139.54632568 -16.33441734]
[129.18150330 -8.65762424]
[126.07738495 6.01767826]
[122.97327423 20.69297981]
[127.90930176 34.74591446]
[117.48366547 46.64619827]
[114.59839630 61.36608887]
[111.93260193 76.12730408]
[109.26680756 90.88852692]
[107.04168701 105.72256470]
[105.25922394 120.61628723]
[103.47675323 135.51000977]
[101.91623688 150.42860413]
[100.57800293 165.36878967]
[108.71121979 181.88945007]
[98.06350708 195.83911133]
[96.94785309 210.79757690]
[95.83220673 225.75602722]
[94.71656036 240.71447754]
[95.27477264 255.70408630]
[97.49988556 270.53814697]
[99.83537292 285.35519409]
[102.28109741 300.15447998]
[104.72682953 314.95373535]
[107.17255402 329.75302124]
[109.61828613 344.55227661]
[112.06401062 359.35156250]
[114.50973511 374.15081787]
[117.61384583 388.82614136]
[128.56045532 400.24902344]
[124.25685120 414.50833130]
[135.20346069 425.93121338]
[130.89985657 440.19055176]
[134.65615845 454.71261597]
[138.41246033 469.23464966]
[142.16876221 483.75671387]
[145.92506409 498.27877808]
[161.02305603 498.75561523]
[175.37469482 503.46804810]
[187.81657410 512.03405762]
[197.34007263 523.75921631]
[203.17317200 537.69305420]
[204.84301758 552.70599365]
[202.21421814 567.58099365]
[195.49989319 581.11224365]
[185.24433899 592.20275879]
[172.27893066 599.95355225]
[157.65470886 603.73632812]
[142.55720520 603.24432373]
[128.21031189 598.51745605]
[115.77703857 589.93896484]
[106.26531982 578.20422363]
[100.44622040 564.26458740]
[98.79146576 549.24993896]
[101.43521118 534.37756348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[4 190]
[5 189]
[6 188]
[8 186]
[10 184]
[17 183]
[18 182]
[19 181]
[20 180]
[21 179]
[22 178]
[23 177]
[25 176]
[26 175]
[42 174]
[43 173]
[44 172]
[45 171]
[48 169]
[49 168]
[52 167]
[53 166]
[54 165]
[59 164]
[60 163]
[61 162]
[64 161]
[66 159]
[67 158]
[68 157]
[70 154]
[71 153]
[77 152]
[78 151]
[80 149]
[81 148]
[82 147]
[83 146]
[84 145]
[85 144]
[86 134]
[89 132]
[90 131]
[91 130]
[92 129]
[93 125]
[94 124]
[95 123]
[96 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
