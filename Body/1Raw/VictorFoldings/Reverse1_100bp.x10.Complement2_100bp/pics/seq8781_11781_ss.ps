%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[48.49673462 625.00207520]
[39.96268082 637.36431885]
[29.88799667 648.50683594]
[18.44507217 658.23895264]
[5.82971287 666.39416504]
[-7.74221659 672.83294678]
[-22.03848267 677.44506836]
[-36.81445694 680.15167236]
[-51.81730270 680.90637207]
[-66.79030609 679.69628906]
[-81.47724915 676.54217529]
[-95.62683105 671.49792480]
[-108.99693298 664.64990234]
[-121.35876465 656.11523438]
[-132.50079346 646.04003906]
[-142.23239136 634.59667969]
[-150.38702393 621.98089600]
[-156.82514954 608.40869141]
[-161.43659973 594.11218262]
[-164.14247131 579.33605957]
[-164.89648438 564.33319092]
[-163.68569946 549.36022949]
[-160.53086853 534.67346191]
[-155.48594666 520.52410889]
[-148.63728333 507.15435791]
[-140.10205078 494.79293823]
[-130.02630615 483.65136719]
[-118.58245087 473.92031860]
[-105.96631622 465.76629639]
[-92.39377594 459.32882690]
[-78.09706879 454.71804810]
[-63.32083893 452.01284790]
[-48.31792068 451.25958252]
[-33.34503555 452.47106934]
[-18.65838623 455.62661743]
[-13.62147045 441.49755859]
[-8.58455467 427.36853027]
[-3.54763794 413.23950195]
[-11.39852715 398.36663818]
[-5.95639515 382.09710693]
[9.87432575 374.65347290]
[14.70032406 360.45101929]
[19.52632141 346.24856567]
[16.29519653 331.70864868]
[28.06108093 321.13156128]
[24.82995415 306.59164429]
[36.59584045 296.01458740]
[41.10346603 281.70788574]
[45.29047775 267.30410767]
[41.41333389 252.92297363]
[52.69519424 241.83106995]
[56.88220596 227.42729187]
[61.06921387 213.02351379]
[65.14888000 198.58895874]
[69.12097931 184.12443542]
[61.55358505 171.34671021]
[65.37580109 156.62104797]
[78.82955933 148.77030945]
[82.80165863 134.30578613]
[86.77375031 119.84125519]
[90.74584961 105.37673187]
[92.86047363 90.52653503]
[93.08380127 75.52819824]
[93.30712891 60.52985764]
[93.53045654 45.53152084]
[85.99947357 31.61768150]
[93.92540741 19.00701714]
[94.14873505 4.00868082]
[94.26040649 -10.99090385]
[94.26040649 -25.99090385]
[94.14873505 -40.99048996]
[93.81375885 -55.98674774]
[93.36715698 -70.98009491]
[92.92054749 -85.97344971]
[84.77579498 -99.53713226]
[92.13072968 -112.48912811]
[82.09197235 -127.92625427]
[91.00658417 -143.04235840]
[90.33679962 -158.02740479]
[77.55513000 -166.62594604]
[72.34826660 -180.93475342]
[76.51605225 -195.39482117]
[88.25878143 -204.51876831]
[87.58899689 -219.50381470]
[86.91921234 -234.48884583]
[86.24942780 -249.47389221]
[77.90363312 -262.91479492]
[85.06491089 -275.97488403]
[84.39512634 -290.95989990]
[83.72534180 -305.94494629]
[83.05555725 -320.92999268]
[68.25006866 -323.73965454]
[54.49187088 -329.88854980]
[42.52291870 -339.04501343]
[32.98868561 -350.71527100]
[26.40334129 -364.26998901]
[23.12202454 -378.97811890]
[23.32169342 -394.04653931]
[26.99157715 -408.66256714]
[33.93376923 -422.03802490]
[43.77388000 -433.45156860]
[55.98124695 -442.28768921]
[69.89754486 -448.06985474]
[84.77227783 -450.48623657]
[99.80327606 -449.40652466]
[114.17993927 -444.88897705]
[127.12695312 -437.17718506]
[137.94609070 -426.68704224]
[146.05389404 -413.98428345]
[151.01312256 -399.75393677]
[152.55633545 -384.76342773]
[150.60029602 -369.82119751]
[145.25050354 -355.73303223]
[136.79545593 -343.25869751]
[125.69113922 -333.07092285]
[112.53637695 -325.71911621]
[98.04059601 -321.59976196]
[98.71038055 -306.61474609]
[99.38016510 -291.62969971]
[100.04994965 -276.64465332]
[108.34783936 -264.27557373]
[101.23446655 -250.14367676]
[101.90425110 -235.15863037]
[102.57403564 -220.17359924]
[103.24382019 -205.18855286]
[115.75371552 -197.14862061]
[121.19495392 -183.11805725]
[117.28541565 -168.40176392]
[105.32183838 -158.69718933]
[105.99162292 -143.71214294]
[114.70397949 -135.32040405]
[115.38462830 -122.84159851]
[107.12407684 -112.93573761]
[115.23688507 -100.44447327]
[107.91390228 -86.42005157]
[108.36050415 -71.42670441]
[108.80711365 -56.43335342]
[112.14836884 -49.84110260]
[109.14707184 -41.21381760]
[112.38981628 -34.57254791]
[109.26040649 -25.99090385]
[109.26040649 -10.99090385]
[112.40390778 -4.30209255]
[109.14707184 4.23200846]
[108.92374420 19.23034477]
[116.47070312 32.07140350]
[108.52879333 45.75484848]
[108.30546570 60.75318527]
[108.08213806 75.75152588]
[107.85881042 90.74986267]
[115.17439270 77.65473938]
[126.30152130 67.59555817]
[140.06591797 61.63389206]
[155.01498413 60.39888763]
[169.57112122 64.02087402]
[182.19818115 72.11762238]
[191.56361389 83.83464813]
[196.67903137 97.93544769]
[197.00462341 112.93191528]
[192.50601196 127.24143982]
[183.65795898 139.35389709]
[171.39419556 147.99104309]
[157.00897217 152.24137878]
[142.02038574 151.65635681]
[128.01022339 146.29769897]
[116.45699310 136.73092651]
[108.57995605 123.96565247]
[105.21037292 109.34883118]
[101.23827362 123.81335449]
[97.26618195 138.27787781]
[93.29408264 152.74240112]
[100.85159302 166.36303711]
[96.61727142 180.97554016]
[83.58550262 188.09652710]
[79.61340332 202.56105042]
[80.35862732 211.66503906]
[75.47299957 217.21052551]
[71.28598785 231.61430359]
[67.09897614 246.01808167]
[70.67663574 261.42947388]
[59.69425964 271.49111938]
[55.50725174 285.89489746]
[56.75332260 290.96386719]
[56.00523758 295.54574585]
[53.78246307 298.96252441]
[50.79829407 300.84057617]
[53.68423080 316.39633179]
[42.26353455 325.95758057]
[45.14947510 341.51333618]
[33.72877884 351.07455444]
[28.90277863 365.27700806]
[24.07678223 379.47946167]
[31.38144112 390.79568481]
[30.84276581 404.05917358]
[22.88128471 414.43688965]
[10.58139133 418.27642822]
[5.54447508 432.40545654]
[0.50755906 446.53448486]
[-4.52935696 460.66351318]
[8.84139061 467.51028442]
[21.20403481 476.04373169]
[32.34703445 486.11788940]
[42.07971573 497.56036377]
[50.23554611 510.17532349]
[56.67496109 523.74694824]
[61.28777695 538.04302979]
[63.99506378 552.81884766]
[64.75049591 567.82165527]
[63.54114151 582.79473877]
[60.38769913 597.48181152]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 199]
[36 198]
[37 197]
[38 196]
[41 192]
[42 191]
[43 190]
[45 188]
[47 186]
[48 182]
[49 181]
[51 179]
[52 178]
[53 177]
[54 175]
[55 174]
[58 171]
[59 170]
[60 169]
[61 168]
[62 150]
[63 149]
[64 148]
[65 147]
[67 145]
[68 144]
[69 142]
[70 141]
[71 139]
[72 137]
[73 136]
[74 135]
[76 133]
[78 130]
[79 129]
[83 125]
[84 124]
[85 123]
[86 122]
[88 120]
[89 119]
[90 118]
[91 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
