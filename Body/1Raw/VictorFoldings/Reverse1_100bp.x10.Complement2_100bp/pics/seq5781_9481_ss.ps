%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[189.51954651 459.35684204]
[180.67762756 447.37060547]
[187.15287781 432.93515015]
[185.81465149 417.99499512]
[184.47640991 403.05480957]
[183.13818359 388.11462402]
[181.79994202 373.17443848]
[180.46171570 358.23425293]
[171.61979675 346.24801636]
[178.09504700 331.81259155]
[176.75682068 316.87240601]
[172.78471375 302.40786743]
[166.30522156 288.87951660]
[159.82572937 275.35116577]
[153.34622192 261.82284546]
[146.86672974 248.29449463]
[140.38723755 234.76614380]
[126.29737854 230.07450867]
[119.53353119 216.44714355]
[124.55007935 201.70021057]
[118.07058716 188.17187500]
[116.18454742 203.05282593]
[108.10147858 215.68864441]
[95.38207245 223.63954163]
[80.48226166 225.37033081]
[66.27896118 220.54681396]
[55.51460648 210.10035706]
[50.26762772 196.04797363]
[51.55112839 181.10299683]
[59.11729050 168.15103149]
[71.50520325 159.69293213]
[86.32295990 157.36180115]
[100.70948029 161.60775757]
[111.88768768 171.61199951]
[107.91558838 157.14747620]
[103.94349670 142.68295288]
[99.97139740 128.21842957]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[81.59197998 61.28914642]
[77.61988068 46.82462311]
[73.64778900 32.36009979]
[57.68642807 33.15573883]
[41.95157242 30.39945412]
[27.22345924 24.23095322]
[14.23174286 14.95906067]
[3.61933231 3.04627275]
[-4.08941364 -10.91432095]
[-8.51460075 -26.22855949]
[-9.43951702 -42.13573074]
[-6.82124519 -57.84635162]
[-0.79264385 -72.58135986]
[8.34439087 -85.61074066]
[20.13404274 -96.28968811]
[33.98931122 -104.09053040]
[29.58831215 -118.43038177]
[25.18731499 -132.77023315]
[20.78631592 -147.11007690]
[9.34056759 -158.03277588]
[13.00316715 -172.47004700]
[8.60216999 -186.80989075]
[6.11281395 -172.01789856]
[-0.07178828 -158.35221863]
[-9.54143429 -146.71925354]
[-21.66803741 -137.89057922]
[-35.64728165 -132.45176697]
[-50.55197906 -130.76354980]
[-65.39354706 -132.93791199]
[-79.18759918 -138.83061218]
[-91.01923370 -148.05084229]
[-100.10369110 -159.98703003]
[-105.83843994 -173.84750366]
[-107.84310913 -188.71293640]
[-105.98474121 -203.59736633]
[-100.38658142 -217.51358032]
[-91.41995239 -229.53852844]
[-79.67957306 -238.87466431]
[-65.94413757 -244.90275574]
[-51.12467575 -247.22297668]
[-36.20409775 -245.68142700]
[-22.17203712 -240.38035583]
[-9.95919228 -231.67137146]
[-0.37559471 -220.13211060]
[5.94465303 -206.52302551]
[6.39125919 -221.51637268]
[6.83786488 -236.50971985]
[6.83786488 -251.50971985]
[-1.30688775 -265.07339478]
[6.04804420 -278.02539062]
[5.60143805 -293.01876831]
[5.15483189 -308.01211548]
[4.70822620 -323.00546265]
[4.26162004 -337.99880981]
[3.81501436 -352.99215698]
[3.36840844 -367.98550415]
[-10.85478210 -373.34921265]
[-21.93927574 -383.75125122]
[-28.19477081 -397.60537720]
[-28.66734505 -412.79898071]
[-23.28493881 -427.01510620]
[-12.86832714 -438.08590698]
[0.99403131 -444.32315063]
[16.18822670 -444.77575684]
[30.39725685 -439.37463379]
[41.45434570 -428.94348145]
[47.67337036 -415.07293701]
[48.10596848 -399.87814331]
[42.68618011 -385.67623901]
[32.24047852 -374.63287354]
[18.36175919 -368.43209839]
[18.80836487 -353.43875122]
[19.25497055 -338.44540405]
[19.70157623 -323.45205688]
[20.14818192 -308.45870972]
[20.59478760 -293.46536255]
[21.04139328 -278.47201538]
[29.15420151 -265.98074341]
[21.83121490 -251.95632935]
[23.77669716 -249.93809509]
[25.03995514 -247.02763367]
[25.27714348 -243.48092651]
[24.24335289 -239.67359924]
[21.83121490 -236.06311035]
[21.38460922 -221.06976318]
[20.93800354 -206.07641602]
[22.94201660 -191.21089172]
[27.34301567 -176.87103271]
[38.47397614 -166.97401428]
[35.12616348 -151.51107788]
[39.52716064 -137.17121887]
[43.92815781 -122.83137512]
[48.32915878 -108.49153137]
[62.33397293 -109.83498383]
[76.33539581 -108.40482330]
[89.78924561 -104.25460815]
[102.17224884 -97.54363251]
[113.00234985 -88.53084564]
[121.85749817 -77.56483459]
[128.39208984 -65.07037354]
[132.35046387 -51.53192520]
[133.57688904 -37.47490311]
[132.02168274 -23.44525146]
[127.74327850 -9.98825359]
[120.90594482 2.37266612]
[111.77355194 13.15629959]
[100.69934845 21.94238853]
[88.11231232 28.38800240]
[92.08441162 42.85252762]
[96.05650330 57.31705093]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[114.43592072 124.24633026]
[118.40802002 138.71084595]
[122.38011932 153.17538452]
[126.35221100 167.63990784]
[131.59892273 181.69236755]
[138.07843018 195.22071838]
[152.71324158 200.55548096]
[159.09165955 214.36746216]
[153.91558838 228.28665161]
[160.39508057 241.81498718]
[166.87457275 255.34333801]
[173.35406494 268.87167358]
[179.83357239 282.40002441]
[186.31306458 295.92837524]
[186.50897217 280.92965698]
[190.24093628 266.40130615]
[197.29786682 253.16502380]
[207.28068542 241.96932983]
[219.62480164 233.44741821]
[233.63208008 228.08125305]
[248.51037598 226.17430115]
[263.41824341 227.83441162]
[277.51254272 232.96771240]
[289.99618530 241.28387451]
[300.16314697 252.31257629]
[307.43847656 265.43011475]
[311.41070557 279.89459229]
[311.85516357 294.88800049]
[308.74673462 309.56240845]
[302.26119995 323.08786011]
[292.76535034 334.69943237]
[280.79623413 343.74047852]
[267.03076172 349.69964600]
[252.24743652 352.23989868]
[237.28230286 351.21762085]
[222.98175049 346.69061279]
[210.15451050 338.91485596]
[199.52604675 328.33016968]
[191.69699097 315.53414917]
[193.03523254 330.47433472]
[201.97286987 343.52920532]
[195.40190125 356.89599609]
[196.74012756 371.83618164]
[198.07836914 386.77636719]
[199.41659546 401.71655273]
[200.75483704 416.65673828]
[202.09306335 431.59692383]
[211.03070068 444.65179443]
[204.45973206 458.01858521]
[217.39042664 466.81240845]
[221.59358215 481.87454224]
[215.08459473 496.09307861]
[200.93681335 502.75448608]
[185.83039856 498.71347046]
[176.89811707 485.87802124]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 204]
[3 202]
[4 201]
[5 200]
[6 199]
[7 198]
[8 197]
[10 195]
[11 194]
[12 169]
[13 168]
[14 167]
[15 166]
[16 165]
[17 164]
[20 161]
[21 160]
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[40 153]
[41 152]
[42 151]
[43 150]
[44 149]
[57 134]
[58 133]
[59 132]
[60 131]
[62 129]
[63 128]
[86 127]
[87 126]
[88 125]
[89 120]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
