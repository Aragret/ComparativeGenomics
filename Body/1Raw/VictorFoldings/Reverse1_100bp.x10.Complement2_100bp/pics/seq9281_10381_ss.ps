%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxUUUUCCUAAUCUGACUUGGCUUAACCAUAUAUCAAAUUUGUUUUGCUUACUAAAGCUGAGUAAUUUAAUACUAUUAGUAUAAAUGGUUUACGGGGAGUAA\
) } def
/len { sequence length } bind def

/coor [
[32.39309692 275.71731567]
[38.34022522 289.51177979]
[42.43588257 303.96447754]
[44.60998535 318.82812500]
[44.82533264 333.84841919]
[43.07823944 348.76828003]
[39.39860153 363.33245850]
[33.84937668 377.29171753]
[26.52552986 390.40722656]
[17.55237389 402.45452881]
[7.08345222 413.22747803]
[-4.70209599 422.54177856]
[-17.60260582 430.23800659]
[-31.39733315 436.18447876]
[-45.85023117 440.27941895]
[-60.71398926 442.45281982]
[-75.73427582 442.66744995]
[-90.65406799 440.91964722]
[-105.21807098 437.23931885]
[-119.17707062 431.68945312]
[-132.29222107 424.36495972]
[-144.33909607 415.39123535]
[-155.11155701 404.92181396]
[-164.42527771 393.13580322]
[-172.12089539 380.23492432]
[-178.06671143 366.43991089]
[-182.16099548 351.98684692]
[-184.33367920 337.12295532]
[-184.54759216 322.10266113]
[-182.79907227 307.18295288]
[-179.11805725 292.61914062]
[-173.56750488 278.66040039]
[-166.24240112 265.54559326]
[-157.26809692 253.49914551]
[-146.79815674 242.72718811]
[-135.01171875 233.41403198]
[-122.11048126 225.71902466]
[-108.31518555 219.77386475]
[-93.86190033 215.68028259]
[-78.99793243 213.50830078]
[-63.97762680 213.29508972]
[-49.05800247 215.04431152]
[-34.49435043 218.72604370]
[-20.53587532 224.27725220]
[-7.42142391 231.60298157]
[1.53927195 219.57359314]
[10.49996758 207.54421997]
[19.46066475 195.51484680]
[28.42136002 183.48545837]
[37.38205719 171.45608521]
[46.34275055 159.42671204]
[55.30344772 147.39732361]
[64.26414490 135.36795044]
[65.66216278 120.53910065]
[80.11109924 114.09403992]
[89.07180023 102.06466675]
[74.11163330 103.15716553]
[62.67102432 93.45601654]
[61.30366135 78.51846313]
[70.79283905 66.90142822]
[85.70272064 65.25967407]
[97.49225616 74.53366089]
[99.40809631 89.40992737]
[109.40627289 78.22795105]
[119.40444183 67.04597473]
[127.25619507 54.26513290]
[132.71156311 40.29233551]
[138.16691589 26.31953812]
[143.62226868 12.34674072]
[148.97344971 -1.66628170]
[154.22016907 -15.71875286]
[159.46688843 -29.77122498]
[164.71360779 -43.82369614]
[169.96032715 -57.87616730]
[175.20704651 -71.92863464]
[180.45376587 -85.98110962]
[166.82614136 -92.26602936]
[153.70629883 -99.55176544]
[141.16761780 -107.79759216]
[129.28021240 -116.95737457]
[118.11055756 -126.97990417]
[107.72112274 -137.80911255]
[98.17001343 -149.38446045]
[89.51064301 -161.64118958]
[81.79143524 -174.51077271]
[75.05556488 -187.92121887]
[69.34070587 -201.79756165]
[64.67880249 -216.06216431]
[61.09593964 -230.63526917]
[58.61215210 -245.43536377]
[57.24132538 -260.37969971]
[56.99113464 -275.38467407]
[57.86296844 -290.36639404]
[59.85195923 -305.24108887]
[62.94698334 -319.92553711]
[67.13072205 -334.33764648]
[72.37979126 -348.39678955]
[78.66483307 -362.02435303]
[85.95069122 -375.14410400]
[94.19661713 -387.68273926]
[103.35651398 -399.57006836]
[113.37913513 -410.73962402]
[124.20844269 -421.12896729]
[135.78387451 -430.67996216]
[148.04067993 -439.33923340]
[160.91032410 -447.05831909]
[174.32084656 -453.79406738]
[188.19721985 -459.50881958]
[202.46186829 -464.17059326]
[217.03500366 -467.75332642]
[231.83511353 -470.23696899]
[246.77946472 -471.60766602]
[261.78445435 -471.85772705]
[276.76617432 -470.98577881]
[291.64083862 -468.99664307]
[306.32525635 -465.90148926]
[320.73730469 -461.71762085]
[334.79641724 -456.46844482]
[348.42391968 -450.18328857]
[361.54364014 -442.89730835]
[374.08218384 -434.65127563]
[385.96942139 -425.49127197]
[397.13888550 -415.46853638]
[407.52813721 -404.63912964]
[417.07904053 -393.06362915]
[425.73818970 -380.80673218]
[433.45718384 -367.93704224]
[440.19281006 -354.52645874]
[445.90744019 -340.65002441]
[450.56909180 -326.38534546]
[454.15167236 -311.81216431]
[456.63522339 -297.01202393]
[458.00576782 -282.06768799]
[458.25570679 -267.06268311]
[457.38360596 -252.08097839]
[455.39434814 -237.20632935]
[452.29907227 -222.52192688]
[448.11508179 -208.10990906]
[442.86575317 -194.05085754]
[436.58047485 -180.42340088]
[429.29440308 -167.30375671]
[421.04824829 -154.76528931]
[411.88812256 -142.87812805]
[401.86532593 -131.70874023]
[391.03582764 -121.31958771]
[379.46023560 -111.76879120]
[367.20327759 -103.10974121]
[354.33349609 -95.39087677]
[340.92285156 -88.65535736]
[327.04638672 -82.94086456]
[312.78164673 -78.27934265]
[298.20843506 -74.69686127]
[283.40829468 -72.21346283]
[268.46389771 -70.84304047]
[253.45892334 -70.59323883]
[238.47721863 -71.46546936]
[223.60258484 -73.45485687]
[208.91822815 -76.55027008]
[194.50624084 -80.73439026]
[189.25952148 -66.68192291]
[184.01280212 -52.62944794]
[178.76608276 -38.57697678]
[173.51936340 -24.52450562]
[168.27264404 -10.47203445]
[163.02592468 3.58043647]
[163.63124084 10.94626236]
[157.59506226 17.80209732]
[152.13970947 31.77489662]
[146.68435669 45.74769211]
[141.22900391 59.72049332]
[152.31779480 49.61907196]
[165.47822571 42.42163849]
[179.96600342 38.53524399]
[194.96179199 38.17967987]
[209.61749268 41.37505722]
[223.10424805 47.94066238]
[234.65934753 57.50518036]
[243.62925720 69.52768707]
[249.50669861 83.32825470]
[251.95928955 98.12638855]
[250.84829712 113.08518982]
[246.23657227 127.35865784]
[238.38493347 140.13957214]
[227.73741150 150.70509338]
[214.89617920 158.45770264]
[200.58749390 162.95893860]
[185.62054443 163.95425415]
[170.84181213 161.38734436]
[157.08709717 155.40339661]
[145.13429260 146.34080505]
[135.65939331 134.71212769]
[129.19824219 121.17500305]
[126.11625671 106.49504089]
[126.58773041 91.50244904]
[130.58641052 77.04415131]
[120.58824921 88.22612762]
[110.59007263 99.40809631]
[101.10117340 111.02536011]
[92.14048004 123.05474091]
[90.10153198 138.74401855]
[76.29351807 144.32864380]
[67.33282471 156.35803223]
[58.37213135 168.38740540]
[49.41143417 180.41677856]
[40.45073700 192.44616699]
[31.49004173 204.47554016]
[22.52934647 216.50491333]
[13.56864929 228.53428650]
[4.60795355 240.56367493]
[15.38141441 251.03207397]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 209]
[46 208]
[47 207]
[48 206]
[49 205]
[50 204]
[51 203]
[52 202]
[53 201]
[55 199]
[56 198]
[63 197]
[64 196]
[65 195]
[66 170]
[67 169]
[68 168]
[69 167]
[70 165]
[71 164]
[72 163]
[73 162]
[74 161]
[75 160]
[76 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
