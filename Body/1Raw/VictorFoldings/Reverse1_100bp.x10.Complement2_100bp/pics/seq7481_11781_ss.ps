%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUCCUAAAUCGGAUAUUAAAUUGAAACUGUUUCAAUACUUUACCAAAAAGAUUAUGGAAAAACUUUUUCAGUACCUCCGGUACCCCAACCGAACUxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[42.15529633 281.05981445]
[40.50781250 295.97671509]
[37.70932770 310.72109985]
[33.77667236 325.20428467]
[28.73349953 339.33917236]
[22.61013794 353.04071045]
[15.44341850 366.22656250]
[7.27643967 378.81738281]
[-1.84167957 390.73745728]
[-11.85610104 401.91510010]
[-22.70659637 412.28308105]
[-34.32790756 421.77905273]
[-46.65014267 430.34588623]
[-59.59919357 437.93209839]
[-73.09718323 444.49203491]
[-87.06292725 449.98623657]
[-101.41243744 454.38165283]
[-116.05941772 457.65188599]
[-130.91577148 459.77725220]
[-145.89215088 460.74496460]
[-160.89846802 460.54919434]
[-175.84451294 459.19113159]
[-190.64036560 456.67892456]
[-205.19705200 453.02774048]
[-219.42701721 448.25946045]
[-233.24467468 442.40280151]
[-246.56694031 435.49298096]
[-259.31369019 427.57159424]
[-271.40826416 418.68621826]
[-282.77789307 408.89031982]
[-293.35421753 398.24279785]
[-303.07363892 386.80770874]
[-311.87771606 374.65383911]
[-319.71347046 361.85424805]
[-326.53375244 348.48593140]
[-332.29760742 334.62930298]
[-336.97033691 320.36767578]
[-340.52383423 305.78683472]
[-342.93673706 290.97445679]
[-344.19451904 276.01965332]
[-344.28964233 261.01235962]
[-343.22152710 246.04280090]
[-340.99655151 231.20103455]
[-337.62817383 216.57632446]
[-333.13659668 202.25660706]
[-327.54885864 188.32803345]
[-320.89855957 174.87434387]
[-313.22567749 161.97645569]
[-304.57638550 149.71195984]
[-295.00268555 138.15460205]
[-284.56216431 127.37387848]
[-273.31759644 117.43465424]
[-261.33663940 108.39668274]
[-248.69132996 100.31433105]
[-235.45771790 93.23620605]
[-221.71540833 87.20487976]
[-207.54702759 82.25661469]
[-193.03779602 78.42118835]
[-178.27497864 75.72164917]
[-163.34735107 74.17424774]
[-148.34471130 73.78828430]
[-133.35726929 74.56607819]
[-118.47516632 76.50295258]
[-103.78791809 79.58725739]
[-89.38384247 83.80045319]
[-75.34957886 89.11718750]
[-61.76951981 95.50548553]
[-48.72534943 102.92694092]
[-36.29551315 111.33689880]
[-24.55476952 120.68479919]
[-13.57372475 130.91441345]
[-3.41842437 141.96421814]
[5.85005665 153.76776123]
[18.32985115 145.44581604]
[30.80964470 137.12387085]
[37.10593414 123.62550354]
[52.88011169 122.40654755]
[59.17640305 108.90817261]
[74.95058441 107.68921661]
[87.43037415 99.36727142]
[99.72121429 90.76870728]
[111.81696320 81.89781189]
[123.91271973 73.02691650]
[136.00846863 64.15602112]
[142.56091309 49.75546646]
[157.39976501 48.46787643]
[159.49993896 43.68914032]
[162.88468933 40.51159286]
[166.72897339 39.15641022]
[170.23954773 39.48527145]
[182.71934509 31.16332817]
[195.19914246 22.84138489]
[207.67893982 14.51944065]
[219.84039307 5.73883772]
[231.66665649 -3.48826075]
[243.49293518 -12.71535873]
[255.31919861 -21.94245720]
[267.14547729 -31.16955566]
[278.97174072 -40.39665222]
[270.76144409 -52.96078873]
[263.63128662 -66.16788483]
[257.63128662 -79.92530060]
[252.80351257 -94.13653564]
[249.18185425 -108.70191193]
[246.79171753 -123.51926422]
[245.64985657 -138.48464966]
[245.76426697 -153.49308777]
[247.13417053 -168.43933105]
[249.74995422 -183.21850586]
[253.59324646 -197.72697449]
[258.63711548 -211.86294556]
[264.84619141 -225.52729797]
[272.17687988 -238.62414551]
[280.57778931 -251.06163025]
[289.98999023 -262.75253296]
[300.34744263 -273.61483765]
[311.57751465 -283.57232666]
[323.60144043 -292.55520630]
[336.33486938 -300.50042725]
[349.68847656 -307.35226440]
[363.56860352 -313.06265259]
[377.87786865 -317.59158325]
[392.51593018 -320.90719604]
[407.38012695 -322.98632812]
[422.36614990 -323.81433105]
[437.36889648 -323.38543701]
[452.28314209 -321.70263672]
[467.00427246 -318.77774048]
[481.42901611 -314.63125610]
[495.45620728 -309.29229736]
[508.98742676 -302.79824829]
[521.92779541 -295.19473267]
[534.18652344 -286.53503418]
[545.67761230 -276.87991333]
[556.32049561 -266.29711914]
[566.04046631 -254.86085510]
[574.76940918 -242.65133667]
[582.44604492 -229.75421143]
[589.01654053 -216.25996399]
[594.43487549 -202.26321411]
[598.66290283 -187.86218262]
[601.67108154 -173.15783691]
[603.43823242 -158.25335693]
[603.95208740 -143.25328064]
[603.20886230 -128.26280212]
[601.21392822 -113.38709259]
[597.98120117 -98.73049164]
[593.53332520 -84.39580536]
[587.90161133 -70.48358154]
[581.12542725 -57.09141159]
[573.25244141 -44.31322479]
[564.33776855 -32.23865509]
[554.44396973 -20.95240021]
[543.64044189 -10.53362656]
[532.00299072 -1.05541480]
[519.61328125 7.41575193]
[506.55810547 14.82045269]
[492.92913818 21.10674858]
[478.82192993 26.23054504]
[464.33544922 30.15590096]
[449.57131958 32.85528183]
[434.63305664 34.30975723]
[419.62551880 34.50911713]
[404.65390015 33.45197296]
[389.82327271 31.14573097]
[375.23764038 27.60657310]
[360.99929810 22.85932350]
[347.20812988 16.93728256]
[333.96090698 9.88198566]
[321.35049438 1.74292505]
[309.46539307 -7.42281008]
[298.38894653 -17.55092812]
[288.19882202 -28.57038498]
[276.37255859 -19.34328651]
[264.54629517 -10.11618710]
[252.72003174 -0.88908923]
[240.89375305 8.33800888]
[229.06748962 17.56510735]
[243.40742493 21.96582222]
[249.04942322 35.86430359]
[241.83441162 49.01511002]
[227.08103943 51.72395706]
[215.66493225 41.99398041]
[216.00086975 26.99923515]
[203.52108765 35.32117844]
[191.04129028 43.64312363]
[178.56149292 51.96506500]
[166.27066040 60.56362915]
[160.58337402 74.32968140]
[144.87936401 76.25177765]
[132.78361511 85.12267303]
[120.68785858 93.99356842]
[108.59210968 102.86446381]
[107.47157288 106.55455017]
[104.72994232 109.73281097]
[100.63227844 111.68631744]
[95.75231934 111.84706879]
[83.27252197 120.16901398]
[76.08359528 134.26261902]
[61.20205688 134.88633728]
[54.01313019 148.97994995]
[39.13158798 149.60366821]
[26.65179443 157.92561340]
[14.17200089 166.24755859]
[21.50580025 179.34120178]
[27.80287933 192.96380615]
[33.02537155 207.03340149]
[37.14186096 221.46540833]
[40.12759399 236.17301941]
[41.96461487 251.06777954]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[73 204]
[74 203]
[75 202]
[77 200]
[79 198]
[80 197]
[81 193]
[82 192]
[83 191]
[84 190]
[86 188]
[90 187]
[91 186]
[92 185]
[93 184]
[94 178]
[95 177]
[96 176]
[97 175]
[98 174]
[99 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
