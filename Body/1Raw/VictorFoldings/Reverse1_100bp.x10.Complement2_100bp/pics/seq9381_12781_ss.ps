%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[-6.76596928 607.53729248]
[-4.93956423 622.46490479]
[-5.73325777 637.48297119]
[-9.12293148 652.13494873]
[-15.00557709 665.97570801]
[-23.20242691 678.58453369]
[-33.46438980 689.57830811]
[-45.47961044 698.62292480]
[-58.88296890 705.44360352]
[-73.26714325 709.83294678]
[-88.19502258 711.65765381]
[-103.21295929 710.86230469]
[-117.86457825 707.47094727]
[-131.70463562 701.58673096]
[-144.31254578 693.38842773]
[-155.30516052 683.12524414]
[-164.34843445 671.10900879]
[-171.16755676 657.70483398]
[-175.55529785 643.32019043]
[-177.37832642 628.39208984]
[-176.58122253 613.37426758]
[-173.18823242 598.72302246]
[-167.30244446 584.88360596]
[-159.10273743 572.27667236]
[-148.83827209 561.28521729]
[-136.82099915 552.24328613]
[-123.41609955 545.42565918]
[-109.03092957 541.03955078]
[-94.10263824 539.21826172]
[-79.08487701 540.01702881]
[-64.43402863 543.41168213]
[-58.56506729 529.60754395]
[-52.69610596 515.80334473]
[-46.93007278 501.95587158]
[-41.26728439 488.06585693]
[-35.60449982 474.17581177]
[-29.94171333 460.28579712]
[-24.27892494 446.39575195]
[-36.00702286 437.10980225]
[-44.65202713 424.88296509]
[-49.50635529 410.70126343]
[-50.16850662 395.71118164]
[-46.57628250 381.12722778]
[-39.01250458 368.13333130]
[-28.08277702 357.78686523]
[-14.66699028 350.93252563]
[0.15149264 348.13345337]
[15.17333317 349.62487793]
[20.83611870 335.73483276]
[26.49890518 321.84481812]
[24.13894081 307.13836670]
[36.51352310 297.28036499]
[42.17631149 283.39031982]
[47.83909607 269.50030518]
[53.50188446 255.61027527]
[59.16466904 241.72024536]
[63.77867889 227.44750977]
[67.31835175 212.87113953]
[70.85802460 198.29475403]
[74.28908539 183.69242859]
[77.61134338 169.06497192]
[80.82461548 154.41319275]
[83.92872620 139.73788452]
[87.03283691 125.06258392]
[90.13694763 110.38728333]
[85.98612213 97.03578949]
[95.18775177 86.50860596]
[98.29186249 71.83330536]
[101.39597321 57.15800476]
[104.50007629 42.48270035]
[99.78607941 27.38009262]
[109.98968506 16.52948380]
[98.44217682 26.10314941]
[83.56510925 28.01961517]
[69.96829987 21.68504143]
[61.86487579 9.06226635]
[61.76576233 -5.93740606]
[69.70167542 -18.66616440]
[83.21358490 -25.17986488]
[98.11467743 -23.46016502]
[109.78768921 -14.03993416]
[114.61562347 0.16212475]
[119.65254211 -13.96690464]
[114.83954620 -25.93343735]
[119.32568359 -37.59784317]
[130.19692993 -42.90279388]
[135.44364929 -56.95526505]
[140.69036865 -71.00773621]
[145.93708801 -85.06020355]
[143.51557922 -100.69499969]
[155.21588135 -109.91194916]
[151.74778748 -127.99658203]
[165.70935059 -138.62867737]
[170.74627686 -152.75770569]
[175.67787170 -166.92384338]
[180.50386047 -181.12629700]
[185.32986450 -195.32875061]
[190.15585327 -209.53120422]
[176.90934753 -216.64315796]
[165.01419067 -225.83853149]
[154.79487610 -236.86647034]
[146.53021240 -249.42614746]
[140.44566345 -263.17489624]
[136.70719910 -277.73764038]
[135.41683960 -292.71713257]
[136.60977173 -307.70468140]
[140.25346375 -322.29144287]
[146.24848938 -336.07946777]
[154.43130493 -348.69259644]
[164.57868958 -359.78674316]
[176.41381836 -369.05929565]
[189.61381531 -376.25720215]
[203.81855774 -381.18417358]
[218.64054871 -383.70578003]
[233.67543030 -383.75320435]
[248.51303101 -381.32519531]
[262.74859619 -376.48794556]
[275.99371338 -369.37344360]
[287.88711548 -360.17578125]
[298.10430908 -349.14587402]
[306.36654663 -336.58459473]
[312.44845581 -322.83468628]
[316.18408203 -308.27120972]
[317.47155762 -293.29147339]
[316.27575684 -278.30416870]
[312.62927246 -263.71810913]
[306.63159180 -249.93122864]
[298.44631958 -237.31967163]
[288.29681396 -226.22746277]
[276.45989990 -216.95722961]
[263.25851440 -209.76184082]
[249.05282593 -204.83760071]
[234.23034668 -202.31886292]
[219.19544983 -202.27432251]
[204.35832214 -204.70521545]
[199.53231812 -190.50276184]
[194.70631409 -176.30030823]
[189.88032532 -162.09783936]
[190.70466614 -154.75331116]
[184.87530518 -147.72079468]
[179.83839417 -133.59176636]
[184.73800659 -122.53191376]
[180.65730286 -110.71955872]
[169.26835632 -104.66522980]
[172.06513977 -90.03556061]
[159.98956299 -79.81348419]
[154.74284363 -65.76101685]
[149.49612427 -51.70854568]
[144.24940491 -37.65607452]
[148.08207703 -20.53072548]
[133.78157043 -8.92998886]
[128.74465942 5.19904089]
[124.66498566 19.63359451]
[129.60101318 33.68652725]
[119.17538452 45.58681107]
[116.07127380 60.26211548]
[112.96716309 74.93741608]
[109.86305237 89.61271667]
[114.01387787 102.96421051]
[104.81224823 113.49139404]
[101.70813751 128.16668701]
[98.60402679 142.84199524]
[95.49992371 157.51730347]
[96.78569794 166.56077576]
[92.23880768 172.38723755]
[88.91654205 187.01469421]
[90.06753540 196.07632446]
[85.43440247 201.83442688]
[81.89472961 216.41081238]
[78.35505676 230.98718262]
[89.81253815 221.30596924]
[104.55780792 218.55331421]
[118.73647308 223.44874573]
[128.64227295 234.71263123]
[131.68585205 249.40060425]
[127.07163239 263.67327881]
[116.00574493 273.79977417]
[101.38080597 277.13308716]
[87.01972198 272.80191040]
[76.67645264 261.93835449]
[73.05469513 247.38302612]
[67.39190674 261.27304077]
[61.72912216 275.16308594]
[56.06633759 289.05310059]
[50.40354919 302.94314575]
[52.35847473 318.64309692]
[40.38893127 327.50759888]
[34.72614670 341.39761353]
[29.06336021 355.28765869]
[40.84609604 364.72412109]
[49.48367691 377.08593750]
[54.28309250 391.36636353]
[54.86349487 406.40536499]
[51.18638611 420.98379517]
[43.55805206 433.92230225]
[32.60408401 444.17663574]
[19.21805000 450.92199707]
[4.48863983 453.61935425]
[-10.38889885 452.05856323]
[-16.05168533 465.94857788]
[-21.71447182 479.83859253]
[-27.37725830 493.72863770]
[-33.04004669 507.61865234]
[-33.38194275 516.74670410]
[-38.89192963 521.67230225]
[-44.76089096 535.47650146]
[-50.62985229 549.28063965]
[-38.02008438 557.47607422]
[-27.02513695 567.73681641]
[-17.97913361 579.75097656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 207]
[32 206]
[33 205]
[34 203]
[35 202]
[36 201]
[37 200]
[38 199]
[48 189]
[49 188]
[50 187]
[52 185]
[53 184]
[54 183]
[55 182]
[56 181]
[57 170]
[58 169]
[59 168]
[60 166]
[61 165]
[62 163]
[63 162]
[64 161]
[65 160]
[67 158]
[68 157]
[69 156]
[70 155]
[72 153]
[82 152]
[83 151]
[86 149]
[87 148]
[88 147]
[89 146]
[91 144]
[93 141]
[94 140]
[95 138]
[96 137]
[97 136]
[98 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
