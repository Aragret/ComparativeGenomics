%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[91.35020447 531.59057617]
[79.33013153 522.56970215]
[68.78887177 511.85806274]
[59.96191788 499.69491577]
[53.04646683 486.35195923]
[48.19702148 472.12731934]
[45.52190781 457.33877563]
[45.08089828 442.31668091]
[46.88384247 427.39666748]
[50.89045715 412.91201782]
[57.01124191 399.18637085]
[65.10945129 386.52630615]
[75.00416565 375.21472168]
[86.47433472 365.50427246]
[99.26371765 357.61190796]
[113.08658600 351.71395874]
[127.63414001 347.94213867]
[126.07361603 333.02355957]
[124.51309204 318.10494995]
[122.95256805 303.18634033]
[121.39204407 288.26773071]
[119.83152008 273.34912109]
[110.81212616 261.49588013]
[117.07174683 246.96563721]
[115.51122284 232.04702759]
[113.95069885 217.12841797]
[111.83607483 202.27822876]
[109.17028046 187.51701355]
[106.50448608 172.75578308]
[103.72887421 158.01483154]
[100.84359741 143.29493713]
[97.95832825 128.57504272]
[83.97364044 123.74568176]
[74.26344299 112.58297729]
[71.41758728 98.06418610]
[76.19511414 84.06170654]
[87.32178497 74.31022644]
[84.43650818 59.59033585]
[81.55123901 44.87044525]
[76.77410126 59.08940887]
[67.23921967 70.66896057]
[54.20106888 78.08561707]
[39.37504959 80.36357880]
[24.71177292 77.20314026]
[12.14044762 69.02012634]
[3.31504726 56.89113998]
[-0.60329539 42.41196060]
[0.90094525 27.48757744]
[7.62986040 14.08154488]
[18.69814682 3.95765972]
[32.64957809 -1.55210793]
[47.64860535 -1.72285306]
[61.72185135 3.46788883]
[73.01773071 13.33718681]
[80.05080414 26.58883286]
[80.49740601 11.59548378]
[80.94401550 -3.39786649]
[81.39061737 -18.39121628]
[80.83241272 -33.38082504]
[79.27188873 -48.29943085]
[77.71136475 -63.21803665]
[76.15084076 -78.13664246]
[74.59031677 -93.05524445]
[73.02979279 -107.97384644]
[67.44310760 -94.05303955]
[57.87642288 -82.49974823]
[45.24157333 -74.41516113]
[30.74282646 -70.56985474]
[15.76211739 -71.33033752]
[1.72730803 -76.62412262]
[-10.02389145 -85.94664001]
[-18.37143135 -98.40932465]
[-22.51967812 -112.82431793]
[-22.07324791 -127.81767273]
[-17.07468987 -141.96031189]
[-8.00043678 -153.90426636]
[4.28461361 -162.51109314]
[18.60952759 -166.96046448]
[33.60894394 -166.82827759]
[47.85321808 -162.12713623]
[59.98467255 -153.30513000]
[68.84701538 -141.20310974]
[73.59573364 -126.97344971]
[76.04145813 -141.77272034]
[78.48719025 -156.57199097]
[80.93291473 -171.37126160]
[83.37864685 -186.17053223]
[85.82437134 -200.96980286]
[88.27009583 -215.76907349]
[73.93102264 -220.25650024]
[60.35605240 -226.69593811]
[47.80943298 -234.96205139]
[36.53538895 -244.89392090]
[26.75337029 -256.29821777]
[18.65378571 -268.95297241]
[12.39429951 -282.61184692]
[8.09675217 -297.00897217]
[5.84479713 -311.86410522]
[5.68226957 -326.88809204]
[7.61233282 -341.78845215]
[11.59741783 -356.27517700]
[17.55995369 -370.06628418]
[25.38387871 -382.89328003]
[34.91689682 -394.50653076]
[45.97344589 -404.67999268]
[58.33830261 -413.21557617]
[71.77079010 -419.94717407]
[86.00942993 -424.74374390]
[100.77707672 -427.51193237]
[115.78626251 -428.19784546]
[130.74482727 -426.78814697]
[145.36161804 -423.31024170]
[159.35208130 -417.83184814]
[172.44392395 -410.45959473]
[184.38229370 -401.33700562]
[194.93479919 -390.64163208]
[203.89602661 -378.58169556]
[211.09158325 -365.39190674]
[216.38136292 -351.32904053]
[219.66241455 -336.66680908]
[220.87086487 -321.69064331]
[219.98320007 -306.69204712]
[217.01670837 -291.96295166]
[212.02911377 -277.79010010]
[205.11750793 -264.44934082]
[196.41642761 -252.20036316]
[186.09523010 -241.28160095]
[174.35484314 -231.90560913]
[161.42379761 -224.25485229]
[147.55377197 -218.47830200]
[133.01477051 -214.68835449]
[118.08979797 -212.95881653]
[103.06936646 -213.32334900]
[100.62364197 -198.52407837]
[98.17791748 -183.72480774]
[95.73218536 -168.92553711]
[93.28646088 -154.12626648]
[90.84072876 -139.32699585]
[88.39500427 -124.52772522]
[87.94840240 -109.53437042]
[89.50891876 -94.61576843]
[91.06944275 -79.69716644]
[92.62996674 -64.77855682]
[94.19049072 -49.85995483]
[95.75101471 -34.94134903]
[103.79378510 -47.60285950]
[117.36003876 -54.00260162]
[132.24612427 -52.15754318]
[143.83944702 -42.63939667]
[148.54765320 -28.39746284]
[144.91189575 -13.84475994]
[134.05871582 -3.49060082]
[119.35111237 -0.54333544]
[105.34638977 -5.91620541]
[96.38397217 -17.94461060]
[95.93736267 -2.95126057]
[95.49076080 12.04208946]
[95.04415131 27.03543854]
[96.27112579 41.98517227]
[99.15640259 56.70506287]
[102.04167175 71.42495728]
[116.02635956 76.25431824]
[125.73655701 87.41702271]
[128.58241272 101.93581390]
[123.80488586 115.93829346]
[112.67821503 125.68977356]
[115.56349182 140.40966797]
[118.44876099 155.12954712]
[123.17042542 162.94900513]
[121.26570129 170.08999634]
[123.93149567 184.85121155]
[126.59729004 199.61242676]
[137.16412354 188.96621704]
[152.09175110 190.43795776]
[160.37606812 202.94276428]
[155.91020203 217.26254272]
[141.98620605 222.84127808]
[128.86930847 215.56790161]
[130.42982483 230.48649597]
[131.99034119 245.40510559]
[141.12136841 258.32543945]
[134.75012207 271.78860474]
[136.31065369 286.70721436]
[137.87117004 301.62582397]
[139.43170166 316.54443359]
[140.99221802 331.46301270]
[142.55274963 346.38162231]
[157.56593323 347.06130981]
[172.31010437 349.97106934]
[186.45588684 355.04595947]
[199.68727112 362.17254639]
[211.70861816 371.19168091]
[222.25140381 381.90182495]
[231.08009338 394.06372070]
[237.99745178 407.40570068]
[242.84892273 421.62963867]
[245.52613831 436.41781616]
[245.96928406 451.43984985]
[244.16847229 466.36013794]
[240.16390991 480.84533691]
[234.04508972 494.57186890]
[225.94868469 507.23306274]
[216.05557251 518.54608154]
[204.58679199 528.25817871]
[191.79853821 536.15234375]
[177.97650146 542.05224609]
[163.42948914 545.82611084]
[148.48248291 547.38964844]
[133.46939087 546.70782471]
[118.72562408 543.79595947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 187]
[18 186]
[19 185]
[20 184]
[21 183]
[22 182]
[24 180]
[25 179]
[26 178]
[27 172]
[28 171]
[29 170]
[30 168]
[31 167]
[32 166]
[37 161]
[38 160]
[39 159]
[55 158]
[56 157]
[57 156]
[58 155]
[59 145]
[60 144]
[61 143]
[62 142]
[63 141]
[64 140]
[83 139]
[84 138]
[85 137]
[86 136]
[87 135]
[88 134]
[89 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
