%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxUGGUGUCCUGAUAAGGAUCGGUACGUGAUGAGUGGUCUGCGGAGUUGGCGGAAAAGUAGUUAGCGGGUGUAGUGAGCUCUGCAUUUAAUACCGACUUAGU\
) } def
/len { sequence length } bind def

/coor [
[53.12488556 605.31799316]
[40.81015778 596.35882568]
[33.20976257 583.16204834]
[31.64050674 568.01422119]
[36.37427902 553.53973389]
[46.59091949 542.24633789]
[60.52033615 536.09075928]
[60.52033615 521.09075928]
[60.52033615 506.09075928]
[60.52033615 491.09075928]
[57.37683487 484.40194702]
[60.63366699 475.86785889]
[60.85699463 460.86953735]
[61.08032227 445.87118530]
[61.30364990 430.87286377]
[61.52697754 415.87451172]
[61.75030518 400.87615967]
[50.26066971 410.51922607]
[35.30623627 409.35092163]
[25.45358658 398.04049683]
[26.34675980 383.06710815]
[37.47410965 373.00817871]
[52.46138763 373.62591553]
[62.72285461 384.56558228]
[56.35161972 371.10241699]
[65.48263550 358.18206787]
[67.04315948 343.26345825]
[68.49257660 328.33364868]
[69.83081055 313.39346313]
[71.16904449 298.45327759]
[72.50727844 283.51312256]
[70.18674469 279.33886719]
[70.46380615 273.66259766]
[74.11426544 268.15026855]
[75.89673615 253.25654602]
[68.66922760 243.55656433]
[70.03233337 231.13377380]
[79.79748535 222.70735168]
[81.80149841 207.84182739]
[83.80551147 192.97628784]
[85.47705078 178.06971741]
[86.81528473 163.12953186]
[88.15351868 148.18934631]
[81.58254242 134.82254028]
[90.52017975 121.76768494]
[91.85841370 106.82749939]
[92.19338989 91.83124542]
[91.52360535 76.84620667]
[90.85382080 61.86116409]
[83.57999420 74.97953033]
[71.64850616 84.07015991]
[57.07001877 87.60112762]
[42.30126572 84.97740173]
[29.83103943 76.64112091]
[21.76079559 63.99710846]
[19.45050812 49.17609024]
[23.28950310 34.67567062]
[32.63084412 22.93942833]
[45.90034485 15.94512463]
[60.86186981 14.87142181]
[74.99413300 19.89925766]
[85.91560364 30.18135452]
[91.78614044 43.98662567]
[94.01125336 29.15258217]
[96.23637390 14.31853771]
[98.46148682 -0.51550609]
[100.68660736 -15.34955025]
[102.80123138 -30.19974709]
[104.80524445 -45.06527710]
[97.62007141 -55.77676773]
[99.59525299 -68.11704254]
[109.13336945 -75.55686188]
[111.35848999 -90.39090729]
[113.47311401 -105.24110413]
[115.47712708 -120.10663605]
[117.48114014 -134.97216797]
[119.48515320 -149.83769226]
[121.48916626 -164.70321655]
[111.94745636 -171.05696106]
[105.49497986 -180.47004700]
[103.03233337 -191.56091309]
[104.87791443 -202.71897888]
[110.72731781 -212.33850098]
[119.70277405 -219.04965210]
[130.48464966 -221.91351318]
[133.15045166 -236.67472839]
[135.81623840 -251.43594360]
[138.48204041 -266.19717407]
[141.03787231 -280.97781372]
[143.37335205 -295.79489136]
[145.59848022 -310.62893677]
[147.82359314 -325.46298218]
[149.93821716 -340.31317139]
[151.94223022 -355.17871094]
[153.94624329 -370.04421997]
[155.95025635 -384.90975952]
[157.62179565 -399.81631470]
[158.96003723 -414.75650024]
[160.29826355 -429.69668579]
[161.63650513 -444.63687134]
[147.90112305 -451.04898071]
[137.18934631 -461.77435303]
[130.79467773 -475.51788330]
[129.48930359 -490.61993408]
[133.43086243 -505.25686646]
[142.14338684 -517.66119385]
[154.57478333 -526.33508301]
[169.22392273 -530.23107910]
[184.32182312 -528.87872314]
[198.04536438 -522.44128418]
[208.73736572 -511.69619751]
[215.10668945 -497.94091797]
[216.38423157 -482.83648682]
[212.41569519 -468.20684814]
[203.68034363 -455.81857300]
[191.23297119 -447.16763306]
[176.57669067 -443.29864502]
[175.23844910 -428.35845947]
[173.90022278 -413.41827393]
[172.56198120 -398.47808838]
[174.53009033 -395.55255127]
[175.17897034 -391.52835083]
[174.00767517 -387.03598022]
[170.81578064 -382.90573120]
[168.81176758 -368.04022217]
[166.80775452 -353.17468262]
[164.80374146 -338.30914307]
[167.02543640 -331.26034546]
[162.65763855 -323.23785400]
[160.43252563 -308.40380859]
[158.20739746 -293.56976318]
[160.32389832 -286.48864746]
[155.83714294 -278.53207397]
[157.84797668 -271.42025757]
[153.24325562 -263.53137207]
[150.57746887 -248.77015686]
[147.91166687 -234.00892639]
[145.24586487 -219.24771118]
[158.93244934 -206.52095032]
[162.20925903 -187.96856689]
[153.57394409 -171.05581665]
[136.35469055 -162.69920349]
[134.35067749 -147.83367920]
[132.34666443 -132.96815491]
[130.34265137 -118.10262299]
[128.33863831 -103.23709106]
[130.56033325 -96.18827057]
[126.19253540 -88.16579437]
[123.96741486 -73.33174896]
[131.26106262 -57.37023926]
[119.67076874 -43.06126022]
[117.66675568 -28.19573402]
[119.88844299 -21.14691162]
[115.52065277 -13.12443256]
[113.29553223 1.70961106]
[111.07041168 16.54365540]
[108.84529877 31.37769890]
[106.62017822 46.21174240]
[105.83885956 61.19137955]
[106.50864410 76.17642212]
[107.17842865 91.16146088]
[115.96056366 79.00110626]
[129.88368225 73.42018890]
[144.63357544 76.14801025]
[155.63980103 86.33933258]
[159.49197388 100.83625031]
[154.99645996 115.14675140]
[143.54623413 124.83656311]
[128.68927002 126.90319061]
[115.02918243 120.70626831]
[106.79859924 108.16573334]
[105.46036530 123.10591888]
[111.93562317 137.54135132]
[103.09370422 149.52758789]
[101.75547028 164.46777344]
[100.41723633 179.40795898]
[102.61505890 184.14257812]
[102.76227570 188.78279114]
[101.23822784 192.56330872]
[98.67103577 194.98030090]
[96.66702271 209.84584045]
[94.66300964 224.71136475]
[102.05043030 241.57872009]
[90.79045105 255.03901672]
[89.00798798 269.93273926]
[87.44746399 284.85134888]
[86.10923004 299.79153442]
[84.77099609 314.73171997]
[83.43276215 329.67190552]
[85.78407288 338.49850464]
[81.96176147 344.82400513]
[80.40123749 359.74258423]
[86.66085052 374.27282715]
[77.64145660 386.12609863]
[76.74864197 401.09948730]
[76.52531433 416.09783936]
[76.30198669 431.09619141]
[76.07865906 446.09451294]
[75.85533142 461.09286499]
[75.63200378 476.09118652]
[75.52033997 491.09075928]
[75.52033997 506.09075928]
[75.52033997 521.09075928]
[75.52033997 536.09075928]
[89.44975281 542.24633789]
[99.66639709 553.53973389]
[104.40016937 568.01422119]
[102.83090973 583.16204834]
[95.23051453 596.35882568]
[82.91578674 605.31799316]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 204]
[8 203]
[9 202]
[10 201]
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[17 195]
[24 194]
[26 192]
[27 191]
[28 189]
[29 188]
[30 187]
[31 186]
[34 185]
[35 184]
[38 182]
[39 181]
[40 180]
[41 176]
[42 175]
[43 174]
[45 172]
[46 171]
[47 161]
[48 160]
[49 159]
[63 158]
[64 157]
[65 156]
[66 155]
[67 154]
[68 152]
[69 151]
[72 149]
[73 148]
[74 146]
[75 145]
[76 144]
[77 143]
[78 142]
[85 138]
[86 137]
[87 136]
[88 135]
[89 133]
[90 131]
[91 130]
[92 129]
[93 127]
[94 126]
[95 125]
[96 124]
[97 120]
[98 119]
[99 118]
[100 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
