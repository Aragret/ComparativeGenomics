%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUCAGUGAGUAUCCGGUCUGAAUCCCGAUCCUACUACUAAUUAUUCUCCCUACUGUAUUGAUAAUCACCGUCCAAUCAACAAACAUCCCGAGUACCAUxxxxxxxxxxGUAGGAGCGGAAUCGUACUAAAUAGGAUGUGAGGUUGAGUACUCUGGGUGUUGUUUAUCGGGAAGAUUUGCGAUUAGGUUCGGAGUGGGGUGAUGAUCCG\
) } def
/len { sequence length } bind def

/coor [
[105.72734070 543.84716797]
[117.21047974 533.23248291]
[116.31766510 518.25903320]
[115.42485046 503.28564453]
[114.53203583 488.31225586]
[113.63922119 473.33883667]
[105.15809631 461.09466553]
[112.06027985 446.85842896]
[101.31967926 457.32931519]
[86.31977844 457.27651978]
[75.65318298 446.73022461]
[75.43021393 431.73190308]
[85.77859497 420.87319946]
[100.77030182 420.37454224]
[111.81700134 430.52066040]
[112.26361084 415.52731323]
[112.71022034 400.53396606]
[105.35528564 387.58197021]
[113.50003815 374.01828003]
[113.94664001 359.02493286]
[114.39324951 344.03158569]
[114.83985901 329.03823853]
[115.28646088 314.04489136]
[115.73307037 299.05154419]
[114.50608826 284.10180664]
[111.62081909 269.38189697]
[108.73554993 254.66201782]
[105.85027313 239.94212341]
[102.96500397 225.22224426]
[100.07972717 210.50234985]
[97.19445801 195.78245544]
[85.60021210 190.16081238]
[79.26625061 178.71688843]
[80.70105743 165.52023315]
[89.60356140 155.41281128]
[86.93776703 140.65159607]
[82.80165863 155.07006836]
[75.79615784 168.33367920]
[66.21916199 179.87841797]
[54.47787476 189.21340942]
[41.07154465 195.94174194]
[26.57021713 199.77729797]
[11.59049511 200.55699158]
[-3.23067594 198.24768066]
[-17.26309204 192.94757080]
[-29.91008759 184.88198853]
[-40.63390732 174.39392090]
[-48.97856522 161.92929077]
[-54.58924866 148.01814270]
[-57.22738266 133.25195312]
[-56.78079224 118.25860596]
[-53.26847076 103.67561340]
[-46.83976364 90.12306213]
[-37.76802063 78.17720795]
[-26.43897629 68.34599304]
[-13.33434963 61.04744720]
[0.98864555 56.59191132]
[15.92098808 55.16883469]
[30.82774734 56.83872604]
[45.07508087 61.53058624]
[58.05718231 69.04490662]
[69.22204590 79.06217957]
[78.09494019 91.15646362]
[84.29858398 104.81350708]
[87.56921387 119.45277405]
[91.10888672 104.87640381]
[89.79956818 96.92289734]
[94.81128693 90.11015320]
[98.56758881 75.58809662]
[102.32389069 61.06603241]
[106.08019257 46.54397583]
[109.40245056 31.91651344]
[112.28772736 17.19662285]
[110.50984192 10.82868099]
[111.99224854 5.34238005]
[115.48426819 2.08433366]
[110.99564362 -13.08678532]
[121.35967255 -23.78427505]
[124.68193054 -38.41173553]
[128.00418091 -53.03919601]
[131.32644653 -67.66665649]
[134.64871216 -82.29411316]
[125.05641174 -96.92310333]
[128.93571472 -113.63435364]
[143.41032410 -122.19732666]
[146.51443481 -136.87261963]
[149.61854553 -151.54792786]
[152.72264099 -166.22323608]
[155.82675171 -180.89852905]
[158.93086243 -195.57383728]
[161.04548645 -210.42402649]
[162.16114807 -225.38249207]
[163.27679443 -240.34094238]
[156.58732605 -254.67835999]
[165.24981689 -266.79492188]
[162.76734924 -275.58554077]
[166.49505615 -281.96722412]
[167.83328247 -296.90740967]
[153.77207947 -302.42639160]
[141.83615112 -311.68438721]
[132.99313354 -323.93090820]
[127.95984650 -338.17318726]
[127.14434814 -353.25668335]
[130.61273193 -367.95861816]
[138.08383179 -381.08718872]
[148.95201111 -391.57812500]
[162.33622742 -398.58093262]
[177.15147400 -401.52798462]
[192.19676208 -400.18032837]
[206.25242615 -394.64724731]
[218.17903137 -385.37725830]
[227.00975037 -373.12185669]
[232.02871704 -358.87451172]
[232.82907104 -343.79022217]
[229.34591675 -329.09176636]
[221.86163330 -315.97070312]
[210.98291016 -305.49072266]
[197.59167480 -298.50134277]
[182.77346802 -295.56918335]
[181.43524170 -280.62899780]
[180.20826721 -265.67926025]
[186.97752380 -252.41177368]
[178.23524475 -239.22529602]
[177.11959839 -224.26684570]
[176.00395203 -209.30838013]
[186.16888428 -220.33898926]
[200.65653992 -224.22586060]
[214.97775269 -219.76461792]
[224.69496155 -208.33763123]
[226.79714966 -193.48567200]
[220.63294983 -179.81077576]
[208.11241150 -171.55026245]
[193.11515808 -171.26374817]
[180.28823853 -179.04000854]
[173.60617065 -192.46972656]
[170.50205994 -177.79441833]
[167.39794922 -163.11912537]
[164.29383850 -148.44381714]
[161.18972778 -133.76852417]
[158.08561707 -119.09321594]
[166.55599976 -109.38331604]
[167.90742493 -96.37348938]
[161.42361450 -84.79027557]
[149.27616882 -78.97185516]
[145.95390320 -64.34439850]
[142.63165283 -49.71693802]
[139.30938721 -35.08947754]
[135.98712158 -20.46201515]
[140.71337891 -6.33715010]
[130.11172485 5.40659332]
[127.00761414 20.08189583]
[124.12234497 34.80178833]
[125.57250214 37.20078278]
[126.15976715 40.31875229]
[125.60552216 43.82990646]
[123.75414276 47.31371689]
[120.60224915 50.30027390]
[116.84594727 64.82233429]
[113.08965302 79.34439087]
[109.33335114 93.86645508]
[105.68526459 108.41607666]
[102.14559174 122.99244690]
[101.69898224 137.98579407]
[104.36477661 152.74700928]
[118.91615295 162.45663452]
[121.88463593 179.35346985]
[111.91434479 192.89718628]
[114.79962158 207.61708069]
[117.68489075 222.33695984]
[120.57016754 237.05685425]
[123.45543671 251.77674866]
[126.34071350 266.49664307]
[129.22598267 281.21652222]
[134.00312805 266.99755859]
[143.53800964 255.41801453]
[156.57615662 248.00135803]
[171.40217590 245.72340393]
[186.06544495 248.88383484]
[198.63676453 257.06686401]
[207.46217346 269.19583130]
[211.38050842 283.67501831]
[209.87628174 298.59939575]
[203.14735413 312.00543213]
[192.07907104 322.12930298]
[178.12763977 327.63909912]
[163.12861633 327.80981445]
[149.05537415 322.61907959]
[137.75949097 312.74978638]
[130.72640991 299.49813843]
[130.27981567 314.49148560]
[129.83320618 329.48483276]
[129.38659668 344.47817993]
[128.93998718 359.47155762]
[128.49339294 374.46490479]
[135.81637573 388.48931885]
[127.70356750 400.98059082]
[127.25695801 415.97393799]
[126.81035614 430.96728516]
[127.03368378 445.96560669]
[135.57865906 459.28079224]
[128.61262512 472.44601440]
[129.50544739 487.41943359]
[130.39825439 502.39285278]
[131.29107666 517.36627197]
[132.18388367 532.33966064]
[144.84701538 541.51458740]
[148.59985352 556.69512939]
[141.67042542 570.71362305]
[127.33058929 576.95080566]
[112.35118103 572.46179199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 205]
[3 204]
[4 203]
[5 202]
[6 201]
[8 199]
[15 198]
[16 197]
[17 196]
[19 194]
[20 193]
[21 192]
[22 191]
[23 190]
[24 189]
[25 173]
[26 172]
[27 171]
[28 170]
[29 169]
[30 168]
[31 167]
[35 164]
[36 163]
[65 162]
[66 161]
[68 160]
[69 159]
[70 158]
[71 157]
[72 152]
[73 151]
[76 150]
[78 148]
[79 147]
[80 146]
[81 145]
[82 144]
[85 140]
[86 139]
[87 138]
[88 137]
[89 136]
[90 135]
[91 125]
[92 124]
[93 123]
[95 121]
[97 120]
[98 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
