%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAAUAAGGAAGAUCCGUAUCAUCCCUCCUAUACUCCACACUCGCUAUAUGAUCAUAAGGAUCUUCACUCUACCAUUUACGAUCAUAUUAUAAAUACAUxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[68.93541718 686.44537354]
[55.66687012 679.41625977]
[43.25213242 670.97009277]
[31.84190750 661.20947266]
[21.57470703 650.25280762]
[12.57516575 638.23321533]
[4.95252848 625.29644775]
[-1.20067167 611.59973145]
[-5.80974150 597.30914307]
[-8.81873035 582.59832764]
[-10.19111252 567.64575195]
[-9.91022778 552.63293457]
[-7.97948694 537.74212646]
[-4.42232656 523.15411377]
[0.71807277 509.04598999]
[7.37931061 495.58898926]
[15.48052597 482.94647217]
[24.92337799 471.27188110]
[35.59323883 460.70697021]
[47.36058426 451.38000488]
[60.08257294 443.40414429]
[73.60477448 436.87625122]
[87.76303101 431.87554932]
[102.38548279 428.46276855]
[100.60301208 413.56906128]
[98.82054901 398.67532349]
[97.03808594 383.78161621]
[87.83618927 395.62750244]
[73.19974518 398.90994263]
[59.82033157 392.12826538]
[53.81483841 378.38293457]
[57.92889786 363.95816040]
[70.28161621 355.44873047]
[85.22549438 356.74505615]
[95.92919922 367.25613403]
[95.70587158 352.25781250]
[85.90734100 337.69909668]
[95.00946045 321.69183350]
[94.56285858 306.69848633]
[94.11624908 291.70513916]
[93.66964722 276.71179199]
[93.22303772 261.71844482]
[92.77643585 246.72508240]
[92.32982635 231.73173523]
[91.88322449 216.73838806]
[89.08310699 212.86947632]
[88.68368530 207.20048523]
[91.65324402 201.29344177]
[91.65324402 186.29344177]
[91.65324402 171.29344177]
[83.32428741 162.52104187]
[83.20153046 150.02429199]
[91.89615631 140.49716187]
[92.11948395 125.49882507]
[92.34281158 110.50048828]
[92.11948395 95.50215149]
[91.44969940 80.51711273]
[90.77991486 65.53207397]
[80.51243591 50.24611664]
[89.20100403 34.99896622]
[88.30818939 20.02555847]
[76.77029419 9.56062794]
[76.07815552 -5.63725328]
[86.12597656 -16.57237816]
[85.23315430 -31.54578400]
[84.34033966 -46.51919174]
[83.44752502 -61.49259567]
[82.55471039 -76.46600342]
[81.55045319 -91.43234253]
[79.87890625 -106.33892059]
[77.65379333 -121.17296600]
[75.42867279 -136.00700378]
[73.20355988 -150.84104919]
[70.97843933 -165.67509460]
[55.96921158 -165.18562317]
[41.00465012 -166.44197083]
[26.28713226 -169.42713928]
[12.01569748 -174.10075378]
[-1.61664975 -180.39961243]
[-14.42554760 -188.23852539]
[-26.23777008 -197.51148987]
[-36.89357376 -208.09309387]
[-46.24884415 -219.84024048]
[-54.17706680 -232.59405518]
[-60.57102203 -246.18206787]
[-65.34423828 -260.42050171]
[-68.43215942 -275.11679077]
[-69.79302216 -290.07220459]
[-69.40843964 -305.08450317]
[-67.28359222 -319.95062256]
[-63.44723129 -334.46954346]
[-57.95122910 -348.44488525]
[-50.86991882 -361.68768311]
[-42.29906464 -374.01882935]
[-32.35457611 -385.27154541]
[-21.17094421 -395.29367065]
[-8.89941311 -403.94964600]
[4.29405785 -411.12243652]
[18.23104286 -416.71499634]
[32.72306061 -420.65176392]
[47.57411957 -422.87942505]
[62.58338165 -423.36788940]
[77.54785919 -422.11053467]
[92.26517487 -419.12438965]
[106.53630066 -414.44982910]
[120.16822815 -408.15005493]
[132.97660828 -400.31030273]
[144.78820801 -391.03652954]
[155.44329834 -380.45422363]
[164.79779053 -368.70645142]
[172.72515869 -355.95211792]
[179.11820984 -342.36367798]
[183.89047241 -328.12490845]
[186.97741699 -313.42840576]
[188.33728027 -298.47290039]
[187.95169067 -283.46066284]
[185.82585144 -268.59466553]
[181.98852539 -254.07601929]
[176.49159241 -240.10102844]
[169.40939331 -226.85870361]
[160.83772278 -214.52813721]
[150.89248657 -203.27609253]
[139.70817566 -193.25471497]
[127.43607330 -184.59954834]
[114.24211884 -177.42764282]
[100.30476379 -171.83599854]
[85.81248474 -167.90020752]
[88.03760529 -153.06616211]
[90.26271820 -138.23213196]
[92.48783875 -123.39807892]
[94.71295166 -108.56404114]
[105.59208679 -118.89092255]
[120.46926880 -116.97537231]
[128.37760925 -104.22946167]
[123.48735809 -90.04899597]
[109.40343475 -84.88729858]
[96.50890350 -92.54799652]
[100.14118958 -86.11151123]
[97.52811432 -77.35881805]
[98.42092896 -62.38541031]
[99.31375122 -47.41200638]
[100.20656586 -32.43859863]
[101.09938049 -17.46519470]
[112.37543488 -7.80154276]
[113.49417877 7.37090158]
[103.28159332 19.13274384]
[104.17441559 34.10614777]
[113.01074219 42.36724854]
[113.87710571 54.83453369]
[105.76495361 64.86228180]
[106.43473816 79.84732056]
[107.10452271 94.83235931]
[109.17135620 97.07238770]
[110.46881866 100.11395264]
[110.69845581 103.67354584]
[109.67073822 107.36137390]
[107.34114838 110.72381592]
[107.11782074 125.72215271]
[106.89449310 140.72048950]
[116.23394012 156.59046936]
[106.65324402 171.29344177]
[106.65324402 186.29344177]
[106.65324402 201.29344177]
[106.87657166 216.29177856]
[107.32318115 231.28512573]
[107.76978302 246.27847290]
[108.21639252 261.27182007]
[108.66299438 276.26516724]
[109.10960388 291.25851440]
[109.55620575 306.25186157]
[110.00281525 321.24523926]
[118.83832550 330.64184570]
[118.90163422 343.13903809]
[110.70421600 352.03448486]
[110.92754364 367.03280640]
[111.93180084 381.99914551]
[113.71426392 396.89288330]
[115.49673462 411.78659058]
[117.27919769 426.68029785]
[132.29403687 426.54614258]
[147.23248291 428.06454468]
[161.91323853 431.21713257]
[176.15806580 435.96563721]
[189.79405212 442.25238037]
[202.65565491 450.00106812]
[214.58677673 459.11761475]
[225.44256592 469.49139404]
[235.09123230 480.99645996]
[243.41566467 493.49313354]
[250.31481934 506.82971191]
[255.70494080 520.84436035]
[259.52056885 535.36688232]
[261.71545410 550.22106934]
[262.26287842 565.22650146]
[261.15621948 580.20111084]
[258.40893555 594.96307373]
[254.05436707 609.33319092]
[248.14535522 623.13708496]
[240.75363159 636.20709229]
[231.96894836 648.38464355]
[221.89793396 659.52185059]
[210.66282654 669.48358154]
[198.40003967 678.14886475]
[185.25839233 685.41247559]
[171.39744568 691.18634033]
[156.98544312 695.40026855]
[142.19734192 698.00317383]
[127.21264648 698.96343994]
[112.21326447 698.26947021]
[97.38127136 695.92956543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 179]
[25 178]
[26 177]
[27 176]
[35 175]
[36 174]
[38 171]
[39 170]
[40 169]
[41 168]
[42 167]
[43 166]
[44 165]
[45 164]
[48 163]
[49 162]
[50 161]
[53 159]
[54 158]
[55 157]
[56 152]
[57 151]
[58 150]
[60 147]
[61 146]
[64 143]
[65 142]
[66 141]
[67 140]
[68 139]
[69 137]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
