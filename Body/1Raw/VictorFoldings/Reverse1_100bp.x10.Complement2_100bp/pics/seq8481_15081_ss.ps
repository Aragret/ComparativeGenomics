%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[94.77107239 402.23831177]
[89.79199219 416.49963379]
[80.99559784 428.77972412]
[69.09497833 438.08303833]
[55.05485535 443.65545654]
[40.01340103 445.04519653]
[25.18996239 442.13961792]
[11.78620625 435.17428589]
[0.88871527 424.71380615]
[-6.61909914 411.60620117]
[-10.12861252 396.91403198]
[-9.35532475 381.82830811]
[-4.36192179 367.57199097]
[4.44680262 355.30078125]
[16.35676575 346.00939941]
[30.40247917 340.45111084]
[45.44532013 339.07647705]
[48.33059311 324.35659790]
[51.21586609 309.63668823]
[54.10113525 294.91680908]
[56.98640823 280.19689941]
[44.15626907 272.53707886]
[34.70321655 260.92810059]
[29.78314018 246.75885010]
[30.00809860 231.73318481]
[35.37023926 217.66485596]
[45.24041748 206.25872803]
[58.44196701 198.90406799]
[73.39093781 196.50538635]
[76.27620697 181.78549194]
[79.16148376 167.06559753]
[82.04675293 152.34571838]
[84.93202972 137.62582397]
[87.81729889 122.90592957]
[90.59291077 108.16497040]
[81.49682617 120.09230042]
[69.44308472 129.02018738]
[55.38228226 134.24455261]
[40.42332077 135.35334778]
[25.74592400 132.25917053]
[12.50761127 125.20600891]
[1.75241232 114.75011444]
[-5.67147255 101.71607971]
[-9.17856503 87.13183594]
[-8.49228191 72.14754486]
[-3.66674566 57.94493103]
[4.91748190 45.64407349]
[16.58341217 36.21507263]
[30.41102219 30.40153503]
[45.30980682 28.66194344]
[60.10478973 31.13348579]
[73.62917328 37.62124634]
[84.81636810 47.61357880]
[92.78411102 60.32243729]
[96.90402222 74.74555206]
[96.85069275 89.74889374]
[103.73011017 76.41946411]
[110.60951996 63.09003830]
[117.48893738 49.76060867]
[124.36834717 36.43117905]
[121.19724274 23.92890358]
[127.20153046 12.96841812]
[138.68406677 9.16343498]
[145.76116943 -4.06209278]
[152.83827209 -17.28762054]
[159.91539001 -30.51314735]
[166.89384460 -43.79099274]
[173.77325439 -57.12042236]
[180.65266418 -70.44985199]
[167.75030518 -78.10897827]
[155.32434082 -86.51899719]
[143.41842651 -95.65036774]
[132.07435608 -105.47102356]
[121.33200836 -115.94645691]
[111.22908783 -127.03987885]
[101.80110168 -138.71232605]
[93.08115387 -150.92279053]
[85.09987640 -163.62838745]
[77.88531494 -176.78450012]
[71.46279144 -190.34487915]
[65.85488129 -204.26193237]
[61.08127975 -218.48675537]
[57.15874863 -232.96939087]
[54.10107040 -247.65896606]
[51.91898346 -262.50387573]
[50.62015533 -277.45199585]
[50.20914459 -292.45080566]
[50.68739319 -307.44760132]
[52.05323029 -322.38973999]
[54.30184937 -337.22473145]
[57.42535782 -351.90045166]
[61.41278076 -366.36532593]
[66.25011444 -380.56863403]
[71.92036438 -394.46038818]
[78.40361023 -407.99185181]
[85.67709351 -421.11547852]
[93.71524811 -433.78515625]
[102.48985291 -445.95642090]
[111.97007751 -457.58645630]
[122.12262726 -468.63449097]
[132.91184998 -479.06164551]
[144.29981995 -488.83135986]
[156.24656677 -497.90924072]
[168.71009827 -506.26348877]
[181.64666748 -513.86468506]
[195.01081848 -520.68615723]
[208.75559998 -526.70397949]
[222.83274841 -531.89691162]
[237.19279480 -536.24682617]
[251.78532410 -539.73840332]
[266.55908203 -542.35937500]
[281.46212769 -544.10052490]
[296.44216919 -544.95574951]
[311.44656372 -544.92205811]
[326.42260742 -543.99957275]
[341.31768799 -542.19146729]
[356.07952881 -539.50415039]
[370.65621948 -535.94708252]
[384.99658203 -531.53271484]
[399.05026245 -526.27655029]
[412.76788330 -520.19708252]
[426.10125732 -513.31561279]
[439.00354004 -505.65637207]
[451.42941284 -497.24624634]
[463.33526611 -488.11477661]
[474.67922974 -478.29400635]
[485.42150879 -467.81848145]
[495.52432251 -456.72497559]
[504.95220947 -445.05242920]
[513.67205811 -432.84188843]
[521.65319824 -420.13623047]
[528.86767578 -406.98007202]
[535.29003906 -393.41961670]
[540.89782715 -379.50253296]
[545.67132568 -365.27764893]
[549.59375000 -350.79498291]
[552.65130615 -336.10537720]
[554.83325195 -321.26043701]
[556.13195801 -306.31231689]
[556.54284668 -291.31353760]
[556.06445312 -276.31671143]
[554.69848633 -261.37460327]
[552.44970703 -246.53964233]
[549.32611084 -231.86395264]
[545.33856201 -217.39907837]
[540.50109863 -203.19583130]
[534.83068848 -189.30412292]
[528.34735107 -175.77272034]
[521.07373047 -162.64915466]
[513.03546143 -149.97953796]
[504.26077271 -137.80836487]
[494.78042603 -126.17839050]
[484.62777710 -115.13046265]
[473.83847046 -104.70339203]
[462.45040894 -94.93379974]
[450.50360107 -85.85599518]
[438.03997803 -77.50188446]
[425.10336304 -69.90079498]
[411.73913574 -63.07943344]
[397.99432373 -57.06175613]
[383.91711426 -51.86890030]
[369.55703735 -47.51911163]
[354.96447754 -44.02766800]
[340.19070435 -41.40682602]
[325.28762817 -39.66580200]
[310.30758667 -38.81069946]
[295.30319214 -38.84453583]
[280.32714844 -39.76717758]
[265.43206787 -41.57539749]
[250.67027283 -44.26283264]
[236.09361267 -47.82005310]
[221.75328064 -52.23455811]
[207.69964600 -57.49084091]
[193.98208618 -63.57043839]
[187.10267639 -50.24101257]
[180.22326660 -36.91158295]
[179.94900513 -29.52601624]
[173.14091492 -23.43604279]
[166.06381226 -10.21051502]
[158.98669434 3.01501274]
[151.90959167 16.24053955]
[153.41995239 33.72441101]
[137.69776917 43.31059265]
[130.81835938 56.64001846]
[123.93894958 69.96945190]
[117.05953979 83.29888153]
[110.18012238 96.62831116]
[105.35412598 110.83076477]
[106.90859222 119.83195496]
[102.53719330 125.79120636]
[99.65191650 140.51109314]
[96.76664734 155.23098755]
[93.88137054 169.95088196]
[90.99610138 184.67077637]
[88.11082458 199.39065552]
[101.04804993 207.25537109]
[110.49618530 219.04963684]
[115.32995605 233.33790588]
[114.98424530 248.38951111]
[109.52008057 262.38824463]
[99.61492157 273.65155029]
[86.47875977 280.83279419]
[71.70629883 283.08218384]
[68.82102966 297.80206299]
[65.93575287 312.52197266]
[63.05048370 327.24185181]
[60.16521072 341.96176147]
[73.57595825 348.91363525]
[84.48394775 359.36312866]
[92.00492859 372.46319580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 207]
[18 206]
[19 205]
[20 204]
[21 203]
[29 195]
[30 194]
[31 193]
[32 192]
[33 191]
[34 190]
[35 188]
[56 187]
[57 186]
[58 185]
[59 184]
[60 183]
[63 181]
[64 180]
[65 179]
[66 178]
[67 176]
[68 175]
[69 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
