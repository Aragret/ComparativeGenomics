%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[86.81207275 530.81292725]
[75.90821075 520.47601318]
[66.54915619 508.72210693]
[58.91707611 495.78002930]
[53.16053009 481.90170288]
[49.39157104 467.35723877]
[47.68356705 452.42977905]
[48.06975937 437.40991211]
[50.54263687 422.58996582]
[55.05406189 408.25842285]
[61.51621246 394.69424438]
[69.80330658 382.16146851]
[79.75403595 370.90408325]
[91.17470551 361.14114380]
[103.84300232 353.06277466]
[117.51233673 346.82614136]
[131.91664124 342.55270386]
[129.69152832 327.71865845]
[127.46640778 312.88461304]
[125.13092041 298.06756592]
[122.68518829 283.26828003]
[120.23946381 268.46902466]
[110.53054047 257.17361450]
[115.91419983 242.29655457]
[113.46847534 227.49728394]
[101.24825287 219.05917358]
[98.55711365 204.08544922]
[107.49063873 191.32496643]
[105.04491425 176.52569580]
[95.33599091 165.23030090]
[100.71965027 150.35324097]
[98.27392578 135.55397034]
[95.82819366 120.75469971]
[84.71944427 114.65148926]
[79.08834839 103.29612732]
[80.95350647 90.75918579]
[89.64630127 81.53482819]
[87.42118835 66.70078278]
[85.19606781 51.86673737]
[81.33176422 37.37304688]
[75.87640381 23.40024757]
[70.42105103 9.42745018]
[64.96569061 -4.54534769]
[59.51033783 -18.51814651]
[47.28389740 -28.55929756]
[49.86255646 -43.22898483]
[44.40719986 -57.20178604]
[36.08550262 -44.72182846]
[21.15354347 -43.29474258]
[10.61860561 -53.97253036]
[12.24665451 -68.88391876]
[24.83755302 -77.03678894]
[39.10855865 -72.42227936]
[34.70755768 -86.76212311]
[30.30656052 -101.10197449]
[25.90556335 -115.44181824]
[21.50456619 -129.78166199]
[6.55733395 -128.10343933]
[-8.43978024 -129.20016479]
[-22.97612762 -133.03303528]
[-36.55701828 -139.47010803]
[-48.72055817 -148.29081726]
[-59.05335236 -159.19357300]
[-67.20456696 -171.80604553]
[-72.89781952 -185.69792175]
[-75.94058228 -200.39550781]
[-76.23065186 -215.39794922]
[-73.75962830 -230.19430542]
[-68.61309814 -244.28088379]
[-60.96772003 -257.17843628]
[-51.08513260 -268.44848633]
[-39.30300903 -277.70812988]
[-26.02351379 -284.64321899]
[-30.42451286 -298.98306274]
[-34.82551193 -313.32290649]
[-40.28262711 -299.35079956]
[-52.36454773 -290.46109009]
[-67.32756042 -289.40832520]
[-80.53520966 -296.51873779]
[-87.89495850 -309.58908081]
[-87.12631989 -324.56936646]
[-78.46745300 -336.81781006]
[-64.60140991 -342.53906250]
[-49.82472992 -339.96035767]
[-38.71599579 -329.88052368]
[-41.16172409 -344.67977905]
[-43.60744858 -359.47906494]
[-46.05317688 -374.27832031]
[-61.07771683 -375.58755493]
[-75.30436707 -380.59286499]
[-87.83882904 -388.97964478]
[-97.89317322 -400.22070312]
[-104.83538055 -413.60937500]
[-108.22905731 -428.30404663]
[-107.86087036 -443.38101196]
[-103.75396729 -457.89254761]
[-96.16651154 -470.92639160]
[-85.57546234 -481.66326904]
[-72.64656830 -489.42822266]
[-58.19255447 -493.73315430]
[-43.12202072 -494.30743408]
[-28.38230896 -491.11499023]
[-14.89996910 -484.35650635]
[-3.52251196 -474.45678711]
[5.03486490 -462.03817749]
[10.23423767 -447.88128662]
[11.74876976 -432.87606812]
[9.48325634 -417.96572876]
[3.58010936 -404.08755493]
[-5.58959436 -392.11392212]
[-17.44944000 -382.79754639]
[-31.25390625 -376.72406006]
[-28.80817986 -361.92477417]
[-26.36245155 -347.12551880]
[-23.91672516 -332.32623291]
[-20.48566246 -317.72390747]
[-16.08466530 -303.38406372]
[-11.68366718 -289.04421997]
[3.19993734 -290.75259399]
[18.14800262 -289.69662476]
[32.65133667 -285.91079712]
[46.21563721 -279.52261353]
[58.37831497 -270.74835205]
[68.72429657 -259.88562012]
[76.90016174 -247.30337524]
[82.62623596 -233.42932129]
[85.70615387 -218.73539734]
[86.03359222 -203.72175598]
[83.59593201 -188.89965820]
[78.47473907 -174.77413940]
[70.84306335 -161.82679749]
[60.95953751 -150.49929810]
[49.15966797 -141.17839050]
[35.84441376 -134.18266296]
[40.24541092 -119.84281921]
[44.64640808 -105.50296783]
[49.04740524 -91.16312408]
[53.44840622 -76.82328033]
[58.37999725 -62.65714264]
[63.83535385 -48.68434525]
[75.67159271 -39.64262009]
[73.48313141 -23.97350311]
[78.93849182 -10.00070477]
[84.39384460 3.97209287]
[89.84920502 17.94489098]
[95.30456543 31.91768837]
[97.47866058 17.07608223]
[104.80384827 3.98632646]
[116.31635284 -5.62939596]
[130.50152588 -10.50597095]
[145.49304199 -10.00180244]
[159.31854248 -4.18322134]
[170.15901184 6.18423796]
[176.58821106 19.73655701]
[177.76026917 34.69069672]
[173.52099609 49.07918167]
[164.42811584 61.00895691]
[151.67796326 68.91046143]
[136.94804382 71.74411011]
[122.17633820 69.13709259]
[109.30630493 61.43240356]
[100.03011322 49.64162064]
[102.25523376 64.47566223]
[104.48034668 79.30970764]
[117.97282410 88.81343842]
[120.54241943 105.11573792]
[110.62746429 118.30897522]
[113.07319641 133.10824585]
[115.51892090 147.90751648]
[125.40277863 160.26145935]
[119.84418488 174.07997131]
[122.28990936 188.87924194]
[134.85391235 198.08705139]
[137.12339783 213.13044739]
[128.26774597 225.05155945]
[130.71347046 239.85083008]
[140.59733582 252.20477295]
[135.03872681 266.02328491]
[137.48446655 280.82257080]
[139.93019104 295.62182617]
[144.41694641 303.57839966]
[142.30044556 310.65951538]
[144.52555847 325.49356079]
[146.75068665 340.32760620]
[161.77487183 340.18673706]
[176.67243958 342.13830566]
[191.15339661 346.14428711]
[204.93588257 352.12670898]
[217.75160217 359.96911621]
[229.35108948 369.51889038]
[239.50856018 380.59008789]
[248.02632141 392.96725464]
[254.73852539 406.40945435]
[259.51455688 420.65499878]
[262.26144409 435.42660522]
[262.92568970 450.43676758]
[261.49438477 465.39328003]
[257.99542236 480.00503540]
[252.49684143 493.98760986]
[245.10571289 507.06878662]
[235.96591187 518.99395752]
[225.25534058 529.53106689]
[213.18247986 538.47485352]
[199.98233032 545.65136719]
[185.91184998 550.92089844]
[171.24490356 554.18078613]
[156.26699829 555.36761475]
[141.26969910 554.45831299]
[126.54489899 551.47058105]
[112.37924957 546.46252441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 184]
[18 183]
[19 182]
[20 180]
[21 179]
[22 178]
[24 176]
[25 175]
[28 172]
[29 171]
[31 169]
[32 168]
[33 167]
[37 164]
[38 163]
[39 162]
[40 146]
[41 145]
[42 144]
[43 143]
[44 142]
[46 140]
[47 139]
[53 138]
[54 137]
[55 136]
[56 135]
[57 134]
[73 118]
[74 117]
[75 116]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
