%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[45.23693848 672.60723877]
[37.73840332 685.70971680]
[26.98212242 696.30242920]
[13.76628399 703.59924316]
[-0.92840987 707.05883789]
[-16.01151466 706.42437744]
[-30.36376381 701.74298096]
[-42.92012405 693.36199951]
[-52.74883270 681.90344238]
[-59.12053299 668.21752930]
[-61.56240082 653.31988525]
[-59.89323425 638.31597900]
[-54.23690033 624.31927490]
[-45.01313019 612.36834717]
[-32.90639114 603.35003662]
[-18.81508827 597.93365479]
[-3.78488421 596.52099609]
[-9.13712883 582.62127686]
[0.92956519 570.41583252]
[3.59536076 555.65460205]
[6.26115608 540.89337158]
[8.92695141 526.13220215]
[2.11177897 509.96060181]
[14.12295532 496.00305176]
[16.56868362 481.20376587]
[19.01441002 466.40451050]
[21.46013832 451.60522461]
[23.90586472 436.80596924]
[26.35159302 422.00668335]
[28.79731941 407.20742798]
[23.23872185 393.38891602]
[33.12258148 381.03497314]
[19.59436226 387.51470947]
[6.02771282 381.11581421]
[2.42346048 366.55526733]
[11.43852615 354.56658936]
[26.42733955 353.98736572]
[36.34024811 365.24301147]
[39.87992096 350.66662598]
[43.41959381 336.09027100]
[46.95926666 321.51388550]
[50.49893951 306.93750000]
[45.98351288 292.74383545]
[56.75883865 281.15924072]
[52.24340820 266.96557617]
[63.01873398 255.38098145]
[66.55841064 240.80459595]
[70.09807587 226.22822571]
[73.63774872 211.65185547]
[77.17742157 197.07546997]
[80.06269836 182.35559082]
[82.28781128 167.52154541]
[84.51293182 152.68750000]
[86.73804474 137.85345459]
[88.96316528 123.01940918]
[91.18828583 108.18536377]
[93.19229889 93.31983948]
[94.97476196 78.42611694]
[96.75722504 63.53240204]
[98.53969574 48.63868713]
[100.32215881 33.74496841]
[102.10462952 18.85125160]
[103.88709259 3.95753407]
[105.66955566 -10.93618298]
[107.45202637 -25.82990074]
[108.79026031 -40.77008438]
[98.57767487 -52.53192902]
[99.69641876 -67.70436859]
[110.97247314 -77.36802673]
[111.86528778 -92.34143066]
[112.75811005 -107.31483459]
[113.65092468 -122.28823853]
[114.54373932 -137.26164246]
[111.93103790 -143.33497620]
[112.66717529 -148.97013855]
[115.69260406 -152.66551208]
[117.03083801 -167.60569763]
[118.36907959 -182.54588318]
[119.70731354 -197.48606873]
[119.37233734 -212.48233032]
[117.36831665 -227.34785461]
[113.12045288 -235.43447876]
[115.44683838 -242.44944763]
[106.12447357 -255.23240662]
[112.29455566 -268.78894043]
[110.51209259 -283.68264771]
[98.37176514 -293.44226074]
[96.77626038 -308.57202148]
[106.15539551 -320.08581543]
[104.37292480 -334.97952271]
[102.59046173 -349.87322998]
[100.80799866 -364.76696777]
[85.96335602 -367.68103027]
[72.74674988 -375.04153442]
[62.45301437 -386.12728882]
[56.09061432 -399.85226440]
[54.28287888 -414.87182617]
[57.20690918 -429.71450806]
[64.57624054 -442.92617798]
[75.66889954 -453.21249390]
[89.39813995 -459.56567383]
[104.41890717 -461.36334229]
[119.25962830 -458.42938232]
[132.46635437 -451.05120850]
[142.74522400 -439.95166016]
[149.08923340 -426.21817017]
[150.87683105 -411.19619751]
[147.93292236 -396.35742188]
[140.54588318 -383.15567017]
[129.43945312 -372.88421631]
[115.70171356 -366.54943848]
[117.48417664 -351.65570068]
[119.26664734 -336.76199341]
[121.04911041 -321.86828613]
[132.88037109 -312.89291382]
[134.90020752 -297.81396484]
[125.40580750 -285.46511841]
[127.18827057 -270.57138062]
[136.38314819 -258.85372925]
[130.34056091 -244.23190308]
[132.23385620 -229.35186768]
[134.23786926 -214.48634338]
[139.85285950 -228.39576721]
[150.06005859 -239.38725281]
[163.51654053 -246.01470947]
[178.45185852 -247.40617371]
[192.90103149 -243.37857056]
[204.96299744 -234.46180725]
[213.05082703 -221.82902527]
[216.10040283 -207.14230347]
[213.71052551 -192.33390808]
[206.19558716 -179.35215759]
[194.54434204 -169.90501404]
[180.28970337 -165.23541260]
[165.30709839 -165.95773315]
[151.56776428 -171.97692871]
[140.87934875 -182.50106812]
[134.64749146 -196.14784241]
[133.30926514 -181.20765686]
[131.97102356 -166.26747131]
[130.63279724 -151.32728577]
[129.51715088 -136.36883545]
[128.62432861 -121.39542389]
[127.73151398 -106.42201996]
[126.83869934 -91.44861603]
[125.94587708 -76.47520447]
[135.99369812 -65.54008484]
[135.30155945 -50.34220123]
[123.76366425 -39.87726974]
[125.52133179 -37.69352341]
[126.51988983 -34.68196487]
[126.43971252 -31.12823868]
[125.07037354 -27.42831612]
[122.34574127 -24.04743385]
[120.56327820 -9.15371704]
[118.78080750 5.73999977]
[116.99834442 20.63371658]
[115.21587372 35.52743530]
[113.43341064 50.42115021]
[111.65094757 65.31487274]
[109.86847687 80.20858765]
[108.08601379 95.10230255]
[110.31033325 99.85270691]
[109.71475220 105.51120758]
[106.02232361 110.41048431]
[103.79721069 125.24452972]
[101.57209015 140.07856750]
[99.34697723 154.91261292]
[97.12185669 169.74665833]
[94.89674377 184.58070374]
[107.57169342 176.55912781]
[122.23597717 179.71488953]
[130.48921204 192.24023438]
[127.60359192 206.96005249]
[115.23211670 215.44218445]
[100.46173096 212.82766724]
[91.75379944 200.61514282]
[88.21412659 215.19152832]
[84.67445374 229.76789856]
[81.13478088 244.34426880]
[77.59510803 258.92065430]
[81.85735321 274.15692139]
[71.33521271 284.69891357]
[75.59745789 299.93518066]
[65.07531738 310.47717285]
[61.53564072 325.05355835]
[57.99597168 339.62994385]
[54.45629883 354.20629883]
[50.91662598 368.78268433]
[47.92185211 383.48068237]
[53.30551529 398.35772705]
[43.59659195 409.65313721]
[41.15086365 424.45242310]
[38.70513535 439.25167847]
[36.25940704 454.05096436]
[33.81368256 468.85021973]
[31.36795425 483.64950562]
[28.92222595 498.44876099]
[35.78529358 509.36944580]
[33.44356537 521.64544678]
[23.68816948 528.79797363]
[21.02237320 543.55920410]
[18.35657883 558.32043457]
[15.69078255 573.08160400]
[20.85235214 588.03717041]
[10.97633266 599.18676758]
[24.56298637 605.76745605]
[35.86959839 615.77062988]
[44.05714035 628.45397949]
[48.51804733 642.87628174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 206]
[19 204]
[20 203]
[21 202]
[22 201]
[24 198]
[25 197]
[26 196]
[27 195]
[28 194]
[29 193]
[30 192]
[32 190]
[38 189]
[39 188]
[40 187]
[41 186]
[42 185]
[44 183]
[46 181]
[47 180]
[48 179]
[49 178]
[50 177]
[51 170]
[52 169]
[53 168]
[54 167]
[55 166]
[56 165]
[57 162]
[58 161]
[59 160]
[60 159]
[61 158]
[62 157]
[63 156]
[64 155]
[65 154]
[66 149]
[69 146]
[70 145]
[71 144]
[72 143]
[73 142]
[76 141]
[77 140]
[78 139]
[79 138]
[80 122]
[81 121]
[83 120]
[85 118]
[86 117]
[89 114]
[90 113]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
