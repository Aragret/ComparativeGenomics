%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxUGUUAGCCGUAGUUGGUUGGUGUGGAUCGUAAGGACGUGUAGACAUGGGUGCGGAAGAAGUUUCGGUAUGAUAAAUACACGAGGCCCAGGUAGUAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[148.72177124 598.98925781]
[136.80091858 609.36560059]
[121.04039764 608.19012451]
[110.79066467 596.16021729]
[112.13269806 580.41302490]
[124.27029419 570.29101562]
[125.38594055 555.33258057]
[126.50159454 540.37414551]
[127.61724091 525.41564941]
[128.62150574 510.44934082]
[129.51431274 495.47592163]
[122.54827881 482.31066895]
[131.09326172 468.99551392]
[131.87458801 454.01586914]
[132.54437256 439.03082275]
[133.21415710 424.04580688]
[133.66075134 409.05245972]
[133.88407898 394.05410767]
[134.10740662 379.05575562]
[134.33073425 364.05743408]
[126.78379059 351.21636963]
[134.72569275 337.53292847]
[134.94902039 322.53460693]
[133.83337402 307.57614136]
[131.38764954 292.77685547]
[128.61203003 278.03591919]
[125.50792694 263.36059570]
[122.40381622 248.68530273]
[119.29970551 234.00999451]
[116.19559479 219.33470154]
[113.09148407 204.65939331]
[103.12745667 197.80047607]
[100.42126465 185.59965515]
[106.95613861 174.47947693]
[104.07086182 159.75958252]
[101.18559265 145.03968811]
[98.30032349 130.31980896]
[95.41504669 115.59991455]
[86.15850830 108.53182983]
[84.00343323 97.08644867]
[90.05548859 87.13587189]
[87.38969421 72.37465668]
[84.72389221 57.61344147]
[82.05809784 42.85222244]
[69.35839844 33.83250046]
[66.86518097 18.82455254]
[75.54237366 6.77291584]
[72.62133789 3.56020188]
[71.03420258 -0.05165600]
[70.74264526 -3.59431028]
[71.56018066 -6.65996504]
[73.18475342 -8.94445801]
[71.40229034 -23.83817482]
[69.61982727 -38.73189163]
[67.72653198 -53.61192703]
[65.72251892 -68.47745514]
[63.71850586 -83.34298706]
[61.71449280 -98.20851135]
[59.71047592 -113.07404327]
[54.09548187 -99.16462708]
[43.88827896 -88.17312622]
[30.43179893 -81.54566956]
[15.49647808 -80.15420532]
[1.04731143 -84.18180847]
[-11.01466370 -93.09857941]
[-19.10248756 -105.73136139]
[-22.15206718 -120.41809082]
[-19.76217842 -135.22648621]
[-12.24725151 -148.20823669]
[-0.59600562 -157.65536499]
[13.65863895 -162.32496643]
[28.64123726 -161.60264587]
[42.38057327 -155.58346558]
[53.06899643 -145.05931091]
[59.30084610 -131.41255188]
[60.63908005 -146.35273743]
[61.97731400 -161.29292297]
[62.64709854 -176.27795410]
[62.64709854 -191.27795410]
[62.64709854 -206.27795410]
[54.90979767 -220.07812500]
[62.64709854 -232.80540466]
[62.64709854 -247.80540466]
[59.67753601 -253.71244812]
[60.07695770 -259.38143921]
[62.87707520 -263.25033569]
[63.32368088 -278.24368286]
[63.77028656 -293.23703003]
[60.97791672 -299.22988892]
[61.54595184 -304.88449097]
[64.46001434 -308.66830444]
[65.35282898 -323.64169312]
[66.24565125 -338.61511230]
[67.13846588 -353.58850098]
[68.03128052 -368.56192017]
[68.92409515 -383.53530884]
[66.31102753 -392.28802490]
[69.94330597 -398.72448730]
[71.05895996 -413.68295288]
[57.13444138 -419.63162231]
[45.89759064 -429.78109741]
[38.56729889 -443.03045654]
[35.93869781 -457.94250488]
[38.29692078 -472.89968872]
[45.38616180 -486.27957153]
[56.43743896 -496.63079834]
[70.25198364 -502.83056641]
[85.33130646 -504.20632935]
[100.03971100 -500.60888672]
[112.78173828 -492.42846680]
[122.17523193 -480.55239868]
[127.20125580 -466.26892090]
[127.31462097 -451.12738037]
[122.50302887 -436.77026367]
[113.28841400 -424.75488281]
[100.67030334 -416.38458252]
[86.01741028 -412.56729126]
[84.90176392 -397.60885620]
[83.89749908 -382.64251709]
[83.00468445 -367.66909790]
[82.11186981 -352.69567871]
[81.21905518 -337.72229004]
[80.32624054 -322.74887085]
[79.43342590 -307.77548218]
[78.76363373 -292.79043579]
[78.31703186 -277.79708862]
[77.87042236 -262.80374146]
[77.64709473 -247.80540466]
[77.64709473 -232.80540466]
[85.38439941 -220.07812500]
[77.64709473 -206.27795410]
[77.64709473 -191.27795410]
[77.64709473 -176.27795410]
[88.99188995 -186.09098816]
[103.96205902 -185.14546204]
[113.98200989 -173.98300171]
[113.31186676 -158.99798584]
[102.33551788 -148.77449036]
[87.34070587 -149.16902161]
[76.91749573 -159.95468140]
[75.57926178 -145.01449585]
[74.24102783 -130.07431030]
[74.57600403 -115.07805634]
[76.58001709 -100.21252441]
[78.58403015 -85.34700012]
[80.58804321 -70.48146820]
[82.59206390 -55.61594009]
[86.60101318 -49.40706635]
[84.51354218 -40.51435852]
[86.29600525 -25.62063980]
[88.07847595 -10.72692299]
[90.30358887 4.10712051]
[102.64809418 12.36235523]
[105.56186676 27.29435349]
[96.81932068 40.18642807]
[99.48511505 54.94764328]
[102.15090942 69.70886230]
[104.81670380 84.47007751]
[115.97894287 96.99128723]
[110.13494110 112.71463776]
[113.02021027 127.43453217]
[115.90548706 142.15441895]
[118.79075623 156.87431335]
[121.67603302 171.59420776]
[134.09744263 185.18794250]
[127.76678467 201.55528259]
[130.87089539 216.23059082]
[133.97500610 230.90588379]
[137.07911682 245.58119202]
[140.18322754 260.25650024]
[143.28733826 274.93179321]
[146.77757263 278.81320190]
[148.27975464 283.20602417]
[147.93197632 287.26730347]
[146.18692017 290.33114624]
[148.63264465 305.13040161]
[154.59748840 291.36740112]
[165.88636780 281.49008179]
[180.31958008 277.40563965]
[195.11027527 279.90267944]
[207.40261841 288.49911499]
[214.82313538 301.53503418]
[215.93907166 316.49346924]
[210.53492737 330.48617554]
[199.65417480 340.81134033]
[185.39770508 345.47537231]
[170.51823425 343.57769775]
[157.88873291 335.48474121]
[149.94735718 322.75793457]
[149.72402954 337.75625610]
[157.25500488 351.67010498]
[149.32907104 364.28076172]
[149.10574341 379.27908325]
[148.88241577 394.27743530]
[148.65908813 409.27578735]
[151.54037476 415.22637939]
[151.05659485 420.88879395]
[148.19918823 424.71557617]
[147.52940369 439.70062256]
[146.85961914 454.68566895]
[149.60272217 463.39846802]
[146.06666565 469.88833618]
[152.96884155 484.12457275]
[144.48771667 496.36874390]
[143.59490967 511.34213257]
[146.20797729 520.09484863]
[142.57569885 526.53131104]
[141.46005249 541.48974609]
[140.34439087 556.44824219]
[139.22874451 571.40667725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 210]
[7 209]
[8 208]
[9 207]
[10 205]
[11 204]
[13 202]
[14 200]
[15 199]
[16 198]
[17 195]
[18 194]
[19 193]
[20 192]
[22 190]
[23 189]
[24 176]
[25 175]
[26 171]
[27 170]
[28 169]
[29 168]
[30 167]
[31 166]
[34 164]
[35 163]
[36 162]
[37 161]
[38 160]
[41 158]
[42 157]
[43 156]
[44 155]
[47 152]
[52 151]
[53 150]
[54 149]
[55 147]
[56 146]
[57 145]
[58 144]
[59 143]
[75 142]
[76 141]
[77 140]
[78 133]
[79 132]
[80 131]
[82 129]
[83 128]
[86 127]
[87 126]
[88 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
