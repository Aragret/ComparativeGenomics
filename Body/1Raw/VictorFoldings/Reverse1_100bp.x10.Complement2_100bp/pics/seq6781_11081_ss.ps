%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[95.14588928 569.95404053]
[103.57279205 557.45404053]
[114.74674988 547.33447266]
[128.01811218 540.18365479]
[124.26181793 525.66156006]
[120.50551605 511.13949585]
[116.74921417 496.61746216]
[112.99291229 482.09539795]
[109.07057190 496.57348633]
[100.24182892 508.70004272]
[87.66824341 516.87957764]
[73.00408936 520.03594971]
[58.17870331 517.75390625]
[45.14260101 510.33364868]
[35.61091995 498.75146484]
[30.83770752 484.53118896]
[31.45096588 469.54373169]
[37.37001038 455.76095581]
[47.81608582 444.99621582]
[61.41483688 438.66583252]
[76.37711334 437.60263062]
[90.73435974 441.94650269]
[102.59764862 451.12597656]
[110.40699768 463.93548584]
[109.96039581 448.94213867]
[109.51378632 433.94879150]
[99.49958038 419.53759766]
[108.36237335 403.39657593]
[107.69258881 388.41156006]
[107.02280426 373.42651367]
[106.12998962 358.45309448]
[105.01433563 343.49465942]
[103.89868927 328.53619385]
[102.78304291 313.57772827]
[101.66738892 298.61929321]
[100.55174255 283.66082764]
[99.43609619 268.70239258]
[98.32044220 253.74392700]
[97.20479584 238.78547668]
[96.08914948 223.82702637]
[94.86217499 208.87728882]
[93.52394104 193.93710327]
[92.18570709 178.99691772]
[82.63519287 190.56358337]
[67.90750885 193.40879822]
[54.73594284 186.23175049]
[49.14236069 172.31370544]
[53.68407822 158.01780701]
[66.28467560 149.87994385]
[81.18333435 151.62063599]
[91.56934357 162.44575500]
[91.79267120 147.44740295]
[92.01599884 132.44906616]
[92.23932648 117.45073700]
[82.22293854 106.98085785]
[82.43866730 92.49294281]
[92.76233673 82.32593536]
[92.98566437 67.32759857]
[85.45468903 53.41376114]
[93.38062286 40.80309677]
[93.60395050 25.80475807]
[82.87635803 14.51066303]
[83.31649780 -0.69660211]
[94.14980316 -10.85411739]
[94.37313080 -25.85245514]
[94.03815460 -40.84871292]
[93.14533997 -55.82212067]
[92.25252533 -70.79552460]
[91.35971069 -85.76892853]
[90.46689606 -100.74234009]
[89.57407379 -115.71574402]
[88.12465668 -130.64555359]
[86.12064362 -145.51107788]
[84.11663055 -160.37660217]
[79.86875916 -168.46322632]
[82.19515228 -175.47819519]
[80.41268158 -190.37190247]
[78.63021851 -205.26562500]
[76.84775543 -220.15934753]
[67.52538300 -232.94230652]
[73.69546509 -246.49882507]
[71.91300201 -261.39254761]
[70.13053894 -276.28625488]
[68.34806824 -291.17999268]
[66.56560516 -306.07369995]
[51.55403900 -307.05734253]
[36.97888184 -310.78286743]
[23.33655548 -317.12335205]
[11.09171391 -325.86282349]
[0.66141009 -336.70364380]
[-7.59910297 -349.27658081]
[-13.40847492 -363.15338135]
[-16.56884193 -377.86141968]
[-16.97256088 -392.89978027]
[-14.60588360 -407.75619507]
[-9.54941654 -421.92471313]
[-1.97538245 -434.92272949]
[7.85825109 -446.30755615]
[19.61655426 -455.69143677]
[32.89904022 -462.75473022]
[47.25331879 -467.25686646]
[62.19048309 -469.04455566]
[77.20178223 -468.05682373]
[91.77593231 -464.32739258]
[105.41654968 -457.98324585]
[117.65903473 -449.24047852]
[128.08642578 -438.39685059]
[136.34353638 -425.82168579]
[142.14916992 -411.94329834]
[145.30557251 -397.23440552]
[145.70524597 -382.19595337]
[143.33456421 -367.34017944]
[138.27427673 -353.17300415]
[130.69673157 -340.17703247]
[120.86003113 -328.79486084]
[109.09920502 -319.41415405]
[95.81481171 -312.35443115]
[81.45932007 -307.85617065]
[83.24179077 -292.96243286]
[85.02425385 -278.06872559]
[86.80671692 -263.17501831]
[88.58918762 -248.28129578]
[97.78405762 -236.56362915]
[91.74147034 -221.94180298]
[93.52393341 -207.04809570]
[95.30640411 -192.15437317]
[97.08886719 -177.26065063]
[98.98216248 -162.38061523]
[100.98617554 -147.51509094]
[102.99018860 -132.64956665]
[114.02186584 -142.81332397]
[128.86888123 -140.67649841]
[136.58656311 -127.81424713]
[131.48573303 -113.70816803]
[117.32653046 -108.75672913]
[104.54748535 -116.60855865]
[105.44029999 -101.63515472]
[106.33311462 -86.66175079]
[107.22592926 -71.68833923]
[108.11874390 -56.71493530]
[109.01155853 -41.74153137]
[120.76863098 -51.05664444]
[135.41558838 -47.82145691]
[142.15525818 -34.42082596]
[136.01939392 -20.73319626]
[121.53112793 -16.84858322]
[109.37146759 -25.62912750]
[109.14813995 -10.63078976]
[119.67421722 -0.15522976]
[119.66138458 15.05839825]
[108.60228729 26.02808571]
[108.37895966 41.02642441]
[115.92591095 53.86748123]
[107.98400116 67.55092621]
[107.76067352 82.54926300]
[117.77706146 93.01914215]
[117.56133270 107.50705719]
[107.23766327 117.67406464]
[107.01433563 132.67239380]
[106.79100800 147.67073059]
[106.56768036 162.66908264]
[107.12589264 177.65869141]
[108.46412659 192.59887695]
[109.80236053 207.53906250]
[113.68490601 215.80728149]
[111.04759979 222.71138000]
[112.16325378 237.66983032]
[113.27890015 252.62828064]
[114.39454651 267.58673096]
[115.51019287 282.54519653]
[116.62584686 297.50363159]
[117.74149323 312.46209717]
[118.85713959 327.42056274]
[119.97279358 342.37899780]
[121.08843994 357.33746338]
[124.48912048 363.00726318]
[124.51244354 368.69027710]
[122.00784302 372.75671387]
[122.67762756 387.74176025]
[123.34741211 402.72680664]
[132.32185364 411.99084473]
[132.57121277 424.48568726]
[124.50714111 433.50219727]
[124.95374298 448.49554443]
[125.40035248 463.48889160]
[127.51497650 478.33908081]
[131.27127075 492.86114502]
[135.02757263 507.38320923]
[138.78387451 521.90527344]
[142.54017639 536.42730713]
[157.61434937 536.24621582]
[172.29367065 539.67858887]
[185.72470093 546.52478027]
[197.12658691 556.38684082]
[205.83644104 568.69140625]
[211.34785461 582.72308350]
[213.34043884 597.66607666]
[211.69833374 612.65161133]
[206.51699829 626.80853271]
[198.09767151 639.31365967]
[186.92985535 649.44000244]
[173.66282654 656.59887695]
[159.06790161 660.37402344]
[143.99362183 660.54595947]
[129.31639099 657.10473633]
[115.88950348 650.25036621]
[104.49359894 640.38140869]
[95.79122162 628.07159424]
[90.28829956 614.03656006]
[88.30477905 599.09234619]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 190]
[5 189]
[6 188]
[7 187]
[8 186]
[24 185]
[25 184]
[26 183]
[28 180]
[29 179]
[30 178]
[31 175]
[32 174]
[33 173]
[34 172]
[35 171]
[36 170]
[37 169]
[38 168]
[39 167]
[40 166]
[41 164]
[42 163]
[43 162]
[51 161]
[52 160]
[53 159]
[54 158]
[57 155]
[58 154]
[60 152]
[61 151]
[64 148]
[65 147]
[66 141]
[67 140]
[68 139]
[69 138]
[70 137]
[71 136]
[72 130]
[73 129]
[74 128]
[76 127]
[77 126]
[78 125]
[79 124]
[81 122]
[82 121]
[83 120]
[84 119]
[85 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
