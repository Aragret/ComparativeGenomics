%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[143.48228455 532.89154053]
[151.53082275 520.12890625]
[162.60896301 509.88504028]
[175.96139526 502.85830688]
[172.63912964 488.23086548]
[169.31687927 473.60339355]
[165.99461365 458.97592163]
[162.67234802 444.34848022]
[159.35009766 429.72100830]
[156.02783203 415.09356689]
[152.27153015 400.57150269]
[148.08451843 386.16772461]
[137.10214233 376.10607910]
[140.67980957 360.69467163]
[136.49279785 346.29089355]
[132.30578613 331.88711548]
[126.64125061 345.77642822]
[114.42831421 354.48529053]
[99.45128632 355.31515503]
[86.35096741 348.00888062]
[79.18663025 334.83041382]
[80.17822266 319.86322021]
[89.01848602 307.74505615]
[102.96817780 302.23086548]
[117.70482635 305.02929688]
[128.66224670 315.27343750]
[126.43713379 300.43939209]
[124.21202087 285.60534668]
[121.98690033 270.77130127]
[112.44878387 263.33148193]
[110.47360229 250.99121094]
[117.65877533 240.27970886]
[108.29045868 228.70024109]
[114.11468506 213.99008179]
[112.11067200 199.12455750]
[110.10665131 184.25901794]
[108.10263824 169.39349365]
[105.32703400 154.65252686]
[101.78736115 140.07615662]
[98.24768829 125.49977875]
[94.70801544 110.92340851]
[90.90480042 125.43325043]
[82.65123749 137.95837402]
[70.81833649 147.17697144]
[56.65485382 152.11616516]
[41.65549469 152.25473022]
[27.40317535 147.57804871]
[15.40198135 138.57963562]
[6.91842413 126.20913696]
[2.84779477 111.77203369]
[3.61967659 96.79190826]
[9.15261078 82.84964752]
[18.86269379 71.41661072]
[31.72519684 63.69935989]
[46.38270950 60.51231003]
[61.28839111 62.19179535]
[74.86920929 68.56057739]
[85.69194794 78.94654846]
[92.61450958 92.25382996]
[81.88691711 80.95973969]
[82.32706451 65.75247192]
[93.16036987 55.59495544]
[93.38369751 40.59661865]
[93.60702515 25.59828186]
[93.83035278 10.59994507]
[94.05368042 -4.39839268]
[91.17239380 -10.34899998]
[91.65617371 -16.01141739]
[94.51358032 -19.83819962]
[95.18336487 -34.82323837]
[95.85314941 -49.80827713]
[96.52294159 -64.79331970]
[82.15470886 -69.37470245]
[69.47186279 -77.51293945]
[59.33570862 -88.64820862]
[52.43274689 -102.01742554]
[49.22820282 -116.70648956]
[49.93463898 -131.71281433]
[54.49790955 -146.01376343]
[62.60122681 -158.63630676]
[73.68715668 -168.72326660]
[86.99597931 -175.59146118]
[101.61770630 -178.77807617]
[102.28749084 -193.76312256]
[102.95727539 -208.74815369]
[100.21417999 -217.46096802]
[103.75022888 -223.95082092]
[104.64305115 -238.92422485]
[97.74086761 -253.16046143]
[106.22199249 -265.40463257]
[107.11480713 -280.37805176]
[97.64379883 -287.56390381]
[92.86645508 -298.31927490]
[93.86386108 -309.92526245]
[100.27297974 -319.50851440]
[110.40542603 -324.75256348]
[111.74365997 -339.69274902]
[113.08189392 -354.63293457]
[114.42012787 -369.57312012]
[100.49987030 -375.49606323]
[89.09254456 -385.43228149]
[81.31571960 -398.40826416]
[77.93130493 -413.15277100]
[79.27085876 -428.22131348]
[85.20314789 -442.13760376]
[95.14698792 -453.53826904]
[108.12818146 -461.30639648]
[122.87496948 -464.68093872]
[137.94261169 -463.33126831]
[151.85491943 -457.38967896]
[163.24891663 -447.43820190]
[171.00834656 -434.45178223]
[174.37300110 -419.70275879]
[173.01324463 -404.63601685]
[167.06231689 -390.72769165]
[157.10321045 -379.34036255]
[144.11161804 -371.58963013]
[129.36032104 -368.23486328]
[128.02207947 -353.29467773]
[126.68384552 -338.35449219]
[125.34561157 -323.41430664]
[137.90783691 -310.09866333]
[136.72743225 -291.51052856]
[122.08821106 -279.48522949]
[121.19539642 -264.51181030]
[128.16143799 -251.34658813]
[119.61645508 -238.03141785]
[118.72364044 -223.05801392]
[117.94231415 -208.07836914]
[117.27252960 -193.09333801]
[116.60274506 -178.10829163]
[130.88186646 -173.62989807]
[143.52487183 -165.60173035]
[153.66668701 -154.56596375]
[160.61155701 -141.27081299]
[163.88075256 -126.61977386]
[163.24559021 -111.61026001]
[158.74331665 -97.26567078]
[150.67514038 -84.56562042]
[139.58596802 -74.37905121]
[126.22764587 -67.40477753]
[111.50798035 -64.12352753]
[110.83818817 -49.13849258]
[110.16840363 -34.15345383]
[109.49861908 -19.16841507]
[109.05201721 -4.17506456]
[108.82868958 10.82327271]
[108.60536194 25.82160950]
[108.38203430 40.81994629]
[108.15870667 55.81828308]
[118.68477631 66.29384613]
[118.67195129 81.50747681]
[107.61284637 92.47715759]
[109.28438568 107.38373566]
[112.82405853 121.96011353]
[116.36373138 136.53648376]
[119.90340424 151.11285400]
[127.63243866 138.25743103]
[141.77511597 133.25898743]
[155.86561584 138.40272522]
[163.46191406 151.33702087]
[161.09112549 166.14848328]
[149.83711243 176.06550598]
[134.84507751 176.55416870]
[122.96817017 167.38948059]
[124.97218323 182.25500488]
[126.97619629 197.12054443]
[128.98020935 211.98606873]
[138.49186707 224.62881470]
[132.52430725 238.27569580]
[144.11457825 252.58467102]
[136.82093811 268.54617310]
[139.04606628 283.38021851]
[141.27117920 298.21426392]
[143.49629211 313.04830933]
[146.70956421 327.70010376]
[150.89657593 342.10388184]
[155.08358765 356.50765991]
[166.36544800 367.59957886]
[162.48831177 381.98071289]
[166.67532349 396.38449097]
[169.91473389 399.27587891]
[171.86901855 402.70300293]
[172.52755737 406.19610596]
[172.03338623 409.33020020]
[170.65530396 411.77130127]
[173.97755432 426.39874268]
[177.29981995 441.02621460]
[180.62207031 455.65368652]
[183.94433594 470.28112793]
[187.26660156 484.90859985]
[190.58885193 499.53604126]
[205.66658020 500.10559082]
[220.08287048 504.55905151]
[232.85476685 512.59283447]
[243.11146545 523.65905762]
[250.15367126 537.00335693]
[253.50120544 551.71582031]
[252.92584229 566.79333496]
[248.46681213 581.20788574]
[240.42813110 593.97668457]
[229.35791016 604.22912598]
[216.01091003 611.26617432]
[201.29714966 614.60803223]
[186.21986389 614.02685547]
[171.80703735 609.56225586]
[159.04133606 601.51861572]
[148.79318237 590.44445801]
[141.76129150 577.09472656]
[138.42512512 562.37969971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 192]
[5 191]
[6 190]
[7 189]
[8 188]
[9 187]
[10 186]
[11 181]
[12 180]
[14 178]
[15 177]
[16 176]
[26 175]
[27 174]
[28 173]
[29 172]
[32 170]
[34 168]
[35 167]
[36 166]
[37 165]
[38 157]
[39 156]
[40 155]
[41 154]
[59 153]
[62 150]
[63 149]
[64 148]
[65 147]
[66 146]
[69 145]
[70 144]
[71 143]
[72 142]
[83 131]
[84 130]
[85 129]
[87 128]
[88 127]
[90 125]
[91 124]
[96 121]
[97 120]
[98 119]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
