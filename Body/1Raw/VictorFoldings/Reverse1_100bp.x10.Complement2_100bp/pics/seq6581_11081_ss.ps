%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxAUUGUAAGUGUCGGUGUCUUGAUUAGUAUAAAAUAUAGAAGAAGCUUUGGUGUGAAUAGGGGUGGAACCGAUAGUAGUGGGCUACUCCGUUGGUCGGUCU\
) } def
/len { sequence length } bind def

/coor [
[82.30328369 660.75079346]
[72.03850555 649.75311279]
[63.96952438 637.05639648]
[58.37116623 623.09313965]
[55.43410492 608.33886719]
[55.25838470 593.29614258]
[57.84998322 578.47729492]
[63.12063599 564.38708496]
[70.89082336 551.50531006]
[80.89590454 540.27087402]
[92.79509735 531.06634521]
[106.18312073 524.20520020]
[120.60399628 519.92114258]
[119.04347229 505.00250244]
[117.48294830 490.08392334]
[108.46355438 478.23065186]
[114.72316742 463.70040894]
[113.16264343 448.78179932]
[111.60211945 433.86318970]
[102.58272552 422.00994873]
[108.84234619 407.47970581]
[107.28182220 392.56109619]
[95.95242310 402.39190674]
[81.17560577 399.81396484]
[73.84429932 386.72763062]
[79.36286163 372.77969360]
[93.66321564 368.25201416]
[106.20281219 376.48083496]
[105.75621033 361.48748779]
[105.30960083 346.49414062]
[104.86299896 331.50079346]
[94.84879303 317.08959961]
[103.71157837 300.94857788]
[103.04179382 285.96353149]
[102.37200928 270.97851562]
[92.14435577 256.71798706]
[100.76584625 240.44682312]
[99.87303162 225.47340393]
[98.98021698 210.50000000]
[98.08739471 195.52659607]
[97.19458008 180.55319214]
[96.30176544 165.57978821]
[95.40895081 150.60638428]
[86.92782593 138.36221313]
[93.83000946 124.12596893]
[92.93719482 109.15256500]
[85.23162079 122.02207184]
[72.47624969 129.91513062]
[57.52064896 131.06842041]
[43.70594788 125.22427368]
[34.11837769 113.68830872]
[30.89983559 99.03767395]
[34.76934433 84.54537201]
[44.86244965 73.44901276]
[58.92432404 68.22754669]
[73.81350708 70.04747009]
[86.20372772 78.50220490]
[93.32697296 91.70296478]
[94.88749695 76.78436279]
[96.44801331 61.86575699]
[88.94710541 51.37294006]
[90.55400085 38.97932816]
[99.86637878 31.25882149]
[101.64884186 16.36510277]
[103.43131256 1.47138608]
[105.21377563 -13.42233086]
[106.99623871 -28.31604767]
[107.77756500 -43.29568481]
[107.55423737 -58.29402161]
[107.33090973 -73.29235840]
[107.10758209 -88.29069519]
[96.04847717 -99.26038361]
[96.03565216 -114.47401428]
[106.56172180 -124.94957733]
[106.33839417 -139.94790649]
[98.39649200 -153.63136292]
[105.94344330 -166.47241211]
[105.72011566 -181.47074890]
[105.49678802 -196.46908569]
[90.97369385 -204.37298584]
[82.46701050 -218.44181824]
[82.21749115 -234.78668213]
[90.19855499 -248.94502258]
[104.14936829 -257.09899902]
[103.70276642 -272.09234619]
[103.25615692 -287.08569336]
[89.83715820 -294.42584229]
[81.94598389 -307.41143799]
[81.61634064 -322.50308228]
[88.83663940 -335.64550781]
[101.58000183 -343.35733032]
[101.13339233 -358.35067749]
[100.68679047 -373.34402466]
[100.24018097 -388.33740234]
[99.79357910 -403.33074951]
[85.26811218 -407.55758667]
[72.76088715 -416.06784058]
[63.49721527 -428.02774048]
[58.38467026 -442.26562500]
[57.92412186 -457.38656616]
[62.16069031 -471.90921021]
[70.67932129 -484.41070557]
[82.64544678 -493.66638184]
[96.88674164 -498.76937866]
[112.00799561 -499.21978760]
[126.52777863 -494.97348022]
[139.02359009 -486.44647217]
[148.27122498 -474.47415161]
[153.36468506 -460.22946167]
[153.80496216 -445.10791016]
[149.54893494 -430.59097290]
[141.01356506 -418.10086060]
[129.03504944 -408.86126709]
[114.78692627 -403.77734375]
[115.23352814 -388.78399658]
[115.68013763 -373.79064941]
[116.12673950 -358.79730225]
[116.57334900 -343.80395508]
[129.75312805 -336.86428833]
[137.74287415 -324.17492676]
[138.31208801 -309.09042358]
[131.20782471 -295.65814209]
[118.24951172 -287.53228760]
[118.69611359 -272.53894043]
[119.14272308 -257.54559326]
[131.56877136 -251.87901306]
[140.38337708 -241.36085510]
[143.82266235 -228.00718689]
[141.16020203 -214.40977478]
[132.85966492 -203.23313904]
[120.49512482 -196.69241333]
[120.71845245 -181.69407654]
[120.94178009 -166.69573975]
[128.86770630 -154.08508301]
[121.33673096 -140.17123413]
[121.56005859 -125.17290497]
[132.39337158 -115.01538849]
[132.83351135 -99.80812073]
[122.10591888 -88.51402283]
[122.32924652 -73.51568604]
[122.55257416 -58.51734924]
[122.77590179 -43.51901245]
[131.91619873 -55.41249466]
[145.99931335 -60.57639694]
[160.66143799 -57.41062164]
[171.35935974 -46.89612579]
[174.77819824 -32.29093552]
[169.85859680 -18.12063217]
[158.12493896 -8.77603531]
[143.21304321 -7.15267086]
[129.74351501 -13.75355530]
[121.88996124 -26.53358269]
[120.10749054 -11.63986492]
[118.32502747 3.25385189]
[116.54256439 18.14756966]
[114.76009369 33.04128647]
[122.52573395 48.77856064]
[111.36662292 63.42628098]
[109.80609894 78.34488678]
[108.24557495 93.26348877]
[107.91059875 108.25975037]
[108.80341339 123.23315430]
[117.34839630 136.54832458]
[110.38235474 149.71356201]
[111.27516937 164.68696594]
[112.16799164 179.66038513]
[113.06080627 194.63378906]
[113.95362091 209.60719299]
[114.84643555 224.58059692]
[115.73925018 239.55400085]
[124.85062408 248.68339539]
[125.28598785 261.17315674]
[117.35704803 270.30871582]
[118.02683258 285.29376221]
[118.69661713 300.27880859]
[127.67105865 309.54281616]
[127.92042542 322.03768921]
[119.85634613 331.05419922]
[120.30295563 346.04754639]
[120.74955750 361.04089355]
[121.19616699 376.03424072]
[122.20042419 391.00057983]
[123.76094818 405.91918945]
[132.89196777 418.83950806]
[126.52072906 432.30267334]
[128.08125305 447.22128296]
[129.64176941 462.13989258]
[138.77278137 475.06024170]
[132.40155029 488.52337646]
[133.96208191 503.44198608]
[135.52259827 518.36059570]
[150.51785278 519.56762695]
[165.03593445 523.50976562]
[178.58233643 530.05261230]
[190.69570923 538.97344971]
[200.96345520 549.96838379]
[209.03585815 562.66290283]
[214.63798523 576.62463379]
[217.57901001 591.37811279]
[217.75878906 606.42077637]
[215.17118835 621.24035645]
[209.90432739 635.33203125]
[202.13761902 648.21582031]
[192.13557434 659.45300293]
[180.23886108 668.66076660]
[166.85267639 675.52551270]
[152.43296814 679.81347656]
[137.47084045 681.37854004]
[122.47591400 680.16741943]
[107.95890045 676.22143555]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 191]
[14 190]
[15 189]
[17 187]
[18 186]
[19 185]
[21 183]
[22 182]
[28 181]
[29 180]
[30 179]
[31 178]
[33 175]
[34 174]
[35 173]
[37 170]
[38 169]
[39 168]
[40 167]
[41 166]
[42 165]
[43 164]
[45 162]
[46 161]
[58 160]
[59 159]
[60 158]
[63 156]
[64 155]
[65 154]
[66 153]
[67 152]
[68 142]
[69 141]
[70 140]
[71 139]
[74 136]
[75 135]
[77 133]
[78 132]
[79 131]
[84 125]
[85 124]
[86 123]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
