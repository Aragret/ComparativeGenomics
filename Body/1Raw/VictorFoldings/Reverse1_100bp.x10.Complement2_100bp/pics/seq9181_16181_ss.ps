%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[70.32267761 642.67138672]
[62.69438171 655.81964111]
[50.61208725 665.04388428]
[35.91825485 668.93743896]
[20.85359383 666.90661621]
[7.71535063 659.26098633]
[-1.49298763 647.16656494]
[-5.36721516 632.46765137]
[-3.31654143 617.40570068]
[4.34632158 604.27752686]
[16.45284271 595.08508301]
[31.15686417 591.23016357]
[33.16087723 576.36468506]
[23.95421028 564.71252441]
[25.77479935 549.60821533]
[38.05908203 540.03039551]
[40.06309509 525.16485596]
[42.06710815 510.29934692]
[44.07112122 495.43380737]
[45.52054214 480.50399780]
[46.41335678 465.53060913]
[39.44731522 452.36535645]
[47.99229813 439.05017090]
[48.88511276 424.07678223]
[49.77793121 409.10336304]
[50.67074585 394.12997437]
[51.56356049 379.15655518]
[52.45637894 364.18316650]
[50.69871140 361.99942017]
[49.70014954 358.98785400]
[49.78032684 355.43411255]
[51.14966965 351.73419189]
[53.87429810 348.35333252]
[55.65676498 333.45959473]
[57.43923187 318.56588745]
[58.99975586 303.64727783]
[60.33798981 288.70709229]
[61.67622375 273.76690674]
[62.90319824 258.81716919]
[64.01884460 243.85871887]
[65.13449860 228.90026855]
[56.57526398 241.21853638]
[43.99526215 249.38819885]
[29.26065636 252.19735718]
[14.55723763 249.22929382]
[2.06617093 240.92427063]
[-6.35956812 228.51432800]
[-9.47007084 213.84037781]
[-6.80391312 199.07922363]
[1.24339640 186.42059326]
[13.47808743 177.74232483]
[28.08521652 174.33178711]
[42.89790344 176.69490051]
[55.71877289 184.48114014]
[64.64592743 196.53543091]
[68.35496521 211.06768799]
[72.54197693 196.66390991]
[76.72898865 182.26013184]
[80.16004944 167.65780640]
[82.82584381 152.89659119]
[85.49163818 138.13537598]
[88.15743256 123.37415314]
[90.82322693 108.61293793]
[93.15871429 93.79586792]
[95.16272736 78.93033600]
[97.16674042 64.06481171]
[89.98156738 53.35331726]
[91.95675659 41.01304245]
[101.49487305 33.57322311]
[103.71998596 18.73917770]
[105.94510651 3.90513396]
[108.17021942 -10.92890930]
[101.03475189 -27.90437889]
[112.49388885 -41.19554901]
[114.49790192 -56.06107712]
[116.50191498 -70.92660522]
[109.11449432 -87.79395294]
[120.37447357 -101.25426483]
[122.15693665 -116.14797974]
[123.93939972 -131.04170227]
[116.30167389 -147.79719543]
[127.36000061 -161.42364502]
[128.92051697 -176.34225464]
[130.48104858 -191.26086426]
[131.93046570 -206.19067383]
[133.26869202 -221.13084412]
[134.60693359 -236.07102966]
[135.94515991 -251.01121521]
[137.06082153 -265.96966553]
[137.95362854 -280.94308472]
[138.84645081 -295.91647339]
[139.51623535 -310.90151978]
[139.96284485 -325.89486694]
[132.63984680 -339.91931152]
[140.75265503 -352.41055298]
[141.19926453 -367.40390015]
[141.64587402 -382.39724731]
[142.09248352 -397.39059448]
[142.53907776 -412.38397217]
[128.66035461 -418.58471680]
[118.21466064 -429.62808228]
[112.79486847 -443.82998657]
[113.22747040 -459.02478027]
[119.44649506 -472.89532471]
[130.50358582 -483.32650757]
[144.71261597 -488.72760010]
[159.90681458 -488.27502441]
[173.76916504 -482.03775024]
[184.18577576 -470.96694946]
[189.56819153 -456.75082397]
[189.09561157 -441.55722046]
[182.84011841 -427.70309448]
[171.75561523 -417.30105591]
[157.53242493 -411.93734741]
[157.08583069 -396.94400024]
[156.63922119 -381.95065308]
[156.19261169 -366.95730591]
[155.74600220 -351.96395874]
[163.10093689 -339.01196289]
[154.95619202 -325.44827271]
[154.50958252 -310.45492554]
[157.07444763 -306.42620850]
[157.13574219 -300.74349976]
[153.81985474 -295.02368164]
[152.92703247 -280.05026245]
[152.03422546 -265.07687378]
[154.47801208 -260.97357178]
[154.37007141 -255.29154968]
[150.88534546 -249.67298889]
[149.54711914 -234.73280334]
[148.20887756 -219.79261780]
[146.87065125 -204.85243225]
[149.40486145 -197.90985107]
[145.39964294 -189.70033264]
[143.83912659 -174.78172302]
[142.27861023 -159.86312866]
[149.64973450 -150.27182007]
[148.47172546 -137.83010864]
[138.83311462 -129.25923157]
[137.05065918 -114.36551666]
[135.26818848 -99.47179413]
[142.49569702 -89.77181244]
[141.13258362 -77.34902191]
[131.36744690 -68.92259216]
[129.36343384 -54.05706406]
[127.35941315 -39.19153595]
[134.44169617 -29.38501930]
[132.89378357 -16.98390198]
[123.00426483 -8.70379257]
[120.77915192 6.13025093]
[118.55403137 20.96429443]
[116.32891083 35.79833984]
[123.62255096 51.75984573]
[112.03227234 66.06882477]
[110.02825928 80.93435669]
[108.02424622 95.79988098]
[109.90418243 99.16710663]
[110.29077911 103.34662628]
[108.85451508 107.65292358]
[105.58444214 111.27873230]
[102.91864777 126.03994751]
[100.25285339 140.80116272]
[97.58705902 155.56237793]
[94.92126465 170.32359314]
[107.19376373 161.69888306]
[122.14912415 162.85522461]
[132.94996643 173.26397705]
[134.65826416 188.16638184]
[126.49304199 200.74926758]
[112.18730164 205.25990295]
[98.28144836 199.63609314]
[91.13276672 186.44714355]
[86.94575500 200.85092163]
[82.75874329 215.25469971]
[80.09294891 230.01591492]
[78.97730255 244.97436523]
[77.86164856 259.93283081]
[80.34411621 268.72344971]
[76.61640930 275.10513306]
[75.27817535 290.04531860]
[73.93994141 304.98550415]
[76.37065887 311.13394165]
[75.46706390 316.74468994]
[72.33294678 320.34835815]
[70.55048370 335.24206543]
[68.76802063 350.13577271]
[67.42978668 365.07595825]
[66.53696442 380.04937744]
[65.64414978 395.02279663]
[64.75133514 409.99618530]
[63.85852051 424.96960449]
[62.96570206 439.94299316]
[69.86788177 454.17922974]
[61.38676071 466.42340088]
[60.49394608 481.39682007]
[73.27463531 473.54479980]
[87.43337250 478.49758911]
[92.53287506 492.60415649]
[84.81396484 505.46566772]
[69.96675110 507.60110474]
[58.93664932 497.43783569]
[56.93263626 512.30334473]
[54.92862320 527.16888428]
[52.92461014 542.03442383]
[62.23410034 554.52325439]
[59.98997879 569.57043457]
[48.02640533 578.36865234]
[46.02239227 593.23419189]
[59.18070602 600.84521484]
[68.42082977 612.91534424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 208]
[13 207]
[16 204]
[17 203]
[18 202]
[19 201]
[20 195]
[21 194]
[23 192]
[24 191]
[25 190]
[26 189]
[27 188]
[28 187]
[33 186]
[34 185]
[35 184]
[36 181]
[37 180]
[38 179]
[39 177]
[40 176]
[41 175]
[56 174]
[57 173]
[58 172]
[59 164]
[60 163]
[61 162]
[62 161]
[63 160]
[64 156]
[65 155]
[66 154]
[69 152]
[70 151]
[71 150]
[72 149]
[74 146]
[75 145]
[76 144]
[78 141]
[79 140]
[80 139]
[82 136]
[83 135]
[84 134]
[85 132]
[86 131]
[87 130]
[88 129]
[89 126]
[90 125]
[91 124]
[92 121]
[93 120]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
