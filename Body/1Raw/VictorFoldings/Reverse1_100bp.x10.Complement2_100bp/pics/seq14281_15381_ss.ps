%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCCAUCCUAACCACGACACCCACUUUCUCAUACUACCCCACCACCAACACCAUUUGAAAUUAUCACAUCCUUCGACUUAUUAAAUACUUCCUCUCCCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[167.49343872 600.46594238]
[180.36273193 592.60260010]
[175.96173096 578.26275635]
[171.56072998 563.92291260]
[167.15974426 549.58300781]
[162.65211487 535.27636719]
[151.37503052 525.54614258]
[154.49224854 510.03506470]
[149.87823486 495.76232910]
[145.26423645 481.48959351]
[140.65022278 467.21688843]
[137.93673706 481.96939087]
[130.63761902 495.07369995]
[119.52313232 505.14685059]
[105.76624298 511.12579346]
[90.81873322 512.37957764]
[76.25804901 508.77587891]
[63.62082672 500.69500732]
[54.24069214 488.98974609]
[49.10755539 474.89541626]
[48.76313019 459.89935303]
[53.24375916 445.58419800]
[62.07659912 433.46063232]
[74.32949066 424.80807495]
[88.70936584 420.53967285]
[103.69867706 421.10586548]
[117.71556854 426.44692993]
[129.28079224 435.99917603]
[137.17393494 448.75473022]
[136.28112793 433.78131104]
[135.38830566 418.80792236]
[134.49549866 403.83450317]
[116.69375610 398.50177002]
[102.26800537 386.73492432]
[93.43560791 370.31018066]
[91.56657410 351.72213745]
[96.97116852 333.80490112]
[108.84868622 319.30007935]
[125.40599823 310.43707275]
[123.40198517 295.57153320]
[121.39797211 280.70599365]
[119.28334808 265.85580444]
[117.05822754 251.02175903]
[103.11896515 241.61242676]
[100.24121094 224.69990540]
[110.68723297 210.66780090]
[108.24150848 195.86853027]
[98.53258514 184.57313538]
[103.91624451 169.69607544]
[101.47052002 154.89680481]
[99.02479553 140.09753418]
[96.57906342 125.29826355]
[94.13333893 110.49899292]
[91.46754456 95.73777771]
[88.58226776 81.01788330]
[85.69699860 66.29799652]
[78.81590271 79.62655640]
[65.87470245 87.21109772]
[50.88336563 86.70146942]
[38.48711395 78.25558472]
[32.52706909 64.49048615]
[34.85001373 49.67144775]
[44.73615646 38.39030457]
[59.12216949 34.14264297]
[73.55039215 38.24464798]
[83.55019379 49.42550278]
[82.65737152 34.45209503]
[74.11238861 21.13692284]
[81.07843018 7.97168303]
[80.18561554 -7.00172281]
[76.55096436 -15.38188648]
[79.39266205 -22.20439148]
[78.72287750 -37.18943024]
[78.05309296 -52.17446899]
[77.38330841 -67.15950775]
[76.71352386 -82.14454651]
[68.36772919 -95.58546448]
[75.52900696 -108.64553070]
[74.85922241 -123.63056946]
[74.18943787 -138.61561584]
[70.67996216 -147.04896545]
[73.62291718 -153.82839966]
[70.47879791 -159.64440918]
[70.70925140 -165.32278442]
[73.39293671 -169.27334595]
[73.39293671 -184.27334595]
[73.39293671 -199.27334595]
[73.39293671 -214.27334595]
[73.39293671 -229.27334595]
[73.16960907 -244.27168274]
[72.72300720 -259.26501465]
[72.27639771 -274.25839233]
[71.60661316 -289.24340820]
[70.71379852 -304.21682739]
[69.82098389 -319.19021606]
[68.92816925 -334.16363525]
[54.55158234 -339.10147095]
[43.16229630 -349.16888428]
[36.49708557 -362.83062744]
[35.57234955 -378.00341797]
[40.52910614 -392.37347412]
[50.61148071 -403.74951172]
[64.28198242 -410.39675903]
[79.45597076 -411.30154419]
[93.81951141 -406.32586670]
[105.18227386 -396.22854614]
[111.81151581 -382.54931641]
[112.69633484 -367.37414551]
[107.70178986 -353.01715088]
[97.58951569 -341.66769409]
[83.90157318 -335.05645752]
[84.79438782 -320.08303833]
[85.68720245 -305.10964966]
[86.58001709 -290.13623047]
[89.49408722 -286.35241699]
[90.06211853 -280.69784546]
[87.26975250 -274.70498657]
[87.71635437 -259.71163940]
[88.16296387 -244.71829224]
[90.96307373 -240.84938049]
[91.36250305 -235.18038940]
[88.39293671 -229.27334595]
[88.39293671 -214.27334595]
[88.39293671 -199.27334595]
[88.39293671 -184.27334595]
[88.39293671 -169.27334595]
[88.61626434 -154.27500916]
[89.17447662 -139.28540039]
[89.84426117 -124.30035400]
[90.51404572 -109.31531525]
[98.81193542 -96.94622803]
[91.69856262 -82.81433105]
[92.36834717 -67.82929230]
[93.03813171 -52.84425354]
[93.70791626 -37.85921478]
[94.37770081 -22.87417603]
[95.15901947 -7.89453888]
[96.05184174 7.07886696]
[104.53295898 19.32304192]
[97.63078308 33.55928040]
[98.52359772 48.53268433]
[100.41688538 63.41271973]
[103.30216217 78.13261414]
[106.18743134 92.85250092]
[109.76513672 96.68838501]
[110.93899536 102.25573730]
[108.93260956 108.05326843]
[111.37833405 122.85253906]
[113.82406616 137.65180969]
[116.26979065 152.45108032]
[118.71551514 167.25035095]
[128.59938049 179.60429382]
[123.04077911 193.42280579]
[125.48650360 208.22207642]
[137.26609802 214.75320435]
[143.04896545 226.70179749]
[140.92558289 239.60813904]
[131.89227295 248.79664612]
[134.11738586 263.63070679]
[138.48518372 271.65316772]
[136.26350403 278.70199585]
[138.26751709 293.56753540]
[140.27153015 308.43304443]
[151.74389648 310.13851929]
[162.46339417 314.53656006]
[171.80865479 321.36605835]
[179.23947144 330.22528076]
[184.32798767 340.59524536]
[186.78330994 351.87036133]
[186.46815491 363.39358521]
[183.40650940 374.49484253]
[177.78190613 384.52996826]
[169.92642212 392.91799927]
[160.30111694 399.17498779]
[149.46890259 402.94168091]
[150.36170959 417.91510010]
[151.25453186 432.88848877]
[152.14733887 447.86190796]
[154.92295837 462.60287476]
[159.53697205 476.87561035]
[164.15097046 491.14834595]
[168.76498413 505.42105103]
[180.37208557 516.17211914]
[176.92485046 530.66235352]
[182.54223633 537.86529541]
[181.49958801 545.18206787]
[185.90058899 559.52191162]
[190.30157471 573.86175537]
[194.70257568 588.20159912]
[209.76733398 587.49176025]
[224.53517151 590.55151367]
[238.07774353 597.18853760]
[249.54376221 606.98553467]
[258.21246338 619.32666016]
[263.53894043 633.43621826]
[265.18835449 648.42724609]
[263.05703735 663.35736084]
[257.27893066 677.28802490]
[248.21728516 689.34362793]
[236.44169617 698.76629639]
[222.69241333 704.96368408]
[207.83369446 707.54626465]
[192.79962158 706.35168457]
[178.53520203 701.45501709]
[165.93713379 693.16412354]
[155.79733276 682.00012207]
[148.75318909 668.66479492]
[145.24752808 653.99639893]
[145.50068665 638.91705322]
[149.49678040 624.37463379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 189]
[3 188]
[4 187]
[5 186]
[6 184]
[8 182]
[9 181]
[10 180]
[11 179]
[29 178]
[30 177]
[31 176]
[32 175]
[39 163]
[40 162]
[41 161]
[42 159]
[43 158]
[46 154]
[47 153]
[49 151]
[50 150]
[51 149]
[52 148]
[53 147]
[54 144]
[55 143]
[56 142]
[66 141]
[67 140]
[69 138]
[70 137]
[72 136]
[73 135]
[74 134]
[75 133]
[76 132]
[78 130]
[79 129]
[80 128]
[82 127]
[85 126]
[86 125]
[87 124]
[88 123]
[89 122]
[90 119]
[91 118]
[92 117]
[93 114]
[94 113]
[95 112]
[96 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
