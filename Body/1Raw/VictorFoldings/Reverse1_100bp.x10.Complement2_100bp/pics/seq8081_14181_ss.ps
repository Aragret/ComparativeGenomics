%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[90.04985046 609.04742432]
[75.84253693 601.59545898]
[72.95221710 585.81488037]
[83.59609985 573.81121826]
[84.04270172 558.81787109]
[84.48931122 543.82452393]
[84.93591309 528.83117676]
[85.38252258 513.83782959]
[85.82912445 498.84451294]
[83.26425934 494.81579590]
[83.20296478 489.13308716]
[86.51885986 483.41323853]
[87.41167450 468.43984985]
[88.30448914 453.46643066]
[89.19730377 438.49304199]
[89.86708832 423.50799561]
[82.51216125 410.55599976]
[90.65691376 396.99230957]
[83.30197906 384.04031372]
[91.44673157 370.47662354]
[91.89334106 355.48327637]
[84.53840637 342.53128052]
[92.68315887 328.96759033]
[93.12976074 313.97424316]
[90.18680573 307.19479370]
[93.69628906 298.76144409]
[94.36607361 283.77642822]
[82.49700165 271.86154175]
[82.92614746 254.71130371]
[95.87619019 242.95054626]
[96.32279968 227.95719910]
[96.76940155 212.96385193]
[97.21601105 197.97050476]
[97.55098724 182.97424316]
[97.77431488 167.97590637]
[97.21610260 152.98629761]
[95.87786865 138.04611206]
[94.53963470 123.10591888]
[93.20140076 108.16573334]
[90.86591339 93.34867096]
[87.54365540 78.72120667]
[84.22139740 64.09375000]
[73.61974335 52.35000229]
[78.34599304 38.22513962]
[75.02373505 23.59767914]
[71.70146942 8.97021866]
[58.88082123 -4.24766636]
[64.72135925 -20.79623222]
[61.18169022 -35.37260818]
[57.64201736 -49.94898224]
[53.99393082 -64.49860382]
[50.02183151 -78.96312714]
[45.83482361 -93.36690521]
[41.64781189 -107.77069092]
[37.24681091 -122.11053467]
[32.63280487 -136.38327026]
[28.01879501 -150.65600586]
[23.40478516 -164.92874146]
[18.79077530 -179.20147705]
[14.55350971 -164.81239319]
[4.18113518 -153.97662354]
[-10.00913239 -149.11491394]
[-24.84715080 -151.31335449]
[-37.01807022 -160.08084106]
[-43.80287552 -173.45867920]
[-43.68582153 -188.45822144]
[-36.69306183 -201.72853088]
[-24.38679695 -210.30500793]
[-9.51627350 -212.27162170]
[4.59639120 -207.18902588]
[14.79840469 -196.19268799]
[12.57328701 -211.02673340]
[10.34817028 -225.86077881]
[7.09514666 -229.94303894]
[5.85709810 -234.41748047]
[6.44598198 -238.45086670]
[8.37031651 -241.40539551]
[6.80979347 -256.32400513]
[5.24927044 -271.24261475]
[1.24405289 -279.45211792]
[3.77827168 -286.39471436]
[2.44003749 -301.33489990]
[1.10180330 -316.27508545]
[-0.23643091 -331.21527100]
[-1.57466507 -346.15545654]
[-3.02408385 -361.08526611]
[-4.58460665 -376.00387573]
[-6.14512968 -390.92245483]
[-14.79194069 -378.66552734]
[-28.95422363 -373.72286987]
[-43.34980011 -377.93801880]
[-52.60947418 -389.73880005]
[-53.27961349 -404.72381592]
[-45.11027908 -417.30404663]
[-31.14842415 -422.78735352]
[-16.60148048 -419.12860107]
[-6.89464760 -407.69134521]
[-6.67131996 -422.68969727]
[-6.44799232 -437.68801880]
[-20.28421974 -444.05032349]
[-30.33158684 -455.49453735]
[-34.84932709 -470.03793335]
[-33.05471802 -485.16073608]
[-25.25868416 -498.24285889]
[-12.81193447 -507.01770020]
[2.12905574 -509.96502686]
[16.97566986 -506.57418823]
[29.15563965 -497.43261719]
[36.55871582 -484.12417603]
[37.90226746 -468.95465088]
[32.95351791 -454.55221558]
[22.56986618 -443.41223145]
[8.55034542 -437.46469116]
[8.32701778 -422.46636963]
[8.10369015 -407.46801758]
[8.77347469 -392.48300171]
[10.33399773 -377.56439209]
[11.89452076 -362.64578247]
[15.71683311 -356.32031250]
[13.36551952 -347.49368286]
[14.70375443 -332.55349731]
[16.04198837 -317.61331177]
[17.38022232 -302.67312622]
[18.71845627 -287.73294067]
[20.16787529 -272.80313110]
[21.72839928 -257.88452148]
[23.28892136 -242.96592712]
[25.18221283 -228.08589172]
[27.40733147 -213.25184631]
[29.63244820 -198.41780090]
[33.06351089 -183.81547546]
[37.67751694 -169.54275513]
[42.29152679 -155.27001953]
[46.90553665 -140.99728394]
[51.51954651 -126.72454834]
[55.28830719 -123.79103851]
[57.25426102 -118.45886230]
[56.05159378 -111.95770264]
[60.23860550 -97.55391693]
[64.42561340 -83.15013885]
[68.10536194 -80.10571289]
[69.91168976 -74.71737671]
[68.51599121 -68.25490570]
[73.23434448 -62.56641006]
[72.21839142 -53.48865509]
[75.75806427 -38.91228104]
[79.29773712 -24.33590508]
[89.46156311 -17.77670097]
[92.52982330 -5.66185093]
[86.32893372 5.64795876]
[89.65119171 20.27541924]
[92.97344971 34.90287781]
[103.33747101 45.60036850]
[98.84885406 60.77148819]
[102.17111206 75.39894867]
[105.49337006 90.02640533]
[111.97457123 76.49887848]
[124.68421936 68.53238678]
[139.68408203 68.59544373]
[152.32630920 76.66850281]
[158.69354248 90.25004578]
[156.81285095 105.13167572]
[147.26696777 116.70216370]
[133.01380920 121.37626648]
[118.46984863 117.70566559]
[108.14158630 106.82749939]
[109.47982025 121.76768494]
[110.81805420 136.70787048]
[112.15628815 151.64805603]
[121.70680237 140.08139038]
[136.43449402 137.23619080]
[149.60604858 144.41322327]
[155.19963074 158.33126831]
[150.65791321 172.62716675]
[138.05731201 180.76502991]
[123.15866089 179.02435303]
[112.77265167 168.19923401]
[112.54932404 183.19757080]
[115.55062103 191.82484436]
[112.20935822 198.41709900]
[111.76275635 213.41044617]
[111.31614685 228.40380859]
[110.86954498 243.39715576]
[121.17289734 252.07214355]
[124.54943848 264.90997314]
[119.98316193 277.16683960]
[109.35111237 284.44619751]
[108.68132782 299.43124390]
[108.12311554 314.42083740]
[107.67650604 329.41418457]
[114.99949646 343.43862915]
[106.88668823 355.92987061]
[106.44007874 370.92321777]
[113.76306915 384.94766235]
[105.65026093 397.43890381]
[112.97325134 411.46334839]
[104.86044312 423.95458984]
[107.65280914 429.94744873]
[107.08477783 435.60202026]
[104.17070770 439.38583374]
[103.27789307 454.35925293]
[102.38507843 469.33267212]
[101.49226379 484.30606079]
[100.82247925 499.29110718]
[100.37586975 514.28442383]
[99.92926788 529.27783203]
[99.48265839 544.27117920]
[99.03605652 559.26452637]
[98.58944702 574.25787354]
[108.49999237 586.87371826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 209]
[5 208]
[6 207]
[7 206]
[8 205]
[9 204]
[12 203]
[13 202]
[14 201]
[15 200]
[16 197]
[18 195]
[20 193]
[21 192]
[23 190]
[24 189]
[26 188]
[27 187]
[30 183]
[31 182]
[32 181]
[33 180]
[34 178]
[35 177]
[36 169]
[37 168]
[38 167]
[39 166]
[40 156]
[41 155]
[42 154]
[44 152]
[45 151]
[46 150]
[48 147]
[49 146]
[50 145]
[51 143]
[52 140]
[53 139]
[54 138]
[55 135]
[56 134]
[57 133]
[58 132]
[59 131]
[71 130]
[72 129]
[73 128]
[77 127]
[78 126]
[79 125]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[86 118]
[87 117]
[88 116]
[97 115]
[98 114]
[99 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
