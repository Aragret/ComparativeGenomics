%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[-65.09584045 430.23495483]
[-57.40867996 443.14715576]
[-51.68355560 457.04107666]
[-48.04250336 471.62054443]
[-46.56312943 486.57476807]
[-47.27696609 501.58505249]
[-50.16880417 516.33142090]
[-55.17699814 530.49951172]
[-62.19479752 543.78741455]
[-71.07262421 555.91186523]
[-81.62123871 566.61444092]
[-93.61579895 575.66693115]
[-106.80064392 582.87652588]
[-120.89473724 588.08941650]
[-135.59765625 591.19458008]
[-150.59600830 592.12579346]
[-165.57011414 590.86322021]
[-180.20079041 587.43371582]
[-194.17617798 581.91052246]
[-207.19841003 574.41119385]
[-218.98988342 565.09570312]
[-229.29930115 554.16253662]
[-237.90689087 541.84478760]
[-244.62919617 528.40496826]
[-249.32290649 514.12957764]
[-251.88801575 499.32287598]
[-252.26980591 484.30047607]
[-250.46017456 469.38259888]
[-246.49766541 454.88720703]
[-240.46675110 441.12326050]
[-232.49598694 428.38415527]
[-222.75526428 416.94143677]
[-211.45220947 407.03897095]
[-198.82774353 398.88784790]
[-185.15097046 392.66180420]
[-170.71339417 388.49356079]
[-155.82275391 386.47195435]
[-140.79646301 386.64007568]
[-125.95478821 388.99435425]
[-111.61408997 393.48458862]
[-98.08003998 400.01507568]
[-89.66542053 387.59759521]
[-81.25080109 375.18008423]
[-72.83618927 362.76260376]
[-64.42156982 350.34509277]
[-56.00694656 337.92761230]
[-47.59233093 325.51010132]
[-47.59780884 320.73422241]
[-44.60316849 315.90420532]
[-38.73772430 312.85327148]
[-29.95712280 300.69183350]
[-21.17651939 288.53036499]
[-12.39591599 276.36892700]
[-4.16710854 263.82751465]
[-4.31939173 248.93368530]
[9.38062954 241.02041626]
[17.04122734 228.12408447]
[24.70182419 215.22775269]
[32.36242294 202.33143616]
[31.63427162 184.79756165]
[47.76880646 175.92297363]
[55.23654938 162.91401672]
[62.70429230 149.90505981]
[70.17203522 136.89611816]
[77.63977051 123.88716125]
[70.27846527 113.68235016]
[67.31266785 101.45406342]
[69.18097687 89.01073456]
[75.60709381 78.19261169]
[85.64067078 70.59956360]
[97.79783630 67.35453033]
[110.28067780 68.93742371]
[118.13243866 56.15657806]
[125.98419189 43.37573624]
[133.83595276 30.59489441]
[141.68769836 17.81405067]
[141.82841492 12.59607410]
[143.76310730 8.37585354]
[146.81130981 5.66966152]
[150.18626404 4.64887667]
[158.60089111 -7.76861906]
[154.55358887 -20.61517525]
[158.58529663 -33.26253891]
[169.01065063 -41.16153336]
[181.88819885 -41.60692596]
[190.48675537 -53.89776230]
[199.08532715 -66.18859863]
[200.25648499 -84.56548309]
[216.43568420 -91.36256409]
[224.85031128 -103.78005981]
[226.18666077 -119.54472351]
[239.73152161 -125.74035645]
[248.14614868 -138.15785217]
[256.56076050 -150.57534790]
[264.97537231 -162.99284363]
[273.39001465 -175.41033936]
[274.72634888 -191.17500305]
[288.27120972 -197.37063599]
[296.68585205 -209.78813171]
[285.31552124 -219.59794617]
[275.16098022 -230.66146851]
[266.35949707 -242.82907104]
[259.03015137 -255.93621826]
[253.27204895 -269.80563354]
[249.16305542 -284.24975586]
[246.75872803 -299.07324219]
[246.09161377 -314.07562256]
[247.17071533 -329.05401611]
[249.98143005 -343.80584717]
[254.48576355 -358.13159180]
[260.62280273 -371.83755493]
[268.30953979 -384.73837280]
[277.44201660 -396.65954590]
[287.89672852 -407.43984985]
[299.53228760 -416.93353271]
[312.19134521 -425.01220703]
[325.70269775 -431.56655884]
[339.88363647 -436.50799561]
[354.54235840 -439.76968384]
[369.48062134 -441.30752563]
[384.49639893 -441.10067749]
[399.38662720 -439.15197754]
[413.94995117 -435.48776245]
[427.98937988 -430.15759277]
[441.31506348 -423.23355103]
[453.74682617 -414.80929565]
[465.11648560 -404.99871826]
[475.27029419 -393.93450928]
[484.07095337 -381.76632690]
[491.39941406 -368.65869141]
[497.15661621 -354.78887939]
[501.26464844 -340.34448242]
[503.66796875 -325.52084351]
[504.33407593 -310.51840210]
[503.25399780 -295.54010010]
[500.44229126 -280.78845215]
[495.93698120 -266.46301270]
[489.79904175 -252.75744629]
[482.11145020 -239.85716248]
[472.97817993 -227.93659973]
[462.52273560 -217.15696716]
[450.88653564 -207.66406250]
[438.22692871 -199.58625793]
[424.71514893 -193.03279114]
[410.53390503 -188.09228516]
[395.87496948 -184.83157349]
[380.93658447 -183.29475403]
[365.92083740 -183.50259399]
[351.03073120 -185.45228577]
[336.46765137 -189.11747742]
[322.42855835 -194.44857788]
[309.10333252 -201.37350464]
[300.68872070 -188.95600891]
[299.95422363 -174.07952881]
[285.80749512 -166.99571228]
[277.39288330 -154.57821655]
[268.97827148 -142.16072083]
[260.56362915 -129.74322510]
[252.14901733 -117.32573700]
[251.41453552 -102.44924927]
[237.26780701 -95.36544037]
[228.85317993 -82.94794464]
[230.82707214 -71.01352692]
[223.91833496 -60.59944153]
[211.37615967 -57.59003830]
[202.77760315 -45.29919815]
[194.17903137 -33.00836182]
[197.81123352 -16.58746147]
[188.25509644 -2.33982539]
[171.01838684 0.64599973]
[162.60375977 13.06349564]
[154.46855164 25.66580772]
[146.61679077 38.44665146]
[138.76502991 51.22749329]
[130.91328430 64.00833130]
[123.06152344 76.78917694]
[131.63024902 91.62723541]
[131.52481079 108.76142120]
[122.77410889 123.49289703]
[107.77790833 131.78175354]
[90.64872742 131.35490417]
[83.18098450 144.36386108]
[75.71324158 157.37280273]
[68.24549866 170.38175964]
[60.77775955 183.39071655]
[63.38744736 196.02210999]
[56.89973450 206.70356750]
[45.25874710 209.99201965]
[37.59815216 222.88835144]
[29.93755341 235.78468323]
[22.27695656 248.68099976]
[21.88130188 264.49725342]
[8.72921848 271.48809814]
[23.49454308 268.84515381]
[35.88233185 277.30343628]
[38.79629898 292.01770020]
[30.56719208 304.55889893]
[15.90901470 307.74288940]
[3.21863842 299.74572754]
[-0.23446067 285.14950562]
[-9.01506424 297.31097412]
[-17.79566765 309.47244263]
[-26.57627106 321.63388062]
[-35.17483521 333.92471313]
[-43.58945465 346.34222412]
[-52.00407028 358.75970459]
[-60.41868973 371.17721558]
[-68.83330536 383.59469604]
[-77.24792480 396.01220703]
[-85.66254425 408.42968750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 210]
[42 209]
[43 208]
[44 207]
[45 206]
[46 205]
[47 204]
[50 203]
[51 202]
[52 201]
[53 200]
[54 193]
[56 191]
[57 190]
[58 189]
[59 188]
[61 185]
[62 184]
[63 183]
[64 182]
[65 181]
[72 176]
[73 175]
[74 174]
[75 173]
[76 172]
[80 171]
[81 170]
[85 167]
[86 166]
[87 165]
[89 162]
[90 161]
[92 159]
[93 158]
[94 157]
[95 156]
[96 155]
[98 153]
[99 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
