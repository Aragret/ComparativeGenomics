%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[77.15082550 610.16754150]
[63.37064362 616.31323242]
[48.46924973 618.68194580]
[33.46263885 617.11218262]
[19.37398911 611.71105957]
[7.16388798 602.84674072]
[-2.33515954 591.12365723]
[-8.47549248 577.34112549]
[-10.83845234 562.43884277]
[-9.26292992 547.43280029]
[-3.85634589 533.34625244]
[5.01266956 521.13958740]
[16.73941231 511.64505005]
[30.52433395 505.51004028]
[45.42755508 503.15283203]
[46.98807907 488.23422241]
[48.54859924 473.31564331]
[50.10912323 458.39703369]
[51.66964722 443.47842407]
[53.23017120 428.55981445]
[54.56840515 413.61962891]
[55.68405151 398.66116333]
[56.79970169 383.70272827]
[57.91535187 368.74426270]
[59.03099823 353.78582764]
[51.37757111 344.41824341]
[52.18461609 331.94696045]
[61.56376266 323.09289551]
[62.90199661 308.15270996]
[64.24023438 293.21252441]
[62.27212143 290.28698730]
[61.62325287 286.26278687]
[62.79454422 281.77041626]
[65.98642731 277.64016724]
[60.01886749 263.99328613]
[69.53051758 251.35055542]
[71.53453064 236.48501587]
[69.31284332 229.43620300]
[73.68064117 221.41371155]
[75.90576172 206.57968140]
[78.13087463 191.74563599]
[80.35599518 176.91159058]
[71.32382965 165.12364197]
[73.36909485 150.04811096]
[85.79461670 140.65428162]
[83.67811584 133.57316589]
[88.16487122 125.61660004]
[90.61060333 110.81732941]
[85.86773682 97.66450500]
[94.59012604 86.73694611]
[97.03585052 71.93767548]
[99.48158264 57.13840103]
[101.92730713 42.33913040]
[92.99378204 29.57864761]
[95.68492126 14.60492325]
[107.90514374 6.16681290]
[110.35087585 -8.63245773]
[112.79660034 -23.43172836]
[115.13208771 -38.24879837]
[109.52752686 -53.04404831]
[119.06719971 -64.48274994]
[121.29232025 -79.31679535]
[122.18513489 -94.29019928]
[121.73852539 -109.28354645]
[121.29192352 -124.27689362]
[107.39965057 -128.05783081]
[95.14983368 -135.59272766]
[85.53104401 -146.26295471]
[79.31655121 -159.19732666]
[77.00218201 -173.34317017]
[78.76672363 -187.55203247]
[84.45820618 -200.67288208]
[93.60690308 -211.64538574]
[105.46409607 -219.58560181]
[119.06335449 -223.85713196]
[118.84002686 -238.85546875]
[118.61669922 -253.85380554]
[118.39337158 -268.85214233]
[118.17004395 -283.85049438]
[117.94671631 -298.84881592]
[114.68988800 -307.38290405]
[117.83338928 -314.07171631]
[117.83338928 -329.07171631]
[110.09608459 -342.87191772]
[117.83338928 -355.59918213]
[117.83338928 -370.59918213]
[117.83338928 -385.59918213]
[117.83338928 -400.59918213]
[117.83338928 -415.59918213]
[105.54271698 -407.00036621]
[91.11428833 -411.10162354]
[85.18418884 -424.87963867]
[92.12387848 -438.17779541]
[106.81767273 -441.19317627]
[118.43314362 -431.70443726]
[119.54879761 -446.66287231]
[120.66444397 -461.62133789]
[121.78009033 -476.57980347]
[122.89573669 -491.53823853]
[108.97122192 -497.48690796]
[97.73437500 -507.63638306]
[90.40408325 -520.88574219]
[87.77548218 -535.79779053]
[90.13370514 -550.75500488]
[97.22294617 -564.13488770]
[108.27422333 -574.48608398]
[122.08876801 -580.68585205]
[137.16809082 -582.06164551]
[151.87649536 -578.46417236]
[164.61853027 -570.28375244]
[174.01202393 -558.40771484]
[179.03804016 -544.12420654]
[179.15139771 -528.98266602]
[174.33981323 -514.62554932]
[165.12519836 -502.61016846]
[152.50708008 -494.23986816]
[137.85418701 -490.42260742]
[136.73854065 -475.46414185]
[135.62289429 -460.50567627]
[134.50724792 -445.54724121]
[133.39160156 -430.58877563]
[132.83338928 -415.59918213]
[132.83338928 -400.59918213]
[132.83338928 -385.59918213]
[132.83338928 -370.59918213]
[132.83338928 -355.59918213]
[140.57069397 -342.87191772]
[132.83338928 -329.07171631]
[132.83338928 -314.07171631]
[132.94505310 -299.07214355]
[133.16838074 -284.07382202]
[133.39170837 -269.07546997]
[133.61503601 -254.07713318]
[133.83836365 -239.07879639]
[134.06169128 -224.08045959]
[149.07615662 -219.62040710]
[161.99351501 -210.72784424]
[171.54244995 -198.26336670]
[176.77870178 -183.43981934]
[177.17835999 -167.70425415]
[172.69032288 -152.59674072]
[163.74237061 -139.59954834]
[151.20056152 -129.99179077]
[136.28526306 -124.72350311]
[136.73187256 -109.73015594]
[137.17848206 -94.73680115]
[144.92860413 -107.57952881]
[157.43589783 -115.86008453]
[172.28540039 -117.97962952]
[186.60989380 -113.52890778]
[197.64355469 -103.36729431]
[203.25593567 -89.45683289]
[202.36340332 -74.48340607]
[195.13827515 -61.33816147]
[182.97561646 -52.55923080]
[168.22383118 -49.84169388]
[153.73127747 -53.71026230]
[142.29623413 -63.41797638]
[136.12635803 -77.09167480]
[133.90124512 -62.25762939]
[139.66496277 -48.52341080]
[129.96612549 -36.02367783]
[132.08262634 -28.94256020]
[127.59587097 -20.98600197]
[125.15014648 -6.18673038]
[122.70441437 8.61254025]
[131.56007385 20.53365135]
[129.29058838 35.57705688]
[116.72657776 44.78485870]
[114.28085327 59.58412933]
[111.83512878 74.38339996]
[109.38939667 89.18267059]
[114.13226318 102.33549500]
[105.40987396 113.26305389]
[102.96414948 128.06233215]
[100.62866211 142.87939453]
[109.75117493 155.50546265]
[107.28327179 170.51759338]
[95.19003296 179.13670349]
[92.96492004 193.97074890]
[90.73979950 208.80479431]
[88.51468658 223.63883972]
[86.40006256 238.48902893]
[84.39604950 253.35456848]
[90.22026825 268.06472778]
[80.85195923 279.64419556]
[79.18041229 294.55078125]
[77.84217834 309.49096680]
[76.50394440 324.43115234]
[84.63716888 340.95181274]
[73.98944855 354.90145874]
[72.87380219 369.85992432]
[71.75815582 384.81835938]
[70.64250946 399.77682495]
[69.52685547 414.73529053]
[72.04885101 420.84683228]
[71.22888947 426.47042847]
[68.14877319 430.12033081]
[66.58824921 445.03894043]
[65.02772522 459.95755005]
[63.46720505 474.87615967]
[61.90668106 489.79476929]
[60.34616089 504.71334839]
[74.43897247 510.10363770]
[86.65592194 518.95849609]
[96.16401672 530.67425537]
[102.31498718 544.45202637]
[104.68946075 559.35253906]
[103.12552643 574.35974121]
[97.72982025 588.45043945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 203]
[16 202]
[17 201]
[18 200]
[19 199]
[20 198]
[21 195]
[22 194]
[23 193]
[24 192]
[25 191]
[28 189]
[29 188]
[30 187]
[34 186]
[36 184]
[37 183]
[39 182]
[40 181]
[41 180]
[42 179]
[45 176]
[47 175]
[48 174]
[50 172]
[51 171]
[52 170]
[53 169]
[56 166]
[57 165]
[58 164]
[59 162]
[61 160]
[62 159]
[63 146]
[64 145]
[65 144]
[75 135]
[76 134]
[77 133]
[78 132]
[79 131]
[80 130]
[82 129]
[83 128]
[85 126]
[86 125]
[87 124]
[88 123]
[89 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
