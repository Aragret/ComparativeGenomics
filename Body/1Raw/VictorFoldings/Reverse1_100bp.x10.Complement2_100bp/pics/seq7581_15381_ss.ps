%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUACUAAUACUCCCGCACUAGUACUUUCCACUAUUCGAGAAGAUACUAUCCCCUUCAUCGCAGAACAUCUGGAUGAACGCGACGUACACGGUAAUUCxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[45.39443970 663.98583984]
[30.96211052 668.19348145]
[16.04171181 670.03137207]
[1.01971340 669.45190430]
[-13.71477604 666.47009277]
[-27.78009796 661.16326904]
[-40.81192780 653.66876221]
[-52.47270584 644.18072510]
[-62.46039581 632.94494629]
[-70.51628876 620.25250244]
[-76.43172455 606.43206787]
[-80.05346680 591.84173584]
[-81.28771210 576.85931396]
[-80.10248566 561.87292480]
[-76.52849579 547.27075195]
[-70.65830994 533.43109131]
[-62.64398193 520.71234131]
[-52.69310379 509.44393921]
[-41.06342697 499.91784668]
[-28.05618477 492.38073730]
[-14.00829983 487.02789307]
[0.71635556 483.99792480]
[15.73637676 483.36932373]
[17.51884270 468.47561646]
[19.30130959 453.58187866]
[21.08377457 438.68817139]
[13.85626698 428.98818970]
[15.21937752 416.56539917]
[24.98452187 408.13897705]
[26.98853683 393.27343750]
[28.99254990 378.40792847]
[30.99656296 363.54238892]
[25.02900124 349.89550781]
[34.54065323 337.25274658]
[36.54466629 322.38723755]
[30.57710648 308.74035645]
[40.08876038 296.09759521]
[42.09277344 281.23205566]
[44.09678650 266.36654663]
[33.29331970 276.77255249]
[18.59999657 279.79022217]
[4.56970549 274.48446655]
[-4.45011711 262.49935913]
[-5.66458082 247.54861450]
[1.30262971 234.26486206]
[14.29264832 226.76423645]
[29.28037643 227.37088013]
[41.62170410 235.89682007]
[47.49256516 249.70045471]
[51.46466064 235.23593140]
[50.20462036 227.95347595]
[55.60506821 220.58645630]
[59.79207993 206.18267822]
[54.24285889 195.43406677]
[57.61324310 183.39976501]
[68.62162781 176.67829895]
[73.02262878 162.33843994]
[77.42362976 147.99859619]
[81.82462311 133.65875244]
[86.22562408 119.31890869]
[90.62661743 104.97905731]
[94.16629028 90.40267944]
[96.83209229 75.64146423]
[99.49788666 60.88024902]
[102.16368103 46.11903000]
[104.82947540 31.35781288]
[107.49526978 16.59659576]
[109.38856506 1.71656108]
[110.50421143 -13.24189186]
[111.61985779 -28.20034599]
[112.73551178 -43.15879822]
[113.85115814 -58.11725235]
[100.95497894 -50.45640182]
[86.87155151 -55.61943436]
[81.98264313 -69.80036163]
[89.89218140 -82.54552460]
[104.76954651 -84.45966339]
[115.64710999 -74.13329315]
[106.52458954 -86.75935364]
[108.99249268 -101.77149200]
[121.08573151 -110.39060211]
[115.48117065 -125.18585205]
[125.02084351 -136.62455750]
[127.24595642 -151.45860291]
[121.64139557 -166.25384521]
[131.18107605 -177.69255066]
[125.57650757 -192.48780823]
[135.11618042 -203.92649841]
[129.51161194 -218.72175598]
[139.05130005 -230.16044617]
[141.27641296 -244.99449158]
[143.50152588 -259.82855225]
[129.20195007 -264.47311401]
[115.86194611 -271.40811157]
[103.84543610 -280.44430542]
[93.48023224 -291.33526611]
[85.04911804 -303.78378296]
[78.78208923 -317.45031738]
[74.85012054 -331.96203613]
[73.36048126 -346.92300415]
[74.35380554 -361.92510986]
[77.80299377 -376.55908203]
[83.61395264 -390.42568970]
[91.62815094 -403.14663696]
[101.62696075 -414.37487793]
[113.33760834 -423.80410767]
[126.44061279 -431.17712402]
[140.57852173 -436.29272461]
[155.36563110 -439.01141357]
[170.39854431 -439.25897217]
[185.26716614 -437.02865601]
[199.56584167 -432.38134766]
[212.90451050 -425.44378662]
[224.91928101 -416.40524292]
[235.28237915 -405.51232910]
[243.71110535 -393.06216431]
[249.97549438 -379.39440918]
[253.90466309 -364.88195801]
[255.39143372 -349.92068481]
[254.39521790 -334.91876221]
[250.94320679 -320.28546143]
[245.12957764 -306.41998291]
[237.11291504 -293.70059204]
[227.11195374 -282.47427368]
[215.39949036 -273.04727173]
[202.29505920 -265.67678833]
[188.15617371 -260.56390381]
[173.36853027 -257.84808350]
[158.33557129 -257.60342407]
[156.11045837 -242.76937866]
[153.88533020 -227.93533325]
[159.64906311 -214.20111084]
[149.95022583 -201.70138550]
[155.71394348 -187.96716309]
[146.01512146 -175.46743774]
[151.77883911 -161.73321533]
[142.08000183 -149.23348999]
[139.85488892 -134.39944458]
[145.61860657 -120.66522217]
[135.91976929 -108.16548920]
[144.95193481 -96.37754822]
[142.90667725 -81.30201721]
[130.48115540 -71.90818024]
[128.80961609 -57.00160217]
[127.69396210 -42.04315186]
[126.57831573 -27.08469772]
[125.46266174 -12.12624359]
[124.34701538 2.83220983]
[135.65565491 -7.02247477]
[150.65016174 -7.42828131]
[162.47525024 1.80031908]
[165.72467041 16.44413376]
[158.91281128 29.80821037]
[145.15396118 35.78266907]
[130.73849487 31.63607216]
[122.25648499 19.26239204]
[119.59069061 34.02360916]
[116.92489624 48.78482437]
[114.25910187 63.54604340]
[111.59330750 78.30725861]
[108.92751312 93.06848145]
[120.65196228 83.71234131]
[135.63098145 82.91933441]
[148.27777100 90.98522949]
[153.87539673 104.90164185]
[150.33607483 119.47810364]
[138.97987366 129.27795410]
[124.04240417 130.64607239]
[111.09494781 123.07221222]
[104.96646881 109.38005829]
[100.56546783 123.71990204]
[96.16447449 138.05975342]
[91.76347351 152.39959717]
[87.36247253 166.73944092]
[82.96147919 181.07928467]
[87.49983978 198.92543030]
[74.19586182 210.36968994]
[70.00885010 224.77346802]
[65.92918396 239.20802307]
[61.95708847 253.67254639]
[58.96231461 268.37054443]
[56.95830154 283.23608398]
[54.95428848 298.10162354]
[60.77850723 312.81176758]
[51.41019440 324.39123535]
[49.40618134 339.25677490]
[55.23040390 353.96694946]
[45.86209106 365.54638672]
[43.85807800 380.41192627]
[41.85406494 395.27746582]
[39.85005188 410.14297485]
[47.23746872 427.01034546]
[35.97749329 440.47064209]
[34.19502640 455.36434937]
[32.41255951 470.25808716]
[30.63009453 485.15179443]
[45.07759094 489.30703735]
[58.67139435 495.72613525]
[71.05938721 504.24279785]
[81.92069244 514.63647461]
[90.97397614 526.63787842]
[97.98473358 539.93621826]
[102.77136993 554.18695068]
[105.20990753 569.02105713]
[105.23718262 584.05419922]
[102.85247040 598.89703369]
[98.11756134 613.16503906]
[91.15509033 626.48870850]
[82.14540863 638.52288818]
[71.32187653 648.95593262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 196]
[24 195]
[25 194]
[26 193]
[29 191]
[30 190]
[31 189]
[32 188]
[34 186]
[35 185]
[37 183]
[38 182]
[39 181]
[49 180]
[50 179]
[52 178]
[53 177]
[56 175]
[57 174]
[58 173]
[59 172]
[60 171]
[61 170]
[62 161]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 148]
[69 147]
[70 146]
[71 145]
[72 144]
[78 143]
[81 140]
[83 138]
[84 137]
[86 135]
[88 133]
[90 131]
[91 130]
[92 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
