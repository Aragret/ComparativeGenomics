%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[66.19030762 741.69635010]
[51.19084930 742.04254150]
[36.19382477 741.60327148]
[21.24034500 740.37976074]
[6.37139368 738.37530518]
[-8.37227440 735.59539795]
[-22.95024681 732.04766846]
[-37.32256699 727.74182129]
[-51.44984055 722.68969727]
[-65.29334259 716.90515137]
[-78.81513977 710.40405273]
[-91.97815704 703.20410156]
[-104.74631500 695.32519531]
[-117.08463287 686.78881836]
[-128.95927429 677.61840820]
[-140.33769226 667.83911133]
[-151.18872070 657.47766113]
[-161.48258972 646.56256104]
[-171.19110107 635.12365723]
[-180.28764343 623.19232178]
[-188.74728394 610.80126953]
[-196.54682922 597.98443604]
[-203.66490173 584.77697754]
[-210.08198547 571.21514893]
[-215.78051758 557.33599854]
[-220.74484253 543.17761230]
[-224.96138000 528.77886963]
[-228.41856384 514.17913818]
[-231.10691833 499.41851807]
[-233.01907349 484.53741455]
[-234.14979553 469.57662964]
[-234.49597168 454.57717896]
[-234.05665588 439.58013916]
[-232.83306885 424.62667847]
[-230.82855225 409.75772095]
[-228.04859924 395.01406860]
[-224.50082397 380.43609619]
[-220.19496155 366.06378174]
[-215.14282227 351.93652344]
[-209.35823059 338.09304810]
[-202.85704041 324.57128906]
[-195.65710449 311.40829468]
[-187.77812195 298.64013672]
[-179.24171448 286.30184937]
[-170.07127380 274.42724609]
[-160.29191589 263.04882812]
[-149.93046570 252.19784546]
[-139.01531982 241.90400696]
[-127.57638550 232.19552612]
[-115.64502716 223.09902954]
[-103.25395203 214.63943481]
[-90.43711090 206.83992004]
[-77.22964478 199.72189331]
[-63.66774368 193.30484009]
[-49.78858566 187.60636902]
[-35.63021469 182.64207458]
[-21.23143768 178.42558289]
[-6.63171721 174.96844482]
[8.12892723 172.28013611]
[23.01003838 170.36802673]
[37.97082901 169.23735046]
[52.97029114 168.89122009]
[67.96730804 169.33056641]
[82.92078400 170.55419922]
[84.92479706 155.68867493]
[86.92881012 140.82315063]
[88.93282318 125.95761871]
[90.93683624 111.09209442]
[85.80446625 98.08631134]
[94.19763184 86.90389252]
[96.20164490 72.03836823]
[98.20566559 57.17284012]
[87.34648132 43.45797348]
[89.71940613 26.46726418]
[103.37234497 16.64707947]
[105.15480804 1.75336134]
[106.93727875 -13.14035606]
[108.71974182 -28.03407288]
[110.50221252 -42.92779160]
[95.85238647 -46.21010971]
[81.60979462 -50.95770264]
[67.92059326 -57.12186050]
[54.92525864 -64.63932037]
[42.75713730 -73.43294525]
[31.54109764 -83.41249847]
[21.39223289 -94.47557068]
[12.41469002 -106.50864410]
[4.70059156 -119.38822174]
[-1.67090344 -132.98216248]
[-6.63441277 -147.15095520]
[-10.13900280 -161.74919128]
[-12.14870930 -176.62710571]
[-12.64291191 -191.63198853]
[-11.61653709 -206.60989380]
[-9.08011818 -221.40711975]
[-5.05968332 -235.87179565]
[0.40351206 -249.85551453]
[7.25340652 -263.21478271]
[15.41970825 -275.81250000]
[24.81861877 -287.51940918]
[35.35368729 -298.21536255]
[46.91680908 -307.79058838]
[59.38932800 -316.14685059]
[72.64325714 -323.19842529]
[86.54257965 -328.87289429]
[100.94467926 -333.11209106]
[115.70175934 -335.87243652]
[130.66238403 -337.12567139]
[145.67304993 -336.85891724]
[160.57969666 -335.07489014]
[175.22938538 -331.79193115]
[189.47175598 -327.04373169]
[203.16069031 -320.87896729]
[216.15570068 -313.36093140]
[228.32342529 -304.56677246]
[239.53903198 -294.58673096]
[249.68740845 -283.52319336]
[258.66442871 -271.48974609]
[266.37796021 -258.60980225]
[272.74884033 -245.01559448]
[277.71173096 -230.84658813]
[281.21566772 -216.24818420]
[283.22473145 -201.37019348]
[283.71826172 -186.36528015]
[282.69125366 -171.38742065]
[280.15417480 -156.59031677]
[276.13308716 -142.12580872]
[270.66928101 -128.14233398]
[263.81881714 -114.78336334]
[255.65194702 -102.18600464]
[246.25253296 -90.47952271]
[235.71697998 -79.78403473]
[224.15344238 -70.20930481]
[211.68055725 -61.85358047]
[198.42631531 -54.80260849]
[184.52674866 -49.12873840]
[170.12445068 -44.89019775]
[155.36726379 -42.13048172]
[140.40657043 -40.87790680]
[125.39592743 -41.14532471]
[123.61346436 -26.25160789]
[121.83099365 -11.35789013]
[120.04853058 3.53582716]
[118.26605988 18.42954445]
[127.56894684 27.34502983]
[130.07565308 40.18241882]
[124.65110779 52.29789352]
[113.07118988 59.17685318]
[111.06717682 74.04238129]
[109.06316376 88.90790558]
[114.19553375 101.91368866]
[105.80236816 113.09610748]
[103.79835510 127.96163177]
[101.79433441 142.82716370]
[99.79032135 157.69268799]
[97.78630829 172.55821228]
[112.52999878 175.33804321]
[127.10798645 178.88568115]
[141.48033142 183.19140625]
[155.60763550 188.24342346]
[169.45117188 194.02789307]
[182.97300720 200.52894592]
[196.13607788 207.72877502]
[208.90428162 215.60763550]
[221.24264526 224.14393616]
[233.11734009 233.31427002]
[244.49583435 243.09352112]
[255.34690857 253.45487976]
[265.64083862 264.36993408]
[275.34942627 275.80877686]
[284.44604492 287.74005127]
[292.90576172 300.13104248]
[300.70538330 312.94781494]
[307.82351685 326.15521240]
[314.24069214 339.71707153]
[319.93930054 353.59616089]
[324.90371704 367.75448608]
[329.12036133 382.15322876]
[332.57760620 396.75292969]
[335.26605225 411.51354980]
[337.17831421 426.39465332]
[338.30911255 441.35540771]
[338.65539551 456.35488892]
[338.21615601 471.35189819]
[336.99267578 486.30538940]
[334.98825073 501.17434692]
[332.20837402 515.91802979]
[328.66067505 530.49603271]
[324.35491943 544.86834717]
[319.30285645 558.99560547]
[313.51834106 572.83917236]
[307.01724243 586.36096191]
[299.81738281 599.52398682]
[291.93847656 612.29217529]
[283.40216064 624.63055420]
[274.23178101 636.50518799]
[264.45248413 647.88366699]
[254.09109497 658.73468018]
[243.17601013 669.02862549]
[231.73713684 678.73718262]
[219.80584717 687.83374023]
[207.41481018 696.29339600]
[194.59802246 704.09301758]
[181.39059448 711.21112061]
[167.82873535 717.62823486]
[153.94961548 723.32678223]
[139.79127502 728.29119873]
[125.39251709 732.50775146]
[110.79281616 735.96496582]
[96.03218842 738.65338135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 156]
[65 155]
[66 154]
[67 153]
[68 152]
[70 150]
[71 149]
[72 148]
[75 144]
[76 143]
[77 142]
[78 141]
[79 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
