%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxAUGUGGUUGUUUGUUACAAGUUGGUCAUUGAUGAUGAUUAGUUGCGGGUAUUAGUAUGUUUCGGGGGCGUGGUUAUCCUAGGAGGGCUUAGUUGGGACUG\
) } def
/len { sequence length } bind def

/coor [
[86.77825165 698.91741943]
[71.98161316 696.35668945]
[57.57332993 692.12597656]
[43.74124908 686.28033447]
[30.66569328 678.89605713]
[18.51713371 670.06939697]
[7.45395136 659.91534424]
[-2.37962389 648.56640625]
[-10.85539055 636.17047119]
[-17.86285019 622.88916016]
[-23.31064415 608.89562988]
[-27.12775040 594.37231445]
[-29.26440620 579.50848389]
[-29.69275665 564.49804688]
[-28.40721321 549.53656006]
[-25.42453957 534.81921387]
[-20.78361893 520.53771973]
[-14.54495621 506.87841797]
[-6.78988457 494.01931763]
[2.38049245 482.12805176]
[12.84662056 471.35968018]
[24.47205162 461.85458374]
[37.10522461 453.73666382]
[50.58143997 447.11175537]
[64.72500610 442.06622314]
[79.35153961 438.66589355]
[94.27033997 436.95501709]
[94.27033997 421.95501709]
[94.27033997 406.95501709]
[94.27033997 391.95501709]
[94.27033997 376.95501709]
[83.58946991 366.63732910]
[83.37579346 351.42520142]
[94.27033997 340.29208374]
[86.53304291 327.56481934]
[94.27033997 313.76464844]
[94.27033997 298.76464844]
[94.27033997 283.76464844]
[94.27033997 268.76464844]
[94.27033997 253.76464844]
[94.27033997 238.76464844]
[86.53304291 226.03736877]
[94.27033997 212.23719788]
[94.27033997 197.23719788]
[94.27033997 182.23719788]
[94.27033997 167.23719788]
[94.27033997 152.23719788]
[94.27033997 137.23719788]
[93.82373810 122.24385071]
[92.93092346 107.27043915]
[89.34566498 100.05112457]
[92.13796234 92.06777191]
[91.46817780 77.08273315]
[90.79839325 62.09769440]
[90.12860870 47.11265564]
[89.45882416 32.12761688]
[88.78903961 17.14258003]
[76.00737000 8.54402924]
[70.80050659 -5.76477718]
[74.96829224 -20.22484398]
[86.71102142 -29.34879112]
[86.04123688 -44.33382797]
[85.37145233 -59.31887054]
[77.02565765 -72.75978851]
[84.18693542 -85.81985474]
[75.84114075 -99.26077271]
[83.00242615 -112.32083893]
[82.33264160 -127.30587769]
[81.66285706 -142.29092407]
[69.76840210 -133.15188599]
[55.17122650 -136.60478210]
[48.63182449 -150.10427856]
[54.97080231 -163.69903564]
[69.51529694 -167.36750793]
[81.54287720 -158.40689087]
[81.98947906 -173.40023804]
[82.43608856 -188.39358521]
[79.56357574 -197.06460571]
[83.00260925 -203.60638428]
[83.67239380 -218.59141541]
[84.34217834 -233.57646179]
[85.01196289 -248.56149292]
[70.20358276 -251.06979370]
[55.81570053 -255.37889099]
[42.06642532 -261.42349243]
[29.16419220 -269.11190796]
[17.30460167 -278.32763672]
[6.66743898 -288.93096924]
[-2.58603883 -300.76113892]
[-10.31555176 -313.63879395]
[-16.40392113 -327.36874390]
[-20.75885010 -341.74282837]
[-23.31431961 -356.54312134]
[-24.03158760 -371.54528809]
[-22.89978027 -386.52191162]
[-19.93605804 -401.24591064]
[-15.18534851 -415.49407959]
[-8.71967125 -429.05041504]
[-0.63704461 -441.70944214]
[8.94000149 -453.27920532]
[19.86627960 -463.58435059]
[31.97615433 -472.46865845]
[45.08603668 -479.79739380]
[58.99719238 -485.45950317]
[73.49872589 -489.36914062]
[88.37079620 -491.46701050]
[103.38794708 -491.72134399]
[118.32253265 -490.12826538]
[132.94813538 -486.71191406]
[147.04304504 -481.52413940]
[160.39356995 -474.64352417]
[172.79733276 -466.17437744]
[184.06629944 -456.24511719]
[194.02963257 -445.00628662]
[202.53628540 -432.62820435]
[209.45730591 -419.29858398]
[214.68775940 -405.21945190]
[218.14836121 -390.60424805]
[219.78665161 -375.67456055]
[219.57780457 -360.65670776]
[217.52496338 -345.77835083]
[213.65927124 -331.26504517]
[208.03930664 -317.33682251]
[200.75028992 -304.20480347]
[191.90270996 -292.06808472]
[181.63070679 -281.11065674]
[170.08998108 -271.49859619]
[157.45549011 -263.37768555]
[143.91877747 -256.87100220]
[129.68505859 -252.07716370]
[114.97010803 -249.06886292]
[99.99700165 -247.89170837]
[99.32721710 -232.90667725]
[98.65743256 -217.92163086]
[97.98764801 -202.93659973]
[97.42943573 -187.94699097]
[96.98283386 -172.95364380]
[96.53622437 -157.96028137]
[96.64789581 -142.96070862]
[97.31768036 -127.97566223]
[97.98746490 -112.99062347]
[106.28534698 -100.62153625]
[99.17197418 -86.48963928]
[107.46986389 -74.12055206]
[100.35649109 -59.98865509]
[101.02627563 -45.00361633]
[101.69606018 -30.01857567]
[114.20595551 -21.97864532]
[119.64718628 -7.94807386]
[115.73765564 6.76820755]
[103.77407837 16.47279358]
[104.44386292 31.45783234]
[105.11364746 46.44287109]
[105.78343201 61.42790985]
[106.45321655 76.41294861]
[107.12300110 91.39798737]
[107.90432739 106.37762451]
[108.79714203 121.35102844]
[111.31571198 124.88809204]
[112.46240234 128.66296387]
[112.33091736 132.21516418]
[111.15486908 135.16194153]
[109.27033997 137.23719788]
[109.27033997 152.23719788]
[109.27033997 167.23719788]
[109.27033997 182.23719788]
[109.27033997 197.23719788]
[109.27033997 212.23719788]
[117.00764465 226.03736877]
[109.27033997 238.76464844]
[109.27033997 253.76464844]
[109.27033997 268.76464844]
[109.27033997 283.76464844]
[109.27033997 298.76464844]
[109.27033997 313.76464844]
[117.00764465 327.56481934]
[109.27033997 340.29208374]
[120.16489410 351.42520142]
[119.95121765 366.63732910]
[109.27033997 376.95501709]
[109.27033997 391.95501709]
[109.27033997 406.95501709]
[109.27033997 421.95501709]
[109.27033997 436.95501709]
[124.18914795 438.66589355]
[138.81567383 442.06622314]
[152.95924377 447.11175537]
[166.43545532 453.73666382]
[179.06863403 461.85458374]
[190.69406128 471.35968018]
[201.16018677 482.12805176]
[210.33056641 494.01931763]
[218.08564758 506.87841797]
[224.32431030 520.53771973]
[228.96522522 534.81921387]
[231.94790649 549.53656006]
[233.23344421 564.49804688]
[232.80509949 579.50848389]
[230.66844177 594.37231445]
[226.85133362 608.89562988]
[221.40353394 622.88916016]
[214.39607239 636.17047119]
[205.92030334 648.56640625]
[196.08673096 659.91534424]
[185.02354431 670.06939697]
[172.87498474 678.89605713]
[159.79943848 686.28033447]
[145.96736145 692.12597656]
[131.55906677 696.35668945]
[116.76243591 698.91741943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 184]
[28 183]
[29 182]
[30 181]
[31 180]
[34 177]
[36 175]
[37 174]
[38 173]
[39 172]
[40 171]
[41 170]
[43 168]
[44 167]
[45 166]
[46 165]
[47 164]
[48 163]
[49 158]
[50 157]
[52 156]
[53 155]
[54 154]
[55 153]
[56 152]
[57 151]
[61 147]
[62 146]
[63 145]
[65 143]
[67 141]
[68 140]
[69 139]
[75 138]
[76 137]
[77 136]
[79 135]
[80 134]
[81 133]
[82 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
