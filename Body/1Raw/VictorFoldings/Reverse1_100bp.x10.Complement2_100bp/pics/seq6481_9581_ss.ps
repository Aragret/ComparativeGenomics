%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[-12.30894470 501.93783569]
[-9.69263363 516.73834229]
[-9.36638641 531.76483154]
[-11.33784866 546.66491699]
[-15.56080818 561.08947754]
[-21.93627167 574.70025635]
[-30.31479073 587.17828369]
[-40.49995804 598.23101807]
[-52.25302124 607.59936523]
[-65.29846954 615.06372070]
[-79.33050537 620.44909668]
[-94.02018738 623.62933350]
[-109.02317810 624.52972412]
[-123.98777771 623.12933350]
[-138.56320190 619.46087646]
[-152.40777588 613.61041260]
[-165.19696045 605.71502686]
[-176.63096619 595.95983887]
[-186.44175720 584.57348633]
[-194.39936829 571.82287598]
[-200.31724548 558.00701904]
[-204.05667114 543.44964600]
[-205.52999878 528.49200439]
[-204.70266724 513.48480225]
[-201.59408569 498.77981567]
[-196.27713013 484.72171021]
[-188.87641907 471.64004517]
[-179.56544495 459.84149170]
[-168.56248474 449.60256958]
[-156.12544250 441.16336060]
[-142.54586792 434.72164917]
[-128.14208984 430.42846680]
[-113.25174713 428.38442993]
[-98.22389221 428.63745117]
[-83.41079712 431.18161011]
[-69.15971375 435.95727539]
[-62.28029633 422.62783813]
[-55.40088654 409.29840088]
[-48.52147293 395.96899414]
[-49.55998230 381.11062622]
[-36.35525513 372.39593506]
[-29.47584343 359.06649780]
[-22.59643173 345.73706055]
[-15.71701908 332.40765381]
[-15.44275093 325.02209473]
[-8.63466549 318.93209839]
[-1.55755973 305.70657349]
[5.51954556 292.48104858]
[12.59665108 279.25552368]
[19.27684593 265.82513428]
[17.57591248 251.02798462]
[30.37833405 241.73236084]
[36.65569687 228.10905457]
[42.93305588 214.48573303]
[49.00688934 200.77046204]
[54.87585068 186.96629333]
[60.74481201 173.16210938]
[66.61376953 159.35794067]
[72.48273468 145.55375671]
[78.35169220 131.74958801]
[84.22065735 117.94540405]
[90.08961487 104.14122772]
[93.52067566 89.53890228]
[94.41349030 74.56549835]
[95.30630493 59.59209442]
[88.40412903 45.35585403]
[96.88525391 33.11167908]
[97.77806854 18.13827515]
[98.67088318 3.16486883]
[99.56369781 -11.80853653]
[99.56369781 -26.80853653]
[98.67088318 -41.78194427]
[97.44390869 -56.73167801]
[95.88338470 -71.65028381]
[94.32286072 -86.56888580]
[92.76233673 -101.48748779]
[91.20181274 -116.40609741]
[82.07080078 -129.32643127]
[88.44203186 -142.78959656]
[86.88151550 -157.70819092]
[85.32099152 -172.62680054]
[83.76046753 -187.54541016]
[82.19994354 -202.46400452]
[68.27217102 -208.78575134]
[59.43703461 -221.14848328]
[57.98583603 -236.17381287]
[64.20864868 -249.81684875]
[76.34313202 -258.45513916]
[74.78260803 -273.37374878]
[73.22208405 -288.29235840]
[71.66156769 -303.21093750]
[70.10104370 -318.12954712]
[55.26846313 -321.04263306]
[41.95429230 -328.19973755]
[31.34241486 -338.96447754]
[24.37642860 -352.37963867]
[21.67574883 -367.25234985]
[23.48051453 -382.26016235]
[29.63024902 -396.06857300]
[39.57812119 -407.44976807]
[52.43957520 -415.39169312]
[67.07097626 -419.18820190]
[82.17131042 -418.50170898]
[96.39786530 -413.39324951]
[108.48563385 -404.31704712]
[117.35977173 -392.08016968]
[122.23119354 -377.77072144]
[122.66674042 -362.66104126]
[118.62768555 -348.09472656]
[110.47318268 -335.36700439]
[98.92831421 -325.60955811]
[85.01964569 -319.69006348]
[86.58016968 -304.77148438]
[88.14069366 -289.85287476]
[89.70121765 -274.93426514]
[91.26174164 -260.01565552]
[104.92116547 -254.07548523]
[113.83257294 -242.01551819]
[115.52214050 -227.01513672]
[109.43659973 -213.09165955]
[97.11854553 -204.02453613]
[98.67906952 -189.10592651]
[100.23959351 -174.18733215]
[101.80011749 -159.26872253]
[103.36064148 -144.35011292]
[112.38003540 -132.49685669]
[106.12042236 -117.96662140]
[107.68093872 -103.04801178]
[109.24146271 -88.12940979]
[110.80198669 -73.21080017]
[112.36251068 -58.29219818]
[114.85660553 -55.79984283]
[116.26741028 -51.97562027]
[115.98210907 -47.34184265]
[113.64428711 -42.67475891]
[114.53710175 -27.70135307]
[123.72258759 -39.55997086]
[138.09144592 -43.86530304]
[152.28445435 -39.01156998]
[161.00794983 -26.80909348]
[161.00831604 -11.80909348]
[152.28538513 0.39379966]
[138.09262085 5.24820805]
[123.72355652 0.94355798]
[114.53710175 -10.91572094]
[113.64428711 4.05768490]
[112.75147247 19.03108978]
[111.85865784 34.00449753]
[118.82469940 47.16973495]
[110.27971649 60.48490906]
[109.38690186 75.45831299]
[108.49407959 90.43171692]
[115.96403503 77.42404175]
[126.39752960 66.64710999]
[139.15655518 58.75994873]
[153.46089172 54.24485779]
[168.43582153 53.37793732]
[183.16561890 56.21219635]
[196.74955750 62.57432175]
[208.35696411 72.07527161]
[217.27806091 84.13404846]
[222.96730042 98.01325989]
[225.07678223 112.86418915]
[223.47753906 127.77869415]
[218.26733398 141.84474182]
[209.76477051 154.20219421]
[198.48982239 164.09538269]
[185.13191223 170.91934204]
[170.50790405 174.25679016]
[155.51206970 173.90362549]
[141.06138611 169.88143921]
[128.03953552 162.43621826]
[117.24280548 152.02320862]
[109.33142090 139.27920532]
[104.78916168 124.98346710]
[103.89379120 110.01018524]
[98.02483368 123.81436157]
[92.15586853 137.61854553]
[86.28691101 151.42271423]
[80.41794586 165.22689819]
[74.54898834 179.03106689]
[68.68003082 192.83525085]
[62.81106567 206.63941956]
[63.23267365 213.23744202]
[60.64702225 218.29821777]
[56.55637360 220.76309204]
[50.27901077 234.38641357]
[44.00165176 248.00971985]
[45.25358582 263.78131104]
[32.90016174 272.10250854]
[33.45197678 276.40942383]
[32.68200684 280.27874756]
[30.89012527 283.34869385]
[28.46289253 285.39199829]
[25.82217789 286.33264160]
[18.74507332 299.55816650]
[11.66796780 312.78369141]
[4.59086227 326.00921631]
[-2.38758993 339.28704834]
[-9.26700211 352.61648560]
[-16.14641571 365.94592285]
[-23.02582741 379.27536011]
[-22.47937965 395.08712769]
[-35.19204330 402.84838867]
[-42.07145691 416.17782593]
[-48.95086670 429.50726318]
[-55.83028030 442.83666992]
[-43.68168259 451.68609619]
[-33.02639389 462.28634644]
[-24.11418915 474.38894653]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 207]
[37 206]
[38 205]
[39 204]
[41 202]
[42 201]
[43 200]
[44 199]
[46 198]
[47 197]
[48 196]
[49 195]
[50 190]
[52 188]
[53 187]
[54 186]
[55 183]
[56 182]
[57 181]
[58 180]
[59 179]
[60 178]
[61 177]
[62 176]
[63 152]
[64 151]
[65 150]
[67 148]
[68 147]
[69 146]
[70 145]
[71 136]
[72 135]
[73 131]
[74 130]
[75 129]
[76 128]
[77 127]
[79 125]
[80 124]
[81 123]
[82 122]
[83 121]
[88 116]
[89 115]
[90 114]
[91 113]
[92 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
