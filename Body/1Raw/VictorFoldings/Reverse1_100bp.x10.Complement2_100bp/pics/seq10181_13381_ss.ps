%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[-9.84917927 369.20510864]
[-6.80044413 383.91027832]
[-5.51237249 398.87280273]
[-6.00304747 413.88262939]
[-8.26558018 428.72909546]
[-12.26820946 443.20373535]
[-17.95474243 457.10336304]
[-25.24535179 470.23284912]
[-34.03768539 482.40789795]
[-44.20831680 493.45751953]
[-55.61446381 503.22668457]
[-68.09600067 511.57818604]
[-81.47770691 518.39477539]
[-95.57173157 523.58081055]
[-110.18019867 527.06347656]
[-125.09804535 528.79388428]
[-140.11584473 528.74768066]
[-155.02276611 526.92553711]
[-169.60954285 523.35314941]
[-183.67138672 518.08050537]
[-197.01092529 511.18170166]
[-209.44085693 502.75357056]
[-220.78669739 492.91445923]
[-230.88916016 481.80245972]
[-239.60644531 469.57357788]
[-246.81614685 456.39950562]
[-252.41708374 442.46514893]
[-256.33059692 427.96615601]
[-258.50177002 413.10607910]
[-258.90011597 398.09347534]
[-257.52001953 383.13916016]
[-254.38090515 368.45303345]
[-249.52679443 354.24130249]
[-243.02584839 340.70339966]
[-234.96932983 328.02947998]
[-225.47035217 316.39736938]
[-214.66224670 305.97042847]
[-202.69674683 296.89501953]
[-189.74183655 289.29852295]
[-175.97937012 283.28759766]
[-161.60256958 278.94665527]
[-146.81324768 276.33657837]
[-131.81903076 275.49407959]
[-116.83041382 276.43090820]
[-102.05781555 279.13397217]
[-87.70861053 283.56530762]
[-73.98424530 289.66271973]
[-61.07738876 297.34057617]
[-51.93858719 285.44592285]
[-42.79978561 273.55130005]
[-33.66098022 261.65667725]
[-43.54689026 250.40309143]
[-51.04964447 237.43287659]
[-55.87926483 223.24356079]
[-57.84835434 208.37989807]
[-56.87937927 193.41290283]
[-53.00771332 178.91795349]
[-46.38034821 165.45259094]
[-37.25031281 153.53520203]
[-25.96702957 143.62492371]
[-12.96291542 136.10406494]
[1.26317084 131.26332092]
[16.16507149 129.29048157]
[31.17029762 130.26324463]
[45.70202255 134.14607239]
[59.20125198 140.79158020]
[68.34005737 128.89694214]
[77.47885895 117.00231171]
[86.61766052 105.10767365]
[88.64146423 91.27308655]
[101.48770905 85.75352478]
[110.62651062 73.85888672]
[111.87061310 67.36552429]
[115.64119720 63.11350632]
[120.21876526 61.75154114]
[129.70765686 50.13427734]
[139.19656372 38.51701736]
[148.68545532 26.89975166]
[151.42294312 11.31717300]
[165.46653748 6.35466528]
[154.47718811 -3.86247110]
[144.16503906 -14.76270771]
[134.57244873 -26.30125237]
[125.73886108 -38.43069077]
[117.70055389 -51.10118103]
[110.49057007 -64.26065826]
[104.13852692 -77.85504150]
[98.67053986 -91.82846832]
[94.10906982 -106.12352753]
[90.47285461 -120.68146515]
[87.77685547 -135.44247437]
[86.03213501 -150.34588623]
[85.24586487 -165.33045959]
[85.42127991 -180.33460999]
[86.55766296 -195.29670715]
[88.65032959 -210.15525818]
[91.69069672 -224.84919739]
[95.66626740 -239.31814575]
[100.56069946 -253.50265503]
[106.35388184 -267.34442139]
[113.02200317 -280.78659058]
[120.53768158 -293.77389526]
[128.87001038 -306.25299072]
[137.98477173 -318.17260742]
[147.84449768 -329.48373413]
[158.40866089 -340.13989258]
[169.63388062 -350.09732056]
[181.47399902 -359.31506348]
[193.88038635 -367.75531006]
[206.80204773 -375.38330078]
[220.18589783 -382.16772461]
[233.97691345 -388.08068848]
[248.11845398 -393.09793091]
[262.55239868 -397.19879150]
[277.21942139 -400.36645508]
[292.05926514 -402.58786011]
[307.01095581 -403.85391235]
[322.01303101 -404.15942383]
[337.00384521 -403.50311279]
[351.92181396 -401.88766479]
[366.70565796 -399.31973267]
[381.29458618 -395.80990601]
[395.62863159 -391.37252808]
[409.64895630 -386.02590942]
[423.29791260 -379.79196167]
[436.51937866 -372.69635010]
[449.25909424 -364.76821899]
[461.46466064 -356.04010010]
[473.08596802 -346.54794312]
[484.07519531 -336.33065796]
[494.38723755 -325.43032837]
[503.97967529 -313.89166260]
[512.81311035 -301.76214600]
[520.85131836 -289.09155273]
[528.06115723 -275.93200684]
[534.41302490 -262.33755493]
[539.88085938 -248.36405945]
[544.44219971 -234.06895447]
[548.07824707 -219.51097107]
[550.77404785 -204.74993896]
[552.51861572 -189.84649658]
[553.30474854 -174.86192322]
[553.12915039 -159.85775757]
[551.99261475 -144.89567566]
[549.89978027 -130.03715515]
[546.85925293 -115.34324646]
[542.88348389 -100.87434387]
[537.98889160 -86.68988800]
[532.19555664 -72.84818268]
[525.52728271 -59.40608978]
[518.01147461 -46.41886139]
[509.67901611 -33.93985367]
[500.56411743 -22.02035522]
[490.70428467 -10.70933914]
[480.13998413 -0.05328833]
[468.91467285 9.90400982]
[457.07443237 19.12163734]
[444.66796875 27.56171799]
[431.74621582 35.18956757]
[418.36230469 41.97384262]
[404.57119751 47.88666916]
[390.42959595 52.90373993]
[375.99563599 57.00444794]
[361.32855225 60.17193604]
[346.48870850 62.39319611]
[331.53698730 63.65909195]
[316.53491211 63.96442413]
[301.54409790 63.30794144]
[286.62612915 61.69233704]
[271.84234619 59.12425232]
[257.25344849 55.61423874]
[242.91944885 51.17672348]
[228.89918518 45.82993698]
[215.25030518 39.59585190]
[202.02890015 32.50008392]
[189.28927612 24.57179642]
[177.08380127 15.84356403]
[175.02503967 30.59519958]
[160.30271912 36.38864899]
[150.81382751 48.00591278]
[141.32492065 59.62317657]
[131.83602905 71.24044037]
[122.52114105 82.99768829]
[113.38233948 94.89232635]
[111.35853577 108.72691345]
[98.51229095 114.24647522]
[89.37348938 126.14111328]
[80.23468781 138.03573608]
[71.09588623 149.93037415]
[80.99475098 161.26194763]
[88.49019623 174.30287170]
[93.29576874 188.55101013]
[95.22856140 203.45816040]
[94.21612549 218.45112610]
[90.29925537 232.95382690]
[83.63029480 246.40934753]
[74.46723938 258.30139160]
[63.16373444 268.17398071]
[50.15545273 275.64916992]
[35.94328690 280.44125366]
[21.07405090 282.36779785]
[6.11947393 281.35665894]
[-8.34581470 277.44854736]
[-21.76634789 270.79547119]
[-30.90515137 282.69009399]
[-40.04395294 294.58474731]
[-49.18275452 306.47937012]
[-38.43899155 316.97259521]
[-29.01173401 328.66290283]
[-21.03332901 341.38616943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 207]
[49 206]
[50 205]
[51 204]
[66 189]
[67 188]
[68 187]
[69 186]
[71 184]
[72 183]
[75 182]
[76 181]
[77 180]
[78 179]
[80 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
