%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[89.00379181 563.58276367]
[74.03123474 564.63720703]
[59.02375412 564.38269043]
[44.09555817 562.82116699]
[29.36026764 559.96453857]
[14.93002892 555.83441162]
[0.91466552 550.46240234]
[-12.57915497 543.88922119]
[-25.44873428 536.16503906]
[-37.59612656 527.34857178]
[-48.92887878 517.50689697]
[-59.36074448 506.71499634]
[-68.81232452 495.05493164]
[-77.21168518 482.61547852]
[-84.49491119 469.49130249]
[-90.60655212 455.78228760]
[-95.50011444 441.59277344]
[-99.13834381 427.03073120]
[-101.49355316 412.20703125]
[-102.54782104 397.23446655]
[-102.29311371 382.22698975]
[-100.73137665 367.29879761]
[-97.87449646 352.56356812]
[-93.74421692 338.13336182]
[-88.37197113 324.11810303]
[-81.79863739 310.62435913]
[-74.07425690 297.75488281]
[-65.25761414 285.60763550]
[-55.41580200 274.27499390]
[-44.62373352 263.84329224]
[-32.96354294 254.39187622]
[-20.52396774 245.99269104]
[-7.39968824 238.70965576]
[6.30941343 232.59819031]
[20.49900055 227.70483398]
[35.06108093 224.06680298]
[49.88482285 221.71180725]
[64.85740662 220.65774536]
[79.86488342 220.91267395]
[81.42540741 205.99406433]
[75.05417633 192.53089905]
[84.18518829 179.61056519]
[85.74571228 164.69195557]
[87.30623627 149.77336121]
[88.86675262 134.85475159]
[90.42727661 119.93614960]
[91.98780060 105.01753998]
[89.69300079 100.30078125]
[90.20426941 94.63404083]
[93.82334137 89.68033600]
[95.82735443 74.81480408]
[90.00313568 60.10463715]
[99.37145233 48.52517319]
[101.37546539 33.65964508]
[103.37947845 18.79411888]
[93.63907623 30.20133400]
[79.94902039 36.33178329]
[64.95265198 36.00177765]
[51.54552841 29.27503395]
[42.31636047 17.45037842]
[39.04715347 2.81097054]
[42.36914062 -11.81655121]
[51.64089584 -23.60784149]
[65.07218933 -30.28618813]
[80.06965637 -30.56210327]
[93.73751068 -24.38231659]
[103.43670654 -12.94004440]
[107.29453278 1.55666220]
[111.90853882 -12.71607113]
[116.52255249 -26.98880386]
[121.13655853 -41.26153946]
[125.75056458 -55.53427124]
[130.36457825 -69.80700684]
[116.45578766 -75.44113159]
[102.98980713 -82.06420898]
[90.03684235 -89.64169312]
[77.66441345 -98.13409424]
[65.93703461 -107.49712372]
[54.91584396 -117.68197632]
[44.65830612 -128.63554382]
[35.21789169 -140.30072021]
[26.64382935 -152.61668396]
[18.98081207 -165.51924133]
[12.26879501 -178.94111633]
[6.54277182 -192.81231689]
[1.83259583 -207.06054688]
[-1.83717656 -221.61151123]
[-4.44741249 -236.38934326]
[-5.98450327 -251.31701660]
[-6.44043493 -266.31668091]
[-5.81283092 -281.31015015]
[-4.10496283 -296.21923828]
[-1.32573473 -310.96621704]
[2.51036310 -325.47421265]
[7.38333130 -339.66760254]
[13.26776409 -353.47235107]
[20.13298225 -366.81649780]
[27.94319344 -379.63049316]
[36.65767670 -391.84750366]
[46.23100281 -403.40386963]
[56.61325836 -414.23928833]
[67.75031281 -424.29730225]
[79.58409882 -433.52548218]
[92.05293274 -441.87570190]
[105.09178925 -449.30441284]
[118.63270569 -455.77291870]
[132.60507202 -461.24746704]
[146.93605042 -465.69949341]
[161.55093384 -469.10586548]
[176.37350464 -471.44876099]
[191.32649231 -472.71597290]
[206.33193970 -472.90087891]
[221.31161499 -472.00256348]
[236.18742371 -470.02569580]
[250.88180542 -466.98056030]
[265.31814575 -462.88305664]
[279.42120361 -457.75451660]
[293.11743164 -451.62170410]
[306.33538818 -444.51657104]
[319.00622559 -436.47619629]
[331.06384277 -427.54244995]
[342.44540405 -417.76196289]
[353.09152222 -407.18566895]
[362.94674683 -395.86877441]
[371.95968628 -383.87023926]
[380.08331299 -371.25262451]
[387.27529907 -358.08169556]
[393.49816895 -344.42617798]
[398.71945190 -330.35720825]
[402.91192627 -315.94815063]
[406.05374146 -301.27410889]
[408.12854004 -286.41165161]
[409.12545776 -271.43820190]
[409.03933716 -256.43188477]
[407.87060547 -241.47085571]
[405.62533569 -226.63317871]
[402.31527710 -211.99620056]
[397.95770264 -197.63621521]
[392.57525635 -183.62811279]
[386.19604492 -170.04489136]
[378.85336304 -156.95741272]
[370.58541870 -144.43386841]
[361.43536377 -132.53958130]
[351.45086670 -121.33654785]
[340.68405151 -110.88317871]
[329.19097900 -101.23397064]
[317.03158569 -92.43923950]
[304.26931763 -84.54482269]
[290.97064209 -77.59189606]
[277.20492554 -71.61669922]
[263.04394531 -66.65039062]
[248.56150818 -62.71885300]
[233.83314514 -59.84259033]
[218.93562317 -58.03659821]
[203.94662476 -57.31028748]
[188.94427490 -57.66745377]
[174.00682068 -59.10622406]
[159.21211243 -61.61910629]
[144.63731384 -65.19299316]
[140.02330017 -50.92026138]
[135.40928650 -36.64752960]
[130.79528809 -22.37479591]
[126.18127441 -8.10206223]
[121.56726074 6.17067146]
[118.24500275 20.79813194]
[116.24098969 35.66365814]
[114.23697662 50.52918625]
[120.20453644 64.17607117]
[110.69288635 76.81881714]
[108.68887329 91.68434906]
[106.90641022 106.57806396]
[105.34588623 121.49667358]
[103.78536224 136.41526794]
[102.22483826 151.33387756]
[100.66431427 166.25248718]
[99.10379028 181.17108154]
[105.36341095 195.70132446]
[96.34400940 207.55458069]
[94.78349304 222.47319031]
[109.51885986 225.32945251]
[123.94921875 229.45912170]
[137.96473694 234.83078003]
[151.45874023 241.40354919]
[164.32853699 249.12738037]
[176.47616577 257.94351196]
[187.80920410 267.78485107]
[198.24136353 278.57647705]
[207.69326782 290.23626709]
[216.09298706 302.67550659]
[223.37657166 315.79946899]
[229.48860168 329.50833130]
[234.38256836 343.69769287]
[238.02120972 358.25961304]
[240.37683105 373.08325195]
[241.43151855 388.05581665]
[241.17723083 403.06329346]
[239.61590576 417.99151611]
[236.75944519 432.72683716]
[232.62956238 447.15713501]
[227.25770569 461.17257690]
[220.68476868 474.66650391]
[212.96073914 487.53619385]
[204.14443970 499.68368530]
[194.30294800 511.01657104]
[183.51116943 521.44860840]
[171.85124207 530.90032959]
[159.41191101 539.29986572]
[146.28782654 546.58331299]
[132.57890320 552.69512939]
[118.38945007 557.58886719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[39 179]
[40 178]
[42 176]
[43 175]
[44 174]
[45 173]
[46 172]
[47 171]
[50 170]
[51 169]
[53 167]
[54 166]
[55 165]
[68 164]
[69 163]
[70 162]
[71 161]
[72 160]
[73 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
