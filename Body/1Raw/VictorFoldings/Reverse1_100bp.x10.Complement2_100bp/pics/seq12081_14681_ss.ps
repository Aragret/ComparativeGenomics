%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACAGUCUAAGUGUUAGACUACAAAACCAAUUUGAUAUAAAUGUUCUCCUUUUGGGCCAUUACUACAGCCCCAACUCCCUAUCCUCCUCUUACCCCCUAxxxxxxxxxxGUGCCUGAUGUUGGUGCUGGUUACUAUACUUUUUGGUAGCAACAUAAAGUUGAUGUUCUUGUGGUUACUGGGGUUAUGCGUUUUGAUUGGGGGAUUAUUU\
) } def
/len { sequence length } bind def

/coor [
[150.70446777 429.42877197]
[159.75047302 417.41455078]
[170.74542236 407.15383911]
[183.35519409 398.95843506]
[177.48622131 385.15423584]
[171.61726379 371.35006714]
[165.74830627 357.54589844]
[162.34324646 372.15429688]
[152.16252136 383.17034912]
[137.86738586 387.71444702]
[123.19452667 384.59881592]
[111.97940826 374.63781738]
[107.15361786 360.43530273]
[109.97863007 345.70373535]
[119.71597290 334.29391479]
[133.82034302 329.18832397]
[148.60487366 331.72158813]
[160.20442200 341.23077393]
[156.44812012 326.70870972]
[152.69181824 312.18667603]
[148.93551636 297.66461182]
[145.17922974 283.14254761]
[141.42292786 268.62048340]
[137.66662598 254.09841919]
[133.91032410 239.57637024]
[130.04602051 225.08267212]
[126.07392120 210.61814880]
[122.10182190 196.15362549]
[117.91481018 181.74984741]
[113.51381683 167.41000366]
[109.11281586 153.07014465]
[104.60518646 138.76345825]
[99.99118042 124.49073029]
[95.37716675 110.21799469]
[88.62568665 123.61267853]
[74.89394379 129.64916992]
[60.45990753 125.56766510]
[51.92262650 113.23418427]
[53.18523026 98.28741455]
[63.67047501 87.56082916]
[78.58464050 85.95847321]
[91.11029053 94.21440125]
[88.00617981 79.53910065]
[84.90207672 64.86380005]
[81.79796600 50.18849564]
[78.69385529 35.51319504]
[75.48057556 20.86140633]
[72.15831757 6.23394632]
[68.72725677 -8.36837578]
[65.18758392 -22.94475174]
[49.65209961 -22.69161415]
[34.45484924 -25.89200974]
[20.35354042 -32.38320923]
[8.05053520 -41.83849716]
[-1.84212995 -53.78359604]
[-8.83319187 -67.62047577]
[-12.57655811 -82.65727234]
[-12.88843536 -98.14291382]
[-9.75635242 -113.30459595]
[-3.33963132 -127.38638306]
[6.03872013 -139.68685913]
[17.90826035 -149.59413147]
[31.67471886 -156.61616516]
[27.91841698 -171.13822937]
[23.56422997 -176.11341858]
[22.53129768 -181.70181274]
[24.27334404 -186.14865112]
[20.95108414 -200.77610779]
[17.62882614 -215.40356445]
[14.30656624 -230.03102112]
[3.70491219 -241.77476501]
[8.43116188 -255.89962769]
[5.10890293 -270.52709961]
[1.78664327 -285.15454102]
[-1.53561628 -299.78201294]
[-4.85787582 -314.40948486]
[-19.82997704 -313.15155029]
[-34.83143234 -313.98968506]
[-49.57023621 -316.90753174]
[-63.75949478 -321.84829712]
[-77.12300110 -328.71578979]
[-89.40064240 -337.37637329]
[-100.35343170 -347.66143799]
[-109.76815796 -359.37081909]
[-117.46156311 -372.27651978]
[-123.28390503 -386.12738037]
[-127.12183380 -400.65380859]
[-128.90065002 -415.57296753]
[-128.58573914 -430.59451294]
[-126.18321228 -445.42605591]
[-121.73984528 -459.77883911]
[-115.34213257 -473.37353516]
[-107.11460114 -485.94546509]
[-97.21739960 -497.24996948]
[-85.84319305 -507.06695557]
[-73.21337128 -515.20538330]
[-59.57378006 -521.50677490]
[-45.18992233 -525.84851074]
[-30.34177971 -528.14611816]
[-15.31837845 -528.35473633]
[-0.41215247 -526.47045898]
[14.08674431 -522.52990723]
[27.89608765 -516.60974121]
[40.74707031 -508.82525635]
[52.38955307 -499.32794189]
[62.59690094 -488.30270386]
[71.17043304 -475.96411133]
[77.94326019 -462.55236816]
[82.78353882 -448.32852173]
[85.59706879 -433.56945801]
[86.32907104 -418.56243896]
[84.96530151 -403.59960938]
[81.53230286 -388.97222900]
[76.09690857 -374.96499634]
[68.76490784 -361.85055542]
[59.67903137 -349.88424683]
[49.01612854 -339.29895020]
[36.98376083 -330.30068970]
[23.81614304 -323.06469727]
[9.76958466 -317.73171997]
[13.09184361 -303.10427856]
[16.41410255 -288.47680664]
[19.73636246 -273.84936523]
[23.05862236 -259.22189331]
[33.42264557 -248.52439880]
[28.93402672 -233.35328674]
[32.25628662 -218.72583008]
[35.57854462 -204.09835815]
[38.90080643 -189.47090149]
[42.44047546 -174.89453125]
[46.19677734 -160.37246704]
[60.68465805 -160.97344971]
[74.98554230 -158.54025269]
[88.47073364 -153.17726135]
[100.54684448 -145.11773682]
[110.68192291 -134.71366882]
[118.42889404 -122.42036438]
[123.44527435 -108.77655792]
[125.50830078 -94.38080597]
[124.52482605 -79.86518097]
[120.53553772 -65.86758423]
[113.71326447 -53.00366974]
[104.35549164 -41.83976364]
[92.87139893 -32.86796188]
[79.76396179 -26.48442459]
[83.30363464 -11.90804863]
[87.93676758 -6.14993763]
[86.78578186 2.91168690]
[90.10803986 17.53914642]
[94.65493011 23.36560059]
[93.36915588 32.40908432]
[96.47326660 47.08438492]
[99.57737732 61.75968933]
[102.68148804 76.43498993]
[105.78559875 91.11029053]
[109.64990234 105.60398865]
[114.26390839 119.87671661]
[118.87792206 134.14945984]
[124.49532318 141.35241699]
[123.45265961 148.66914368]
[127.85366058 163.00900269]
[132.25465393 177.34884644]
[136.82666016 182.12464905]
[138.10809326 187.66134644]
[136.56634521 192.18153381]
[140.53843689 206.64605713]
[144.51054382 221.11058044]
[149.80070496 228.55718994]
[148.43237305 235.82006836]
[152.18867493 250.34213257]
[155.94497681 264.86419678]
[159.70127869 279.38623047]
[163.45758057 293.90829468]
[167.21388245 308.43035889]
[170.97018433 322.95242310]
[174.72648621 337.47448730]
[179.55247498 351.67694092]
[185.42144775 365.48110962]
[191.29040527 379.28527832]
[197.15936279 393.08947754]
[211.81021118 389.69479370]
[226.82797241 388.89599609]
[241.75627136 390.71734619]
[256.14144897 395.10345459]
[269.54632568 401.92105103]
[281.56362915 410.96295166]
[291.82806396 421.95440674]
[300.02777100 434.56140137]
[305.91357422 448.40078735]
[309.30654907 463.05200195]
[310.10366821 478.06985474]
[308.28063965 492.99795532]
[303.89291382 507.38262939]
[297.07379150 520.78674316]
[288.03048706 532.80297852]
[277.03787231 543.06622314]
[264.42996216 551.26446533]
[250.58992004 557.14868164]
[235.93829346 560.54003906]
[220.92036438 561.33544922]
[205.99247742 559.51074219]
[191.60830688 555.12133789]
[178.20495605 548.30072021]
[166.18972778 539.25604248]
[155.92776489 528.26226807]
[147.73091125 515.65344238]
[141.84826660 501.81271362]
[138.45858765 487.16073608]
[137.66490173 472.14270020]
[139.49130249 457.21502686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 180]
[5 179]
[6 178]
[7 177]
[18 176]
[19 175]
[20 174]
[21 173]
[22 172]
[23 171]
[24 170]
[25 169]
[26 167]
[27 166]
[28 165]
[29 162]
[30 161]
[31 160]
[32 158]
[33 157]
[34 156]
[42 155]
[43 154]
[44 153]
[45 152]
[46 151]
[47 149]
[48 148]
[49 146]
[50 145]
[63 131]
[64 130]
[67 129]
[68 128]
[69 127]
[70 126]
[72 124]
[73 123]
[74 122]
[75 121]
[76 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
