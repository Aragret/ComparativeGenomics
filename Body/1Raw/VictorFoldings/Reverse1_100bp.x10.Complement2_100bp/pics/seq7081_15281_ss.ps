%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[109.74617767 620.98760986]
[106.65180969 606.23901367]
[107.04271698 591.17437744]
[110.89781952 576.60607910]
[118.00921631 563.31982422]
[127.99340057 552.03210449]
[140.31193542 543.35162354]
[154.30050659 537.74658203]
[152.07537842 522.91253662]
[149.85026550 508.07849121]
[140.31059265 496.63977051]
[145.91516113 481.84451294]
[143.69003296 467.01049805]
[141.46492004 452.17645264]
[138.79913330 437.41522217]
[135.69502258 422.73992920]
[125.49140930 411.88931274]
[130.20541382 396.78671265]
[127.10130310 382.11138916]
[123.99719238 367.43609619]
[109.79389954 362.94921875]
[99.67618561 351.88180542]
[96.43522644 337.13858032]
[101.03921509 322.65756226]
[112.34712982 312.35812378]
[109.24301910 297.68280029]
[106.13890839 283.00750732]
[103.03479767 268.33221436]
[99.93068695 253.65690613]
[89.72708893 242.80630493]
[94.44108582 227.70368958]
[91.33697510 213.02838135]
[86.95261383 227.37333679]
[77.98177338 239.39514160]
[65.47834015 247.68151855]
[50.91119003 251.25897217]
[35.99166870 249.70724487]
[22.47250175 243.20861816]
[11.94191265 232.52653503]
[5.63702059 218.91593933]
[4.29851866 203.97578430]
[8.08365345 189.46121216]
[16.54775047 177.07739258]
[28.69645500 168.27915955]
[43.10255051 164.10011292]
[58.07362366 165.03121948]
[71.85089111 170.96307373]
[82.81580353 181.19883728]
[89.68069458 194.53749084]
[90.12729645 179.54412842]
[90.57390594 164.55078125]
[91.02050781 149.55743408]
[83.66558075 136.60543823]
[91.81033325 123.04174805]
[92.25693512 108.04840088]
[92.59191132 93.05213928]
[92.81523895 78.05380249]
[93.03856659 63.05546570]
[90.15727997 57.10486221]
[90.64106750 51.44244385]
[93.49847412 47.61566162]
[90.75537872 38.90283966]
[94.29142761 32.41299057]
[95.18424225 17.43958664]
[96.07705688 2.46618056]
[96.96987152 -12.50722504]
[97.86269379 -27.48063087]
[98.75550842 -42.45403671]
[99.53682709 -57.43367386]
[100.20661163 -72.41871643]
[85.81565094 -80.01042175]
[76.21043396 -93.07118225]
[73.27307892 -108.95615387]
[77.54173279 -124.47589111]
[88.11287689 -136.53675842]
[102.83197021 -142.75761414]
[103.27857208 -157.75096130]
[103.72518158 -172.74430847]
[101.53221893 -176.49195862]
[100.72687531 -180.35408020]
[101.17475128 -183.88037109]
[102.60900116 -186.71049500]
[104.67115784 -188.60934448]
[106.00939178 -203.54953003]
[107.34763336 -218.48971558]
[108.68586731 -233.42990112]
[102.21060944 -247.86532593]
[111.05252838 -259.85156250]
[112.39076233 -274.79174805]
[113.61773682 -289.74148560]
[114.73338318 -304.69992065]
[106.35510254 -321.09765625]
[116.79394531 -335.20431519]
[117.68675995 -350.17773438]
[118.57957458 -365.15112305]
[119.47238922 -380.12454224]
[120.36520386 -395.09793091]
[121.25801849 -410.07135010]
[107.16757965 -415.57720947]
[95.46947479 -425.16937256]
[87.30976105 -437.90808105]
[83.48783875 -452.54528809]
[84.37815857 -467.64703369]
[89.89347839 -481.73376465]
[99.49346924 -493.42544556]
[112.23762512 -501.57662964]
[126.87739563 -505.38873291]
[141.97853088 -504.48831177]
[156.06158447 -498.96356201]
[167.74682617 -489.35571289]
[175.88946533 -476.60610962]
[179.69175720 -461.96377563]
[178.78120422 -446.86325073]
[173.24702454 -432.78390503]
[163.63136292 -421.10510254]
[150.87629700 -412.97100830]
[136.23143005 -409.17852783]
[135.33860779 -394.20510864]
[134.44580078 -379.23171997]
[133.55297852 -364.25830078]
[132.66017151 -349.28491211]
[131.76734924 -334.31149292]
[139.55940247 -325.05889893]
[138.93812561 -312.57699585]
[129.69183350 -303.58428955]
[128.57618713 -288.62582397]
[131.21348572 -281.72174072]
[127.33094788 -273.45352173]
[125.99271393 -258.51333618]
[132.56369019 -245.14651489]
[123.62604523 -232.09165955]
[122.28781128 -217.15147400]
[120.94957733 -202.21128845]
[119.61134338 -187.27110291]
[118.71852875 -172.29769897]
[118.27192688 -157.30435181]
[117.82531738 -142.31100464]
[130.43930054 -136.53556824]
[139.92924500 -126.35652161]
[144.83821106 -113.28818512]
[144.39414978 -99.29199219]
[138.63110352 -86.48212433]
[128.38905334 -76.80614471]
[115.19165039 -71.74892426]
[114.52186584 -56.76388931]
[117.36356354 -49.94138336]
[113.72891235 -41.56122208]
[112.83609772 -26.58781433]
[111.94328308 -11.61440945]
[111.05046844 3.35899639]
[110.15764618 18.33240128]
[109.26483154 33.30580902]
[108.48351288 48.28544617]
[108.03690338 63.27879333]
[107.81357574 78.27713013]
[107.59024811 93.27546692]
[110.62862396 100.74144745]
[107.25028992 108.49501038]
[106.80368042 123.48835754]
[114.12667084 137.51278687]
[106.01386261 150.00404358]
[105.56725311 164.99739075]
[105.12065125 179.99073792]
[104.67404175 194.98408508]
[106.01227570 209.92427063]
[109.11638641 224.59957886]
[119.54201508 236.49986267]
[114.60599518 250.55279541]
[117.71010590 265.22808838]
[120.81421661 279.90341187]
[123.91831970 294.57870483]
[127.02243042 309.25399780]
[141.53230286 314.09246826]
[151.60566711 325.46896362]
[154.61213684 340.26177979]
[149.84245300 354.47817993]
[138.67248535 364.33200073]
[141.77659607 379.00729370]
[144.88070679 393.68258667]
[155.30635071 405.58288574]
[150.37031555 419.63580322]
[153.47442627 434.31112671]
[156.48982239 437.43542480]
[158.18379211 440.99844360]
[158.58070374 444.53082275]
[157.85479736 447.61947632]
[156.29896545 449.95132446]
[158.52407837 464.78536987]
[160.74920654 479.61941528]
[170.44802856 492.11914062]
[164.68431091 505.85336304]
[166.90942383 520.68737793]
[169.13455200 535.52142334]
[184.15199280 536.77557373]
[198.47523499 541.45977783]
[211.33183289 549.32135010]
[222.02844238 559.93640137]
[229.98822021 572.73248291]
[234.78189087 587.01940918]
[236.15093994 602.02685547]
[234.02154541 616.94537354]
[228.50854492 630.97045898]
[219.90924072 643.34576416]
[208.68737793 653.40393066]
[195.44813538 660.60247803]
[180.90550232 664.55328369]
[165.84375000 665.04321289]
[151.07510376 662.04583740]
[137.39605713 655.72283936]
[125.54429626 646.41516113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 193]
[9 192]
[10 191]
[12 189]
[13 188]
[14 187]
[15 182]
[16 181]
[18 179]
[19 178]
[20 177]
[25 172]
[26 171]
[27 170]
[28 169]
[29 168]
[31 166]
[32 165]
[49 164]
[50 163]
[51 162]
[52 161]
[54 159]
[55 158]
[56 156]
[57 155]
[58 154]
[61 153]
[63 152]
[64 151]
[65 150]
[66 149]
[67 148]
[68 147]
[69 145]
[70 144]
[76 137]
[77 136]
[78 135]
[83 134]
[84 133]
[85 132]
[86 131]
[88 129]
[89 128]
[90 126]
[91 125]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
