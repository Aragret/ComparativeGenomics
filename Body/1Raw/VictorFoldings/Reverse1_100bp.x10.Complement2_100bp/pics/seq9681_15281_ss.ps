%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGGCAGCCUUUACCACUUCCCUCUGAGCUUCAUGAGACUCCGAACAUCCUCCCAUUUUAUCUCUGGGUCAUUUUAACAUUAUUCGUCACGAACUUAAUxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[223.76377869 374.28015137]
[232.69845581 362.16586304]
[243.88908386 352.09832764]
[256.87738037 344.48983765]
[252.05137634 330.28738403]
[247.22537231 316.08493042]
[242.39938354 301.88247681]
[237.57337952 287.68002319]
[231.39761353 274.01034546]
[223.92987061 261.00140381]
[216.46212769 247.99244690]
[208.99438477 234.98348999]
[201.52665710 221.97454834]
[194.05891418 208.96559143]
[186.59117126 195.95663452]
[179.12342834 182.94769287]
[169.63452148 171.33042908]
[158.37843323 161.41577148]
[147.12234497 151.50111389]
[135.86624146 141.58647156]
[124.61014557 131.67181396]
[113.35404968 121.75716400]
[102.09795380 111.84251404]
[90.69549561 102.09654999]
[79.14919281 92.52143097]
[67.60289001 82.94631195]
[61.16032410 81.46142578]
[57.05156326 77.53521729]
[55.86089325 72.91014099]
[44.60479736 62.99548721]
[33.34870148 53.08083725]
[22.09260750 43.16618347]
[10.83651161 33.25153351]
[-0.41958439 23.33688164]
[4.63372278 37.46005630]
[4.62106895 52.46005249]
[-0.45605958 66.57468414]
[-10.00120640 78.14577484]
[-22.89301872 85.81396484]
[-37.61697769 88.67841339]
[-52.44332886 86.40259552]
[-65.63028717 79.25387573]
[-75.62865448 68.07208252]
[-81.26384735 54.17083359]
[-81.87383270 39.18324280]
[-77.38696289 24.87003136]
[-68.33034515 12.91270351]
[-55.76794434 4.71599340]
[-41.17557526 1.24284315]
[-26.26753807 2.90127420]
[-12.79394341 9.49737644]
[-21.39250755 -2.79346180]
[-38.25445557 -10.19320583]
[-39.09350586 -27.72212219]
[-47.87410736 -39.88357925]
[-56.65471268 -52.04503632]
[-65.43531799 -64.20648956]
[-74.21591949 -76.36794281]
[-87.32906342 -69.04934692]
[-101.20319366 -63.30260849]
[-115.65068054 -59.20545197]
[-130.47613525 -56.81328583]
[-145.47906494 -56.15846252]
[-160.45655823 -57.24983978]
[-175.20606995 -60.07265091]
[-189.52813721 -64.58872986]
[-203.22906494 -70.73699188]
[-216.12356567 -78.43429565]
[-228.03724670 -87.57654572]
[-238.80899048 -98.04009247]
[-248.29313660 -109.68344116]
[-256.36141968 -122.34912109]
[-262.90469360 -135.86584473]
[-267.83450317 -150.05082703]
[-271.08419800 -164.71220398]
[-272.60977173 -179.65171814]
[-272.39062500 -194.66732788]
[-270.42971802 -209.55595398]
[-266.75357056 -224.11625671]
[-261.41189575 -238.15132141]
[-254.47692871 -251.47134399]
[-246.04246521 -263.89617920]
[-236.22257996 -275.25778198]
[-225.15005493 -285.40252686]
[-212.97463989 -294.19320679]
[-199.86100769 -301.51092529]
[-185.98649597 -307.25674438]
[-171.53874207 -311.35293579]
[-156.71311951 -313.74411011]
[-141.71015930 -314.39791870]
[-126.73273468 -313.30557251]
[-111.98340607 -310.48175049]
[-97.66163635 -305.96472168]
[-83.96112061 -299.81555176]
[-71.06713867 -292.11740112]
[-59.15406799 -282.97433472]
[-48.38301468 -272.51007080]
[-38.89964676 -260.86608887]
[-30.83222008 -248.19987488]
[-24.28983307 -234.68270874]
[-19.36096382 -220.49740601]
[-16.11227226 -205.83581543]
[-14.58769131 -190.89619446]
[-14.80784035 -175.88059998]
[-16.76974106 -160.99209595]
[-20.44686317 -146.43203735]
[-25.78947449 -132.39733887]
[-32.72532654 -119.07778168]
[-41.16061401 -106.65351105]
[-50.98126602 -95.29254913]
[-62.05446243 -85.14855194]
[-53.27385712 -72.98709106]
[-44.49325562 -60.82563782]
[-35.71265411 -48.66418076]
[-26.93204880 -36.50272751]
[-15.04410076 -34.26593018]
[-7.62930536 -24.20588303]
[-9.10166931 -11.39202595]
[-0.50310522 0.89881217]
[9.49506664 12.08078671]
[20.75116348 21.99543762]
[32.00725937 31.91008949]
[43.26335526 41.82474136]
[54.51945114 51.73939133]
[65.77554321 61.65404129]
[77.17800903 71.40000916]
[88.72431183 80.97512817]
[100.27061462 90.55024719]
[105.46804047 91.25784302]
[109.89904022 94.82710266]
[112.01260376 100.58641815]
[123.26869965 110.50106812]
[134.52479553 120.41571808]
[145.78089905 130.33036804]
[157.03698730 140.24502563]
[168.29309082 150.15966797]
[179.54917908 160.07432556]
[173.92738342 146.16766357]
[172.04370117 131.28640747]
[174.02308655 116.41757965]
[179.73426819 102.54737854]
[188.79841614 90.59576416]
[200.61436462 81.35543823]
[214.39837646 75.43928528]
[229.23622131 73.23970032]
[244.14376831 74.90257263]
[258.13223267 80.31761932]
[270.27383423 89.12566376]
[279.76324463 100.74250793]
[285.97106934 114.39765167]
[288.48556519 129.18539429]
[287.13998413 144.12490845]
[282.02352905 158.22532654]
[273.47555542 170.55142212]
[262.06304932 180.28562927]
[248.54296875 186.78231812]
[233.81201172 189.61061096]
[218.84725952 188.58288574]
[204.64126587 183.76731873]
[192.13238525 175.47994995]
[199.60012817 188.48889160]
[207.06785583 201.49784851]
[214.53559875 214.50680542]
[222.00334167 227.51574707]
[229.47108459 240.52470398]
[236.93882751 253.53366089]
[244.40657043 266.54260254]
[244.85385132 251.54928589]
[251.28730774 237.99897766]
[262.62277222 228.17517090]
[276.95001221 223.73332214]
[291.85467529 225.42199707]
[304.82501221 232.95658875]
[313.67532349 245.06741333]
[316.91415405 259.71356201]
[313.99575806 274.42691040]
[305.41186523 286.72802734]
[292.60906982 294.54391479]
[277.74481201 296.55746460]
[263.32403564 292.42938232]
[251.77583313 282.85403442]
[256.60183716 297.05648804]
[261.42782593 311.25894165]
[266.25384521 325.46139526]
[271.07983398 339.66384888]
[286.01473999 337.78402710]
[301.02227783 338.94940186]
[315.48794556 343.11224365]
[328.81936646 350.10211182]
[340.47064209 359.63275146]
[349.96459961 371.31390381]
[356.91253662 384.66720581]
[361.02990723 399.14590454]
[362.14813232 414.15704346]
[360.22137451 429.08596802]
[355.32858276 443.32131958]
[347.67007446 456.28018188]
[337.55947876 467.43191528]
[325.41082764 476.31982422]
[311.72161865 482.57998657]
[297.05233765 485.95605469]
[282.00375366 486.30975342]
[267.19207764 483.62661743]
[253.22386169 478.01654053]
[240.67103577 469.70919800]
[230.04768372 459.04479980]
[221.78880310 446.46005249]
[216.23258972 432.47030640]
[213.60658264 417.64837646]
[214.01829529 402.60128784]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 185]
[5 184]
[6 183]
[7 182]
[8 181]
[9 167]
[10 166]
[11 165]
[12 164]
[13 163]
[14 162]
[15 161]
[16 160]
[17 137]
[18 136]
[19 135]
[20 134]
[21 133]
[22 132]
[23 131]
[24 128]
[25 127]
[26 126]
[29 125]
[30 124]
[31 123]
[32 122]
[33 121]
[34 120]
[51 119]
[52 118]
[54 115]
[55 114]
[56 113]
[57 112]
[58 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
