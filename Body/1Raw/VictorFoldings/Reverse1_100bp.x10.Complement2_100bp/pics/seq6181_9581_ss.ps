%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[83.36623383 428.57977295]
[78.09893799 414.51437378]
[74.60007477 399.90829468]
[72.92269897 384.98297119]
[73.09223175 369.96459961]
[75.10610962 355.08093262]
[78.93379211 340.55755615]
[84.51726532 326.61465454]
[91.77187347 313.46359253]
[100.58764648 301.30374146]
[110.83094025 290.31945801]
[122.34645844 280.67724609]
[134.95964050 272.52325439]
[148.47926331 265.98114014]
[143.65327454 251.77870178]
[138.82727051 237.57624817]
[134.00128174 223.37377930]
[122.58058167 213.81256104]
[125.46651459 198.25679016]
[120.64051819 184.05433655]
[115.81452179 169.85188293]
[100.94788361 171.61344910]
[86.03982544 170.24598694]
[71.74172974 165.80923462]
[58.67834091 158.49705505]
[47.42043304 148.62893677]
[38.45990372 136.63606262]
[32.18827057 123.04244232]
[28.87955666 108.44200897]
[28.67833710 93.47272491]
[31.59340096 78.78862762]
[37.49737930 65.03133392]
[46.13230896 52.80194092]
[57.12089920 42.63478470]
[69.98302460 34.97411346]
[65.15702820 20.77165604]
[60.33102798 6.56920147]
[55.50503159 -7.63325453]
[50.67903137 -21.83571053]
[45.85303497 -36.03816605]
[41.02703857 -50.24061966]
[36.20103836 -64.44307709]
[31.37504196 -78.64553070]
[24.99643707 -92.22174072]
[17.14468193 -105.00257874]
[9.29292583 -117.78342438]
[1.44117069 -130.56427002]
[-6.41058493 -143.34510803]
[-14.26234055 -156.12594604]
[-22.11409569 -168.90679932]
[-29.96585083 -181.68763733]
[-37.81760788 -194.46847534]
[-45.66936111 -207.24932861]
[-63.78050232 -208.11210632]
[-77.62674713 -219.57337952]
[-81.78442383 -236.89865112]
[-74.77233124 -253.10673523]
[-83.00113678 -265.64813232]
[-91.22994995 -278.18954468]
[-99.45875549 -290.73092651]
[-112.90091705 -284.03433228]
[-127.04077148 -278.97457886]
[-141.67980957 -275.62277222]
[-156.61254883 -274.02593994]
[-171.62933350 -274.20648193]
[-186.51934814 -276.16189575]
[-201.07357788 -279.86468506]
[-215.08769226 -285.26290894]
[-228.36495972 -292.28079224]
[-240.71899414 -300.81979370]
[-251.97634888 -310.76000977]
[-261.97900391 -321.96194458]
[-270.58651733 -334.26834106]
[-277.67807007 -347.50637817]
[-283.15411377 -361.49029541]
[-286.93774414 -376.02371216]
[-288.97589111 -390.90261841]
[-289.23989868 -405.91818237]
[-287.72607422 -420.85955811]
[-284.45568848 -435.51699829]
[-279.47460938 -449.68475342]
[-272.85281372 -463.16394043]
[-264.68322754 -475.76528931]
[-255.08055115 -487.31195068]
[-244.17958069 -497.64175415]
[-232.13336182 -506.60977173]
[-219.11100769 -514.09002686]
[-205.29531860 -519.97760010]
[-190.88026428 -524.18975830]
[-176.06817627 -526.66735840]
[-161.06703186 -527.37573242]
[-146.08738708 -526.30480957]
[-131.33955383 -523.46966553]
[-117.03057861 -518.91015625]
[-103.36131287 -512.69018555]
[-90.52366638 -504.89718628]
[-78.69786072 -495.64047241]
[-68.04989624 -485.05004883]
[-58.72927475 -473.27453613]
[-50.86682892 -460.47930908]
[-44.57294083 -446.84393311]
[-39.93596268 -432.55984497]
[-37.02099609 -417.82760620]
[-35.86895752 -402.85397339]
[-36.49602127 -387.84921265]
[-38.89338684 -373.02392578]
[-43.02739716 -358.58627319]
[-48.84001923 -344.73889160]
[-56.24964905 -331.67620850]
[-65.15226746 -319.58157349]
[-75.42289734 -308.62481689]
[-86.91735840 -298.95974731]
[-78.68854523 -286.41833496]
[-70.45973969 -273.87695312]
[-62.23093033 -261.33554077]
[-50.15317154 -262.56149292]
[-38.63209915 -258.51208496]
[-29.87446976 -249.89785767]
[-25.58527756 -238.30982971]
[-26.63604736 -225.92579651]
[-32.88851929 -215.10107422]
[-25.03676414 -202.32023621]
[-17.18500900 -189.53939819]
[-9.33325291 -176.75854492]
[-1.48149776 -163.97770691]
[6.37025785 -151.19686890]
[14.22201347 -138.41601562]
[22.07376862 -125.63517761]
[29.92552376 -112.85433960]
[37.77727890 -100.07349396]
[37.27912521 -115.06522369]
[42.16139221 -129.24842834]
[51.78173447 -140.75708008]
[64.87442780 -148.07701111]
[79.71690369 -150.24516296]
[94.35638428 -146.97625732]
[106.86678314 -138.70040894]
[115.60215759 -126.50642395]
[119.41320801 -111.99863434]
[117.79852295 -97.08579254]
[110.97055054 -83.72994232]
[99.82762909 -73.68827057]
[85.83579254 -68.28192902]
[70.83590698 -68.22222900]
[56.80147552 -73.51700592]
[45.57749939 -83.47152710]
[50.40349579 -69.26907349]
[55.22949219 -55.06661987]
[60.05549240 -40.86416245]
[64.88148499 -26.66170692]
[69.70748901 -12.45925236]
[74.53348541 1.74320364]
[79.35948181 15.94565964]
[84.18547821 30.14811516]
[99.05211639 28.38654900]
[113.96017456 29.75401497]
[128.25827026 34.19076538]
[141.32165527 41.50294495]
[152.57955933 51.37105560]
[161.54010010 63.36392975]
[167.81173706 76.95755768]
[171.12043762 91.55799103]
[171.32165527 106.52727509]
[168.40660095 121.21137238]
[162.50262451 134.96865845]
[153.86769104 147.19805908]
[142.87910461 157.36521912]
[130.01698303 165.02589417]
[134.84297180 179.22834778]
[139.66897583 193.43080139]
[151.43486023 204.00787354]
[148.20373535 218.54779053]
[153.02972412 232.75024414]
[157.85572815 246.95269775]
[162.68171692 261.15515137]
[177.38825989 258.10601807]
[192.35804749 256.88729858]
[207.36412048 257.51745605]
[222.17901611 259.98696899]
[236.57814026 264.25839233]
[250.34320068 270.26696777]
[263.26550293 277.92160034]
[275.14920044 287.10623169]
[285.81408691 297.68167114]
[295.09851074 309.48757935]
[302.86169434 322.34494019]
[308.98599243 336.05889893]
[313.37854004 350.42153931]
[315.97274780 365.21511841]
[316.72930908 380.21536255]
[315.63671875 395.19485474]
[312.71154785 409.92657471]
[307.99813843 424.18713379]
[301.56799316 437.76037598]
[293.51852417 450.44049072]
[283.97180176 462.03530884]
[273.07254028 472.36901855]
[260.98599243 481.28500366]
[247.89532471 488.64804077]
[233.99905396 494.34655762]
[219.50779724 498.29412842]
[204.64126587 500.43093872]
[189.62483215 500.72457886]
[174.68612671 499.17062378]
[160.05163574 495.79257202]
[145.94319153 490.64169312]
[132.57469177 483.79605103]
[120.14879608 475.35943604]
[108.85387421 465.45971680]
[98.86115265 454.24700928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 175]
[15 174]
[16 173]
[17 172]
[19 170]
[20 169]
[21 168]
[35 154]
[36 153]
[37 152]
[38 151]
[39 150]
[40 149]
[41 148]
[42 147]
[43 146]
[44 130]
[45 129]
[46 128]
[47 127]
[48 126]
[49 125]
[50 124]
[51 123]
[52 122]
[53 121]
[57 115]
[58 114]
[59 113]
[60 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
