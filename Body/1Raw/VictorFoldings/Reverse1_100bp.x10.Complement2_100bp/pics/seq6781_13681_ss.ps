%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[-18.91998291 641.39001465]
[-30.82169342 650.55126953]
[-43.75903320 658.18048096]
[-57.53587341 664.16198730]
[-71.94335938 668.40509033]
[-86.76308441 670.84545898]
[-101.77037048 671.44610596]
[-116.73773193 670.19799805]
[-131.43824768 667.11993408]
[-145.64907837 662.25866699]
[-159.15476990 655.68780518]
[-171.75059509 647.50708008]
[-183.24562073 637.84039307]
[-193.46554565 626.83441162]
[-202.25546265 614.65582275]
[-209.48211670 601.48937988]
[-215.03594971 587.53466797]
[-218.83277893 573.00317383]
[-220.81503296 558.11529541]
[-220.95265198 543.09661865]
[-219.24357605 528.17486572]
[-215.71369934 513.57623291]
[-210.41653442 499.52206421]
[-203.43237305 486.22540283]
[-194.86711121 473.88781738]
[-184.85060120 462.69635010]
[-173.53466797 452.82064819]
[-161.09088135 444.41043091]
[-147.70785522 437.59320068]
[-133.58851624 432.47232056]
[-118.94686890 429.12539673]
[-104.00489807 427.60314941]
[-88.98912048 427.92871094]
[-74.12716675 430.09707642]
[-70.15506744 415.63256836]
[-66.18297577 401.16802979]
[-62.21087646 386.70352173]
[-58.23878098 372.23898315]
[-54.26668549 357.77447510]
[-64.74173737 368.51101685]
[-78.22701263 375.07965088]
[-93.13829041 376.70874023]
[-107.72379303 373.20687866]
[-120.27004242 364.98547363]
[-129.30310059 353.01034546]
[-133.76179504 338.68832397]
[-133.12231445 323.70196533]
[-127.45977020 309.81182861]
[-117.43941498 298.64974976]
[-104.23841095 291.52697754]
[-89.40761566 289.28036499]
[-74.68932343 292.17376709]
[-61.81262589 299.86730957]
[-52.29026794 311.45718384]
[-47.24092865 325.58178711]
[-47.25806808 340.58331299]
[-39.98484039 327.46459961]
[-32.71160889 314.34591675]
[-25.43837929 301.22723389]
[-24.94433784 293.85308838]
[-17.95794868 287.96853638]
[-10.49020767 274.95956421]
[-9.88642979 267.59362793]
[-2.81320310 261.81372070]
[4.84739447 248.91738892]
[12.50799179 236.02107239]
[20.16858864 223.12474060]
[27.82918739 210.22840881]
[27.10103798 192.69453430]
[43.23557281 183.81996155]
[50.70331573 170.81100464]
[58.17105484 157.80204773]
[65.63879395 144.79309082]
[65.26478577 129.90318298]
[78.84546661 121.78681183]
[86.31320953 108.77786255]
[85.83865356 92.01029968]
[100.43589020 83.74610901]
[107.70912170 70.62741089]
[114.48911285 57.24713898]
[120.76647186 43.62382126]
[126.94223785 29.95415306]
[133.01606750 16.23888588]
[139.08990479 2.52361917]
[145.16374207 -11.19164753]
[139.71034241 -25.78268051]
[146.06546021 -39.60538483]
[160.00938416 -44.71444702]
[166.08322144 -58.42971420]
[171.84924316 -72.27719879]
[177.30461121 -86.25000000]
[182.75996399 -100.22279358]
[188.21531677 -114.19559479]
[186.02685547 -129.86471558]
[197.86309814 -138.90643311]
[203.31845093 -152.87922668]
[208.77381897 -166.85203552]
[214.22917175 -180.82482910]
[201.22584534 -188.36233521]
[189.52558899 -197.79653931]
[179.40264893 -208.90629578]
[171.09434509 -221.43116760]
[164.79541016 -235.07756042]
[160.65353394 -249.52557373]
[158.76577759 -264.43655396]
[159.17640686 -279.46090698]
[161.87579346 -294.24649048]
[166.80067444 -308.44671631]
[173.83557129 -321.72866821]
[182.81561279 -333.78103638]
[193.53025818 -344.32128906]
[205.72836304 -353.10232544]
[219.12399292 -359.91830444]
[233.40310669 -364.60949707]
[248.23100281 -367.06588745]
[263.26010132 -367.22991943]
[278.13806152 -365.09771729]
[292.51617432 -360.71929932]
[306.05737305 -354.19726562]
[318.44421387 -345.68453979]
[329.38635254 -335.38064575]
[338.62725830 -323.52713013]
[345.95037842 -310.40188599]
[351.18399048 -296.31253052]
[354.20541382 -281.58938599]
[354.94384766 -266.57754517]
[353.38198853 -251.62892151]
[349.55639648 -237.09394836]
[343.55679321 -223.31333923]
[335.52380371 -210.61012268]
[325.64575195 -199.28208923]
[314.15417480 -189.59478760]
[301.31845093 -181.77528381]
[287.43948364 -176.00688171]
[272.84259033 -172.42481995]
[257.86996460 -171.11305237]
[242.87255859 -172.10234070]
[228.20196533 -175.36947632]
[222.74661255 -161.39666748]
[217.29125977 -147.42387390]
[211.83589172 -133.45108032]
[214.41455078 -118.78138733]
[202.18812561 -108.74023438]
[196.73275757 -94.76744080]
[191.27740479 -80.79463959]
[185.82205200 -66.82184601]
[186.89530945 -63.46320343]
[186.39509583 -59.41785431]
[184.01638794 -55.43099594]
[179.79847717 -52.35588074]
[173.72465515 -38.64061356]
[179.31285095 -24.88170624]
[173.34851074 -10.88595200]
[158.87901306 -5.11781359]
[152.80517578 8.59745312]
[146.73133850 22.31271935]
[140.65750122 36.02798462]
[140.82331848 43.41678238]
[134.38978577 49.90118408]
[128.11242676 63.52449799]
[142.87359619 60.85841370]
[154.26145935 70.62142181]
[153.88131714 85.61660767]
[142.01339722 94.79006958]
[127.40628052 91.37947845]
[120.82781219 77.90064240]
[113.55458069 91.01933289]
[116.08342743 102.38798523]
[110.36057281 112.53146362]
[99.32216644 116.24560547]
[91.85442352 129.25456238]
[91.69429016 145.07495117]
[78.64775085 152.26083374]
[71.18000793 165.26979065]
[63.71226501 178.27874756]
[56.24452591 191.28768921]
[58.85421371 203.91909790]
[52.36650085 214.60054016]
[40.72551346 217.88900757]
[33.06491470 230.78533936]
[25.40431786 243.68167114]
[17.74372101 256.57800293]
[10.08312416 269.47430420]
[2.51874495 282.42730713]
[-4.94899607 295.43627930]
[-12.31968594 308.50045776]
[-19.59291458 321.61914062]
[-26.86614418 334.73785400]
[-34.13937378 347.85653687]
[-39.80216217 361.74655151]
[-43.77425766 376.21109009]
[-47.74635315 390.67559814]
[-51.71844864 405.14013672]
[-55.69054413 419.60464478]
[-59.66264343 434.06918335]
[-45.77759171 439.79501343]
[-32.70143890 447.18377686]
[-20.63241768 456.12347412]
[-9.75349236 466.47860718]
[-0.22958314 478.09216309]
[7.79492998 490.78808594]
[14.19839668 504.37393188]
[18.88374329 518.64373779]
[21.77993965 533.38116455]
[22.84308243 548.36279297]
[22.05705070 563.36151123]
[19.43376541 578.14996338]
[15.01299095 592.50390625]
[8.86174679 606.20581055]
[1.07328403 619.04791260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 195]
[35 194]
[36 193]
[37 192]
[38 191]
[39 190]
[56 189]
[57 188]
[58 187]
[59 186]
[61 185]
[62 184]
[64 183]
[65 182]
[66 181]
[67 180]
[68 179]
[70 176]
[71 175]
[72 174]
[73 173]
[75 171]
[76 170]
[78 167]
[79 166]
[80 160]
[81 159]
[82 157]
[83 156]
[84 155]
[85 154]
[88 151]
[89 150]
[90 146]
[91 145]
[92 144]
[93 143]
[95 141]
[96 140]
[97 139]
[98 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
