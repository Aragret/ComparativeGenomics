%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[87.31221771 577.00585938]
[72.30798340 577.25439453]
[57.32358551 576.44390869]
[42.43368912 574.57843018]
[27.71247101 571.66729736]
[13.23327160 567.72503662]
[-0.93177408 562.77117920]
[-14.71209526 556.83050537]
[-28.03903770 549.93261719]
[-40.84620667 542.11175537]
[-53.06980133 533.40698242]
[-64.64891815 523.86169434]
[-75.52587128 513.52337646]
[-85.64646912 502.44357300]
[-94.96029663 490.67742920]
[-103.42095184 478.28363037]
[-110.98627472 465.32391357]
[-117.61859131 451.86279297]
[-123.28484344 437.96737671]
[-127.95681000 423.70690918]
[-131.61120605 409.15237427]
[-134.22984314 394.37631226]
[-135.79966736 379.45236206]
[-136.31285095 364.45483398]
[-135.76684570 349.45846558]
[-134.16436768 334.53799438]
[-131.51339722 319.76770020]
[-127.82714081 305.22122192]
[-123.12397003 290.97097778]
[-117.42731476 277.08801270]
[-110.76555634 263.64144897]
[-103.17188263 250.69830322]
[-94.68412018 238.32304382]
[-85.34455872 226.57734680]
[-75.19972992 215.51971436]
[-64.30017853 205.20521545]
[-52.70019913 195.68527222]
[-40.45758438 187.00729370]
[-27.63332558 179.21452332]
[-14.29131603 172.34577942]
[-0.49802563 166.43527222]
[13.67782879 161.51245117]
[28.16562271 157.60186768]
[42.89317703 154.72297668]
[57.78712463 152.89012146]
[72.77325439 152.11244202]
[87.77690887 152.39381409]
[89.11515045 137.45362854]
[90.45338440 122.51344299]
[91.79161835 107.57325745]
[93.01859283 92.62351990]
[94.13423920 77.66506958]
[95.24988556 62.70661545]
[96.36553955 47.74816132]
[97.48118591 32.78971100]
[98.59683228 17.83125687]
[91.90737152 3.49383330]
[100.56985474 -8.62271309]
[101.68550110 -23.58116722]
[102.80115509 -38.53961945]
[87.94101715 -40.62175369]
[73.24681854 -43.66142273]
[58.78020096 -47.64587021]
[44.60183716 -52.55838394]
[30.77119064 -58.37836456]
[17.34627914 -65.08139801]
[4.38340902 -72.63936615]
[-8.06304741 -81.02057648]
[-19.94088364 -90.18986511]
[-31.20028305 -100.10877991]
[-41.79401779 -110.73571777]
[-51.67765045 -122.02609253]
[-60.80973053 -133.93257141]
[-69.15195465 -146.40518188]
[-76.66932678 -159.39163208]
[-83.33032227 -172.83746338]
[-89.10699463 -186.68624878]
[-93.97512817 -200.87991333]
[-97.91429138 -215.35893250]
[-100.90795898 -230.06256104]
[-102.94358826 -244.92913818]
[-104.01263428 -259.89630127]
[-104.11061096 -274.90127563]
[-103.23711395 -289.88113403]
[-101.39579773 -304.77304077]
[-98.59439087 -319.51449585]
[-94.84464264 -334.04373169]
[-90.16227722 -348.29974365]
[-84.56694794 -362.22280884]
[-78.08210754 -375.75445557]
[-70.73496246 -388.83798218]
[-62.55632401 -401.41845703]
[-53.58050919 -413.44317627]
[-43.84515381 -424.86166382]
[-33.39109802 -435.62603760]
[-22.26218796 -445.69113159]
[-10.50510311 -455.01473999]
[1.83084321 -463.55776978]
[14.69390965 -471.28439331]
[28.03014374 -478.16213989]
[41.78360748 -484.16226196]
[55.89661407 -489.25949097]
[70.30996704 -493.43252563]
[84.96321106 -496.66381836]
[99.79489136 -498.93981934]
[114.74279022 -500.25100708]
[129.74421692 -500.59185791]
[144.73623657 -499.96096802]
[159.65599060 -498.36096191]
[174.44088745 -495.79855347]
[189.02890015 -492.28448486]
[203.35885620 -487.83349609]
[217.37065125 -482.46426392]
[231.00550842 -476.19931030]
[244.20623779 -469.06494141]
[256.91748047 -461.09100342]
[269.08590698 -452.31103516]
[280.66049194 -442.76177979]
[291.59265137 -432.48333740]
[301.83660889 -421.51882935]
[311.34930420 -409.91418457]
[320.09091187 -397.71817017]
[328.02471924 -384.98184204]
[335.11746216 -371.75869751]
[341.33941650 -358.10415649]
[346.66445923 -344.07550049]
[351.07025146 -329.73159790]
[354.53829956 -315.13256836]
[357.05410767 -300.33969116]
[358.60708618 -285.41497803]
[359.19073486 -270.42102051]
[358.80261230 -255.42074585]
[357.44430542 -240.47706604]
[355.12155151 -225.65263367]
[351.84408569 -211.00964355]
[347.62567139 -196.60951233]
[342.48394775 -182.51263428]
[336.44055176 -168.77815247]
[329.52078247 -155.46366882]
[321.75366211 -142.62501526]
[313.17178345 -130.31605530]
[303.81115723 -118.58841705]
[293.71102905 -107.49128723]
[282.91378784 -97.07121277]
[271.46466064 -87.37189484]
[259.41171265 -78.43402100]
[246.80551147 -70.29508209]
[233.69889832 -62.98920822]
[220.14688110 -56.54705048]
[206.20626831 -50.99562454]
[191.93554688 -46.35821915]
[177.39457703 -42.65428162]
[162.64434814 -39.89935303]
[147.74671936 -38.10498428]
[132.76419067 -37.27870178]
[117.75960541 -37.42396927]
[116.64395905 -22.46551704]
[115.52830505 -7.50706434]
[122.29756927 5.76042986]
[113.55529022 18.94690514]
[112.43963623 33.90535736]
[111.32398987 48.86381149]
[110.20834351 63.82226562]
[109.09268951 78.78071594]
[107.97704315 93.73917389]
[110.56565094 101.37275696]
[106.73179626 108.91149139]
[105.39356232 123.85167694]
[104.05532837 138.79185486]
[102.71709442 153.73204041]
[117.53192139 156.12159729]
[132.14128113 159.55023193]
[146.47239685 164.00085449]
[160.45387268 169.45129395]
[174.01605225 175.87440491]
[187.09135437 183.23817444]
[199.61465454 191.50593567]
[211.52357483 200.63647461]
[222.75874329 210.58432007]
[233.26422119 221.29991150]
[242.98767090 232.72985840]
[251.88063049 244.81721497]
[259.89880371 257.50177002]
[267.00222778 270.72030640]
[273.15554810 284.40701294]
[278.32809448 298.49365234]
[282.49411011 312.91009521]
[285.63278198 327.58447266]
[287.72854614 342.44369507]
[288.77090454 357.41375732]
[288.75469971 372.42004395]
[287.68002319 387.38778687]
[285.55218506 402.24246216]
[282.38180542 416.91003418]
[278.18472290 431.31744385]
[272.98175049 445.39288330]
[266.79891968 459.06628418]
[259.66693115 472.26943970]
[251.62139893 484.93664551]
[242.70236206 497.00479126]
[232.95426941 508.41369629]
[222.42567444 519.10656738]
[211.16903687 529.03015137]
[199.24044800 538.13494873]
[186.69932556 546.37567139]
[173.60813904 553.71118164]
[160.03213501 560.10498047]
[146.03892517 565.52520752]
[131.69822693 569.94488525]
[117.08149719 573.34197998]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 170]
[48 169]
[49 168]
[50 167]
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[58 158]
[59 157]
[60 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
