%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCAUCCUCAGUCCAUCAAUCAUAAUCCUCCCCCCAACAAUCCCCCAGCCUCCUUUUCCAACCCCUUGUCGAUUUAUCCAACAACAACUAAACCAAUUUUxxxxxxxxxxUCGAUAGGUAACCAGAAUCCGGGGUUUUUAAAACCACGUUGAGGUUUAUUUUCAUUAUUGGUACGUGUGAUGAUAUUGGUGGGAUUGGGACUGAAGGGAU\
) } def
/len { sequence length } bind def

/coor [
[68.78237915 485.88385010]
[52.39958954 485.15158081]
[45.08351517 470.47482300]
[54.36030960 456.95178223]
[55.03009415 441.96673584]
[55.69987869 426.98168945]
[56.36966324 411.99667358]
[56.81626892 397.00329590]
[57.03959656 382.00497437]
[57.26292419 367.00662231]
[57.48625183 352.00830078]
[57.70957947 337.00994873]
[57.93290710 322.01162720]
[58.15623474 307.01327515]
[55.53166962 303.02322388]
[55.38577652 297.34204102]
[58.61614227 291.57348633]
[59.28592682 276.58843994]
[59.95571136 261.60339355]
[60.62549591 246.61836243]
[51.94163513 258.84909058]
[38.85310745 266.17645264]
[23.88709450 267.18566895]
[9.93330669 261.68188477]
[-0.31400281 250.72776794]
[-4.87623739 236.43840027]
[-2.87250161 221.57283020]
[5.31031513 209.00137329]
[18.09223938 201.15138245]
[33.00527954 199.53855896]
[47.16996384 204.47431946]
[57.85131454 215.00564575]
[62.98708725 229.10035706]
[66.30934906 214.47290039]
[69.63160706 199.84544373]
[72.95386505 185.21797180]
[68.22761536 171.09310913]
[78.82926941 159.34936523]
[82.15152740 144.72190857]
[85.47379303 130.09445190]
[88.79605103 115.46698761]
[81.16312408 103.15095520]
[84.37232208 89.02129364]
[96.57649231 81.21075439]
[98.80160522 66.37670898]
[99.91725922 51.41825485]
[101.03290558 36.45980072]
[100.69792938 21.46354294]
[98.91546631 6.56982470]
[97.13299561 -8.32389259]
[95.35053253 -23.21760941]
[93.56806946 -38.11132812]
[91.56404877 -52.97685623]
[88.89825439 -67.73807526]
[85.79414368 -82.41337585]
[82.69003296 -97.08867645]
[79.58592987 -111.76397705]
[64.75190735 -121.03604889]
[61.28166199 -137.83700562]
[70.84428406 -151.67156982]
[67.52202606 -166.29902649]
[64.19976807 -180.92648315]
[60.87750626 -195.55395508]
[57.55524445 -210.18141174]
[54.23298645 -224.80886841]
[39.34771347 -222.86900330]
[24.34619141 -222.33155823]
[9.36026096 -223.20124817]
[-5.47837877 -225.47044373]
[-20.03932381 -229.11918640]
[-34.19460678 -234.11543274]
[-47.81983185 -240.41525269]
[-60.79525375 -247.96328735]
[-73.00684357 -256.69320679]
[-84.34727478 -266.52828979]
[-94.71690369 -277.38211060]
[-104.02458191 -289.15927124]
[-112.18851471 -301.75628662]
[-119.13696289 -315.06243896]
[-124.80886078 -328.96078491]
[-129.15435791 -343.32919312]
[-132.13526917 -358.04138184]
[-133.72538757 -372.96807861]
[-133.91075134 -387.97808838]
[-132.68971252 -402.93948364]
[-130.07302856 -417.72079468]
[-126.08368683 -432.19213867]
[-120.75673676 -446.22631836]
[-114.13899231 -459.69998169]
[-106.28862762 -472.49475098]
[-97.27462006 -484.49816895]
[-87.17618561 -495.60476685]
[-76.08208466 -505.71688843]
[-64.08979797 -514.74572754]
[-51.30472946 -522.61187744]
[-37.83923340 -529.24627686]
[-23.81164551 -534.59051514]
[-9.34524632 -538.59771729]
[5.43283224 -541.23266602]
[20.39271545 -542.47216797]
[35.40293503 -542.30535889]
[50.33157349 -540.73364258]
[65.04743958 -537.77093506]
[79.42119598 -533.44317627]
[93.32653809 -527.78845215]
[106.64125824 -520.85644531]
[119.24833679 -512.70806885]
[131.03698730 -503.41491699]
[141.90359497 -493.05871582]
[151.75267029 -481.73040771]
[160.49766541 -469.52960205]
[168.06172180 -456.56353760]
[174.37837219 -442.94607544]
[179.39207458 -428.79699707]
[183.05880737 -414.24057007]
[185.34631348 -399.40472412]
[186.23451233 -384.41989136]
[185.71559143 -369.41772461]
[183.79409790 -354.53005981]
[180.48693848 -339.88775635]
[175.82316589 -325.61947632]
[169.84376526 -311.85061646]
[162.60130310 -298.70217896]
[154.15939331 -286.28973389]
[144.59226990 -274.72235107]
[133.98396301 -264.10171509]
[122.42773438 -254.52108765]
[110.02513123 -246.06474304]
[96.88515472 -238.80694580]
[83.12328339 -232.81152344]
[68.86044312 -228.13113403]
[72.18270874 -213.50366211]
[75.50496674 -198.87620544]
[78.82722473 -184.24874878]
[82.14948273 -169.62129211]
[85.47174072 -154.99382019]
[97.22822571 -149.71987915]
[103.90010071 -138.46961975]
[102.85884857 -125.23609161]
[94.26123047 -114.86808777]
[97.36534119 -100.19278717]
[100.46945190 -85.51748657]
[103.57356262 -70.84218597]
[105.84674835 -69.20183563]
[107.60714722 -66.56221008]
[108.47087860 -63.11411285]
[108.13018036 -59.18366241]
[106.39809418 -55.20197296]
[109.63811493 -51.69322586]
[110.70836639 -46.11186600]
[108.46178436 -39.89379120]
[110.24424744 -25.00007629]
[112.02671814 -10.10635853]
[113.80918121 4.78735876]
[115.59164429 19.68107605]
[121.86962891 6.05804586]
[133.09193420 -3.89482927]
[147.36743164 -8.50031471]
[162.29042053 -6.98230457]
[175.34613037 0.40338913]
[184.33444214 12.41214752]
[187.74066162 27.02028275]
[184.99078369 41.76606750]
[176.54823303 54.16458130]
[163.83569336 62.12645340]
[148.99546814 64.30996704]
[134.52839661 60.34716797]
[122.87242126 50.90585327]
[115.99135590 37.57545090]
[114.87570953 52.53390503]
[113.76006317 67.49235535]
[123.48571777 56.07256699]
[137.58485413 50.95255280]
[152.37197876 53.47067642]
[163.98176575 62.96870041]
[169.37947083 76.96387482]
[167.15412903 91.79788208]
[157.88745117 103.59315491]
[144.00170898 109.26644135]
[129.12660217 107.33474731]
[117.15046692 98.30302429]
[111.20394897 84.53301239]
[118.83687592 96.84904480]
[115.62767792 110.97870636]
[103.42350769 118.78924561]
[100.10124969 133.41670227]
[96.77899170 148.04417419]
[93.45673370 162.67163086]
[97.94535065 177.84274292]
[87.58132935 188.54023743]
[84.25906372 203.16769409]
[80.93680573 217.79515076]
[77.61454773 232.42262268]
[75.61053467 247.28814697]
[74.94075012 262.27319336]
[74.27096558 277.25820923]
[73.60118103 292.24325562]
[73.15457153 307.23660278]
[72.93124390 322.23495483]
[72.70791626 337.23327637]
[72.48458862 352.23162842]
[72.26126099 367.22994995]
[72.03793335 382.22830200]
[71.81460571 397.22662354]
[74.69589233 403.17724609]
[74.21211243 408.83966064]
[71.35470581 412.66644287]
[70.68491364 427.65148926]
[70.01512909 442.63653564]
[69.34534454 457.62155151]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 210]
[5 209]
[6 208]
[7 207]
[8 204]
[9 203]
[10 202]
[11 201]
[12 200]
[13 199]
[14 198]
[17 197]
[18 196]
[19 195]
[20 194]
[33 193]
[34 192]
[35 191]
[36 190]
[38 188]
[39 187]
[40 186]
[41 185]
[44 182]
[45 171]
[46 170]
[47 169]
[48 155]
[49 154]
[50 153]
[51 152]
[52 151]
[53 148]
[54 143]
[55 142]
[56 141]
[57 140]
[60 136]
[61 135]
[62 134]
[63 133]
[64 132]
[65 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
