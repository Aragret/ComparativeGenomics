%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[80.34872437 465.42880249]
[85.98536682 451.06802368]
[98.50460815 442.05291748]
[97.61179352 427.07949829]
[96.71897125 412.10610962]
[95.82615662 397.13269043]
[86.98982239 388.87158203]
[86.12345886 376.40429688]
[94.23561859 366.37655640]
[93.56582642 351.39151001]
[92.89604187 336.40649414]
[92.22625732 321.42144775]
[91.55647278 306.43640137]
[90.88668823 291.45135498]
[90.21690369 276.46633911]
[89.21264648 261.49996948]
[87.87441254 246.55979919]
[86.53617859 231.61961365]
[85.19794464 216.67942810]
[83.85971069 201.73924255]
[81.40299988 199.21002197]
[80.04928589 195.36521912]
[80.40354919 190.73620605]
[82.81059265 186.10444641]
[82.14080811 171.11941528]
[75.10601807 184.36749268]
[63.58596039 193.97416687]
[49.28957367 198.51435852]
[34.33763504 197.31452942]
[20.94817924 190.55268860]
[11.10745430 179.23190308]
[6.27526999 165.03155518]
[7.16845322 150.05816650]
[13.65450573 136.53297424]
[24.77125931 126.46233368]
[38.86960983 121.34017944]
[53.85815430 121.92634583]
[67.51342773 128.13388062]
[77.80974579 139.04194641]
[83.21939087 153.03048706]
[85.66512299 138.23121643]
[88.11084747 123.43194580]
[90.55657196 108.63267517]
[81.77390289 120.79264069]
[70.27584839 130.42564392]
[56.76551819 136.94262695]
[42.06907654 139.94506836]
[27.08522034 139.24935913]
[12.73021221 134.89807129]
[-0.11813112 127.15726471]
[-10.67412853 116.50029755]
[-18.29227638 103.57884979]
[-22.50672340 89.18307495]
[-23.05975342 74.19326782]
[-19.91754723 59.52607727]
[-13.27225494 46.07839966]
[-3.53023624 34.67256165]
[8.71277905 26.00604248]
[22.70812798 20.60879898]
[37.59998703 18.81087494]
[52.47771454 20.72221565]
[66.43153381 26.22594070]
[78.60815430 34.98549271]
[88.26298523 46.46522903]
[94.80561829 59.96315002]
[97.83597565 74.65386200]
[97.16874695 89.63903809]
[104.44197083 76.52034760]
[111.71520233 63.40165329]
[108.91773987 50.81050491]
[115.24570465 40.03364944]
[126.83644104 36.57223129]
[134.30418396 23.56327820]
[141.77192688 10.55432606]
[149.23966980 -2.45462632]
[156.70741272 -15.46357918]
[164.17514038 -28.47253036]
[164.00978088 -32.81149673]
[165.12187195 -36.59669876]
[167.18051147 -39.49453735]
[169.78034973 -41.31315994]
[172.49446106 -42.01443863]
[180.72326660 -54.55583954]
[188.85847473 -67.15814972]
[196.89965820 -79.82067871]
[204.94082642 -92.48320007]
[212.98199463 -105.14572906]
[221.02317810 -117.80825043]
[228.87492371 -130.58909607]
[236.53552246 -143.48542786]
[244.19612122 -156.38174438]
[251.85671997 -169.27807617]
[259.51730347 -182.17440796]
[264.86849976 -196.18742371]
[267.75378418 -210.90731812]
[270.63903809 -225.62721252]
[273.52432251 -240.34709167]
[276.40960693 -255.06698608]
[262.59631348 -261.06759644]
[250.39620972 -269.89776611]
[240.37988281 -281.14440918]
[233.01583862 -294.28158569]
[228.64848328 -308.69476318]
[227.48211670 -323.70989990]
[229.57125854 -338.62463379]
[234.81820679 -352.74142456]
[242.97756958 -365.39996338]
[253.66769409 -376.00823975]
[266.38861084 -384.07003784]
[280.54528809 -389.20831299]
[295.47564697 -391.18273926]
[310.48135376 -389.90097046]
[324.86056519 -385.42294312]
[337.94073486 -377.95812988]
[349.11004639 -367.85565186]
[357.84616089 -355.58801270]
[363.74041748 -341.72903442]
[366.51715088 -326.92687988]
[366.04647827 -311.87387085]
[362.35043335 -297.27410889]
[355.60186768 -283.81042480]
[346.11642456 -272.11251831]
[334.33776855 -262.72756958]
[320.81683350 -256.09448242]
[306.18594360 -252.52352905]
[291.12948608 -252.18171692]
[288.24420166 -237.46182251]
[285.35894775 -222.74192810]
[282.47366333 -208.02204895]
[279.58837891 -193.30215454]
[288.72921753 -205.19523621]
[300.50900269 -214.48162842]
[314.20736694 -220.59346008]
[328.98669434 -223.15699768]
[343.94317627 -222.01548767]
[358.16226196 -217.23872375]
[370.77444458 -209.11880493]
[381.00845337 -198.15226746]
[388.23852539 -185.00973511]
[392.02249146 -170.49485779]
[392.12896729 -155.49522400]
[388.55145264 -140.92810059]
[381.50872803 -127.68423462]
[371.43142700 -116.57350922]
[358.93579102 -108.27535248]
[344.78594971 -103.29719543]
[329.84716797 -101.94345856]
[315.03295898 -104.29691315]
[301.24917603 -110.21365356]
[289.33877563 -119.33187103]
[280.02999878 -131.09397888]
[273.89215088 -144.78071594]
[271.30053711 -159.55513000]
[272.41363525 -174.51380920]
[264.75305176 -161.61747742]
[257.09243774 -148.72114563]
[249.43185425 -135.82482910]
[241.77125549 -122.92849731]
[242.06098938 -118.16141510]
[239.35914612 -113.16170502]
[233.68569946 -109.76708221]
[225.64451599 -97.10455322]
[217.60334778 -84.44203186]
[209.56217957 -71.77950287]
[201.52099609 -59.11697769]
[200.58892822 -51.78533554]
[193.26466370 -46.32703400]
[185.03585815 -33.78563309]
[177.18409729 -21.00478935]
[169.71635437 -7.99583769]
[162.24861145 5.01311493]
[154.78088379 18.02206802]
[147.31314087 31.03101921]
[139.84539795 44.03997040]
[140.83451843 61.56106186]
[124.83390045 70.67488098]
[117.56066895 83.79357910]
[110.28743744 96.91226959]
[105.35584259 111.07840729]
[102.91011810 125.87767792]
[100.46439362 140.67694092]
[98.01866150 155.47621155]
[97.12584686 170.44963074]
[97.79563141 185.43466187]
[98.79989624 200.40100098]
[100.13813019 215.34118652]
[101.47636414 230.28137207]
[102.81459808 245.22155762]
[104.15283203 260.16174316]
[107.15710449 264.43038940]
[108.12663269 268.97058105]
[107.29872131 272.96179199]
[105.20194244 275.79653931]
[105.87172699 290.78158569]
[106.54151154 305.76663208]
[107.21129608 320.75164795]
[107.88108063 335.73669434]
[108.55086517 350.72174072]
[109.22065735 365.70678711]
[119.48813629 380.99273682]
[110.79956055 396.23986816]
[111.69238281 411.21328735]
[112.58519745 426.18667603]
[113.47801208 441.16009521]
[126.97982025 448.62365723]
[134.28303528 462.21286011]
[133.05722046 477.59146118]
[123.69355011 489.85217285]
[109.17991638 495.08267212]
[94.14758301 491.61389160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 204]
[4 203]
[5 202]
[6 201]
[9 199]
[10 198]
[11 197]
[12 196]
[13 195]
[14 194]
[15 193]
[16 189]
[17 188]
[18 187]
[19 186]
[20 185]
[24 184]
[25 183]
[40 182]
[41 181]
[42 180]
[43 179]
[67 178]
[68 177]
[69 176]
[72 174]
[73 173]
[74 172]
[75 171]
[76 170]
[77 169]
[82 168]
[83 167]
[84 165]
[85 164]
[86 163]
[87 162]
[88 161]
[89 158]
[90 157]
[91 156]
[92 155]
[93 154]
[94 130]
[95 129]
[96 128]
[97 127]
[98 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
