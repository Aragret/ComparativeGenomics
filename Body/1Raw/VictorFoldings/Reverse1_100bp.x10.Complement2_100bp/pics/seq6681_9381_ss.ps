%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[146.58874512 298.53524780]
[150.25016785 283.97677612]
[155.29962158 269.83963013]
[161.68994141 256.25585938]
[169.36146545 243.35223389]
[178.24258423 231.24928284]
[188.25033569 220.05999756]
[178.08679199 209.02812195]
[167.92324829 197.99624634]
[157.75970459 186.96437073]
[147.59616089 175.93247986]
[137.43260193 164.90060425]
[127.26905823 153.86872864]
[117.10551453 142.83685303]
[120.81486511 157.37097168]
[119.66967010 172.32719421]
[113.79078674 186.12715149]
[103.79862213 197.31449890]
[90.74768066 204.70860291]
[76.01525116 207.52915955]
[61.15608215 205.47850037]
[47.73830414 198.77304077]
[37.17792511 188.12040710]
[30.58940315 174.64482117]
[28.66804504 159.76838684]
[31.61661148 145.06105042]
[39.12393951 132.07490540]
[50.39775848 122.18040466]
[64.24831390 116.42175293]
[79.21392822 115.40666962]
[93.71524048 119.24227905]
[106.22203827 127.52392578]
[99.14493561 114.29840088]
[87.37055206 106.75814056]
[87.62953949 92.77870178]
[80.55243683 79.55317688]
[73.47532654 66.32765198]
[66.39822388 53.10212326]
[60.99296570 49.29492569]
[58.67046738 44.10811234]
[59.31396103 39.37578201]
[52.63376617 25.94540596]
[45.95357132 12.51502991]
[39.27337646 -0.91534573]
[32.59318542 -14.34572220]
[25.91298866 -27.77609825]
[19.23279381 -41.20647430]
[7.44145775 -42.72338104]
[-2.05631328 -49.67271423]
[-6.96933651 -60.23472595]
[-6.18195581 -71.73671722]
[-0.00518822 -81.32909393]
[-6.28254890 -94.95241547]
[-12.55990982 -108.57572937]
[-26.66894913 -103.45698547]
[-41.15683365 -99.53681183]
[-55.92193985 -96.84272003]
[-70.86070251 -95.39359283]
[-85.86833191 -95.19960022]
[-100.83955383 -96.26210785]
[-115.66936493 -98.57366180]
[-130.25373840 -102.11804199]
[-144.49037170 -106.87038422]
[-158.27940369 -112.79736328]
[-171.52412415 -119.85740662]
[-184.13160706 -128.00097656]
[-196.01344299 -137.17097473]
[-207.08625793 -147.30305481]
[-217.27241516 -158.32615662]
[-226.50044250 -170.16296387]
[-234.70562744 -182.73043823]
[-241.83039856 -195.94044495]
[-247.82479858 -209.70030212]
[-252.64675903 -223.91351318]
[-256.26248169 -238.48036194]
[-258.64657593 -253.29867554]
[-259.78234863 -268.26452637]
[-259.66180420 -283.27291870]
[-258.28579712 -298.21859741]
[-255.66401672 -312.99670410]
[-251.81478882 -327.50360107]
[-246.76516724 -341.63754272]
[-240.55053711 -355.29934692]
[-233.21450806 -368.39318848]
[-224.80853271 -380.82727051]
[-215.39157104 -392.51434326]
[-205.02967834 -403.37240601]
[-193.79554749 -413.32534790]
[-181.76795959 -422.30331421]
[-169.03131104 -430.24331665]
[-155.67491150 -437.08972168]
[-141.79244995 -442.79446411]
[-127.48132324 -447.31753540]
[-112.84190369 -450.62719727]
[-97.97688293 -452.70025635]
[-82.99052429 -453.52218628]
[-67.98794556 -453.08715820]
[-53.07438660 -451.39828491]
[-38.35445404 -448.46737671]
[-23.93140221 -444.31503296]
[-9.90639877 -438.97033691]
[3.62218022 -432.47076416]
[16.55944061 -424.86196899]
[28.81463242 -416.19729614]
[40.30179596 -406.53750610]
[50.94035339 -395.95034790]
[60.65568542 -384.51013184]
[69.37963867 -372.29705811]
[77.05102539 -359.39678955]
[83.61603546 -345.89987183]
[89.02861786 -331.90090942]
[93.25080872 -317.49816895]
[96.25298309 -302.79260254]
[98.01409149 -287.88739014]
[98.52178192 -272.88711548]
[97.77248383 -257.89694214]
[95.77146149 -243.02203369]
[92.53275299 -228.36676025]
[88.07906342 -214.03388977]
[82.44165039 -200.12396240]
[75.66003418 -186.73454285]
[67.78180695 -173.95957947]
[58.86221313 -161.88864136]
[48.96382904 -150.60641479]
[38.15607834 -140.19204712]
[26.51477432 -130.71858215]
[14.12157440 -122.25246429]
[1.06340659 -114.85308838]
[7.34076738 -101.22977448]
[13.61812782 -87.60645294]
[31.14206696 -82.31238556]
[39.37244797 -65.60388947]
[32.66316986 -47.88666916]
[39.34336472 -34.45629120]
[46.02355957 -21.02591705]
[52.70375443 -7.59554052]
[59.38394928 5.83483553]
[66.06414032 19.26521111]
[72.74433899 32.69558716]
[79.62374878 46.02501678]
[86.70085907 59.25054550]
[93.77796173 72.47607422]
[100.85506439 85.70159912]
[112.62944794 93.24185944]
[112.37046051 107.22129822]
[119.44756317 120.44682312]
[128.13739014 132.67330933]
[138.30093384 143.70518494]
[148.46447754 154.73706055]
[158.62803650 165.76893616]
[168.79158020 176.80081177]
[178.95512390 187.83268738]
[189.11866760 198.86457825]
[199.28221130 209.89645386]
[211.25262451 200.83749390]
[224.04148865 192.97615051]
[237.52937317 186.38581848]
[251.59036255 181.12803650]
[266.09313965 177.25190735]
[280.90234375 174.79360962]
[295.87966919 173.77610779]
[310.88528442 174.20887756]
[325.77905273 176.08790588]
[340.42196655 179.39562988]
[354.67724609 184.10118103]
[368.41183472 190.16061401]
[381.49746704 197.51734924]
[393.81198120 206.10270691]
[405.24038696 215.83650208]
[415.67599487 226.62788391]
[425.02133179 238.37608337]
[433.18917847 250.97138977]
[440.10324097 264.29623413]
[445.69897461 278.22616577]
[449.92416382 292.63113403]
[452.73931885 307.37667847]
[454.11813354 322.32507324]
[454.04779053 337.33673096]
[452.52893066 352.27154541]
[449.57571411 366.99005127]
[445.21575928 381.35479736]
[439.48971558 395.23168945]
[432.45104980 408.49111938]
[424.16555786 421.00933838]
[414.71051025 432.66943359]
[404.17425537 443.36254883]
[392.65512085 452.98883057]
[380.26068115 461.45840454]
[367.10668945 468.69219971]
[353.31591797 474.62265015]
[339.01715088 479.19439697]
[324.34390259 482.36474609]
[309.43316650 484.10409546]
[294.42416382 484.39624023]
[279.45703125 483.23843384]
[264.67150879 480.64144897]
[250.20568848 476.62957764]
[236.19459534 471.24026489]
[222.76905823 464.52383423]
[210.05444336 456.54296875]
[198.16944885 447.37222290]
[187.22505188 437.09722900]
[177.32345581 425.81387329]
[168.55708313 413.62756348]
[161.00781250 400.65203857]
[154.74610901 387.00848389]
[149.83045959 372.82427979]
[146.30674744 358.23184204]
[144.20785522 343.36746216]
[143.55342102 328.36987305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 154]
[8 153]
[9 152]
[10 151]
[11 150]
[12 149]
[13 148]
[14 147]
[32 146]
[33 145]
[35 143]
[36 142]
[37 141]
[38 140]
[41 139]
[42 138]
[43 137]
[44 136]
[45 135]
[46 134]
[47 133]
[52 130]
[53 129]
[54 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
