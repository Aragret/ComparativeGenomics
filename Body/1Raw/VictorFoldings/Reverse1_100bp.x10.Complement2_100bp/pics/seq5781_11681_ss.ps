%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[105.27436829 891.47503662]
[90.41455841 889.40301514]
[75.68608856 886.54309082]
[61.13070297 882.90332031]
[46.78966904 878.49401855]
[32.70363235 873.32769775]
[18.91251945 867.41900635]
[5.45542955 860.78472900]
[-7.62949562 853.44360352]
[-20.30516434 845.41650391]
[-32.53564835 836.72613525]
[-44.28627396 827.39715576]
[-55.52373505 817.45599365]
[-66.21617889 806.93084717]
[-76.33329773 795.85150146]
[-85.84641266 784.24945068]
[-94.72855377 772.15753174]
[-102.95454407 759.60998535]
[-110.50106812 746.64245605]
[-117.34673309 733.29162598]
[-123.47213745 719.59539795]
[-128.85992432 705.59259033]
[-133.49479675 691.32287598]
[-137.36364746 676.82672119]
[-140.45549011 662.14514160]
[-142.76155090 647.31988525]
[-144.27532959 632.39282227]
[-144.99250793 617.40643311]
[-144.91104126 602.40307617]
[-144.03118896 587.42535400]
[-142.35543823 572.51562500]
[-139.88853455 557.71624756]
[-136.63746643 543.06915283]
[-132.61145020 528.61584473]
[-127.82190704 514.39727783]
[-122.28240967 500.45376587]
[-116.00865173 486.82485962]
[-109.01842499 473.54916382]
[-101.33155060 460.66433716]
[-92.96980286 448.20684814]
[-83.95689392 436.21209717]
[-74.31836700 424.71398926]
[-64.08155060 413.74517822]
[-53.27545929 403.33676147]
[-41.93071747 393.51818848]
[-30.07949257 384.31735229]
[-17.75537300 375.76028442]
[-4.99329376 367.87127686]
[8.17056847 360.67266846]
[21.69890022 354.18487549]
[35.55335236 348.42626953]
[49.69465256 343.41323853]
[64.08271790 339.15991211]
[78.67676544 335.67837524]
[93.43541718 332.97851562]
[108.31684875 331.06796265]
[107.20120239 316.10949707]
[106.08555603 301.15103149]
[102.45326996 294.71456909]
[105.06634521 285.96185303]
[104.17352295 270.98846436]
[103.28070831 256.01504517]
[94.79959106 243.77088928]
[101.70176697 229.53463745]
[100.80895233 214.56123352]
[90.37010956 200.45458984]
[98.74839783 184.05685425]
[97.63274384 169.09840393]
[96.51709747 154.13993835]
[95.40145111 139.18148804]
[86.73896790 127.06494904]
[93.42842865 112.72752380]
[85.71572876 101.06536865]
[91.61312103 88.38812256]
[82.87084198 75.20165253]
[89.64009857 61.93415833]
[80.89781952 48.74768066]
[87.66707611 35.48018646]
[86.55142975 20.52173424]
[85.43578339 5.56328058]
[76.18949890 -3.42944264]
[75.56822205 -15.91134071]
[83.36026764 -25.16393852]
[82.46745300 -40.13734436]
[81.57463837 -55.11074829]
[72.08122253 -59.97890472]
[65.51508331 -68.28510284]
[63.00841904 -78.48902893]
[64.94844055 -88.73350525]
[70.91923523 -97.18247223]
[79.78868103 -102.35005951]
[79.56535339 -117.34839630]
[79.34202576 -132.34672546]
[71.40011597 -146.03018188]
[78.94706726 -158.87123108]
[78.72373962 -173.86956787]
[78.50041199 -188.86790466]
[78.27708435 -203.86625671]
[78.05375671 -218.86459351]
[64.36832428 -225.71788025]
[55.44478226 -238.15286255]
[53.33369064 -253.31208801]
[58.52016068 -267.71206665]
[69.81238556 -278.04376221]
[84.61548615 -281.93307495]
[99.52783203 -278.48623657]
[111.12265778 -268.49530029]
[116.73557281 -254.25614929]
[115.07675934 -239.04080200]
[106.52741241 -226.34562683]
[93.05209351 -219.08792114]
[93.27542114 -204.08958435]
[93.49874878 -189.09123230]
[93.72207642 -174.09289551]
[93.94540405 -159.09455872]
[101.87133789 -146.48390198]
[94.34036255 -132.57005310]
[94.56369019 -117.57172394]
[94.78701782 -102.57338715]
[109.72389221 -90.06723022]
[110.66203308 -70.30303192]
[96.54804230 -56.00356674]
[97.44085693 -41.03015900]
[98.33367157 -26.05675507]
[108.77252197 -11.95010757]
[100.39423370 4.44763184]
[101.50988007 19.40608597]
[102.62553406 34.36454010]
[111.28800964 46.48108673]
[104.59854889 60.81850815]
[113.26103210 72.93505096]
[106.57157135 87.27247620]
[114.28427124 98.93463135]
[108.38687897 111.61187744]
[117.12915802 124.79834747]
[110.35990143 138.06584167]
[111.47554779 153.02429199]
[112.59120178 167.98275757]
[113.70684814 182.94120789]
[122.95313263 191.93392944]
[123.57440948 204.41583252]
[115.78235626 213.66842651]
[116.67517090 228.64183044]
[125.22016144 241.95700073]
[118.25411987 255.12223816]
[119.14693451 270.09564209]
[120.03974915 285.06906128]
[121.04400635 300.03540039]
[122.15966034 314.99383545]
[123.27530670 329.95230103]
[138.27551270 329.63418579]
[153.27137756 330.11486816]
[168.22041321 331.39297485]
[183.08023071 333.46490479]
[197.80871582 336.32476807]
[212.36413574 339.96444702]
[226.70518494 344.37365723]
[240.79125977 349.53988647]
[254.58241272 355.44848633]
[268.03955078 362.08267212]
[281.12451172 369.42370605]
[293.80023193 377.45074463]
[306.03076172 386.14105225]
[317.78146362 395.46994019]
[329.01898193 405.41104126]
[339.71148682 415.93612671]
[349.82867432 427.01538086]
[359.34185791 438.61737061]
[368.22409058 450.70925903]
[376.45016479 463.25671387]
[383.99676514 476.22421265]
[390.84252930 489.57498169]
[396.96801758 503.27114868]
[402.35586548 517.27392578]
[406.99084473 531.54364014]
[410.85977173 546.03979492]
[413.95172119 560.72131348]
[416.25787354 575.54663086]
[417.77175903 590.47363281]
[418.48901367 605.46002197]
[418.40765381 620.46337891]
[417.52789307 635.44116211]
[415.85223389 650.35083008]
[413.38543701 665.15020752]
[410.13446045 679.79736328]
[406.10852051 694.25073242]
[401.31909180 708.46929932]
[395.77966309 722.41284180]
[389.50601196 736.04180908]
[382.51586914 749.31750488]
[374.82907104 762.20239258]
[366.46740723 774.65991211]
[357.45455933 786.65478516]
[347.81610107 798.15289307]
[337.57934570 809.12176514]
[326.77334595 819.53027344]
[315.42864990 829.34893799]
[303.57748413 838.54986572]
[291.25341797 847.10699463]
[278.49139404 854.99609375]
[265.32757568 862.19476318]
[251.79928589 868.68261719]
[237.94487000 874.44128418]
[223.80360413 879.45446777]
[209.41555786 883.70788574]
[194.82153320 887.18951416]
[180.06289673 889.88946533]
[165.18147278 891.80010986]
[150.21946716 892.91601562]
[135.21926880 893.23406982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 150]
[57 149]
[58 148]
[60 147]
[61 146]
[62 145]
[64 143]
[65 142]
[67 139]
[68 138]
[69 137]
[70 136]
[72 134]
[74 132]
[76 130]
[78 128]
[79 127]
[80 126]
[83 124]
[84 123]
[85 122]
[91 119]
[92 118]
[93 117]
[95 115]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
