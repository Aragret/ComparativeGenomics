%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[230.72821045 348.91342163]
[238.49041748 336.05862427]
[247.66740417 324.17245483]
[258.13949585 313.40988159]
[248.65060425 301.79263306]
[239.16171265 290.17535400]
[229.67280579 278.55810547]
[225.09524536 277.19613647]
[221.32466125 272.94412231]
[220.08056641 266.45074463]
[210.94175720 254.55612183]
[201.80294800 242.66148376]
[192.66415405 230.76684570]
[183.52534485 218.87222290]
[174.38655090 206.97758484]
[160.49691772 201.59915161]
[158.22460938 185.94197083]
[149.08580017 174.04733276]
[139.51068115 162.50103760]
[129.51251221 151.31906128]
[119.51434326 140.13708496]
[120.40527344 155.11061096]
[113.15248108 168.24061584]
[100.00333405 175.45863342]
[85.03222656 174.52807617]
[72.87812042 165.73730469]
[67.30710602 151.81021118]
[70.04541016 137.06227112]
[80.24455261 126.06330109]
[94.74420929 122.22143555]
[109.05172729 126.72726440]
[100.63710785 114.30976868]
[88.14216614 108.03536987]
[86.94539642 94.10485077]
[78.53078461 81.68735504]
[65.09908295 80.68529510]
[54.84659195 72.25340271]
[51.37390900 59.64298630]
[55.73284531 47.51742554]
[47.50403595 34.97602463]
[39.18209457 22.49623299]
[30.76747513 10.07873726]
[22.35285568 -2.33875823]
[13.93823719 -14.75625420]
[5.52361870 -27.17374992]
[-2.89100003 -39.59124374]
[-2.54870915 -24.59514999]
[-8.66794395 -10.90007973]
[-20.06717682 -1.15033579]
[-34.54539108 2.77155876]
[-49.30707550 0.10834717]
[-61.50197601 -8.62574577]
[-68.77545166 -21.74430466]
[-69.72310638 -36.71434021]
[-64.16196442 -50.64537048]
[-53.16579056 -60.84753799]
[-38.85777664 -65.35095978]
[-24.00057983 -63.28609467]
[-11.46200085 -55.05072403]
[-17.53583527 -68.76599121]
[-23.60966873 -82.48125458]
[-29.68350220 -96.19652557]
[-44.80722046 -106.70150757]
[-42.25888824 -124.06448364]
[-48.53624725 -137.68780518]
[-54.81361008 -151.31111145]
[-69.12313080 -146.74851990]
[-83.88488770 -143.97903442]
[-98.87510681 -143.04463196]
[-113.86652374 -143.95947266]
[-128.63188171 -146.70970154]
[-142.94734192 -151.25363159]
[-156.59588623 -157.52235413]
[-169.37060547 -165.42083740]
[-181.07783508 -174.82937622]
[-191.54010010 -185.60530090]
[-200.59878540 -197.58526611]
[-208.11659241 -210.58767700]
[-213.97950745 -224.41539001]
[-218.09869385 -238.85879517]
[-220.41168213 -253.69892883]
[-220.88340759 -268.71081543]
[-219.50672913 -283.66690063]
[-216.30250549 -298.34045410]
[-211.31933594 -312.50897217]
[-204.63272095 -325.95773315]
[-196.34407043 -338.48281860]
[-186.57902527 -349.89437866]
[-175.48561096 -360.01937866]
[-163.23200989 -368.70434570]
[-150.00398254 -375.81765747]
[-136.00204468 -381.25140381]
[-121.43849182 -384.92324829]
[-106.53408813 -386.77752686]
[-91.51478577 -386.78613281]
[-76.60826874 -384.94894409]
[-62.04051208 -381.29376221]
[-48.03236771 -375.87606812]
[-34.79619598 -368.77795410]
[-22.53264618 -360.10702515]
[-11.42763615 -349.99475098]
[-1.64951384 -338.59439087]
[6.65348721 -326.07879639]
[13.35549545 -312.63772583]
[18.35490990 -298.47491455]
[21.57594109 -283.80505371]
[22.96976089 -268.85055542]
[22.51523399 -253.83813477]
[20.21925735 -238.99534607]
[16.11663246 -224.54722595]
[10.26955605 -210.71279907]
[2.76666856 -197.70179749]
[-6.27828836 -185.71145630]
[-16.72819519 -174.92353821]
[-28.42463684 -165.50160217]
[-41.19029236 -157.58847046]
[-34.91293335 -143.96516418]
[-28.63557243 -130.34184265]
[-17.39986992 -125.86015320]
[-12.05860233 -114.56172180]
[-15.96823597 -102.27035522]
[-9.89440155 -88.55509186]
[-3.82056808 -74.83982086]
[2.25326586 -61.12455750]
[9.52649498 -48.00586319]
[17.94111443 -35.58836746]
[26.35573196 -23.17087173]
[34.77035141 -10.75337696]
[43.18497086 1.66411853]
[51.59958649 14.08161449]
[57.95413589 17.85540962]
[60.04543686 26.74721909]
[68.27424622 39.28862000]
[84.87190247 42.00091934]
[94.56326294 56.15691757]
[90.94827271 73.27273560]
[99.36289215 85.69023132]
[111.85783386 91.96463013]
[113.05460358 105.89514923]
[121.46921539 118.31264496]
[130.69631958 130.13891602]
[140.69448853 141.32089233]
[150.69265747 152.50286865]
[154.12342834 137.90048218]
[167.61299133 131.34062195]
[181.21734619 137.65898132]
[184.90786743 152.19789124]
[175.96403503 164.23982239]
[160.98043823 164.90853882]
[170.11924744 176.80317688]
[184.66253662 183.03239441]
[186.28117371 197.83879089]
[195.41998291 209.73341370]
[204.55879211 221.62805176]
[213.69758606 233.52267456]
[222.83639526 245.41731262]
[231.97518921 257.31195068]
[241.29006958 269.06921387]
[250.77897644 280.68646240]
[260.26788330 292.30371094]
[269.75677490 303.92098999]
[282.39343262 295.80847168]
[295.87246704 289.18936157]
[310.01821899 284.14990234]
[324.64620972 280.75582886]
[339.56573486 279.05136108]
[354.58230591 279.05877686]
[369.50018311 280.77789307]
[384.12481689 284.18637085]
[398.26556396 289.23974609]
[411.73809814 295.87213135]
[424.36676025 303.99707031]
[435.98693848 313.50863647]
[446.44708252 324.28280640]
[455.61083984 336.17916870]
[463.35876465 349.04257202]
[469.58984375 362.70535278]
[474.22283936 376.98934937]
[477.19735718 391.70840454]
[478.47457886 406.67056274]
[478.03790283 421.68078613]
[475.89300537 436.54339600]
[472.06781006 451.06463623]
[466.61227417 465.05514526]
[459.59744263 478.33258057]
[451.11477661 490.72378540]
[441.27490234 502.06729126]
[430.20608521 512.21514893]
[418.05264282 521.03509521]
[404.97299194 528.41210938]
[391.13766479 534.25000000]
[376.72702026 538.47277832]
[361.92895508 541.02526855]
[346.93640137 541.87426758]
[331.94479370 541.00860596]
[317.14956665 538.43969727]
[302.74365234 534.20092773]
[288.91479492 528.34765625]
[275.84335327 520.95611572]
[263.69970703 512.12268066]
[252.64215088 501.96255493]
[242.81488037 490.60815430]
[234.34599304 478.20751953]
[227.34591675 464.92230225]
[221.90588379 450.92575073]
[218.09684753 436.40026855]
[215.96844482 421.53530884]
[215.54843140 406.52459717]
[216.84226990 391.56384277]
[219.83311462 376.84811401]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 161]
[5 160]
[6 159]
[7 158]
[10 157]
[11 156]
[12 155]
[13 154]
[14 153]
[15 152]
[17 150]
[18 149]
[19 143]
[20 142]
[21 141]
[31 140]
[32 139]
[34 137]
[35 136]
[39 133]
[40 132]
[41 130]
[42 129]
[43 128]
[44 127]
[45 126]
[46 125]
[59 124]
[60 123]
[61 122]
[62 121]
[64 118]
[65 117]
[66 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
