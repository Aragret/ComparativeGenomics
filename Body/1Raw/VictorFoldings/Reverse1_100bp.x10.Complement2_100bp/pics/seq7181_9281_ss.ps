%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[72.33073425 572.14013672]
[66.08798981 586.34600830]
[52.67054367 594.14038086]
[37.23766708 592.52606201]
[25.72362518 582.12384033]
[22.55579567 566.93353271]
[28.95227814 552.79620361]
[42.45349121 545.14788818]
[44.01401520 530.22924805]
[45.57453918 515.31066895]
[36.02502060 503.93777466]
[37.39509201 488.78598022]
[49.38875961 478.84667969]
[50.94928360 463.92807007]
[43.57815933 454.33676147]
[44.75616074 441.89505005]
[54.39476776 433.32415771]
[56.17723465 418.43045044]
[57.95969772 403.53674316]
[59.74216461 388.64300537]
[61.52463150 373.74929810]
[54.29712296 364.04931641]
[55.66023254 351.62652588]
[65.42537689 343.20010376]
[67.42938995 328.33456421]
[69.43340302 313.46905518]
[63.46584320 299.82214355]
[72.97749329 287.17941284]
[74.98151398 272.31387329]
[69.01394653 258.66699219]
[78.52560425 246.02424622]
[80.52961731 231.15872192]
[82.53363037 216.29319763]
[84.53764343 201.42765808]
[86.20918274 186.52108765]
[87.54741669 171.58090210]
[88.88565063 156.64071655]
[90.00129700 141.68226624]
[90.89411926 126.70886230]
[91.78693390 111.73545837]
[85.70145416 99.14742279]
[93.23966217 87.37172699]
[94.13247681 72.39832306]
[91.51977539 66.32499695]
[92.25591278 60.68982697]
[95.28134918 56.99444962]
[93.31533813 53.12291718]
[92.74130249 49.21971512]
[93.39826965 45.72631836]
[94.99842834 42.98659515]
[97.16995239 41.21385193]
[99.39507294 26.37980652]
[101.62018585 11.54576397]
[103.84530640 -3.28828001]
[98.24074554 -18.08353043]
[107.78041840 -29.52223206]
[110.00553131 -44.35627365]
[112.23065186 -59.19031906]
[114.45577240 -74.02436066]
[108.85120392 -88.81961060]
[118.39088440 -100.25831604]
[120.61599731 -115.09235382]
[122.84111786 -129.92640686]
[125.06623077 -144.76045227]
[127.29135132 -159.59448242]
[129.29536438 -174.46002197]
[131.07783508 -189.35372925]
[132.86029053 -204.24745178]
[132.52531433 -219.24371338]
[130.07958984 -234.04298401]
[127.63386536 -248.84225464]
[119.73192596 -236.09237671]
[105.88894653 -230.31553650]
[91.26800537 -233.66636658]
[81.32234955 -244.89508057]
[79.76147461 -259.81365967]
[87.16754150 -272.85781860]
[100.77826691 -279.16241455]
[115.51718903 -276.37600708]
[125.88757324 -265.53680420]
[125.21778870 -280.52185059]
[124.54800415 -295.50686646]
[123.87821960 -310.49191284]
[123.20843506 -325.47695923]
[122.53865051 -340.46200562]
[121.86885834 -355.44702148]
[118.35938263 -363.88037109]
[121.30233765 -370.65982056]
[120.85573578 -385.65316772]
[106.01381683 -388.14389038]
[91.94310760 -393.48257446]
[79.18444824 -401.46398926]
[68.22824860 -411.78134155]
[59.49563217 -424.03808594]
[53.32225800 -437.76306152]
[49.94541550 -452.42880249]
[49.49490356 -467.47149658]
[51.98803329 -482.31301880]
[57.32897949 -496.38287354]
[65.31245422 -509.14022827]
[75.63158417 -520.09478760]
[87.88973236 -528.82537842]
[101.61573792 -534.99652100]
[116.28199768 -538.37103271]
[131.32478333 -538.81909180]
[146.16589355 -536.32354736]
[160.23487854 -530.98034668]
[172.99095154 -522.99481201]
[183.94381714 -512.67388916]
[192.67245483 -500.41433716]
[198.84138489 -486.68731689]
[202.21348572 -472.02050781]
[202.65911865 -456.97766113]
[200.16119385 -442.13696289]
[194.81568909 -428.06884766]
[186.82809448 -415.31405640]
[176.50541687 -404.36285400]
[164.24443054 -395.63619995]
[150.51643372 -389.46948242]
[135.84909058 -386.09976196]
[136.29568481 -371.10641479]
[136.85389709 -356.11682129]
[137.52368164 -341.13177490]
[138.19346619 -326.14672852]
[138.86325073 -311.16171265]
[139.53303528 -296.17666626]
[140.20281982 -281.19161987]
[140.87260437 -266.20657349]
[142.43313599 -251.28797913]
[144.87886047 -236.48870850]
[147.32458496 -221.68943787]
[151.97079468 -235.95172119]
[160.56532288 -248.24537659]
[172.36466980 -257.50689697]
[186.34805298 -262.93502808]
[201.30580139 -264.06024170]
[215.94389343 -260.78512573]
[228.99598694 -253.39306641]
[239.33296204 -242.52352905]
[246.06056213 -229.11683655]
[248.59678650 -214.33280945]
[246.72221375 -199.45039368]
[240.59901428 -185.75709534]
[230.75692749 -174.43751526]
[218.04736328 -166.47088623]
[203.56983948 -162.54643250]
[188.57681274 -163.00363159]
[174.36531067 -167.80296326]
[162.16479492 -176.52920532]
[153.03071594 -188.42745972]
[147.75401306 -202.46498108]
[145.97154236 -187.57127380]
[144.18908691 -172.67755127]
[146.38429260 -168.43608093]
[145.93835449 -162.77055359]
[142.12539673 -157.36936951]
[139.90026855 -142.53532410]
[137.67515564 -127.70128632]
[135.45004272 -112.86724091]
[133.22492981 -98.03319550]
[138.98864746 -84.29897308]
[129.28981018 -71.79924774]
[127.06469727 -56.96520233]
[124.83957672 -42.13115692]
[122.61446381 -27.29711342]
[128.37817383 -13.56289387]
[118.67935181 -1.06316292]
[116.45423126 13.77088070]
[114.22911835 28.60492516]
[112.00399780 43.43896866]
[110.22153473 58.33268738]
[109.10588074 73.29113770]
[108.21306610 88.26454163]
[114.29854584 100.85257721]
[106.76033783 112.62827301]
[105.86752319 127.60167694]
[104.97470856 142.57508850]
[107.58740997 148.64840698]
[106.85127258 154.28358459]
[103.82583618 157.97895813]
[102.48760223 172.91914368]
[101.14936829 187.85932922]
[103.34719086 192.59394836]
[103.49440765 197.23416138]
[101.97036743 201.01467896]
[99.40316772 203.43167114]
[97.39915466 218.29721069]
[95.39514160 233.16273499]
[93.39112854 248.02825928]
[99.21535492 262.73843384]
[89.84703827 274.31790161]
[87.84302521 289.18341064]
[93.66724396 303.89358521]
[84.29893494 315.47305298]
[82.29492188 330.33859253]
[80.29090881 345.20410156]
[87.67832947 362.07147217]
[76.41835022 375.53176880]
[74.63587952 390.42547607]
[72.85341644 405.31921387]
[71.07095337 420.21292114]
[69.28848267 435.10662842]
[76.92621613 451.86212158]
[65.86788940 465.48858643]
[64.30736542 480.40719604]
[73.98456573 492.61331177]
[72.18945312 507.72067261]
[60.49314117 516.87121582]
[58.93262100 531.78979492]
[57.37209702 546.70837402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 210]
[9 209]
[10 208]
[13 205]
[14 204]
[17 202]
[18 201]
[19 200]
[20 199]
[21 198]
[24 196]
[25 195]
[26 194]
[28 192]
[29 191]
[31 189]
[32 188]
[33 187]
[34 186]
[35 182]
[36 181]
[37 180]
[38 177]
[39 176]
[40 175]
[42 173]
[43 172]
[46 171]
[51 170]
[52 169]
[53 168]
[54 167]
[56 165]
[57 164]
[58 163]
[59 162]
[61 160]
[62 159]
[63 158]
[64 157]
[65 156]
[66 153]
[67 152]
[68 151]
[69 131]
[70 130]
[71 129]
[80 128]
[81 127]
[82 126]
[83 125]
[84 124]
[85 123]
[86 122]
[88 121]
[89 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
