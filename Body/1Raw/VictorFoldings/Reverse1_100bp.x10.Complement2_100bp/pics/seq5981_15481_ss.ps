%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[42.79235458 674.95513916]
[31.40808678 665.16046143]
[21.26219749 654.08813477]
[12.49711704 641.89349365]
[5.23589373 628.74768066]
[-0.41953582 614.83538818]
[-4.38977861 600.35180664]
[-6.61909819 585.50036621]
[-7.07619858 570.48944092]
[-5.75466299 555.52984619]
[-2.67304325 540.83154297]
[2.12539887 526.60089111]
[8.57330132 513.03765869]
[16.58014488 500.33227539]
[26.03352737 488.66308594]
[36.80073547 478.19390869]
[48.73061752 469.07174683]
[61.65569305 461.42459106]
[75.39451599 455.35986328]
[89.75421906 450.96264648]
[87.08842468 436.20144653]
[84.42263031 421.44021606]
[81.75683594 406.67901611]
[79.09104156 391.91778564]
[76.42523956 377.15658569]
[73.75944519 362.39535522]
[66.68067932 375.61999512]
[53.62798691 383.01101685]
[38.64589691 382.27825928]
[26.37676811 373.64874268]
[20.62232590 359.79641724]
[23.16564560 345.01361084]
[33.21865082 333.88092041]
[47.66631317 329.84790039]
[62.03186035 334.16427612]
[71.86408234 345.49276733]
[71.19429779 330.50772095]
[70.52451324 315.52270508]
[69.85472870 300.53765869]
[69.18494415 285.55261230]
[68.51515961 270.56756592]
[60.21727371 258.19848633]
[67.33065033 244.06658936]
[66.66086578 229.08155823]
[65.99107361 214.09651184]
[65.32128906 199.11148071]
[59.24512482 212.82571411]
[49.98942184 224.62960815]
[38.12017059 233.80134583]
[24.36318588 239.78009033]
[9.55970764 242.20022583]
[-5.38502407 240.91375732]
[-19.55713272 235.99935913]
[-32.08998871 227.75753784]
[-42.21720505 216.69230652]
[-49.31949615 203.48028564]
[-52.96255493 188.92939758]
[-52.92360306 173.92945862]
[-49.20503235 159.39768982]
[-42.03422546 146.22273254]
[-31.84968376 135.21023560]
[-19.27419472 127.03360748]
[-5.07675552 122.19287109]
[9.87445545 120.98403168]
[24.66516495 123.48101044]
[38.39091873 129.53111267]
[50.21237564 138.76437378]
[59.40665817 150.61618042]
[65.41152191 164.36177063]
[67.85977936 179.16065979]
[72.26077271 164.82081604]
[76.66177368 150.48095703]
[81.06276703 136.14111328]
[85.46376801 121.80126953]
[89.86476898 107.46142578]
[93.94443512 93.02687073]
[97.70073700 78.50481415]
[101.45703125 63.98274994]
[105.21333313 49.46069336]
[104.33265686 40.36881638]
[109.13517761 34.75120163]
[113.10726929 20.28668022]
[117.07936859 5.82215548]
[121.05146790 -8.64236832]
[125.02355957 -23.10689163]
[128.45462036 -37.70921326]
[131.33988953 -52.42910767]
[134.22517395 -67.14899445]
[136.33979797 -81.99919128]
[137.67802429 -96.93937683]
[139.01626587 -111.87956238]
[140.35449219 -126.81974792]
[141.69273376 -141.75993347]
[143.03096008 -156.70011902]
[144.36920166 -171.64030457]
[145.70742798 -186.58049011]
[137.57421875 -203.10115051]
[148.22192383 -217.05081177]
[149.33757019 -232.00927734]
[135.41305542 -237.95793152]
[124.17620850 -248.10740662]
[116.84591675 -261.35678101]
[114.21731567 -276.26882935]
[116.57553864 -291.22601318]
[123.66477966 -304.60589600]
[134.71604919 -314.95712280]
[148.53060913 -321.15689087]
[163.60992432 -322.53265381]
[178.31832886 -318.93521118]
[191.06036377 -310.75479126]
[200.45385742 -298.87872314]
[205.47987366 -284.59524536]
[205.59323120 -269.45370483]
[200.78164673 -255.09657288]
[191.56703186 -243.08119202]
[178.94891357 -234.71089172]
[164.29602051 -230.89361572]
[163.18037415 -215.93516541]
[170.83380127 -206.56758118]
[170.02676392 -194.09631348]
[160.64761353 -185.24224854]
[159.30938721 -170.30207825]
[157.97114563 -155.36189270]
[156.63291931 -140.42170715]
[155.29467773 -125.48151398]
[153.95645142 -110.54132843]
[152.61820984 -95.60114288]
[151.27996826 -80.66095734]
[162.73408508 -90.34618378]
[177.73297119 -90.52870178]
[189.41935730 -81.12506104]
[192.45037842 -66.43449402]
[185.44029236 -53.17331696]
[171.59402466 -47.40436935]
[157.24189758 -51.76513290]
[148.94505310 -64.26372528]
[146.05978394 -49.54383469]
[143.17451477 -34.82394028]
[156.88966370 -40.89804840]
[170.25978088 -34.09804535]
[173.42890930 -19.43664742]
[164.06089783 -7.72168922]
[149.06147766 -7.58900118]
[139.48808289 -19.13479614]
[135.51599121 -4.67027235]
[131.54389954 9.79425144]
[127.57179260 24.25877571]
[123.59970093 38.72330093]
[119.73539734 53.21699142]
[115.97909546 67.73905182]
[112.22279358 82.26110840]
[108.46649170 96.78317261]
[109.93298340 100.34992981]
[109.82017517 104.54577637]
[107.88237762 108.65089417]
[104.20461273 111.86241913]
[99.80361176 126.20227051]
[95.40261841 140.54211426]
[91.00161743 154.88195801]
[86.60062408 169.22181702]
[82.19962311 183.56166077]
[80.30632782 198.44169617]
[80.97611237 213.42672729]
[81.64590454 228.41177368]
[82.31568909 243.39680481]
[90.66147614 256.83773804]
[83.50019836 269.89779663]
[84.16998291 284.88284302]
[84.83976746 299.86785889]
[85.50955200 314.85290527]
[86.17933655 329.83795166]
[86.84912109 344.82299805]
[88.52066803 359.72955322]
[91.18646240 374.49078369]
[93.85225677 389.25198364]
[96.51805115 404.01321411]
[99.18384552 418.77444458]
[101.84963989 433.53564453]
[104.51543427 448.29687500]
[119.50611115 447.39355469]
[134.49841309 448.26959229]
[149.28184509 450.91271973]
[163.64891052 455.28582764]
[177.39788818 461.32751465]
[190.33576965 468.95297241]
[202.28094482 478.05511475]
[213.06570435 488.50622559]
[222.53865051 500.15951538]
[230.56678772 512.85144043]
[237.03744507 526.40386963]
[241.85974121 540.62640381]
[244.96601868 555.31951904]
[246.31265259 570.27691650]
[245.88073730 585.28857422]
[243.67633057 600.14373779]
[239.73039246 614.63397217]
[234.09831238 628.55572510]
[226.85914612 641.71368408]
[218.11453247 653.92303467]
[207.98722839 665.01239014]
[196.61941528 674.82611084]
[184.17066956 683.22637939]
[170.81573486 690.09533691]
[156.74212646 695.33648682]
[142.14739990 698.87628174]
[127.23644257 700.66503906]
[112.21857452 700.67767334]
[97.30464172 698.91394043]
[82.70399475 695.39862061]
[68.62160492 690.18103027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 179]
[21 178]
[22 177]
[23 176]
[24 175]
[25 174]
[26 173]
[36 172]
[37 171]
[38 170]
[39 169]
[40 168]
[41 167]
[43 165]
[44 164]
[45 163]
[46 162]
[70 161]
[71 160]
[72 159]
[73 158]
[74 157]
[75 156]
[76 152]
[77 151]
[78 150]
[79 149]
[81 148]
[82 147]
[83 146]
[84 145]
[85 144]
[86 138]
[87 137]
[88 136]
[89 128]
[90 127]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
[96 121]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
