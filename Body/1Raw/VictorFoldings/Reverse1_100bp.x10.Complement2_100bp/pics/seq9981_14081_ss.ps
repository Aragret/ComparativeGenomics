%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[166.00360107 828.51257324]
[151.39433289 825.10021973]
[136.95156860 821.04046631]
[122.70400238 816.34130859]
[108.67990875 811.01220703]
[94.90713501 805.06359863]
[81.41301727 798.50738525]
[68.22435760 791.35656738]
[55.36734390 783.62530518]
[42.86748886 775.32904053]
[30.74962044 766.48413086]
[19.03779411 757.10821533]
[7.75526237 747.21984863]
[-3.07557368 736.83868408]
[-13.43321037 725.98541260]
[-23.29708290 714.68145752]
[-32.64760971 702.94934082]
[-41.46622467 690.81231689]
[-49.73541641 678.29455566]
[-57.43877411 665.42077637]
[-64.56099701 652.21667480]
[-71.08794403 638.70837402]
[-77.00666046 624.92272949]
[-82.30539703 610.88714600]
[-86.97362518 596.62939453]
[-91.00209045 582.17785645]
[-94.38278198 567.56127930]
[-97.10898590 552.80853271]
[-99.17530060 537.94903564]
[-100.57762146 523.01220703]
[-101.31315613 508.02774048]
[-101.38044739 493.02539062]
[-100.77937317 478.03494263]
[-99.51110840 463.08615112]
[-97.57818604 448.20867920]
[-94.98442841 433.43209839]
[-91.73500824 418.78573608]
[-87.83634949 404.29864502]
[-83.29621887 389.99960327]
[-78.12361145 375.91702271]
[-72.32880402 362.07885742]
[-65.92330170 348.51254272]
[-58.91981888 335.24505615]
[-51.33226395 322.30273438]
[-43.17570114 309.71124268]
[-34.46632385 297.49560547]
[-25.22142601 285.68008423]
[-15.45935822 274.28811646]
[-5.19950390 263.34231567]
[5.53776646 252.86444092]
[16.73113441 242.87527466]
[28.35837746 233.39465332]
[40.39641190 224.44139099]
[52.82133484 216.03327942]
[65.60847473 208.18701172]
[78.73245239 200.91816711]
[92.16720581 194.24116516]
[105.88606262 188.16926575]
[119.86178589 182.71452332]
[115.03578949 168.51206970]
[110.20979309 154.30961609]
[105.38378906 140.10714722]
[100.55779266 125.90470123]
[95.73179626 111.70223999]
[93.55989838 126.54417419]
[87.34690857 140.19696045]
[77.58281708 151.58390808]
[65.03765869 159.80697632]
[50.70078659 164.21766663]
[35.70287704 164.46813965]
[21.22672653 160.53863525]
[8.41398335 152.73904419]
[-1.72488785 141.68447876]
[-8.39029121 128.24676514]
[-11.05656624 113.48562622]
[-9.51343918 98.56521606]
[-3.88260698 84.66220093]
[5.39185905 72.87304688]
[17.57853508 64.12747955]
[31.71633148 59.11521912]
[46.69028091 58.23155594]
[61.31947327 61.54617310]
[74.45019531 68.79766846]
[85.04689789 79.41416168]
[92.27510834 92.56163025]
[91.82849884 77.56828308]
[91.38189697 62.57493210]
[90.93528748 47.58158493]
[79.71408844 36.77776718]
[79.47475433 21.56601524]
[89.84369659 10.93489838]
[89.39709473 -4.05845213]
[88.95048523 -19.05180168]
[74.26386261 -22.51092911]
[60.97342300 -29.65422249]
[49.98533249 -39.99464035]
[42.04877090 -52.82715607]
[37.70487213 -67.27682495]
[37.24980927 -82.35844421]
[40.71460724 -97.04373169]
[47.86303329 -110.33141327]
[58.20769119 -121.31551361]
[71.04327393 -129.24711609]
[85.49461365 -133.58543396]
[100.57641602 -134.03466797]
[115.26036072 -130.56420898]
[128.54527283 -123.41065216]
[139.52537537 -113.06175232]
[147.45202637 -100.22311401]
[151.78477478 -85.77009583]
[152.22817993 -70.68812561]
[148.75204468 -56.00551987]
[141.59336853 -42.72336197]
[131.24021912 -31.74725533]
[118.39852905 -23.82556534]
[103.94383240 -19.49840736]
[104.39044189 -4.50505781]
[104.83704376 10.48829174]
[115.82038116 20.48339081]
[116.48688507 35.68241882]
[105.92864227 47.13497925]
[106.37524414 62.12832642]
[106.82185364 77.12168121]
[107.26845551 92.11502838]
[109.93424988 106.87624359]
[114.76025391 121.07869720]
[119.58625031 135.28115845]
[124.41224670 149.48361206]
[129.23825073 163.68606567]
[134.06423950 177.88851929]
[148.46997070 173.69923401]
[163.04800415 170.15585327]
[177.76942444 167.26538086]
[192.60499573 165.03356934]
[207.52525330 163.46485901]
[222.50057983 162.56234741]
[237.50125122 162.32785034]
[252.49746704 162.76181030]
[267.45947266 163.86338806]
[282.35754395 165.63037109]
[297.16213989 168.05926514]
[311.84381104 171.14523315]
[326.37344360 174.88218689]
[340.72216797 179.26266479]
[354.86154175 184.27798462]
[368.76345825 189.91819763]
[382.40029907 196.17208862]
[395.74502563 203.02726746]
[408.77111816 210.47009277]
[421.45272827 218.48580933]
[433.76467896 227.05848694]
[445.68252563 236.17112732]
[457.18258667 245.80561829]
[468.24206543 255.94284058]
[478.83895874 266.56265259]
[488.95227051 277.64398193]
[498.56188965 289.16485596]
[507.64877319 301.10232544]
[516.19482422 313.43276978]
[524.18316650 326.13168335]
[531.59783936 339.17382812]
[538.42413330 352.53332520]
[544.64855957 366.18365479]
[550.25872803 380.09768677]
[555.24353027 394.24786377]
[559.59301758 408.60601807]
[563.29852295 423.14370728]
[566.35278320 437.83200073]
[568.74969482 452.64178467]
[570.48449707 467.54364014]
[571.55377197 482.50799561]
[571.95532227 497.50512695]
[571.68841553 512.50524902]
[570.75360107 527.47857666]
[569.15264893 542.39544678]
[566.88879395 557.22613525]
[563.96655273 571.94128418]
[560.39166260 586.51165771]
[556.17126465 600.90826416]
[551.31378174 615.10260010]
[545.82873535 629.06646729]
[539.72711182 642.77215576]
[533.02099609 656.19238281]
[525.72375488 669.30059814]
[517.84979248 682.07067871]
[509.41476440 694.47735596]
[500.43542480 706.49597168]
[490.92962646 718.10266113]
[480.91622925 729.27435303]
[470.41510010 739.98889160]
[459.44711304 750.22497559]
[448.03399658 759.96234131]
[436.19845581 769.18157959]
[423.96398926 777.86450195]
[411.35485840 785.99371338]
[398.39608765 793.55322266]
[385.11346436 800.52795410]
[371.53329468 806.90399170]
[357.68258667 812.66882324]
[343.58883667 817.81091309]
[329.27999878 822.32000732]
[314.78451538 826.18725586]
[300.13113403 829.40496826]
[285.34896851 831.96667480]
[270.46734619 833.86730957]
[255.51583862 835.10321045]
[240.52412415 835.67181396]
[225.52195740 835.57196045]
[210.53912354 834.80395508]
[195.60537720 833.36926270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 130]
[60 129]
[61 128]
[62 127]
[63 126]
[64 125]
[85 124]
[86 123]
[87 122]
[88 121]
[91 118]
[92 117]
[93 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
