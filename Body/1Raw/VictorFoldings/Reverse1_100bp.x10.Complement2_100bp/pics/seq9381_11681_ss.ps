%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[165.79344177 519.70922852]
[163.23211670 504.91586304]
[162.20545959 489.93753052]
[162.72434998 474.93304443]
[164.78329468 460.06143188]
[168.36045837 445.48034668]
[173.41793823 431.34439087]
[179.90209961 417.80334473]
[187.74421692 405.00079346]
[196.86114502 393.07244873]
[207.15628052 382.14474487]
[218.52044678 372.33355713]
[230.83319092 363.74282837]
[223.55995178 350.62414551]
[216.28672791 337.50546265]
[209.01350403 324.38674927]
[201.74026489 311.26806641]
[194.46704102 298.14935303]
[191.19660950 296.83154297]
[188.40199280 293.86419678]
[186.85151672 289.48822021]
[187.17691040 284.27847290]
[180.49670410 270.84811401]
[173.81651306 257.41772461]
[167.13632202 243.98736572]
[160.45613098 230.55697632]
[153.67613220 217.17671204]
[146.79672241 203.84727478]
[131.53985596 195.17576599]
[132.56074524 176.78993225]
[125.48363495 163.56439209]
[118.40653229 150.33886719]
[111.32942963 137.11334229]
[104.25231934 123.88781738]
[97.17521667 110.66229248]
[90.39548492 124.04269409]
[75.73891449 127.23404694]
[64.00976562 117.88379669]
[63.85434341 102.88460541]
[75.38721466 93.29331207]
[90.10544586 96.17928314]
[84.03161621 82.46401978]
[77.95777893 68.74874878]
[63.48828506 62.98061371]
[57.52393341 48.98485565]
[63.11214066 35.22595215]
[57.03830719 21.51068306]
[44.37570190 12.02548599]
[46.29675293 -2.74471474]
[40.22291946 -16.45998192]
[33.64289093 -29.93971634]
[26.56578827 -43.16524506]
[19.48868179 -56.39076996]
[1.91571665 -56.54591751]
[-13.08169937 -65.53414154]
[-21.41832161 -80.80191040]
[-20.87667465 -98.09988403]
[-11.69614697 -112.66546631]
[-19.16388893 -125.67442322]
[-26.63162994 -138.68338013]
[-34.09936905 -151.69232178]
[-47.88965225 -145.74876404]
[-62.26757050 -141.41595459]
[-77.04567719 -138.75038147]
[-92.03131866 -137.78680420]
[-107.02910614 -138.53776550]
[-121.84353638 -140.99348450]
[-136.28144836 -145.12194824]
[-150.15464783 -150.86932373]
[-163.28222656 -158.16070557]
[-175.49307251 -166.90101624]
[-186.62799072 -176.97631836]
[-196.54179382 -188.25523376]
[-205.10525513 -200.59075928]
[-212.20671082 -213.82205200]
[-217.75360107 -227.77661133]
[-221.67359924 -242.27252197]
[-223.91560364 -257.12078857]
[-224.45037842 -272.12783813]
[-223.27096558 -287.09805298]
[-220.39273071 -301.83621216]
[-215.85321045 -316.15020752]
[-209.71156311 -329.85342407]
[-202.04786682 -342.76718140]
[-192.96205139 -354.72317505]
[-182.57254028 -365.56549072]
[-171.01480103 -375.15280151]
[-158.43951416 -383.36010742]
[-145.01062012 -390.08041382]
[-130.90318298 -395.22610474]
[-116.30113983 -398.73007202]
[-101.39483643 -400.54669189]
[-86.37862396 -400.65222168]
[-71.44826508 -399.04531860]
[-56.79840851 -395.74691772]
[-42.62004471 -390.80004883]
[-29.09801292 -384.26916504]
[-16.40860558 -376.23941040]
[-4.71725321 -366.81552124]
[5.82362175 -356.12030029]
[15.07659817 -344.29318237]
[22.92104340 -331.48840332]
[29.25469208 -317.87289429]
[33.99496841 -303.62411499]
[37.08007812 -288.92785645]
[38.46979141 -273.97570801]
[38.14599991 -258.96261597]
[36.11292267 -244.08430481]
[32.39706039 -229.53472900]
[27.04686356 -215.50358582]
[20.13207817 -202.17378235]
[11.74285412 -189.71911621]
[1.98856187 -178.30195618]
[-9.00363064 -168.07115173]
[-21.09041786 -159.16006470]
[-13.62267685 -146.15110779]
[-6.15493584 -133.14216614]
[1.31280518 -120.13320923]
[13.87677765 -121.46166992]
[26.05481148 -117.92665100]
[36.02791595 -110.01937103]
[42.29255676 -98.88683319]
[43.88728333 -86.16551971]
[40.54012299 -73.74088287]
[32.71421051 -63.46787643]
[39.79131317 -50.24234772]
[46.86841965 -37.01682281]
[53.64814758 -50.39722824]
[68.30472565 -53.58858109]
[80.03386688 -44.23833084]
[80.18929291 -29.23913574]
[68.65641785 -19.64784431]
[53.93818665 -22.53381538]
[60.01202011 -8.81854820]
[72.24018860 -0.31435847]
[70.75357056 15.43684959]
[76.82740784 29.15211678]
[90.77133179 34.26117706]
[97.12644196 48.08388519]
[91.67304993 62.67491531]
[97.74687958 76.39018250]
[103.82071686 90.10544586]
[110.40074158 103.58518219]
[117.47785187 116.81071472]
[124.55495453 130.03623962]
[131.63206482 143.26176453]
[138.70916748 156.48728943]
[145.78627014 169.71281433]
[157.88197327 174.19129944]
[163.50424194 185.35256958]
[160.12614441 196.96786499]
[167.00556946 210.29730225]
[173.72222900 216.48796082]
[173.88650513 223.87678528]
[180.56669617 237.30715942]
[187.24688721 250.73753357]
[193.92709351 264.16790771]
[200.60728455 277.59829712]
[207.58573914 290.87612915]
[214.85896301 303.99484253]
[222.13218689 317.11352539]
[229.40542603 330.23220825]
[236.67864990 343.35092163]
[243.95187378 356.46960449]
[257.76101685 350.57791138]
[272.10272217 346.13732910]
[286.82504272 343.19491577]
[301.77185059 341.78189087]
[316.78475952 341.91323853]
[331.70455933 343.58755493]
[346.37313843 346.78707886]
[360.63497925 351.47790527]
[374.33889771 357.61032104]
[387.33966064 365.11929321]
[399.49938965 373.92523193]
[410.68923950 383.93478394]
[420.79055786 395.04187012]
[429.69631958 407.12872314]
[437.31204224 420.06719971]
[443.55703735 433.72018433]
[448.36508179 447.94293213]
[451.68524170 462.58468628]
[453.48229980 477.49020386]
[453.73721313 492.50149536]
[452.44726562 507.45944214]
[449.62615967 522.20550537]
[445.30377197 536.58325195]
[439.52593994 550.44042969]
[432.35391235 563.63006592]
[423.86367798 576.01226807]
[414.14529419 587.45593262]
[403.30175781 597.83966064]
[391.44799805 607.05340576]
[378.70971680 614.99945068]
[365.22189331 621.59356689]
[351.12753296 626.76593018]
[336.57604980 630.46166992]
[321.72171021 632.64154053]
[306.72192383 633.28259277]
[291.73574829 632.37786865]
[276.92202759 629.93701172]
[262.43780518 625.98590088]
[248.43659973 620.56646729]
[235.06684875 613.73614502]
[222.47027588 605.56726074]
[210.78041077 596.14648438]
[200.12117004 585.57360840]
[190.60556030 573.96081543]
[182.33444214 561.43115234]
[175.39549255 548.11743164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 164]
[14 163]
[15 162]
[16 161]
[17 160]
[18 159]
[22 158]
[23 157]
[24 156]
[25 155]
[26 154]
[27 152]
[28 151]
[30 148]
[31 147]
[32 146]
[33 145]
[34 144]
[35 143]
[41 142]
[42 141]
[43 140]
[46 137]
[47 136]
[49 134]
[50 133]
[51 127]
[52 126]
[53 125]
[58 118]
[59 117]
[60 116]
[61 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
