%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[72.08403778 951.21917725]
[57.13063431 949.99090576]
[42.26662064 947.94787598]
[27.53635025 945.09619141]
[12.98379135 941.44439697]
[-1.34762764 937.00329590]
[-15.41513634 931.78619385]
[-29.17675209 925.80865479]
[-42.59140396 919.08856201]
[-55.61905670 911.64587402]
[-68.22083282 903.50292969]
[-80.35911560 894.68389893]
[-91.99768829 885.21520996]
[-103.10181427 875.12500000]
[-113.63835907 864.44354248]
[-123.57586670 853.20257568]
[-132.88468933 841.43572998]
[-141.53703308 829.17810059]
[-149.50709534 816.46624756]
[-156.77107239 803.33813477]
[-163.30729675 789.83294678]
[-169.09625244 775.99090576]
[-174.12066650 761.85345459]
[-178.36553955 747.46270752]
[-181.81822205 732.86163330]
[-184.46838379 718.09375000]
[-186.30813599 703.20318604]
[-187.33198547 688.23443604]
[-187.53686523 673.23205566]
[-186.92216492 658.24090576]
[-185.48973083 643.30566406]
[-183.24383545 628.47094727]
[-180.19117737 613.78100586]
[-176.34086609 599.27972412]
[-171.70437622 585.01031494]
[-166.29557800 571.01538086]
[-160.13059998 557.33673096]
[-153.22782898 544.01513672]
[-145.60787964 531.09039307]
[-137.29348755 518.60101318]
[-128.30947876 506.58435059]
[-118.68264008 495.07623291]
[-108.44171906 484.11099243]
[-97.61727905 473.72137451]
[-86.24161530 463.93835449]
[-74.34868622 454.79116821]
[-61.97397995 446.30709839]
[-49.15442657 438.51147461]
[-35.92829132 431.42752075]
[-22.33504486 425.07641602]
[-8.41524982 419.47711182]
[5.78954697 414.64630127]
[20.23695374 410.59844971]
[34.88385391 407.34555054]
[49.68653870 404.89739990]
[64.60082245 403.26126099]
[79.58219910 402.44201660]
[79.58219910 387.44201660]
[79.58219910 372.44201660]
[79.58219910 357.44201660]
[79.58219910 342.44201660]
[79.58219910 327.44201660]
[79.58219910 312.44201660]
[79.58219910 297.44201660]
[79.58219910 282.44201660]
[79.58219910 267.44201660]
[67.29153442 276.04083252]
[52.86310196 271.93957520]
[46.93300629 258.16152954]
[53.87269592 244.86338806]
[68.56649017 241.84802246]
[80.18196106 251.33676147]
[81.29760742 236.37831116]
[82.41326141 221.41984558]
[83.52890778 206.46139526]
[70.76744843 200.62319946]
[60.74398041 190.75868225]
[54.67683029 178.03826904]
[53.31319046 163.98114014]
[56.83715439 150.27389526]
[64.84517670 138.56814575]
[76.39215088 130.28149414]
[90.10292816 126.42590332]
[91.44116211 111.48571777]
[85.73317719 98.72208405]
[93.61865234 87.17604828]
[94.95688629 72.23586273]
[96.29512024 57.29567719]
[96.85333252 42.30606842]
[96.63000488 27.30772972]
[96.18339539 12.31437969]
[95.51361084 -2.67065907]
[94.84382629 -17.65569687]
[91.33435059 -26.08904648]
[94.27730560 -32.86848831]
[93.83069611 -47.86183548]
[93.38409424 -62.85518646]
[92.93748474 -77.84853363]
[78.97393036 -84.01148224]
[69.07374573 -95.62824249]
[65.20260620 -110.39228821]
[68.12914276 -125.37221527]
[77.27227783 -137.59373474]
[90.81664276 -144.63027954]
[106.07299805 -145.08471680]
[120.01216888 -138.86683655]
[129.86653137 -127.21118164]
[133.67950439 -112.43200684]
[130.69400024 -97.46372223]
[121.50280762 -85.27828979]
[107.93083191 -78.29514313]
[108.37744141 -63.30179214]
[108.82405090 -48.30844116]
[109.27065277 -33.31509399]
[109.82886505 -18.32548332]
[110.49864960 -3.34044409]
[111.16843414 11.64459419]
[114.02584076 15.47137642]
[114.50962830 21.13379478]
[111.62834167 27.08440208]
[111.85166931 42.08274078]
[122.23601532 31.25844574]
[137.13452148 29.51651192]
[149.73580933 37.65332794]
[154.27871704 51.94885254]
[148.68629456 65.86736298]
[135.51533508 73.04550171]
[120.78740692 70.20152283]
[111.23530579 58.63391113]
[109.89707184 73.57409668]
[108.55883789 88.51428223]
[114.26682281 101.27791595]
[106.38134766 112.82395172]
[105.04311371 127.76413727]
[119.33692169 135.12588501]
[129.68643188 147.37979126]
[134.52947998 162.63038635]
[133.15266418 178.53346252]
[125.79627991 192.65644836]
[113.61299133 202.85038757]
[98.48735809 207.57704163]
[97.37171173 222.53550720]
[96.25606537 237.49395752]
[95.14041138 252.45240784]
[94.58219910 267.44201660]
[94.58219910 282.44201660]
[94.58219910 297.44201660]
[94.58219910 312.44201660]
[94.58219910 327.44201660]
[94.58219910 342.44201660]
[94.58219910 357.44201660]
[94.58219910 372.44201660]
[94.58219910 387.44201660]
[94.58219910 402.44201660]
[109.56358337 403.26126099]
[124.47786713 404.89739990]
[139.28054810 407.34555054]
[153.92744446 410.59844971]
[168.37486267 414.64630127]
[182.57965088 419.47711182]
[196.49945068 425.07641602]
[210.09269714 431.42752075]
[223.31883240 438.51147461]
[236.13838196 446.30709839]
[248.51309204 454.79116821]
[260.40600586 463.93835449]
[271.78167725 473.72137451]
[282.60614014 484.11099243]
[292.84704590 495.07623291]
[302.47387695 506.58435059]
[311.45788574 518.60101318]
[319.77227783 531.09039307]
[327.39224243 544.01513672]
[334.29501343 557.33673096]
[340.45999146 571.01538086]
[345.86877441 585.01031494]
[350.50527954 599.27972412]
[354.35559082 613.78100586]
[357.40823364 628.47094727]
[359.65414429 643.30566406]
[361.08657837 658.24090576]
[361.70126343 673.23205566]
[361.49639893 688.23443604]
[360.47253418 703.20318604]
[358.63278198 718.09375000]
[355.98263550 732.86163330]
[352.52993774 747.46270752]
[348.28506470 761.85345459]
[343.26065063 775.99090576]
[337.47171021 789.83294678]
[330.93548584 803.33813477]
[323.67150879 816.46624756]
[315.70144653 829.17810059]
[307.04910278 841.43572998]
[297.74026489 853.20257568]
[287.80276489 864.44354248]
[277.26623535 875.12500000]
[266.16210938 885.21520996]
[254.52352905 894.68389893]
[242.38523865 903.50292969]
[229.78346252 911.64587402]
[216.75581360 919.08856201]
[203.34115601 925.80865479]
[189.57954407 931.78619385]
[175.51203918 937.00329590]
[161.18061829 941.44439697]
[146.62805176 945.09619141]
[131.89778137 947.94787598]
[117.03376770 949.99090576]
[102.08036804 951.21917725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 154]
[58 153]
[59 152]
[60 151]
[61 150]
[62 149]
[63 148]
[64 147]
[65 146]
[66 145]
[72 144]
[73 143]
[74 142]
[75 141]
[83 134]
[84 133]
[86 131]
[87 130]
[88 129]
[89 121]
[90 120]
[91 117]
[92 116]
[93 115]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
