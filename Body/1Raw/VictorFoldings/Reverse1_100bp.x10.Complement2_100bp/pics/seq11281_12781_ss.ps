%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUAGAAAUGAUAUUUUCGAUAACACAUUCGAUCAGUAUAAUUCAACAACCGAGUCCUCAAACUAUCAAGAACCCGUCACUCUCACUCAUCAUCUUACAAxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[84.73818970 736.42395020]
[72.43027496 745.01812744]
[59.36114883 752.40344238]
[45.64918137 758.51300049]
[31.41854668 763.29144287]
[16.79812241 766.69555664]
[1.92031729 768.69445801]
[-13.08012962 769.27008057]
[-28.06736946 768.41723633]
[-42.90567017 766.14355469]
[-57.46065521 762.46972656]
[-71.60050201 757.42895508]
[-85.19716644 751.06689453]
[-98.12750244 743.44122314]
[-110.27440643 734.62091064]
[-121.52787781 724.68591309]
[-131.78601074 713.72619629]
[-140.95587158 701.84100342]
[-148.95445251 689.13793945]
[-155.70928955 675.73205566]
[-161.15922546 661.74481201]
[-165.25488281 647.30285645]
[-167.95919800 632.53698730]
[-169.24765015 617.58087158]
[-169.10859680 602.57006836]
[-167.54327393 587.64038086]
[-164.56587219 572.92712402]
[-160.20335388 558.56353760]
[-154.49523926 544.67962646]
[-147.49319458 531.40124512]
[-139.26065063 518.84857178]
[-129.87216187 507.13525391]
[-119.41276550 496.36746216]
[-107.97716522 486.64266968]
[-95.66893768 478.04891968]
[-82.59954071 470.66409302]
[-68.88735199 464.55502319]
[-54.65654373 459.77706909]
[-40.03599548 456.37350464]
[-25.15811729 454.37512207]
[-10.15764904 453.80004883]
[4.82955933 454.65347290]
[19.66777802 456.92767334]
[34.22262955 460.60208130]
[39.25954437 446.47305298]
[44.29645920 432.34402466]
[49.33337784 418.21499634]
[54.37029266 404.08596802]
[57.80135345 389.48364258]
[59.58382034 374.58990479]
[61.36628723 359.69619751]
[63.14875031 344.80249023]
[64.93122101 329.90875244]
[53.89962769 319.93670654]
[50.81887054 305.20669556]
[57.07555389 291.32479858]
[70.46134949 283.70071411]
[64.29126740 270.14419556]
[73.61363983 257.36123657]
[75.39610291 242.46751404]
[77.17856598 227.57380676]
[71.00848389 214.01727295]
[80.33085632 201.23431396]
[67.27344513 193.99322510]
[57.95790482 182.27290344]
[53.82815170 167.83995056]
[55.54343796 152.88517761]
[62.87331390 139.69097900]
[74.72805023 130.28309631]
[89.32051849 126.11951447]
[91.10298920 111.22579956]
[85.77754974 98.29786682]
[94.00329590 86.99173737]
[95.78575897 72.09801483]
[97.56822968 57.20429993]
[99.35069275 42.31058502]
[97.26322174 33.41787338]
[101.27217865 27.20900154]
[103.27619171 12.34347248]
[104.16900635 -2.62993312]
[103.94567871 -17.62827110]
[101.26721191 -22.10855103]
[100.63804626 -26.70827293]
[101.76052094 -30.62683296]
[104.06233215 -33.29778671]
[104.50893402 -48.29113770]
[104.95554352 -63.28448868]
[105.40214539 -78.27783966]
[95.72138977 -85.17853546]
[90.62593842 -95.78688812]
[91.27734375 -107.41743469]
[97.39830017 -117.18726349]
[107.37011719 -122.73064423]
[108.26293182 -137.70405579]
[109.15575409 -152.67745972]
[110.04856873 -167.65086365]
[103.14638519 -181.88710022]
[111.62751007 -194.13127136]
[97.53707123 -199.63714600]
[85.83895874 -209.22930908]
[77.67924500 -221.96800232]
[73.85733032 -236.60520935]
[74.74764252 -251.70695496]
[80.26296234 -265.79370117]
[89.86295319 -277.48538208]
[102.60710907 -285.63656616]
[117.24688721 -289.44866943]
[132.34802246 -288.54824829]
[146.43107605 -283.02346802]
[158.11631775 -273.41564941]
[166.25895691 -260.66604614]
[170.06124878 -246.02371216]
[169.15069580 -230.92318726]
[163.61650085 -216.84384155]
[154.00085449 -205.16503906]
[141.24578857 -197.03094482]
[126.60091400 -193.23846436]
[133.56695557 -180.07321167]
[125.02197266 -166.75804138]
[124.12915802 -151.78463745]
[123.23634338 -136.81123352]
[122.34352875 -121.83782959]
[135.29663086 -108.90211487]
[134.67019653 -90.28705597]
[120.39550018 -77.83123016]
[119.94889069 -62.83788300]
[119.50228882 -47.84453201]
[119.05567932 -32.85118103]
[118.94401550 -17.85159874]
[119.16734314 -2.85326076]
[127.83538818 -15.09519291]
[141.42150879 -21.45265198]
[156.37432861 -20.26381493]
[168.78520203 -11.83943748]
[175.40997314 1.61836565]
[174.51693726 16.59175873]
[166.33952332 29.16673088]
[153.01528931 36.05621719]
[138.02717590 35.45932007]
[125.29302216 27.53206635]
[118.14171600 14.34748650]
[116.13770294 29.21301460]
[114.24440765 44.09304810]
[112.46194458 58.98676682]
[110.67948151 73.88048553]
[108.89701080 88.77420044]
[114.22245026 101.70213318]
[105.99670410 113.00826263]
[104.21424103 127.90198517]
[117.41207886 135.39147949]
[126.71195984 147.33113098]
[130.72129822 161.88238525]
[128.85913086 176.81958008]
[121.44014740 189.87039185]
[109.62195587 199.06146240]
[95.22457123 203.01678467]
[101.26715851 217.63861084]
[92.07228851 229.35626221]
[90.28981781 244.24998474]
[88.50735474 259.14370728]
[94.54994202 273.76553345]
[85.35507202 285.48318481]
[96.56371307 296.05068970]
[99.36787415 311.01699829]
[92.89816284 324.60400391]
[79.82493591 331.69122314]
[78.04247284 346.58493042]
[76.26000214 361.47866821]
[74.47753906 376.37237549]
[72.69506836 391.26608276]
[81.61435699 379.20599365]
[94.24881744 371.12078857]
[108.93618774 368.07427979]
[123.74407959 370.46725464]
[136.72425842 377.98489380]
[146.16897583 389.63809204]
[150.83560181 403.89370728]
[150.11015320 418.87615967]
[144.08810425 432.61425781]
[133.56172180 443.30047607]
[119.91596985 449.52890015]
[104.94615173 450.48007202]
[90.62182617 446.02880859]
[78.82759094 436.76080322]
[71.11518097 423.89538574]
[68.49932098 409.12286377]
[63.46240616 423.25189209]
[58.42549133 437.38092041]
[53.38857269 451.50994873]
[48.35165787 465.63897705]
[61.94855118 472.00051880]
[74.87916565 479.62576294]
[87.02639008 488.44558716]
[98.28022766 498.38018799]
[108.53874969 509.33953857]
[117.70905304 521.22442627]
[125.70809174 533.92718506]
[132.46342468 547.33276367]
[137.91386414 561.31982422]
[142.01005554 575.76165771]
[144.71490479 590.52740479]
[146.00390625 605.48345947]
[145.86538696 620.49432373]
[144.30061340 635.42401123]
[141.32376099 650.13739014]
[136.96176147 664.50115967]
[131.25415039 678.38525391]
[124.25258636 691.66387939]
[116.02050018 704.21691895]
[106.63244629 715.93054199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 190]
[45 189]
[46 188]
[47 187]
[48 186]
[49 170]
[50 169]
[51 168]
[52 167]
[53 166]
[57 162]
[59 160]
[60 159]
[61 158]
[63 156]
[70 149]
[71 148]
[73 146]
[74 145]
[75 144]
[76 143]
[78 142]
[79 141]
[80 130]
[81 129]
[85 128]
[86 127]
[87 126]
[88 125]
[93 122]
[94 121]
[95 120]
[96 119]
[98 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
