%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[122.44461060 642.03686523]
[113.43729401 654.08294678]
[102.42366791 664.32696533]
[89.75778961 672.43963623]
[75.84680176 678.16009521]
[61.13788605 681.30456543]
[46.10387802 681.77191162]
[31.22805786 679.54711914]
[16.98862267 674.70166016]
[3.84330773 667.39135742]
[-7.78531647 657.85119629]
[-17.52343941 646.38787842]
[-25.05801964 633.36981201]
[-30.14685059 619.21551514]
[-32.62635040 604.38000488]
[-32.41680908 589.34020996]
[-29.52496910 574.57952881]
[-24.04378510 560.57250977]
[-16.14945793 547.76940918]
[-6.09575510 536.58184814]
[5.79413748 527.36932373]
[19.13800812 520.42803955]
[33.50690842 515.98120117]
[48.43893433 514.17169189]
[63.45408630 515.05767822]
[58.93865967 500.86401367]
[69.71398163 489.27941895]
[73.25365448 474.70306396]
[76.79332733 460.12667847]
[80.33300018 445.55029297]
[83.87267303 430.97393799]
[87.41234589 416.39755249]
[90.95201874 401.82116699]
[93.06664276 386.97097778]
[93.73642731 371.98593140]
[94.40621185 357.00091553]
[95.07599640 342.01586914]
[95.74578094 327.03082275]
[96.41556549 312.04577637]
[97.08535004 297.06076050]
[97.64356232 282.07113647]
[97.97853851 267.07489014]
[98.20186615 252.07653809]
[90.65491486 239.23547363]
[98.59682465 225.55203247]
[98.82015228 210.55369568]
[99.04347992 195.55535889]
[98.59687042 180.56201172]
[97.48122406 165.60356140]
[96.36557770 150.64509583]
[95.24992371 135.68664551]
[94.13427734 120.72819519]
[93.01863098 105.76974487]
[90.48256683 102.86444092]
[89.23942566 98.85539246]
[89.75344849 94.34509277]
[92.20240784 90.12106323]
[91.75580597 75.12771606]
[91.30919647 60.13436127]
[90.86259460 45.14101410]
[90.41598511 30.14766312]
[75.74680328 26.64762497]
[62.49379349 19.47523689]
[51.55751038 9.12469959]
[43.67931366 -3.69406509]
[39.39112091 -18.10409927]
[38.97948456 -33.12140656]
[42.46646118 -47.72214508]
[49.60850906 -60.91242599]
[59.91350555 -71.79596710]
[72.67462921 -79.63501740]
[87.01884460 -83.90031433]
[86.57224274 -98.89366913]
[86.12563324 -113.88701630]
[85.67903137 -128.88037109]
[85.23242188 -143.87371826]
[77.08766937 -157.43740845]
[84.44260406 -170.38940430]
[81.05907440 -178.87406921]
[84.10263824 -185.60893250]
[83.87931061 -200.60726929]
[83.65598297 -215.60560608]
[83.43265533 -230.60394287]
[69.47093964 -240.15206909]
[64.00570679 -255.98344421]
[69.00355530 -271.79431152]
[82.30593872 -281.41326904]
[81.85932922 -296.40661621]
[73.02381897 -305.80322266]
[72.96050262 -318.30041504]
[81.15792847 -327.19586182]
[80.93460083 -342.19418335]
[80.71127319 -357.19253540]
[72.01663971 -366.71966553]
[72.13940430 -379.21640015]
[80.46836090 -387.98880005]
[80.46836090 -402.98880005]
[80.46836090 -417.98880005]
[66.41117096 -423.77362061]
[55.64130020 -434.50106812]
[49.80107117 -448.53530884]
[49.78107452 -463.73623657]
[55.58436203 -477.78579712]
[66.32597351 -488.54153442]
[80.36789703 -494.36331177]
[95.56883240 -494.36331177]
[109.61074829 -488.54153442]
[120.35236359 -477.78579712]
[126.15564728 -463.73623657]
[126.13565063 -448.53530884]
[120.29541779 -434.50106812]
[109.52555084 -423.77362061]
[95.46836090 -417.98880005]
[95.46836090 -402.98880005]
[95.46836090 -387.98880005]
[105.04905701 -373.28582764]
[95.70960999 -357.41586304]
[95.93293762 -342.41751099]
[96.15626526 -327.41918945]
[105.95480347 -312.86047363]
[96.85267639 -296.85321045]
[97.29928589 -281.85986328]
[108.97952271 -275.39346313]
[115.99560547 -263.90789795]
[116.42364502 -250.34741211]
[110.04493713 -238.25070190]
[98.43099213 -230.82727051]
[98.65431976 -215.82893372]
[98.87764740 -200.83059692]
[99.10097504 -185.83226013]
[99.43595123 -170.83601379]
[107.54875946 -158.34474182]
[100.22577667 -144.32032776]
[100.67237854 -129.32696533]
[101.11898804 -114.33362579]
[101.56558990 -99.34027100]
[102.01219940 -84.34692383]
[116.58486176 -80.94297028]
[129.78994751 -73.87737274]
[140.72447205 -63.62649155]
[148.63896179 -50.88469696]
[152.98880005 -36.51739502]
[153.47174072 -21.50221062]
[150.04884338 -6.86248732]
[142.94761658 6.40246820]
[132.64678955 17.38559341]
[119.84418488 25.33409882]
[105.40933990 29.70105743]
[105.85594177 44.69440842]
[106.30255127 59.68775558]
[106.74915314 74.68110657]
[107.19576263 89.67445374]
[107.97708130 104.65409088]
[109.09272766 119.61254883]
[110.20838165 134.57099915]
[111.32402802 149.52944946]
[112.43967438 164.48791504]
[113.55532837 179.44636536]
[124.13883209 168.81671143]
[139.13786316 168.64619446]
[149.96029663 179.03248596]
[150.40653992 194.02584839]
[140.22097778 205.03739929]
[125.23834991 205.75923157]
[114.04181671 195.77868652]
[113.81848907 210.77702332]
[113.59516144 225.77536011]
[121.12613678 239.68920898]
[113.20020294 252.29986572]
[112.97687531 267.29821777]
[115.97817230 275.92547607]
[112.63691711 282.51773071]
[115.50942993 291.18875122]
[112.07038879 297.73052979]
[111.40060425 312.71557617]
[110.73081970 327.70062256]
[110.06103516 342.68563843]
[109.39125061 357.67068481]
[108.72146606 372.65573120]
[108.05168152 387.64077759]
[116.46686554 375.22366333]
[129.16180420 367.23373413]
[143.99717712 365.01748657]
[158.47296143 368.94836426]
[170.14971924 378.36392212]
[177.05975342 391.67752075]
[178.03855896 406.64553833]
[172.92120361 420.74563599]
[162.57005310 431.60168457]
[148.72947693 437.38424683]
[133.73181152 437.11886597]
[120.10446930 430.85028076]
[110.14387512 419.63479614]
[105.52839661 405.36083984]
[101.98872375 419.93722534]
[98.44905090 434.51361084]
[94.90937805 449.08996582]
[91.36970520 463.66635132]
[87.83003235 478.24273682]
[84.29035950 492.81909180]
[88.55260468 508.05535889]
[78.03046417 518.59735107]
[91.77969360 524.69641113]
[104.21883392 533.15264893]
[114.94799805 543.69421387]
[123.62229919 555.98223877]
[129.96289062 569.62176514]
[133.76594543 584.17431641]
[134.90921021 599.17211914]
[133.35595703 614.13293457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 202]
[27 200]
[28 199]
[29 198]
[30 197]
[31 196]
[32 195]
[33 194]
[34 180]
[35 179]
[36 178]
[37 177]
[38 176]
[39 175]
[40 174]
[41 172]
[42 170]
[43 169]
[45 167]
[46 166]
[47 165]
[48 158]
[49 157]
[50 156]
[51 155]
[52 154]
[53 153]
[57 152]
[58 151]
[59 150]
[60 149]
[61 148]
[72 137]
[73 136]
[74 135]
[75 134]
[76 133]
[78 131]
[80 130]
[81 129]
[82 128]
[83 127]
[87 122]
[88 121]
[91 119]
[92 118]
[93 117]
[96 115]
[97 114]
[98 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
