%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxGAAUAGACGAAGGAUCAGGACAUACGGGAAAAGGAUUGUGAGUGUUGUUUUGAUUGAUUAUGAUUGUAGAGUCUGCGAGUCCUUUAUCUUUGGCAGACUU\
) } def
/len { sequence length } bind def

/coor [
[149.53318787 609.72277832]
[149.53234863 594.67633057]
[152.37936401 579.90167236]
[157.97129822 565.93286133]
[166.10600281 553.27496338]
[176.48944092 542.38543701]
[188.74623108 533.65808105]
[202.43330383 527.40826416]
[198.89363098 512.83184814]
[195.35395813 498.25549316]
[191.81428528 483.67910767]
[188.27461243 469.10272217]
[184.62652588 454.55310059]
[180.87022400 440.03106689]
[165.99008179 438.66494751]
[152.44976807 432.27828979]
[141.89176941 421.62451172]
[135.60406494 407.97583008]
[134.36308289 392.97149658]
[138.33782959 378.42083740]
[147.06721497 366.08511353]
[159.51338196 357.46432495]
[155.75708008 342.94226074]
[152.00077820 328.42019653]
[148.24447632 313.89816284]
[144.38017273 299.40444946]
[140.40808105 284.93994141]
[136.43597412 270.47540283]
[132.24896240 256.07162476]
[127.84796906 241.73178101]
[123.44697571 227.39193726]
[119.04597473 213.05207825]
[116.11904907 211.08601379]
[113.99898529 207.60458374]
[113.38765717 203.00245667]
[114.78409576 197.97283936]
[111.02779388 183.45077515]
[107.27149200 168.92871094]
[104.43527985 166.83390808]
[102.47278595 163.26127625]
[102.06755829 158.63644409]
[103.68718719 153.67420959]
[100.58308411 138.99890137]
[97.47897339 124.32360077]
[94.37486267 109.64829254]
[91.16158295 94.99650574]
[87.83932495 80.36904907]
[77.23767090 68.62530518]
[81.96392059 54.50043869]
[77.01154327 46.82504272]
[78.70280457 39.63050079]
[75.59869385 24.95520020]
[72.49458313 10.27989769]
[67.65702820 2.53161788]
[69.45522308 -4.63694429]
[66.56995392 -19.35683632]
[63.68467712 -34.07672882]
[53.43737793 -46.13091660]
[58.58208466 -60.10879898]
[55.69681168 -74.82868958]
[48.81571960 -61.50012970]
[35.87451935 -53.91558456]
[20.88317871 -54.42521286]
[8.48692989 -62.87110138]
[2.52688551 -76.63619995]
[4.84982920 -91.45523834]
[14.73597240 -102.73638153]
[29.12198639 -106.98403931]
[43.55020523 -102.88203430]
[53.55000687 -91.70118713]
[52.65718842 -106.67459106]
[51.76437378 -121.64799500]
[40.22647858 -132.11293030]
[39.53433990 -147.31080627]
[49.58215714 -158.24592590]
[48.68933868 -173.21934509]
[47.79652405 -188.19274902]
[32.80347824 -189.04428101]
[18.01067734 -191.63069153]
[3.61817074 -195.91697693]
[-10.17939472 -201.84519958]
[-23.19542503 -209.33515930]
[-35.25389099 -218.28556824]
[-46.19171906 -228.57539368]
[-55.86098099 -240.06547546]
[-64.13092041 -252.60040283]
[-70.88968658 -266.01068115]
[-76.04588318 -280.11495972]
[-79.52976990 -294.72244263]
[-81.29424286 -309.63562012]
[-81.31542969 -324.65283203]
[-79.59304047 -339.57092285]
[-76.15038300 -354.18820190]
[-71.03400421 -368.30694580]
[-64.31309509 -381.73623657]
[-56.07855988 -394.29446411]
[-46.44175339 -405.81179810]
[-35.53300476 -416.13241577]
[-23.49983978 -425.11682129]
[-10.50499439 -432.64349365]
[3.27579021 -438.61059570]
[17.65614510 -442.93750000]
[32.44159317 -445.56561279]
[47.43217468 -446.45947266]
[62.42516327 -445.60690308]
[77.21779633 -443.01953125]
[91.61001587 -438.73226929]
[105.40718079 -432.80313110]
[118.42271423 -425.31231689]
[130.48057556 -416.36108398]
[141.41772461 -406.07052612]
[151.08621216 -394.57980347]
[159.35531616 -382.04434204]
[166.11318970 -368.63360596]
[171.26844788 -354.52899170]
[174.75135803 -339.92126465]
[176.51483154 -325.00796509]
[176.53501892 -309.99075317]
[174.81164551 -295.07278442]
[171.36799622 -280.45571899]
[166.25068665 -266.33731079]
[159.52888489 -252.90847778]
[151.29350281 -240.35079956]
[141.65592957 -228.83413696]
[130.74649048 -218.51422119]
[118.71272278 -209.53060913]
[105.71737671 -202.00483704]
[91.93619537 -196.03863525]
[77.55554962 -191.71270752]
[62.76993179 -189.08555603]
[63.66274643 -174.11215210]
[64.55556488 -159.13874817]
[75.83161926 -149.47509766]
[76.95036316 -134.30265808]
[66.73777771 -122.54080963]
[67.63059235 -107.56740570]
[68.52341461 -92.59400177]
[70.41670227 -77.71396637]
[73.30197906 -62.99407196]
[83.34290314 -51.99274826]
[78.40457153 -36.96199799]
[81.28984070 -22.24210739]
[84.17511749 -7.52221680]
[87.16989136 7.17578745]
[90.27400208 21.85108948]
[93.37811279 36.52639389]
[96.59138489 51.17818069]
[106.95540619 61.87566757]
[102.46678925 77.04679108]
[105.78904724 91.67424774]
[110.50341797 98.21238708]
[109.05016327 106.54418182]
[112.15427399 121.21949005]
[115.25838470 135.89479065]
[118.36249542 150.57009888]
[121.79355621 165.17240906]
[125.54985809 179.69447327]
[129.30615234 194.21653748]
[133.38581848 208.65109253]
[137.78681946 222.99093628]
[142.18782043 237.33078003]
[146.58882141 251.67062378]
[151.16081238 256.44644165]
[152.44224548 261.98312378]
[150.90049744 266.50332642]
[154.87260437 280.96783447]
[158.84469604 295.43237305]
[164.13487244 302.87896729]
[162.76654053 310.14184570]
[166.52284241 324.66390991]
[170.27914429 339.18597412]
[174.03544617 353.70803833]
[189.10067749 355.21267700]
[202.71658325 361.76852417]
[213.24816895 372.56695557]
[219.43815613 386.29116821]
[220.55706787 401.27682495]
[216.48907471 415.71377563]
[207.74375916 427.86486816]
[195.39228821 436.27474976]
[199.14859009 450.79681396]
[204.32730103 458.32135010]
[202.85099792 465.56304932]
[206.39067078 480.13943481]
[209.93034363 494.71582031]
[213.47001648 509.29217529]
[217.00968933 523.86859131]
[232.03875732 523.14508057]
[246.93312073 525.27917480]
[261.15435791 530.19378662]
[274.18835449 537.71112061]
[285.56396484 547.55957031]
[294.86999512 559.38305664]
[301.76995850 572.75421143]
[306.01449585 587.18957520]
[307.45013428 602.16741943]
[306.02499390 617.14624023]
[301.79058838 631.58459473]
[294.89999390 644.96057129]
[285.60229492 656.79058838]
[274.23358154 666.64697266]
[261.20486450 674.17352295]
[246.98707581 679.09808350]
[232.09420776 681.24261475]
[217.06463623 680.52966309]
[202.44165039 676.98498535]
[188.75387573 670.73669434]
[176.49610901 662.01068115]
[166.11146545 651.12231445]
[157.97534180 638.46533203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 187]
[9 186]
[10 185]
[11 184]
[12 183]
[13 181]
[14 180]
[22 172]
[23 171]
[24 170]
[25 169]
[26 167]
[27 166]
[28 165]
[29 162]
[30 161]
[31 160]
[32 159]
[36 158]
[37 157]
[38 156]
[42 155]
[43 154]
[44 153]
[45 152]
[46 150]
[47 149]
[49 147]
[51 146]
[52 145]
[53 144]
[55 143]
[56 142]
[57 141]
[59 139]
[60 138]
[70 137]
[71 136]
[72 135]
[75 132]
[76 131]
[77 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
