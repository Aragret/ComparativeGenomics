%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCUUUCGGAUAUUAGUGACACGGGCGAGUAUUCCCCUACCGGUACCGAUCCAAAUAUCUAUCAACCCACCAACCACAUUUACUCACUCCGUCCUCAGGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[9.35710430 569.25738525]
[1.30489516 581.95660400]
[-8.77779293 593.11218262]
[-20.60086250 602.40319824]
[-33.82413864 609.56231689]
[-48.06715775 614.38360596]
[-62.92012787 616.72821045]
[-77.95569611 616.52880859]
[-92.74125671 613.79107666]
[-106.85139465 608.59375000]
[-119.88014984 601.08642578]
[-131.45263672 591.48510742]
[-141.23591614 580.06604004]
[-148.94848633 567.15771484]
[-154.36843872 553.13165283]
[-157.33985901 538.39123535]
[-157.77720642 523.36071777]
[-155.66793823 508.47250366]
[-151.07272339 494.15496826]
[-144.12377930 480.82003784]
[-135.02104187 468.85140991]
[-124.02642059 458.59341431]
[-111.45623779 450.34121704]
[-97.67218018 444.33227539]
[-83.07082367 440.73941040]
[-68.07229614 439.66607666]
[-53.10812378 441.14309692]
[-49.13602829 426.67855835]
[-45.16393280 412.21405029]
[-41.19183731 397.74951172]
[-42.60868835 394.52075195]
[-42.53205109 390.44531250]
[-40.58102036 386.23263550]
[-36.70592117 382.73538208]
[-32.09191132 368.46264648]
[-27.47790337 354.18991089]
[-22.86389351 339.91717529]
[-18.35626602 325.61050415]
[-13.95526695 311.27066040]
[-26.70844269 319.16726685]
[-41.67556381 318.17468262]
[-53.27426910 308.66311646]
[-57.17852402 294.18011475]
[-51.93214035 280.12753296]
[-39.49188995 271.74658203]
[-24.49767685 272.16320801]
[-12.54197121 281.22195435]
[-8.08396816 295.54534912]
[-2.01013470 281.83007812]
[4.06369925 268.11480713]
[10.13753319 254.39955139]
[16.21136665 240.68428040]
[22.28520203 226.96900940]
[28.35903549 213.25375366]
[34.43286896 199.53848267]
[20.83169365 205.86367798]
[6.08857012 203.09956360]
[-4.29768085 192.27709961]
[-6.45324469 177.43278503]
[0.42585090 164.10319519]
[13.77387333 157.25991821]
[28.61233902 159.45535278]
[39.40686798 169.87063599]
[42.13122177 184.62228394]
[49.79182053 171.72596741]
[57.45241547 158.82963562]
[65.01679230 145.87663269]
[72.48453522 132.86769104]
[79.95227814 119.85873413]
[87.42002106 106.84977722]
[87.57736206 92.86883545]
[99.57102966 85.68247986]
[107.03877258 72.67353058]
[107.19889832 56.85313034]
[120.24544525 49.66724396]
[127.32254791 36.44171524]
[134.00274658 23.01133919]
[140.68293762 9.58096409]
[147.36312866 -3.84941196]
[137.30918884 -18.26299858]
[135.94715881 -35.69445038]
[143.56231689 -51.33457184]
[157.97566223 -60.91416550]
[175.16653442 -61.86928558]
[181.44389343 -75.49259949]
[187.72125244 -89.11592102]
[192.75817871 -103.24494934]
[196.51448059 -117.76700592]
[199.83673096 -132.39447021]
[202.72201538 -147.11436462]
[205.60728455 -161.83424377]
[208.49255371 -176.55413818]
[211.37782288 -191.27403259]
[212.60479736 -206.22377014]
[212.15820312 -221.21711731]
[211.71159363 -236.21046448]
[211.26498413 -251.20381165]
[197.04179382 -256.56750488]
[185.95730591 -266.96954346]
[179.70181274 -280.82369995]
[179.22923279 -296.01727295]
[184.61163330 -310.23339844]
[195.02824402 -321.30419922]
[208.89060974 -327.54147339]
[224.08480835 -327.99404907]
[238.29383850 -322.59295654]
[249.35092163 -312.16180420]
[255.56994629 -298.29122925]
[256.00253296 -283.09646606]
[250.58274841 -268.89456177]
[240.13705444 -257.85119629]
[226.25833130 -251.65042114]
[226.70494080 -236.65707397]
[227.15155029 -221.66372681]
[227.59814453 -206.67036438]
[234.62974548 -219.92015076]
[245.92506409 -229.79010010]
[259.99801636 -234.98165894]
[274.99703979 -234.81176758]
[288.94879150 -229.30281067]
[300.01766968 -219.17956543]
[306.74734497 -205.77391052]
[308.25244141 -190.84960938]
[304.33493042 -176.37020874]
[295.51022339 -164.24072266]
[282.93939209 -156.05697632]
[268.27627563 -152.89570618]
[253.45013428 -155.17280579]
[240.41156006 -162.58871460]
[230.87600708 -174.16770935]
[226.09771729 -188.38876343]
[223.21244812 -173.66886902]
[220.32717896 -158.94897461]
[217.44189453 -144.22908020]
[214.55662537 -129.50920105]
[216.00679016 -127.11019897]
[216.59405518 -123.99223328]
[216.03981018 -120.48107147]
[214.18843079 -116.99726868]
[211.03652954 -114.01070404]
[207.28022766 -99.48864746]
[218.30715942 -109.65756989]
[232.62869263 -114.11778259]
[247.47958374 -112.00807953]
[259.99237061 -103.73581696]
[267.75100708 -90.89823151]
[269.25744629 -75.97406769]
[264.22079468 -61.84494781]
[253.61355591 -51.23897552]
[239.48382568 -46.20400620]
[224.55984497 -47.71220779]
[211.72319031 -55.47237396]
[203.45240784 -67.98613739]
[201.34457397 -82.83855438]
[195.06721497 -69.21524048]
[188.78985596 -55.59192657]
[197.15126038 -46.12065125]
[201.32487488 -34.14643478]
[200.65728760 -21.43651009]
[195.21240234 -9.88088322]
[185.76713562 -1.21129155]
[173.70074463 3.25830531]
[160.79350281 2.83078265]
[154.11331177 16.26115799]
[147.43312073 29.69153404]
[140.75292969 43.12191010]
[141.51605225 45.81927872]
[141.25668335 48.98144913]
[139.79244995 52.22049713]
[137.08462524 55.08968353]
[133.25439453 57.13498306]
[133.62840271 72.02489471]
[120.04772186 80.14126587]
[112.57997894 93.15022278]
[112.42263794 107.13116455]
[100.42897034 114.31752014]
[92.96122742 127.32646942]
[85.49349213 140.33541870]
[78.02574921 153.34437561]
[76.46739960 162.34489441]
[70.34873962 166.49023438]
[62.68814468 179.38656616]
[55.02754974 192.28288269]
[48.14813614 205.61231995]
[42.07430267 219.32757568]
[36.00046921 233.04284668]
[29.92663383 246.75811768]
[23.85280037 260.47338867]
[17.77896690 274.18865967]
[11.70513248 287.90390015]
[5.63129807 301.61917114]
[0.38457996 315.67166138]
[-4.01641798 330.01150513]
[-3.54258847 339.13363647]
[-8.59116077 344.53118896]
[-13.20516968 358.80392456]
[-17.81917953 373.07666016]
[-22.43318748 387.34939575]
[-26.72731209 401.72161865]
[-30.69940758 416.18612671]
[-34.67150497 430.65066528]
[-38.64360046 445.11517334]
[-25.02375603 451.48760986]
[-12.67686176 460.07028198]
[-1.95816338 470.61624146]
[6.82394028 482.82208252]
[13.41677094 496.33663940]
[17.63063812 510.77099609]
[19.34430504 525.70996094]
[18.50846100 540.72357178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 202]
[28 201]
[29 200]
[30 199]
[34 198]
[35 197]
[36 196]
[37 195]
[38 193]
[39 192]
[48 191]
[49 190]
[50 189]
[51 188]
[52 187]
[53 186]
[54 185]
[55 184]
[64 183]
[65 182]
[66 181]
[67 179]
[68 178]
[69 177]
[70 176]
[72 174]
[73 173]
[75 171]
[76 166]
[77 165]
[78 164]
[79 163]
[84 156]
[85 155]
[86 154]
[87 141]
[88 140]
[89 135]
[90 134]
[91 133]
[92 132]
[93 131]
[94 115]
[95 114]
[96 113]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
