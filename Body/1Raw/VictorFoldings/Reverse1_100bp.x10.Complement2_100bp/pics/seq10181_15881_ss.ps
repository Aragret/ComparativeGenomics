%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[235.76097107 481.50503540]
[246.17570496 470.66619873]
[258.15783691 461.59014893]
[251.08073425 448.36462402]
[238.25392151 440.79345703]
[238.56489563 424.97531128]
[231.48779297 411.74978638]
[224.41069031 398.52426147]
[217.33358765 385.29873657]
[210.25646973 372.07321167]
[203.17936707 358.84768677]
[200.53865051 357.90704346]
[198.11141968 355.86373901]
[196.31953430 352.79379272]
[195.54957581 348.92446899]
[196.10137939 344.61755371]
[192.01074219 342.15267944]
[189.42507935 337.09191895]
[189.84669495 330.49389648]
[183.97773743 316.68972778]
[178.10876465 302.88552856]
[172.23980713 289.08135986]
[157.54489136 291.97189331]
[142.56428528 291.74374390]
[127.95281219 288.40438843]
[114.34970856 282.09747314]
[102.35059357 273.09646606]
[92.48142242 261.79284668]
[85.17540741 248.67909241]
[80.75403595 234.32727051]
[79.41287994 219.36395264]
[81.21298218 204.44300842]
[86.07809448 190.21691895]
[93.79783630 177.30830383]
[104.03687286 166.28265381]
[116.34943390 157.62356567]
[110.48047638 143.81939697]
[104.61151123 130.01521301]
[98.74255371 116.21104431]
[85.08428955 106.47306824]
[87.30068207 89.84587097]
[81.22685242 76.13059998]
[75.15301514 62.41533279]
[68.87565613 48.79201889]
[55.93625259 39.68803787]
[57.41669083 24.86718941]
[50.93719482 11.33884335]
[44.45769882 -2.18950224]
[37.97820282 -15.71784782]
[31.19821167 -29.09812164]
[24.12110519 -42.32365036]
[17.04400063 -55.54917526]
[9.96689510 -68.77470398]
[2.88978958 -82.00022888]
[-9.20591259 -86.47871399]
[-14.82817554 -97.63998413]
[-11.45009136 -109.25527954]
[-18.32950401 -122.58470917]
[-25.20891571 -135.91413879]
[-39.17782211 -130.41316223]
[-53.63158798 -126.35365295]
[-68.42189789 -123.77725220]
[-83.39697266 -122.71040344]
[-98.40314484 -123.16404724]
[-113.28642273 -125.13353729]
[-127.89409637 -128.59866333]
[-142.07624817 -133.52386475]
[-155.68734741 -139.85859680]
[-168.58773804 -147.53785706]
[-180.64501953 -156.48284912]
[-191.73548889 -166.60177612]
[-201.74531555 -177.79080200]
[-210.57179260 -189.93510437]
[-218.12434387 -202.91007996]
[-224.32548523 -216.58256531]
[-229.11155701 -230.81227112]
[-232.43345642 -245.45317078]
[-234.25709534 -260.35504150]
[-234.56375122 -275.36492920]
[-233.35029602 -290.32882690]
[-230.62918091 -305.09320068]
[-226.42831421 -319.50653076]
[-220.79080200 -333.42089844]
[-213.77450562 -346.69351196]
[-205.45141602 -359.18820190]
[-195.90696716 -370.77673340]
[-185.23905945 -381.34020996]
[-173.55718994 -390.77020264]
[-160.98123169 -398.96997070]
[-147.64021301 -405.85537720]
[-133.67106628 -411.35571289]
[-119.21712494 -415.41461182]
[-104.42670441 -417.99035645]
[-89.45158386 -419.05654907]
[-74.44543457 -418.60223389]
[-59.56223679 -416.63208008]
[-44.95471954 -413.16632080]
[-30.77278519 -408.24050903]
[-17.16195869 -401.90518188]
[-4.26191139 -394.22534180]
[7.79498243 -385.27981567]
[18.88499832 -375.16040039]
[28.89433479 -363.97094727]
[37.72027969 -351.82623291]
[45.27226639 -338.85092163]
[51.47279358 -325.17816162]
[56.25823975 -310.94824219]
[59.57949448 -296.30718994]
[61.40247726 -281.40527344]
[61.70848083 -266.39535522]
[60.49436951 -251.43150330]
[57.77259445 -236.66725159]
[53.57109070 -222.25411987]
[47.93297195 -208.34001160]
[40.91609573 -195.06768799]
[32.59246063 -182.57336426]
[23.04748917 -170.98524475]
[12.37912178 -160.42224121]
[0.69683677 -150.99276733]
[-11.87948704 -142.79354858]
[-5.00007486 -129.46412659]
[1.87933779 -116.13468933]
[17.13620186 -107.46318054]
[16.11531639 -89.07733917]
[23.19242287 -75.85180664]
[30.26952744 -62.62628174]
[37.34663391 -49.40075302]
[44.42374039 -36.17522812]
[47.67418671 -34.80886841]
[50.42431259 -31.80023956]
[51.90945816 -27.40164375]
[51.50654984 -22.19734383]
[57.98604584 -8.66899776]
[64.46553802 4.85934734]
[70.94503784 18.38769341]
[83.42098236 26.52403450]
[82.40399933 42.31252289]
[86.53089142 44.71622467]
[89.19161224 49.73794174]
[88.86827850 56.34149933]
[94.94211578 70.05676270]
[101.01595306 83.77203369]
[111.60806274 88.61439514]
[116.24458313 99.29821014]
[112.54673004 110.34207916]
[118.41568756 124.14625549]
[124.28465271 137.95043945]
[130.15361023 151.75460815]
[144.93215942 148.89569092]
[159.97630310 149.17198181]
[174.62850952 152.56896973]
[188.24887085 158.93580627]
[200.24307251 167.99198914]
[210.08827209 179.33973694]
[217.35598755 192.48141479]
[221.73068237 206.84144592]
[223.02343750 221.79139709]
[221.18017578 236.67761230]
[216.28388977 250.84970093]
[208.55090332 263.68896484]
[198.32128906 274.63546753]
[186.04399109 283.21240234]
[191.91294861 297.01657104]
[197.78190613 310.82077026]
[203.65086365 324.62493896]
[209.72470093 338.34020996]
[216.40489197 351.77056885]
[223.48200989 364.99609375]
[230.55911255 378.22161865]
[237.63621521 391.44714355]
[244.71331787 404.67269897]
[251.79042053 417.89822388]
[265.12344360 426.41534424]
[264.30624390 441.28750610]
[271.38336182 454.51303101]
[285.58215332 449.57943726]
[300.37796021 446.92785645]
[315.40640259 446.62362671]
[330.29739380 448.67425537]
[344.68423462 453.02917480]
[358.21261597 459.58123779]
[370.54940796 468.16900635]
[381.39080811 478.58105469]
[390.46981812 490.56094360]
[397.56289673 503.81365967]
[402.49533081 518.01287842]
[405.14569092 532.80889893]
[405.44866943 547.83734131]
[403.39682007 562.72814941]
[399.04071045 577.11462402]
[392.48754883 590.64251709]
[383.89874268 602.97857666]
[373.48580933 613.81909180]
[361.50518799 622.89715576]
[348.25186157 629.98913574]
[334.05224609 634.92041016]
[319.25601196 637.56951904]
[304.22750854 637.87127686]
[289.33688354 635.81817627]
[274.95077515 631.46087646]
[261.42346191 624.90661621]
[249.08807373 616.31677246]
[238.24839783 605.90295410]
[229.17134094 593.92156982]
[222.08045959 580.66766357]
[217.15036011 566.46765137]
[214.50245667 551.67120361]
[214.20196533 536.64270020]
[216.25625610 521.75219727]
[220.61476135 507.36645508]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 175]
[4 174]
[6 172]
[7 171]
[8 170]
[9 169]
[10 168]
[11 167]
[16 166]
[19 165]
[20 164]
[21 163]
[22 162]
[36 148]
[37 147]
[38 146]
[39 145]
[41 142]
[42 141]
[43 140]
[44 137]
[46 135]
[47 134]
[48 133]
[49 132]
[50 128]
[51 127]
[52 126]
[53 125]
[54 124]
[57 122]
[58 121]
[59 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
