%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[111.15543365 499.28787231]
[96.12309265 502.75662231]
[81.60945892 497.52612305]
[72.24578857 485.26541138]
[71.01998138 469.88684082]
[78.32319641 456.29763794]
[91.82500458 448.83407593]
[92.71781921 433.86065674]
[93.61063385 418.88723755]
[94.50344849 403.91384888]
[95.39626312 388.94042969]
[83.70590973 376.85018921]
[84.39034271 359.70822144]
[97.51405334 348.14157104]
[98.18383789 333.15655518]
[98.85362244 318.17150879]
[99.52340698 303.18646240]
[100.19319153 288.20141602]
[92.26425171 279.06585693]
[92.69962311 266.57611084]
[101.81099701 257.44671631]
[102.70381165 242.47331238]
[95.73777008 229.30805969]
[104.28275299 215.99288940]
[97.31671143 202.82765198]
[105.86169434 189.51248169]
[106.75450897 174.53907776]
[107.64732361 159.56567383]
[105.86486053 144.67195129]
[101.46385956 130.33210754]
[97.06285858 115.99225616]
[87.12122345 109.92553711]
[83.78712463 98.76645660]
[88.77113342 88.24025726]
[84.58412170 73.83647156]
[80.39710999 59.43269348]
[77.24559021 74.09788513]
[69.55953217 86.97905731]
[58.15006638 96.71681976]
[44.22125626 102.28353119]
[29.24304581 103.09172058]
[14.79611778 99.05609131]
[2.40509319 90.60253906]
[-6.62237406 78.62319183]
[-11.33359337 64.38224792]
[-11.23137951 49.38259888]
[-6.32651854 35.20718384]
[2.86336780 23.35197449]
[15.36844826 15.06807804]
[29.86903381 11.22971249]
[44.83483887 12.24195004]
[58.68649292 17.99796867]
[69.96218872 27.89031792]
[77.47205353 40.87521744]
[77.02545166 25.88186836]
[76.57884216 10.88851929]
[76.13223267 -4.10483074]
[75.68563080 -19.09818077]
[66.85011292 -28.49480247]
[66.78680420 -40.99199295]
[74.98423004 -49.88742828]
[74.76090240 -64.88576508]
[74.53757477 -79.88410187]
[66.59567261 -93.56755066]
[74.14262390 -106.40860748]
[59.78547287 -109.11580658]
[46.24007034 -114.57781219]
[34.02925491 -122.58169556]
[23.62393951 -132.81645203]
[15.42495251 -144.88511658]
[9.74759579 -158.32008362]
[6.80952406 -172.60131836]
[6.72239447 -187.17640686]
[9.48762989 -201.48197937]
[14.99643612 -214.96545410]
[23.03408241 -227.10639954]
[33.28826904 -237.43659973]
[45.36126328 -245.55813599]
[58.78532791 -251.15872192]
[73.04084015 -254.02366638]
[73.04084015 -269.02365112]
[73.04084015 -284.02365112]
[72.59423065 -299.01699829]
[71.70141602 -313.99041748]
[70.80860138 -328.96380615]
[69.91578674 -343.93722534]
[54.97572327 -345.65936279]
[40.56173325 -349.94979858]
[27.11184120 -356.67822266]
[15.03477001 -365.64010620]
[4.69753075 -376.56314087]
[-3.58573985 -389.11538696]
[-9.56332302 -402.91534424]
[-13.05356598 -417.54373169]
[-13.95040512 -432.55596924]
[-12.22658539 -447.49581909]
[-7.93449306 -461.90933228]
[-1.20455909 -475.35845947]
[7.75870132 -487.43450928]
[18.68290520 -497.77050781]
[31.23607635 -506.05236816]
[45.03673935 -512.02838135]
[59.66551208 -515.51696777]
[74.67783356 -516.41210938]
[89.61750031 -514.68658447]
[104.03051758 -510.39285278]
[117.47888947 -503.66140747]
[129.55392456 -494.69677734]
[139.88868713 -483.77139282]
[148.16911316 -471.21728516]
[154.14355469 -457.41592407]
[157.63049316 -442.78677368]
[158.52392578 -427.77435303]
[156.79670715 -412.83486938]
[152.50135803 -398.42233276]
[145.76837158 -384.97473145]
[136.80236816 -372.90072632]
[125.87581635 -362.56719971]
[113.32077026 -354.28820801]
[99.51875305 -348.31530762]
[84.88919067 -344.83004761]
[85.78200531 -329.85662842]
[86.67481995 -314.88323975]
[87.56763458 -299.90982056]
[89.57234955 -297.95040894]
[90.92169952 -295.07885742]
[91.26438141 -291.54077148]
[90.34440613 -287.70434570]
[88.04084015 -284.02365112]
[88.04084015 -269.02365112]
[88.04084015 -254.02366638]
[103.13939667 -250.89567566]
[117.26644135 -244.70280457]
[129.80700684 -235.71205139]
[140.21467590 -224.31230164]
[148.03533936 -210.99745178]
[152.92709351 -196.34503174]
[154.67506409 -180.99114990]
[153.20097351 -165.60287476]
[148.56655884 -150.84927368]
[140.97099304 -137.37229919]
[130.74240112 -125.75885773]
[118.32357788 -116.51527405]
[104.25289917 -110.04518890]
[89.14096069 -106.63193512]
[97.06689453 -94.02127075]
[89.53591156 -80.10742950]
[89.75923920 -65.10909271]
[89.98256683 -50.11075592]
[99.78110504 -35.55205917]
[90.67897797 -19.54478645]
[91.12558746 -4.55143642]
[91.57218933 10.44191360]
[92.01879883 25.43526268]
[92.46540070 40.42861176]
[94.80088806 55.24568176]
[98.98789978 69.64945984]
[103.17491150 84.05324554]
[115.57922363 95.34524536]
[111.40270996 111.59125519]
[115.80371094 125.93110657]
[120.20470428 140.27095032]
[122.62338257 125.46723938]
[128.46919250 111.65324402]
[137.41154480 99.61022186]
[148.94468689 90.01925659]
[162.41638184 83.42277527]
[177.06472778 80.19383240]
[192.06127930 80.51503754]
[206.55793762 84.36823273]
[219.73481750 91.53549957]
[230.84672546 101.61149597]
[239.26521301 114.02636719]
[244.51417542 128.07800293]
[246.29676819 142.97169495]
[244.51217651 157.86515808]
[239.26132202 171.91609192]
[230.84115601 184.32981873]
[219.72790527 194.40432739]
[206.55004883 201.56980896]
[192.05288696 205.42105103]
[177.05627441 205.74024963]
[162.40837097 202.50933838]
[148.93756104 195.91104126]
[137.40571594 186.31852722]
[128.46498108 174.27429199]
[122.62072754 160.45848083]
[121.72791290 175.43188477]
[120.83509827 190.40528870]
[127.73728180 204.64154053]
[119.25615692 216.88571167]
[126.15834045 231.12194824]
[117.67721558 243.36611938]
[116.78440094 258.33953857]
[125.40589142 274.61071777]
[115.17823029 288.87121582]
[114.50844574 303.85626221]
[113.83866119 318.84127808]
[113.16887665 333.82632446]
[112.49909210 348.81137085]
[122.67214966 357.63879395]
[125.85717773 370.52545166]
[121.10891724 382.71301270]
[110.36966705 389.83325195]
[109.47685242 404.80667114]
[108.58403778 419.78005981]
[107.69122314 434.75347900]
[106.79840851 449.72686768]
[119.31764221 458.74200439]
[124.95429230 473.10275269]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 208]
[8 207]
[9 206]
[10 205]
[11 204]
[14 200]
[15 199]
[16 198]
[17 197]
[18 196]
[21 194]
[22 193]
[24 191]
[26 189]
[27 188]
[28 187]
[29 162]
[30 161]
[31 160]
[34 158]
[35 157]
[36 156]
[54 155]
[55 154]
[56 153]
[57 152]
[58 151]
[61 149]
[62 148]
[63 147]
[65 145]
[80 131]
[81 130]
[82 129]
[83 124]
[84 123]
[85 122]
[86 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
