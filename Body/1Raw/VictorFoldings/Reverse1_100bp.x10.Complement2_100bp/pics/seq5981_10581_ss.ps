%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[40.14036179 368.13308716]
[40.43274689 383.14953613]
[38.87752533 398.08810425]
[35.49826813 412.72232056]
[30.34620667 426.83032227]
[23.49944496 440.19827271]
[15.06177807 452.62344360]
[5.16111851 463.91754150]
[-6.05244207 473.90933228]
[-18.40890884 482.44732666]
[-31.72096062 489.40209961]
[-45.78679276 494.66821289]
[-60.39316559 498.16586304]
[-75.31865692 499.84197998]
[-90.33699036 499.67117310]
[-105.22050476 497.65606689]
[-119.74356079 493.82714844]
[-133.68598938 488.24252319]
[-146.83644104 480.98681641]
[-158.99554443 472.17001343]
[-169.97897339 461.92581177]
[-179.62022400 450.40948486]
[-187.77314758 437.79562378]
[-194.31413269 424.27545166]
[-199.14401245 410.05392456]
[-202.18959045 395.34661865]
[-203.40469360 380.37655640]
[-202.77088928 365.37063599]
[-200.29777527 350.55633545]
[-196.02287292 336.15826416]
[-190.01097107 322.39465332]
[-182.35321045 309.47418213]
[-173.16567993 297.59274292]
[-162.58766174 286.93041992]
[-150.77951050 277.64886475]
[-137.92024231 269.88876343]
[-124.20480347 263.76779175]
[-109.84111023 259.37872314]
[-95.04691315 256.78811646]
[-80.04648590 256.03518677]
[-65.06723785 257.13140869]
[-50.33624649 260.06015015]
[-36.07683182 264.77700806]
[-22.50515747 271.21044922]
[-14.46398354 258.54794312]
[-16.79233170 246.67756653]
[-10.19672871 236.06240845]
[2.25029016 232.68090820]
[10.47909832 220.13951111]
[18.70790482 207.59811401]
[19.74904251 200.28115845]
[27.15375519 194.93251038]
[35.56837463 182.51501465]
[43.98299026 170.09751892]
[40.92897034 155.56449890]
[49.28569794 142.85151672]
[64.54996490 139.74671936]
[72.96458435 127.32922363]
[81.28652954 114.84943390]
[89.51533508 102.30802917]
[95.58917236 88.59276581]
[99.34547424 74.07070160]
[103.10177612 59.54864502]
[106.85807800 45.02658463]
[110.61437225 30.50452614]
[96.56200409 35.75152206]
[83.62033844 28.16777420]
[81.32949066 13.34373951]
[91.37818146 2.20714474]
[106.35890198 2.96747327]
[115.22810364 15.06261635]
[120.05410004 0.86016071]
[124.88009644 -13.34229469]
[124.67807770 -22.47449112]
[129.88511658 -27.71934891]
[134.92202759 -41.84837723]
[139.95895386 -55.97740936]
[139.02508545 -60.21791077]
[139.44679260 -64.14050293]
[140.95764160 -67.35807037]
[143.19290161 -69.60978699]
[145.73916626 -70.78224945]
[151.60812378 -84.58642578]
[157.47708130 -98.39060211]
[163.34603882 -112.19477844]
[160.68891907 -130.41622925]
[175.11131287 -140.41430664]
[180.77410889 -154.30433655]
[186.43688965 -168.19436646]
[192.09967041 -182.08439636]
[197.76246643 -195.97441101]
[195.80754089 -211.67437744]
[207.77708435 -220.53887939]
[213.43986511 -234.42890930]
[219.10264587 -248.31893921]
[206.05096436 -255.75590515]
[194.08169556 -264.83288574]
[183.39964294 -275.39453125]
[174.18759155 -287.26016235]
[166.60319519 -300.22674561]
[160.77619934 -314.07235718]
[156.80633545 -328.56011963]
[154.76153564 -343.44210815]
[154.67675781 -358.46368408]
[156.55349731 -373.36782837]
[160.35960388 -387.89947510]
[166.02996826 -401.80996704]
[173.46754456 -414.86129761]
[182.54508972 -426.83013916]
[193.10726929 -437.51168823]
[204.97334290 -446.72317505]
[217.94026184 -454.30694580]
[231.78616333 -460.13327026]
[246.27412415 -464.10244751]
[261.15621948 -466.14654541]
[276.17779541 -466.23059082]
[291.08181763 -464.35317993]
[305.61328125 -460.54635620]
[319.52352905 -454.87533569]
[332.57449341 -447.43713379]
[344.54290771 -438.35900879]
[355.22393799 -427.79632568]
[364.43487549 -415.92984009]
[372.01803589 -402.96252441]
[377.84368896 -389.11636353]
[381.81219482 -374.62823486]
[383.85559082 -359.74603271]
[383.93890381 -344.72445679]
[382.06076050 -329.82049561]
[378.25326538 -315.28921509]
[372.58160400 -301.37927246]
[365.14276123 -288.32864380]
[356.06408691 -276.36065674]
[345.50088501 -265.68011475]
[333.63394165 -256.46975708]
[320.66629028 -248.88722229]
[306.81982422 -243.06221008]
[292.33151245 -239.09440613]
[277.44921875 -237.05172729]
[262.42764282 -236.96910095]
[247.52377319 -238.84796143]
[232.99267578 -242.65614319]
[227.32989502 -228.76611328]
[221.66709900 -214.87609863]
[224.02706909 -200.16963196]
[211.65248108 -190.31163025]
[205.98970032 -176.42160034]
[200.32691956 -162.53157043]
[194.66412354 -148.64155579]
[189.00134277 -134.75152588]
[193.40222168 -123.48392487]
[188.79814148 -111.86557007]
[177.15022278 -106.32582092]
[171.28126526 -92.52164459]
[165.41229248 -78.71746826]
[159.54333496 -64.91329193]
[154.08798218 -50.94049072]
[149.05105591 -36.81146240]
[144.01414490 -22.68243217]
[139.08255005 -8.51629734]
[134.25656128 5.68615818]
[129.43055725 19.88861465]
[125.13643646 34.26082611]
[121.38013458 48.78288651]
[117.62383270 63.30494690]
[113.86753082 77.82700348]
[110.11122894 92.34906769]
[119.97517395 81.04850769]
[132.39810181 72.64191437]
[146.55606079 67.68686676]
[161.50997925 66.51201630]
[176.26803589 69.19528198]
[189.85136414 75.55869293]
[201.35905457 85.18019104]
[210.02781677 97.42161560]
[215.28269958 111.47103119]
[216.77517700 126.39659882]
[214.40623474 141.20835876]
[208.33299255 154.92388916]
[198.95829773 166.63349915]
[186.90391541 175.56053162]
[172.96937561 181.11288452]
[158.07890320 182.92228699]
[143.22013855 180.86874390]
[129.37860107 175.08843994]
[117.47235870 165.96476746]
[108.29110718 154.10287476]
[102.44379425 140.28952026]
[100.31826782 125.44087982]
[102.05673981 110.53683472]
[93.82793427 123.07823944]
[91.73662567 131.97004700]
[85.38208008 135.74383545]
[76.96746063 148.16133118]
[79.74093628 163.48927307]
[71.03042603 175.96250916]
[56.40048599 178.51213074]
[47.98587036 190.92962646]
[39.57125092 203.34712219]
[31.24930573 215.82691956]
[23.02049828 228.36831665]
[14.79169083 240.90971375]
[14.16819954 259.31332397]
[-1.80145884 266.58911133]
[-9.84263229 279.25161743]
[1.75138283 288.79931641]
[12.08418751 299.69943237]
[20.99913788 311.78677368]
[28.36108971 324.87802124]
[34.05843353 338.77478027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 205]
[45 204]
[48 202]
[49 201]
[50 200]
[52 199]
[53 198]
[54 197]
[57 194]
[58 193]
[59 191]
[60 190]
[61 167]
[62 166]
[63 165]
[64 164]
[65 163]
[71 162]
[72 161]
[73 160]
[75 159]
[76 158]
[77 157]
[82 156]
[83 155]
[84 154]
[85 153]
[87 150]
[88 149]
[89 148]
[90 147]
[91 146]
[93 144]
[94 143]
[95 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
