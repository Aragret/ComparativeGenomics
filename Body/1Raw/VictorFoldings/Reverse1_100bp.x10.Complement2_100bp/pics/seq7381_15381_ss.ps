%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGAGGGUAAGGCUAUUUUAGUGGAAGGUGGGAAUGAUGUGUUAGUUUCUGCGGGAGCCGAAUGAAGAGAAGGAAGAGAGGAAUUACUGUAAUUGUGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[58.19145966 895.80566406]
[43.18892670 896.05487061]
[28.19871712 895.39776611]
[13.27553272 893.83673096]
[-1.52617347 891.37756348]
[-16.15239143 888.02911377]
[-30.54975128 883.80371094]
[-44.66571808 878.71673584]
[-58.44878769 872.78668213]
[-71.84866333 866.03527832]
[-84.81644440 858.48712158]
[-97.30482483 850.16973877]
[-109.26822662 841.11352539]
[-120.66299438 831.35150146]
[-131.44755554 820.91925049]
[-141.58256531 809.85491943]
[-151.03102112 798.19879150]
[-159.75846863 785.99346924]
[-167.73304749 773.28350830]
[-174.92567444 760.11517334]
[-181.31007385 746.53662109]
[-186.86299133 732.59735107]
[-191.56411743 718.34820557]
[-195.39634705 703.84124756]
[-198.34565735 689.12933350]
[-200.40130615 674.26623535]
[-201.55580139 659.30609131]
[-201.80490112 644.30358887]
[-201.14772034 629.31335449]
[-199.58665466 614.39019775]
[-197.12738037 599.58850098]
[-193.77890015 584.96228027]
[-189.55342102 570.56494141]
[-184.46633911 556.44903564]
[-178.53625488 542.66595459]
[-171.78479004 529.26611328]
[-164.23655701 516.29840088]
[-155.91914368 503.81002808]
[-146.86285400 491.84667969]
[-137.10076904 480.45193481]
[-126.66849518 469.66741943]
[-115.60410309 459.53247070]
[-103.94795990 450.08407593]
[-91.74259186 441.35668945]
[-79.03255463 433.38217163]
[-65.86421204 426.18960571]
[-52.28561401 419.80526733]
[-38.34631348 414.25241089]
[-24.09716988 409.55133057]
[-9.59018040 405.71917725]
[5.12172222 402.76995850]
[19.98485565 400.71435547]
[34.94498444 399.55993652]
[49.94752121 399.31091309]
[64.93772125 399.96817017]
[66.49824524 385.04956055]
[68.05876923 370.13095093]
[60.05968857 354.51104736]
[70.99948120 339.69879150]
[72.33771515 324.75860596]
[73.67594910 309.81842041]
[75.01418304 294.87823486]
[76.35241699 279.93804932]
[77.69065094 264.99786377]
[79.02888489 250.05769348]
[72.45790863 236.69088745]
[81.39554596 223.63603210]
[82.73377991 208.69584656]
[84.07201385 193.75566101]
[85.41024780 178.81547546]
[86.74848175 163.87528992]
[80.17750549 150.50848389]
[89.11515045 137.45362854]
[90.45338440 122.51344299]
[91.79161835 107.57325745]
[93.01859283 92.62351990]
[94.13423920 77.66506958]
[95.24988556 62.70661545]
[96.36553955 47.74816132]
[97.48118591 32.78971100]
[98.59683228 17.83125687]
[88.56050110 5.91866827]
[89.90501404 -9.23543835]
[101.32369995 -18.73013496]
[102.43934631 -33.68858719]
[103.55499268 -48.64704132]
[104.00160217 -63.64039230]
[103.77827454 -78.63873291]
[103.55494690 -93.63706970]
[95.61303711 -107.32051086]
[103.15998840 -120.16156769]
[88.40395355 -123.17376709]
[74.64061737 -129.28807068]
[62.51372147 -138.21850586]
[52.59046936 -149.54736328]
[45.33498001 -162.74478149]
[41.08661270 -177.19349670]
[40.04406738 -192.21772766]
[42.25610733 -207.11473083]
[47.61927414 -221.18777466]
[55.88271713 -233.77862549]
[66.65994263 -244.29840088]
[79.44687653 -252.25505066]
[93.64546204 -257.27642822]
[108.59159088 -259.12768555]
[123.58621979 -257.72225952]
[137.92800903 -253.12583923]
[150.94618225 -245.55343628]
[162.03184509 -235.35920715]
[170.66650391 -223.01997375]
[176.44628906 -209.11283875]
[179.10089111 -194.28829956]
[178.50613403 -179.23970032]
[174.68983459 -164.67089844]
[167.83050537 -151.26330566]
[158.24896240 -139.64401245]
[146.39332581 -130.35647583]
[132.81814575 -123.83510590]
[118.15832520 -120.38489532]
[126.08425903 -107.77423096]
[118.55328369 -93.86039734]
[118.77661133 -78.86206055]
[118.99993896 -63.86371994]
[130.19737244 -73.84457397]
[145.17996216 -73.12203217]
[155.36499023 -62.10999298]
[154.91802979 -47.11665344]
[144.09510803 -36.73088074]
[129.09608459 -36.90211868]
[118.51345062 -47.53139496]
[117.39779663 -32.57294083]
[116.28215027 -17.61448669]
[126.16604614 -6.53097582]
[125.24771118 8.65491581]
[113.55529022 18.94690514]
[112.43963623 33.90535736]
[111.32398987 48.86381149]
[110.20834351 63.82226562]
[109.09268951 78.78071594]
[107.97704315 93.73917389]
[110.56565094 101.37275696]
[106.73179626 108.91149139]
[105.39356232 123.85167694]
[104.05532837 138.79185486]
[110.53058624 153.22729492]
[101.68866730 165.21351624]
[100.35043335 180.15370178]
[99.01219940 195.09388733]
[97.67396545 210.03407288]
[96.33573151 224.97425842]
[102.81098938 239.40969849]
[93.96907043 251.39591980]
[92.63083649 266.33612061]
[91.29260254 281.27630615]
[89.95436859 296.21649170]
[88.61613464 311.15667725]
[87.27790070 326.09686279]
[85.93966675 341.03704834]
[93.59596252 351.41702271]
[92.17377472 363.83316040]
[82.97737885 371.69146729]
[81.41685486 386.61007690]
[79.85633087 401.52868652]
[94.65805817 403.98773193]
[109.28430939 407.33602905]
[123.68170929 411.56130981]
[137.79771423 416.64819336]
[151.58084106 422.57809448]
[164.98077393 429.32937622]
[177.94863892 436.87741089]
[190.43708801 445.19464111]
[202.40057373 454.25076294]
[213.79544067 464.01269531]
[224.58009338 474.44482422]
[234.71520996 485.50906372]
[244.16377258 497.16510010]
[252.89132690 509.37033081]
[260.86602783 522.08026123]
[268.05877686 535.24853516]
[274.44329834 548.82702637]
[279.99633789 562.76623535]
[284.69760132 577.01531982]
[288.52996826 591.52227783]
[291.47943115 606.23413086]
[293.53521729 621.09722900]
[294.68981934 636.05731201]
[294.93908691 651.05987549]
[294.28204346 666.05004883]
[292.72109985 680.97326660]
[290.26196289 695.77496338]
[286.91363525 710.40124512]
[282.68826294 724.79858398]
[277.60134888 738.91461182]
[271.67138672 752.69769287]
[264.92001343 766.09759521]
[257.37191772 779.06542969]
[249.05461121 791.55383301]
[239.99844360 803.51727295]
[230.23646545 814.91210938]
[219.80429077 825.69671631]
[208.73999023 835.83172607]
[197.08393860 845.28027344]
[184.87864685 854.00775146]
[172.16868591 861.98242188]
[159.00041199 869.17510986]
[145.42187500 875.55957031]
[131.48262024 881.11254883]
[117.23352051 885.81372070]
[102.72657013 889.64599609]
[88.01469421 892.59539795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 163]
[56 162]
[57 161]
[59 158]
[60 157]
[61 156]
[62 155]
[63 154]
[64 153]
[65 152]
[67 150]
[68 149]
[69 148]
[70 147]
[71 146]
[73 144]
[74 143]
[75 142]
[76 140]
[77 139]
[78 138]
[79 137]
[80 136]
[81 135]
[84 132]
[85 131]
[86 130]
[87 123]
[88 122]
[89 121]
[91 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
