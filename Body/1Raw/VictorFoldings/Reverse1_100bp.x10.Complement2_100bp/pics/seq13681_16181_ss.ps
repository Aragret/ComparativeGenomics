%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAACAACAAACCUUCCCCCUACGCCCCCUUUACAACAAUCAUUACUCUUUAGGACGCUUAUCCGAAGGCCGACGGUCCGCAAAUUACCCCAAAUCAUCCCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[137.29188538 739.58898926]
[126.15891266 729.40472412]
[118.04199982 716.68554688]
[113.49455261 702.29864502]
[112.82663727 687.22491455]
[116.08378601 672.49218750]
[123.04392242 659.10491943]
[133.23249817 647.97589111]
[145.95483398 639.86389160]
[160.34349060 635.32202148]
[159.67370605 620.33697510]
[159.00392151 605.35192871]
[158.33413696 590.36688232]
[157.44132996 575.39349365]
[156.32568359 560.43505859]
[155.21002197 545.47656250]
[154.09437561 530.51812744]
[152.97872925 515.55969238]
[142.13465881 508.60009766]
[137.20547485 496.48458862]
[140.19828796 483.55194092]
[150.23878479 474.57403564]
[149.34597778 459.60061646]
[136.71775818 451.74783325]
[131.06823730 437.79983521]
[134.75822449 423.02697754]
[146.57598877 413.14535522]
[145.68318176 398.17193604]
[144.79035950 383.19854736]
[143.89755249 368.22512817]
[142.00425720 353.34509277]
[139.11898804 338.62521362]
[136.23370361 323.90530396]
[133.34843445 309.18542480]
[130.35366821 294.48742676]
[127.24954987 279.81210327]
[117.04594421 268.96151733]
[121.75994873 253.85890198]
[118.65583801 239.18359375]
[115.55172729 224.50828552]
[112.44761658 209.83299255]
[109.00449371 206.52331543]
[107.60393524 201.01554871]
[109.47642517 194.67478943]
[106.81063080 179.91357422]
[104.14483643 165.15234375]
[101.47904205 150.39112854]
[98.81324768 135.62991333]
[83.41900635 131.55899048]
[71.33281708 121.19178772]
[64.96596527 106.59664154]
[65.58869934 90.68540955]
[73.07677460 76.63252258]
[85.93625641 67.24163818]
[83.05097961 52.52174759]
[80.16571045 37.80185318]
[77.17093658 23.10385132]
[62.40447235 19.40074921]
[50.75761032 9.69314480]
[44.50614166 -4.05237484]
[44.84124756 -19.08729172]
[51.64292145 -32.43070602]
[63.51435852 -41.46034622]
[60.41024780 -56.13565063]
[57.30613708 -70.81095123]
[54.20203018 -85.48625183]
[50.71179199 -89.36766052]
[49.20961761 -93.76046753]
[49.55738449 -97.82176208]
[51.30244827 -100.88559723]
[48.85672379 -115.68486786]
[36.84554672 -129.64242554]
[43.66071701 -145.81401062]
[40.99492264 -160.57522583]
[28.29522324 -169.59495544]
[25.80200577 -184.60289001]
[34.47919464 -196.65454102]
[31.81340027 -211.41575623]
[21.74670601 -223.62117004]
[27.09895134 -237.52090454]
[24.17791748 -240.73362732]
[22.59078026 -244.34547424]
[22.29922295 -247.88813782]
[23.11676216 -250.95379639]
[24.74133301 -253.23828125]
[15.41896725 -266.02124023]
[21.58905029 -279.57775879]
[19.80658340 -294.47149658]
[18.02411842 -309.36520386]
[16.24165154 -324.25891113]
[14.45918560 -339.15264893]
[12.67671967 -354.04635620]
[-2.16791868 -356.96044922]
[-15.38452148 -364.32092285]
[-25.67826080 -375.40667725]
[-32.04066086 -389.13165283]
[-33.84839630 -404.15121460]
[-30.92436409 -418.99389648]
[-23.55503464 -432.20556641]
[-12.46237755 -442.49188232]
[1.26686227 -448.84506226]
[16.28763390 -450.64276123]
[31.12835312 -447.70877075]
[44.33507919 -440.33059692]
[54.61395264 -429.23104858]
[60.95795441 -415.49755859]
[62.74555969 -400.47558594]
[59.80163956 -385.63684082]
[52.41461182 -372.43505859]
[41.30817795 -362.16360474]
[27.57043648 -355.82882690]
[29.35290337 -340.93508911]
[31.13536835 -326.04138184]
[32.91783524 -311.14767456]
[34.70030212 -296.25393677]
[36.48276520 -281.36022949]
[45.67763901 -269.64257812]
[39.63505173 -255.02075195]
[41.86016846 -240.18670654]
[51.73618698 -229.03710938]
[46.57461929 -214.08154297]
[49.24041367 -199.32032776]
[61.58491516 -191.06509399]
[64.49868774 -176.13310242]
[55.75614166 -163.24102783]
[58.42193604 -148.47979736]
[68.17733002 -141.32727051]
[70.51905823 -129.05126953]
[63.65599442 -118.13059998]
[66.10172272 -103.33132935]
[68.87733459 -88.59036255]
[71.98143768 -73.91506195]
[75.08554840 -59.23975754]
[78.18965912 -44.56445694]
[92.70063019 -41.11520386]
[104.32279205 -31.66878700]
[110.71717072 -18.05728722]
[110.56699371 -2.95769620]
[103.84850311 10.63453674]
[91.84623718 19.99974060]
[96.30587769 25.89324379]
[94.88559723 34.91658401]
[97.77087402 49.63647461]
[100.65614319 64.35636139]
[114.17010498 67.28750610]
[125.55204010 75.14054108]
[133.08943176 86.73392487]
[135.64820862 100.32330322]
[132.84338379 113.86404419]
[125.09695435 125.31880951]
[113.57446289 132.96412659]
[116.24025726 147.72534180]
[118.90605164 162.48655701]
[121.57184601 177.24777222]
[124.23764801 192.00898743]
[127.12291718 206.72888184]
[130.22703552 221.40417480]
[133.33113098 236.07948303]
[136.43524170 250.75479126]
[146.86088562 262.65505981]
[141.92485046 276.70800781]
[145.02896118 291.38330078]
[149.86653137 299.13159180]
[148.06832886 306.30014038]
[150.95359802 321.02005005]
[153.83886719 335.73992920]
[156.72415161 350.45980835]
[163.60523987 337.13125610]
[176.54643250 329.54672241]
[191.53778076 330.05633545]
[203.93402100 338.50222778]
[209.89407349 352.26733398]
[207.57113647 367.08636475]
[197.68498230 378.36752319]
[183.29896545 382.61517334]
[168.87075806 378.51315308]
[158.87095642 367.33230591]
[159.76376343 382.30572510]
[160.65658569 397.27911377]
[161.54940796 412.25253296]
[174.45767212 420.65982056]
[179.87699890 434.88952637]
[175.92495728 449.41003418]
[164.31938171 458.70782471]
[165.21218872 473.68121338]
[178.50666809 485.05120850]
[179.44624329 502.18106079]
[167.93717957 514.44403076]
[169.05282593 529.40246582]
[170.16848755 544.36090088]
[171.28413391 559.31939697]
[172.39978027 574.27783203]
[175.80046082 579.94763184]
[175.82379150 585.63067627]
[173.31918335 589.69708252]
[173.98896790 604.68212891]
[174.65875244 619.66717529]
[175.32853699 634.65222168]
[190.06503296 637.89233398]
[203.46034241 644.83691406]
[214.60118103 655.01263428]
[222.72792053 667.72552490]
[227.28646851 682.10894775]
[227.96601868 697.18212891]
[224.72024536 711.91735840]
[217.77044678 725.30999756]
[207.59046936 736.44689941]
[194.87440491 744.56872559]
[180.48925781 749.12170410]
[165.41581726 749.79547119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 198]
[11 197]
[12 196]
[13 195]
[14 192]
[15 191]
[16 190]
[17 189]
[18 188]
[22 185]
[23 184]
[27 180]
[28 179]
[29 178]
[30 177]
[31 167]
[32 166]
[33 165]
[34 164]
[35 162]
[36 161]
[38 159]
[39 158]
[40 157]
[41 156]
[44 155]
[45 154]
[46 153]
[47 152]
[48 151]
[54 144]
[55 143]
[56 142]
[57 140]
[63 134]
[64 133]
[65 132]
[66 131]
[70 130]
[71 129]
[73 126]
[74 125]
[77 122]
[78 121]
[80 119]
[85 118]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
