%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[124.34546661 807.10504150]
[110.15605927 802.21960449]
[96.36619568 796.29949951]
[83.05120850 789.37719727]
[70.28381348 781.49047852]
[58.13374329 772.68237305]
[46.66736221 763.00097656]
[35.94729233 752.49920654]
[26.03208160 741.23437500]
[16.97588921 729.26806641]
[8.82817364 716.66558838]
[1.63343751 703.49584961]
[-4.56902456 689.83068848]
[-9.74533653 675.74475098]
[-13.86722565 661.31500244]
[-16.91218185 646.62030029]
[-18.86357117 631.74078369]
[-19.71073914 616.75781250]
[-19.44905663 601.75317383]
[-18.07995224 586.80883789]
[-15.61090565 572.00646973]
[-12.05540180 557.42681885]
[-7.43285799 543.14959717]
[-1.76852298 529.25274658]
[4.90666676 515.81219482]
[12.55625343 502.90127563]
[21.13845825 490.59060669]
[30.60640526 478.94735718]
[40.90838242 468.03512573]
[51.98812866 457.91354370]
[63.78512573 448.63787842]
[76.23493958 440.25878906]
[89.26958466 432.82202148]
[102.81784821 426.36819458]
[116.80575562 420.93261719]
[131.15689087 416.54489136]
[145.79289246 413.22903442]
[143.56776428 398.39498901]
[134.02809143 386.95629883]
[139.63265991 372.16104126]
[137.40754700 357.32699585]
[135.18241882 342.49295044]
[132.95730591 327.65890503]
[120.86406708 319.03979492]
[118.39617157 304.02767944]
[127.51868439 291.40161133]
[124.96285248 276.62094116]
[122.07758331 261.90106201]
[119.19230652 247.18116760]
[104.73430634 243.51625061]
[93.25407410 233.89784241]
[87.06305695 220.19265747]
[87.43802643 205.09696960]
[94.35814667 191.60627747]
[106.49851227 182.42080688]
[103.61323547 167.70091248]
[100.72796631 152.98101807]
[98.02146149 150.72111511]
[96.27510071 147.03800964]
[96.14585876 142.39724731]
[98.05798340 137.54020691]
[95.83286285 122.70616150]
[93.60774994 107.87212372]
[89.39271545 101.00145721]
[91.46163940 92.80081940]
[89.45762634 77.93529510]
[87.45361328 63.06976318]
[77.94195557 50.42701721]
[83.90952301 36.78013229]
[81.35369110 21.99947929]
[78.24958038 7.32417679]
[75.14546967 -7.35112572]
[64.71983337 -19.25140953]
[69.65586090 -33.30434418]
[66.55175018 -47.97964478]
[63.44763947 -62.65494919]
[60.34352875 -77.33025360]
[57.32813644 -80.45456696]
[55.63416290 -84.01757050]
[55.23725891 -87.54997253]
[55.96315765 -90.63861084]
[57.51899338 -92.97045898]
[55.29387665 -107.80450439]
[53.06875992 -122.63854980]
[50.84364319 -137.47259521]
[47.03067398 -142.87377930]
[46.58473587 -148.53930664]
[48.77995300 -152.78077698]
[46.99748993 -167.67448425]
[45.21502304 -182.56820679]
[43.43255615 -197.46192932]
[28.53362274 -199.95158386]
[14.94021893 -206.53915405]
[3.75430441 -216.69061279]
[-4.11733007 -229.58300781]
[-8.03656578 -244.17123413]
[-7.68568850 -259.27267456]
[-3.09314179 -273.66314697]
[5.36877680 -286.17602539]
[17.01409721 -295.79699707]
[30.89878654 -301.74612427]
[45.89727402 -303.54113770]
[60.79370117 -301.03649902]
[74.38047791 -294.43527222]
[85.55619049 -284.27261353]
[93.41487122 -271.37228394]
[97.31945038 -256.78015137]
[96.95339966 -241.67906189]
[92.34639740 -227.29322815]
[83.87191010 -214.78883362]
[72.21693420 -205.17956543]
[58.32627487 -199.24438477]
[60.10874176 -184.35067749]
[61.89120483 -169.45695496]
[63.67367172 -154.56323242]
[65.67768860 -139.69770813]
[67.90280151 -124.86366272]
[70.12792206 -110.02962494]
[72.35303497 -95.19557953]
[75.01882935 -80.43436432]
[78.12294006 -65.75905609]
[81.22705078 -51.08375549]
[84.33116150 -36.40845490]
[94.53476715 -25.55784416]
[89.82077026 -10.45523548]
[92.92488098 4.22006655]
[96.02899170 18.89536858]
[106.27416229 7.93925762]
[121.23899078 8.96590614]
[129.89195251 21.21850777]
[125.85440826 35.66489792]
[112.10269165 41.65573883]
[98.77504730 34.77611923]
[108.14336395 46.35558319]
[102.31913757 61.06575012]
[104.32315063 75.93128204]
[106.32716370 90.79680634]
[108.44178772 105.64700317]
[110.66690826 120.48104858]
[112.89202881 135.31509399]
[115.44786072 150.09574890]
[118.33312988 164.81564331]
[121.21839905 179.53552246]
[135.92810059 183.45806885]
[147.42913818 193.33799744]
[153.47526550 207.17507935]
[152.91633606 222.20333862]
[145.91676331 235.44400024]
[133.91220093 244.29589844]
[136.79747009 259.01577759]
[139.68273926 273.73568726]
[143.11480713 277.66860962]
[144.55140686 282.08331299]
[144.14321899 286.13897705]
[142.35272217 289.17648315]
[154.77824402 298.57031250]
[156.82351685 313.64584351]
[147.79135132 325.43380737]
[150.01646423 340.26785278]
[152.24159241 355.10189819]
[154.46670532 369.93594360]
[164.16552734 382.43566895]
[158.40180969 396.16989136]
[160.62693787 411.00393677]
[175.59165955 409.87963867]
[190.59855652 409.86364746]
[205.56565857 410.95596313]
[220.41120911 413.15066528]
[235.05413818 416.43579102]
[249.41445923 420.79333496]
[263.41375732 426.19955444]
[276.97555542 432.62487793]
[290.02578735 440.03424072]
[302.49316406 448.38717651]
[314.30963135 457.63806152]
[325.41061401 467.73635864]
[335.73547363 478.62689209]
[345.22784424 490.25024414]
[353.83590698 502.54287720]
[361.51257324 515.43768311]
[368.21600342 528.86419678]
[373.90951538 542.74908447]
[378.56201172 557.01660156]
[382.14813232 571.58874512]
[384.64828491 586.38592529]
[386.04876709 601.32733154]
[386.34194946 616.33135986]
[385.52627563 631.31610107]
[383.60614014 646.19964600]
[380.59204102 660.90075684]
[376.50048828 675.33911133]
[371.35375977 689.43585205]
[365.18002319 703.11401367]
[358.01296997 716.29888916]
[349.89172363 728.91845703]
[340.86068726 740.90374756]
[330.96917725 752.18933105]
[320.27117920 762.71362305]
[308.82516479 772.41906738]
[296.69360352 781.25268555]
[283.94281006 789.16625977]
[270.64239502 796.11651611]
[256.86499023 802.06549072]
[242.68588257 806.98077393]
[228.18246460 810.83544922]
[213.43399048 813.60845947]
[198.52099609 815.28466797]
[183.52493286 815.85491943]
[168.52769470 815.31616211]
[153.61120605 813.67126465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 164]
[38 163]
[40 161]
[41 160]
[42 159]
[43 158]
[46 155]
[47 151]
[48 150]
[49 149]
[55 143]
[56 142]
[57 141]
[61 140]
[62 139]
[63 138]
[65 137]
[66 136]
[67 135]
[69 133]
[70 127]
[71 126]
[72 125]
[74 123]
[75 122]
[76 121]
[77 120]
[82 119]
[83 118]
[84 117]
[85 116]
[88 115]
[89 114]
[90 113]
[91 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
