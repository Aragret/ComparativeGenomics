%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUUAGUUGUGGGAGGAUCGGAAUGAUGAUUAUUAAUAAUGUAAAACUGAUGGUGUUGAGUUGCCGAUGUAUCUUUUUAGGUGGGGAAUGCUCACGCCGAAG\
) } def
/len { sequence length } bind def

/coor [
[19.28179932 654.15637207]
[12.65049839 667.70953369]
[2.73660350 679.08392334]
[-9.78393745 687.50408936]
[-24.05745506 692.39581299]
[-39.11075592 693.42565918]
[-53.91748047 690.52337646]
[-67.46808624 683.88684082]
[-78.83866119 673.96850586]
[-87.25394440 661.44476318]
[-92.14017487 647.16931152]
[-93.16419220 632.11566162]
[-90.25618744 617.31005859]
[-83.61441803 603.76202393]
[-73.69174194 592.39526367]
[-61.16470337 583.98480225]
[-46.88741302 579.10406494]
[-31.83332253 578.08587646]
[-28.94804955 563.36596680]
[-30.74624634 556.19744873]
[-25.90868568 548.44915771]
[-22.80457687 533.77386475]
[-33.54250717 525.33502197]
[-39.62612534 513.03387451]
[-39.81708908 499.24572754]
[-34.02113724 486.66061401]
[-23.31757164 477.75836182]
[-9.75876331 474.32012939]
[-6.43650389 459.69265747]
[-3.11424422 445.06518555]
[0.20801534 430.43774414]
[3.53027487 415.81027222]
[6.85253429 401.18283081]
[10.17479420 386.55535889]
[13.49705315 371.92788696]
[12.11896324 369.48678589]
[11.62479496 366.35272217]
[12.28332996 362.85961914]
[14.23761463 359.43246460]
[17.47703171 356.54107666]
[21.66404343 342.13729858]
[25.85105515 327.73352051]
[14.68409061 317.84594727]
[8.89369678 304.03359985]
[9.67776203 289.01541138]
[16.93426132 275.77291870]
[29.27088165 266.95843506]
[44.27186966 264.36389160]
[48.45888138 249.96009827]
[52.64589310 235.55632019]
[56.83290100 221.15254211]
[61.01991272 206.74874878]
[65.20692444 192.34497070]
[57.48218918 182.03196716]
[57.10214615 168.95765686]
[64.42950439 157.88877869]
[76.97606659 152.98995972]
[81.37706757 138.65011597]
[85.56407928 124.24633026]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[99.97139740 71.78157043]
[94.90370178 54.07846832]
[107.86104584 42.24317551]
[111.61734772 27.72111702]
[115.37364197 13.19905663]
[119.12994385 -1.32300222]
[122.66961670 -15.89937782]
[123.89659119 -30.84911156]
[123.00377655 -45.82251740]
[122.11096191 -60.79592133]
[121.21814728 -75.76932526]
[120.32533264 -90.74273682]
[119.43251801 -105.71614075]
[108.10417175 -111.00164032]
[100.14418793 -120.54664612]
[97.01601410 -132.50047302]
[99.25392151 -144.57908630]
[106.37287903 -154.50144958]
[116.97203827 -160.42033386]
[116.52542877 -175.41368103]
[116.07882690 -190.40704346]
[115.63221741 -205.40039062]
[112.48809814 -211.21640015]
[112.71855927 -216.89477539]
[115.40223694 -220.84533691]
[115.40223694 -235.84533691]
[115.40223694 -250.84533691]
[115.40223694 -265.84533691]
[115.40223694 -280.84533691]
[115.40223694 -295.84533691]
[115.40223694 -310.84533691]
[115.40223694 -325.84533691]
[112.43267822 -331.75238037]
[112.83209991 -337.42138672]
[115.63221741 -341.29028320]
[116.07882690 -356.28363037]
[116.52542877 -371.27697754]
[102.64670563 -377.47775269]
[92.20100403 -388.52108765]
[86.78121948 -402.72302246]
[87.21382141 -417.91778564]
[93.43283844 -431.78833008]
[104.48992920 -442.21951294]
[118.69895935 -447.62060547]
[133.89315796 -447.16802979]
[147.75550842 -440.93075562]
[158.17211914 -429.85995483]
[163.55453491 -415.64382935]
[163.08195496 -400.45025635]
[156.82646179 -386.59609985]
[145.74197388 -376.19406128]
[131.51878357 -370.83035278]
[131.07217407 -355.83700562]
[130.62556458 -340.84365845]
[130.40223694 -325.84533691]
[130.40223694 -310.84533691]
[130.40223694 -295.84533691]
[130.40223694 -280.84533691]
[130.40223694 -265.84533691]
[130.40223694 -250.84533691]
[130.40223694 -235.84533691]
[130.40223694 -220.84533691]
[130.62556458 -205.84700012]
[131.07217407 -190.85363770]
[131.51878357 -175.86029053]
[131.96537781 -160.86694336]
[147.00210571 -151.60580444]
[153.52684021 -135.02633667]
[148.75141907 -117.69789124]
[134.40591431 -106.60895538]
[135.29873657 -91.63555145]
[136.19155884 -76.66214752]
[137.08436584 -61.68873978]
[137.97718811 -46.71533203]
[138.86999512 -31.74192619]
[144.97476196 -45.44345093]
[154.80163574 -56.77627182]
[167.50045776 -64.75997925]
[181.97268677 -68.70391083]
[196.96632385 -68.26687622]
[211.18426514 -63.48667526]
[223.39649963 -54.77684784]
[232.54658508 -42.89088440]
[237.84291077 -28.85703850]
[238.82731628 -13.88937378]
[235.41462708 0.71725279]
[227.90007019 13.69922352]
[216.93374634 23.93346786]
[203.46435547 30.53462029]
[188.65710449 32.93161774]
[173.79299927 30.91709328]
[160.15791321 24.66532516]
[148.93144226 14.71715164]
[141.08476257 1.93319190]
[137.29707336 -12.57711792]
[139.03912354 -8.13028622]
[138.00619507 -2.54189825]
[133.65200806 2.43329859]
[129.89570618 16.95535851]
[126.13940430 31.47741699]
[122.38310242 45.99947739]
[128.24989319 56.57810211]
[125.23930359 68.70741272]
[114.43592072 75.75366974]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[100.02860260 128.21842957]
[101.32792664 134.70095825]
[99.44158173 140.06181335]
[95.71691132 143.05111694]
[91.31591797 157.39096069]
[99.79358673 172.69287109]
[94.68210602 189.06930542]
[79.61071014 196.53198242]
[75.42369843 210.93576050]
[71.23668671 225.33955383]
[67.04967499 239.74333191]
[62.86266327 254.14710999]
[58.67565155 268.55090332]
[69.94812012 278.78283691]
[75.63706207 292.83712769]
[74.66376495 307.90606689]
[67.27471924 321.00427246]
[54.98215485 329.56011963]
[40.25483704 331.92053223]
[36.06782532 346.32431030]
[31.88081360 360.72808838]
[28.12451363 375.25015259]
[24.80225372 389.87762451]
[21.47999382 404.50506592]
[18.15773582 419.13253784]
[14.83547592 433.76000977]
[11.51321602 448.38745117]
[8.19095612 463.01492310]
[4.86869717 477.64236450]
[17.11648369 488.75018311]
[22.06298637 504.42907715]
[18.44842720 520.37121582]
[7.35170698 532.24633789]
[-8.12927341 536.87792969]
[-11.23338413 551.55328369]
[-14.22815800 566.25128174]
[-17.11343002 580.97113037]
[-3.55770755 587.59722900]
[7.82052565 597.50671387]
[16.24548149 610.02398682]
[21.14273262 624.29565430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 206]
[19 205]
[21 204]
[22 203]
[28 198]
[29 197]
[30 196]
[31 195]
[32 194]
[33 193]
[34 192]
[35 191]
[40 190]
[41 189]
[42 188]
[48 182]
[49 181]
[50 180]
[51 179]
[52 178]
[53 177]
[57 174]
[58 173]
[59 170]
[60 169]
[62 167]
[63 166]
[65 163]
[66 162]
[67 161]
[68 160]
[69 157]
[70 137]
[71 136]
[72 135]
[73 134]
[74 133]
[75 132]
[81 128]
[82 127]
[83 126]
[84 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
[93 118]
[94 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
