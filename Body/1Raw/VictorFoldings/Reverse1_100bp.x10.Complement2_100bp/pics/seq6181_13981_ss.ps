%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGACAAGGACGAGGCCGGAGGUGAUAUCGUCUACGCUCGUCCUCAUCCUCUCUCCCUCCAUUCUCAGUCUUCGAAUACAACAAAUACGCCCCUUUGxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[49.31040573 610.25885010]
[39.86357117 621.93725586]
[29.00085068 632.31176758]
[16.90062332 641.21191406]
[3.76158428 648.49163818]
[-10.20051003 654.03131104]
[-24.75638962 657.74005127]
[-39.66703415 659.55688477]
[-54.68759918 659.45208740]
[-69.57143402 657.42724609]
[-84.07411957 653.51568604]
[-97.95752716 647.78161621]
[-110.99367523 640.31927490]
[-122.96848297 631.25103760]
[-133.68533325 620.72595215]
[-142.96823120 608.91680908]
[-150.66474915 596.01751709]
[-156.64849854 582.23986816]
[-160.82124329 567.81018066]
[-163.11442566 552.96533203]
[-163.49041748 537.94909668]
[-161.94302368 523.00805664]
[-158.49768066 508.38760376]
[-153.21095276 494.32778931]
[-146.16963196 481.05947876]
[-137.48936462 468.80053711]
[-127.31269836 457.75228882]
[-115.80671692 448.09616089]
[-103.16037750 439.99072266]
[-89.58133698 433.56903076]
[-75.29257965 428.93658447]
[-60.52873230 426.16940308]
[-45.53223801 425.31298828]
[-30.54934883 426.38134766]
[-15.82610130 429.35696411]
[-11.00010300 415.15451050]
[-14.23122883 400.61459351]
[-2.46534443 390.03750610]
[2.36065340 375.83505249]
[7.18665123 361.63259888]
[12.01264858 347.43014526]
[16.73278236 333.19216919]
[9.74349213 320.08929443]
[14.21943283 305.54898071]
[28.01032639 298.30679321]
[32.62433624 284.03405762]
[37.23834610 269.76132202]
[41.85235214 255.48860168]
[34.86306381 242.38572693]
[39.33900452 227.84541321]
[53.12989807 220.60324097]
[57.74390411 206.33050537]
[62.35791397 192.05778503]
[66.97192383 177.78504944]
[71.58592987 163.51231384]
[62.67848587 151.60452271]
[62.48859406 136.55700684]
[71.29864502 124.13780975]
[85.90098572 119.23088074]
[90.51499176 104.95815277]
[93.29060364 90.21718597]
[94.18341827 75.24378204]
[95.07624054 60.27037430]
[95.96905518 45.29697037]
[96.86186981 30.32356262]
[97.53165436 15.33852482]
[97.97826385 0.34517470]
[97.64328766 -14.65108490]
[96.52763367 -29.60953712]
[95.41198730 -44.56799316]
[94.29634094 -59.52644348]
[93.18068695 -74.48490143]
[92.06504059 -89.44335175]
[90.94939423 -104.40180206]
[83.78044891 -91.22583008]
[71.65538025 -82.39505005]
[56.91533661 -79.61455536]
[42.40639877 -83.42121124]
[30.93000603 -93.08001709]
[24.70207596 -106.72599792]
[24.92512321 -121.72434235]
[31.55608177 -135.17909241]
[43.31461716 -144.49235535]
[57.93033600 -147.86589050]
[72.58117676 -144.64830017]
[84.43829346 -135.46087646]
[91.21257019 -122.07631683]
[92.77309418 -136.99491882]
[94.33361816 -151.91352844]
[88.07399750 -166.44375610]
[97.09339142 -178.29702759]
[98.65391541 -193.21562195]
[99.88088989 -208.16535950]
[100.77370453 -223.13876343]
[101.55503082 -238.11840820]
[102.22481537 -253.10343933]
[102.89459991 -268.08847046]
[88.65825653 -273.16961670]
[76.55308533 -282.22259521]
[67.65546417 -294.44238281]
[62.75657272 -308.74246216]
[62.29200745 -323.85125732]
[66.30307770 -338.42532349]
[74.43312836 -351.16870117]
[85.95923615 -360.94827271]
[99.85651398 -366.89447021]
[114.88921356 -368.47854614]
[129.72064209 -365.55963135]
[143.03201294 -358.39727783]
[153.63966370 -347.62838745]
[160.60038757 -334.21051025]
[163.29524231 -319.33673096]
[161.48458862 -304.32965088]
[155.32943726 -290.52365112]
[145.37709045 -279.14636230]
[132.51252747 -271.20947266]
[117.87963867 -267.41870117]
[117.20985413 -252.43365479]
[116.54006958 -237.44862366]
[119.38175964 -230.62611389]
[115.74711609 -222.24594116]
[114.85430145 -207.27253723]
[116.90863800 -204.40687561]
[117.67704010 -200.40380859]
[116.64001465 -195.87855530]
[113.57252502 -191.65510559]
[112.01200104 -176.73649597]
[118.38323212 -163.27334595]
[109.25222015 -150.35299683]
[107.69169617 -135.43440247]
[106.13117218 -120.51579285]
[105.90784454 -105.51745605]
[107.02349091 -90.55899811]
[108.13914490 -75.60054779]
[109.25479126 -60.64209366]
[110.37043762 -45.68363953]
[111.48609161 -30.72518730]
[112.60173798 -15.76673317]
[122.32340240 -27.18992424]
[137.09181213 -29.81554222]
[150.15505981 -22.44319344]
[155.54080200 -8.44341564]
[150.78674316 5.78328276]
[138.06639099 13.73264599]
[123.19529724 11.77033138]
[112.97161102 0.79178059]
[112.52500153 15.78513050]
[115.08987427 19.81383705]
[115.15116882 25.49655342]
[111.83527374 31.21637917]
[110.94245911 46.18978500]
[110.04964447 61.16318893]
[109.15682983 76.13659668]
[108.26401520 91.11000061]
[116.15702820 78.35459900]
[127.72222137 68.80230713]
[141.73908997 63.46119690]
[156.72839355 62.89493179]
[171.10829163 67.16327667]
[183.36122131 75.81577301]
[192.19410706 87.93930817]
[196.67478943 102.25444794]
[196.33042908 117.25049591]
[191.19735718 131.34487915]
[181.81726074 143.05017090]
[169.18006897 151.13110352]
[154.61941528 154.73486328]
[139.67190552 153.48114014]
[125.91497803 147.50224304]
[114.80046082 137.42913818]
[107.50127411 124.32486725]
[104.78772736 109.57215881]
[100.17372131 123.84489441]
[109.14038086 136.37107849]
[109.01338196 151.59727478]
[100.05100250 163.68611145]
[85.85866547 168.12632751]
[81.24465942 182.39904785]
[76.63064575 196.67178345]
[72.01663971 210.94451904]
[67.40262604 225.21725464]
[74.34441376 239.16177368]
[69.46183014 253.57061768]
[56.12508774 260.10260010]
[51.51107788 274.37533569]
[46.89706802 288.64807129]
[42.28305817 302.92080688]
[49.22483826 316.86532593]
[44.34225845 331.27416992]
[31.00551605 337.80618286]
[31.34347916 346.93435669]
[26.21510506 352.25613403]
[21.38910675 366.45858765]
[16.56310844 380.66107178]
[11.73711109 394.86352539]
[14.62304878 410.41928101]
[3.20235252 419.98049927]
[-1.62364519 434.18295288]
[11.86443424 440.79354858]
[24.39640045 449.07473755]
[35.76646805 458.89056396]
[45.78793335 470.07977295]
[54.29623032 482.45867920]
[61.15164566 495.82397461]
[66.24160767 509.95623779]
[69.48253632 524.62335205]
[70.82121277 539.58453369]
[70.23564911 554.59405518]
[67.73547363 569.40545654]
[63.36172485 583.77551270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 198]
[36 197]
[38 195]
[39 194]
[40 193]
[41 192]
[42 190]
[45 187]
[46 186]
[47 185]
[48 184]
[51 181]
[52 180]
[53 179]
[54 178]
[55 177]
[59 173]
[60 172]
[61 154]
[62 153]
[63 152]
[64 151]
[65 150]
[66 147]
[67 146]
[68 138]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[87 131]
[88 130]
[89 129]
[91 127]
[92 126]
[93 122]
[94 121]
[95 119]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
