%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[29.26265907 634.81555176]
[25.06418037 649.26751709]
[18.12666893 662.62255859]
[8.71678066 674.36730957]
[-2.80378962 684.05041504]
[-15.99222469 691.29968262]
[-30.34159470 695.83636475]
[-45.30035019 697.48620605]
[-60.29351044 696.18572998]
[-74.74478912 691.98492432]
[-88.09870911 685.04522705]
[-99.84197998 675.63342285]
[-109.52323151 664.11132812]
[-116.77033234 650.92169189]
[-121.30472565 636.57159424]
[-122.95212555 621.61254883]
[-121.64920807 606.61962891]
[-117.44605255 592.16900635]
[-110.50421143 578.81622314]
[-101.09052277 567.07446289]
[-89.56681824 557.39508057]
[-76.37603760 550.15014648]
[-62.02520370 545.61804199]
[-47.06591415 543.97308350]
[-32.07317352 545.27844238]
[-27.88616180 530.87463379]
[-31.76330566 516.49353027]
[-20.48144913 505.40161133]
[-16.29443741 490.99783325]
[-23.67075157 478.10885620]
[-19.62971306 463.44171143]
[-6.06056118 455.79214478]
[-1.87355006 441.38836670]
[2.31346107 426.98458862]
[6.39312792 412.55004883]
[10.36522388 398.08551025]
[2.79783010 385.30780029]
[6.62004805 370.58212280]
[20.07380486 362.73138428]
[24.04590225 348.26687622]
[28.01799774 333.80233765]
[31.99009514 319.33782959]
[20.15130234 310.23989868]
[12.67743397 297.26736450]
[10.73437214 282.38146973]
[14.64908791 267.84658813]
[23.85511017 255.88571167]
[36.97426224 248.34045410]
[52.02291870 246.38760376]
[55.99501419 231.92308044]
[59.96710968 217.45855713]
[63.93920517 202.99403381]
[67.91130066 188.52951050]
[60.34391022 175.75178528]
[64.16613007 161.02612305]
[77.61988068 153.17538452]
[81.59197998 138.71084595]
[85.56407928 124.24633026]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[94.67790222 81.19625092]
[95.35768890 76.60373688]
[97.52934265 73.15425110]
[100.48521423 71.23197174]
[105.09922791 56.95923996]
[109.71323395 42.68650436]
[114.32724762 28.41377258]
[117.97533417 13.86415100]
[120.64112854 -0.89706582]
[123.30692291 -15.65828323]
[125.97271729 -30.41950035]
[128.63851929 -45.18071747]
[115.73034668 -37.54008484]
[101.16652679 -41.13105774]
[93.28987122 -53.89656830]
[96.61248016 -68.52394867]
[109.23101807 -76.63397217]
[123.91700745 -73.58084869]
[132.25746155 -61.11447906]
[136.22956848 -75.57900238]
[140.20166016 -90.04352570]
[139.45643616 -99.14750671]
[144.34207153 -104.69299316]
[148.52908325 -119.09677887]
[143.01235962 -130.75561523]
[146.79626465 -142.66636658]
[157.33247375 -148.60897827]
[161.73347473 -162.94882202]
[166.13447571 -177.28866577]
[169.67414856 -191.86505127]
[172.33995056 -206.62626648]
[175.00573730 -221.38748169]
[173.23907471 -226.29930115]
[173.50642395 -230.93414307]
[175.36167908 -234.56362915]
[178.13427734 -236.74194336]
[181.45652771 -251.36940002]
[184.77879333 -265.99685669]
[188.10104370 -280.62432861]
[174.56811523 -287.25430298]
[162.92932129 -296.82693481]
[153.81233215 -308.82595825]
[147.70881653 -322.60433960]
[144.94793701 -337.41900635]
[145.67857361 -352.47103882]
[149.86131287 -366.94863892]
[157.27061462 -380.07110596]
[167.50688171 -391.13073730]
[180.01809692 -399.53109741]
[194.12954712 -404.81918335]
[209.08020020 -406.70980835]
[224.06381226 -405.10101318]
[238.27232361 -400.07955933]
[250.93948364 -391.91625977]
[261.38217163 -381.05130005]
[269.03723145 -368.07067871]
[273.49182129 -353.67437744]
[274.50573730 -338.63879395]
[272.02426147 -323.77478027]
[266.18124390 -309.88391113]
[257.29180908 -297.71533203]
[245.83531189 -287.92526245]
[232.42961121 -281.04168701]
[217.79763794 -277.43579102]
[202.72851562 -277.30206299]
[199.40625000 -262.67462158]
[196.08398438 -248.04714966]
[192.76173401 -233.41969299]
[189.76695251 -218.72167969]
[187.10116577 -203.96046448]
[184.43536377 -189.19924927]
[196.15982056 -198.55538940]
[211.13883972 -199.34838867]
[223.78562927 -191.28250122]
[229.38325500 -177.36608887]
[225.84391785 -162.78962708]
[214.48773193 -152.98977661]
[199.55026245 -151.62165833]
[186.60279846 -159.19551086]
[180.47431946 -172.88766479]
[176.07331848 -158.54782104]
[171.67233276 -144.20797729]
[176.51751709 -127.34111786]
[162.93286133 -114.90976715]
[158.74584961 -100.50598145]
[154.66618347 -86.07142639]
[150.69409180 -71.60690308]
[146.72198486 -57.14238358]
[143.39973450 -42.51492310]
[140.73393250 -27.75370407]
[138.06814575 -12.99248791]
[135.40234375 1.76872969]
[132.73655701 16.52994728]
[143.99389648 6.61671305]
[158.80731201 4.25815201]
[172.58668518 10.18508911]
[181.06234741 22.56099892]
[181.60801697 37.55107117]
[174.05461121 50.51046753]
[160.74263000 57.42358017]
[145.79693604 56.14830399]
[133.84861755 47.07979965]
[128.59997559 33.02778244]
[123.98596954 47.30051422]
[119.37196350 61.57324982]
[114.75794983 75.84597778]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[100.02860260 128.21842957]
[96.05650330 142.68295288]
[92.08441162 157.14747620]
[99.64192200 170.76811218]
[95.40760040 185.38061523]
[82.37582397 192.50160217]
[78.40373230 206.96612549]
[74.43163300 221.43064880]
[70.45954132 235.89517212]
[66.48744202 250.35969543]
[78.42826843 259.72412109]
[85.85411072 272.91122437]
[87.66053772 287.89624023]
[83.60317993 302.39193726]
[74.33030701 314.19781494]
[61.27944946 321.53405762]
[46.45461655 323.30990601]
[42.48252106 337.77444458]
[38.51042557 352.23895264]
[34.53833008 366.70349121]
[42.09584045 380.32412720]
[37.86151886 394.93661499]
[24.82974815 402.05761719]
[20.85765266 416.52212524]
[21.60287094 425.62612915]
[16.71724319 431.17160034]
[12.53023243 445.57537842]
[8.34322071 459.97915649]
[15.69710445 473.71081543]
[11.24569225 488.25866699]
[-1.89065516 495.18484497]
[-6.07766628 509.58862305]
[-2.50000572 525.00000000]
[-13.48237991 535.06164551]
[-17.66939163 549.46545410]
[-4.31322622 556.40075684]
[7.43309355 565.80877686]
[17.11807060 577.32775879]
[24.36944199 590.51501465]
[28.90848160 604.86364746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 205]
[26 204]
[28 202]
[29 201]
[32 198]
[33 197]
[34 196]
[35 194]
[36 193]
[39 190]
[40 189]
[41 188]
[42 187]
[49 180]
[50 179]
[51 178]
[52 177]
[53 176]
[56 173]
[57 172]
[58 171]
[59 170]
[61 168]
[65 167]
[66 166]
[67 165]
[68 164]
[69 154]
[70 153]
[71 152]
[72 151]
[73 150]
[80 149]
[81 148]
[82 147]
[84 146]
[85 145]
[88 143]
[89 142]
[90 141]
[91 132]
[92 131]
[93 130]
[97 129]
[98 128]
[99 127]
[100 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
