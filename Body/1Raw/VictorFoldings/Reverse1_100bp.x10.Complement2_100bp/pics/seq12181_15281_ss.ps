%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAGGAAAUUUUCAACUCUUUCGGUACAACAAUCUGUACCCCCGUACUCAAUCGUCAAGAACACUCGAAAGAGCCAUUUAUUCCCCAGCAUUCGGAGAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[66.67713165 709.63085938]
[53.94347000 717.60577393]
[40.22380066 723.73089600]
[25.78517914 727.88690186]
[10.90865993 729.99291992]
[-4.11618280 730.00793457]
[-18.99688530 727.93170166]
[-33.44379425 723.80456543]
[-47.17568970 717.70697021]
[-59.92527771 709.75744629]
[-71.44438934 700.11090088]
[-81.50879669 688.95501709]
[-89.92259216 676.50695801]
[-96.52200317 663.00903320]
[-101.17857361 648.72399902]
[-103.80165100 633.92987061]
[-104.34017944 618.91467285]
[-102.78368378 603.97070312]
[-99.16245270 589.38873291]
[-93.54697418 575.45269775]
[-86.04656982 562.43389893]
[-76.80722046 550.58563232]
[-66.00878143 540.13867188]
[-53.86144257 531.29626465]
[-40.60165787 524.23052979]
[-26.48753548 519.07904053]
[-11.79380798 515.94207764]
[3.19350672 514.88073730]
[18.18267632 515.91558838]
[21.28678703 501.24029541]
[24.39089584 486.56497192]
[27.49500656 471.88967896]
[30.59911728 457.21438599]
[33.70322800 442.53906250]
[28.76720238 428.48614502]
[39.19283295 416.58584595]
[42.29694366 401.91055298]
[27.00906181 393.02288818]
[15.66039658 379.43026733]
[9.62809467 362.75674438]
[9.65281677 345.00177002]
[15.74784184 328.30041504]
[27.19551468 314.66656494]
[42.63170624 305.75009155]
[60.20835876 302.63732910]
[62.43347549 287.80328369]
[64.65859222 272.96923828]
[58.89487457 259.23501587]
[68.59370422 246.73529053]
[70.81882477 231.90124512]
[63.88332367 221.99037170]
[65.61569977 209.61367798]
[75.62740326 201.48171997]
[78.07313538 186.68244934]
[80.51885986 171.88317871]
[74.96025848 158.06466675]
[84.84411621 145.71072388]
[87.28984833 130.91145325]
[75.15092468 122.35150146]
[67.91982269 109.37700653]
[67.02471924 94.55050659]
[72.64241028 80.80030823]
[83.66336060 70.84214783]
[97.91088104 66.64281464]
[100.35661316 51.84354782]
[102.80233765 37.04427719]
[100.96274567 32.15930176]
[101.16105652 27.52098465]
[102.96206665 23.86429024]
[105.70191956 21.64492989]
[108.80602264 6.96962786]
[104.09202576 -8.13298130]
[114.29563141 -18.98358917]
[117.39974213 -33.65889359]
[112.68574524 -48.76150131]
[122.88935089 -59.61211014]
[125.99346161 -74.28741455]
[128.32894897 -89.10447693]
[129.88946533 -104.02308655]
[131.44999695 -118.94168854]
[121.77278900 -131.14781189]
[123.56790161 -146.25517273]
[135.26422119 -155.40568542]
[136.82473755 -170.32429504]
[138.38526917 -185.24288940]
[139.94578552 -200.16149902]
[141.50631714 -215.08010864]
[126.92556000 -218.70610046]
[112.99137878 -224.32612610]
[99.97499084 -231.83078003]
[88.12978363 -241.07400513]
[77.68630981 -251.87585449]
[68.84786224 -264.02609253]
[61.78648376 -277.28817749]
[56.63962173 -291.40396118]
[53.50746536 -306.09872437]
[52.45098495 -321.08639526]
[53.49074173 -336.07522583]
[56.60649490 -350.77346802]
[61.73759842 -364.89498901]
[68.78417206 -378.16494751]
[77.60905457 -390.32504272]
[88.04046631 -401.13854980]
[99.87535858 -410.39495850]
[112.88335419 -417.91415405]
[126.81125641 -423.54971313]
[141.38795471 -427.19198608]
[156.32969666 -428.77005005]
[171.34565735 -428.25317383]
[186.14353943 -425.65142822]
[200.43528748 -421.01550293]
[213.94271851 -414.43554688]
[226.40289307 -406.03973389]
[237.57328796 -395.99142456]
[247.23646545 -384.48623657]
[255.20431519 -371.74813843]
[261.32174683 -358.02505493]
[265.46969604 -343.58410645]
[267.56741333 -328.70642090]
[267.57406616 -313.68157959]
[265.48950195 -298.80203247]
[261.35433960 -284.35742188]
[255.24905396 -270.62893677]
[247.29246521 -257.88378906]
[237.63948059 -246.37005615]
[226.47796631 -236.31187439]
[214.02522278 -227.90502930]
[200.52362061 -221.31314087]
[186.23597717 -216.66455078]
[171.44041443 -214.04972839]
[156.42491150 -213.51957703]
[154.86439514 -198.60096741]
[153.30386353 -183.68237305]
[151.74334717 -168.76376343]
[150.18281555 -153.84515381]
[159.73234558 -142.47229004]
[158.36227417 -127.32046509]
[146.36859131 -117.38116455]
[144.80807495 -102.46256256]
[143.24755859 -87.54396057]
[154.84458923 -97.05757141]
[169.84452820 -97.01675415]
[181.38961792 -87.44017029]
[184.20158386 -72.70610046]
[176.99484253 -59.55076599]
[163.06420898 -53.98860550]
[148.77859497 -58.56256866]
[140.66876221 -71.18330383]
[137.56465149 -56.50799942]
[142.50067139 -42.45506668]
[132.07504272 -30.55478287]
[128.97093201 -15.87947941]
[133.90696716 -1.82654679]
[123.48133087 10.07373810]
[120.37722015 24.74904060]
[117.60160828 39.49000168]
[115.15588379 54.28927231]
[112.71015167 69.08854675]
[124.84907532 77.64849854]
[132.08018494 90.62299347]
[132.97528076 105.44949341]
[127.35758972 119.19969177]
[116.33663940 129.15785217]
[102.08911896 133.35717773]
[99.64338684 148.15644836]
[105.02705383 163.03350830]
[95.31813049 174.32890320]
[92.87240601 189.12817383]
[90.42667389 203.92744446]
[97.30861664 221.00727844]
[85.65287018 234.12635803]
[83.42774963 248.96040344]
[89.03231049 263.75564575]
[79.49263763 275.19436646]
[77.26751709 290.02841187]
[75.04240417 304.86245728]
[86.40570068 309.93426514]
[96.21157837 317.57736206]
[103.89052582 327.34118652]
[108.99813843 338.65203857]
[111.24092102 350.84707642]
[110.49307251 363.21298218]
[106.80357361 375.02774048]
[100.39299774 385.60284424]
[91.64035797 394.32324219]
[81.06064606 400.68334961]
[69.27460480 404.31622314]
[56.97224808 405.01467896]
[53.86813736 419.68997192]
[58.58213425 434.79257202]
[48.37852859 445.64318848]
[45.27441788 460.31848145]
[42.17030716 474.99380493]
[39.06620026 489.66909790]
[35.96208954 504.34439087]
[32.85797882 519.01971436]
[46.98237991 524.14294434]
[60.25627136 531.18206787]
[72.42127228 540.00018311]
[83.24059296 550.42553711]
[92.50363159 562.25531006]
[100.03006744 575.25909424]
[105.67340851 589.18383789]
[109.32380676 603.75848389]
[110.91020203 618.69934082]
[110.40171051 633.71563721]
[107.80823517 648.51495361]
[103.18025970 662.80926514]
[96.60786438 676.32037354]
[88.21898651 688.78521729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 196]
[30 195]
[31 194]
[32 193]
[33 192]
[34 191]
[36 189]
[37 188]
[45 176]
[46 175]
[47 174]
[49 172]
[50 171]
[53 169]
[54 168]
[55 167]
[57 165]
[58 164]
[64 158]
[65 157]
[66 156]
[70 155]
[71 154]
[73 152]
[74 151]
[76 149]
[77 148]
[78 140]
[79 139]
[80 138]
[83 135]
[84 134]
[85 133]
[86 132]
[87 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
