%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAUCUUCACACUUUUGCAUCCGAACCUAAUUCCGCUGUCGCUAAAGAUCCUAUCAGUCAUCUUAAUCUUAACACUUCUACUAUUCACAUCUCCCUUCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[55.72043228 574.37902832]
[58.03458786 559.29235840]
[66.67250824 546.70867920]
[79.91912842 539.12646484]
[78.80348206 524.16802979]
[77.68782806 509.20959473]
[76.57218170 494.25112915]
[67.61383057 486.12249756]
[66.56194305 473.66949463]
[74.52390289 463.52209473]
[66.04277802 451.27792358]
[72.94496155 437.04168701]
[72.05214691 422.06826782]
[71.15932465 407.09484863]
[70.26651001 392.12145996]
[69.37369537 377.14804077]
[58.63444901 370.02780151]
[53.88619232 357.84024048]
[57.07122040 344.95358276]
[67.24427032 336.12615967]
[66.57448578 321.14111328]
[63.13545227 314.59933472]
[66.00796509 305.92834473]
[65.56136322 290.93499756]
[65.11475372 275.94161987]
[64.66815186 260.94827271]
[64.22154236 245.95492554]
[63.66333008 230.96531677]
[62.99354553 215.98028564]
[62.32376099 200.99523926]
[56.30204391 214.73347473]
[47.41117096 226.81454468]
[36.08493805 236.64900208]
[22.87598419 243.75698853]
[8.42880058 247.79170227]
[-6.55170059 248.55627441]
[-21.33458900 246.01339722]
[-35.19857407 240.28715515]
[-47.46720123 231.65693665]
[-57.54185867 220.54382324]
[-64.93097687 207.49005127]
[-69.27403259 193.13253784]
[-70.35910797 178.17184448]
[-68.13327026 163.33790588]
[-62.70511627 149.35452271]
[-54.33950043 136.90396118]
[-43.44459534 126.59371948]
[-30.55199432 118.92685699]
[-16.29075050 114.27745056]
[-1.35670519 112.87236023]
[13.52147865 114.78015137]
[27.61786079 119.90772247]
[40.24464798 128.00489807]
[50.78574753 138.67660522]
[58.72684479 151.40213013]
[63.68046570 165.56057739]
[65.40488434 180.45449829]
[70.44180298 166.32546997]
[75.26779938 152.12301636]
[79.88181305 137.85028076]
[84.49581909 123.57754517]
[89.10983276 109.30481720]
[86.37054443 95.59394836]
[96.61743927 86.08117676]
[101.23144531 71.80844116]
[100.22286987 65.27435303]
[102.34671783 60.00308228]
[106.20114899 57.18307877]
[111.23806763 43.05405045]
[110.30420685 38.81354523]
[110.72589874 34.89095688]
[112.23675537 31.67339134]
[114.47200775 29.42167282]
[117.01827240 28.24920845]
[122.88723755 14.44503117]
[128.75619507 0.64085418]
[134.62515259 -13.16332245]
[140.49411011 -26.96749878]
[146.26014709 -40.81498337]
[151.92294312 -54.70501328]
[149.96801758 -70.40497589]
[161.93756104 -79.26947021]
[167.60034180 -93.15950012]
[173.26312256 -107.04953003]
[176.47639465 -121.70131683]
[177.14617920 -136.68635559]
[177.81597900 -151.67138672]
[178.48576355 -166.65643311]
[178.93235779 -181.64978027]
[179.15568542 -196.64811707]
[171.62471008 -210.56195068]
[179.55064392 -223.17262268]
[179.77397156 -238.17095947]
[179.99729919 -253.16929626]
[180.22062683 -268.16763306]
[180.44395447 -283.16598511]
[180.66728210 -298.16430664]
[180.89060974 -313.16265869]
[166.80999756 -318.82839966]
[155.72958374 -329.20089722]
[149.14791870 -342.87738037]
[147.95510864 -358.00820923]
[152.31246948 -372.54702759]
[161.63072205 -384.52761841]
[174.64962769 -392.32971191]
[189.60848999 -394.89810181]
[204.48426819 -391.88546753]
[217.26510620 -383.69921875]
[226.22250366 -371.44650269]
[230.14506531 -356.78436279]
[228.50228882 -341.69577026]
[221.51634216 -328.22131348]
[210.13201904 -318.18331909]
[195.88894653 -312.93933105]
[195.66561890 -297.94097900]
[195.44229126 -282.94265747]
[195.21896362 -267.94430542]
[194.99563599 -252.94596863]
[194.77230835 -237.94763184]
[194.54898071 -222.94929504]
[202.09593201 -210.10823059]
[194.15402222 -196.42478943]
[193.93069458 -181.42645264]
[196.55526733 -177.43638611]
[196.70115662 -171.75520325]
[193.47079468 -165.98664856]
[192.80101013 -151.00160217]
[192.13122559 -136.01657104]
[191.46144104 -121.03153229]
[198.73690796 -134.14898682]
[209.00878906 -145.08006287]
[221.64897156 -153.15631104]
[235.88449097 -157.88386536]
[250.84484863 -158.97364807]
[265.61520386 -156.35900879]
[279.29235840 -150.19982910]
[291.03994751 -140.87275696]
[300.13958740 -128.94813538]
[306.03485107 -115.15516663]
[308.36520386 -100.33728790]
[306.98818970 -85.40062714]
[301.98797607 -71.25856781]
[293.67034912 -58.77589417]
[282.54394531 -48.71593094]
[269.28912354 -41.69384766]
[254.71643066 -38.13904953]
[239.71697998 -38.26890945]
[225.20802307 -42.07548904]
[212.07676697 -49.32601547]
[201.12620544 -59.57711792]
[193.02595520 -72.20193481]
[188.27134705 -86.42845154]
[187.15315247 -101.38674164]
[181.49037170 -87.49671173]
[175.82757568 -73.60668945]
[178.18754578 -58.90023041]
[165.81295776 -49.04222488]
[160.15017700 -35.15219879]
[160.53590393 -27.77161598]
[154.29829407 -21.09853935]
[148.42933655 -7.29436207]
[142.56037903 6.50981474]
[136.69140625 20.31399155]
[130.82244873 34.11816788]
[125.36709595 48.09096527]
[120.33017731 62.21999741]
[115.50418091 76.42245483]
[110.89016724 90.69518280]
[113.62945557 104.40605164]
[103.38256073 113.91882324]
[98.76855469 128.19155884]
[94.15454102 142.46429443]
[89.54053497 156.73703003]
[90.54911041 163.27111816]
[88.42526245 168.54238892]
[84.57083130 171.36238098]
[79.53392029 185.49140930]
[77.30879974 200.32545471]
[77.97858429 215.31050110]
[78.64836884 230.29553223]
[82.15784454 238.72888184]
[79.21488953 245.50833130]
[79.66149902 260.50167847]
[80.10810089 275.49502563]
[80.55471039 290.48837280]
[81.00131989 305.48171997]
[81.55952454 320.47134399]
[82.22930908 335.45639038]
[95.35302734 347.02304077]
[96.03746033 364.16497803]
[84.34709930 376.25521851]
[85.23992157 391.22863770]
[86.13273621 406.20205688]
[87.02555084 421.17544556]
[87.91836548 436.14886475]
[96.46334839 449.46401978]
[89.49730682 462.62927246]
[99.99123383 477.76065063]
[91.53063202 493.13546753]
[92.64628601 508.09393311]
[93.76193237 523.05236816]
[94.87757874 538.01086426]
[109.10239410 543.54412842]
[119.51142883 554.70721436]
[124.03794861 569.28369141]
[121.78322601 584.37939453]
[113.19492340 596.99694824]
[99.97826385 604.63128662]
[84.75742340 605.76647949]
[70.55451202 600.17724609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 202]
[5 201]
[6 200]
[7 199]
[10 197]
[12 195]
[13 194]
[14 193]
[15 192]
[16 191]
[20 188]
[21 187]
[23 186]
[24 185]
[25 184]
[26 183]
[27 182]
[28 180]
[29 179]
[30 178]
[57 177]
[58 176]
[59 173]
[60 172]
[61 171]
[62 170]
[64 168]
[65 167]
[68 166]
[69 165]
[74 164]
[75 163]
[76 162]
[77 161]
[78 160]
[79 158]
[80 157]
[82 155]
[83 154]
[84 153]
[85 129]
[86 128]
[87 127]
[88 126]
[89 123]
[90 122]
[92 120]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
