%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[81.02445221 469.80386353]
[87.07079315 453.96472168]
[87.07079315 438.96472168]
[87.07079315 423.96472168]
[87.07079315 408.96472168]
[87.07079315 393.96472168]
[78.12539673 388.92977905]
[72.02947235 380.57064819]
[69.93714142 370.35617065]
[72.29161072 360.11605835]
[78.73335266 351.71301270]
[88.15323639 346.70407104]
[88.82302094 331.71902466]
[89.49280548 316.73397827]
[90.16259003 301.74896240]
[78.39093781 311.04562378]
[63.47792053 309.43258667]
[53.96638870 297.83386230]
[55.30498123 282.89370728]
[66.72689056 273.17053223]
[81.68913269 274.23422241]
[91.62033081 285.47454834]
[93.62434387 270.60900879]
[95.62836456 255.74348450]
[97.63237762 240.87796021]
[99.63639069 226.01242065]
[101.64040375 211.14689636]
[103.64441681 196.28137207]
[103.64441681 181.28137207]
[101.64040375 166.41584778]
[99.63639069 151.55030823]
[90.26807404 139.97084045]
[96.09230042 125.26068115]
[93.97767639 110.41048431]
[91.53194427 95.61121368]
[88.86614990 80.84999847]
[86.20035553 66.08877563]
[76.06868744 58.10678864]
[74.15222931 45.75725555]
[80.93940735 35.74422073]
[78.49367523 20.94495010]
[75.49890137 6.24694633]
[71.95922852 -8.32942963]
[68.41955566 -22.90580368]
[62.14048004 -9.28327942]
[49.55085373 -1.12844551]
[34.55171204 -0.96816790]
[21.79069901 -8.85210991]
[15.22195435 -22.33734703]
[16.88087654 -37.24533081]
[26.25342941 -48.95666122]
[40.43542480 -53.84245300]
[55.03242111 -50.38879395]
[65.52149963 -39.66560745]
[63.96097183 -54.58421326]
[62.40045166 -69.50281525]
[60.83992767 -84.42142487]
[59.05746078 -99.31513977]
[57.05344772 -114.18066406]
[55.04943466 -129.04618835]
[41.85144043 -133.68038940]
[31.98477554 -143.50205994]
[27.33472252 -156.55407715]
[28.75504303 -170.27018738]
[35.91185760 -181.97953796]
[47.35984421 -189.42672729]
[45.57737732 -204.32044983]
[43.79491043 -219.21415710]
[42.01244736 -234.10787964]
[37.19960022 -219.90095520]
[29.18489456 -207.22166443]
[18.41663361 -196.77922058]
[5.49715376 -189.15774536]
[-8.85088730 -184.78352356]
[-23.82491875 -183.90126038]
[-38.58735657 -186.56030273]
[-52.31245041 -192.61189270]
[-64.23247528 -201.71754456]
[-73.68067932 -213.36793518]
[-80.12857056 -226.91137695]
[-83.21546936 -241.59030151]
[-82.76872253 -256.58364868]
[-78.81330872 -271.05273438]
[-71.57048035 -284.18823242]
[-61.44537354 -295.25540161]
[-49.00434113 -303.63519287]
[-34.94328690 -308.85885620]
[-20.04871941 -310.63421631]
[-5.15378284 -308.86196899]
[8.90836143 -303.64123535]
[21.35113716 -295.26403809]
[31.47854805 -284.19897461]
[38.72410965 -271.06497192]
[42.68235397 -256.59790039]
[45.34814835 -271.35913086]
[48.01394653 -286.12033081]
[50.67974091 -300.88156128]
[36.74109268 -306.57434082]
[24.29085159 -315.04104614]
[13.87329388 -325.91156006]
[5.94382715 -338.71066284]
[0.84909528 -352.87884521]
[-1.18818247 -367.79675293]
[-0.07894504 -382.81216431]
[4.12831640 -397.26873779]
[11.24967861 -410.53448486]
[20.97382545 -422.02947998]
[32.87565994 -431.25119019]
[46.43488693 -437.79650879]
[61.05875015 -441.37927246]
[76.10796356 -441.84289551]
[90.92462921 -439.16708374]
[104.86103821 -433.46881104]
[117.30794525 -424.99722290]
[127.72122955 -414.12258911]
[135.64566040 -401.32037354]
[140.73481750 -387.15017700]
[142.76622009 -372.23150635]
[141.65107727 -357.21649170]
[137.43814087 -342.76159668]
[130.31155396 -329.49865723]
[120.58288574 -318.00747681]
[108.67742157 -308.79046631]
[95.11562347 -302.25048828]
[80.49034882 -298.67346191]
[65.44095612 -298.21575928]
[62.77516174 -283.45452881]
[60.10936737 -268.69332886]
[57.44357300 -253.93211365]
[59.43478775 -251.21578979]
[60.59374619 -247.73936462]
[60.65388107 -243.77639771]
[59.44213867 -239.68797302]
[56.90616226 -235.89035034]
[58.68862915 -220.99662781]
[60.47109604 -206.10290527]
[62.25355911 -191.20919800]
[77.25959778 -185.21492004]
[87.25262451 -172.39714050]
[89.43048096 -156.19610596]
[83.10489655 -141.02104187]
[69.91496277 -131.05021667]
[71.91897583 -116.18468475]
[73.92298889 -101.31915283]
[77.11041260 -97.76255798]
[78.09744263 -92.16587830]
[75.75852966 -85.98194122]
[77.31905365 -71.06333923]
[78.87957764 -56.14473724]
[80.44010162 -41.22613144]
[82.99593353 -26.44547653]
[86.53560638 -11.86910152]
[90.07527924 2.70727372]
[99.98970795 -8.54901791]
[114.97846222 -7.96838284]
[123.99239349 4.02115536]
[120.38676453 18.58135605]
[106.81951141 24.97898102]
[93.29294586 18.49922371]
[95.73867798 33.29849243]
[107.58845520 46.24258804]
[100.96157074 63.42298126]
[103.62736511 78.18419647]
[106.29316711 92.94541931]
[109.81336212 96.83413696]
[110.90419769 102.41835022]
[108.81171417 108.18536377]
[113.17951202 116.20784760]
[110.95782471 123.25666809]
[120.46947479 135.89941406]
[114.50191498 149.54629517]
[116.50592804 164.41181946]
[118.50994110 179.27735901]
[123.67967987 165.19638062]
[132.89813232 153.36337280]
[145.28668213 144.90618896]
[159.66450500 140.63090515]
[174.66122437 140.94502258]
[188.84742737 145.81858826]
[200.87097168 154.78709412]
[209.58587646 166.99571228]
[214.16146851 181.28080750]
[214.16165161 196.28080750]
[209.58638000 210.56600952]
[200.87176514 222.77484131]
[188.84841919 231.74362183]
[174.66233826 236.61752319]
[159.66563416 236.93199158]
[145.28770447 232.65704346]
[132.89897156 224.20013428]
[123.68022919 212.36735535]
[118.50994110 198.28538513]
[116.50592804 213.15090942]
[114.50191498 228.01643372]
[112.49790192 242.88197327]
[110.49388885 257.74749756]
[108.48987579 272.61303711]
[106.48586273 287.47854614]
[105.14762878 302.41873169]
[104.47784424 317.40377808]
[103.80805969 332.38882446]
[103.13827515 347.37384033]
[117.46359253 361.46160889]
[116.81981659 381.23757935]
[102.07079315 393.96472168]
[102.07079315 408.96472168]
[102.07079315 423.96472168]
[102.07079315 438.96472168]
[102.07079315 453.96472168]
[108.11713409 469.80386353]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 206]
[6 205]
[12 202]
[13 201]
[14 200]
[15 199]
[22 198]
[23 197]
[24 196]
[25 195]
[26 194]
[27 193]
[28 192]
[29 173]
[30 172]
[31 171]
[33 169]
[34 167]
[35 164]
[36 163]
[37 162]
[40 160]
[41 159]
[42 153]
[43 152]
[44 151]
[54 150]
[55 149]
[56 148]
[57 147]
[58 144]
[59 143]
[60 142]
[66 137]
[67 136]
[68 135]
[69 134]
[94 129]
[95 128]
[96 127]
[97 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
