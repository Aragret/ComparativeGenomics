%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCAUAUCCCGACACUGAUCAUACAACUCAGGACAUUCAUCCUCUCACUAUAAACUAGUCCUCUUGCACCAAUGAUCGUGUCUCUCAAGAGGGUCAUCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[229.45304871 376.74063110]
[241.81152344 368.15783691]
[235.73768616 354.44256592]
[229.66386414 340.72729492]
[223.59002686 327.01202393]
[208.76567078 325.56152344]
[196.57667542 316.82742310]
[190.35488892 303.07403564]
[191.86250305 287.95370483]
[200.79428101 275.53717041]
[194.72044373 261.82189941]
[188.54467773 248.15222168]
[182.26730347 234.52891541]
[175.98994446 220.90559387]
[169.71258545 207.28227234]
[163.43522644 193.65896606]
[157.15786743 180.03564453]
[150.88050842 166.41232300]
[142.37368774 154.05781555]
[131.88618469 143.33343506]
[121.39868164 132.60905457]
[110.91117859 121.88468170]
[100.42367554 111.16030121]
[89.85662842 100.51428986]
[74.61148071 96.28391266]
[71.02919769 81.82650757]
[60.38319397 71.25946045]
[49.73718262 60.69240952]
[34.16074371 60.58169556]
[23.51470757 49.71355057]
[23.71625137 34.86447525]
[13.07024384 24.29742813]
[2.42423463 13.73038006]
[2.56784225 28.72969246]
[-6.86607647 40.39164734]
[-21.56446075 43.38455582]
[-34.80740738 36.34009933]
[-40.54042053 22.47890854]
[-36.14244080 8.13813591]
[-23.62416840 -0.12581350]
[-8.70711994 1.46603644]
[-18.19601822 -10.15122700]
[-27.68491745 -21.76848984]
[-37.17381668 -33.38575363]
[-46.66271210 -45.00301743]
[-56.15161133 -56.62028122]
[-65.72673035 -68.16658020]
[-75.38754272 -79.64128113]
[-85.04835510 -91.11598206]
[-97.38615417 -82.56536102]
[-110.47045135 -75.20766449]
[-124.18624115 -69.10753632]
[-138.41299438 -64.31859589]
[-153.02568054 -60.88293076]
[-167.89588928 -58.83073044]
[-182.89291382 -58.18002701]
[-197.88499451 -58.93654633]
[-212.74034119 -61.09363937]
[-227.32841492 -64.63233948]
[-241.52102661 -69.52156067]
[-255.19342041 -75.71833038]
[-268.22546387 -83.16818237]
[-280.50262451 -91.80565643]
[-291.91699219 -101.55484009]
[-302.36828613 -112.33005524]
[-311.76461792 -124.03660583]
[-320.02343750 -136.57160950]
[-327.07214355 -149.82492065]
[-332.84881592 -163.68003845]
[-337.30267334 -178.01522827]
[-340.39456177 -192.70449829]
[-342.09735107 -207.61875916]
[-342.39602661 -222.62693787]
[-341.28802490 -237.59712219]
[-338.78298950 -252.39778137]
[-334.90304565 -266.89883423]
[-329.68218994 -280.97280884]
[-323.16638184 -294.49609375]
[-315.41284180 -307.34976196]
[-306.48971558 -319.42089844]
[-296.47543335 -330.60342407]
[-285.45800781 -340.79901123]
[-273.53424072 -349.91815186]
[-260.80889893 -357.88061523]
[-247.39389038 -364.61645508]
[-233.40705872 -370.06649780]
[-218.97132874 -374.18283081]
[-204.21356201 -376.92926025]
[-189.26345825 -378.28167725]
[-174.25241089 -378.22817993]
[-159.31233215 -376.76925659]
[-144.57452393 -373.91772461]
[-130.16848755 -369.69860840]
[-116.22085571 -364.14904785]
[-102.85417938 -357.31774902]
[-90.18593597 -349.26480103]
[-78.32745361 -340.06094360]
[-67.38295746 -329.78704834]
[-57.44862366 -318.53347778]
[-48.61175919 -306.39904785]
[-40.95001984 -293.49041748]
[-34.53074265 -279.92108154]
[-29.41034126 -265.81024170]
[-25.63381386 -251.28190613]
[-23.23435211 -236.46377563]
[-22.23303986 -221.48605347]
[-22.63867950 -206.48039246]
[-24.44770432 -191.57865906]
[-27.64421654 -176.91178894]
[-32.20012283 -162.60870361]
[-38.07538986 -148.79510498]
[-45.21837997 -135.59237671]
[-53.56631851 -123.11653900]
[-63.04584885 -111.47724915]
[-73.57365417 -100.77679443]
[-63.91284180 -89.30209351]
[-54.25202942 -77.82739258]
[-47.53936005 -74.73516846]
[-44.53434753 -66.10917664]
[-35.04544830 -54.49191666]
[-25.55655098 -42.87465286]
[-16.06765366 -31.25738907]
[-6.57875490 -19.64012527]
[2.91014361 -8.02286243]
[12.99128246 3.08437181]
[23.63729095 13.65141964]
[34.28329849 24.21846771]
[49.13046265 23.90638542]
[60.07756042 34.47121811]
[60.30422974 50.04640198]
[70.95024109 60.61344910]
[81.59625244 71.18049622]
[96.07991791 74.65505219]
[100.42367554 89.86828613]
[107.90835571 92.86029816]
[111.14805603 100.67279816]
[121.63555908 111.39717865]
[132.12306213 122.12155914]
[142.61056519 132.84593201]
[153.09805298 143.57031250]
[148.48648071 129.29679871]
[147.51846313 114.32807159]
[150.25318909 99.57946777]
[156.52343750 85.95288086]
[165.94578552 74.28157043]
[177.94404602 65.27925873]
[191.78453064 59.49642563]
[206.62088013 57.28669739]
[221.54583740 58.78520203]
[235.64674377 63.90030670]
[248.06132507 72.31921387]
[258.03042603 83.52711487]
[264.94442749 96.83863068]
[268.38055420 111.43976593]
[268.12866211 126.43765259]
[264.20416260 140.91516113]
[256.84704590 153.98698425]
[246.50717163 164.85379028]
[233.81687927 172.85105896]
[219.55213928 177.48974609]
[204.58528137 178.48620605]
[189.83151245 175.77949524]
[176.19302368 169.53514099]
[164.50382996 160.13496399]
[170.78118896 173.75828552]
[177.05854797 187.38160706]
[183.33590698 201.00491333]
[189.61326599 214.62823486]
[195.89062500 228.25154114]
[202.16798401 241.87486267]
[208.60151672 248.35926819]
[208.43569946 255.74806213]
[214.50953674 269.46331787]
[229.70660400 271.19436646]
[241.91615295 280.24002075]
[247.91879272 294.09045410]
[246.19430542 308.98617554]
[237.30529785 320.93820190]
[243.37911987 334.65347290]
[249.45295715 348.36871338]
[255.52679443 362.08398438]
[270.18804932 358.70104980]
[285.22457886 358.15417480]
[300.09283447 360.46313477]
[314.25534058 365.54443359]
[327.20013428 373.21444702]
[338.45925903 383.19586182]
[347.62573242 395.12783813]
[354.36813354 408.57910156]
[358.44277954 423.06335449]
[359.70236206 438.05703735]
[358.10134888 453.01809692]
[353.69760132 467.40570068]
[346.65032959 480.69976807]
[337.21429443 492.41973877]
[325.73056030 502.14190674]
[312.61431885 509.51486206]
[298.33966064 514.27203369]
[283.42263794 516.24151611]
[268.40246582 515.35198975]
[253.82214355 511.63577271]
[240.20870972 505.22708130]
[228.05430603 496.35763550]
[217.79830933 485.34805298]
[209.81144714 472.59634399]
[204.38244629 458.56344604]
[201.70756531 443.75662231]
[201.88349915 428.71118164]
[204.90388489 413.97097778]
[210.65953064 400.06884766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 181]
[3 180]
[4 179]
[5 178]
[10 173]
[11 172]
[12 170]
[13 169]
[14 168]
[15 167]
[16 166]
[17 165]
[18 164]
[19 140]
[20 139]
[21 138]
[22 137]
[23 136]
[24 134]
[26 132]
[27 131]
[28 130]
[31 127]
[32 126]
[33 125]
[41 124]
[42 123]
[43 122]
[44 121]
[45 120]
[46 119]
[47 117]
[48 116]
[49 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
