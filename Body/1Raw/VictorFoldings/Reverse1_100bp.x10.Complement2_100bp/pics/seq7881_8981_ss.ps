%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[108.60642242 707.78955078]
[94.95879364 700.95544434]
[85.63471222 688.87139893]
[82.48547363 673.93670654]
[86.13636780 659.11669922]
[95.86250305 647.35382080]
[109.73274994 640.98364258]
[109.95607758 625.98529053]
[110.17940521 610.98699951]
[110.40273285 595.98864746]
[110.62606049 580.99029541]
[110.06784821 566.00067139]
[108.72961426 551.06048584]
[107.39138031 536.12030029]
[106.05314636 521.18011475]
[104.71491241 506.23995972]
[103.37667847 491.29977417]
[101.31452179 489.40090942]
[99.88026428 486.57080078]
[99.43239594 483.04449463]
[100.23773956 479.18237305]
[102.43070221 475.43472290]
[101.98409271 460.44137573]
[101.53748322 445.44802856]
[86.96482086 442.04406738]
[73.75973511 434.97848511]
[62.82521439 424.72760010]
[54.91072464 411.98580933]
[50.56088257 397.61849976]
[50.07794189 382.60333252]
[53.50083160 367.96359253]
[60.60207367 354.69863892]
[70.90289307 343.71551514]
[83.70549774 335.76699829]
[98.14035034 331.40005493]
[97.69374084 316.40670776]
[97.24713898 301.41336060]
[96.80052948 286.42001343]
[88.68772125 273.92874146]
[96.01071167 259.90432739]
[85.99649811 245.49311829]
[94.85929108 229.35211182]
[94.18950653 214.36706543]
[93.51972198 199.38203430]
[92.84993744 184.39698792]
[90.50861359 181.76060486]
[89.32792664 177.85919189]
[89.88853455 173.25061035]
[92.50000000 168.73094177]
[92.50000000 153.73094177]
[92.50000000 138.73094177]
[84.76270294 126.00366974]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[92.38833618 42.79691696]
[91.16135406 27.84718323]
[88.93624115 13.01313877]
[86.71112061 -1.82090473]
[82.34332275 -9.84338379]
[84.56501770 -16.89220619]
[82.56100464 -31.75773430]
[80.55698395 -46.62326050]
[78.55297089 -61.48878860]
[74.30510712 -69.57540894]
[76.63149261 -76.59037018]
[74.84902954 -91.48409271]
[62.70870590 -101.24372101]
[61.11319733 -116.37345886]
[70.49233246 -127.88725281]
[68.70986176 -142.78097534]
[66.92739868 -157.67468262]
[65.14493561 -172.56840515]
[63.25164032 -187.44844055]
[61.24762726 -202.31396484]
[51.48248291 -210.74040222]
[50.11936951 -223.16319275]
[57.34687805 -232.86317444]
[55.56441498 -247.75689697]
[53.78194809 -262.65060425]
[44.45957947 -275.43356323]
[50.62966156 -288.99008179]
[48.84719849 -303.88381958]
[47.06473160 -318.77752686]
[45.28226471 -333.67123413]
[43.49979782 -348.56497192]
[41.71733475 -363.45867920]
[39.93486786 -378.35238647]
[38.15240097 -393.24612427]
[36.36993408 -408.13983154]
[21.52529716 -411.05392456]
[8.30869389 -418.41439819]
[-1.98504436 -429.50015259]
[-8.34744358 -443.22512817]
[-10.15517902 -458.24468994]
[-7.23114920 -473.08737183]
[0.13818066 -486.29904175]
[11.23083782 -496.58535767]
[24.96007729 -502.93856812]
[39.98085022 -504.73623657]
[54.82156754 -501.80224609]
[68.02829742 -494.42407227]
[78.30716705 -483.32452393]
[84.65116882 -469.59103394]
[86.43877411 -454.56906128]
[83.49485779 -439.73031616]
[76.10782623 -426.52853394]
[65.00139618 -416.25708008]
[51.26365280 -409.92230225]
[53.04611969 -395.02856445]
[54.82858658 -380.13485718]
[56.61104965 -365.24114990]
[58.39351654 -350.34744263]
[60.17598343 -335.45370483]
[61.95845032 -320.55999756]
[63.74091339 -305.66629028]
[65.52338409 -290.77255249]
[74.71825409 -279.05490112]
[68.67566681 -264.43307495]
[70.45812988 -249.53935242]
[72.24059296 -234.64564514]
[83.50057220 -221.18533325]
[76.11315155 -204.31797791]
[78.11717224 -189.45245361]
[82.12612152 -183.24357605]
[80.03865051 -174.35087585]
[81.82111359 -159.45715332]
[83.60358429 -144.56343079]
[85.38604736 -129.66972351]
[97.21730042 -120.69436646]
[99.23714447 -105.61540985]
[89.74274445 -93.26655579]
[91.52520752 -78.37284088]
[93.41850281 -63.49280548]
[95.42251587 -48.62727737]
[97.42652893 -33.76174927]
[99.43054199 -18.89621925]
[101.54516602 -4.04602194]
[103.77028656 10.78802204]
[105.99539948 25.62206650]
[113.46478271 12.61405373]
[126.73174286 5.61493015]
[141.68537903 6.79344940]
[153.69212341 15.78443432]
[159.03158569 29.80193138]
[156.04925537 44.50246429]
[145.66923523 55.33091736]
[131.10791016 58.93197250]
[116.87724304 54.18980408]
[107.38667297 42.57358932]
[110.62940979 49.21485519]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[115.23729706 126.00366974]
[107.50000000 138.73094177]
[107.50000000 153.73094177]
[107.50000000 168.73094177]
[107.83497620 183.72720337]
[108.50476074 198.71223450]
[109.17454529 213.69728088]
[109.84432983 228.68231201]
[118.81876373 237.94635010]
[119.06813812 250.44120789]
[111.00405884 259.45770264]
[119.14881134 273.02139282]
[111.79387665 285.97338867]
[112.24048615 300.96673584]
[112.68708801 315.96008301]
[113.13369751 330.95343018]
[127.80287933 334.45349121]
[141.05589294 341.62588501]
[151.99217224 351.97640991]
[159.87036133 364.79516602]
[164.15856934 379.20520020]
[164.57020569 394.22250366]
[161.08322144 408.82324219]
[153.94117737 422.01351929]
[143.63618469 432.89706421]
[130.87506104 440.73611450]
[116.53083801 445.00143433]
[116.97743988 459.99478149]
[117.42404938 474.98812866]
[118.31686401 489.96151733]
[119.65509796 504.90170288]
[120.99333191 519.84191895]
[122.33156586 534.78210449]
[123.66979980 549.72229004]
[125.00803375 564.66247559]
[134.55854797 553.09576416]
[149.28623962 550.25061035]
[162.45779419 557.42761230]
[168.05137634 571.34564209]
[163.50965881 585.64154053]
[150.90905762 593.77941895]
[136.01040649 592.03875732]
[125.62439728 581.21362305]
[125.40106964 596.21197510]
[125.17774200 611.21032715]
[124.95441437 626.20861816]
[124.73108673 641.20697021]
[138.40551758 647.98730469]
[147.77713013 660.03454590]
[150.98515320 674.95666504]
[147.39263916 689.79101562]
[137.71290588 701.59210205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 205]
[8 204]
[9 203]
[10 202]
[11 201]
[12 193]
[13 192]
[14 191]
[15 190]
[16 189]
[17 188]
[22 187]
[23 186]
[24 185]
[35 174]
[36 173]
[37 172]
[38 171]
[40 169]
[42 166]
[43 165]
[44 164]
[45 163]
[49 162]
[50 161]
[51 160]
[53 158]
[55 156]
[56 155]
[57 154]
[58 152]
[59 142]
[60 141]
[61 140]
[63 139]
[64 138]
[65 137]
[66 136]
[68 135]
[69 134]
[72 131]
[73 130]
[74 129]
[75 128]
[76 126]
[77 125]
[80 123]
[81 122]
[82 121]
[84 119]
[85 118]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
