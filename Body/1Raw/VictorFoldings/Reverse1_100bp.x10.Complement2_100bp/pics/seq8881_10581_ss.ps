%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxAUAGCGACAAGUAAUAUCGAUGAGAGUAUUGGGAGUUGUGGGUGAGGGAGAAUCGGUUAUAACACGGAUAACGGUAUGAUCAGAAACGGCGGACGCUUCG\
) } def
/len { sequence length } bind def

/coor [
[123.74320221 747.27294922]
[109.77172089 752.78454590]
[95.22881317 756.53735352]
[80.33496094 758.47448730]
[65.31593323 758.56665039]
[50.39942551 756.81237793]
[35.81156540 753.23828125]
[21.77350235 747.89862061]
[8.49804974 740.87420654]
[-3.81354022 732.27166748]
[-14.97462749 722.22131348]
[-24.81601143 710.87548828]
[-33.18850327 698.40631104]
[-39.96517181 685.00268555]
[-45.04328918 670.86791992]
[-48.34587097 656.21618652]
[-49.82284927 641.26971436]
[-49.45183563 626.25494385]
[-47.23845673 611.39965820]
[-43.21626282 596.92895508]
[-37.44622803 583.06219482]
[-30.01583099 570.00964355]
[-21.03770828 557.96917725]
[-10.64797020 547.12329102]
[0.99588025 537.63647461]
[13.71732426 529.65246582]
[27.32350731 523.29229736]
[41.60816193 518.65246582]
[56.35474014 515.80322266]
[71.33969116 514.78784180]
[86.33583069 515.62164307]
[89.00162506 500.86044312]
[91.66742706 486.09924316]
[94.33322144 471.33801270]
[96.99901581 456.57678223]
[99.66481018 441.81558228]
[102.33060455 427.05435181]
[104.99639893 412.29315186]
[107.66219330 397.53192139]
[110.32799530 382.77072144]
[111.22080994 367.79730225]
[110.32799530 352.82391357]
[101.84687042 340.57971191]
[108.74905396 326.34347534]
[107.85623169 311.37008667]
[106.96341705 296.39666748]
[106.07060242 281.42327881]
[105.06634521 266.45690918]
[103.95069122 251.49847412]
[102.83504486 236.54002380]
[94.17256165 224.42347717]
[100.86202240 210.08604431]
[99.74637604 195.12759399]
[98.63072968 180.16914368]
[97.51507568 165.21069336]
[96.39942932 150.25222778]
[95.28378296 135.29377747]
[94.16812897 120.33532715]
[93.05248260 105.37687683]
[90.91987610 103.19937897]
[89.53243256 100.19779205]
[89.19691467 96.64661407]
[90.11437225 92.92982483]
[92.34281158 89.49951172]
[92.11948395 74.50117493]
[82.31167603 58.91630173]
[91.45036316 43.93459702]
[91.00375366 28.94124794]
[90.55715179 13.94789886]
[77.60710144 2.18713522]
[77.17796326 -14.96310425]
[89.04702759 -26.87796783]
[88.37724304 -41.86300659]
[87.59592438 -56.84264374]
[86.70310211 -71.81604767]
[85.81028748 -86.78945923]
[76.69892120 -95.91884613]
[76.26354980 -108.40860748]
[84.19248962 -117.54417419]
[83.52270508 -132.52920532]
[82.85292053 -147.51425171]
[82.18313599 -162.49928284]
[67.22581482 -163.92224121]
[52.61211777 -167.41307068]
[38.62649918 -172.90383911]
[25.54118729 -180.28765869]
[13.61089993 -189.42080688]
[3.06786060 -200.12550354]
[-5.88270760 -212.19337463]
[-13.06657887 -225.38951111]
[-18.34391785 -239.45704651]
[-21.61199760 -254.12217712]
[-22.80720520 -269.09942627]
[-21.90627670 -284.09722900]
[-18.92674828 -298.82366943]
[-13.92661476 -312.99212646]
[-7.00320864 -326.32675171]
[1.70870531 -338.56802368]
[12.03954697 -349.47766113]
[23.78822327 -358.84326172]
[36.72604370 -366.48257446]
[50.60116959 -372.24685669]
[65.14351654 -376.02392578]
[80.07001495 -377.74026489]
[95.09011078 -377.36245728]
[109.91144562 -374.89785767]
[124.24550629 -370.39443970]
[137.81327820 -363.93984985]
[150.35066223 -355.65972900]
[161.61361694 -345.71530151]
[171.38290405 -334.30007935]
[179.46836853 -321.63629150]
[185.71260071 -307.97042847]
[189.99407959 -293.56851196]
[192.22946167 -278.71087646]
[192.37521362 -263.68673706]
[190.42852783 -248.78854370]
[186.42727661 -234.30627441]
[180.44935608 -220.52183533]
[172.61111450 -207.70356750]
[163.06513977 -196.10095215]
[151.99725342 -185.93984985]
[139.62287903 -177.41806030]
[126.18288422 -170.70146179]
[111.93889618 -165.92077637]
[97.16817474 -163.16906738]
[97.83795929 -148.18403625]
[98.50774384 -133.19898987]
[99.17752838 -118.21395874]
[109.40518951 -103.95345306]
[100.78369904 -87.68227386]
[101.67651367 -72.70886993]
[102.56932831 -57.73546219]
[106.10537720 -51.24561310]
[103.36228180 -42.53279114]
[104.03206635 -27.54775429]
[114.66411591 -20.26839638]
[119.23039246 -8.01151276]
[115.85385132 4.82630062]
[105.55049896 13.50129223]
[105.99710846 28.49464226]
[106.44371033 43.48799133]
[115.03015900 52.00852203]
[115.52494049 64.49607086]
[107.11782074 74.27784729]
[107.34114838 89.27618408]
[108.01094055 104.26122284]
[109.12658691 119.21968079]
[110.24223328 134.17813110]
[111.35787964 149.13658142]
[112.47353363 164.09504700]
[113.58917999 179.05349731]
[114.70482635 194.01194763]
[115.82048035 208.97039795]
[124.56275940 222.15687561]
[117.79349518 235.42436218]
[118.90914917 250.38282776]
[120.02479553 265.34127808]
[123.78381348 273.66638184]
[121.04400635 280.53045654]
[121.93682098 295.50384521]
[122.82964325 310.47726440]
[123.72245789 325.45068359]
[132.26744080 338.76583862]
[125.30139923 351.93109131]
[126.19421387 366.90447998]
[132.65800476 353.36862183]
[143.31292725 342.81057739]
[156.90724182 336.47064209]
[171.84390259 335.09368896]
[186.36817932 338.84143066]
[198.77375793 347.27359009]
[207.60324097 359.39959717]
[211.81936646 373.79489136]
[210.92681885 388.76831055]
[205.03045654 402.56082153]
[194.82298279 413.55206299]
[181.50354004 420.45080566]
[166.63690186 422.44659424]
[151.96958923 419.30496216]
[139.22468567 411.39498901]
[129.89947510 399.64593506]
[125.08921051 385.43649292]
[122.42341614 400.19772339]
[119.75762177 414.95895386]
[117.09181976 429.72015381]
[114.42602539 444.48138428]
[111.76023102 459.24258423]
[109.09443665 474.00381470]
[106.42864227 488.76501465]
[103.76284790 503.52624512]
[101.09704590 518.28747559]
[115.43756104 522.75170898]
[129.12077332 528.94439697]
[141.93922424 536.77172852]
[153.69860840 546.11499023]
[164.22064209 556.83251953]
[173.34584045 568.76190186]
[180.93583679 581.72229004]
[186.87559509 595.51721191]
[191.07504272 609.93743896]
[193.47053528 624.76452637]
[194.02577209 639.77355957]
[192.73229980 654.73706055]
[189.60975647 669.42816162]
[184.70545959 683.62420654]
[178.09376526 697.10998535]
[169.87492371 709.68096924]
[160.17349243 721.14666748]
[149.13656616 731.33319092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[31 192]
[32 191]
[33 190]
[34 189]
[35 188]
[36 187]
[37 186]
[38 185]
[39 184]
[40 183]
[41 166]
[42 165]
[44 163]
[45 162]
[46 161]
[47 160]
[48 158]
[49 157]
[50 156]
[52 154]
[53 153]
[54 152]
[55 151]
[56 150]
[57 149]
[58 148]
[59 147]
[64 146]
[65 145]
[67 142]
[68 141]
[69 140]
[72 136]
[73 135]
[74 133]
[75 132]
[76 131]
[79 129]
[80 128]
[81 127]
[82 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
