%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[100.27258301 737.65716553]
[88.53256989 728.29663086]
[77.87344360 717.72161865]
[68.42018127 706.05615234]
[60.28362274 693.43701172]
[53.55915451 680.01208496]
[48.32562256 665.93878174]
[44.64439011 651.38214111]
[42.55860901 636.51281738]
[42.09274292 621.50512695]
[43.25224686 606.53509521]
[46.02353287 591.77813721]
[50.37410355 577.40734863]
[56.25295639 563.59118652]
[63.59115982 550.49163818]
[72.30267334 538.26232910]
[82.28536987 527.04656982]
[93.42220306 516.97589111]
[105.58259583 508.16839600]
[118.62397766 500.72729492]
[132.39344788 494.73989868]
[146.72955322 490.27636719]
[143.84428406 475.55645752]
[140.95899963 460.83657837]
[138.07373047 446.11666870]
[128.03280640 435.11535645]
[132.97113037 420.08459473]
[130.08586121 405.36471558]
[127.20059204 390.64483643]
[124.31532288 375.92492676]
[121.43004608 361.20504761]
[118.54477692 346.48513794]
[115.65950012 331.76525879]
[106.41411591 343.57723999]
[91.54162598 345.52890015]
[79.56166077 336.50222778]
[77.33690643 321.66815186]
[86.14178467 309.52426147]
[100.93247223 307.02713013]
[113.23567200 315.60647583]
[111.67514801 300.68786621]
[110.11462402 285.76925659]
[108.55410004 270.85064697]
[99.53470612 258.99737549]
[105.79432678 244.46714783]
[93.66548920 238.88742065]
[85.81458282 227.95547485]
[84.37915039 214.46440125]
[89.84047699 201.92675781]
[100.87012482 193.66009521]
[99.53189087 178.71990967]
[90.68997192 166.73367310]
[97.16522217 152.29824829]
[95.82698822 137.35806274]
[94.48875427 122.41787720]
[93.15052032 107.47769165]
[89.35191345 100.36832428]
[91.90528107 92.30537415]
[90.78962708 77.34691620]
[89.67398071 62.38846588]
[86.73359680 58.07555389]
[85.83176422 53.52143478]
[86.71900940 49.54301071]
[88.85776520 46.73978424]
[88.41115570 31.74643517]
[79.57564545 22.34981346]
[79.51233673 9.85262299]
[87.70976257 0.95718741]
[87.48642731 -14.04115009]
[87.26309967 -29.03948784]
[87.03977203 -44.03782654]
[86.81644440 -59.03616333]
[86.59311676 -74.03450012]
[86.36978912 -89.03283691]
[86.14646149 -104.03117371]
[85.92313385 -119.02951050]
[85.69980621 -134.02784729]
[77.75790405 -147.71128845]
[85.30485535 -160.55235291]
[85.08152771 -175.55068970]
[84.85820007 -190.54902649]
[84.63487244 -205.54736328]
[84.41154480 -220.54570007]
[84.18821716 -235.54403687]
[83.96488953 -250.54237366]
[74.15708160 -266.12725830]
[83.29576111 -281.10894775]
[75.15100861 -294.67263794]
[82.50594330 -307.62463379]
[74.36119080 -321.18832397]
[81.71611786 -334.14031982]
[81.26951599 -349.13366699]
[80.82290649 -364.12701416]
[80.37630463 -379.12036133]
[65.75889587 -382.92932129]
[52.80741501 -390.70336914]
[42.57177353 -401.81228638]
[35.88173294 -415.35556030]
[33.27962112 -430.23526001]
[34.97638321 -445.24517822]
[40.83447266 -459.16854858]
[50.37899017 -470.87658691]
[62.83621597 -479.42025757]
[77.19629669 -484.10693359]
[92.29511261 -484.55667114]
[106.90868378 -480.73306274]
[119.85235596 -472.94601440]
[130.07682800 -461.82678223]
[136.75326538 -448.27682495]
[139.34042358 -433.39450073]
[137.62858582 -418.38629150]
[131.75651550 -404.46884155]
[122.20023346 -392.77035522]
[109.73442841 -384.23922729]
[95.36965179 -379.56698608]
[95.81626129 -364.57363892]
[96.26286316 -349.58029175]
[96.70947266 -334.58694458]
[104.82228088 -322.09567261]
[97.49929047 -308.07125854]
[105.61209869 -295.57998657]
[98.28911591 -281.55557251]
[106.87556458 -273.03503418]
[107.37034607 -260.54748535]
[98.96322632 -250.76570129]
[99.18655396 -235.76736450]
[99.40988159 -220.76902771]
[99.63320923 -205.77069092]
[99.85653687 -190.77235413]
[100.07986450 -175.77401733]
[100.30319214 -160.77568054]
[108.22912598 -148.16502380]
[100.69814301 -134.25117493]
[100.92147064 -119.25283813]
[101.14480591 -104.25450134]
[101.36813354 -89.25616455]
[101.59146118 -74.25782776]
[101.81478882 -59.25949097]
[102.03811646 -44.26115417]
[102.26144409 -29.26281548]
[102.48477173 -14.26447773]
[102.70809937 0.73385972]
[112.50662994 15.29255486]
[103.40451050 31.29982948]
[103.85111237 46.29317856]
[104.63243866 61.27281570]
[105.74808502 76.23126984]
[106.86373138 91.18972015]
[108.09070587 106.13945770]
[109.42893982 121.07964325]
[110.76717377 136.01982117]
[112.10540771 150.96000671]
[121.04304504 164.01486206]
[114.47207642 177.38166809]
[115.81031036 192.32185364]
[130.44351196 200.80511475]
[137.07109070 216.18615723]
[133.26304626 232.32493591]
[120.71292877 242.90663147]
[129.84394836 255.82696533]
[123.47270966 269.29013062]
[125.03323364 284.20874023]
[126.59375000 299.12734985]
[128.15428162 314.04592896]
[130.37939453 328.87997437]
[133.26466370 343.59988403]
[136.14993286 358.31976318]
[139.03521729 373.03967285]
[141.92048645 387.75955200]
[144.80575562 402.47943115]
[147.69102478 417.19934082]
[157.93832397 429.25350952]
[152.79362488 443.23141479]
[155.67889404 457.95129395]
[158.56416321 472.67120361]
[161.44944763 487.39108276]
[176.40977478 486.11218262]
[191.42068481 486.45828247]
[206.30618286 488.42538452]
[220.89172363 491.99035645]
[235.00631714 497.11145020]
[248.48446655 503.72857666]
[261.16815186 511.76422119]
[272.90869141 521.12408447]
[283.56835938 531.69848633]
[293.02224731 543.36346436]
[301.15948486 555.98217773]
[307.88467407 569.40679932]
[313.11898804 583.47979736]
[316.80099487 598.03619385]
[318.88757324 612.90545654]
[319.35424805 627.91308594]
[318.19555664 642.88317871]
[315.42504883 657.64031982]
[311.07525635 672.01135254]
[305.19714355 685.82781982]
[297.85964966 698.92773438]
[289.14880371 711.15753174]
[279.16668701 722.37384033]
[268.03039551 732.44506836]
[255.87049866 741.25323486]
[242.82951355 748.69500732]
[229.06036377 754.68316650]
[214.72450256 759.14752197]
[199.98999023 762.03564453]
[185.02958679 763.31372070]
[170.01869202 762.96679688]
[155.13330078 760.99890137]
[140.54795837 757.43316650]
[126.43363190 752.31134033]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 176]
[23 175]
[24 174]
[25 173]
[27 171]
[28 170]
[29 169]
[30 168]
[31 167]
[32 166]
[33 165]
[40 164]
[41 163]
[42 162]
[43 161]
[45 159]
[50 155]
[51 154]
[53 152]
[54 151]
[55 150]
[56 149]
[58 148]
[59 147]
[60 146]
[64 145]
[65 144]
[68 142]
[69 141]
[70 140]
[71 139]
[72 138]
[73 137]
[74 136]
[75 135]
[76 134]
[77 133]
[79 131]
[80 130]
[81 129]
[82 128]
[83 127]
[84 126]
[85 125]
[87 122]
[89 120]
[91 118]
[92 117]
[93 116]
[94 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
