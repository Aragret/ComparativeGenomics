%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCACAUACUUGUACUCCCACAAAAGAGCACACUUACUCCCAAAAUACAACAAUUACACCACCCACUCACUCGGGGUAACACAACACCAUUUAUACAUCUxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[286.73287964 432.37374878]
[279.45965576 419.25506592]
[272.18643188 406.13638306]
[259.24832153 398.75704956]
[259.32373047 382.93600464]
[252.05050659 369.81732178]
[244.77728271 356.69863892]
[237.21290588 343.74563599]
[229.36114502 330.96478271]
[221.50939941 318.18392944]
[205.64982605 310.67120361]
[205.30041504 292.26034546]
[197.25923157 279.59783936]
[189.21806335 266.93530273]
[181.17689514 254.27278137]
[173.13571167 241.61026001]
[165.09454346 228.94772339]
[157.05337524 216.28520203]
[149.01220703 203.62268066]
[140.97102356 190.96015930]
[135.20526123 204.80775452]
[120.82664490 209.08036804]
[108.43454742 200.62838745]
[107.16397095 185.68229675]
[117.95153046 175.25979614]
[132.84364319 177.04309082]
[118.55834961 172.98527527]
[111.19274902 159.67353821]
[115.54581451 144.71730042]
[102.71900177 137.14616394]
[103.02997589 121.32801056]
[95.95287323 108.10248566]
[92.45760345 106.47293091]
[89.69758606 103.31062317]
[88.34125519 98.97848511]
[88.87006378 94.12460327]
[82.39056396 80.59625244]
[75.91107178 67.06790924]
[69.43157959 53.53956223]
[62.95207977 40.01121902]
[48.31726074 34.67644882]
[41.93884659 20.86447906]
[47.11492157 6.94529104]
[40.63542557 -6.58305454]
[40.04766083 8.40542507]
[34.91599274 22.50031662]
[25.72953796 34.35818481]
[13.36389160 42.84881210]
[-1.00233316 47.16292953]
[-15.99983788 46.88933945]
[-30.19915581 42.05411911]
[-42.24689865 33.11812973]
[-50.99475479 20.93309784]
[-55.60893250 6.66041851]
[-55.64963531 -8.33952618]
[-51.11298370 -22.63703728]
[-42.43138885 -34.86936569]
[-30.43231964 -43.87060547]
[-16.25945091 -48.78281784]
[-1.26365232 -49.13779831]
[13.12577343 -44.90171051]
[25.53731918 -36.47831726]
[34.78854752 -24.66948891]
[32.12274933 -39.43070602]
[29.45695496 -54.19192123]
[26.79115868 -68.95314026]
[24.12536430 -83.71435547]
[21.45956802 -98.47557831]
[18.79377365 -113.23679352]
[16.12797737 -127.99800873]
[13.02386761 -142.67330933]
[9.48419476 -157.24967957]
[4.18845463 -143.21562195]
[-6.96111774 -133.18132019]
[-21.47368050 -129.38848877]
[-36.10708618 -132.68446350]
[-47.59220123 -142.33288574]
[-53.36321640 -156.17829895]
[-52.13087082 -171.12759399]
[-44.17047882 -183.84104919]
[-31.26041031 -191.47846985]
[-16.28480721 -192.33361816]
[-2.58925581 -186.21545410]
[6.76662970 -174.49078369]
[5.65098095 -189.44923401]
[-3.09129834 -202.63571167]
[3.67796063 -215.90319824]
[2.56231189 -230.86164856]
[1.44666314 -245.82011414]
[-8.27499962 -234.39691162]
[-23.04341507 -231.77130127]
[-36.10666656 -239.14364624]
[-41.49240494 -253.14343262]
[-36.73834610 -267.37011719]
[-24.01798439 -275.31948853]
[-9.14689541 -273.35717773]
[1.07679057 -262.37863159]
[1.52339649 -277.37197876]
[1.97000241 -292.36532593]
[-11.90871811 -298.56610107]
[-22.35441971 -309.60943604]
[-27.77420998 -323.81137085]
[-27.34160805 -339.00613403]
[-21.12258530 -352.87667847]
[-10.06549644 -363.30786133]
[4.14353323 -368.70895386]
[19.33772850 -368.25637817]
[33.20008850 -362.01910400]
[43.61669922 -350.94830322]
[48.99910736 -336.73217773]
[48.52653122 -321.53860474]
[42.27103806 -307.68444824]
[31.18654251 -297.28240967]
[16.96335220 -291.91870117]
[16.51674652 -276.92535400]
[16.07014084 -261.93200684]
[16.40511703 -246.93576050]
[17.52076530 -231.97731018]
[18.63641357 -217.01884460]
[27.29889488 -204.90229797]
[20.60943413 -190.56488037]
[21.72508240 -175.60643005]
[24.06056976 -160.78935242]
[27.60024261 -146.21298218]
[29.92126465 -144.64103699]
[31.75946999 -142.05500793]
[32.72548294 -138.63415527]
[32.50196457 -134.69529724]
[30.88919449 -130.66380310]
[33.55498886 -115.90258789]
[36.22078705 -101.14137268]
[38.88658142 -86.38014984]
[41.55237579 -71.61893463]
[44.21817017 -56.85771942]
[46.88396835 -42.09650040]
[49.54976273 -27.33528328]
[54.16377258 -13.06255054]
[60.64326859 0.46579498]
[74.73313141 5.15742779]
[81.49697876 18.78479195]
[76.48042297 33.53172302]
[82.95992279 47.06007004]
[89.43941498 60.58841324]
[95.91891479 74.11676025]
[102.39840698 87.64510345]
[109.17839813 101.02537537]
[116.25550842 114.25090790]
[129.58851624 122.76802826]
[128.77134705 137.64019775]
[143.62977600 142.31617737]
[150.61856079 155.82955933]
[146.06916809 169.96598816]
[153.63354492 182.91897583]
[161.67472839 195.58151245]
[169.71589661 208.24403381]
[177.75706482 220.90655518]
[185.79824829 233.56907654]
[193.83941650 246.23161316]
[201.88058472 258.89413452]
[209.92176819 271.55667114]
[217.96293640 284.21917725]
[230.35823059 287.78561401]
[236.79505920 298.49780273]
[234.29023743 310.33218384]
[242.14199829 323.11303711]
[249.99374390 335.89385986]
[254.58468628 338.37789917]
[257.47470093 342.01123047]
[258.51089478 345.95349121]
[257.89596558 349.42538452]
[265.16921997 362.54409790]
[272.44244385 375.66278076]
[285.90078735 383.98046875]
[285.30511475 398.86315918]
[292.57833862 411.98184204]
[299.85156250 425.10052490]
[314.04458618 420.13400269]
[328.87283325 417.63772583]
[343.90963745 417.68350220]
[358.72241211 420.27001953]
[372.88491821 425.32287598]
[385.98968506 432.69665527]
[397.65969849 442.17922974]
[407.55914307 453.49774170]
[415.40319824 466.32656860]
[420.96618652 480.29656982]
[424.08807373 495.00582886]
[424.67898560 510.03109741]
[422.72195435 524.94012451]
[418.27328491 539.30383301]
[411.46096802 552.70910645]
[402.48098755 564.77008057]
[391.59176636 575.13989258]
[379.10653687 583.52008057]
[365.38461304 589.66955566]
[350.82073975 593.41143799]
[335.83395386 594.63800049]
[320.85546875 593.31396484]
[306.31625366 589.47741699]
[292.63458252 583.23876953]
[280.20419312 574.77752686]
[269.38262939 564.33709717]
[260.48135376 552.21789551]
[253.75637817 538.76867676]
[249.40124512 524.37628174]
[247.54125977 509.45486450]
[248.22991943 494.43374634]
[251.44741821 479.74511719]
[257.10119629 465.81161499]
[265.02856445 453.03408813]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 176]
[2 175]
[3 174]
[5 172]
[6 171]
[7 170]
[8 166]
[9 165]
[10 164]
[12 161]
[13 160]
[14 159]
[15 158]
[16 157]
[17 156]
[18 155]
[19 154]
[20 153]
[26 152]
[29 149]
[31 147]
[32 146]
[36 145]
[37 144]
[38 143]
[39 142]
[40 141]
[43 138]
[44 137]
[63 136]
[64 135]
[65 134]
[66 133]
[67 132]
[68 131]
[69 130]
[70 129]
[71 124]
[72 123]
[84 122]
[85 121]
[87 119]
[88 118]
[89 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
