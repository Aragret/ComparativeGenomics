%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[46.95852280 726.53063965]
[32.43019104 730.28381348]
[17.68938065 733.08874512]
[2.79792595 734.93359375]
[-12.18171597 735.81060791]
[-27.18671608 735.71624756]
[-42.15413284 734.65075684]
[-57.02119446 732.61865234]
[-71.72554016 729.62841797]
[-86.20549011 725.69268799]
[-100.40031433 720.82794189]
[-114.25047302 715.05456543]
[-127.69786835 708.39678955]
[-140.68611145 700.88244629]
[-153.16070557 692.54321289]
[-165.06935120 683.41394043]
[-176.36207581 673.53302002]
[-186.99151611 662.94177246]
[-196.91310120 651.68475342]
[-206.08520508 639.80908203]
[-214.46937561 627.36462402]
[-222.03042603 614.40356445]
[-228.73663330 600.98022461]
[-234.55990601 587.15093994]
[-239.47578430 572.97375488]
[-243.46366882 558.50805664]
[-246.50682068 543.81463623]
[-248.59248352 528.95495605]
[-249.71189880 513.99151611]
[-249.86038208 498.98693848]
[-249.03732300 484.00421143]
[-247.24613953 469.10620117]
[-244.49436951 454.35540771]
[-240.79356384 439.81362915]
[-236.15921021 425.54193115]
[-230.61077881 411.60012817]
[-224.17152405 398.04672241]
[-216.86846924 384.93853760]
[-208.73222351 372.33056641]
[-199.79693604 360.27572632]
[-190.10008240 348.82452393]
[-179.68231201 338.02502441]
[-168.58735657 327.92251587]
[-156.86172485 318.55938721]
[-144.55459595 309.97488403]
[-131.71762085 302.20501709]
[-118.40461731 295.28237915]
[-104.67142487 289.23602295]
[-90.57566071 284.09130859]
[-76.17642975 279.86978149]
[-61.53414536 276.58917236]
[-46.71021271 274.26324463]
[-31.76681328 272.90176392]
[-16.76662064 272.51040649]
[-1.77255571 273.09082031]
[13.15249348 274.64059448]
[27.94592476 277.15322876]
[42.54568863 280.61816406]
[46.94668579 266.27832031]
[51.34768295 251.93847656]
[55.74868393 237.59863281]
[59.93569565 223.19485474]
[63.90779114 208.73033142]
[58.56255341 192.01519775]
[71.77106476 179.18489075]
[75.52736664 164.66284180]
[79.28366852 150.14077759]
[74.98005676 135.88145447]
[85.92666626 124.45857239]
[89.68296814 109.93651581]
[86.13245392 96.41299438]
[95.79496765 86.30718994]
[99.55126953 71.78512573]
[103.30757141 57.26306915]
[107.06387329 42.74100876]
[110.82017517 28.21895027]
[114.57647705 13.69689083]
[113.18003082 8.66727448]
[113.79136658 4.06514835]
[115.91143036 0.58371216]
[118.83835602 -1.38235974]
[123.23934937 -15.72220707]
[127.64035034 -30.06205368]
[132.04135132 -44.40190125]
[136.44235229 -58.74174881]
[139.32762146 -73.46163940]
[140.66584778 -88.40182495]
[142.00408936 -103.34201050]
[143.34231567 -118.28219604]
[144.68055725 -133.22238159]
[146.01878357 -148.16256714]
[143.66748047 -156.98918152]
[147.48979187 -163.31466675]
[149.05030823 -178.23326111]
[150.61083984 -193.15187073]
[152.17135620 -208.07048035]
[153.73188782 -222.98907471]
[139.59039307 -228.23016357]
[127.19704437 -236.82411194]
[117.33091736 -248.23071289]
[110.61219788 -261.73291016]
[107.46321869 -276.48196411]
[108.08193970 -291.55075073]
[112.42945862 -305.99200439]
[120.23249817 -318.89794922]
[131.00053406 -329.45730591]
[144.05670166 -337.00631714]
[158.58026123 -341.07040405]
[173.65826416 -341.39416504]
[188.34288025 -337.95718384]
[201.71102905 -330.97552490]
[212.92237854 -320.88809204]
[221.27217102 -308.32894897]
[226.23553467 -294.08761597]
[227.50045776 -279.05926514]
[224.98744202 -264.18865967]
[218.85446167 -250.41050720]
[209.48701477 -238.59095764]
[197.47396851 -229.47297668]
[183.57046509 -223.62974548]
[168.65048218 -221.42855835]
[167.08996582 -206.50994873]
[165.52943420 -191.59135437]
[163.96891785 -176.67274475]
[162.40838623 -161.75413513]
[160.95896912 -146.82432556]
[159.62074280 -131.88414001]
[158.28250122 -116.94396210]
[156.94427490 -102.00377655]
[155.60603333 -87.06359100]
[154.26780701 -72.12340546]
[163.00949097 -84.31286621]
[175.70973206 -92.29433441]
[190.48452759 -94.88380432]
[205.14212036 -91.69715118]
[217.50816345 -83.20708466]
[225.74819946 -70.67305756]
[228.63987732 -55.95442581]
[225.75424194 -41.23460388]
[217.51936340 -28.69719505]
[205.15681458 -20.20204544]
[190.50053406 -17.00936127]
[175.72467041 -19.59275818]
[163.02114868 -27.56900406]
[154.27445984 -39.75487137]
[150.78219604 -54.34075165]
[146.38119507 -40.00090408]
[141.98019409 -25.66105652]
[137.57919312 -11.32120895]
[133.17820740 3.01863837]
[129.09854126 17.45319176]
[125.34223175 31.97525024]
[121.58592987 46.49731064]
[117.82963562 61.01936722]
[114.07333374 75.54142761]
[110.31703186 90.06348419]
[113.86754608 103.58700562]
[104.20503235 113.69281006]
[100.44873047 128.21487427]
[104.48365784 143.51290894]
[93.80572510 153.89707947]
[90.04942322 168.41914368]
[86.29312134 182.94119263]
[92.15452576 194.43061829]
[88.72692871 206.44874573]
[78.37231445 212.70242310]
[74.40021515 227.16694641]
[75.69954681 233.64949036]
[73.81319427 239.01033020]
[70.08853149 241.99963379]
[65.68753052 256.33947754]
[61.28653336 270.67932129]
[56.88553619 285.01916504]
[70.91544342 290.34088135]
[84.57145691 296.55957031]
[97.79629517 303.64920044]
[110.53448486 311.57998657]
[122.73259735 320.31869507]
[134.33947754 329.82864380]
[145.30642700 340.06997681]
[155.58746338 350.99972534]
[165.13945007 362.57202148]
[173.92233276 374.73837280]
[181.89926147 387.44772339]
[189.03678894 400.64675903]
[195.30497742 414.28012085]
[200.67752075 428.29064941]
[205.13189697 442.61953735]
[208.64942932 457.20672607]
[211.21534729 471.99099731]
[212.81890869 486.91036987]
[213.45336914 501.90225220]
[213.11607361 516.90374756]
[211.80844116 531.85198975]
[209.53593445 546.68420410]
[206.30812073 561.33819580]
[202.13851929 575.75256348]
[197.04461670 589.86676025]
[191.04779053 603.62164307]
[184.17317200 616.95953369]
[176.44963074 629.82440186]
[167.90953064 642.16241455]
[158.58869934 653.92169189]
[148.52622986 665.05297852]
[137.76434326 675.50958252]
[126.34817505 685.24768066]
[114.32559967 694.22631836]
[101.74704742 702.40795898]
[88.66527557 709.75817871]
[75.13515472 716.24627686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 173]
[59 172]
[60 171]
[61 170]
[62 167]
[63 166]
[65 163]
[66 162]
[67 161]
[69 159]
[70 158]
[72 156]
[73 155]
[74 154]
[75 153]
[76 152]
[77 151]
[81 150]
[82 149]
[83 148]
[84 147]
[85 146]
[86 131]
[87 130]
[88 129]
[89 128]
[90 127]
[91 126]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
