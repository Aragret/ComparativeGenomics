%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxAUAGUGGUGAGACAAGCGUCGUCAGACGCGGGAAUGUGUUUUACUGUAGUUUUUUUAGCAUCGGAAGAGGUGAAGUUCAGUUGAUCCUGAGUAUUAUCAA\
) } def
/len { sequence length } bind def

/coor [
[108.48410797 591.04766846]
[103.85972595 605.35797119]
[96.82047272 618.64782715]
[87.58024597 630.51330566]
[76.41986084 640.59381104]
[63.67845917 648.58306885]
[49.74324036 654.23822021]
[35.03768158 657.38745117]
[20.00866890 657.93505859]
[5.11291456 655.86437988]
[-9.19691467 651.23840332]
[-22.48596191 644.19763184]
[-34.35038376 634.95605469]
[-44.42963791 623.79455566]
[-52.41742325 611.05224609]
[-58.07100296 597.11639404]
[-61.21857452 582.41046143]
[-61.76447678 567.38140869]
[-59.69213104 552.48583984]
[-55.06450653 538.17657471]
[-48.02223206 524.88830566]
[-38.77931976 513.02496338]
[-27.61664391 502.94696045]
[-14.87343216 494.96060181]
[-0.93693256 489.30862427]
[13.76933956 486.16271973]
[28.79847717 485.61849976]
[43.69375992 487.69253540]
[48.30776978 473.41983032]
[52.92177963 459.14709473]
[57.53578949 444.87435913]
[62.14979935 430.60162354]
[66.33680725 416.19784546]
[70.09310913 401.67578125]
[73.84941101 387.15371704]
[77.60571289 372.63165283]
[80.70982361 357.95635986]
[83.15554810 343.15707397]
[85.60127258 328.35781860]
[88.04700470 313.55853271]
[90.49272919 298.75927734]
[92.93846130 283.95999146]
[95.38418579 269.16073608]
[97.82991028 254.36145020]
[98.72273254 239.38804626]
[98.05294037 224.40301514]
[97.38315582 209.41796875]
[96.71337128 194.43293762]
[96.04358673 179.44789124]
[87.74570465 167.07881165]
[94.85907745 152.94691467]
[94.18929291 137.96186829]
[93.51950836 122.97682953]
[81.29178619 114.83018494]
[76.15057373 101.06599426]
[80.04330444 86.89801788]
[91.49545288 77.69295502]
[90.82566833 62.70791245]
[90.15588379 47.72287369]
[89.48609924 32.73783493]
[88.70478058 17.75819778]
[87.81195831 2.78479266]
[78.70059204 -6.34459734]
[78.26522064 -18.83436203]
[86.19416046 -27.96992111]
[85.52437592 -42.95495987]
[84.85459137 -57.93999863]
[84.18480682 -72.92504120]
[71.40313721 -81.52359009]
[66.19627380 -95.83239746]
[70.36405945 -110.29245758]
[82.10678864 -119.41640472]
[81.43700409 -134.40144348]
[73.09120941 -147.84236145]
[80.25248718 -160.90243530]
[79.58270264 -175.88746643]
[78.91291809 -190.87251282]
[64.78492737 -192.81974792]
[51.21804428 -197.20491028]
[38.62943649 -203.89184570]
[27.40596581 -212.67361450]
[17.89228439 -223.27899170]
[10.38026714 -235.38070679]
[5.10005140 -248.60566711]
[2.21298504 -262.54635620]
[1.80670047 -276.77349854]
[3.89245176 -290.84918213]
[8.40480900 -304.34033203]
[15.20370770 -316.83218384]
[24.07879829 -327.94082642]
[34.75595474 -337.32516479]
[46.90573502 -344.69732666]
[60.15355682 -349.83145142]
[74.09123993 -352.57073975]
[73.86791229 -367.56909180]
[73.64458466 -382.56741333]
[73.42125702 -397.56576538]
[59.17818832 -402.80975342]
[47.79386520 -412.84774780]
[40.80791473 -426.32220459]
[39.16513443 -441.41082764]
[43.08769226 -456.07293701]
[52.04510117 -468.32565308]
[64.82594299 -476.51190186]
[79.70170593 -479.52453613]
[94.66057587 -476.95614624]
[107.67948151 -469.15408325]
[116.99772644 -457.17346191]
[121.35509491 -442.63464355]
[120.16228485 -427.50381470]
[113.58061981 -413.82733154]
[102.50021362 -403.45483398]
[88.41959381 -397.78909302]
[88.64292145 -382.79074097]
[88.86624908 -367.79241943]
[89.08957672 -352.79406738]
[104.62414551 -350.06372070]
[119.33881378 -344.37176514]
[132.67456055 -335.93258667]
[144.12438965 -325.06494141]
[153.25260925 -312.18002319]
[159.71139526 -297.76568604]
[163.25405884 -282.36828613]
[163.74446106 -266.57168579]
[161.16226196 -250.97531128]
[155.60371399 -236.17124939]
[147.27810669 -222.72192383]
[136.49992371 -211.13862610]
[123.67686462 -201.86209106]
[109.29452515 -195.24575806]
[93.89795685 -191.54229736]
[94.56774139 -176.55725098]
[95.23752594 -161.57221985]
[103.53541565 -149.20312500]
[96.42204285 -135.07122803]
[97.09182739 -120.08619690]
[109.60172272 -112.04626465]
[115.04296112 -98.01569366]
[111.13342285 -83.29940796]
[99.16984558 -73.59482574]
[99.83963013 -58.60978317]
[100.50941467 -43.62474442]
[101.17919922 -28.63970757]
[111.40686035 -14.37920475]
[102.78536987 1.89197683]
[103.67818451 16.86538315]
[107.21423340 23.35523033]
[104.47113800 32.06805038]
[105.14092255 47.05308914]
[105.81070709 62.03812790]
[106.48049164 77.02317047]
[118.70821381 85.16981506]
[123.84942627 98.93400574]
[119.95669556 113.10198212]
[108.50454712 122.30704498]
[109.17433167 137.29208374]
[109.84411621 152.27713013]
[118.18991089 165.71804810]
[111.02862549 178.77810669]
[111.69841003 193.76315308]
[112.36819458 208.74818420]
[113.03797913 223.73323059]
[113.70777130 238.71826172]
[120.74256134 225.47018433]
[132.26261902 215.86351013]
[146.55900574 211.32331848]
[161.51094055 212.52314758]
[174.90039062 219.28498840]
[184.74111938 230.60575867]
[189.57330322 244.80612183]
[188.68013000 259.77951050]
[182.19407654 273.30471802]
[171.07731628 283.37533569]
[156.97895813 288.49749756]
[141.99041748 287.91131592]
[128.33514404 281.70379639]
[118.03882599 270.79574585]
[112.62918091 256.80718994]
[110.18345642 271.60644531]
[107.73773193 286.40573120]
[105.29199982 301.20498657]
[102.84627533 316.00427246]
[100.40054321 330.80352783]
[97.95481873 345.60281372]
[95.50909424 360.40206909]
[108.30207062 352.57009888]
[122.91773987 355.94384766]
[130.98358154 368.59066772]
[127.87912750 383.26589966]
[115.38272858 391.56289673]
[100.65290833 388.72875977]
[92.12776947 376.38796997]
[88.37146759 390.91000366]
[84.61516571 405.43206787]
[80.85887146 419.95413208]
[82.16732025 424.09442139]
[82.09726715 428.03897095]
[80.87949371 431.37850952]
[78.85404205 433.82067871]
[76.42253113 435.21563721]
[71.80852509 449.48837280]
[67.19451141 463.76107788]
[62.58050537 478.03381348]
[57.96649551 492.30654907]
[71.25713348 499.34429932]
[83.12365723 508.58319092]
[93.20543671 519.74243164]
[101.19611359 532.48291016]
[106.85285950 546.41748047]
[110.00376129 561.12268066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 204]
[29 203]
[30 202]
[31 201]
[32 200]
[33 195]
[34 194]
[35 193]
[36 192]
[37 185]
[38 184]
[39 183]
[40 182]
[41 181]
[42 180]
[43 179]
[44 178]
[45 163]
[46 162]
[47 161]
[48 160]
[49 159]
[51 157]
[52 156]
[53 155]
[57 151]
[58 150]
[59 149]
[60 148]
[61 146]
[62 145]
[65 143]
[66 142]
[67 141]
[68 140]
[72 136]
[73 135]
[75 133]
[76 132]
[77 131]
[94 116]
[95 115]
[96 114]
[97 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
