%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[149.19340515 876.22930908]
[134.70169067 872.34466553]
[120.42916107 867.71917725]
[106.41367340 862.36505127]
[92.69239807 856.29656982]
[79.30171204 849.52972412]
[66.27712250 842.08258057]
[53.65318298 833.97479248]
[41.46336365 825.22784424]
[29.73998260 815.86499023]
[18.51413536 805.91107178]
[7.81558943 795.39245605]
[-2.32728505 784.33703613]
[-11.88759041 772.77416992]
[-20.83997345 760.73443604]
[-29.16069603 748.24981689]
[-36.82769394 735.35339355]
[-43.82062912 722.07940674]
[-50.12096405 708.46301270]
[-55.71199036 694.54034424]
[-60.57888031 680.34832764]
[-64.70872498 665.92456055]
[-68.09058380 651.30731201]
[-70.71546936 636.53540039]
[-72.57643890 621.64788818]
[-73.66854858 606.68438721]
[-73.98890686 591.68444824]
[-73.53665924 576.68792725]
[-72.31301117 561.73455811]
[-70.32119751 546.86401367]
[-67.56651306 532.11572266]
[-64.05625153 517.52880859]
[-59.79972839 503.14193726]
[-54.80822754 488.99325562]
[-49.09498978 475.12026978]
[-42.67516327 461.55981445]
[-35.56576920 448.34783936]
[-27.78566360 435.51934814]
[-19.35548019 423.10836792]
[-10.29756927 411.14782715]
[-0.63595486 399.66943359]
[9.60374355 388.70361328]
[20.39437294 378.27947998]
[31.70731544 368.42465210]
[43.51257324 359.16528320]
[55.77884293 350.52590942]
[68.47359467 342.52941895]
[81.56315613 335.19708252]
[95.01283264 328.54827881]
[108.78694153 322.60064697]
[122.84896851 317.36999512]
[137.16162109 312.87017822]
[133.40531921 298.34811401]
[129.64901733 283.82608032]
[125.89271545 269.30401611]
[122.30524445 266.15136719]
[120.66014862 260.71163940]
[122.24764252 254.29359436]
[118.92537689 239.66612244]
[115.60311890 225.03866577]
[112.11110687 221.78062439]
[110.62870026 216.29432678]
[112.40657806 209.92637634]
[109.52130890 195.20648193]
[106.63603210 180.48660278]
[103.75076294 165.76670837]
[100.86548615 151.04681396]
[97.98021698 136.32691956]
[95.73169708 134.65290833]
[94.01080322 131.98736572]
[93.19850159 128.52679443]
[93.59767914 124.60185242]
[95.38885498 120.64639282]
[93.38484192 105.78086853]
[91.12640381 103.73416901]
[89.56276703 100.82048035]
[89.01647186 97.29557037]
[89.71107483 93.53076172]
[91.73139191 89.97389221]
[90.61574554 75.01544189]
[89.50009155 60.05698776]
[80.75781250 46.87051392]
[87.52706909 33.60301971]
[86.30009460 18.65328598]
[84.96186066 3.71310091]
[83.62362671 -11.22708416]
[82.28539276 -26.16726875]
[73.45705414 -14.04042244]
[59.22275162 -9.30918312]
[44.89152908 -13.73818588]
[35.80857849 -25.67552185]
[35.36161804 -40.66886139]
[43.71734619 -53.12606049]
[57.75929260 -58.40088654]
[72.25015259 -54.52596664]
[81.78562164 -42.94545746]
[82.23223114 -57.93880844]
[82.67883301 -72.93215942]
[83.12544250 -87.92550659]
[69.24671936 -94.12628174]
[58.80101776 -105.16963959]
[53.38122940 -119.37155151]
[53.81383133 -134.56632996]
[60.03285217 -148.43687439]
[71.08994293 -158.86804199]
[85.29897308 -164.26914978]
[100.49317169 -163.81655884]
[114.35552979 -157.57929993]
[124.77214050 -146.50849915]
[130.15454102 -132.29237366]
[129.68197632 -117.09878540]
[123.42647552 -103.24464417]
[112.34197998 -92.84260559]
[98.11878967 -87.47890472]
[97.67218781 -72.48554993]
[97.22557831 -57.49220276]
[96.77897644 -42.49885178]
[97.22557831 -27.50550270]
[98.56381226 -12.56531811]
[99.90204620 2.37486672]
[101.24028015 17.31505203]
[104.96799469 23.69674110]
[102.48552704 32.48736954]
[111.14801025 44.60391617]
[104.45854950 58.94134140]
[105.57419586 73.89979553]
[106.68984222 88.85824585]
[108.25036621 103.77684784]
[110.25437927 118.64237976]
[112.70011139 133.44165039]
[115.58538055 148.16154480]
[118.47064972 162.88143921]
[121.35592651 177.60131836]
[124.24119568 192.32121277]
[127.12647247 207.04110718]
[130.23057556 221.71641541]
[133.55284119 236.34387207]
[136.87510681 250.97132874]
[140.41477966 265.54769897]
[144.17106628 280.06976318]
[147.92736816 294.59182739]
[151.68367004 309.11389160]
[166.38310242 306.10937500]
[181.21771240 303.86560059]
[196.14816284 302.38842773]
[211.13485718 301.68182373]
[226.13804626 301.74768066]
[241.11796570 302.58575439]
[256.03488159 304.19390869]
[270.84921265 306.56781006]
[285.52172852 309.70120239]
[300.01345825 313.58575439]
[314.28601074 318.21118164]
[328.30151367 323.56518555]
[342.02282715 329.63363647]
[355.41357422 336.40036011]
[368.43820190 343.84747314]
[381.06216431 351.95520020]
[393.25204468 360.70202637]
[404.97549438 370.06481934]
[416.20138550 380.01867676]
[426.89999390 390.53723145]
[437.04293823 401.59259033]
[446.60330200 413.15542603]
[455.55575562 425.19512939]
[463.87655640 437.67968750]
[471.54360962 450.57604980]
[478.53662109 463.85000610]
[484.83703613 477.46636963]
[490.42816162 491.38900757]
[495.29513550 505.58102417]
[499.42504883 520.00476074]
[502.80697632 534.62194824]
[505.43197632 549.39385986]
[507.29302979 564.28131104]
[508.38522339 579.24487305]
[508.70565796 594.24481201]
[508.25350952 609.24133301]
[507.02993774 624.19470215]
[505.03820801 639.06524658]
[502.28359985 653.81353760]
[498.77343750 668.40045166]
[494.51699829 682.78741455]
[489.52557373 696.93609619]
[483.81240845 710.80908203]
[477.39266968 724.36956787]
[470.28335571 737.58160400]
[462.50329590 750.41015625]
[454.07318115 762.82116699]
[445.01535034 774.78179932]
[435.35382080 786.26019287]
[425.11416626 797.22607422]
[414.32360840 807.65026855]
[403.01071167 817.50518799]
[391.20550537 826.76458740]
[378.93930054 835.40405273]
[366.24459839 843.40063477]
[353.15505981 850.73303223]
[339.70541382 857.38195801]
[325.93133545 863.32965088]
[311.86935425 868.56036377]
[297.55673218 873.06024170]
[283.03143311 876.81738281]
[268.33200073 879.82177734]
[253.49737549 882.06549072]
[238.56690979 883.54260254]
[223.58021545 884.24908447]
[208.57702637 884.18316650]
[193.59710693 883.34497070]
[178.68020630 881.73675537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[52 142]
[53 141]
[54 140]
[55 139]
[58 138]
[59 137]
[60 136]
[63 135]
[64 134]
[65 133]
[66 132]
[67 131]
[68 130]
[73 129]
[74 128]
[79 127]
[80 126]
[81 125]
[83 123]
[84 121]
[85 120]
[86 119]
[87 118]
[96 117]
[97 116]
[98 115]
[99 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
