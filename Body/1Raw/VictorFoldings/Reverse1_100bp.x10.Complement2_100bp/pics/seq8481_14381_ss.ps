%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[102.24159241 404.73913574]
[105.17173004 389.98602295]
[110.68923950 375.99328613]
[118.61676025 363.21072388]
[128.69946289 352.04922485]
[140.61322021 342.86761475]
[153.97505188 335.96099854]
[149.57405090 321.62115479]
[145.17304993 307.28131104]
[140.77206421 292.94146729]
[138.36158752 291.51046753]
[136.37271118 289.03842163]
[135.20480347 285.68112183]
[135.19348145 281.73596191]
[136.56343079 277.61560059]
[133.02375793 263.03924561]
[129.48408508 248.46286011]
[125.94441223 233.88648987]
[115.78058624 227.32728577]
[112.71233368 215.21243286]
[118.91322327 203.90261841]
[115.59095764 189.27516174]
[111.18996429 174.93531799]
[105.73460388 160.96252441]
[100.27925110 146.98971558]
[94.82389069 133.01692200]
[93.50714874 147.95901489]
[89.33944702 162.36839294]
[82.47659302 175.70635986]
[73.17514801 187.47424316]
[61.78287506 197.23211670]
[48.72566986 204.61515808]
[34.49168396 209.34736633]
[19.61307144 211.25180054]
[4.64607716 210.25727844]
[-9.84974670 206.40097046]
[-23.33246231 199.82705688]
[-35.29800797 190.78129578]
[-45.29904556 179.60188293]
[-52.96167755 166.70677185]
[-57.99943161 152.57803345]
[-60.22396469 137.74389648]
[-59.55211258 122.75895691]
[-56.00899506 108.18341827]
[-49.72707367 94.56220245]
[-40.94120026 82.40455627]
[-29.97984123 72.16499329]
[-17.25279808 64.22633362]
[-3.23587704 58.88536453]
[11.54688644 56.34176636]
[26.54282951 56.69062805]
[41.19131470 59.91891479]
[54.94470215 65.90592957]
[67.28881073 74.42784119]
[77.76214600 85.16605377]
[85.97315216 97.71911621]
[91.61312103 111.61187744]
[85.71572876 98.93463135]
[93.42842865 87.27247620]
[94.54407501 72.31402588]
[84.63835907 63.18761444]
[81.83842468 50.21183777]
[86.94744873 38.17107391]
[97.89392853 31.37372208]
[99.23216248 16.43353653]
[100.57039642 1.49335194]
[101.90863037 -13.44683266]
[103.24686432 -28.38701820]
[104.58509827 -43.32720184]
[98.10984802 -57.76263428]
[106.95175934 -69.74886322]
[108.29000092 -84.68904877]
[109.62823486 -99.62923431]
[94.79231262 -103.95521545]
[81.08529663 -111.08212280]
[69.02992249 -120.73611450]
[59.08555603 -132.54702759]
[51.63065338 -146.06254578]
[46.94840240 -160.76553345]
[45.21593094 -176.09382629]
[46.49761963 -191.46171570]
[50.74270630 -206.28234863]
[57.78730774 -219.99008179]
[67.36072540 -232.06214905]
[79.09586334 -242.03855896]
[92.54329681 -249.53961182]
[107.18849182 -254.28033447]
[122.47146606 -256.08139038]
[123.58711243 -271.03985596]
[124.70276642 -285.99832153]
[125.81841278 -300.95675659]
[126.93405914 -315.91522217]
[127.93832397 -330.88156128]
[128.83113098 -345.85494995]
[129.72395325 -360.82836914]
[130.61677551 -375.80178833]
[123.71458435 -390.03802490]
[132.19570923 -402.28219604]
[133.08853149 -417.25558472]
[119.16831970 -423.25588989]
[108.14196014 -433.65759277]
[101.34093475 -447.20462036]
[99.58650208 -462.26110840]
[103.09050751 -477.00891113]
[111.42984009 -489.66714478]
[123.59748077 -498.70730591]
[138.12411499 -503.03771973]
[153.25559998 -502.13549805]
[167.16471863 -496.10952759]
[178.17189026 -485.68756104]
[184.94795227 -472.12802124]
[186.67463684 -457.06832886]
[183.14344788 -442.32699585]
[174.78080750 -429.68414307]
[162.59652710 -420.66641235]
[148.06193542 -416.36279297]
[147.16911316 -401.38937378]
[154.13516235 -388.22412109]
[145.59017944 -374.90896606]
[144.69735718 -359.93554688]
[143.80455017 -344.96215820]
[142.91172791 -329.98873901]
[145.65153503 -323.12469482]
[141.89251709 -314.79956055]
[140.77687073 -299.84112549]
[139.66122437 -284.88265991]
[138.54556274 -269.92419434]
[137.42991638 -254.96575928]
[151.51170349 -251.20423889]
[164.66259766 -244.90980530]
[176.43130493 -236.29681396]
[186.41363525 -225.65916443]
[194.26638794 -213.36035156]
[199.71922302 -199.82101440]
[202.58384705 -185.50453186]
[202.76060486 -170.90122986]
[200.24192810 -156.51148987]
[195.11262512 -142.82867432]
[187.54704285 -130.32221985]
[177.80314636 -119.42147064]
[166.21368408 -110.50098419]
[153.17489624 -103.86765289]
[139.13287354 -99.75013733]
[124.56841278 -98.29100037]
[123.23017883 -83.35081482]
[121.89194489 -68.41062927]
[128.46292114 -55.04382324]
[119.52528381 -41.98896790]
[118.18704987 -27.04878426]
[116.84881592 -12.10859871]
[115.51058197 2.83158612]
[114.17234802 17.77177048]
[112.83411407 32.71195602]
[124.15931702 45.14491653]
[122.96480560 62.25888824]
[109.50253296 73.42967224]
[108.38687897 88.38812256]
[114.28427124 101.06536865]
[106.57157135 112.72752380]
[108.79669189 127.56156921]
[114.25204468 141.53436279]
[119.70740509 155.50715637]
[125.16275787 169.47996521]
[129.00126648 154.97941589]
[139.50544739 144.27137756]
[153.92955017 140.15490723]
[168.50314331 143.70602417]
[179.41671753 153.99650574]
[183.81748962 168.33642578]
[180.55513000 182.97735596]
[170.48239136 194.09220886]
[156.23226929 198.77557373]
[141.52970886 195.80323792]
[130.21841431 185.95291138]
[133.54067993 200.58036804]
[146.36132812 213.79824829]
[140.52079773 230.34681702]
[144.06045532 244.92318726]
[147.60012817 259.49957275]
[151.13980103 274.07592773]
[155.11190796 288.54046631]
[159.51290894 302.88031006]
[163.91389465 317.22015381]
[168.31489563 331.55999756]
[183.25068665 329.78186035]
[198.26394653 330.69940186]
[212.87205505 334.28311157]
[226.60542297 340.41781616]
[239.02256775 348.90628052]
[249.72434998 359.47567749]
[258.36672974 371.78619385]
[264.67190552 385.44210815]
[268.43719482 400.00448608]
[269.54153442 415.00515747]
[267.94946289 429.96194458]
[263.71212769 444.39401245]
[256.96575928 457.83746338]
[247.92721558 469.86010742]
[236.88705444 480.07553101]
[224.20016479 488.15527344]
[210.27438354 493.83966064]
[195.55735779 496.94595337]
[180.52218628 497.37429810]
[165.65219116 495.11090088]
[151.42536926 490.22851562]
[138.29907227 482.88415527]
[126.69523621 473.31384277]
[116.98689270 461.82522583]
[109.48611450 448.78765869]
[104.43402863 434.62023926]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 184]
[8 183]
[9 182]
[10 181]
[15 180]
[16 179]
[17 178]
[18 177]
[21 175]
[22 174]
[23 163]
[24 162]
[25 161]
[26 160]
[57 159]
[59 157]
[60 156]
[64 153]
[65 152]
[66 151]
[67 150]
[68 149]
[69 148]
[71 146]
[72 145]
[73 144]
[88 128]
[89 127]
[90 126]
[91 125]
[92 124]
[93 122]
[94 121]
[95 120]
[96 119]
[98 117]
[99 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
