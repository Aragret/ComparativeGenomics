%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxUCUGAUGAAGAGGUAUUAUAAGUAGGGACAUCGUAACAAGCAAUGUACCAGGUAGUAUCUUAAGAGUGACACUAUAUAUUUGAGUCUGGGUUUGUAAUUA\
) } def
/len { sequence length } bind def

/coor [
[60.56859589 727.43536377]
[45.69763947 729.43566895]
[30.73109245 730.50756836]
[15.72685719 730.64691162]
[0.74298155 729.85321045]
[-14.16256332 728.12945557]
[-28.93211174 725.48242188]
[-43.50852203 721.92224121]
[-57.83539963 717.46276855]
[-71.85731506 712.12115479]
[-85.52002716 705.91821289]
[-98.77066803 698.87780762]
[-111.55797577 691.02728271]
[-123.83248138 682.39691162]
[-135.54669189 673.02014160]
[-146.65530396 662.93322754]
[-157.11531067 652.17523193]
[-166.88626099 640.78778076]
[-175.93035889 628.81481934]
[-184.21261597 616.30279541]
[-191.70095825 603.30004883]
[-198.36645508 589.85693359]
[-204.18328857 576.02545166]
[-209.12898254 561.85900879]
[-213.18437195 547.41259766]
[-216.33378601 532.74194336]
[-218.56504822 517.90386963]
[-219.86949158 502.95578003]
[-220.24211121 487.95553589]
[-219.68144226 472.96112061]
[-218.18965149 458.03057861]
[-215.77252197 443.22167969]
[-212.43940735 428.59167480]
[-208.20318604 414.19720459]
[-203.08026123 400.09393311]
[-197.09043884 386.33642578]
[-190.25691223 372.97793579]
[-182.60610962 360.07012939]
[-174.16763306 347.66293335]
[-164.97412109 335.80435181]
[-155.06114197 324.54028320]
[-144.46705627 313.91427612]
[-133.23284912 303.96746826]
[-121.40198517 294.73831177]
[-109.02022552 286.26254272]
[-96.13548279 278.57293701]
[-82.79760742 271.69927979]
[-69.05818939 265.66809082]
[-54.97039795 260.50277710]
[-40.58872986 256.22326660]
[-25.96882629 252.84614563]
[-11.16724873 250.38447571]
[3.75873828 248.84779358]
[18.75138855 248.24201965]
[33.75269699 248.56950378]
[48.70462799 249.82897949]
[63.54933167 252.01559448]
[66.65344238 237.34028625]
[69.75755310 222.66499329]
[72.86166382 207.98968506]
[75.96577454 193.31437683]
[79.06988525 178.63908386]
[82.17399597 163.96377563]
[85.27810669 149.28846741]
[87.83393860 134.50782776]
[89.83795166 119.64229584]
[91.84196472 104.77676392]
[89.68861389 99.99376678]
[90.36837769 94.34476471]
[94.13333893 89.50100708]
[96.57906342 74.70173645]
[96.35573578 59.70339966]
[93.47046661 44.98350906]
[90.58518982 30.26361656]
[87.69992065 15.54372501]
[84.81464386 0.82383335]
[81.92937469 -13.89605808]
[79.04409790 -28.61594963]
[76.15882874 -43.33584213]
[73.27355957 -58.05573273]
[70.38828278 -72.77562714]
[55.35570526 -72.41567993]
[40.47854996 -74.60160065]
[26.18486214 -79.27049255]
[12.88590431 -86.28802490]
[0.96431094 -95.45228577]
[-9.23690987 -106.49959564]
[-17.42424774 -119.11210632]
[-23.36213684 -132.92694092]
[-26.87973213 -147.54660034]
[-27.87582588 -162.55046082]
[-26.32176018 -177.50682068]
[-22.26224518 -191.98536682]
[-15.81408215 -205.56951904]
[-7.16279936 -217.86843872]
[3.44268990 -228.52825928]
[15.69724464 -237.24226379]
[29.24827576 -243.75973511]
[43.70589447 -247.89317322]
[58.65412521 -249.52363586]
[73.66287994 -248.60420227]
[88.30032349 -245.16134644]
[102.14530945 -239.29412842]
[114.79948425 -231.17132568]
[125.89877319 -221.02668762]
[135.12382507 -209.15206909]
[142.20919800 -195.88912964]
[146.95106506 -181.61949158]
[149.21296692 -166.75369263]
[148.92982483 -151.71946716]
[146.10980225 -136.94938660]
[140.83403015 -122.86840057]
[133.25428772 -109.88165283]
[123.58868408 -98.36279297]
[112.11530304 -88.64324951]
[99.16425323 -81.00267792]
[85.10817719 -75.66089630]
[87.99344635 -60.94100571]
[90.87872314 -46.22111511]
[93.76399231 -31.50122261]
[96.64926910 -16.78133011]
[99.53453827 -2.06143928]
[102.41980743 12.65845203]
[105.30508423 27.37834358]
[108.19035339 42.09823608]
[111.07563019 56.81812668]
[115.02128601 42.34636688]
[122.27251434 29.21550179]
[132.41923523 18.16814423]
[144.88758850 9.82907581]
[158.97244263 4.66991186]
[173.87722778 2.98242736]
[188.75898743 4.86205816]
[202.77610779 10.20250225]
[215.13584900 18.70173073]
[225.13919067 29.87907219]
[232.22042847 43.10239410]
[235.97904968 57.62385178]
[236.20249939 72.62218475]
[232.87815857 87.24916840]
[226.19400024 100.67758179]
[216.52807617 112.14796448]
[204.42701721 121.01162720]
[190.57521057 126.76728058]
[175.75604248 129.08941650]
[160.80761719 127.84671021]
[146.57531738 123.10942841]
[133.86407471 115.14550781]
[123.39274597 104.40532684]
[115.75355530 91.49631500]
[111.37833405 77.14746094]
[108.93260956 91.94673157]
[106.70748901 106.78077698]
[104.70347595 121.64630890]
[102.69946289 136.51184082]
[116.02875519 129.63215637]
[129.77990723 135.62429810]
[133.81608582 150.07107544]
[125.16196442 162.32286072]
[110.19704437 163.34808350]
[99.95340729 152.39257812]
[96.84929657 167.06788635]
[93.74518585 181.74319458]
[90.64107513 196.41848755]
[87.53696442 211.09379578]
[84.43285370 225.76910400]
[81.32874298 240.44439697]
[78.22463226 255.11970520]
[92.68331146 259.13131714]
[106.86461639 264.03408813]
[120.71369171 269.80902100]
[134.17694092 276.43374634]
[147.20230103 283.88269043]
[159.73934937 292.12701416]
[171.73960876 301.13482666]
[183.15663147 310.87124634]
[193.94627380 321.29861450]
[204.06675720 332.37661743]
[213.47895813 344.06237793]
[222.14645386 356.31069946]
[230.03569031 369.07418823]
[237.11618042 382.30343628]
[243.36050415 395.94729614]
[248.74450684 409.95297241]
[253.24737549 424.26629639]
[256.85165405 438.83184814]
[259.54345703 453.59329224]
[261.31231689 468.49356079]
[262.15139771 483.47497559]
[262.05749512 498.47955322]
[261.03091431 513.44927979]
[259.07565308 528.32623291]
[256.19927979 543.05285645]
[252.41293335 557.57214355]
[247.73123169 571.82794189]
[242.17231750 585.76513672]
[235.75769043 599.32977295]
[228.51214600 612.46936035]
[220.46372986 625.13305664]
[211.64360046 637.27191162]
[202.08584595 648.83892822]
[191.82746887 659.78936768]
[180.90814209 670.08087158]
[169.37011719 679.67358398]
[157.25804138 688.53045654]
[144.61875916 696.61718750]
[131.50117493 703.90246582]
[117.95604706 710.35815430]
[104.03576660 715.95922852]
[89.79418945 720.68408203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 168]
[58 167]
[59 166]
[60 165]
[61 164]
[62 163]
[63 162]
[64 161]
[65 155]
[66 154]
[67 153]
[70 152]
[71 151]
[72 126]
[73 125]
[74 124]
[75 123]
[76 122]
[77 121]
[78 120]
[79 119]
[80 118]
[81 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
