%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxCGCUACAUUGUGCUCUUUCGUGUAUGGUUCCGGUGGUGUGUGGUGGACAGGUUUUUCCGGAAGCUAUGCCCUAUUAGGAUAAAUAAUGGAGUCUUCAAAA\
) } def
/len { sequence length } bind def

/coor [
[240.92024231 471.59094238]
[253.19604492 462.89498901]
[246.91868591 449.27166748]
[240.64132690 435.64834595]
[234.36396790 422.02502441]
[228.08659363 408.40173340]
[221.80923462 394.77841187]
[215.53187561 381.15509033]
[209.25451660 367.53176880]
[195.23606873 362.63088989]
[188.67585754 348.90432739]
[193.91142273 334.23370361]
[187.63406372 320.61041260]
[181.35668945 306.98709106]
[166.61393738 309.55624390]
[151.69706726 308.22061157]
[137.62345886 303.06524658]
[125.35453033 294.43588257]
[115.73004913 282.91592407]
[109.41071320 269.28671265]
[106.83272552 254.47483826]
[108.17774200 239.48893738]
[113.36006165 225.35105896]
[122.03205872 213.02702332]
[133.60751343 203.36036682]
[127.33014679 189.73704529]
[121.05278778 176.11373901]
[113.48866272 189.06687927]
[98.66811371 191.38020325]
[87.51630402 181.34838867]
[88.25392914 166.36654663]
[100.33723450 157.47869873]
[114.85759735 161.23561096]
[109.61087799 147.18313599]
[104.36415863 133.13066101]
[99.11743927 119.07819366]
[85.97918701 112.96815491]
[80.91102600 99.39392090]
[86.83008575 86.16852570]
[81.58336639 72.11605835]
[69.50778198 61.89398193]
[72.30456543 47.26431274]
[67.05784607 33.21184158]
[63.03045273 29.89112282]
[60.89326477 25.76974869]
[60.63472748 21.70180130]
[61.90599060 18.41299820]
[57.29198456 4.14026451]
[52.67797470 -10.13246918]
[48.06396484 -24.40520287]
[43.44995499 -38.67793655]
[38.83594513 -52.95066833]
[27.22884369 -63.70174789]
[30.67608833 -78.19194794]
[26.03349113 -82.89915466]
[24.66976357 -88.41615295]
[26.14404106 -92.95879364]
[21.95702934 -107.36257172]
[17.77001953 -121.76635742]
[13.58300781 -136.17013550]
[-1.13651061 -133.23461914]
[-16.05389214 -131.57534790]
[-31.05869102 -131.20460510]
[-46.03981400 -132.12510681]
[-60.88634872 -134.33007812]
[-75.48837280 -137.80317688]
[-89.73777008 -142.51869202]
[-103.52904510 -148.44169617]
[-116.76010132 -155.52836609]
[-129.33296204 -163.72619629]
[-141.15454102 -172.97453308]
[-152.13732910 -183.20486450]
[-162.20001221 -194.34147644]
[-171.26806641 -206.30189514]
[-179.27436829 -218.99758911]
[-186.15965271 -232.33454895]
[-191.87292480 -246.21401978]
[-196.37188721 -260.53326416]
[-199.62322998 -275.18624878]
[-201.60287476 -290.06451416]
[-202.29618835 -305.05786133]
[-201.69802856 -320.05532837]
[-199.81280518 -334.94583130]
[-196.65449524 -349.61917114]
[-192.24647522 -363.96667480]
[-186.62139893 -377.88211060]
[-179.82087708 -391.26248169]
[-171.89527893 -404.00872803]
[-162.90328979 -416.02645874]
[-152.91148376 -427.22668457]
[-141.99382019 -437.52648926]
[-130.23115540 -446.84963989]
[-117.71055603 -455.12707520]
[-104.52474213 -462.29754639]
[-90.77131653 -468.30795288]
[-76.55212402 -473.11376953]
[-61.97243118 -476.67944336]
[-47.14018631 -478.97857666]
[-32.16520691 -479.99411011]
[-17.15835762 -479.71856689]
[-2.23074841 -478.15399170]
[12.50709820 -475.31192017]
[26.94606781 -471.21343994]
[40.97925949 -465.88888550]
[54.50276947 -459.37765503]
[67.41647339 -451.72796631]
[79.62477112 -442.99645996]
[91.03726196 -433.24780273]
[101.56945801 -422.55413818]
[111.14337921 -410.99465942]
[119.68814087 -398.65496826]
[127.14048004 -385.62637329]
[133.44522095 -372.00537109]
[138.55569458 -357.89279175]
[142.43405151 -343.39315796]
[145.05157471 -328.61376953]
[146.38888550 -313.66409302]
[146.43611145 -298.65478516]
[145.19285583 -283.69699097]
[142.66836548 -268.90142822]
[138.88130188 -254.37768555]
[133.85971069 -240.23324585]
[127.64079285 -226.57284546]
[120.27056122 -213.49763489]
[111.80359650 -201.10441589]
[102.30258179 -189.48493958]
[91.83787537 -178.72523499]
[80.48693848 -168.90496826]
[68.33381653 -160.09683228]
[55.46848679 -152.36607361]
[41.98620605 -145.76989746]
[27.98678970 -140.35714722]
[32.17380142 -125.95336914]
[36.36081314 -111.54958344]
[40.54782486 -97.14579773]
[44.94882202 -82.80595398]
[56.22589874 -73.07575226]
[53.10868073 -57.56467819]
[57.72268677 -43.29194641]
[62.33669662 -29.01921082]
[66.95070648 -14.74647808]
[71.56472015 -0.47374475]
[76.17872620 13.79898834]
[81.11032104 27.96512413]
[86.35704041 42.01759338]
[98.05734253 51.23454285]
[95.63584137 66.86933899]
[100.88256073 80.92180634]
[114.02081299 87.03184509]
[119.08897400 100.60607910]
[113.16991425 113.83147430]
[118.41663361 127.88394165]
[123.66335297 141.93641663]
[128.91006470 155.98889160]
[134.67610168 169.83636475]
[140.95346069 183.45968628]
[147.23081970 197.08300781]
[162.09999084 194.56448364]
[177.10275269 195.97966003]
[191.21696472 201.22605896]
[203.48262024 209.94044495]
[213.06709290 221.52386475]
[219.32164001 235.18290710]
[221.82539368 249.98397827]
[220.41360474 264.91714478]
[215.18847656 278.96499634]
[206.51182556 291.17208862]
[194.98001099 300.70971680]
[201.25737000 314.33303833]
[207.53472900 327.95635986]
[222.08850098 333.50842285]
[228.26057434 347.41381836]
[222.87783813 361.25442505]
[229.15519714 374.87771606]
[235.43255615 388.50103760]
[241.70991516 402.12435913]
[247.98727417 415.74768066]
[254.26463318 429.37100220]
[260.54199219 442.99429321]
[266.81936646 456.61761475]
[281.40567017 452.93603516]
[296.42013550 451.99758911]
[311.35134888 453.83425903]
[325.69076538 458.38348389]
[338.95001221 465.49032593]
[350.67745972 474.91271973]
[360.47369385 486.32974243]
[368.00503540 499.35256958]
[373.01498413 513.53759766]
[375.33288574 528.40173340]
[374.87982178 543.43865967]
[371.67120361 558.13623047]
[365.81634521 571.99389648]
[357.51461792 584.53967285]
[347.04879761 595.34619141]
[334.77536011 604.04547119]
[321.11227417 610.34112549]
[306.52499390 614.01879883]
[291.51028442 614.95318604]
[276.57955933 613.11248779]
[262.24136353 608.55938721]
[248.98402405 601.44897461]
[237.25912476 592.02343750]
[227.46597290 580.60375977]
[219.93814087 567.57891846]
[214.93202209 553.39251709]
[212.61810303 538.52783203]
[213.07522583 523.49096680]
[216.28779602 508.79425049]
[222.14640808 494.93817139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 180]
[3 179]
[4 178]
[5 177]
[6 176]
[7 175]
[8 174]
[9 173]
[12 170]
[13 169]
[14 168]
[25 157]
[26 156]
[27 155]
[33 154]
[34 153]
[35 152]
[36 151]
[39 148]
[40 147]
[42 145]
[43 144]
[47 143]
[48 142]
[49 141]
[50 140]
[51 139]
[52 138]
[54 136]
[57 135]
[58 134]
[59 133]
[60 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
