%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGCCAAAGAUAAAGGACUCGCAGACUCUACAAUCAUAAUCAAUCAAAACAACACUCACAAUCCUUUUCCCGUAUGUCCUGAUCCUUCGUCUAUUCxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[69.11386871 479.39080811]
[65.77768707 494.10586548]
[58.74580002 507.45556641]
[48.49764252 518.52978516]
[35.73195267 526.57336426]
[21.31911850 531.03796387]
[6.24182987 531.61914062]
[-8.47191906 528.27728271]
[-21.81892014 521.24023438]
[-32.88915253 510.98782349]
[-40.92782593 498.21902466]
[-45.38685608 483.80447388]
[-45.96221924 468.72695923]
[-42.61467743 454.01449585]
[-35.57248306 440.67019653]
[-25.31577492 429.60394287]
[-12.54387856 421.57019043]
[1.87239897 417.11672974]
[16.95013237 416.54718018]
[20.27239227 401.91973877]
[23.59465027 387.29226685]
[26.91691017 372.66479492]
[22.19066048 358.53994751]
[32.79231262 346.79620361]
[35.45811081 332.03497314]
[37.46212387 317.16946411]
[39.46613693 302.30392456]
[37.87575912 299.99548340]
[37.10395050 296.91799927]
[37.44822311 293.38009644]
[39.08895874 289.79226685]
[42.05750275 286.62338257]
[44.94277573 271.90350342]
[47.82804489 257.18362427]
[50.71331787 242.46371460]
[53.59859085 227.74383545]
[56.26438904 212.98260498]
[58.71011353 198.18333435]
[48.63439560 209.29548645]
[34.76788330 215.01562500]
[19.78798866 214.23925781]
[6.58709145 207.11631775]
[-2.28592086 195.02212524]
[-5.11780930 180.29187012]
[-1.36177981 165.76972961]
[8.25693703 154.25973511]
[21.88111687 147.98423767]
[36.88014603 148.15498352]
[50.35794449 154.73896790]
[59.71216202 166.46495056]
[63.13665771 181.07009888]
[68.17357635 166.94107056]
[73.21048737 152.81202698]
[64.66152954 140.64431763]
[64.91974640 125.59781647]
[74.09565735 113.44643402]
[88.83761597 108.97644806]
[86.50777435 95.19010162]
[97.03335571 85.98663330]
[102.07026672 71.85760498]
[106.89626312 57.65515137]
[111.51027679 43.38241577]
[116.12428284 29.10968399]
[120.73829651 14.83694935]
[107.86896515 22.54281425]
[92.91827393 21.32750130]
[81.46247101 11.64429188]
[77.77427673 -2.89521360]
[83.22930145 -16.86814117]
[95.79295349 -25.06293488]
[110.77930450 -24.42313766]
[122.59881592 -15.18737793]
[126.84307098 -0.79919958]
[133.12042236 -14.42251587]
[139.39779663 -28.04583168]
[145.67515564 -41.66914749]
[151.85092163 -55.33881760]
[157.92475891 -69.05408478]
[156.43814087 -84.80529022]
[168.66630554 -93.30948639]
[174.74014282 -107.02474976]
[180.81398010 -120.74001312]
[186.88780212 -134.45527649]
[187.50132751 -143.56909180]
[193.15553284 -148.32847595]
[199.43289185 -161.95179749]
[204.15301514 -176.18978882]
[207.25712585 -190.86508179]
[210.36123657 -205.54039001]
[213.46534729 -220.21569824]
[216.56945801 -234.89099121]
[211.85546875 -249.99360657]
[222.05906677 -260.84420776]
[225.16317749 -275.51950073]
[228.26728821 -290.19482422]
[231.37139893 -304.87011719]
[234.47550964 -319.54541016]
[220.64050293 -325.46817017]
[208.22698975 -333.97644043]
[197.71209717 -344.74322510]
[189.49998474 -357.35461426]
[183.90631104 -371.32592773]
[181.14608765 -386.12008667]
[181.32540894 -401.16848755]
[184.43736267 -415.89266968]
[190.36236572 -429.72671509]
[198.87265015 -442.13885498]
[209.64111328 -452.65200806]
[222.25384521 -460.86206055]
[236.22604370 -466.45349121]
[251.02066040 -469.21130371]
[266.06903076 -469.02957153]
[280.79269409 -465.91522217]
[294.62579346 -459.98797607]
[307.03656006 -451.47567749]
[317.54797363 -440.70553589]
[325.75598145 -428.09146118]
[331.34515381 -414.11834717]
[334.10058594 -399.32330322]
[333.91638184 -384.27496338]
[330.79965210 -369.55178833]
[324.87017822 -355.71966553]
[316.35589600 -343.31027222]
[305.58401489 -332.80059814]
[292.96862793 -324.59460449]
[278.99462891 -319.00772095]
[264.19912720 -316.25469971]
[249.15081787 -316.44131470]
[246.04670715 -301.76602173]
[242.94259644 -287.09069824]
[239.83848572 -272.41540527]
[236.73437500 -257.74011230]
[241.67039490 -243.68716431]
[231.24476624 -231.78688049]
[228.14065552 -217.11158752]
[225.03654480 -202.43627930]
[221.93243408 -187.76097107]
[218.82832336 -173.08567810]
[228.78799438 -184.30195618]
[242.09339905 -191.22772217]
[256.99398804 -192.95173645]
[271.52935791 -189.24720764]
[283.78707886 -180.60151672]
[292.15447998 -168.15216064]
[295.53067017 -153.53704834]
[293.47146606 -138.67907715]
[286.24777222 -125.53303528]
[274.80999756 -115.82853699]
[260.66296387 -110.84236145]
[245.66798401 -111.23053741]
[231.79789734 -116.94198608]
[220.87754822 -127.22526550]
[214.34368896 -140.72744751]
[213.05619812 -155.67443848]
[206.77883911 -142.05111694]
[200.60307312 -128.38145447]
[194.52923584 -114.66618347]
[188.45539856 -100.95091248]
[182.38157654 -87.23564911]
[184.30262756 -72.46544647]
[171.64001465 -62.98025131]
[165.56619263 -49.26498413]
[165.73199463 -41.87619019]
[159.29846191 -35.39178848]
[153.02110291 -21.76847076]
[146.74374390 -8.14515495]
[140.46638489 5.47816133]
[135.01103210 19.45095825]
[130.39701843 33.72369385]
[125.78301239 47.99642563]
[121.16899872 62.26915741]
[122.50737000 66.85367584]
[120.97998810 72.32762909]
[116.19929504 76.89452362]
[111.16238403 91.02355194]
[113.49222565 104.80989838]
[102.96664429 114.01336670]
[111.55638123 126.80096436]
[110.97609711 142.01663208]
[101.65776825 153.83326721]
[87.33951569 157.84895325]
[82.30260468 171.97798157]
[77.26568604 186.10700989]
[73.50938416 200.62907410]
[71.06365967 215.42834473]
[73.03034973 221.74052429]
[71.71194458 227.26852417]
[68.31848145 230.62910461]
[65.43321228 245.34899902]
[62.54793930 260.06887817]
[59.66266632 274.78878784]
[56.77739334 289.50866699]
[54.33166504 304.30795288]
[52.32765198 319.17346191]
[50.32363892 334.03900146]
[62.87775421 325.82958984]
[77.58739471 328.76669312]
[86.02620697 341.16775513]
[83.36006165 355.92889404]
[71.11624146 364.59429932]
[56.30856323 362.19998169]
[47.41977310 350.11846924]
[51.90839386 365.28958130]
[41.54437256 375.98706055]
[38.22211075 390.61453247]
[34.89985275 405.24197388]
[31.57759285 419.86944580]
[44.93002319 426.89617920]
[56.00816727 437.14007568]
[64.05670166 449.90264893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 207]
[20 206]
[21 205]
[22 204]
[24 202]
[25 195]
[26 194]
[27 193]
[32 192]
[33 191]
[34 190]
[35 189]
[36 188]
[37 185]
[38 184]
[51 183]
[52 182]
[53 181]
[57 177]
[59 175]
[60 174]
[61 171]
[62 170]
[63 169]
[64 168]
[73 167]
[74 166]
[75 165]
[76 164]
[77 162]
[78 161]
[80 159]
[81 158]
[82 157]
[83 156]
[85 155]
[86 154]
[87 138]
[88 137]
[89 136]
[90 135]
[91 134]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
