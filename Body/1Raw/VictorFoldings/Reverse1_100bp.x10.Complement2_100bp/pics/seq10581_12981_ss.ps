%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAAGCGUCCGCCGUUUCUGAUCAUACCGUUAUCCGUGUUAUAACCGAUUCUCCCUCACCCACAACUCCCAAUACUCUCAUCGAUAUUACUUGUCGCUAUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[80.32023621 527.63189697]
[65.80590057 523.50921631]
[52.85365677 515.76959229]
[42.34660721 504.94070435]
[35.00114059 491.76092529]
[31.31808472 477.12884521]
[31.54855537 462.04211426]
[35.67683792 447.52938843]
[43.42146301 434.58013916]
[54.25438309 424.07727051]
[67.43699646 416.73687744]
[82.07048798 413.05947876]
[82.29381561 398.06112671]
[82.51714325 383.06280518]
[71.99107361 372.58724976]
[72.00389862 357.37362671]
[83.06300354 346.40393066]
[83.28633118 331.40557861]
[83.50965881 316.40725708]
[83.73298645 301.40890503]
[83.95631409 286.41058350]
[84.17964172 271.41223145]
[84.40296936 256.41390991]
[76.85601044 243.57284546]
[84.79792023 229.88940430]
[85.02124786 214.89106750]
[85.24457550 199.89273071]
[85.46790314 184.89439392]
[73.05057526 193.30924988]
[58.68480301 188.99363708]
[52.96049881 175.12884521]
[60.09740829 161.93548584]
[74.83446503 159.13922119]
[86.30738068 168.79985046]
[87.64561462 153.85966492]
[88.98384857 138.91947937]
[76.37406921 132.83132935]
[66.59567261 122.80860138]
[60.82054520 110.05242920]
[59.74077606 96.09154510]
[63.48577881 82.59906769]
[71.60673523 71.19195557]
[83.13040924 63.23727417]
[96.67578125 59.68833160]
[98.23630524 44.76972580]
[99.79682922 29.85112190]
[101.35735321 14.93251801]
[102.91786957 0.01391291]
[104.47839355 -14.90469170]
[106.03891754 -29.82329750]
[107.59944153 -44.74190140]
[105.37980652 -53.60254669]
[109.29586792 -59.87041855]
[111.07833862 -74.76413727]
[112.86080170 -89.65785217]
[114.64326477 -104.55156708]
[116.42573547 -119.44528961]
[118.20819855 -134.33900452]
[110.57046509 -151.09449768]
[121.62879181 -164.72096252]
[123.18931580 -179.63955688]
[116.92970276 -194.16979980]
[125.94909668 -206.02305603]
[127.50962067 -220.94166565]
[121.25000763 -235.47189331]
[130.26939392 -247.32516479]
[131.82992554 -262.24377441]
[133.39044189 -277.16238403]
[118.62541199 -279.84771729]
[104.10575867 -283.64205933]
[89.91464996 -288.52365112]
[76.13337708 -294.46450806]
[62.84086990 -301.43063354]
[50.11328125 -309.38208008]
[38.02350235 -318.27337646]
[26.64078903 -328.05349731]
[16.03034019 -338.66650391]
[6.25293350 -350.05157471]
[-2.63542891 -362.14349365]
[-10.58383369 -374.87298584]
[-17.54675102 -388.16717529]
[-23.48430061 -401.94985962]
[-28.36246872 -416.14215088]
[-32.15331650 -430.66271973]
[-34.83512878 -445.42840576]
[-36.39254379 -460.35461426]
[-36.81663895 -475.35586548]
[-36.10499191 -490.34622192]
[-34.26166916 -505.23983765]
[-31.29723740 -519.95135498]
[-27.22867393 -534.39660645]
[-22.07928085 -548.49273682]
[-15.87855721 -562.15905762]
[-8.66201973 -575.31726074]
[-0.47100344 -587.89202881]
[8.64757252 -599.81134033]
[18.64147758 -611.00683594]
[29.45346642 -621.41442871]
[41.02161026 -630.97448730]
[53.27964401 -639.63232422]
[66.15735626 -647.33831787]
[79.58097839 -654.04827881]
[93.47363281 -659.72381592]
[107.75572968 -664.33239746]
[122.34546661 -667.84765625]
[137.15927124 -670.24938965]
[152.11230469 -671.52392578]
[167.11889648 -671.66394043]
[182.09309387 -670.66857910]
[196.94912720 -668.54364014]
[211.60191345 -665.30120850]
[225.96749878 -660.95983887]
[239.96362305 -655.54449463]
[253.51008606 -649.08612061]
[266.52932739 -641.62176514]
[278.94674683 -633.19415283]
[290.69122314 -623.85150146]
[301.69552612 -613.64739990]
[311.89654541 -602.64031982]
[321.23590088 -590.89324951]
[329.66009521 -578.47351074]
[337.12088013 -565.45220947]
[343.57546997 -551.90393066]
[348.98693848 -537.90631104]
[353.32431030 -523.53948975]
[356.56268311 -508.88583374]
[358.68356323 -494.02920532]
[359.67474365 -479.05474854]
[359.53057861 -464.04818726]
[358.25192261 -449.09552002]
[355.84603882 -434.28237915]
[352.32675171 -419.69360352]
[347.71420288 -405.41278076]
[342.03482056 -391.52169800]
[335.32113647 -378.09994507]
[327.61160278 -365.22436523]
[318.95037842 -352.96871948]
[309.38708496 -341.40322876]
[298.97650146 -330.59414673]
[287.77822876 -320.60333252]
[275.85641479 -311.48806763]
[263.27938843 -303.30053711]
[250.11917114 -296.08764648]
[236.45112610 -289.89068604]
[222.35356140 -284.74520874]
[207.90722656 -280.68063354]
[193.19485474 -277.72027588]
[178.30073547 -275.88110352]
[163.31018066 -275.17358398]
[148.30905151 -275.60183716]
[146.74851990 -260.68322754]
[145.18800354 -245.76463318]
[151.55923462 -232.30148315]
[142.42822266 -219.38113403]
[140.86770630 -204.46253967]
[147.23893738 -190.99937439]
[138.10792542 -178.07904053]
[136.54739380 -163.16043091]
[143.91851807 -153.56913757]
[142.74052429 -141.12742615]
[133.10191345 -132.55653381]
[131.31945801 -117.66281891]
[129.53698730 -102.76910400]
[127.75451660 -87.87538910]
[125.97205353 -72.98166656]
[124.18959045 -58.08795166]
[122.51804352 -43.18137741]
[120.95752716 -28.26277351]
[119.39700317 -13.34416866]
[117.83647919 1.57443595]
[116.27595520 16.49304008]
[114.71543121 31.41164589]
[113.15490723 46.33024979]
[111.59438324 61.24885559]
[125.56278229 68.65314484]
[135.62602234 80.84620667]
[140.24676514 95.96533966]
[138.71913147 111.70084381]
[131.27648926 125.64883423]
[119.05580902 135.67852783]
[103.92403412 140.25770569]
[102.58580017 155.19789124]
[101.24756622 170.13807678]
[100.46623993 185.11772156]
[100.24291229 200.11605835]
[100.01958466 215.11439514]
[99.79625702 230.11273193]
[107.32723999 244.02656555]
[99.40130615 256.63723755]
[99.17797852 271.63555908]
[98.95465088 286.63391113]
[98.73132324 301.63223267]
[98.50799561 316.63058472]
[98.28466797 331.62890625]
[98.06134033 346.62725830]
[108.78892517 357.92135620]
[108.34878540 373.12860107]
[97.51548004 383.28613281]
[97.29215240 398.28445435]
[97.06882477 413.28280640]
[111.58634186 417.39428711]
[124.54455566 425.12390137]
[135.05996704 435.94464111]
[142.41560364 449.11874390]
[146.10997009 463.74795532]
[145.89114380 478.83486938]
[141.77406311 493.35079956]
[134.03944397 506.30603027]
[123.21463776 516.81726074]
[110.03769684 524.16778564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 200]
[13 199]
[14 198]
[17 195]
[18 194]
[19 193]
[20 192]
[21 191]
[22 190]
[23 189]
[25 187]
[26 186]
[27 185]
[28 184]
[34 183]
[35 182]
[36 181]
[44 174]
[45 173]
[46 172]
[47 171]
[48 170]
[49 169]
[50 168]
[51 167]
[53 166]
[54 165]
[55 164]
[56 163]
[57 162]
[58 161]
[60 158]
[61 157]
[63 155]
[64 154]
[66 152]
[67 151]
[68 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
