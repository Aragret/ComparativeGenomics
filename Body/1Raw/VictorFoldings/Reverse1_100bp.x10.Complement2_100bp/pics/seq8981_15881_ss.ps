%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUACCAACUAUAACGAUCCCACCGCGAAGGUUAAUCCACGUACUCAUCCACCGGACGUCAUUACAAUCGCCAAUCCGCAUGCCGGUCCCGAUAACCAxxxxxxxxxxCCCGGACAGGAACAUCAUAUUUGAUUAUGUGGUCAGAACAUUUGGCCUCUACUUUUGGAAAAAGGUUCCUGUUUAGUCUCUUUUUCAGAAAUUGAGGUGG\
) } def
/len { sequence length } bind def

/coor [
[161.76766968 673.99511719]
[150.65725708 663.90747070]
[140.31282043 653.03570557]
[130.78958130 641.43780518]
[122.13835144 629.17572021]
[114.40527344 616.31488037]
[107.63161469 602.92382812]
[101.85350800 589.07409668]
[97.10179138 574.83947754]
[93.40181732 560.29602051]
[90.77332306 545.52124023]
[89.23033905 530.59405518]
[88.78108978 515.59405518]
[89.42797852 500.60122681]
[91.16754913 485.69564819]
[93.99051666 470.95681763]
[97.88183594 456.46337891]
[102.82072449 442.29263306]
[108.78084564 428.52023315]
[115.73038483 415.21960449]
[123.63227844 402.46176147]
[132.44436646 390.31475830]
[142.11961365 378.84341431]
[152.60641479 368.10891724]
[163.84880066 358.16854858]
[175.78681946 349.07534790]
[188.35673523 340.87780762]
[201.49151611 333.61972046]
[195.21415710 319.99639893]
[188.93679810 306.37307739]
[182.65943909 292.74975586]
[170.30601501 284.42858887]
[171.55793762 268.65698242]
[165.28057861 255.03366089]
[159.00321960 241.41035461]
[142.80906677 238.72210693]
[131.29289246 226.79150391]
[129.13578796 210.18281555]
[137.38430786 195.41603088]
[130.90480042 181.88768005]
[124.42531586 168.35934448]
[117.94581604 154.83099365]
[111.46632385 141.30264282]
[104.98682404 127.77430725]
[98.50733185 114.24595642]
[87.08138275 106.18746185]
[87.96432495 92.23353577]
[81.48483276 78.70519257]
[75.00533295 65.17684937]
[67.53759003 52.16789246]
[59.12297440 39.75039673]
[50.70835495 27.33290291]
[52.73375320 42.19553375]
[51.86100388 57.17012024]
[48.12273788 71.69683075]
[41.65870667 85.23257446]
[32.71058273 97.27130890]
[21.61289024 107.36294556]
[8.78052711 115.13021851]
[-5.30675888 120.28273010]
[-20.12230492 122.62785339]
[-35.11222076 122.07791138]
[-49.71609497 118.65347290]
[-63.38795853 112.48255157]
[-75.61666870 103.79586029]
[-85.94505310 92.91815948]
[-93.98697662 80.25611115]
[-99.44178772 66.28309631]
[-102.10554504 51.52151108]
[-101.87866974 36.52322769]
[-98.76964569 21.84896660]
[-92.89470673 8.04733467]
[-84.47348022 -4.36568260]
[-73.82080841 -14.92601585]
[-61.33495331 -23.23885918]
[-47.48270035 -28.99343109]
[-32.78192902 -31.97459221]
[-17.78223801 -32.07089233]
[-3.04440284 -29.27872467]
[10.88059330 -23.70248222]
[23.47215462 -15.55063629]
[34.25953293 -5.12794828]
[42.83644867 7.17060375]
[40.61133194 -7.66343975]
[38.27584457 -22.48050690]
[35.83012009 -37.27977753]
[33.38439178 -52.07904816]
[30.93866348 -66.87831879]
[15.91412640 -68.18754578]
[1.68747652 -73.19287109]
[-10.84698582 -81.57965088]
[-20.90133286 -92.82068634]
[-27.84354210 -106.20935822]
[-31.23721695 -120.90404510]
[-30.86903191 -135.98101807]
[-26.76212883 -150.49253845]
[-19.17467308 -163.52639771]
[-8.58361721 -174.26325989]
[4.34527588 -182.02821350]
[18.79928589 -186.33314514]
[33.86981964 -186.90744019]
[48.60953140 -183.71501160]
[62.09187317 -176.95649719]
[73.46932983 -167.05679321]
[82.02670288 -154.63816833]
[87.22608185 -140.48129272]
[88.74060822 -125.47605896]
[86.47509766 -110.56571960]
[80.57195282 -96.68754578]
[71.40224457 -84.71393585]
[59.54240036 -75.39756012]
[45.73793411 -69.32405090]
[48.18366241 -54.52477646]
[50.62939072 -39.72550583]
[53.07511520 -24.92623520]
[57.26715088 -18.83947563]
[55.44537735 -9.88855743]
[57.67049408 4.94548655]
[63.12585068 18.91828537]
[71.54046631 31.33577919]
[79.95508575 43.75327682]
[80.48661804 28.76269531]
[88.35826874 15.99409389]
[101.51239777 8.78515148]
[116.51055145 9.02026844]
[129.43225098 16.63798523]
[136.89979553 29.64705086]
[136.96118164 44.64692688]
[129.60037231 57.71667862]
[116.74145508 65.43990326]
[101.74572754 65.79777527]
[88.53367615 58.69734955]
[95.01317596 72.22569275]
[101.49266815 85.75404358]
[112.91861725 93.81253815]
[112.03567505 107.76646423]
[118.51516724 121.29480743]
[124.99466705 134.82315063]
[131.47416687 148.35150146]
[137.95365906 161.87985229]
[144.43315125 175.40818787]
[150.91264343 188.93653870]
[164.61727905 190.41093445]
[175.71574402 198.40109253]
[181.37159729 210.73320007]
[180.20475769 224.14151001]
[172.62654114 235.13299561]
[178.90390015 248.75630188]
[185.18125916 262.37960815]
[197.98368835 271.67523193]
[196.28274536 286.47241211]
[202.56010437 300.09573364]
[208.83746338 313.71902466]
[215.11483765 327.34234619]
[229.16625977 322.07357788]
[243.56478882 317.84457397]
[258.23361206 314.67785645]
[273.09445190 312.59036255]
[288.06802368 311.59320068]
[303.07446289 311.69171143]
[318.03366089 312.88537598]
[332.86581421 315.16781616]
[347.49179077 318.52682495]
[361.83355713 322.94451904]
[375.81460571 328.39730835]
[389.36032104 334.85614014]
[402.39840698 342.28649902]
[414.85934448 350.64874268]
[426.67663574 359.89828491]
[437.78723145 369.98577881]
[448.13183594 380.85736084]
[457.65527344 392.45507812]
[466.30670166 404.71701050]
[474.03997803 417.57775879]
[480.81387329 430.96865845]
[486.59219360 444.81832886]
[491.34414673 459.05285645]
[495.04437256 473.59625244]
[497.67309570 488.37097168]
[499.21633911 503.29815674]
[499.66583252 518.29815674]
[499.01919556 533.29095459]
[497.27987671 548.19659424]
[494.45712280 562.93548584]
[490.56607056 577.42901611]
[485.62741089 591.59979248]
[479.66751099 605.37231445]
[472.71817017 618.67303467]
[464.81649780 631.43103027]
[456.00460815 643.57812500]
[446.32955933 655.04968262]
[435.84292603 665.78436279]
[424.60070801 675.72491455]
[412.66284180 684.81829834]
[400.09304810 693.01605225]
[386.95840454 700.27435303]
[373.32894897 706.55450439]
[359.27743530 711.82305908]
[344.87884521 716.05187988]
[330.20996094 719.21832275]
[315.34909058 721.30554199]
[300.37548828 722.30249023]
[285.36907959 722.20373535]
[270.40988159 721.00982666]
[255.57777405 718.72717285]
[240.95184326 715.36785889]
[226.61013794 710.94995117]
[212.62919617 705.49694824]
[199.08358765 699.03790283]
[186.04560852 691.60729980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 154]
[29 153]
[30 152]
[31 151]
[33 149]
[34 148]
[35 147]
[39 142]
[40 141]
[41 140]
[42 139]
[43 138]
[44 137]
[45 136]
[47 134]
[48 133]
[49 132]
[50 121]
[51 120]
[52 119]
[83 118]
[84 117]
[85 115]
[86 114]
[87 113]
[88 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
