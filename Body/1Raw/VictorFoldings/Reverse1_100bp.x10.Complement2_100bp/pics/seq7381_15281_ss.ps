%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[80.11569214 647.44958496]
[65.60135651 643.32690430]
[52.64911270 635.58728027]
[42.14206314 624.75842285]
[34.79659653 611.57867432]
[31.11353874 596.94659424]
[31.34400940 581.85986328]
[35.47229385 567.34710693]
[43.21691513 554.39788818]
[54.04983521 543.89501953]
[67.23245239 536.55462646]
[81.86594391 532.87719727]
[82.08927155 517.87884521]
[82.31259918 502.88052368]
[82.53592682 487.88220215]
[82.75925446 472.88385010]
[82.98258209 457.88552856]
[83.20590973 442.88717651]
[83.09423828 427.88760376]
[82.64763641 412.89425659]
[82.20102692 397.90090942]
[81.75442505 382.90756226]
[78.41316223 376.31530762]
[81.41445923 367.68801880]
[81.19113159 352.68966675]
[78.44892883 348.77951050]
[78.13394928 343.10519409]
[81.19113159 337.24301147]
[73.64418030 324.40197754]
[81.58608246 310.71850586]
[81.80941010 295.72018433]
[82.03274536 280.72183228]
[71.50666809 270.24627686]
[71.51950073 255.03265381]
[82.57859802 244.06297302]
[82.80192566 229.06463623]
[79.75836182 222.32975769]
[83.14189148 213.84509277]
[75.78695679 200.89309692]
[83.93170929 187.32940674]
[84.37831879 172.33605957]
[84.82492065 157.34271240]
[74.61808777 168.33454895]
[59.92242432 171.34078979]
[46.21905136 165.24017334]
[38.61898422 152.30807495]
[39.95686340 137.36785889]
[49.73369217 125.99185181]
[64.30295563 122.42301941]
[78.23067474 127.99244690]
[86.32246399 140.62400818]
[88.54757690 125.78997040]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.50788116 71.96875763]
[98.51189423 57.10323334]
[96.72071838 53.14777374]
[96.32154083 49.22283173]
[97.13384247 45.76225662]
[98.85474396 43.09671402]
[101.10326385 41.42270279]
[96.16493225 26.39195251]
[106.20585632 15.39062977]
[109.09112549 0.67073846]
[111.97640228 -14.04915333]
[114.86167145 -28.76904488]
[117.74694824 -43.48893738]
[120.63221741 -58.20882797]
[119.21193695 -67.23216248]
[123.67158508 -73.12567139]
[126.77568817 -87.80097198]
[122.06169128 -102.90357971]
[132.26530457 -113.75418854]
[135.36941528 -128.42948914]
[138.47352600 -143.10479736]
[141.57763672 -157.78009033]
[144.68173218 -172.45539856]
[146.79635620 -187.30560303]
[147.91201782 -202.26405334]
[137.87567139 -214.17663574]
[139.22019958 -229.33074951]
[150.63887024 -238.82543945]
[151.75453186 -253.78388977]
[152.87017822 -268.74234009]
[153.98582458 -283.70080566]
[155.10147095 -298.65924072]
[142.20281982 -304.69876099]
[132.16148376 -314.75726318]
[126.16923523 -327.61206055]
[124.92737579 -341.71044922]
[128.56475830 -355.35711670]
[136.62477112 -366.91806030]
[148.12249756 -375.01626587]
[161.66508484 -378.69558716]
[163.00332642 -393.63577271]
[164.34155273 -408.57595825]
[157.86630249 -423.01141357]
[166.70822144 -434.99761963]
[152.78794861 -440.92059326]
[141.38063049 -450.85681152]
[133.60380554 -463.83279419]
[130.21939087 -478.57730103]
[131.55894470 -493.64584351]
[137.49122620 -507.56213379]
[147.43507385 -518.96282959]
[160.41627502 -526.73089600]
[175.16305542 -530.10546875]
[190.23068237 -528.75579834]
[204.14300537 -522.81420898]
[215.53700256 -512.86273193]
[223.29643250 -499.87631226]
[226.66108704 -485.12728882]
[225.30133057 -470.06054688]
[219.35040283 -456.15222168]
[209.39129639 -444.76489258]
[196.39970398 -437.01416016]
[181.64840698 -433.65939331]
[188.21937561 -420.29260254]
[179.28173828 -407.23773193]
[177.94351196 -392.29754639]
[176.60527039 -377.35736084]
[190.75781250 -370.22775269]
[201.11596680 -358.18374634]
[206.07118225 -343.05032349]
[204.83659363 -327.13555908]
[197.57177734 -312.87869263]
[185.36277771 -302.47625732]
[170.05992126 -297.54360962]
[168.94427490 -282.58514404]
[167.82862854 -267.62670898]
[166.71298218 -252.66824341]
[165.59733582 -237.70979309]
[175.48123169 -226.62628174]
[174.56288147 -211.44038391]
[162.87046814 -201.14840698]
[161.75482178 -186.18994141]
[171.91975403 -197.22055054]
[186.40740967 -201.10742188]
[200.72862244 -196.64617920]
[210.44583130 -185.21919250]
[212.54801941 -170.36723328]
[206.38381958 -156.69233704]
[193.86328125 -148.43182373]
[178.86602783 -148.14530945]
[166.03910828 -155.92156982]
[159.35704041 -169.35128784]
[156.25292969 -154.67597961]
[153.14881897 -140.00068665]
[150.04470825 -125.32537842]
[146.94059753 -110.65007782]
[151.87663269 -96.59714508]
[141.45098877 -84.69686127]
[138.34687805 -70.02156067]
[135.35211182 -55.32355499]
[132.46684265 -40.60366440]
[129.58155823 -25.88377190]
[126.69628906 -11.16388035]
[123.81101990 3.55601120]
[120.92574310 18.27590179]
[126.07044983 32.25378799]
[115.82315063 44.30797577]
[113.37742615 59.10724640]
[111.37341309 73.97277832]
[113.59510040 81.02159882]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[103.38162231 128.01509094]
[101.15650940 142.84913635]
[99.81827545 157.78930664]
[99.37166595 172.78266907]
[98.92506409 187.77601624]
[106.24804688 201.80043030]
[98.13523865 214.29170227]
[97.80026245 229.28796387]
[97.57693481 244.28630066]
[108.30452728 255.58038330]
[107.86437988 270.78765869]
[97.03108215 280.94515991]
[96.80775452 295.94351196]
[96.58442688 310.94183350]
[104.11540222 324.85568237]
[96.18946838 337.46633911]
[96.18946838 352.46633911]
[96.41279602 367.46469116]
[96.74777222 382.46093750]
[97.19438171 397.45428467]
[97.64098358 412.44763184]
[98.08759308 427.44100952]
[100.83246613 431.88088989]
[101.53003693 436.47073364]
[100.46603394 440.40557861]
[98.20424652 443.11050415]
[97.98091888 458.10885620]
[97.75759125 473.10717773]
[97.53426361 488.10552979]
[97.31093597 503.10385132]
[97.08760834 518.10217285]
[96.86428070 533.10052490]
[111.38179016 537.21203613]
[124.34001160 544.94165039]
[134.85542297 555.76239014]
[142.21105957 568.93646240]
[145.90541077 583.56567383]
[145.68659973 598.65258789]
[141.56951904 613.16851807]
[133.83489990 626.12377930]
[123.01009369 636.63500977]
[109.83315277 643.98553467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[17 195]
[18 194]
[19 190]
[20 189]
[21 188]
[22 187]
[24 186]
[25 185]
[28 184]
[30 182]
[31 181]
[32 180]
[35 177]
[36 176]
[38 175]
[40 173]
[41 172]
[42 171]
[51 170]
[52 169]
[53 168]
[55 166]
[56 164]
[57 163]
[62 162]
[64 160]
[65 159]
[66 158]
[67 157]
[68 156]
[69 155]
[71 154]
[72 153]
[74 151]
[75 150]
[76 149]
[77 148]
[78 147]
[79 137]
[80 136]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
[95 122]
[96 121]
[97 120]
[99 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
