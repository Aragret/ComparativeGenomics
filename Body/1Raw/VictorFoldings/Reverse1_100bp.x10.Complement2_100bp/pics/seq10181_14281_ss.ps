%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxGGGAGAGGAAGUAUUUAAUAAGUCGAAGGAUGUGAUAAUUUCAAAUGGUGUUGGUGGUGGGGUAGUAUGAGAAAGUGGGUGUCGUGGUUAGGAUGGAGGU\
) } def
/len { sequence length } bind def

/coor [
[254.08564758 554.23541260]
[266.95492554 546.37207031]
[262.55395508 532.03222656]
[258.15295410 517.69232178]
[253.75193787 503.35250854]
[249.35095215 489.01266479]
[244.94995117 474.67282104]
[240.54895020 460.33297729]
[236.14794922 445.99310303]
[231.74694824 431.65325928]
[226.81536865 417.48712158]
[221.36000061 403.51434326]
[215.80078125 389.58255005]
[210.13798523 375.69250488]
[204.47520447 361.80249023]
[189.24024963 364.39489746]
[173.80297852 363.54031372]
[158.93386841 359.27825928]
[145.37574768 351.81848145]
[133.80667114 341.53048706]
[124.80596924 328.92532349]
[118.82531738 314.63021851]
[116.16598511 299.35729980]
[116.96373749 283.86816406]
[121.18183899 268.93585205]
[128.61279297 255.30633545]
[138.88850403 243.66122437]
[151.49853516 234.58364868]
[145.62957764 220.77946472]
[139.76062012 206.97529602]
[133.89166260 193.17111206]
[127.71588898 179.50144958]
[121.23638916 165.97309875]
[114.75689697 152.44474792]
[108.27739716 138.91641235]
[105.68132019 137.85881042]
[103.34774780 135.70915222]
[101.69473267 132.56225586]
[101.09830475 128.66239929]
[101.84188843 124.38442993]
[96.17910004 110.49440002]
[90.41306305 96.64691925]
[84.54410553 82.84274292]
[78.67514038 69.03856659]
[72.80618286 55.23438644]
[57.84054565 44.50539780]
[60.64710236 27.18228912]
[54.57326889 13.46702194]
[48.49943542 -0.24824516]
[42.42560196 -13.96351147]
[37.96826935 0.35892490]
[26.01299667 9.41825390]
[11.01880264 9.83556843]
[-1.42184830 1.45522225]
[-6.66890097 -12.59712410]
[-2.76533413 -27.08029175]
[8.83291817 -36.59241867]
[23.79999352 -37.58571625]
[36.55430222 -29.68881989]
[32.15330505 -44.02866745]
[27.75230598 -58.36851501]
[23.35130882 -72.70835876]
[18.73729897 -86.98109436]
[13.91130161 -101.18354797]
[9.08530426 -115.38600159]
[4.25930595 -129.58845520]
[-0.56669146 -143.79092407]
[-5.39268923 -157.99337769]
[-8.75798225 -160.73722839]
[-10.86334801 -164.07368469]
[-11.67720127 -167.53390503]
[-11.32346916 -170.68690491]
[-10.05575562 -173.18711853]
[-14.02785206 -187.65164185]
[-17.99994850 -202.11616516]
[-21.97204399 -216.58068848]
[-25.49480057 -202.00021362]
[-33.73418427 -189.46575928]
[-45.72224426 -180.44985962]
[-60.05063248 -176.01170349]
[-75.03606415 -176.67265320]
[-88.91806030 -182.35508728]
[-100.06578827 -192.39143372]
[-107.16962433 -205.60261536]
[-109.39500427 -220.43663025]
[-106.48050690 -235.15075684]
[-98.76850891 -248.01641846]
[-87.16502380 -257.52215576]
[-73.03321075 -262.55126953]
[-58.03326035 -262.51290894]
[-43.92735291 -257.41159058]
[-32.37263489 -247.84661865]
[-24.72598648 -234.94023132]
[-32.87073898 -248.50390625]
[-25.51580811 -261.45590210]
[-25.96241379 -276.44924927]
[-26.40901947 -291.44259644]
[-26.85562515 -306.43597412]
[-40.81917953 -312.59890747]
[-50.71936798 -324.21566772]
[-54.59050369 -338.97970581]
[-51.66397095 -353.95962524]
[-42.52083206 -366.18115234]
[-28.97646713 -373.21771240]
[-13.72011566 -373.67214966]
[0.21905968 -367.45425415]
[10.07342625 -355.79861450]
[13.88639259 -341.01943970]
[10.90089130 -326.05114746]
[1.70969522 -313.86572266]
[-11.86227608 -306.88256836]
[-11.41567039 -291.88922119]
[-10.96906376 -276.89587402]
[-10.52245808 -261.90252686]
[-2.40964985 -249.41125488]
[-9.73263741 -235.38682556]
[-7.50752020 -220.55279541]
[-3.53542399 -206.08827209]
[0.43667224 -191.62373352]
[4.40876865 -177.15921021]
[8.80976677 -162.81936646]
[13.63576412 -148.61691284]
[18.46176147 -134.41445923]
[23.28775978 -120.21200562]
[28.11375809 -106.00954437]
[32.93975449 -91.80709076]
[36.75177383 -88.93001556]
[38.79689789 -83.62770844]
[37.69115448 -77.10935974]
[42.09215546 -62.76951218]
[46.49315262 -48.42966461]
[50.89414978 -34.08981705]
[56.14086914 -20.03734589]
[62.21470261 -6.32207918]
[68.28853607 7.39318752]
[74.36237335 21.10845375]
[85.53009796 25.75692940]
[90.70256042 37.13363647]
[86.61035919 49.36542511]
[92.47931671 63.16960526]
[98.34828186 76.97377777]
[104.21723938 90.77795410]
[110.01852417 96.37417603]
[110.06912231 104.83161926]
[115.73191071 118.72164154]
[121.80574799 132.43690491]
[128.28524780 145.96525574]
[134.76473999 159.49360657]
[141.24423218 173.02194214]
[145.55183411 175.97012329]
[148.04818726 179.88438416]
[148.66860962 183.91305542]
[147.69583130 187.30215454]
[153.56478882 201.10632324]
[159.43376160 214.91050720]
[165.30271912 228.71467590]
[179.62773132 226.00390625]
[194.19706726 226.33854675]
[208.37071228 229.70138550]
[221.52653503 235.94223022]
[233.08766174 244.78460693]
[242.54769897 255.83802795]
[249.49296570 268.61523438]
[253.62057495 282.55368042]
[254.75158691 297.04028320]
[252.83885193 311.43841553]
[247.96891785 325.11581421]
[240.35809326 337.47250366]
[230.34292603 347.96688843]
[218.36523438 356.13970947]
[224.02801514 370.02972412]
[229.69081116 383.91973877]
[235.82838440 390.68496704]
[235.33279419 398.05899048]
[240.78816223 412.03176880]
[249.10986328 399.55181885]
[264.04180908 398.12472534]
[274.57675171 408.80252075]
[272.94869995 423.71389771]
[260.35781860 431.86679077]
[246.08680725 427.25225830]
[250.48779297 441.59213257]
[254.88879395 455.93197632]
[259.28979492 470.27182007]
[263.69079590 484.61166382]
[268.09179688 498.95150757]
[272.49279785 513.29138184]
[276.89379883 527.63122559]
[281.29479980 541.97106934]
[296.35955811 541.26123047]
[311.12738037 544.32098389]
[324.66995239 550.95800781]
[336.13598633 560.75500488]
[344.80468750 573.09613037]
[350.13116455 587.20568848]
[351.78057861 602.19671631]
[349.64923096 617.12683105]
[343.87112427 631.05749512]
[334.80947876 643.11309814]
[323.03390503 652.53576660]
[309.28460693 658.73315430]
[294.42590332 661.31573486]
[279.39181519 660.12115479]
[265.12741089 655.22448730]
[252.52932739 646.93359375]
[242.38952637 635.76959229]
[235.34539795 622.43420410]
[231.83973694 607.76586914]
[232.09289551 592.68652344]
[236.08898926 578.14410400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 189]
[3 188]
[4 187]
[5 186]
[6 185]
[7 184]
[8 183]
[9 182]
[10 181]
[11 175]
[12 174]
[13 172]
[14 171]
[15 170]
[28 156]
[29 155]
[30 154]
[31 153]
[32 149]
[33 148]
[34 147]
[35 146]
[40 145]
[41 144]
[42 142]
[43 141]
[44 140]
[45 139]
[47 136]
[48 135]
[49 134]
[50 133]
[59 132]
[60 131]
[61 130]
[62 129]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
[68 121]
[73 120]
[74 119]
[75 118]
[76 117]
[93 116]
[95 114]
[96 113]
[97 112]
[98 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
