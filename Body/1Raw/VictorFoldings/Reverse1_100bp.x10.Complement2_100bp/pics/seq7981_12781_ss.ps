%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGUCGAGUACUCACGUUCUGCAGAACACUACAUUAAUAAUAUGCUUACCCCCGAAGUUAGCCCUCAUGAUGAGCUAACAGUUGCAGUUCCUCAGCGUCxxxxxxxxxxAAUAUAGGAAGAACGAGUAGUCAACUACUAUGCGGGCUCGUCUACGGUUGUGUCGUCGGUAAGUUCGUUAGGAUAUGUUGGCAUAGCCGCUAUAGCCAAA\
) } def
/len { sequence length } bind def

/coor [
[64.87099457 757.27362061]
[49.85446930 756.60241699]
[35.12784576 753.59027100]
[21.05377960 748.31134033]
[7.97885799 740.89562988]
[-3.77493858 731.52569580]
[-13.91816235 720.43243408]
[-22.20102692 707.88885498]
[-28.41955757 694.20397949]
[-32.42061996 679.71472168]
[-34.10568619 664.77795410]
[-33.43325424 649.76147461]
[-30.41988564 635.03509521]
[-25.13978958 620.96148682]
[-17.72299194 607.88720703]
[-8.35213566 596.13415527]
[2.74201012 585.99182129]
[15.28624344 577.71002197]
[28.97165108 571.49261475]
[43.46121979 567.49273682]
[58.39812469 565.80889893]
[59.06791306 550.82385254]
[59.73769760 535.83886719]
[51.80875397 526.70330811]
[52.24412537 514.21350098]
[61.35549545 505.08413696]
[62.24831009 490.11071777]
[63.14112473 475.13729858]
[64.03394318 460.16390991]
[55.16894913 472.26397705]
[41.97277451 479.39566040]
[26.99339676 480.18194580]
[13.12309837 474.47100830]
[3.04001522 463.36553955]
[-1.30896628 449.00985718]
[0.91587377 434.17575073]
[9.28495407 421.72753906]
[22.18233490 414.06869507]
[37.11773682 412.67810059]
[51.20736313 417.82418823]
[61.73073196 428.51339722]
[66.65608978 442.68301392]
[70.19576263 428.10662842]
[73.73543549 413.53024292]
[76.40122986 398.76904297]
[78.18369293 383.87530518]
[79.96616364 368.98159790]
[81.74862671 354.08789062]
[83.53109741 339.19418335]
[85.31356049 324.30044556]
[87.09602356 309.40673828]
[77.71689606 297.89294434]
[79.31240082 282.76321411]
[91.45272064 273.00357056]
[93.23518372 258.10986328]
[95.01765442 243.21614075]
[95.79897308 228.23649597]
[95.57564545 213.23815918]
[83.01844025 202.05088806]
[82.42601776 184.90550232]
[94.65309143 172.39479065]
[94.20648956 157.40144348]
[93.75988007 142.40809631]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[91.24677277 58.03851318]
[90.35395050 43.06510925]
[81.41631317 30.01025391]
[87.98728943 16.64344597]
[86.64905548 1.70326138]
[85.31082153 -13.23692322]
[81.42827606 -21.50515556]
[84.06558228 -28.40924263]
[82.94992828 -43.36769485]
[81.83428192 -58.32614899]
[71.11623383 -73.29962158]
[79.34698486 -88.79870605]
[75.46443939 -97.06694031]
[78.10174561 -103.97102356]
[76.98609161 -118.92948151]
[75.87044525 -133.88793945]
[72.11143494 -142.21305847]
[74.85123444 -149.07711792]
[71.53533936 -154.79693604]
[71.59663391 -160.47966003]
[74.16150665 -164.50836182]
[73.71489716 -179.50170898]
[73.26829529 -194.49505615]
[72.82168579 -209.48840332]
[72.37508392 -224.48176575]
[57.68846130 -227.94088745]
[44.39802170 -235.08418274]
[33.40992737 -245.42460632]
[25.47336769 -258.25711060]
[21.12946892 -272.70678711]
[20.67440605 -287.78839111]
[24.13920403 -302.47369385]
[31.28762817 -315.76138306]
[41.63228989 -326.74548340]
[54.46786499 -334.67706299]
[68.91921234 -339.01538086]
[84.00100708 -339.46463013]
[98.68495178 -335.99417114]
[111.96987152 -328.84060669]
[122.94998169 -318.49169922]
[130.87663269 -305.65307617]
[135.20936584 -291.20004272]
[135.65278625 -276.11807251]
[132.17665100 -261.43548584]
[125.01795959 -248.15332031]
[114.66482544 -237.17721558]
[101.82312012 -229.25552368]
[87.36843109 -224.92835999]
[87.81503296 -209.93501282]
[88.26164246 -194.94166565]
[88.70825195 -179.94831848]
[89.15485382 -164.95497131]
[89.82463837 -149.96992493]
[90.82890320 -135.00358582]
[91.94454956 -120.04512787]
[93.06019592 -105.08667755]
[94.28717041 -90.13694000]
[103.36555481 -82.14259338]
[104.60272980 -69.70663452]
[96.79273224 -59.44179916]
[97.90838623 -44.48334503]
[99.02403259 -29.52489090]
[100.25100708 -14.57515812]
[101.58924103 0.36502722]
[102.92747498 15.30521202]
[111.76939392 27.29144478]
[105.29413605 41.72687531]
[107.35630035 43.62572479]
[108.79055023 46.45583725]
[109.23842621 49.98213959]
[108.43308258 53.84425735]
[106.24011993 57.59190750]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[108.75322723 141.96148682]
[109.19983673 156.95483398]
[109.64643860 171.94818115]
[120.44787598 179.99453735]
[124.58255005 192.60861206]
[120.75390625 205.11555481]
[110.57398224 213.01483154]
[110.79730988 228.01316833]
[119.93761444 216.11968994]
[134.02072144 210.95579529]
[148.68284607 214.12156677]
[159.38076782 224.63606262]
[162.79960632 239.24124146]
[157.88000488 253.41154480]
[146.14636230 262.75613403]
[131.23446655 264.37951660]
[117.76492310 257.77862549]
[109.91136932 244.99859619]
[108.12890625 259.89230347]
[106.34643555 274.78604126]
[115.84083557 287.13488770]
[113.82099915 302.21383667]
[101.98974609 311.18920898]
[100.20727539 326.08291626]
[98.42481232 340.97662354]
[96.64234161 355.87036133]
[94.85987854 370.76406860]
[93.07741547 385.65777588]
[91.29494476 400.55151367]
[102.44171906 390.51409912]
[117.34698486 388.83093262]
[130.45144653 396.12979126]
[136.86746216 409.68835449]
[134.20202637 424.44961548]
[123.44925690 434.90802002]
[108.61969757 437.16281128]
[95.24439240 430.37304688]
[88.31181335 417.06991577]
[84.77214050 431.64630127]
[81.23246765 446.22268677]
[79.00734711 461.05673218]
[78.11453247 476.03012085]
[77.22171783 491.00354004]
[76.32890320 505.97692871]
[84.95039368 522.24810791]
[74.72273254 536.50860596]
[74.05294800 551.49365234]
[73.38316345 566.47869873]
[88.11028290 569.48840332]
[102.18521881 574.76501465]
[115.26136780 582.17858887]
[127.01670837 591.54656982]
[137.16175842 602.63818359]
[145.44670105 615.18035889]
[151.66749573 628.86425781]
[155.67094421 643.35278320]
[157.35847473 658.28930664]
[156.68852234 673.30584717]
[153.67758179 688.03277588]
[148.39981079 702.10723877]
[140.98516846 715.18280029]
[131.61625671 726.93737793]
[120.52378082 737.08148193]
[107.98091125 745.36541748]
[94.29653168 751.58502197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 193]
[22 192]
[23 191]
[26 189]
[27 188]
[28 187]
[29 186]
[42 185]
[43 184]
[44 183]
[45 174]
[46 173]
[47 172]
[48 171]
[49 170]
[50 169]
[51 168]
[54 165]
[55 164]
[56 163]
[57 153]
[58 152]
[61 148]
[62 147]
[63 146]
[64 145]
[65 144]
[67 142]
[68 141]
[69 140]
[70 135]
[72 133]
[73 132]
[74 131]
[76 130]
[77 129]
[78 128]
[80 125]
[82 124]
[83 123]
[84 122]
[86 121]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
