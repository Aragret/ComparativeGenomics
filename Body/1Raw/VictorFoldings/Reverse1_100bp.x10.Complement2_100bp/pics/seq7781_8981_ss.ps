%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAAACUACCAUUCCCUCCCUAGCAACUGGAGCAGACAAUACAUUUCCUACGCAUCCCUACCCUCCCGCUACUCCUGAUCCUACUACCGCCCGUCCUAUCxxxxxxxxxxUGGUUAUCGGGACCGGCAUGCGGAUUGGCGAUUGUAAUGACGUCCGGUGGAUGAGUACGUGGAUUAACCUUCGCGGUGGGAUCGUUAUAGUUGGUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[29.68309212 466.48605347]
[25.28525352 480.89978027]
[17.68140411 493.91049194]
[7.28160620 504.81649780]
[-5.35329008 513.02966309]
[-19.54190063 518.10705566]
[-34.51905441 519.77490234]
[-49.47704697 517.94317627]
[-63.60921860 512.71075439]
[-76.15343475 504.35971069]
[-86.43320465 493.34051514]
[-93.89414978 480.24734497]
[-98.13391113 465.78631592]
[-98.92385101 450.73730469]
[-96.22135925 435.91189575]
[-90.17218018 422.10955811]
[-81.10254669 410.07467651]
[-69.50155640 400.45626831]
[-55.99485397 393.77304077]
[-41.31082916 390.38537598]
[-26.24137306 390.47604370]
[-22.70170021 375.89965820]
[-27.21712875 361.70599365]
[-16.44180298 350.12139893]
[-12.90213013 335.54501343]
[-9.36245728 320.96865845]
[-5.82278538 306.39227295]
[-2.28311276 291.81588745]
[1.25655961 277.23953247]
[-3.25886822 263.04586792]
[7.51645708 251.46125793]
[-2.42036796 262.69778442]
[-15.31109810 270.36779785]
[-29.92706871 273.74023438]
[-44.87518311 272.49365234]
[-58.73067856 266.74691772]
[-70.17293549 257.04769897]
[-78.11135864 244.32049561]
[-81.78929901 229.77839661]
[-80.85620117 214.80744934]
[-75.40100861 200.83457947]
[-65.94367218 189.19161987]
[-53.38560104 180.98828125]
[-38.92375183 177.00643921]
[-23.93653870 177.62565613]
[-9.85244465 182.78689575]
[1.98612285 191.99819946]
[10.45078754 204.38163757]
[14.73475075 218.75688171]
[14.42949581 233.75489807]
[21.70272446 220.63619995]
[28.97595406 207.51751709]
[29.46999741 200.14338684]
[36.45638657 194.25881958]
[43.92412567 181.24986267]
[51.39186859 168.24090576]
[58.85960770 155.23196411]
[66.32734680 142.22300720]
[66.93112946 134.85705566]
[74.00435638 129.07714844]
[81.66495514 116.18082428]
[89.32554626 103.28449249]
[96.88993073 90.33149719]
[103.46995544 76.85176086]
[109.13274384 62.96173477]
[114.79553223 49.07170868]
[120.35475159 35.13991165]
[125.81011200 21.16711235]
[126.01606750 12.03500462]
[131.45210266 7.02788496]
[137.11489868 -6.86214209]
[142.77767944 -20.75216866]
[148.44047546 -34.64219666]
[154.10325623 -48.53222275]
[153.39129639 -53.70331573]
[154.61199951 -58.18251038]
[157.17817688 -61.34949493]
[160.34152222 -62.90689850]
[166.61889648 -76.53021240]
[172.89625549 -90.15353394]
[179.17361450 -103.77684784]
[178.62179565 -108.08375549]
[179.39176941 -111.95307922]
[181.18365479 -115.02302551]
[183.61088562 -117.06634521]
[186.25158691 -118.00696564]
[193.32870483 -131.23249817]
[200.40580750 -144.45802307]
[207.48291016 -157.68354797]
[203.12985229 -172.63977051]
[210.49543762 -185.95152283]
[224.78074646 -190.00933838]
[231.85784912 -203.23486328]
[238.93495178 -216.46038818]
[246.01205444 -229.68591309]
[233.66531372 -238.23316956]
[222.37338257 -248.13217163]
[212.28349304 -259.25384521]
[203.52716064 -271.45321655]
[196.21856689 -284.57122803]
[190.45297241 -298.43685913]
[186.30557251 -312.86935425]
[183.83041382 -327.68054199]
[183.05976868 -342.67733765]
[184.00367737 -357.66421509]
[186.64985657 -372.44580078]
[190.96379089 -386.82940674]
[196.88925171 -400.62747192]
[204.34896851 -413.66012573]
[213.24571228 -425.75747681]
[223.46347046 -436.76181030]
[234.86906433 -446.52963257]
[247.31376648 -454.93362427]
[260.63534546 -461.86419678]
[274.66015625 -467.23104858]
[289.20529175 -470.96417236]
[304.08120728 -473.01489258]
[319.09390259 -473.35647583]
[334.04766846 -471.98449707]
[348.74758911 -468.91683960]
[363.00195312 -464.19345093]
[376.62500000 -457.87594604]
[389.43908691 -450.04669189]
[401.27713013 -440.80776978]
[411.98486328 -430.27957153]
[421.42260742 -418.59942627]
[429.46740723 -405.91952515]
[436.01431274 -392.40527344]
[440.97802734 -378.23278809]
[444.29379272 -363.58685303]
[445.91839600 -348.65838623]
[445.83065796 -333.64205933]
[444.03173828 -318.73361206]
[440.54507446 -304.12744141]
[435.41613770 -290.01391602]
[428.71176147 -276.57705688]
[420.51937866 -263.99203491]
[410.94577026 -252.42292786]
[400.11578369 -242.02056885]
[388.17059326 -232.92057800]
[375.26589966 -225.24157715]
[361.57000732 -219.08367920]
[347.26138306 -214.52717590]
[332.52664185 -211.63146973]
[317.55786133 -210.43429565]
[302.55017090 -210.95127869]
[287.69927979 -213.17567444]
[273.19873047 -217.07847595]
[259.23757935 -222.60881042]
[252.16047668 -209.38328552]
[245.08337402 -196.15776062]
[238.00627136 -182.93222046]
[242.55566406 -168.79579163]
[235.56687927 -155.28240967]
[220.70843506 -150.60644531]
[213.63133240 -137.38092041]
[206.55422974 -124.15538788]
[199.47712708 -110.92986298]
[192.79692078 -97.49948883]
[186.51956177 -83.87617493]
[180.24220276 -70.25285339]
[173.96484375 -56.62953949]
[167.99328613 -42.86943436]
[162.33049011 -28.97941017]
[156.66770935 -15.08938217]
[151.00492859 -1.19935548]
[145.34213257 12.69067192]
[139.78291321 26.62247086]
[134.32756042 40.59526825]
[134.82313538 47.96928787]
[128.68556213 54.73449707]
[123.02276611 68.62451935]
[117.35998535 82.51454926]
[130.42509460 75.14550781]
[145.40592957 75.90349579]
[157.66052246 84.55364990]
[163.39163208 98.41562653]
[160.82342529 113.19413757]
[150.75169373 124.30989838]
[136.29727173 128.31857300]
[121.93900299 123.97803497]
[112.12597656 112.63323975]
[109.89888000 97.79924011]
[108.93606567 105.80208588]
[102.22187805 110.94509125]
[94.56127930 123.84142303]
[86.90068054 136.73774719]
[79.33630371 149.69075012]
[71.86856079 162.69969177]
[64.40081787 175.70864868]
[56.93307877 188.71760559]
[49.46533966 201.72656250]
[42.09465027 214.79074097]
[34.82141876 227.90943909]
[27.54818916 241.02812195]
[22.09283257 255.00093079]
[26.35507965 270.23718262]
[15.83293533 280.77920532]
[12.29326248 295.35556030]
[8.75359058 309.93194580]
[5.21391773 324.50833130]
[1.67424536 339.08468628]
[-1.86542714 353.66107178]
[2.39681983 368.89733887]
[-8.12532425 379.43933105]
[-11.66499710 394.01571655]
[1.76772654 400.84643555]
[13.26270771 410.59127808]
[22.20003700 422.72473145]
[28.09773445 436.59246826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 206]
[22 205]
[24 203]
[25 202]
[26 201]
[27 200]
[28 199]
[29 198]
[31 196]
[50 195]
[51 194]
[52 193]
[54 192]
[55 191]
[56 190]
[57 189]
[58 188]
[60 187]
[61 186]
[62 185]
[63 183]
[64 173]
[65 172]
[66 171]
[67 169]
[68 168]
[70 167]
[71 166]
[72 165]
[73 164]
[74 163]
[78 162]
[79 161]
[80 160]
[81 159]
[86 158]
[87 157]
[88 156]
[89 155]
[92 152]
[93 151]
[94 150]
[95 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
