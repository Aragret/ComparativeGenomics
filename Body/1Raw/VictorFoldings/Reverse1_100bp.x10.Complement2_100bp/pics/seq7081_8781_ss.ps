%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUUUCAAUCUAAAUGCGGCUACUUAUACUAUCACUUUACCUAAAACCGCAUCCAAACCAGAUCCCACAUCGGACUCUUAUCCCCUUUAGUCACUUACxxxxxxxxxxCCUGAGGACGGAGUGAGUAAAUGUGGUUGGUGGGUUGAUAGAUAUUUGGAUCGGUACCGGUAGGGGAAUACUCGCCCGUGUCACUAAUAUCCGAAAGCGA\
) } def
/len { sequence length } bind def

/coor [
[79.40385437 720.33166504]
[64.46150970 718.93151855]
[49.67507935 716.36334229]
[35.13573074 712.64294434]
[20.93310356 707.79327393]
[7.15476322 701.84417725]
[-6.11434031 694.83239746]
[-18.79239845 686.80114746]
[-30.80124474 677.79998779]
[-42.06684113 667.88427734]
[-52.51972961 657.11529541]
[-62.09546280 645.55938721]
[-70.73500061 633.28778076]
[-78.38508606 620.37609863]
[-84.99854279 606.90405273]
[-90.53459930 592.95465088]
[-94.95912933 578.61389160]
[-98.24484253 563.97015381]
[-100.37149048 549.11383057]
[-101.32595825 534.13641357]
[-101.10236359 519.13024902]
[-99.70207977 504.18792725]
[-97.13374329 489.40151978]
[-93.41319275 474.86221313]
[-88.56335449 460.65963745]
[-82.61414337 446.88137817]
[-75.60223389 433.61233521]
[-67.57085419 420.93435669]
[-58.56953049 408.92559814]
[-48.65374756 397.66009521]
[-37.88464737 387.20733643]
[-26.32862473 377.63171387]
[-14.05692577 368.99230957]
[-1.14521205 361.34234619]
[12.32691097 354.72903442]
[26.27638054 349.19311523]
[40.61719513 344.76873779]
[55.26093674 341.48315430]
[70.11731720 339.35665894]
[85.09474945 338.40234375]
[85.31807709 323.40402222]
[85.54140472 308.40567017]
[85.76473236 293.40734863]
[74.38488007 286.42584229]
[67.88865662 274.63842773]
[68.06655121 261.07238770]
[74.97904968 249.27255249]
[86.91287994 242.37512207]
[87.35948181 227.38177490]
[87.80609131 212.38842773]
[88.25269318 197.39508057]
[85.30973816 190.61563110]
[88.81921387 182.18228149]
[89.48899841 167.19725037]
[90.15879059 152.21220398]
[90.82857513 137.22717285]
[91.49835968 122.24213409]
[92.16814423 107.25709534]
[91.27532959 92.28368378]
[88.82959747 77.48441315]
[86.38387299 62.68514633]
[83.93814087 47.88587570]
[81.49241638 33.08660507]
[78.17897797 29.05321884]
[76.87444305 24.59771729]
[77.40321350 20.55600357]
[79.28334808 17.57314491]
[77.50087738 2.67942762]
[75.71841431 -12.21428967]
[73.93595123 -27.10800743]
[72.15348053 -42.00172424]
[66.50682068 -28.10513687]
[56.49921417 -16.93160057]
[43.30636215 -9.79377174]
[28.47813606 -7.53019619]
[13.75654793 -10.40679646]
[0.87107271 -18.08563232]
[-8.66451740 -29.66460037]
[-13.72999001 -43.78341675]
[-13.73025894 -58.78341675]
[-8.66529179 -72.90241241]
[0.86988336 -84.48172760]
[13.75508404 -92.16102600]
[28.47657013 -95.03815460]
[43.30487442 -92.77510834]
[56.49798584 -85.63774872]
[66.50598907 -74.46457672]
[72.15348053 -60.56665802]
[73.93595123 -75.46037292]
[75.71841431 -90.35408783]
[77.50087738 -105.24781036]
[71.45829010 -119.86962891]
[80.65316772 -131.58729553]
[82.43563080 -146.48100281]
[84.21809387 -161.37472534]
[86.00056458 -176.26844788]
[87.78302765 -191.16215515]
[73.67527771 -196.47579956]
[61.24950790 -205.01182556]
[51.22813797 -216.27395630]
[44.19379807 -229.60742188]
[40.55545044 -244.23704529]
[40.52463150 -259.31228638]
[44.10312653 -273.95666504]
[51.08289337 -287.31878662]
[61.05812836 -298.62179565]
[73.44889069 -307.20855713]
[87.53479767 -312.57983398]
[102.49691010 -314.42337036]
[117.46535492 -312.63195801]
[131.56988525 -307.30975342]
[143.99047852 -298.76620483]
[154.00502014 -287.49798584]
[161.03126526 -274.16027832]
[164.66075134 -259.52844238]
[164.68243408 -244.45320129]
[161.09504700 -229.81098938]
[154.10719299 -216.45309448]
[144.12510681 -205.15614319]
[131.72914124 -196.57688904]
[117.63997650 -191.21415710]
[102.67674255 -189.37969971]
[100.89427948 -174.48597717]
[99.11181641 -159.59225464]
[97.32934570 -144.69854736]
[95.54688263 -129.80482483]
[101.71696472 -116.24829865]
[92.39459991 -103.46533966]
[90.61212921 -88.57162476]
[88.82966614 -73.67790985]
[87.04720306 -58.78419113]
[87.04720306 -43.78419113]
[88.82966614 -28.89047241]
[90.61212921 -13.99675560]
[92.39459991 0.89696169]
[94.17706299 15.79067898]
[96.29168701 30.64087677]
[98.73741150 45.44014740]
[101.18314362 60.23941803]
[103.62886810 75.03868866]
[106.07460022 89.83795929]
[111.48526001 75.84779358]
[121.78211975 64.94023895]
[135.43769836 58.73337173]
[150.42626953 58.14793777]
[164.52436829 63.27078629]
[175.64062500 73.34197235]
[182.12602234 86.86749268]
[183.01846313 101.84091949]
[178.18557739 116.04103851]
[168.34429932 127.36133575]
[154.95451355 134.12251282]
[140.00251770 135.32160950]
[125.70635223 130.78071594]
[114.18676758 121.17347717]
[107.15318298 107.92687988]
[106.48339844 122.91191864]
[105.81361389 137.89695740]
[105.14382935 152.88198853]
[104.47403717 167.86703491]
[103.80425262 182.85206604]
[103.24604797 197.84167480]
[102.79943848 212.83503723]
[102.35282898 227.82838440]
[101.90622711 242.82173157]
[115.42766571 252.98374939]
[120.18054199 269.04336548]
[114.48168945 284.61529541]
[100.76306915 293.63067627]
[100.53974152 308.62899780]
[100.31641388 323.62734985]
[100.09308624 338.62567139]
[115.03546143 340.02551270]
[129.82194519 342.59338379]
[144.36137390 346.31350708]
[158.56408691 351.16290283]
[172.34255981 357.11169434]
[185.61180115 364.12319946]
[198.29002380 372.15417480]
[210.29905701 381.15515137]
[221.56484985 391.07058716]
[232.01795959 401.83935547]
[241.59393311 413.39508057]
[250.23371887 425.66650391]
[257.88406372 438.57800293]
[264.49780273 452.04992676]
[270.03414917 465.99920654]
[274.45895386 480.33990479]
[277.74496460 494.98355103]
[279.87191772 509.83984375]
[280.82669067 524.81726074]
[280.60342407 539.82336426]
[279.20343018 554.76574707]
[276.63540649 569.55218506]
[272.91513062 584.09161377]
[268.06561279 598.29425049]
[262.11666870 612.07269287]
[255.10502625 625.34185791]
[247.07391357 638.02001953]
[238.07283020 650.02893066]
[228.15727234 661.29461670]
[217.38839722 671.74761963]
[205.83256531 681.32348633]
[193.56103516 689.96313477]
[180.64949036 697.61334229]
[167.17749023 704.22692871]
[153.22813416 709.76312256]
[138.88742065 714.18780518]
[124.24374390 717.47369385]
[109.38740540 719.60046387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 172]
[41 171]
[42 170]
[43 169]
[48 165]
[49 164]
[50 163]
[51 162]
[53 161]
[54 160]
[55 159]
[56 158]
[57 157]
[58 156]
[59 141]
[60 140]
[61 139]
[62 138]
[63 137]
[67 136]
[68 135]
[69 134]
[70 133]
[71 132]
[88 131]
[89 130]
[90 129]
[91 128]
[93 126]
[94 125]
[95 124]
[96 123]
[97 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
