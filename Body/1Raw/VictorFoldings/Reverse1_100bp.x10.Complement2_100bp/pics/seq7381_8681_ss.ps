%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxUUGGAGUUUUGUUUACUAUUGGUAUGUGUUGUGAUUUCCUGCUUGGACUAGAGAAUAUGAUCAUAGGAAUUAGUAAAAAUAACGGUGUUGAUUGGAGGAG\
) } def
/len { sequence length } bind def

/coor [
[195.28419495 593.55627441]
[191.37197876 579.06518555]
[188.75582886 564.28497314]
[187.45619202 549.33142090]
[187.48324585 534.32153320]
[188.83679199 519.37280273]
[191.50622559 504.60214233]
[195.47064209 490.12524414]
[200.69903564 476.05535889]
[207.15048218 462.50262451]
[214.77449036 449.57312012]
[223.51136780 437.36801147]
[233.29277039 425.98284912]
[244.04211426 415.50674438]
[255.67529297 406.02163696]
[247.26068115 393.60415649]
[238.84605408 381.18664551]
[230.43144226 368.76916504]
[222.01681519 356.35165405]
[213.60220337 343.93417358]
[209.71546936 358.42187500]
[196.79225159 366.03701782]
[182.23554993 362.41729736]
[174.38409424 349.63626099]
[177.73556519 335.01547241]
[190.37008667 326.93035889]
[205.04924011 330.01193237]
[197.77601624 316.89324951]
[190.50279236 303.77456665]
[183.22955322 290.65585327]
[175.95632935 277.53717041]
[168.68310547 264.41845703]
[154.33897400 260.57379150]
[146.77600098 247.37318420]
[150.90589905 232.35380554]
[143.63267517 219.23512268]
[136.35943604 206.11642456]
[133.19766235 220.77941895]
[122.09830475 230.86921692]
[107.20113373 232.62257385]
[94.06243134 225.38554382]
[87.58261871 211.85736084]
[90.17848969 197.08367920]
[100.88186646 186.57475281]
[115.70063782 184.25010681]
[129.10861206 190.97763062]
[123.44582367 177.08761597]
[117.78304291 163.19758606]
[112.12025452 149.30755615]
[106.45746613 135.41752625]
[100.79467773 121.52750397]
[95.13189697 107.63747406]
[91.82511902 105.65312958]
[89.40906525 102.22084808]
[88.51079559 97.77111816]
[89.54170227 92.99858093]
[84.50479126 78.86955261]
[79.46787262 64.74052429]
[74.43095398 50.61149216]
[63.13341904 44.38827133]
[59.22903824 32.51647186]
[64.29277039 21.53079414]
[59.46677399 7.32833958]
[44.79299927 2.63936305]
[35.79901886 -9.64728451]
[35.76485443 -24.69596672]
[44.49402618 -36.73505020]
[39.66802597 -50.93750763]
[34.84202957 -65.13996124]
[20.71582794 -76.95233154]
[24.80304718 -94.01871490]
[19.76613235 -108.14774323]
[14.98544121 -112.71463776]
[13.45805645 -118.18859100]
[14.79642963 -122.77310944]
[10.18242073 -137.04583740]
[5.56841135 -151.31857300]
[-9.31488228 -149.17485046]
[-24.34638023 -149.57740784]
[-39.09359741 -152.51469421]
[-53.13222885 -157.90216064]
[-66.05834961 -165.58483887]
[-77.50005341 -175.34164429]
[-87.12813568 -186.89189148]
[-94.66558075 -199.90322876]
[-99.89552307 -214.00129700]
[-102.66748810 -228.78048706]
[-102.90171051 -243.81555176]
[-100.59146118 -258.67388916]
[-95.80320740 -272.92803955]
[-88.67471313 -286.16784668]
[-79.41108704 -298.01239014]
[-68.27886200 -308.12088013]
[-55.59832382 -316.20248413]
[-41.73432541 -322.02462769]
[-27.08575821 -325.41986084]
[-12.07409382 -326.29043579]
[2.86875439 -324.61135864]
[17.31284904 -320.43093872]
[30.84260750 -313.86938477]
[43.06874847 -305.11557007]
[53.63950348 -294.42132568]
[62.25073242 -282.09432983]
[68.65467072 -268.48925781]
[72.66706085 -253.99758911]
[74.17247009 -239.03623962]
[73.12757111 -224.03570557]
[69.56243134 -209.42755127]
[63.57963181 -195.63212585]
[55.35131073 -183.04631042]
[45.11420441 -172.03224182]
[33.16286087 -162.90681458]
[19.84114456 -155.93258667]
[24.45515442 -141.65985107]
[29.06916428 -127.38711548]
[33.89516068 -113.18466187]
[38.93207550 -99.05563354]
[49.72314072 -93.58941650]
[54.03511047 -81.85950470]
[49.04448700 -69.96595764]
[53.87048340 -55.76350403]
[58.69647980 -41.56105042]
[72.95335388 -37.33262634]
[82.09472656 -25.37857628]
[82.44840240 -10.15595055]
[73.66922760 2.50234175]
[78.49523163 16.70479774]
[92.29695129 27.54358673]
[88.55998230 45.57457733]
[93.59690094 59.70360565]
[98.63381958 73.83263397]
[103.67073822 87.96166229]
[109.02191925 101.97468567]
[114.68470764 115.86471558]
[120.34749603 129.75474548]
[126.01027679 143.64477539]
[131.67306519 157.53479004]
[137.33584595 171.42481995]
[142.99864197 185.31484985]
[149.47813416 198.84320068]
[156.75135803 211.96188354]
[164.02459717 225.08058167]
[178.95100403 229.53482056]
[186.14021301 242.94264221]
[181.80178833 257.14523315]
[189.07502747 270.26394653]
[196.34825134 283.38262939]
[203.62147522 296.50131226]
[210.89471436 309.62002563]
[218.16793823 322.73870850]
[226.01969910 335.51956177]
[234.43431091 347.93704224]
[242.84893799 360.35455322]
[251.26354980 372.77203369]
[259.67816162 385.18954468]
[268.09277344 397.60702515]
[281.21383667 390.31762695]
[294.92779541 384.21636963]
[309.12731934 379.35104370]
[323.70126343 375.75973511]
[338.53558350 373.47055054]
[353.51419067 372.50137329]
[368.51980591 372.85983276]
[383.43505859 374.54306030]
[398.14315796 377.53796387]
[412.52902222 381.82104492]
[426.48001099 387.35882568]
[439.88702393 394.10791016]
[452.64505005 402.01550293]
[464.65426636 411.01974487]
[475.82070923 421.05010986]
[486.05694580 432.02813721]
[495.28286743 443.86788940]
[503.42630005 456.47671509]
[510.42346191 469.75592041]
[516.21960449 483.60156250]
[520.76940918 497.90530396]
[524.03723145 512.55517578]
[525.99749756 527.43658447]
[526.63482666 542.43292236]
[525.94427490 557.42694092]
[523.93127441 572.30126953]
[520.61151123 586.93951416]
[516.01104736 601.22698975]
[510.16580200 615.05200195]
[503.12155151 628.30633545]
[494.93347168 640.88616943]
[485.66561890 652.69311523]
[475.39050293 663.63476562]
[464.18856812 673.62548828]
[452.14746094 682.58703613]
[439.36148071 690.44934082]
[425.93063354 697.15087891]
[411.96005249 702.63909912]
[397.55911255 706.87115479]
[382.84048462 709.81384277]
[367.91937256 711.44421387]
[352.91253662 711.74938965]
[337.93750000 710.72711182]
[323.11135864 708.38531494]
[308.55026245 704.74237061]
[294.36807251 699.82672119]
[280.67584229 693.67681885]
[267.58074951 686.34094238]
[255.18522644 677.87634277]
[243.58631897 668.34942627]
[232.87481689 657.83459473]
[223.13452148 646.41424561]
[214.44169617 634.17773438]
[206.86436462 621.22082520]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 156]
[16 155]
[17 154]
[18 153]
[19 152]
[20 151]
[27 150]
[28 149]
[29 148]
[30 147]
[31 146]
[32 145]
[35 142]
[36 141]
[37 140]
[46 139]
[47 138]
[48 137]
[49 136]
[50 135]
[51 134]
[52 133]
[56 132]
[57 131]
[58 130]
[59 129]
[62 127]
[63 126]
[67 122]
[68 121]
[69 120]
[71 117]
[72 116]
[75 115]
[76 114]
[77 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
