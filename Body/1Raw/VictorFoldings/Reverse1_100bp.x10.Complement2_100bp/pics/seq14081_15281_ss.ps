%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAACAUUAACUCUAACGAGCCCCCUUAUCCAAUACACUAAUCCUCAUCCCAAUCCUACUCACCCUUCUUCUUUCUCUCCUUCAUUUCAAAUUAAUACxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[137.11108398 597.56378174]
[133.20957947 612.19445801]
[124.76683807 624.76422119]
[112.69863892 633.90954590]
[98.31406403 638.63848877]
[83.17343903 638.43798828]
[68.91910553 633.32989502]
[57.09726715 623.86822510]
[48.99027252 611.07940674]
[45.47750473 596.35052490]
[46.94000244 581.27935791]
[53.21912384 567.50073242]
[63.63375854 556.50915527]
[77.05420685 549.49700928]
[92.02471161 547.22485352]
[94.69050598 532.46362305]
[97.35630035 517.70245361]
[100.02210236 502.94122314]
[94.66985321 489.04147339]
[104.73654938 476.83605957]
[107.40234375 462.07482910]
[102.05010223 448.17510986]
[112.11679077 435.96966553]
[114.78259277 421.20846558]
[117.44838715 406.44723511]
[120.11418152 391.68603516]
[122.77997589 376.92480469]
[122.77997589 361.92480469]
[120.11418152 347.16360474]
[117.44838715 332.40237427]
[114.78259277 317.64114380]
[112.11679077 302.87994385]
[109.45099640 288.11871338]
[106.10794067 284.70800781]
[104.87199402 279.16098022]
[106.93244171 272.87878418]
[97.39276886 261.44006348]
[102.99732971 246.64482117]
[100.77221680 231.81077576]
[89.89308167 242.13766479]
[75.01589966 240.22210693]
[67.10756683 227.47619629]
[71.99781036 213.29574585]
[86.08173370 208.13403320]
[98.97626495 215.79473877]
[97.86061859 200.83628845]
[96.74496460 185.87782288]
[95.62931824 170.91937256]
[94.51367188 155.96092224]
[92.09488678 153.39541626]
[90.79856873 149.53088379]
[91.22171021 144.90765381]
[93.69744873 140.31224060]
[93.25084686 125.31889343]
[92.80423737 110.32554626]
[92.02291870 95.34590912]
[90.90727234 80.38745117]
[89.79161835 65.42900085]
[87.67699432 50.57880020]
[84.57288361 35.90349960]
[81.46877289 21.22819710]
[78.36466217 6.55289412]
[67.99983978 -1.12389970]
[65.71653748 -13.41089725]
[72.20257568 -23.62157249]
[69.31730652 -38.34146500]
[66.43202972 -53.06135559]
[63.43725586 -67.75936127]
[60.33314896 -82.43466187]
[57.22903824 -97.10996246]
[54.12492752 -111.78526306]
[43.69929504 -123.68554688]
[48.63531876 -137.73847961]
[45.53120804 -152.41378784]
[38.84932327 -138.98425293]
[26.02248001 -131.20787048]
[11.02521324 -131.49424744]
[-1.49540842 -139.75463867]
[-7.65973425 -153.42947388]
[-5.55768156 -168.28144836]
[4.15940619 -179.70854187]
[18.48058319 -184.16990662]
[32.96827698 -180.28317261]
[43.13343430 -169.25244141]
[42.01778412 -184.21089172]
[40.90213776 -199.16935730]
[39.67516327 -214.11907959]
[38.33692932 -229.05926514]
[36.99869537 -243.99945068]
[35.66045761 -258.93963623]
[26.28131294 -267.79370117]
[25.47426987 -280.26495361]
[33.12769699 -289.63253784]
[32.01204681 -304.59100342]
[30.89639854 -319.54946899]
[16.36645699 -323.93640137]
[4.40484190 -333.27899170]
[-3.37073541 -346.31375122]
[-5.90869284 -361.27783203]
[-2.86579251 -376.14743042]
[5.34643888 -388.91159058]
[17.61736298 -397.84405518]
[32.28744125 -401.73675537]
[47.37266159 -400.06329346]
[60.83287811 -393.04992676]
[70.84770203 -381.64520264]
[76.06270599 -367.39151001]
[75.77261353 -352.21652222]
[70.01665497 -338.17254639]
[59.57327271 -327.15890503]
[45.85485077 -320.66510010]
[46.97050095 -305.70666504]
[48.08614731 -290.74819946]
[58.73386383 -276.79852295]
[50.60064316 -260.27786255]
[51.93887711 -245.33769226]
[53.27711105 -230.39750671]
[54.61534500 -215.45732117]
[58.34305954 -209.07562256]
[55.86059189 -200.28500366]
[56.97623825 -185.32655334]
[58.09188843 -170.36808777]
[60.20651245 -155.51789856]
[63.31062317 -140.84259033]
[73.51422882 -129.99198914]
[68.80023193 -114.88937378]
[71.90434265 -100.21407318]
[75.00845337 -85.53877258]
[78.11255646 -70.86347198]
[82.57220459 -64.96996307]
[81.15192413 -55.94662857]
[84.03719330 -41.22673416]
[86.92247009 -26.50684357]
[99.15238953 -13.92129993]
[93.03997040 3.44878387]
[96.14408112 18.12408638]
[99.24819183 32.79938889]
[102.35229492 47.47468948]
[109.03418732 34.04515457]
[121.86103058 26.26877785]
[136.85829163 26.55515289]
[149.37892151 34.81554031]
[155.54324341 48.49037552]
[153.44119263 63.34235764]
[143.72410583 74.76943970]
[129.40292358 79.23081970]
[114.91522980 75.34407806]
[104.75007629 64.31334686]
[105.86572266 79.27180481]
[106.98136902 94.23025513]
[109.51743317 97.13555908]
[110.76057434 101.14460754]
[110.24655151 105.65490723]
[107.79759216 109.87893677]
[108.24419403 124.87228394]
[108.69080353 139.86563110]
[109.47212219 154.84527588]
[110.58777618 169.80372620]
[111.70342255 184.76217651]
[112.81906891 199.72062683]
[113.93471527 214.67909241]
[115.60626221 229.58566284]
[117.83137512 244.41970825]
[127.53020477 256.91943359]
[121.76648712 270.65365601]
[124.21221161 285.45294189]
[126.87801361 300.21414185]
[129.54380798 314.97537231]
[132.20959473 329.73657227]
[134.87539673 344.49780273]
[137.54119873 359.25900269]
[141.70187378 344.84759521]
[149.14779663 331.82614136]
[159.45787048 320.93109131]
[172.04901123 312.77859497]
[186.20910645 307.82968140]
[201.13735962 306.36431885]
[215.98948669 308.46530151]
[229.92553711 314.01385498]
[242.15736389 322.69613647]
[251.99319458 334.02117920]
[258.87677002 347.34848022]
[262.41876221 361.92428589]
[262.41891479 376.92428589]
[258.87713623 391.50015259]
[251.99380493 404.82754517]
[242.15817261 416.15274048]
[229.92648315 424.83526611]
[215.99052429 430.38406372]
[201.13842773 432.48529053]
[186.21015930 431.02017212]
[172.04997253 426.07150269]
[159.45869446 417.91921997]
[149.14843750 407.02432251]
[141.70228577 394.00299072]
[137.54119873 379.59060669]
[134.87539673 394.35183716]
[132.20959473 409.11303711]
[129.54380798 423.87426758]
[126.87801361 438.63546753]
[132.03958130 453.59103394]
[122.16355896 464.74063110]
[119.49776459 479.50186157]
[124.65933228 494.45739746]
[114.78331757 505.60699463]
[112.11752319 520.36822510]
[109.45172882 535.12945557]
[106.78592682 549.89068604]
[120.01602173 557.25567627]
[130.13598633 568.51910400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 208]
[16 207]
[17 206]
[18 205]
[20 203]
[21 202]
[23 200]
[24 199]
[25 198]
[26 197]
[27 196]
[28 171]
[29 170]
[30 169]
[31 168]
[32 167]
[33 166]
[36 165]
[38 163]
[39 162]
[45 161]
[46 160]
[47 159]
[48 158]
[49 157]
[53 156]
[54 155]
[55 154]
[56 150]
[57 149]
[58 148]
[59 138]
[60 137]
[61 136]
[62 135]
[65 133]
[66 132]
[67 131]
[68 129]
[69 128]
[70 127]
[71 126]
[73 124]
[74 123]
[84 122]
[85 121]
[86 120]
[87 118]
[88 117]
[89 116]
[90 115]
[93 113]
[94 112]
[95 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
