%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxACCAUAUUAUGCGGAGUGUGAGUAAGAGUUGGGGGACUGUUUUGUGUAUCGGAUGGGGAAGGAACAUGAUAGGGAUACUCCGUAUUAAUAUUGUUCGAGG\
) } def
/len { sequence length } bind def

/coor [
[74.04088593 803.78973389]
[66.41258240 816.93804932]
[54.33029175 826.16229248]
[39.63646317 830.05584717]
[24.57179832 828.02496338]
[11.43355560 820.37939453]
[2.22521758 808.28497314]
[-1.64901018 793.58599854]
[0.40166384 778.52404785]
[8.06452656 765.39587402]
[20.17104721 756.20343018]
[34.87506866 752.34857178]
[36.87908554 737.48303223]
[38.88309860 722.61749268]
[40.88711166 707.75195312]
[26.94945908 702.29028320]
[14.71669197 693.64624023]
[4.90239048 682.31878662]
[-1.91967368 668.96350098]
[-5.34907722 654.35473633]
[-5.18224716 639.34075928]
[-1.42453885 624.79425049]
[5.70982122 611.56195068]
[15.80994511 600.41503906]
[28.29194450 592.00439453]
[42.43268585 586.82250977]
[57.41168213 585.17474365]
[59.41569519 570.30920410]
[61.41971207 555.44366455]
[63.42372513 540.57812500]
[50.39690781 531.01702881]
[43.93211365 516.10522461]
[45.88071823 499.87500000]
[55.80488586 486.76751709]
[71.07144928 480.41741943]
[72.85391998 465.52368164]
[74.63638306 450.62997437]
[76.41884613 435.73626709]
[78.20131683 420.84252930]
[79.98377991 405.94882202]
[81.76625061 391.05511475]
[67.29539490 385.38815308]
[54.77167511 376.16735840]
[45.04936600 364.01461792]
[38.79350662 349.75192261]
[36.43439865 334.34603882]
[38.13800812 318.84277344]
[43.79431152 304.29602051]
[53.02438354 291.69622803]
[65.20577240 281.90280151]
[79.51447296 275.58560181]
[94.98065948 273.17910767]
[96.54118347 258.26052856]
[98.10170746 243.34191895]
[99.66223145 228.42330933]
[101.22274780 213.50469971]
[102.67217255 198.57489014]
[102.44884491 183.57655334]
[100.66637421 168.68284607]
[98.88391113 153.78912354]
[97.10144806 138.89540100]
[95.31897736 124.00168610]
[93.53651428 109.10797119]
[91.64321899 94.22793579]
[89.63920593 79.36240387]
[78.05928802 72.48345184]
[72.63475037 60.36797333]
[75.14144897 47.53058243]
[84.44433594 38.61510086]
[82.66186523 23.72138214]
[80.87940216 8.82766438]
[71.95451355 2.61035180]
[68.00597382 -7.28860235]
[70.11318207 -17.51151848]
[77.34390259 -24.73160934]
[76.00566864 -39.67179489]
[74.66743469 -54.61198044]
[73.32920074 -69.55216217]
[71.99096680 -84.49234772]
[60.72975922 -91.88151550]
[55.85161209 -104.22712708]
[58.92903519 -116.93978119]
[68.62073517 -125.43097687]
[67.50508881 -140.38943481]
[66.38944244 -155.34788513]
[65.27378845 -170.30633545]
[54.55574036 -185.27981567]
[62.78649521 -200.77890015]
[61.44826126 -215.71908569]
[60.11002731 -230.65927124]
[51.17238998 -243.71412659]
[57.74336624 -257.08093262]
[56.40513229 -272.02111816]
[41.65383911 -275.37588501]
[28.66224289 -283.12661743]
[18.70313263 -294.51394653]
[12.75219822 -308.42227173]
[11.39245129 -323.48898315]
[14.75710773 -338.23803711]
[22.51653099 -351.22442627]
[33.91053391 -361.17590332]
[47.82284546 -367.11752319]
[62.89048004 -368.46716309]
[77.63726807 -365.09265137]
[90.61846161 -357.32452393]
[100.56230164 -345.92385864]
[106.49459076 -332.00756836]
[107.83414459 -316.93902588]
[104.44972992 -302.19448853]
[96.67290497 -289.21850586]
[85.26557922 -279.28231812]
[71.34531403 -273.35934448]
[72.68354797 -258.41915894]
[81.52546692 -246.43293762]
[75.05021667 -231.99749756]
[76.38845062 -217.05731201]
[77.72668457 -202.11712646]
[86.80506134 -194.12278748]
[88.04223633 -181.68682861]
[80.23224640 -171.42198181]
[81.34789276 -156.46353149]
[82.46353912 -141.50508118]
[83.57919312 -126.54662323]
[96.78001404 -116.12660217]
[98.39189911 -99.04688263]
[86.93115234 -85.83058167]
[88.26938629 -70.89039612]
[89.60762024 -55.95021439]
[90.94585419 -41.01002884]
[92.28408813 -26.06984329]
[104.53472900 -11.10960007]
[95.77311707 7.04519892]
[97.55558777 21.93891716]
[99.33805084 36.83263397]
[112.99098969 46.65282059]
[115.36391449 63.64352798]
[104.50473785 77.35839081]
[106.50875092 92.22392273]
[110.62101746 99.15657806]
[108.43022919 107.32550812]
[110.21269226 122.21922302]
[111.99516296 137.11294556]
[113.77762604 152.00665283]
[115.56009674 166.90037537]
[117.34255981 181.79409790]
[123.37252045 168.05947876]
[134.14614868 157.62258911]
[148.06526184 152.03166199]
[163.06503296 152.11608887]
[176.92031860 157.86334229]
[187.57579041 168.42083740]
[193.45075989 182.22245789]
[193.67372131 197.22080994]
[188.21159363 211.19096375]
[177.87464905 222.06053162]
[164.19631958 228.21708679]
[149.20568848 228.74732971]
[135.12654114 223.57261658]
[124.04743195 213.46058655]
[117.61235809 199.91313171]
[119.96366882 208.73974609]
[116.14135742 215.06523132]
[114.58083344 229.98382568]
[113.02030945 244.90243530]
[111.45978546 259.82104492]
[109.89926147 274.73965454]
[123.50720215 279.75524902]
[135.50802612 287.88162231]
[145.20434570 298.64102173]
[152.03399658 311.40292358]
[155.60263062 325.42080688]
[155.70649719 339.87594604]
[152.34408569 353.92526245]
[145.71591187 366.75036621]
[136.21260071 377.60531616]
[124.39184570 385.85998535]
[110.94567108 391.03662109]
[96.65996552 392.83758545]
[94.87749481 407.73129272]
[93.09503174 422.62500000]
[91.31256866 437.51873779]
[89.53009796 452.41244507]
[87.74763489 467.30615234]
[85.96517181 482.19989014]
[97.58214569 489.99145508]
[104.67488861 501.97097778]
[105.90828705 515.77160645]
[101.09843445 528.69500732]
[91.23740387 538.23907471]
[78.28925323 542.58215332]
[76.28524017 557.44769287]
[74.28122711 572.31323242]
[72.27721405 587.17871094]
[86.28513336 592.73425293]
[98.54888153 601.47570801]
[108.35810089 612.89141846]
[115.14589691 626.31494141]
[118.52156830 640.96411133]
[118.29312897 655.98638916]
[114.47819519 670.50860596]
[107.30272675 683.68768311]
[97.18763733 694.75970459]
[84.72410583 703.08386230]
[70.63903809 708.18005371]
[55.75263977 709.75598145]
[53.74862671 724.62152100]
[51.74461365 739.48706055]
[49.74059677 754.35260010]
[62.89891052 761.96356201]
[72.13903809 774.03369141]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 208]
[13 207]
[14 206]
[15 205]
[27 193]
[28 192]
[29 191]
[30 190]
[35 184]
[36 183]
[37 182]
[38 181]
[39 180]
[40 179]
[41 178]
[52 166]
[53 165]
[54 164]
[55 163]
[56 162]
[57 160]
[58 145]
[59 144]
[60 143]
[61 142]
[62 141]
[63 140]
[64 138]
[65 137]
[69 134]
[70 133]
[71 132]
[75 130]
[76 129]
[77 128]
[78 127]
[79 126]
[83 123]
[84 122]
[85 121]
[86 120]
[88 117]
[89 116]
[90 115]
[92 113]
[93 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
