%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCCAAAUACCUCCCAAGAAGAUGAUAAUCCUGAAAAGCGAAGCUUCGCUUCCGAAGAGUUUAGUACUUUUAAUAAUUAUAAUGACGACAAUCUCUUUxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[183.17129517 356.18710327]
[188.96914673 342.32821655]
[196.56251526 329.36581421]
[205.81591797 317.53118896]
[216.56420898 307.03558350]
[228.61555481 298.06628418]
[221.34231567 284.94760132]
[214.06909180 271.82888794]
[201.13098145 264.44955444]
[201.20640564 248.62852478]
[193.93318176 235.50984192]
[186.65995789 222.39114380]
[178.43115234 209.84974670]
[169.29234314 197.95510864]
[160.15354919 186.06047058]
[151.01473999 174.16584778]
[141.87593079 162.27120972]
[132.73713684 150.37657166]
[123.59833527 138.48194885]
[114.02321625 126.93564606]
[104.02503967 115.75366974]
[92.45697021 114.40422821]
[84.75889587 105.66461182]
[84.88036346 94.01873016]
[75.04978180 82.68914032]
[65.21920013 71.35954285]
[55.38861847 60.02994919]
[57.51048660 74.87911224]
[53.06200790 89.20430756]
[42.90211868 100.23954773]
[28.99253082 105.85411835]
[14.01896954 104.96392059]
[0.87259364 97.74084473]
[-7.90823698 85.57955933]
[-10.62808132 70.82820129]
[-6.76178026 56.33504105]
[2.94414425 44.89847565]
[16.61562920 38.72672653]
[31.61292648 39.01146317]
[45.04128265 45.69851303]
[37.38068390 32.80218506]
[29.72008705 19.90585899]
[22.05949020 7.00953102]
[14.39889240 -5.88679552]
[-0.65351498 -9.89463806]
[-8.23873711 -23.08247566]
[-4.32510948 -37.40794754]
[-11.98570633 -50.30427170]
[-19.64630318 -63.20059967]
[-27.30690193 -76.09692383]
[-35.34807587 -88.75945282]
[-43.76269150 -101.17694855]
[-52.17731094 -113.59444427]
[-60.59193039 -126.01194000]
[-69.00654602 -138.42942810]
[-82.22279358 -131.30749512]
[-96.09175110 -125.55919647]
[-110.47109985 -121.24349976]
[-125.21329498 -118.40470886]
[-140.16705322 -117.07193756]
[-155.17890930 -117.25888062]
[-170.09484863 -118.96360779]
[-184.76177979 -122.16862488]
[-199.02920532 -126.84104919]
[-212.75071716 -132.93293762]
[-225.78550720 -140.38175964]
[-237.99983215 -149.11109924]
[-249.26834106 -159.03137207]
[-259.47540283 -170.04077148]
[-268.51626587 -182.02633667]
[-276.29818726 -194.86505127]
[-282.74127197 -208.42520142]
[-287.77941895 -222.56762695]
[-291.36096191 -237.14718628]
[-293.44909668 -252.01429749]
[-294.02239990 -267.01635742]
[-293.07504272 -281.99948120]
[-290.61666870 -296.80984497]
[-286.67257690 -311.29553223]
[-281.28320312 -325.30789185]
[-274.50384521 -338.70309448]
[-266.40408325 -351.34368896]
[-257.06704712 -363.09997559]
[-246.58851624 -373.85134888]
[-235.07604980 -383.48742676]
[-222.64776611 -391.90936279]
[-209.43121338 -399.03070068]
[-195.56199646 -404.77838135]
[-181.18244934 -409.09344482]
[-166.44013977 -411.93161011]
[-151.48632812 -413.26370239]
[-136.47447205 -413.07611084]
[-121.55861664 -411.37072754]
[-106.89182281 -408.16506958]
[-92.62460327 -403.49200439]
[-78.90335846 -397.39953613]
[-65.86888885 -389.95013428]
[-53.65494919 -381.22024536]
[-42.38687897 -371.29946899]
[-32.18030167 -360.28964233]
[-23.13995743 -348.30368042]
[-15.35861301 -335.46459961]
[-8.91611958 -321.90417480]
[-3.87858605 -307.76153564]
[-0.29770654 -293.18182373]
[1.78977358 -278.31460571]
[2.36243320 -263.31250000]
[1.41439581 -248.32945251]
[-1.04460990 -233.51916504]
[-4.98935080 -219.03366089]
[-10.37934685 -205.02156067]
[-17.15928841 -191.62666321]
[-25.25960350 -178.98640442]
[-34.59716415 -167.23051453]
[-45.07616043 -156.47962952]
[-56.58905411 -146.84405518]
[-48.17443466 -134.42655945]
[-39.75981522 -122.00906372]
[-31.34519768 -109.59156799]
[-22.93057823 -97.17407227]
[-20.20633698 -96.51327515]
[-17.57970047 -94.73355865]
[-15.47815800 -91.86669159]
[-14.30982304 -88.09847260]
[-14.41057491 -83.75752258]
[-6.74997711 -70.86119843]
[0.91062021 -57.96487045]
[8.57121754 -45.06854248]
[23.02346039 -41.65265274]
[30.97610855 -28.68307304]
[27.29521942 -13.54739285]
[34.95581818 -0.65106624]
[42.61641312 12.24526024]
[50.27701187 25.14158821]
[57.93760681 38.03791428]
[66.71820831 50.19937134]
[76.54878998 61.52896500]
[86.37937164 72.85855865]
[96.20995331 84.18814850]
[112.20140839 89.25269318]
[115.20701599 105.75550079]
[125.20518494 116.93746948]
[128.63595581 102.33508301]
[142.12551880 95.77523041]
[155.72987366 102.09358978]
[159.42037964 116.63250732]
[150.47656250 128.67442322]
[135.49296570 129.34313965]
[144.63177490 141.23777771]
[153.77056885 153.13241577]
[162.90937805 165.02703857]
[172.04817200 176.92167664]
[181.18698120 188.81631470]
[190.32577515 200.71093750]
[189.96411133 185.71530151]
[197.06179810 172.50080872]
[209.76351929 164.52169800]
[224.74908447 163.86369324]
[238.10128784 170.69879150]
[246.32991028 183.24031067]
[247.28399658 198.20994568]
[240.71415710 211.69464111]
[228.33773804 220.16955566]
[213.38989258 221.41935730]
[199.77864075 215.11791992]
[207.05187988 228.23660278]
[214.32510376 241.35530090]
[227.78344727 249.67297363]
[227.18778992 264.55566406]
[234.46101379 277.67434692]
[241.73425293 290.79306030]
[255.72598267 285.32363892]
[270.32189941 281.76797485]
[285.26150513 280.18957520]
[300.27819824 280.61654663]
[315.10400391 283.04132080]
[329.47430420 287.42062378]
[343.13262939 293.67626953]
[355.83526611 301.69662476]
[367.35552979 311.33856201]
[377.48782349 322.43002319]
[386.05126953 334.77307129]
[392.89312744 348.14739990]
[397.89123535 362.31433105]
[400.95639038 377.02108765]
[402.03393555 392.00515747]
[401.10464478 406.99914551]
[398.18505859 421.73547363]
[393.32730103 435.95114136]
[386.61804199 449.39248657]
[378.17706299 461.81961060]
[368.15496826 473.01071167]
[356.73062134 482.76611328]
[344.10791016 490.91171265]
[330.51211548 497.30212402]
[316.18582153 501.82330322]
[301.38473511 504.39459229]
[286.37301636 504.97006226]
[271.41851807 503.53945923]
[256.78814697 500.12832642]
[242.74301147 494.79754639]
[229.53373718 487.64221191]
[217.39607239 478.79006958]
[206.54663086 468.39907837]
[197.17903137 456.65463257]
[189.46043396 443.76638794]
[183.52862549 429.96432495]
[179.48942566 415.49478149]
[177.41493225 400.61593628]
[177.34217834 385.59335327]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 171]
[7 170]
[8 169]
[10 167]
[11 166]
[12 165]
[13 154]
[14 153]
[15 152]
[16 151]
[17 150]
[18 149]
[19 148]
[20 142]
[21 141]
[24 139]
[25 138]
[26 137]
[27 136]
[40 135]
[41 134]
[42 133]
[43 132]
[44 131]
[47 128]
[48 127]
[49 126]
[50 125]
[51 120]
[52 119]
[53 118]
[54 117]
[55 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
