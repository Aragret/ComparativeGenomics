%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxGUAUUAAUUUGAAAUGAAGGAGAGAAAGAAGAAGGGUGAGUAGGAUUGGGAUGAGGAUUAGUGUAUUGGAUAAGGGGGCUCGUUAGAGUUAAUGUUAUAU\
) } def
/len { sequence length } bind def

/coor [
[89.50663757 487.81307983]
[81.59590912 474.99249268]
[76.73686218 460.73284912]
[75.17322540 445.74942017]
[76.98343658 430.79379272]
[82.07669830 416.61611938]
[90.19752502 403.92755127]
[100.93859100 393.36453247]
[113.76111603 385.45690918]
[128.02192688 380.60131836]
[126.46141052 365.68270874]
[124.90088654 350.76409912]
[123.34036255 335.84548950]
[121.25016022 333.97756958]
[119.77393341 331.16912842]
[119.27361298 327.64987183]
[120.02136230 323.77618408]
[122.15827942 319.99630737]
[121.48849487 305.01126099]
[120.81871033 290.02621460]
[120.14892578 275.04119873]
[119.47914124 260.05615234]
[111.18125916 247.68705750]
[118.29463196 233.55516052]
[117.62484741 218.57012939]
[115.84237671 203.67640686]
[112.95710754 188.95651245]
[110.07183075 174.23663330]
[107.18656158 159.51673889]
[103.86430359 144.88926697]
[100.10800171 130.36721802]
[96.35169983 115.84515381]
[86.69087219 109.34056854]
[83.85837555 98.04374695]
[89.30743408 87.75058746]
[85.76776123 73.17421722]
[82.22808838 58.59783936]
[78.68841553 44.02146530]
[65.47436523 35.77363586]
[62.09228134 20.94069290]
[70.03675842 8.39394665]
[66.49708557 -6.18242884]
[62.95741653 -20.75880432]
[59.41774368 -35.33517838]
[55.87807083 -49.91155624]
[52.33839798 -64.48793030]
[48.79872513 -79.06430817]
[45.25905228 -93.64067841]
[41.71937943 -108.21705627]
[36.65327072 -115.81787109]
[38.23723602 -123.03678894]
[34.91497421 -137.66424561]
[24.83405685 -126.55681610]
[9.85560417 -127.36054993]
[1.02117789 -139.48295593]
[4.84318686 -153.98786926]
[18.50418854 -160.18278503]
[31.93278122 -153.50234985]
[29.70766449 -168.33639526]
[27.48254776 -183.17044067]
[25.25742912 -198.00448608]
[23.03231239 -212.83853149]
[20.80719566 -227.67257690]
[18.58207893 -242.50662231]
[3.55364466 -243.24014282]
[-11.03822327 -246.89045715]
[-24.63316154 -253.31546021]
[-36.70946503 -262.26654053]
[-46.80411530 -273.39813232]
[-54.53052521 -286.28115845]
[-59.59334183 -300.41955566]
[-61.79975128 -315.26925659]
[-61.06680298 -330.25927734]
[-57.42453766 -344.81356812]
[-51.01475906 -358.37322998]
[-42.08551407 -370.41790771]
[-30.98148537 -380.48580933]
[-18.13070297 -388.19134521]
[-4.02803421 -393.23999023]
[-6.25315142 -408.07403564]
[-8.47826862 -422.90808105]
[-10.70338535 -437.74212646]
[-25.73634911 -437.98678589]
[-40.52398682 -440.70260620]
[-54.66287613 -445.81549072]
[-67.76730347 -453.18597412]
[-79.47975922 -462.61294556]
[-89.48073578 -473.83929443]
[-97.49739075 -486.55868530]
[-103.31101990 -500.42416382]
[-106.76303101 -515.05749512]
[-107.75923920 -530.05938721]
[-106.27248383 -545.02062988]
[-102.34330750 -559.53308105]
[-96.07891846 -573.20086670]
[-87.65019989 -585.65100098]
[-77.28709412 -596.54394531]
[-65.27232361 -605.58245850]
[-51.93365479 -612.52001953]
[-37.63497162 -617.16735840]
[-22.76636124 -619.39764404]
[-7.73344517 -619.15008545]
[7.05366707 -616.43145752]
[21.19157219 -611.31579590]
[34.29457474 -603.94281006]
[46.00522232 -594.51354980]
[56.00403214 -583.28533936]
[64.01823425 -570.56439209]
[69.82919312 -556.69775391]
[73.27838135 -542.06378174]
[74.27170563 -527.06170654]
[72.78206635 -512.10070801]
[68.85009766 -497.58901978]
[62.58307266 -483.92248535]
[54.15195465 -471.47393799]
[43.78675461 -460.58300781]
[31.77024078 -451.54678345]
[18.43023300 -444.61178589]
[4.13065815 -439.96722412]
[6.35577536 -425.13317871]
[8.58089256 -410.29913330]
[10.80600929 -395.46508789]
[25.76928902 -394.77636719]
[40.31531143 -391.18035889]
[53.88456345 -384.81347656]
[65.95474243 -375.91873169]
[76.06082916 -364.83645630]
[83.81302643 -351.99136353]
[88.91178131 -337.87609863]
[91.15937805 -323.03256226]
[90.46757507 -308.03100586]
[86.86109161 -293.44799805]
[80.47672272 -279.84454346]
[71.55813599 -267.74423218]
[60.44661331 -257.61322021]
[47.56793594 -249.84231567]
[33.41612244 -244.73173523]
[35.64123917 -229.89768982]
[37.86635590 -215.06364441]
[40.09147263 -200.22959900]
[42.31658936 -185.39556885]
[44.54170609 -170.56152344]
[46.76682663 -155.72747803]
[49.54243469 -140.98651123]
[52.86469650 -126.35905457]
[56.29575729 -111.75672913]
[59.83543015 -97.18035126]
[63.37510300 -82.60398102]
[66.91477203 -68.02760315]
[70.45444489 -53.45122910]
[73.99411774 -38.87485123]
[77.53379059 -24.29847717]
[81.07346344 -9.72210121]
[84.61313629 4.85427427]
[97.42710876 12.36011505]
[101.22448730 27.09220886]
[93.26478577 40.48179245]
[96.80445862 55.05816650]
[100.34413147 69.63454437]
[103.88380432 84.21091461]
[115.77153015 96.04553986]
[110.87375641 112.08885193]
[114.63005829 126.61091614]
[118.38636017 141.13298035]
[121.53825378 144.11953735]
[123.38963318 147.60334778]
[123.94387054 151.11450195]
[123.35661316 154.23246765]
[121.90644836 156.63145447]
[124.79172516 171.35134888]
[127.67699432 186.07124329]
[130.56227112 200.79113770]
[136.91670227 187.20359802]
[149.15670776 178.53282166]
[164.08276367 177.04531860]
[177.79325867 183.12994385]
[186.70428467 195.19615173]
[188.48651123 210.08990479]
[182.67410278 223.91798401]
[170.78637695 233.06576538]
[155.93077087 235.14205933]
[141.99050903 229.60411072]
[132.60987854 217.90034485]
[133.27966309 232.88537598]
[141.62545776 246.32629395]
[134.46418762 259.38635254]
[135.13397217 274.37139893]
[135.80375671 289.35644531]
[136.47354126 304.34149170]
[137.14332581 319.32650757]
[138.25897217 334.28497314]
[139.81948853 349.20358276]
[141.38002014 364.12219238]
[142.94053650 379.04080200]
[157.89747620 380.84011841]
[172.07885742 385.92306519]
[184.77333069 394.03469849]
[195.34414673 404.76806641]
[203.26109314 417.58483887]
[208.12704468 431.84213257]
[209.69793701 446.82476807]
[207.89497375 461.78128052]
[202.80859375 475.96142578]
[194.69390869 488.65393066]
[183.95797729 499.22216797]
[171.13928223 507.13598633]
[156.88081360 511.99850464]
[141.89778137 513.56573486]
[126.94171143 511.75918579]
[112.76280212 506.66934204]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 194]
[11 193]
[12 192]
[13 191]
[18 190]
[19 189]
[20 188]
[21 187]
[22 186]
[24 184]
[25 183]
[26 172]
[27 171]
[28 170]
[29 169]
[30 164]
[31 163]
[32 162]
[35 160]
[36 159]
[37 158]
[38 157]
[41 154]
[42 153]
[43 152]
[44 151]
[45 150]
[46 149]
[47 148]
[48 147]
[49 146]
[51 145]
[52 144]
[58 143]
[59 142]
[60 141]
[61 140]
[62 139]
[63 138]
[64 137]
[79 122]
[80 121]
[81 120]
[82 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
