%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxGGAAAAUGGUAGUAACCUGUUCAUCGUAGGCAUGAUAUGAAGUGUUGUUAGGAUUAGGAUUAUGGUUGAUAGAGGGAUUAACUUUUGUUUUAUGAGUUUA\
) } def
/len { sequence length } bind def

/coor [
[300.79226685 512.67602539]
[295.96627808 498.47354126]
[291.14028931 484.27108765]
[286.31430054 470.06863403]
[281.48828125 455.86618042]
[276.66229248 441.66372681]
[271.52032471 427.57257080]
[266.06497192 413.59979248]
[260.60961914 399.62698364]
[254.53578186 385.91171265]
[247.85559082 372.48135376]
[241.17539978 359.05096436]
[234.49520874 345.62060547]
[221.89950562 337.67089844]
[222.68130493 321.86901855]
[216.00111389 308.43865967]
[209.32090759 295.00827026]
[202.64071655 281.57791138]
[195.96052551 268.14752197]
[188.68730164 255.02882385]
[180.83554077 242.24798584]
[172.98377991 229.46714783]
[156.47424316 226.26187134]
[147.20864868 211.82359314]
[151.33163452 194.82299805]
[143.29046631 182.16047668]
[135.24929810 169.49795532]
[127.20812225 156.83541870]
[119.16694641 144.17289734]
[111.12577057 131.51037598]
[103.08460236 118.84785461]
[88.96633148 115.58892059]
[81.19881439 103.35732269]
[84.25287628 89.19332123]
[76.11766052 76.59101105]
[67.88884735 64.04960632]
[59.66004181 51.50820923]
[57.59761047 66.36574554]
[47.27943039 77.25312805]
[32.55393219 80.10964203]
[18.91335869 73.86987305]
[11.44530869 60.86109543]
[12.93517876 45.93527222]
[22.82728577 34.65935516]
[37.43211746 31.23899269]
[51.30332565 36.95064545]
[44.62313080 23.52026749]
[37.94293594 10.08989143]
[31.26274300 -3.34048438]
[24.58254814 -16.77086067]
[21.47658920 -2.09594893]
[11.00580406 8.64475155]
[-3.58532238 12.12311840]
[-17.77556992 7.26134157]
[-27.16793633 -4.43410397]
[-28.85209465 -19.33925819]
[-22.30619049 -32.83559418]
[-9.55854225 -40.74113083]
[5.44085121 -40.60624695]
[18.04443359 -32.47254181]
[13.21843719 -46.67499924]
[11.27087879 -31.80196953]
[6.10563564 -17.71934700]
[-2.02527094 -5.11425352]
[-12.72511482 5.39827871]
[-25.47182655 13.30532169]
[-39.64346695 18.22107124]
[-54.54857254 19.90567970]
[-69.45988464 18.27694893]
[-83.64984894 13.41435051]
[-96.42610931 5.55513906]
[-107.16527557 -4.91721535]
[-115.34337616 -17.49174500]
[-120.56136322 -31.55490875]
[-122.56465149 -46.42053223]
[-121.25549316 -61.36329651]
[-116.69776917 -75.65409851]
[-109.11385345 -88.59567261]
[-98.87379456 -99.55655670]
[-86.47721100 -108.00196075]
[-72.52896881 -113.51979828]
[-57.70963287 -115.84085083]
[-42.74227142 -114.85186768]
[-28.35717392 -110.60110474]
[-15.25622177 -103.29595947]
[-4.07864141 -93.29287720]
[4.63018990 -81.07992554]
[10.44347286 -67.25933838]
[11.33628845 -82.23274994]
[12.22910500 -97.20615387]
[13.12192059 -112.17955780]
[14.01473618 -127.15296173]
[14.90755272 -142.12637329]
[12.29448032 -150.87905884]
[15.92676449 -157.31555176]
[17.04241371 -172.27400208]
[18.15806198 -187.23245239]
[19.27371025 -202.19090271]
[20.38936043 -217.14935303]
[6.46484280 -223.09802246]
[-4.77200651 -233.24749756]
[-12.10229969 -246.49685669]
[-14.73089981 -261.40890503]
[-12.37267780 -276.36608887]
[-5.28343534 -289.74597168]
[5.76783991 -300.09722900]
[19.58238792 -306.29696655]
[34.66170883 -307.67276001]
[49.37011337 -304.07531738]
[62.11214447 -295.89486694]
[71.50563812 -284.01879883]
[76.53165436 -269.73532104]
[76.64501953 -254.59379578]
[71.83343506 -240.23666382]
[62.61881638 -228.22128296]
[50.00070190 -219.85098267]
[35.34781265 -216.03370667]
[34.23216248 -201.07525635]
[33.11651611 -186.11680603]
[32.00086594 -171.15835571]
[30.88521767 -156.19989014]
[29.88095856 -141.23355103]
[28.98814201 -126.26014709]
[28.09532547 -111.28674316]
[27.20251083 -96.31333923]
[26.30969429 -81.33992767]
[25.41687965 -66.36652374]
[27.42089272 -51.50099564]
[32.24689102 -37.29854202]
[38.01292419 -23.45105553]
[44.69311905 -10.02067947]
[51.37331390 3.40969706]
[58.05350876 16.84007263]
[64.73370361 30.27044868]
[72.20144653 43.27939987]
[80.43025208 55.82080078]
[88.65905762 68.36220551]
[94.95671844 72.23018646]
[96.91539764 81.15214539]
[111.03366852 84.41107941]
[118.80118561 96.64267731]
[115.74712372 110.80667877]
[123.78829956 123.46920013]
[131.82946777 136.13172913]
[139.87065125 148.79425049]
[147.91181946 161.45677185]
[155.95298767 174.11930847]
[163.99415588 186.78182983]
[177.39007568 188.18334961]
[187.38696289 196.91676331]
[190.48265076 209.62498474]
[185.76463318 221.61538696]
[193.61637878 234.39622498]
[201.46813965 247.17707825]
[205.99789429 232.87738037]
[219.24826050 225.84687805]
[233.62881470 230.11297607]
[240.90173340 243.23184204]
[236.90075684 257.68841553]
[223.91781616 265.20129395]
[209.39089966 261.46731567]
[216.07109070 274.89770508]
[222.75128174 288.32806396]
[229.43148804 301.75845337]
[236.11167908 315.18884277]
[249.18519592 324.09915161]
[247.92558289 338.94039917]
[254.60577393 352.37078857]
[261.28598022 365.80114746]
[267.96615601 379.23153687]
[273.75360107 365.39297485]
[287.57836914 359.57266235]
[301.52099609 365.10470581]
[307.59448242 378.82012939]
[302.31970215 392.86209106]
[288.71826172 399.18673706]
[274.58242798 394.17163086]
[280.03778076 408.14443970]
[285.49313354 422.11721802]
[289.56951904 425.37762451]
[291.76782227 429.46670532]
[292.08691406 433.53036499]
[290.86474609 436.83773804]
[295.69073486 451.04019165]
[300.51675415 465.24264526]
[305.34274292 479.44509888]
[310.16873169 493.64755249]
[314.99475098 507.85000610]
[330.03167725 506.69198608]
[344.88406372 509.31069946]
[358.61825562 515.54150391]
[370.37088013 524.99279785]
[379.40319824 537.07037354]
[385.14739990 551.01507568]
[387.24243164 565.95031738]
[385.55654907 580.93725586]
[380.19577026 595.03381348]
[371.49710083 607.35388184]
[360.00726318 617.12298584]
[346.44860840 623.72698975]
[331.67337036 626.75085449]
[316.61038208 626.00439453]
[302.20651245 621.53460693]
[289.36715698 613.62243652]
[278.89947510 602.76531982]
[271.46142578 589.64562988]
[267.52056885 575.08813477]
[267.32464600 560.00793457]
[270.88598633 545.35296631]
[277.98071289 532.04449463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[4 185]
[5 184]
[6 183]
[7 179]
[8 178]
[9 177]
[10 170]
[11 169]
[12 168]
[13 167]
[15 165]
[16 164]
[17 163]
[18 162]
[19 161]
[20 154]
[21 153]
[22 152]
[25 148]
[26 147]
[27 146]
[28 145]
[29 144]
[30 143]
[31 142]
[34 139]
[35 137]
[36 136]
[37 135]
[46 134]
[47 133]
[48 132]
[49 131]
[50 130]
[60 129]
[61 128]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
