%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[181.83763123 535.91101074]
[189.14526367 522.77142334]
[198.51603699 511.01394653]
[209.69433594 500.95932007]
[222.37519836 492.88183594]
[216.50624084 479.07766724]
[210.63728333 465.27349854]
[204.76831055 451.46932983]
[198.69448853 437.75405884]
[192.41711426 424.13073730]
[186.13975525 410.50741577]
[172.12130737 405.60653687]
[165.56111145 391.87997437]
[170.79666138 377.20935059]
[167.82804871 391.91268921]
[157.97984314 403.22695923]
[143.82633972 408.19467163]
[129.06721497 405.51727295]
[117.56048584 395.89462280]
[112.31398010 381.84207153]
[114.69911957 367.03292847]
[124.09243774 355.33822632]
[138.03854370 349.81497192]
[152.89195251 351.90692139]
[164.76947021 361.06652832]
[160.58245850 346.66275024]
[156.39546204 332.25897217]
[152.20845032 317.85519409]
[141.76187134 311.75637817]
[138.15571594 299.79061890]
[143.84541321 288.21520996]
[139.87332153 273.75067139]
[135.90121460 259.28616333]
[131.92912292 244.82162476]
[127.95702362 230.35710144]
[123.98493195 215.89257812]
[120.01283264 201.42805481]
[116.04074097 186.96353149]
[105.68612671 180.70985413]
[102.25852966 168.69172668]
[108.11992645 157.20230103]
[104.36363220 142.68025208]
[100.39153290 128.21572876]
[96.20452118 113.81194305]
[86.24539948 103.99829865]
[89.39169312 90.37506866]
[85.20468140 75.97129059]
[81.01767731 61.56750488]
[76.83066559 47.16372299]
[65.54880524 36.07182312]
[69.42594910 21.69068909]
[55.84128571 9.25933743]
[60.68648529 -7.60752392]
[56.28548431 -21.94737053]
[51.88448715 -36.28722000]
[47.37685776 -50.59390640]
[42.23489761 -64.68504333]
[36.57211304 -78.57507324]
[30.90932655 -92.46510315]
[18.53474426 -102.32310486]
[20.89470863 -117.02956390]
[7.96112871 -120.78948975]
[-0.32452992 -131.16052246]
[-1.11243558 -144.21661377]
[5.66141653 -155.17764282]
[0.20605943 -169.15045166]
[-5.24929762 -183.12324524]
[-19.78628349 -179.35331726]
[-34.66712570 -177.32922363]
[-49.68291473 -177.07937622]
[-64.62285614 -178.60728455]
[-79.27721405 -181.89151001]
[-93.44026947 -186.88594055]
[-106.91318512 -193.52044678]
[-119.50683594 -201.70191956]
[-131.04441833 -211.31549072]
[-141.36395264 -222.22618103]
[-150.32058716 -234.28085327]
[-157.78857422 -247.31025696]
[-163.66308594 -261.13150024]
[-167.86164856 -275.55053711]
[-170.32530212 -290.36492920]
[-171.01948547 -305.36676025]
[-169.93444824 -320.34536743]
[-167.08541870 -335.09051514]
[-162.51237488 -349.39520264]
[-156.27955627 -363.05859375]
[-148.47442627 -375.88888550]
[-139.20657349 -387.70596313]
[-128.60609436 -398.34390259]
[-116.82181549 -407.65344238]
[-104.01915741 -415.50381470]
[-90.37785339 -421.78482056]
[-76.08941650 -426.40832520]
[-61.35441589 -429.30938721]
[-46.37971878 -430.44729614]
[-31.37554741 -429.80609131]
[-16.55253220 -427.39474487]
[-2.11876893 -423.24710083]
[11.72311783 -417.42144775]
[24.77880859 -409.99948120]
[36.86502075 -401.08544922]
[47.81208420 -390.80450439]
[57.46632004 -379.30093384]
[65.69219208 -366.73623657]
[72.37422943 -353.28683472]
[77.41862488 -339.14151001]
[80.75456238 -324.49884033]
[82.33520508 -309.56436157]
[82.13837433 -294.54779053]
[80.16682434 -279.65991211]
[76.44823456 -265.10971069]
[71.03480530 -251.10144043]
[64.00254059 -237.83178711]
[55.45016098 -225.48703003]
[45.49772263 -214.24046326]
[34.28494644 -204.24996948]
[21.96924210 -195.65579224]
[8.72350025 -188.57859802]
[14.17885685 -174.60580444]
[19.63421440 -160.63301086]
[35.31130219 -154.54469299]
[41.86343384 -138.68957520]
[34.78473663 -122.69234467]
[46.75428009 -113.82785034]
[44.79935455 -98.12788391]
[50.46213913 -84.23786163]
[56.12492752 -70.34783173]
[64.25989532 -82.95030212]
[79.16895294 -84.59954071]
[89.86169434 -74.07978821]
[88.45584106 -59.14581680]
[75.98771667 -50.80639267]
[61.64959335 -55.20791245]
[66.69816589 -49.81034851]
[66.22433472 -40.68821716]
[70.62533569 -26.34836960]
[75.02632904 -12.00852203]
[85.56255341 -6.06590939]
[89.34645081 5.84483528]
[83.82972717 17.50367737]
[94.81210327 27.56532288]
[91.23444366 42.97671127]
[95.42145538 57.38049316]
[99.60846710 71.78427887]
[103.79547882 86.18805695]
[113.75460052 96.00170135]
[110.60830688 109.62493134]
[114.79531860 124.02870941]
[119.29570007 128.87207031]
[120.49456024 134.42721558]
[118.88568878 138.92395020]
[122.64199066 153.44599915]
[135.85049438 166.27630615]
[130.50526428 182.99143982]
[134.47735596 197.45596313]
[138.44944763 211.92048645]
[142.42155457 226.38500977]
[146.39364624 240.84953308]
[150.36573792 255.31405640]
[154.33784485 269.77856445]
[158.30993652 284.24310303]
[171.70800781 296.87533569]
[166.61222839 313.66818237]
[170.79924011 328.07196045]
[174.98625183 342.47573853]
[179.17326355 356.87951660]
[184.41998291 370.93200684]
[198.97375488 376.48406982]
[205.14581299 390.38946533]
[199.76307678 404.23007202]
[206.04043579 417.85336304]
[212.31779480 431.47668457]
[217.48686218 435.59887695]
[219.49652100 440.91470337]
[218.57249451 445.60034180]
[224.44145203 459.40454102]
[230.31040955 473.20870972]
[236.17938232 487.01287842]
[250.79461670 483.48519897]
[265.79116821 482.41137695]
[280.75991821 483.82067871]
[295.29254150 487.67471313]
[308.99249268 493.86828613]
[321.48611450 502.23248291]
[332.43252563 512.53906250]
[341.53311157 524.50689697]
[348.53961182 537.80950928]
[353.26086426 552.08392334]
[355.56808472 566.94079590]
[355.39831543 581.97479248]
[352.75619507 596.77581787]
[347.71380615 610.94000244]
[340.40872192 624.08093262]
[331.04019165 635.84027100]
[319.86383057 645.89703369]
[307.18453979 653.97692871]
[293.34817505 659.85955811]
[278.73226929 663.38446045]
[263.73550415 664.45538330]
[248.76701355 663.04321289]
[234.23515320 659.18634033]
[220.53637695 652.99017334]
[208.04437256 644.62353516]
[197.09994507 634.31488037]
[188.00166321 622.34527588]
[180.99774170 609.04132080]
[176.27923584 594.76599121]
[173.97488403 579.90863037]
[174.14755249 564.87469482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 179]
[6 178]
[7 177]
[8 176]
[9 173]
[10 172]
[11 171]
[14 168]
[25 167]
[26 166]
[27 165]
[28 164]
[31 162]
[32 161]
[33 160]
[34 159]
[35 158]
[36 157]
[37 156]
[38 155]
[41 153]
[42 152]
[43 149]
[44 148]
[46 146]
[47 145]
[48 144]
[49 143]
[51 141]
[53 138]
[54 137]
[55 136]
[56 134]
[57 128]
[58 127]
[59 126]
[61 124]
[65 121]
[66 120]
[67 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
