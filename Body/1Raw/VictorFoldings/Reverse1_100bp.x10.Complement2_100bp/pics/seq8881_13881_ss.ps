%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCAUCCGACUACCAAAGCUAUUAUUGAUCAUACCCCUAUUCCCCACAUCCACACGGAACACCAUUCUUCACCCGAUCCCGUAAAAAUUAGAAUCxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[90.32122803 427.00830078]
[79.62724304 437.89874268]
[65.26421356 443.06265259]
[50.08391953 441.47476196]
[37.10042191 433.45034790]
[28.89160156 420.58261108]
[27.08732986 405.42651367]
[32.04584122 390.99130249]
[42.78262711 380.14306641]
[57.16588211 375.03573608]
[58.72640610 360.11712646]
[60.28692627 345.19851685]
[61.84745026 330.27990723]
[63.40797424 315.36132812]
[56.03684998 305.77001953]
[57.21485138 293.32830811]
[66.85345459 284.75741577]
[68.63592529 269.86370850]
[70.41838837 254.96998596]
[63.19087982 245.27000427]
[64.55399323 232.84721375]
[74.31913757 224.42077637]
[76.32315063 209.55525208]
[78.32716370 194.68972778]
[76.10547638 187.64089966]
[80.47327423 179.61842346]
[82.69838715 164.78437805]
[84.92350769 149.95033264]
[79.15979004 136.21612549]
[88.85861969 123.71638489]
[91.08373260 108.88234711]
[92.97702789 94.00231171]
[94.53755188 79.08370209]
[96.09807587 64.16510010]
[97.65859985 49.24649429]
[86.29386139 38.84702682]
[83.26718140 23.92413902]
[89.53388977 10.24231052]
[102.50015259 2.96123695]
[104.06066895 -11.95736790]
[105.62119293 -26.87597275]
[107.18171692 -41.79457855]
[108.74224091 -56.71318054]
[110.30276489 -71.63179016]
[100.90631866 -59.93962097]
[87.40485382 -53.40428162]
[72.40531158 -53.28764343]
[58.80385208 -59.61222839]
[49.22671127 -71.15685272]
[45.52308655 -85.69243622]
[48.40808105 -100.41238403]
[57.32465744 -112.47449493]
[70.55116272 -119.54978180]
[85.53376007 -120.27210999]
[99.37954712 -114.50199890]
[109.41512299 -103.35358429]
[113.70285797 -88.97816467]
[117.88986969 -103.38195038]
[122.07688141 -117.78572845]
[126.26389313 -132.18951416]
[130.45089722 -146.59329224]
[123.09702301 -160.32493591]
[127.54843140 -174.87278748]
[140.68478394 -181.79896545]
[144.87179565 -196.20274353]
[149.05880737 -210.60652161]
[136.42460632 -202.52090454]
[121.44436646 -203.29054260]
[109.70533752 -212.62837219]
[105.58588409 -227.05162048]
[110.62246704 -241.18077087]
[122.93655396 -249.74600220]
[137.93531799 -249.55268860]
[150.02456665 -240.67294312]
[154.69532776 -226.41751099]
[160.56428528 -240.22167969]
[166.43324280 -254.02586365]
[163.77612305 -272.24731445]
[178.19851685 -282.24539185]
[183.86131287 -296.13540649]
[189.52409363 -310.02545166]
[195.18687439 -323.91546631]
[200.84967041 -337.80548096]
[206.51245117 -351.69552612]
[212.17523193 -365.58554077]
[217.83802795 -379.47558594]
[204.53875732 -386.43789673]
[191.96151733 -394.63290405]
[180.22023010 -403.98635864]
[169.42121887 -414.41354370]
[159.66229248 -425.82003784]
[151.03182983 -438.10253906]
[143.60797119 -451.14978027]
[137.45797729 -464.84365845]
[132.63752747 -479.06015015]
[129.19027710 -493.67044067]
[127.14746094 -508.54229736]
[126.52756500 -523.54095459]
[127.33620453 -538.53063965]
[129.56607056 -553.37561035]
[133.19694519 -567.94140625]
[138.19596863 -582.09606934]
[144.51785278 -595.71142578]
[152.10534668 -608.66418457]
[160.88973999 -620.83709717]
[170.79147339 -632.11987305]
[181.72087097 -642.41027832]
[193.57896423 -651.61517334]
[206.25836182 -659.65118408]
[219.64421082 -666.44561768]
[233.61531067 -671.93676758]
[248.04512024 -676.07507324]
[262.80297852 -678.82293701]
[277.75518799 -680.15551758]
[292.76638794 -680.06079102]
[307.70059204 -678.53955078]
[322.42257690 -675.60559082]
[336.79898071 -671.28546143]
[350.69964600 -665.61834717]
[363.99865723 -658.65551758]
[376.57559204 -650.46008301]
[388.31655884 -641.10620117]
[399.11517334 -630.67858887]
[408.87368774 -619.27178955]
[417.50372314 -606.98895264]
[424.92709351 -593.94140625]
[431.07659912 -580.24731445]
[435.89651489 -566.03063965]
[439.34323120 -551.42022705]
[441.38549805 -536.54833984]
[442.00485229 -521.54962158]
[441.19567871 -506.55993652]
[438.96527100 -491.71508789]
[435.33386230 -477.14944458]
[430.33432007 -462.99496460]
[424.01193237 -449.37982178]
[416.42398071 -436.42730713]
[407.63912964 -424.25473022]
[397.73699951 -412.97235107]
[386.80722046 -402.68231201]
[374.94879150 -393.47784424]
[362.26910400 -385.44229126]
[348.88299561 -378.64837646]
[334.91171265 -373.15771484]
[320.48175049 -369.01995850]
[305.72378540 -366.27261353]
[290.77151489 -364.94058228]
[275.76034546 -365.03585815]
[260.82617188 -366.55767822]
[246.10430908 -369.49215698]
[231.72805786 -373.81277466]
[226.06526184 -359.92276001]
[220.40248108 -346.03274536]
[214.73968506 -332.14270020]
[209.07690430 -318.25268555]
[203.41412354 -304.36264038]
[197.75132751 -290.47262573]
[192.08854675 -276.58261108]
[196.48942566 -265.31500244]
[191.88534546 -253.69664001]
[180.23742676 -248.15689087]
[174.36846924 -234.35272217]
[168.49949646 -220.54853821]
[163.46258545 -206.41950989]
[159.27557373 -192.01573181]
[155.08856201 -177.61195374]
[162.46487427 -164.72297668]
[158.42384338 -150.05584717]
[144.85469055 -142.40628052]
[140.66767883 -128.00250244]
[136.48066711 -113.59871674]
[132.29365540 -99.19493866]
[128.10664368 -84.79115295]
[125.22136688 -70.07126617]
[123.66084290 -55.15266037]
[122.10032654 -40.23405457]
[120.53980255 -25.31544876]
[118.97927856 -10.39684486]
[117.41875458 4.52175999]
[128.59759521 14.32847023]
[131.89732361 29.01097107]
[125.84800720 42.98448944]
[112.57720184 50.80701828]
[111.01667786 65.72562408]
[109.45615387 80.64422607]
[107.89562988 95.56282806]
[109.87499237 98.87258911]
[110.38585663 103.03874969]
[109.07845306 107.38590240]
[105.91777802 111.10746002]
[103.69266510 125.94150543]
[109.29722595 140.73675537]
[99.75755310 152.17546082]
[97.53243256 167.00950623]
[95.30731964 181.84353638]
[93.19269562 196.69374084]
[91.18867493 211.55926514]
[89.18466187 226.42480469]
[96.57208252 243.29214478]
[85.31210327 256.75244141]
[83.52964020 271.64617920]
[81.74717712 286.53988647]
[89.38490295 303.29537964]
[78.32657623 316.92184448]
[76.76605225 331.84045410]
[75.20553589 346.75906372]
[73.64501190 361.67764282]
[72.08448792 376.59625244]
[85.09948730 384.56948853]
[93.35890961 397.40478516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 208]
[11 207]
[12 206]
[13 205]
[14 204]
[17 202]
[18 201]
[19 200]
[22 198]
[23 197]
[24 196]
[26 195]
[27 194]
[28 193]
[30 191]
[31 190]
[32 186]
[33 185]
[34 184]
[35 183]
[39 179]
[40 178]
[41 177]
[42 176]
[43 175]
[44 174]
[57 173]
[58 172]
[59 171]
[60 170]
[61 169]
[64 166]
[65 165]
[66 164]
[75 163]
[76 162]
[77 161]
[79 158]
[80 157]
[81 156]
[82 155]
[83 154]
[84 153]
[85 152]
[86 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
