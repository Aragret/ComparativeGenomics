%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCGACUCUCCCGGGGACAAUCCCCAGUACCCGACCCAAAAUGAUAUACUAUCCGUACACUAACCACCCAGUAAUACACAACAGCACGUCCAUCUCCGxxxxxxxxxxUCACUUGACAUAGGCUGUAGACCAAGGAUGAAGUCCCAGUAUUUCGGAUUUAUCGGGUGUGCAAGGGGAAUUUAUUCUGUAGUGCUACCUAGUGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[165.22169495 519.71466064]
[160.24261475 533.97595215]
[151.44621277 546.25604248]
[139.54559326 555.55938721]
[125.50547791 561.13177490]
[110.46401978 562.52154541]
[95.64058685 559.61596680]
[82.23683167 552.65063477]
[71.33934021 542.19012451]
[63.83152390 529.08251953]
[60.32201004 514.39038086]
[61.09529877 499.30465698]
[66.08869934 485.04833984]
[74.89742279 472.77709961]
[86.80738831 463.48574829]
[100.85310364 457.92742920]
[115.89594269 456.55279541]
[118.78121185 441.83291626]
[121.66648865 427.11303711]
[124.55175781 412.39312744]
[127.43703461 397.67324829]
[122.29232788 383.69534302]
[132.53962708 371.64117432]
[132.98623657 356.64782715]
[130.98222351 341.78228760]
[128.97821045 326.91674805]
[126.97418976 312.05123901]
[115.51505280 298.76007080]
[122.65052795 281.78460693]
[120.42540741 266.95056152]
[117.97968292 252.15127563]
[115.31388855 237.39006042]
[112.64809418 222.62884521]
[109.98229980 207.86763000]
[107.31649780 193.10641479]
[104.65070343 178.34519958]
[95.76618958 173.29759216]
[91.02710724 163.99761963]
[92.21337891 153.40644836]
[99.17327881 145.04771423]
[96.94816589 130.21366882]
[94.72304535 115.37962341]
[83.93856049 102.53162384]
[90.24811554 86.98924255]
[87.80239105 72.18997192]
[85.35665894 57.39070129]
[75.47280121 45.03675461]
[81.03140259 31.21824455]
[78.58567047 16.41897392]
[76.13994598 1.61970305]
[73.69422150 -13.17956734]
[71.24848938 -27.97883797]
[67.92623138 -42.60630035]
[63.73921967 -57.01008224]
[59.55221176 -71.41386414]
[55.36520004 -85.81764221]
[40.36421204 -88.41220856]
[28.02759171 -97.22667694]
[20.77109146 -110.46916199]
[19.98702621 -125.48735809]
[25.77742004 -139.29969788]
[36.94438553 -149.18728638]
[32.75737381 -163.59106445]
[29.83889198 -148.87773132]
[22.76612663 -135.64987183]
[12.15094471 -125.05185699]
[-1.08833444 -118.00051117]
[-15.80638123 -115.10585022]
[-30.72993851 -116.61827850]
[-44.56796646 -122.40697479]
[-56.12334061 -131.97114563]
[-64.39640808 -144.48339844]
[-68.67145538 -158.86129761]
[-68.57865906 -173.86100769]
[-64.12603760 -188.18490601]
[-55.69879532 -200.59384155]
[-44.02596664 -210.01429749]
[-30.11737442 -215.63133240]
[-15.17624760 -216.95899963]
[-0.49514237 -213.88246155]
[12.65587807 -206.66784668]
[23.13911819 -195.93930054]
[30.04653168 -182.62828064]
[30.04653168 -197.62828064]
[30.04653168 -212.62828064]
[30.04653168 -227.62828064]
[30.04653168 -242.62828064]
[16.14902496 -255.50358582]
[16.07709885 -274.12905884]
[29.40960884 -286.67337036]
[28.96300316 -301.66671753]
[28.51639748 -316.66006470]
[13.77649879 -319.82214355]
[0.22196168 -326.42047119]
[-11.35917187 -336.07144165]
[-20.29358864 -348.21389771]
[-26.06185532 -362.14196777]
[-28.32861137 -377.04580688]
[-26.96207047 -392.05902100]
[-22.04168129 -406.30868530]
[-13.85350895 -418.96636963]
[-2.87360334 -429.29620361]
[10.25967789 -436.69757080]
[24.78278351 -440.74020386]
[39.85136032 -441.18905640]
[54.58933640 -438.01803589]
[68.13986969 -431.41146851]
[79.71514893 -421.75350952]
[88.64220428 -409.60562134]
[94.40203094 -395.67407227]
[96.65974426 -380.76882935]
[95.28410339 -365.75646973]
[90.35507965 -351.50979614]
[82.15923309 -338.85705566]
[71.17306519 -328.53390503]
[58.03530121 -321.14050293]
[43.50974655 -317.10665894]
[43.95635223 -302.11331177]
[44.40295792 -287.11996460]
[54.20531082 -281.28213501]
[60.03266525 -271.33441162]
[60.33750534 -259.68960571]
[54.92845535 -249.23767090]
[45.04653168 -242.62828064]
[45.04653168 -227.62828064]
[45.04653168 -212.62828064]
[45.04653168 -197.62828064]
[45.04653168 -182.62828064]
[47.16115570 -167.77807617]
[51.34816742 -153.37429810]
[66.07548523 -151.01387024]
[78.36804962 -142.45803833]
[85.75709534 -129.35983276]
[86.73039246 -114.29089355]
[81.04145050 -100.23661041]
[69.76898193 -90.00465393]
[73.95599365 -75.60087585]
[78.14300537 -61.19709015]
[82.33001709 -46.79330826]
[88.66088104 -60.39184570]
[101.71930695 -67.77272034]
[116.63483429 -66.18305969]
[127.84433746 -56.21575928]
[131.16694641 -41.58837891]
[125.36341095 -27.75656891]
[112.59830475 -19.87925339]
[97.63269806 -20.89447594]
[86.04776001 -30.42456627]
[88.49349213 -15.62529469]
[90.93921661 -0.82602429]
[93.38494873 13.97324657]
[95.83067322 28.77251816]
[105.53959656 40.06791687]
[100.15592957 54.94497299]
[102.60166168 69.74424744]
[105.04738617 84.54351807]
[114.08937836 91.88406372]
[115.90273285 103.38854218]
[109.55709076 113.15451050]
[111.78221130 127.98854828]
[114.00732422 142.82260132]
[127.26366425 158.00917053]
[119.41192627 175.67939758]
[122.07772064 190.44061279]
[124.74351501 205.20182800]
[127.40930939 219.96305847]
[130.07510376 234.72427368]
[132.74090576 249.48548889]
[136.71298218 254.77075195]
[137.32742310 260.42050171]
[135.25946045 264.72543335]
[137.48457336 279.55947876]
[147.37408447 287.83959961]
[148.92201233 300.24069214]
[141.83972168 310.04721069]
[143.84373474 324.91275024]
[145.84774780 339.77828979]
[147.85176086 354.64379883]
[152.71961975 340.45562744]
[161.04962158 327.98123169]
[172.28929138 318.04794312]
[185.69311523 311.31463623]
[200.37208557 308.22790527]
[215.35258484 308.99246216]
[229.64102173 313.55761719]
[242.28968811 321.62057495]
[252.45964050 332.64654541]
[259.47634888 345.90420532]
[262.87442017 360.51425171]
[262.42849731 375.50762939]
[258.16809082 389.88986206]
[250.37583923 402.70706177]
[239.56855774 413.10910034]
[226.46304321 420.40606689]
[211.92854309 424.11395264]
[196.92907715 423.98681641]
[182.45951843 420.03311157]
[169.47956848 412.51507568]
[158.85014343 401.93136597]
[151.27624512 388.98391724]
[147.25952148 374.52642822]
[152.19784546 389.55718994]
[142.15692139 400.55850220]
[139.27165222 415.27841187]
[136.38638306 429.99829102]
[133.50109863 444.71820068]
[130.61582947 459.43807983]
[144.02658081 466.38995361]
[154.93457031 476.83947754]
[162.45555115 489.93951416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 207]
[18 206]
[19 205]
[20 204]
[21 203]
[23 201]
[24 178]
[25 177]
[26 176]
[27 175]
[29 172]
[30 171]
[31 168]
[32 167]
[33 166]
[34 165]
[35 164]
[36 163]
[40 161]
[41 160]
[42 159]
[44 156]
[45 155]
[46 154]
[48 152]
[49 151]
[50 150]
[51 149]
[52 148]
[53 139]
[54 138]
[55 137]
[56 136]
[62 130]
[63 129]
[83 128]
[84 127]
[85 126]
[86 125]
[87 124]
[90 119]
[91 118]
[92 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
