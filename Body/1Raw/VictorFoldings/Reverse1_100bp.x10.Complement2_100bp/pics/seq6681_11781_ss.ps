%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[66.05995941 498.32797241]
[56.56437683 486.48742676]
[51.99102783 472.01507568]
[52.95843124 456.86819458]
[59.33574677 443.09521484]
[70.26049805 432.55889893]
[84.25519562 426.68414307]
[83.80859375 411.69079590]
[83.36198425 396.69744873]
[75.24917603 384.20617676]
[82.57216644 370.18176270]
[74.45935822 357.69049072]
[81.78234863 343.66607666]
[81.33573914 328.67272949]
[72.74929047 320.15219116]
[72.25450897 307.66464233]
[80.66162872 297.88287354]
[72.73569489 285.27221680]
[80.26667023 271.35836792]
[80.04334259 256.36001587]
[79.82001495 241.36169434]
[79.59668732 226.36335754]
[70.45639038 238.25683594]
[56.37327194 243.42073059]
[41.71115112 240.25495911]
[31.01323509 229.74046326]
[27.59439659 215.13528442]
[32.51399612 200.96496582]
[44.24764633 191.62037659]
[59.15954208 189.99700928]
[72.62907410 196.59790039]
[80.48262787 209.37792969]
[82.26509857 194.48420715]
[74.49945831 178.74693298]
[85.65856934 164.09921265]
[87.21909332 149.18060303]
[88.77961731 134.26200867]
[82.40837860 120.79884338]
[91.53939819 107.87850189]
[81.83858490 119.31941223]
[67.96694946 125.02709961]
[53.02344894 123.72646332]
[40.34649277 115.70806122]
[32.76814651 102.76322937]
[31.98143578 87.78387451]
[38.16210938 74.11642456]
[49.92939377 64.81421661]
[64.65444946 61.95539856]
[79.04765320 66.17862701]
[89.89353180 76.54042816]
[94.76908875 90.72596741]
[98.74118042 76.26144409]
[102.71327972 61.79692078]
[106.68537903 47.33239746]
[110.33346558 32.78277588]
[113.65572357 18.15531731]
[116.97798157 3.52785683]
[120.30023956 -11.09960365]
[123.40435028 -25.77490616]
[126.28962708 -40.49479675]
[129.17489624 -55.21468735]
[132.06016541 -69.93457794]
[121.37734222 -59.40475845]
[107.05180359 -54.95739746]
[92.28392792 -57.58604050]
[80.37288666 -66.70345306]
[73.97964478 -80.27276611]
[74.53246307 -95.26258087]
[81.90784454 -108.32411957]
[94.45810699 -116.53940582]
[109.37948608 -118.07312012]
[123.33851624 -112.58263397]
[133.21672058 -101.29452515]
[136.80725098 -86.73057556]
[142.05397034 -100.78305054]
[147.30068970 -114.83551788]
[152.54740906 -128.88798523]
[144.32954407 -138.30789185]
[140.91630554 -150.25856018]
[142.89643860 -162.45521545]
[149.83357239 -172.59312439]
[160.36058044 -178.78303528]
[172.44862366 -179.90313721]
[178.11140442 -193.79316711]
[173.83753967 -205.96267700]
[178.84004211 -217.41513062]
[189.93733215 -222.22935486]
[195.80628967 -236.03353882]
[190.13626099 -250.54176331]
[196.28486633 -264.45755005]
[210.15118408 -269.77365112]
[208.43022156 -285.50097656]
[220.53041077 -294.18627930]
[226.39938354 -307.99044800]
[232.26834106 -321.79464722]
[238.13729858 -335.59881592]
[244.00625610 -349.40298462]
[249.87522888 -363.20718384]
[255.74418640 -377.01135254]
[242.97103882 -384.93267822]
[231.55685425 -394.71105957]
[221.76919556 -406.11727905]
[213.83747864 -418.88397217]
[207.94764709 -432.71185303]
[204.23777771 -447.27679443]
[202.79481506 -462.23733521]
[203.65258789 -477.24282837]
[206.79101562 -491.94149780]
[212.13648987 -505.98876953]
[219.56373596 -519.05541992]
[228.89862061 -530.83508301]
[239.92234802 -541.05163574]
[252.37649536 -549.46557617]
[265.96911621 -555.87969971]
[280.38156128 -560.14367676]
[295.27603149 -562.15747070]
[310.30334473 -561.87396240]
[325.11123657 -559.29974365]
[339.35260010 -554.49517822]
[352.69360352 -547.57287598]
[364.82150269 -538.69512939]
[375.45199585 -528.07000732]
[384.33590698 -515.94659424]
[391.26498413 -502.60913086]
[396.07678223 -488.37020874]
[398.65850830 -473.56359863]
[398.94964600 -458.53643799]
[396.94338989 -443.64096069]
[392.68676758 -429.22631836]
[386.27951050 -415.63046265]
[377.87188721 -403.17205811]
[367.66091919 -392.14315796]
[355.88601685 -382.80227661]
[342.82315063 -375.36840820]
[328.77859497 -370.01580811]
[314.08151245 -366.86993408]
[299.07644653 -366.00451660]
[284.11517334 -367.43991089]
[269.54837036 -371.14239502]
[263.67941284 -357.33819580]
[257.81042480 -343.53402710]
[251.94148254 -329.72985840]
[246.07250977 -315.92568970]
[240.20355225 -302.12149048]
[234.33459473 -288.31732178]
[236.47534180 -273.57736206]
[223.95535278 -263.90469360]
[229.74780273 -250.23051453]
[223.99247742 -236.14750671]
[209.61047363 -230.16458130]
[203.74150085 -216.36039734]
[206.80566406 -199.08099365]
[192.00143433 -188.13038635]
[186.33863831 -174.24035645]
[196.33744812 -159.68371582]
[195.58995056 -141.88224792]
[184.20686340 -127.97164917]
[166.59988403 -123.64127350]
[161.35316467 -109.58880615]
[156.10644531 -95.53633118]
[150.85972595 -81.48386383]
[146.78005981 -67.04930878]
[143.89479065 -52.32941437]
[141.00952148 -37.60952377]
[138.12423706 -22.88963318]
[139.99790955 -18.49663925]
[139.13183594 -12.87997532]
[134.92770386 -7.77734375]
[131.60543823 6.85011625]
[128.28318787 21.47757721]
[124.96092224 36.10503769]
[126.52053070 39.26730728]
[126.62595367 43.34210205]
[124.86497498 47.63771057]
[121.14990234 51.30449295]
[117.17780304 65.76902008]
[113.20571136 80.23354340]
[109.23361206 94.69806671]
[106.45800018 109.43902588]
[112.71761322 123.96926880]
[103.69821930 135.82252502]
[102.13769531 150.74113464]
[100.57717896 165.65972900]
[108.07808685 176.15255737]
[106.47119141 188.54615784]
[97.15881348 196.26667786]
[95.37635040 211.16038513]
[94.59502411 226.14002991]
[94.81835175 241.13836670]
[95.04167938 256.13668823]
[95.26500702 271.13504028]
[103.20691681 284.81848145]
[95.65996552 297.65954590]
[105.46777344 313.24441528]
[96.32908630 328.22613525]
[96.77569580 343.21948242]
[104.92044830 356.78314209]
[97.56551361 369.73516846]
[105.71026611 383.29882812]
[98.35533905 396.25082397]
[98.80194092 411.24420166]
[99.24855042 426.23754883]
[113.56810760 431.26889038]
[125.10062408 441.13629150]
[132.28642273 454.50524902]
[134.15365601 469.56771851]
[130.44982910 484.28662109]
[121.67584229 496.67135620]
[109.01830292 505.04696655]
[94.18904114 508.28076172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 202]
[8 201]
[9 200]
[11 198]
[13 196]
[14 195]
[17 193]
[19 191]
[20 190]
[21 189]
[22 188]
[32 187]
[33 186]
[35 183]
[36 182]
[37 181]
[39 179]
[51 178]
[52 177]
[53 176]
[54 175]
[55 171]
[56 170]
[57 169]
[58 168]
[59 165]
[60 164]
[61 163]
[62 162]
[74 161]
[75 160]
[76 159]
[77 158]
[83 154]
[84 153]
[87 151]
[88 150]
[91 147]
[93 145]
[94 144]
[95 143]
[96 142]
[97 141]
[98 140]
[99 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
