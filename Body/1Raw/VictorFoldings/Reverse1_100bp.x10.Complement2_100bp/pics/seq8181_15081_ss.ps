%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCUCCCCCACGAUAUCCCAUUUAUGCCCGGGAUAAAGUUUCUAAAAAUCCCCUUAAUUAAGAUCCUGCUACCCGUACUUUGACACCAAACGAGGUGUCxxxxxxxxxxGACUUUGUAGCCGUAAUAGGAGGACGAACGUUGAUAUCGUUGUCGGAAGUAUCCGAUACAGGAGGGCACUCCGGUUUAUAGUAAGACUCCCCGGUGUCAU\
) } def
/len { sequence length } bind def

/coor [
[-0.08258726 506.01245117]
[7.34958410 519.12194824]
[11.55757713 533.59228516]
[12.31445980 548.64294434]
[9.57941437 563.46240234]
[3.49993849 577.25140381]
[-5.59610939 589.26635742]
[-17.21819115 598.85925293]
[-30.73954201 605.51281738]
[-45.43097305 608.86822510]
[-60.50019455 608.74444580]
[-75.13453674 605.14825439]
[-88.54479980 598.27355957]
[-100.00777435 588.49108887]
[-108.90528107 576.32836914]
[-114.75748444 562.44140625]
[-117.24879456 547.57904053]
[-116.24484253 532.54278564]
[-111.79977417 518.14355469]
[-104.15332031 505.15783691]
[-93.71782684 494.28598022]
[-81.05607605 486.11425781]
[-66.85089111 481.08340454]
[-51.86835480 479.46469116]
[-36.91644669 481.34542847]
[-31.66972733 467.29293823]
[-26.42300987 453.24047852]
[-21.28104973 439.14932251]
[-16.34945679 424.98318481]
[-11.52345848 410.78073120]
[-6.69746113 396.57827759]
[-1.87146330 382.37582397]
[2.95453429 368.17337036]
[-8.67144680 359.92581177]
[-17.51133728 348.72329712]
[-22.84131241 335.46862793]
[-24.22086525 321.23324585]
[-21.52920532 307.17050171]
[-14.97577190 294.42242432]
[-5.08396864 284.02676392]
[7.35062981 276.83261108]
[21.32425880 273.43109131]
[35.70598984 274.10675049]
[40.74290466 259.97772217]
[45.77982330 245.84867859]
[42.76553345 231.26226807]
[54.68759155 220.86154175]
[59.72450638 206.73251343]
[64.76142120 192.60348511]
[69.79833984 178.47445679]
[74.83525085 164.34542847]
[79.23625183 150.00558472]
[82.99255371 135.48352051]
[86.74885559 120.96146393]
[90.50515747 106.43939972]
[78.90480042 115.94895935]
[64.12018585 118.48178101]
[50.01597214 113.37577820]
[40.27897263 101.96566010]
[37.45441055 87.23399353]
[42.28062439 73.03161621]
[53.49604797 63.07098007]
[68.16899872 59.95578003]
[82.46400452 64.50032043]
[92.64438629 75.51666260]
[96.04903412 90.12428284]
[101.91799164 76.32010651]
[107.78695679 62.51593399]
[113.65591431 48.71175766]
[114.13367462 39.58982849]
[119.71639252 34.74678040]
[125.79022217 21.03151321]
[121.88059235 8.74015141]
[127.22185516 -2.55828357]
[138.45756531 -7.03997326]
[144.73492432 -20.66329002]
[150.80876160 -34.37855530]
[156.67771912 -48.18273163]
[162.54667664 -61.98690796]
[168.41563416 -75.79108429]
[174.28459167 -89.59526062]
[171.62748718 -107.81671143]
[186.04986572 -117.81479645]
[191.71266174 -131.70481873]
[197.37544250 -145.59484863]
[203.03822327 -159.48487854]
[202.29464722 -163.76284790]
[202.89108276 -167.66268921]
[204.54409790 -170.80958557]
[206.87767029 -172.95924377]
[209.47373962 -174.01684570]
[215.95324707 -187.54519653]
[222.43273926 -201.07354736]
[228.91223145 -214.60188293]
[216.21252441 -222.61648560]
[204.52912903 -232.05126953]
[194.02009583 -242.77864075]
[184.82749939 -254.65351868]
[177.07569885 -267.51531982]
[170.86950684 -281.19009399]
[166.29284668 -295.49291992]
[163.40763855 -310.23037720]
[162.25288391 -325.20312500]
[162.84420776 -340.20867920]
[165.17359924 -355.04412842]
[169.20957947 -369.50881958]
[174.89755249 -383.40713501]
[182.16058350 -396.55114746]
[190.90046692 -408.76306152]
[200.99899292 -419.87774658]
[212.31961060 -429.74487305]
[224.70919800 -438.23101807]
[238.00021362 -445.22140503]
[252.01290894 -450.62149048]
[266.55776978 -454.35827637]
[281.43811035 -456.38116455]
[296.45266724 -456.66287231]
[311.39840698 -455.19952393]
[326.07321167 -452.01095581]
[340.27859497 -447.14028931]
[353.82244873 -440.65335083]
[366.52163696 -432.63790894]
[378.20437622 -423.20236206]
[388.71270752 -412.47427368]
[397.90451050 -400.59878540]
[405.65545654 -387.73645020]
[411.86074829 -374.06124878]
[416.43643188 -359.75811768]
[419.32064819 -345.02050781]
[420.47442627 -330.04766846]
[419.88208008 -315.04214478]
[417.55169678 -300.20687866]
[413.51477051 -285.74243164]
[407.82586670 -271.84448242]
[400.56195068 -258.70098877]
[391.82125854 -246.48963928]
[381.72198486 -235.37562561]
[370.40072632 -225.50924683]
[358.01055908 -217.02394104]
[344.71908569 -210.03443909]
[330.70602417 -204.63528442]
[316.16091919 -200.89949036]
[301.28045654 -198.87756348]
[286.26586914 -198.59687805]
[271.32022095 -200.06120300]
[256.64562988 -203.25076294]
[242.44058228 -208.12239075]
[235.96109009 -194.59403992]
[229.48158264 -181.06570435]
[223.00209045 -167.53735352]
[216.92825317 -153.82208252]
[211.26547241 -139.93205261]
[205.60267639 -126.04203033]
[199.93989563 -112.15200806]
[204.34077454 -100.88440704]
[199.73669434 -89.26605225]
[188.08877563 -83.72630310]
[182.21981812 -69.92212677]
[176.35086060 -56.11795044]
[170.48188782 -42.31377029]
[164.61293030 -28.50959587]
[165.53695679 -23.82395554]
[163.52729797 -18.50810051]
[158.35823059 -14.38592815]
[152.08087158 -0.76261240]
[154.62921143 16.60036278]
[139.50549316 27.10534668]
[133.43165588 40.82061386]
[127.46009064 54.58071518]
[121.59113312 68.38489532]
[115.72217560 82.18907166]
[109.85321045 95.99324799]
[105.02721405 110.19570160]
[101.27091217 124.71776581]
[97.51461029 139.23982239]
[93.75830841 153.76188660]
[107.19900513 147.10247803]
[121.45540619 151.76670837]
[128.36079407 165.08270264]
[123.95945740 179.42243958]
[110.77266693 186.57148743]
[96.35443115 182.43452454]
[88.96428680 169.38233948]
[83.92736816 183.51136780]
[78.89044952 197.64039612]
[73.85353851 211.76942444]
[68.81661987 225.89846802]
[71.47063446 241.49546814]
[59.90885162 250.88560486]
[54.87193680 265.01461792]
[49.83501816 279.14364624]
[62.40661621 288.74447632]
[71.38500214 301.74426270]
[75.90116119 316.86370850]
[75.52452850 332.61926270]
[70.30397034 347.46893311]
[60.76186371 359.96310425]
[47.84181976 368.88598633]
[32.81540680 373.37402344]
[17.15699005 372.99935913]
[12.33099270 387.20184326]
[7.50499487 401.40429688]
[2.67899704 415.60675049]
[-2.14700055 429.80920410]
[-1.94498086 438.94140625]
[-7.15202045 444.18624878]
[-7.08598757 453.32043457]
[-12.37053776 458.48718262]
[-17.61725616 472.53967285]
[-22.86397552 486.59213257]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 210]
[26 209]
[27 208]
[28 206]
[29 204]
[30 203]
[31 202]
[32 201]
[33 200]
[43 191]
[44 190]
[45 189]
[47 187]
[48 186]
[49 185]
[50 184]
[51 183]
[52 176]
[53 175]
[54 174]
[55 173]
[66 172]
[67 171]
[68 170]
[69 169]
[71 168]
[72 167]
[75 165]
[76 164]
[77 161]
[78 160]
[79 159]
[80 158]
[81 157]
[83 154]
[84 153]
[85 152]
[86 151]
[91 150]
[92 149]
[93 148]
[94 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
