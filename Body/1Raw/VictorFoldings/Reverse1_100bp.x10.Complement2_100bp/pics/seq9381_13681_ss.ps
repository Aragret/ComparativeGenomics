%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[210.07339478 490.25161743]
[211.85450745 475.34039307]
[215.35467529 460.73678589]
[220.52659607 446.63827515]
[227.30032349 433.23556519]
[235.58422852 420.70983887]
[245.26631165 409.23056030]
[256.21560669 398.95294189]
[268.28402710 390.01599121]
[260.81631470 377.00704956]
[253.34855652 363.99807739]
[245.88081360 350.98913574]
[234.29008484 347.52770996]
[227.96211243 336.75085449]
[230.75958252 324.15969849]
[223.48634338 311.04101562]
[216.21311951 297.92233276]
[208.45672607 285.08337402]
[200.22792053 272.54199219]
[191.99911499 260.00057983]
[183.77030945 247.45918274]
[175.54150391 234.91777039]
[167.31268311 222.37637329]
[159.08387756 209.83497620]
[145.63276672 203.43836975]
[144.53126526 187.65556335]
[136.30245972 175.11415100]
[132.94306946 174.04324341]
[129.93550110 171.29196167]
[128.06384277 167.04341125]
[128.00085449 161.82391357]
[120.34024811 148.92758179]
[112.67964935 136.03125000]
[97.93990326 138.14158630]
[83.51319885 134.45591736]
[71.59184265 125.53431702]
[63.98738861 112.73251343]
[61.85542679 97.99587250]
[65.51992035 83.56378174]
[74.42401886 71.62934113]
[66.76342010 58.73301315]
[59.10282516 45.83668900]
[51.44222641 32.94036102]
[37.74220657 25.02708054]
[37.89448929 10.13325405]
[30.23389244 -2.76307273]
[22.57329559 -15.65939999]
[6.30841780 -24.29278183]
[6.77543354 -41.83555222]
[-1.07632220 -54.61639786]
[-8.92807770 -67.39723969]
[-13.51901054 -69.88127136]
[-16.40904427 -73.51459503]
[-17.44522858 -77.45684814]
[-16.83030891 -80.92876434]
[-24.10353661 -94.04745483]
[-31.37676620 -107.16615295]
[-46.65027618 -109.17266846]
[-57.68466187 -119.66531372]
[-60.39273071 -134.46836853]
[-53.94210052 -147.86715698]
[-61.21533203 -160.98583984]
[-73.37637329 -165.28373718]
[-79.16418457 -176.36006165]
[-75.95941162 -188.02436829]
[-83.03651428 -201.24989319]
[-97.10813904 -195.98939514]
[-111.75537109 -192.65145874]
[-126.71683502 -191.29563904]
[-141.72550964 -191.94616699]
[-156.51354980 -194.59140015]
[-170.81704712 -199.18415833]
[-184.38073730 -205.64245605]
[-196.96257019 -213.85105896]
[-208.33799744 -223.66345215]
[-218.30400085 -234.90454102]
[-226.68275452 -247.37370300]
[-233.32470703 -260.84841919]
[-238.11134338 -275.08819580]
[-240.95721436 -289.83895874]
[-241.81155396 -304.83740234]
[-240.65910339 -319.81588745]
[-237.52043152 -334.50711060]
[-232.45156860 -348.64889526]
[-225.54295349 -361.98886108]
[-216.91787720 -374.28890991]
[-206.73028564 -385.32958984]
[-195.16195679 -394.91381836]
[-182.41937256 -402.87057495]
[-168.72991943 -409.05786133]
[-154.33792114 -413.36523438]
[-139.50019836 -415.71585083]
[-124.48155212 -416.06777954]
[-109.55001831 -414.41467285]
[-94.97206116 -410.78610229]
[-81.00784302 -405.24679565]
[-67.90656281 -397.89559937]
[-55.90204239 -388.86373901]
[-45.20850754 -378.31234741]
[-36.01679993 -366.42974854]
[-28.49095726 -353.42800903]
[-22.76528549 -339.53915405]
[-18.94196510 -325.01107788]
[-17.08922958 -310.10299683]
[-17.24014091 -295.08099365]
[-19.39200974 -280.21313477]
[-23.50642967 -265.76477051]
[-29.50997543 -251.99375916]
[-37.29550552 -239.14584351]
[-46.72408295 -227.45031738]
[-57.62743759 -217.11589050]
[-69.81098938 -208.32701111]
[-62.73388290 -195.10147095]
[-47.34960175 -186.65808105]
[-48.09663773 -168.25907898]
[-40.82340622 -155.14038086]
[-26.04201317 -153.51300049]
[-14.92169285 -143.37384033]
[-11.86828518 -128.45640564]
[-18.25807381 -114.43938446]
[-10.98484325 -101.32068634]
[-3.71161389 -88.20199585]
[3.85276484 -75.24899292]
[11.70452023 -62.46815109]
[19.55627632 -49.68730927]
[31.24493217 -46.57252502]
[37.89095688 -35.98885345]
[35.46962357 -23.31999779]
[43.13021851 -10.42366982]
[50.79081726 2.47265673]
[63.94290161 9.46350479]
[64.33855438 25.27976227]
[71.99915314 38.17609024]
[79.65975189 51.07241821]
[87.32035065 63.96874237]
[102.06009674 61.85840988]
[116.48680115 65.54408264]
[128.40815735 74.46568298]
[136.01260376 87.26748657]
[138.14457703 102.00412750]
[134.48007202 116.43621826]
[125.57598114 128.37066650]
[133.23657227 141.26698303]
[140.89717102 154.16331482]
[148.84385681 166.88534546]
[157.07266235 179.42674255]
[171.11236572 186.72039795]
[171.62528992 201.60617065]
[179.85409546 214.14756775]
[188.08290100 226.68896484]
[196.31170654 239.23037720]
[204.54051208 251.77177429]
[212.76931763 264.31317139]
[220.99812317 276.85458374]
[226.55708313 262.92266846]
[240.87049866 258.43643188]
[253.38705444 266.70297241]
[254.88002014 281.62850952]
[244.24882507 292.21044922]
[229.33181763 290.64907837]
[236.60504150 303.76779175]
[243.87828064 316.88647461]
[259.87890625 326.00030518]
[258.88977051 343.52139282]
[266.35751343 356.53033447]
[273.82525635 369.53930664]
[281.29299927 382.54824829]
[295.09637451 376.63357544]
[309.49307251 372.36141968]
[324.28842163 369.78955078]
[339.28228760 368.95272827]
[354.27191162 369.86227417]
[369.05459595 372.50592041]
[383.43041992 376.84786987]
[397.20492554 382.82943726]
[410.19189453 390.36972046]
[422.21563721 399.36672974]
[433.11355591 409.69879150]
[442.73828125 421.22619629]
[450.95962524 433.79306030]
[457.66644287 447.22940063]
[462.76803589 461.35351562]
[466.19537354 475.97436523]
[467.90209961 490.89428711]
[467.86517334 505.91143799]
[466.08508301 520.82275391]
[462.58587646 535.42663574]
[457.41488647 549.52545166]
[450.64205933 562.92864990]
[442.35897827 575.45489502]
[432.67767334 586.93481445]
[421.72906494 597.21319580]
[409.66122437 606.15093994]
[396.63735962 613.62725830]
[382.83355713 619.54101562]
[368.43658447 623.81219482]
[353.64108276 626.38311768]
[338.64715576 627.21893311]
[323.65756226 626.30834961]
[308.87506104 623.66375732]
[294.49954224 619.32080078]
[280.72543335 613.33831787]
[267.73898315 605.79718018]
[255.71583557 596.79937744]
[244.81860352 586.46655273]
[235.19465637 574.93853760]
[226.97412109 562.37109375]
[220.26820374 548.93432617]
[215.16757202 534.80987549]
[211.74121094 520.18878174]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 167]
[10 166]
[11 165]
[12 164]
[15 162]
[16 161]
[17 160]
[18 154]
[19 153]
[20 152]
[21 151]
[22 150]
[23 149]
[24 148]
[26 146]
[27 145]
[31 144]
[32 143]
[33 142]
[40 135]
[41 134]
[42 133]
[43 132]
[45 130]
[46 129]
[47 128]
[49 125]
[50 124]
[51 123]
[55 122]
[56 121]
[57 120]
[61 116]
[62 115]
[65 113]
[66 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
