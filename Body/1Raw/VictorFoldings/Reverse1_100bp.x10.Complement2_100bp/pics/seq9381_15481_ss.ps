%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[53.20426178 691.94512939]
[40.85602188 700.56689453]
[26.94288063 706.33221436]
[12.11557293 708.97131348]
[-2.93239784 708.36090088]
[-17.49721146 704.52941895]
[-30.89764404 697.65606689]
[-42.50693512 688.06243896]
[-51.78209305 676.19708252]
[-58.28930664 662.61511230]
[-61.72422028 647.95172119]
[-61.92617416 632.89270020]
[-58.88572693 618.14245605]
[-52.74508286 604.39086914]
[-43.79145050 592.28112793]
[-32.44361115 582.37957764]
[-19.23232079 575.14935303]
[-4.77549458 570.92864990]
[10.25069332 569.91491699]
[12.47581100 555.08087158]
[14.70092773 540.24682617]
[16.92604446 525.41278076]
[19.15116310 510.57870483]
[21.37627983 495.74465942]
[23.60139656 480.91061401]
[16.30775642 464.94912720]
[27.89804077 450.64013672]
[29.90205383 435.77462769]
[31.90606689 420.90908813]
[33.91007996 406.04354858]
[27.94252014 392.39666748]
[37.45417023 379.75393677]
[35.61865616 376.74340820]
[35.15012360 372.69427490]
[36.52084351 368.25866699]
[39.89397049 364.27508545]
[42.55976486 349.51385498]
[45.22555923 334.75265503]
[43.28668976 330.38803101]
[44.06905746 324.75909424]
[48.19674683 319.59442139]
[51.30085754 304.91912842]
[54.40496826 290.24383545]
[57.50907898 275.56854248]
[60.61318970 260.89321899]
[54.28252792 244.52589417]
[66.70394897 230.93214417]
[61.55924225 216.95426941]
[71.80654144 204.90007019]
[74.69181061 190.18019104]
[77.57708740 175.46029663]
[80.46235657 160.74040222]
[75.31764984 146.76251221]
[85.56494904 134.70832825]
[88.45022583 119.98844147]
[91.33549500 105.26854706]
[89.67234039 97.38143921]
[94.37486267 90.35170746]
[97.47897339 75.67639923]
[100.58308411 61.00109863]
[103.68718719 46.32579803]
[106.79129791 31.65049553]
[109.45709991 16.88927841]
[103.85253143 2.09402728]
[113.39220428 -9.34467316]
[115.61732483 -24.17871666]
[117.84244537 -39.01276016]
[119.95706940 -53.86295700]
[121.96108246 -68.72848511]
[123.96509552 -83.59401703]
[125.96910858 -98.45954132]
[116.65961456 -110.94838715]
[118.90373993 -125.99559784]
[130.86730957 -134.79380798]
[132.87132263 -149.65933228]
[134.87533569 -164.52485657]
[136.87934875 -179.39039612]
[138.88336182 -194.25592041]
[126.79482269 -201.57807922]
[118.43542480 -212.92024231]
[115.04067993 -226.55039978]
[117.09108734 -240.40269470]
[124.24440765 -252.39057922]
[135.39230347 -260.72103882]
[148.83189392 -264.16278076]
[151.05700684 -278.99682617]
[153.28213501 -293.83087158]
[147.67756653 -308.62612915]
[157.21723938 -320.06481934]
[144.54228210 -312.04324341]
[129.87800598 -315.19900513]
[121.62476349 -327.72433472]
[124.51038361 -342.44415283]
[136.88186646 -350.92630005]
[151.65225220 -348.31179810]
[160.36018372 -336.09927368]
[163.89985657 -350.67562866]
[167.43952942 -365.25201416]
[170.97920227 -379.82839966]
[174.51887512 -394.40475464]
[161.03460693 -401.12210083]
[149.38349915 -410.67193604]
[140.14996338 -422.57525635]
[133.79713440 -436.23504639]
[130.64369202 -450.96606445]
[130.84779358 -466.02947998]
[134.39920044 -480.66967773]
[141.11978149 -494.15231323]
[150.67245483 -505.80108643]
[162.57801819 -515.03173828]
[176.23933411 -521.38128662]
[190.97113037 -524.53112793]
[206.03448486 -524.32336426]
[220.67381287 -520.76843262]
[234.15483093 -514.04455566]
[245.80130005 -504.48910522]
[255.02908325 -492.58129883]
[261.37527466 -478.91842651]
[264.52157593 -464.18588257]
[264.31018066 -449.12255859]
[260.75167847 -434.48410034]
[254.02456665 -421.00473022]
[244.46626282 -409.36056519]
[232.55621338 -400.13568115]
[218.89181519 -393.79278564]
[204.15849304 -390.65005493]
[189.09524536 -390.86508179]
[185.55557251 -376.28872681]
[182.01589966 -361.71234131]
[178.47622681 -347.13595581]
[174.93655396 -332.55960083]
[172.05128479 -317.83969116]
[177.81500244 -304.10546875]
[168.11616516 -291.60574341]
[165.89105225 -276.77169800]
[163.66593933 -261.93765259]
[177.04515076 -253.19996643]
[185.30456543 -239.45239258]
[186.74710083 -223.42109680]
[181.03343201 -208.31101990]
[169.25996399 -197.16520691]
[153.74888611 -192.25190735]
[151.74487305 -177.38638306]
[149.74085999 -162.52084351]
[147.73684692 -147.65531921]
[145.73283386 -132.78979492]
[154.93949890 -121.13763428]
[153.11891174 -106.03332520]
[140.83464050 -96.45552826]
[138.83062744 -81.59000397]
[136.82661438 -66.72447205]
[134.82260132 -51.85894394]
[137.04428101 -44.81012344]
[132.67648315 -36.78764343]
[130.45137024 -21.95359993]
[128.22625732 -7.11955643]
[133.98997498 6.61466408]
[124.29113770 19.11439514]
[125.84697723 21.44624519]
[126.57287598 24.53488159]
[126.17597198 28.06728363]
[124.48199463 31.63028526]
[121.46660614 34.75460434]
[118.36249542 49.42990875]
[115.25838470 64.10520935]
[112.15427399 78.78050995]
[109.05016327 93.45581818]
[106.05538940 108.15381622]
[103.17011261 122.87371063]
[100.28484344 137.59359741]
[105.22317505 152.62435913]
[95.18225098 163.62567139]
[92.29697418 178.34556580]
[89.41170502 193.06546021]
[86.52642822 207.78535461]
[91.46475983 222.81610107]
[81.42383575 233.81742859]
[87.95870972 244.93759155]
[85.25252533 257.13842773]
[75.28849030 263.99734497]
[72.18437958 278.67263794]
[69.08026886 293.34793091]
[65.97615814 308.02325439]
[62.87205124 322.69854736]
[59.98677826 337.41842651]
[57.32098389 352.17965698]
[54.65518570 366.94088745]
[52.31969833 381.75793457]
[58.14392090 396.46810913]
[48.77560806 408.04757690]
[46.77159500 422.91308594]
[44.76758194 437.77862549]
[42.76356888 452.64416504]
[49.94874191 463.35565186]
[47.97355652 475.69592285]
[38.43544006 483.13574219]
[36.21032333 497.96978760]
[33.98520660 512.80383301]
[31.76008797 527.63787842]
[29.53497124 542.47192383]
[27.30985451 557.30596924]
[25.08473778 572.14001465]
[39.15217972 577.51782227]
[51.73440552 585.79443359]
[62.24292374 596.58264160]
[70.18623352 609.37786865]
[75.19281006 623.58166504]
[77.02848053 638.52972412]
[75.60739899 653.52288818]
[70.99602509 667.85986328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 202]
[20 201]
[21 200]
[22 199]
[23 198]
[24 197]
[25 196]
[27 193]
[28 192]
[29 191]
[30 190]
[32 188]
[36 187]
[37 186]
[38 185]
[41 184]
[42 183]
[43 182]
[44 181]
[45 180]
[47 177]
[49 175]
[50 174]
[51 173]
[52 172]
[54 170]
[55 169]
[56 168]
[58 167]
[59 166]
[60 165]
[61 164]
[62 163]
[63 158]
[65 156]
[66 155]
[67 154]
[68 152]
[69 151]
[70 150]
[71 149]
[74 146]
[75 145]
[76 144]
[77 143]
[78 142]
[85 136]
[86 135]
[87 134]
[89 132]
[96 131]
[97 130]
[98 129]
[99 128]
[100 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
