%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[115.97024536 293.61190796]
[113.21260071 278.86172485]
[111.45703888 263.95901489]
[110.71155548 248.97177124]
[110.97956848 233.96839905]
[112.25984955 219.01734924]
[114.54655457 204.18684387]
[117.82925415 189.54454041]
[122.09295654 175.15727234]
[127.31822205 161.09065247]
[133.48120117 147.40890503]
[140.55378723 134.17440796]
[127.83174896 126.22772980]
[115.10971069 118.28104401]
[102.38768005 110.33435822]
[89.32349396 102.96366882]
[75.94321442 96.18367767]
[62.56294250 89.40368652]
[49.18267059 82.62369537]
[35.80239868 75.84370422]
[22.42212486 69.06371307]
[14.77893257 81.97664642]
[6.30755568 94.36204529]
[-2.95572996 106.16686249]
[-12.97125721 117.34056091]
[-23.69613647 127.83528137]
[-35.08444595 137.60609436]
[-47.08741379 146.61114502]
[-59.65364075 154.81188965]
[-72.72932434 162.17318726]
[-86.25846100 168.66354370]
[-100.18312073 174.25515747]
[-114.44367981 178.92405701]
[-128.97906494 182.65029907]
[-143.72703552 185.41787720]
[-158.62445068 187.21496582]
[-173.60749817 188.03387451]
[-188.61201477 187.87107849]
[-203.57376099 186.72729492]
[-218.42868042 184.60740662]
[-233.11312866 181.52049255]
[-247.56425476 177.47978210]
[-261.72015381 172.50256348]
[-275.52023315 166.61016846]
[-288.90536499 159.82780457]
[-301.81823730 152.18453979]
[-314.20358276 143.71308899]
[-326.00836182 134.44973755]
[-337.18200684 124.43414307]
[-347.67666626 113.70920563]
[-357.44738770 102.32083893]
[-366.45239258 90.31781769]
[-374.65304565 77.75154114]
[-382.01428223 64.67581177]
[-388.50454712 51.14663696]
[-394.09606934 37.22194290]
[-398.76489258 22.96135902]
[-402.49105835 8.42594910]
[-405.25854492 -6.32204103]
[-407.05554199 -21.21945763]
[-407.87435913 -36.20250702]
[-407.71148682 -51.20703125]
[-406.56759644 -66.16877747]
[-404.44763184 -81.02367401]
[-401.36062622 -95.70810699]
[-397.31982422 -110.15921021]
[-392.34252930 -124.31507874]
[-386.45004272 -138.11511230]
[-379.66763306 -151.50021362]
[-372.02426147 -164.41305542]
[-363.55276489 -176.79835510]
[-354.28933716 -188.60305786]
[-344.27368164 -199.77664185]
[-333.54867554 -210.27124023]
[-322.16024780 -220.04191589]
[-310.15716553 -229.04682922]
[-297.59085083 -237.24742126]
[-284.51507568 -244.60856628]
[-270.98587036 -251.09875488]
[-257.06112671 -256.69018555]
[-242.80052185 -261.35894775]
[-228.26509094 -265.08499146]
[-213.51708984 -267.85241699]
[-198.61965942 -269.64932251]
[-183.63659668 -270.46804810]
[-168.63208008 -270.30508423]
[-153.67033386 -269.16113281]
[-138.81546021 -267.04107666]
[-124.13103485 -263.95397949]
[-109.67996216 -259.91308594]
[-95.52411652 -254.93571472]
[-81.72412109 -249.04315186]
[-68.33906555 -242.26063538]
[-55.42626572 -234.61721802]
[-43.04101944 -226.14561462]
[-31.23636246 -216.88212585]
[-20.06284523 -206.86639404]
[-9.56831169 -196.14132690]
[0.20229544 -184.75285339]
[9.20713806 -172.74972534]
[17.40765572 -160.18334961]
[24.76873207 -147.10754395]
[31.25884438 -133.57829285]
[36.85020447 -119.65352631]
[41.51886368 -105.39288330]
[45.24483490 -90.85742950]
[48.01215744 -76.10941315]
[49.80898666 -61.21197128]
[50.62762833 -46.22891235]
[50.46457291 -31.22439003]
[49.32051849 -16.26265907]
[47.20036697 -1.40778732]
[44.11319733 13.27661324]
[40.07222748 27.72766304]
[35.09476089 41.88347626]
[29.20211601 55.68344116]
[42.58238983 62.46343231]
[55.96266174 69.24342346]
[69.34293365 76.02341461]
[82.72320557 82.80340576]
[96.10348511 89.58339691]
[92.47791290 75.02815247]
[100.08785248 62.10186768]
[114.57398224 58.20930862]
[127.63799286 65.58031464]
[131.79621887 79.99243164]
[124.66664886 93.18974304]
[110.33435822 97.61232758]
[123.05639648 105.55900574]
[135.77842712 113.50569153]
[148.50047302 121.45237732]
[157.29110718 109.29106140]
[166.88270569 97.75094604]
[177.23149109 86.88468933]
[188.29023743 76.74186707]
[200.00851440 67.36875916]
[212.33282471 58.80813980]
[225.20695496 51.09906387]
[238.57214355 44.27670670]
[252.36743164 38.37220383]
[266.52984619 33.41248703]
[280.99478149 29.42019081]
[295.69625854 26.41353226]
[310.56713867 24.40622711]
[325.53964233 23.40743828]
[340.54537964 23.42172050]
[355.51596069 24.44900894]
[370.38299561 26.48461723]
[385.07870483 29.51925659]
[399.53604126 33.53908157]
[413.68899536 38.52574539]
[427.47299194 44.45650101]
[440.82519531 51.30428696]
[453.68460083 59.03785706]
[465.99261475 67.62191772]
[477.69302368 77.01731873]
[488.73245239 87.18116760]
[499.06051636 98.06710815]
[508.63012695 109.62546539]
[517.39758301 121.80348969]
[525.32293701 134.54562378]
[532.36999512 147.79373169]
[538.50653076 161.48736572]
[543.70465088 175.56402588]
[547.94061279 189.95950317]
[551.19500732 204.60810852]
[553.45312500 219.44300842]
[554.70452881 234.39649963]
[554.94360352 249.40034485]
[554.16918945 264.38610840]
[552.38488770 279.28543091]
[549.59881592 294.03027344]
[545.82360840 308.55340576]
[541.07659912 322.78851318]
[535.37939453 336.67068481]
[528.75805664 350.13659668]
[521.24267578 363.12475586]
[512.86761475 375.57592773]
[503.67111206 387.43328857]
[493.69509888 398.64273071]
[482.98507690 409.15313721]
[471.58993530 418.91650391]
[459.56164551 427.88833618]
[446.95513916 436.02767944]
[433.82791138 443.29736328]
[420.23983765 449.66424561]
[406.25292969 455.09927368]
[391.93103027 459.57766724]
[377.33944702 463.07894897]
[362.54479980 465.58715820]
[347.61456299 467.09088135]
[332.61688232 467.58322144]
[317.62017822 467.06192017]
[302.69287109 465.52941895]
[287.90307617 462.99264526]
[273.31829834 459.46322632]
[259.00506592 454.95721436]
[245.02867126 449.49520874]
[231.45289612 443.10211182]
[218.33970642 435.80709839]
[205.74891663 427.64346313]
[193.73799133 418.64843750]
[182.36170959 408.86309814]
[171.67198181 398.33206177]
[161.71760559 387.10336304]
[152.54399109 375.22830200]
[144.19297791 362.76098633]
[136.70269775 349.75833130]
[130.10731506 336.27969360]
[124.43691254 322.38656616]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 131]
[13 130]
[14 129]
[15 128]
[16 121]
[17 120]
[18 119]
[19 118]
[20 117]
[21 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
