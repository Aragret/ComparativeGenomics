%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[9.84305096 786.85125732]
[12.87471294 801.74682617]
[9.97041607 816.66772461]
[1.57304287 829.33862305]
[-11.03686714 837.82739258]
[-25.93639374 840.83947754]
[-40.85346985 837.91552734]
[-53.51334381 829.50146484]
[-61.98548508 816.88043213]
[-64.97794342 801.97692871]
[-62.03440475 787.06372070]
[-53.60372543 774.41491699]
[-40.97152328 765.95941162]
[-26.06412506 762.98657227]
[-23.17885208 748.26666260]
[-20.29357910 733.54675293]
[-17.40830803 718.82690430]
[-19.20650291 711.65832520]
[-14.36894417 703.91003418]
[-11.26483345 689.23474121]
[-8.16072369 674.55944824]
[-5.27545071 659.83953857]
[-2.60965538 645.07830811]
[0.05614009 630.31707764]
[-13.82005310 623.05230713]
[-24.78568459 611.84112549]
[-31.75874519 597.77264404]
[-34.04588318 582.21868896]
[-31.41132927 566.70013428]
[-24.10113716 552.73797607]
[-12.82025909 541.70465088]
[1.33542240 534.68878174]
[16.98554611 532.38781738]
[19.43127441 517.58856201]
[21.87700081 502.78927612]
[8.18696022 497.78643799]
[-4.34993553 490.34387207]
[-15.30329609 480.71527100]
[-24.29677200 469.22946167]
[-31.02097702 456.27908325]
[-35.24414062 442.30725098]
[-36.82008743 427.79229736]
[-35.69329834 413.23147583]
[-31.90087891 399.12380981]
[-25.57131195 385.95318604]
[-16.92012787 374.17156982]
[-6.24256277 364.18359375]
[6.09652805 356.33264160]
[19.67512703 350.88900757]
[34.02848816 348.04067993]
[48.66505051 347.88674927]
[51.33084488 333.12551880]
[53.99664307 318.36431885]
[56.66243744 303.60308838]
[59.32823181 288.84188843]
[46.72497177 280.83642578]
[38.12355423 268.58242798]
[34.86018753 253.92924500]
[37.46255493 239.10307312]
[45.56476974 226.36856079]
[57.95845413 217.68296814]
[72.77287292 214.39532471]
[75.43866730 199.63410950]
[78.10446930 184.87289429]
[80.77026367 170.11167908]
[83.43605804 155.35044861]
[86.10185242 140.58923340]
[88.54757690 125.78997040]
[90.77269745 110.95592499]
[85.83453369 97.87516785]
[94.39325714 86.81896210]
[96.61837769 71.98491669]
[98.84349060 57.15087128]
[101.06861115 42.31682587]
[103.29373169 27.48278427]
[105.51884460 12.64873981]
[107.52285767 -2.21678829]
[101.48027039 -16.83861160]
[110.67514038 -28.55627251]
[101.18074799 -40.90512466]
[103.20058441 -55.98408127]
[115.03183746 -64.95943451]
[116.81430817 -79.85314941]
[118.59677124 -94.74687195]
[112.55418396 -109.36869049]
[121.74905396 -121.08635712]
[123.53152466 -135.98007202]
[117.48892975 -150.60189819]
[126.68380737 -162.31954956]
[128.46627808 -177.21327209]
[130.24873352 -192.10699463]
[121.48712921 -210.26179504]
[133.73776245 -225.22203064]
[135.07600403 -240.16221619]
[136.41423035 -255.10240173]
[128.28102112 -271.62307739]
[138.92872620 -285.57272339]
[140.04438782 -300.53118896]
[125.96563721 -306.03393555]
[114.13536835 -315.44329834]
[105.60552216 -327.92260742]
[101.13456726 -342.36221313]
[101.12005615 -357.47814941]
[105.56327057 -371.92630005]
[114.06913757 -384.42196655]
[125.88130951 -393.85403442]
[139.94946289 -399.38381958]
[155.02265930 -400.51959229]
[169.76062012 -397.16040039]
[182.85282898 -389.60491943]
[193.13514709 -378.52496338]
[199.69328308 -364.90579224]
[201.94409180 -349.95837402]
[199.68742371 -335.01184082]
[193.12394714 -321.39520264]
[182.83728027 -310.31930542]
[169.74209595 -302.76895142]
[155.00283813 -299.41552734]
[153.88719177 -284.45709229]
[161.54061890 -275.08950806]
[160.73356628 -262.61822510]
[151.35441589 -253.76416016]
[150.01618958 -238.82398987]
[148.67794800 -223.88380432]
[155.90867615 -216.66371155]
[158.01588440 -206.44079590]
[154.06735229 -196.54183960]
[145.14245605 -190.32452393]
[143.35998535 -175.43080139]
[141.57752991 -160.53709412]
[147.74760437 -146.98056030]
[138.42523193 -134.19760132]
[136.64277649 -119.30388641]
[142.81285095 -105.74736023]
[133.49049377 -92.96440125]
[131.70802307 -78.07068634]
[129.92555237 -63.17697144]
[139.30468750 -51.66317368]
[137.70918274 -36.53343582]
[125.56886292 -26.77380562]
[131.73893738 -13.21728230]
[122.41657257 -0.43432248]
[124.61179352 3.80714607]
[124.16585541 9.47266960]
[120.35289001 14.87385654]
[118.12776947 29.70790100]
[115.90265656 44.54194260]
[113.67753601 59.37598801]
[111.45242310 74.21002960]
[109.22730255 89.04407501]
[114.16546631 102.12483215]
[105.60674286 113.18103790]
[103.38162231 128.01509094]
[105.44207001 134.29728699]
[104.20612335 139.84431458]
[100.86306763 143.25503540]
[98.19727325 158.01625061]
[95.53147888 172.77746582]
[92.86568451 187.53868103]
[90.19989014 202.29989624]
[87.53409576 217.06112671]
[100.26275635 225.32289124]
[108.83548737 237.79490662]
[111.97160339 252.55900574]
[109.22366333 267.35888672]
[101.04103851 279.94497681]
[88.69673157 288.41629028]
[74.08944702 291.50765991]
[71.42365265 306.26889038]
[68.75785828 321.03012085]
[66.09206390 335.79132080]
[63.42626953 350.55255127]
[77.81707764 356.18487549]
[90.83361053 364.50622559]
[101.97962189 375.19726562]
[110.83061981 387.84826660]
[117.04999542 401.97497559]
[120.40184021 417.03707886]
[120.75988007 432.45880127]
[118.11224365 447.65106201]
[112.56185913 462.03384399]
[104.32240295 475.05844116]
[93.71014404 486.22827148]
[81.13174438 495.11795044]
[67.06872559 501.38937378]
[52.05898666 504.80462646]
[36.67627335 505.23501587]
[34.23054504 520.03430176]
[31.78481674 534.83355713]
[44.69039536 541.21606445]
[55.26211548 550.96655273]
[62.64884949 563.28771973]
[66.25934601 577.17590332]
[65.80952454 591.50274658]
[61.34483337 605.10687256]
[53.23581696 616.88793945]
[42.14738846 625.89581299]
[28.98430252 631.40698242]
[14.81735706 632.98291016]
[12.15156174 647.74414062]
[9.48576641 662.50531006]
[11.35825825 668.84613037]
[9.95770073 674.35388184]
[6.51457882 677.66351318]
[3.41046882 692.33886719]
[0.30635864 707.01416016]
[-2.68841577 721.71215820]
[-5.57368851 736.43206787]
[-8.45896053 751.15191650]
[-11.34423351 765.87182617]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 210]
[15 209]
[16 208]
[17 207]
[19 206]
[20 205]
[21 204]
[22 201]
[23 200]
[24 199]
[33 189]
[34 188]
[35 187]
[51 172]
[52 171]
[53 170]
[54 169]
[55 168]
[62 161]
[63 160]
[64 159]
[65 158]
[66 157]
[67 156]
[68 153]
[69 152]
[71 150]
[72 149]
[73 148]
[74 147]
[75 146]
[76 145]
[77 142]
[79 140]
[82 137]
[83 136]
[84 135]
[86 133]
[87 132]
[89 130]
[90 129]
[91 128]
[93 124]
[94 123]
[95 122]
[97 119]
[98 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
