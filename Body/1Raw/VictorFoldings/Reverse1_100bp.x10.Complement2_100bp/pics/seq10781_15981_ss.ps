%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUCAUCUCCCUACUACGAUUAUUAAUCCGACACCCACCAACACAACUAAGUUUAAUACACAAAAAACCUUUCAGUACAGUCACCAUCAUUAUAUUAACxxxxxxxxxxUAAUCGUGGGUUUCGAUUCUAAGAUUAAAUUUGAUAAGAGACAAGAAAGUACCCCUUCGUCUAAACCCAUGGUGGGUUCAUAACUGAGUGGGUAGUUGUU\
) } def
/len { sequence length } bind def

/coor [
[126.79759979 480.42993164]
[117.91635895 468.33535767]
[109.82826233 455.69656372]
[102.56656647 442.56558228]
[96.16109467 428.99627686]
[90.63817596 415.04446411]
[86.02050018 400.76745605]
[82.32704163 386.22393799]
[79.57299042 371.47366333]
[77.76965332 356.57723999]
[76.92443848 341.59585571]
[77.04082489 326.59112549]
[78.11833954 311.62466431]
[80.15253448 296.75802612]
[83.13507080 282.05221558]
[87.05368805 267.56774902]
[91.89228058 253.36410522]
[97.63095856 239.49963379]
[104.24615479 226.03134155]
[111.71067810 213.01457214]
[119.99385071 200.50279236]
[129.06164551 188.54742432]
[138.87678528 177.19758606]
[149.39895630 166.49993896]
[139.40078735 155.31797791]
[129.40261841 144.13600159]
[119.40444183 132.95402527]
[109.40627289 121.77204895]
[99.40809631 110.59007263]
[88.84104919 99.94406128]
[77.73381805 89.86292267]
[66.62658691 79.78178406]
[51.20774841 76.23635864]
[46.98348236 61.95333099]
[35.87624741 51.87219238]
[24.76901436 41.79105377]
[13.66178131 31.70991516]
[2.55454755 21.62877655]
[-8.55268669 11.54763699]
[-19.50066376 21.81350899]
[-31.23920441 31.16513824]
[-43.69218063 39.54187775]
[-56.77882385 46.88939667]
[-70.41426849 53.16004181]
[-84.51007080 58.31315231]
[-98.97483063 62.31530380]
[-113.71472168 65.14054108]
[-128.63415527 66.77053070]
[-143.63636780 67.19471741]
[-158.62405396 66.41034698]
[-173.50004578 64.42250061]
[-188.16783142 61.24407196]
[-202.53228760 56.89567566]
[-216.50025940 51.40551376]
[-229.98117065 44.80919266]
[-242.88757324 37.14949036]
[-255.13577271 28.47608376]
[-266.64633179 18.84522629]
[-277.34460449 8.31937790]
[-287.16119385 -3.03319645]
[-296.03244019 -15.13887024]
[-303.90078735 -27.91913223]
[-310.71527100 -41.29109573]
[-316.43161011 -55.16803741]
[-321.01281738 -69.45996094]
[-324.42910767 -84.07417297]
[-326.65838623 -98.91589355]
[-327.68612671 -113.88887024]
[-327.50573730 -128.89599609]
[-326.11831665 -143.83993530]
[-323.53292847 -158.62377930]
[-319.76629639 -173.15164185]
[-314.84286499 -187.32931519]
[-308.79458618 -201.06483459]
[-301.66064453 -214.26911926]
[-293.48730469 -226.85653687]
[-284.32760620 -238.74545288]
[-274.24096680 -249.85876465]
[-263.29275513 -260.12438965]
[-251.55401611 -269.47576904]
[-239.10086060 -277.85223389]
[-226.01405334 -285.19946289]
[-212.37846375 -291.46981812]
[-198.28254700 -296.62261963]
[-183.81770325 -300.62445068]
[-169.07775879 -303.44934082]
[-154.15827942 -305.07901001]
[-139.15606689 -305.50286865]
[-124.16838074 -304.71817017]
[-109.29244232 -302.72998047]
[-94.62473297 -299.55123901]
[-80.26036835 -295.20251465]
[-66.29250336 -289.71206665]
[-52.81174469 -283.11544800]
[-39.90550995 -275.45544434]
[-27.65750313 -266.78176880]
[-16.14715767 -257.15066528]
[-5.44912672 -246.62458801]
[4.36720991 -235.27178955]
[13.23818779 -223.16592407]
[21.10627556 -210.38548279]
[27.92044449 -197.01336670]
[33.63650131 -183.13630676]
[38.21737289 -168.84428406]
[41.63335419 -154.22999573]
[43.86228561 -139.38821411]
[44.88971710 -124.41522217]
[44.70898056 -109.40810394]
[43.32125092 -94.46418762]
[40.73552704 -79.68040466]
[36.96858215 -65.15261841]
[32.04484177 -50.97506332]
[25.99623871 -37.23968124]
[18.86200333 -24.03555298]
[10.68840504 -11.44831371]
[1.52845252 0.44040313]
[12.63568592 10.52154160]
[23.74291992 20.60268021]
[34.85015488 30.68381882]
[45.95738602 40.76495743]
[57.06462097 50.84609604]
[71.68899536 53.67045593]
[76.70772552 68.67455292]
[87.81495667 78.75569153]
[98.92218781 88.83683014]
[98.10897064 73.85889435]
[107.01274872 61.78732300]
[121.56282806 58.14108276]
[135.10711670 64.58718109]
[141.45335388 78.17855835]
[137.70010376 92.70140839]
[125.56332397 101.51608276]
[110.59007263 100.59190369]
[120.58824921 111.77387238]
[130.58641052 122.95584869]
[140.58459473 134.13783264]
[150.58276367 145.31979370]
[160.58093262 156.50177002]
[172.38450623 147.23724365]
[184.75740051 138.74801636]
[197.64877319 131.06895447]
[211.00567627 124.23163605]
[224.77319336 118.26414490]
[238.89477539 113.19100189]
[253.31237793 109.03306580]
[267.96676636 105.80741119]
[282.79769897 103.52729797]
[297.74426270 102.20209503]
[312.74499512 101.83724213]
[327.73831177 102.43424988]
[342.66256714 103.99065399]
[357.45642090 106.50006866]
[372.05911255 109.95217133]
[386.41064453 114.33278656]
[400.45199585 119.62390900]
[414.12548828 125.80379486]
[427.37493896 132.84704590]
[440.14593506 140.72473145]
[452.38592529 149.40447998]
[464.04467773 158.85060120]
[475.07424927 169.02430725]
[485.42932129 179.88377380]
[495.06735229 191.38438416]
[503.94873047 203.47888184]
[512.03698730 216.11755371]
[519.29882812 229.24848938]
[525.70440674 242.81770325]
[531.22753906 256.76943970]
[535.84533691 271.04638672]
[539.53894043 285.58987427]
[542.29315186 300.34014893]
[544.09667969 315.23654175]
[544.94207764 330.21789551]
[544.82580566 345.22262573]
[543.74847412 360.18908691]
[541.71447754 375.05578613]
[538.73205566 389.76159668]
[534.81365967 404.24612427]
[529.97521973 418.44982910]
[524.23669434 432.31436157]
[517.62164307 445.78271484]
[510.15725708 458.79959106]
[501.87420654 471.31146240]
[492.80654907 483.26693726]
[482.99151611 494.61685181]
[472.46948242 505.31463623]
[461.28363037 515.31622314]
[449.47998047 524.58062744]
[437.10696411 533.06976318]
[424.21551514 540.74865723]
[410.85855103 547.58581543]
[397.09094238 553.55316162]
[382.96929932 558.62615967]
[368.55166626 562.78393555]
[353.89724731 566.00939941]
[339.06628418 568.28936768]
[324.11972046 569.61444092]
[309.11895752 569.97912598]
[294.12567139 569.38189697]
[279.20141602 567.82537842]
[264.40759277 565.31579590]
[249.80493164 561.86352539]
[235.45347595 557.48272705]
[221.41217041 552.19146729]
[207.73873901 546.01141357]
[194.48934937 538.96801758]
[181.71847534 531.09020996]
[169.47856140 522.41033936]
[157.81991577 512.96405029]
[146.79046631 502.79022217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 138]
[25 137]
[26 136]
[27 135]
[28 134]
[29 133]
[30 125]
[31 124]
[32 123]
[34 121]
[35 120]
[36 119]
[37 118]
[38 117]
[39 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
