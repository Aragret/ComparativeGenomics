%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUACUCGGAUGUCUACUAUCCUACAAAGUACACCACAUACGUAGCCCCAUCAGGCUCAUUGCAGCCCCGUAAGGCCUAUCCGGCUCUUUCACAACACCxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[-67.04606628 337.84222412]
[-59.82760620 351.01501465]
[-54.35296249 365.00274658]
[-50.71203232 379.57574463]
[-48.96459579 394.49468994]
[-49.13935471 409.51458740]
[-51.23344040 424.38882446]
[-55.21245956 438.87316895]
[-61.01107407 452.72973633]
[-68.53407288 465.73098755]
[-77.65791321 477.66345215]
[-88.23277283 488.33120728]
[-100.08501434 497.55902100]
[-113.01999664 505.19540405]
[-126.82533264 511.11495972]
[-141.27430725 515.22045898]
[-156.12968445 517.44451904]
[-171.14749146 517.75061035]
[-186.08114624 516.13372803]
[-200.68540955 512.62036133]
[-214.72047424 507.26821899]
[-227.95587158 500.16522217]
[-240.17425537 491.42797852]
[-251.17500305 481.19998169]
[-260.77746582 469.64920044]
[-268.82397461 456.96524048]
[-275.18237305 443.35647583]
[-279.74826050 429.04629517]
[-282.44665527 414.26971436]
[-283.23327637 399.26940918]
[-282.09518433 384.29165649]
[-279.05105591 369.58242798]
[-274.15090942 355.38323975]
[-267.47518921 341.92727661]
[-259.13351440 329.43548584]
[-249.26286316 318.11300659]
[-238.02532959 308.14572144]
[-225.60545349 299.69738770]
[-212.20715332 292.90664673]
[-198.05046082 287.88507080]
[-183.36784363 284.71505737]
[-168.40037537 283.44873047]
[-153.39387512 284.10684204]
[-138.59474182 286.67858887]
[-124.24598694 291.12173462]
[-110.58324432 297.36334229]
[-97.83085632 305.30090332]
[-88.34195709 293.68365479]
[-78.85305786 282.06640625]
[-69.36415863 270.44912720]
[-59.87525940 258.83187866]
[-50.38636017 247.21459961]
[-55.79307556 233.33537292]
[-53.51152802 218.51475525]
[-44.05549240 206.74829102]
[-29.88645363 201.25874329]
[-14.77350903 203.61376953]
[-5.28461075 191.99650574]
[-19.93680191 195.20793152]
[-34.03593445 190.08792114]
[-43.21323776 178.22297668]
[-44.62502289 163.28955078]
[-37.83383560 149.91496277]
[-24.94400024 142.24345398]
[-9.94956779 142.65213013]
[2.50327039 151.01435852]
[8.55586720 164.73899841]
[6.33265257 179.57357788]
[17.28856087 169.32818604]
[28.24447060 159.08279419]
[39.20038223 148.83740234]
[50.15628815 138.59201050]
[60.95844650 128.18464661]
[71.60445404 117.61759949]
[82.25046539 107.05054474]
[82.40935516 92.56189728]
[92.69305420 82.35446930]
[107.18248749 82.30344391]
[117.82849884 71.73639679]
[128.47450256 61.16934967]
[138.13531494 49.69464874]
[146.73388672 37.40380859]
[155.33244324 25.11297226]
[161.60980225 11.48965549]
[157.57487488 -3.80838084]
[168.25280762 -14.19255257]
[172.00910950 -28.71461105]
[175.76541138 -43.23667145]
[179.52171326 -57.75873184]
[183.27801514 -72.28079224]
[187.03431702 -86.80284882]
[190.79061890 -101.32490540]
[186.75567627 -116.62294769]
[197.43360901 -127.00711823]
[183.62673950 -132.94601440]
[170.88830566 -140.92301941]
[159.51690674 -150.75114441]
[149.77912903 -162.19998169]
[141.90321350 -175.00117493]
[136.07380676 -188.85462952]
[132.42753601 -203.43562317]
[131.04989624 -218.40234375]
[131.97317505 -233.40393066]
[135.17573547 -248.08876038]
[140.58247375 -262.11257935]
[148.06668091 -275.14666748]
[157.45291138 -286.88543701]
[168.52113342 -297.05377197]
[181.01188660 -305.41329956]
[194.63237000 -311.76803589]
[209.06330872 -315.96902466]
[223.96641541 -317.91781616]
[238.99235535 -317.56869507]
[253.78886414 -314.92987061]
[268.00912476 -310.06317139]
[281.31979370 -303.08270264]
[293.40881348 -294.15206909]
[303.99282837 -283.48068237]
[312.82373047 -271.31860352]
[319.69451904 -257.95101929]
[324.44409180 -243.69122314]
[326.96118164 -228.87350464]
[327.18673706 -213.84519958]
[325.11544800 -198.95863342]
[320.79592896 -184.56271362]
[314.32940674 -170.99494934]
[305.86746216 -158.57334900]
[295.60845947 -147.58912659]
[283.79287720 -138.29974365]
[270.69772339 -130.92297363]
[256.62991333 -125.63172150]
[241.91923523 -122.55003357]
[226.91055298 -121.75015259]
[211.95567322 -123.25081635]
[216.25927734 -108.99149323]
[205.31266785 -97.56860352]
[201.55636597 -83.04654694]
[197.80006409 -68.52449036]
[194.04377747 -54.00242996]
[190.28747559 -39.48036957]
[186.53117371 -24.95831108]
[182.77487183 -10.43625164]
[187.07847595 3.82307005]
[176.13186646 15.24595642]
[185.94172668 3.89841604]
[198.15362549 -4.81188726]
[212.07693481 -10.39234447]
[226.92420959 -12.52735329]
[241.85578918 -11.09616756]
[256.02719116 -6.17972946]
[268.63696289 1.94391346]
[278.97195435 12.81532955]
[286.44769287 25.81968880]
[290.64138794 40.22152710]
[291.31585693 55.20635986]
[288.43292236 69.92671204]
[282.15567017 83.55007935]
[272.83911133 95.30599976]
[261.01013184 104.52960968]
[247.33770752 110.69927979]
[232.59507751 113.46607971]
[217.61604309 112.67353058]
[203.24769592 108.36645508]
[190.30267334 100.78845215]
[179.51304626 90.36807251]
[171.48905945 77.69465637]
[166.68447876 63.48494720]
[165.37101746 48.54256058]
[167.62327576 33.71153641]
[159.02471924 46.00237274]
[150.42614746 58.29321289]
[164.31341553 52.62364960]
[179.29039001 53.45458984]
[192.46524048 60.62559128]
[201.29411316 72.75204468]
[204.07231140 87.49252319]
[200.26338196 102.00086975]
[190.60278320 113.47574615]
[176.95582581 119.70154572]
[161.95751953 119.47615051]
[148.50381470 112.84308624]
[139.19238281 101.08309937]
[135.82113647 86.46685028]
[139.04154968 71.81535339]
[128.39553833 82.38240051]
[117.74953461 92.94945526]
[117.59064484 107.43810272]
[107.30694580 117.64553070]
[92.81751251 117.69655609]
[82.17150116 128.26361084]
[71.52549744 138.83065796]
[69.42502594 145.09959412]
[65.12017059 148.80973816]
[60.40167999 149.54792786]
[49.44577408 159.79331970]
[38.48986435 170.03871155]
[27.53395271 180.28410339]
[16.57804489 190.52949524]
[6.33265257 201.48539734]
[-3.15624595 213.10266113]
[2.16868901 227.44116211]
[-0.38146961 242.42092896]
[-10.02312756 254.03578186]
[-24.08983994 259.23034668]
[-38.76910019 256.70349121]
[-48.25799561 268.32077026]
[-57.74689484 279.93801880]
[-67.23579407 291.55529785]
[-76.72469330 303.17254639]
[-86.21359253 314.78982544]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 210]
[48 209]
[49 208]
[50 207]
[51 206]
[52 205]
[57 200]
[58 199]
[68 198]
[69 197]
[70 196]
[71 195]
[72 194]
[73 191]
[74 190]
[75 189]
[78 186]
[79 185]
[80 184]
[81 171]
[82 170]
[83 169]
[84 144]
[86 142]
[87 141]
[88 140]
[89 139]
[90 138]
[91 137]
[92 136]
[94 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
