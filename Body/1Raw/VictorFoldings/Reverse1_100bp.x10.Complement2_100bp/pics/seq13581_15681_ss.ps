%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCAAUAAAAGCAAUUACAAUCAUUCCCACCCCUUCGCUCCAACUGGACAAUCCCACUCUUCUUAAUAAGCUCACGAUAUCCGCGAACAGUCCCUCCAxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[38.33158875 613.58349609]
[32.43732834 627.39562988]
[24.97940063 640.43005371]
[16.05867004 652.51049805]
[5.79577589 663.47357178]
[-5.67048597 673.17108154]
[-18.18504715 681.47180176]
[-31.57866478 688.26354980]
[-45.67020035 693.45440674]
[-60.26908875 696.97418213]
[-75.17789459 698.77532959]
[-90.19498444 698.83343506]
[-105.11728668 697.14776611]
[-119.74298096 693.74102783]
[-133.87426758 688.65942383]
[-147.32005310 681.97155762]
[-159.89848328 673.76794434]
[-171.43946838 664.15948486]
[-181.78691101 653.27612305]
[-190.80087280 641.26507568]
[-198.35946655 628.28881836]
[-204.36045837 614.52276611]
[-208.72268677 600.15307617]
[-211.38717651 585.37414551]
[-212.31787109 570.38580322]
[-211.50221252 555.39074707]
[-208.95120239 540.59179688]
[-204.69935608 526.18908691]
[-198.80416870 512.37738037]
[-191.34538269 499.34347534]
[-182.42384338 487.26361084]
[-172.16021729 476.30120850]
[-160.69329834 466.60446167]
[-148.17819214 458.30456543]
[-134.78411865 451.51373291]
[-120.69223785 446.32382202]
[-106.09311676 442.80499268]
[-91.18418884 441.00485229]
[-76.16709137 440.94772339]
[-61.24490738 442.63442993]
[-46.61943817 446.04208374]
[-32.48848724 451.12466431]
[-25.80829239 437.69430542]
[-19.12809753 424.26391602]
[-12.44790268 410.83355713]
[-5.76770782 397.40316772]
[-7.02732086 382.56192017]
[6.04619169 373.65161133]
[12.72638607 360.22122192]
[19.40657997 346.79086304]
[25.17261505 332.94335938]
[29.99861145 318.74090576]
[34.82460785 304.53845215]
[39.65060806 290.33599854]
[44.47660446 276.13354492]
[37.68317032 262.92807007]
[42.37509918 248.45600891]
[56.27228928 241.41995239]
[61.09828568 227.21749878]
[65.92428589 213.01504517]
[70.75028229 198.81259155]
[75.57627869 184.61013794]
[80.40227509 170.40768433]
[85.22827148 156.20523071]
[90.05427551 142.00277710]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[84.76270294 43.99632645]
[92.50000000 31.26905632]
[92.16502380 16.27279663]
[91.49523926 1.28775835]
[90.82545471 -13.69728088]
[90.15567017 -28.68231964]
[78.26121521 -19.54328156]
[63.66404343 -22.99618340]
[57.12464142 -36.49567413]
[63.46361542 -50.09043121]
[78.00811005 -53.75890350]
[90.03569031 -44.79829407]
[90.48229980 -59.79164505]
[90.92890167 -74.78499603]
[91.37551117 -89.77834320]
[90.59418488 -104.75798035]
[88.59017181 -119.62351227]
[86.58615875 -134.48904419]
[84.58214569 -149.35456848]
[82.57813263 -164.22009277]
[67.66539764 -166.69027710]
[54.14403534 -173.44779968]
[43.21635437 -183.89179993]
[35.85403824 -197.09361267]
[32.71173859 -211.87931824]
[34.06886673 -226.93420410]
[39.80474472 -240.91960144]
[49.40934753 -252.59191895]
[62.02863693 -260.91326904]
[76.54051208 -265.14373779]
[91.65459442 -264.90713501]
[106.02694702 -260.22451782]
[118.37958527 -251.51222229]
[127.61412048 -239.54499817]
[132.90943909 -225.38691711]
[133.79466248 -210.29692078]
[130.19108582 -195.61682129]
[122.41915131 -182.65193176]
[111.16991425 -172.55508423]
[97.44365692 -166.22410583]
[99.44766998 -151.35858154]
[101.45169067 -136.49305725]
[103.45570374 -121.62752533]
[105.45971680 -106.76199341]
[112.18675232 -120.16896820]
[124.31974030 -128.98887634]
[139.14813232 -131.25129700]
[153.35923767 -126.45084381]
[163.77825928 -115.65991974]
[168.07756042 -101.28924561]
[165.29664612 -86.54928589]
[156.05680847 -74.73296356]
[142.42224121 -68.48009491]
[127.43893433 -69.18756866]
[114.45420074 -76.69734192]
[106.36885834 -89.33174133]
[105.92224884 -74.33838654]
[105.47564697 -59.34503937]
[105.02903748 -44.35168839]
[105.14070892 -29.35210419]
[105.81049347 -14.36706543]
[106.48027802 0.61797321]
[107.15006256 15.60301208]
[109.49138641 18.23940086]
[110.67207336 22.14081383]
[110.11146545 26.74939537]
[107.50000000 31.26905632]
[115.23729706 43.99632645]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[114.21976471 113.79287720]
[124.14169312 102.54319763]
[136.60768127 94.20059204]
[150.79092407 89.31841278]
[165.75068665 88.22047424]
[180.49475098 90.97959137]
[194.04518127 97.41276550]
[205.50323486 107.09330750]
[214.10894775 119.37915039]
[219.29151917 133.45539856]
[220.70721436 148.38844299]
[218.26214600 163.18782043]
[212.11846924 176.87194824]
[202.68368530 188.53320312]
[190.58355713 197.39813232]
[176.62065125 202.87875366]
[161.72106934 204.61157227]
[146.87306213 202.48164368]
[133.06143188 196.63023376]
[121.20226288 187.44546509]
[112.08212280 175.53651428]
[106.30591583 161.69326782]
[104.25672913 146.82876587]
[99.43073273 161.03121948]
[94.60473633 175.23367310]
[89.77873230 189.43614197]
[84.95273590 203.63859558]
[80.12673950 217.84104919]
[75.30074310 232.04350281]
[70.47474670 246.24595642]
[77.20814514 260.29226685]
[72.11157227 274.62683105]
[58.67906189 280.95953369]
[53.85306168 295.16198730]
[49.02706528 309.36444092]
[44.20106888 323.56689453]
[39.37506866 337.76937866]
[51.97840500 329.63574219]
[66.97779846 329.50070190]
[79.72552490 337.40612793]
[86.27155304 350.90240479]
[84.58753967 365.80755615]
[75.19528198 377.50311279]
[61.00508499 382.36502075]
[46.41392517 378.88677979]
[35.94303513 368.14617920]
[32.83695602 353.47103882]
[26.15676308 366.90142822]
[19.47656822 380.33178711]
[20.25836945 396.13366699]
[7.66266823 404.08337402]
[0.98247367 417.51373291]
[-5.69772100 430.94412231]
[-12.37791538 444.37451172]
[-19.05811119 457.80487061]
[-6.47912884 466.00765991]
[5.06248903 475.61535645]
[15.41065598 486.49798584]
[24.42542458 498.50842285]
[31.98487854 511.48422241]
[37.98678970 525.24987793]
[42.34998322 539.61926270]
[45.01545715 554.39801025]
[45.94715881 569.38629150]
[45.13249207 584.38140869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 200]
[43 199]
[44 198]
[45 197]
[46 196]
[48 194]
[49 193]
[50 192]
[51 182]
[52 181]
[53 180]
[54 179]
[55 178]
[58 175]
[59 174]
[60 173]
[61 172]
[62 171]
[63 170]
[64 169]
[65 168]
[66 145]
[67 144]
[69 142]
[70 141]
[71 140]
[73 138]
[74 134]
[75 133]
[76 132]
[77 131]
[83 130]
[84 129]
[85 128]
[86 127]
[87 115]
[88 114]
[89 113]
[90 112]
[91 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
