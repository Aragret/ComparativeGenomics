%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAUCAACCCCGUAAAGUGACAUUUCUCCACAACCAAGAGAAUUAGAAAUUGAAUUUUCCAAUUACGAUUCAAUCGAAAUGUCACCCGAGAUCUCCCCxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[248.19178772 399.83114624]
[254.55641174 386.23193359]
[262.35409546 373.40057373]
[271.49340820 361.48754883]
[281.86718750 350.63250732]
[272.20635986 339.15780640]
[262.54556274 327.68310547]
[252.88475037 316.20840454]
[243.22393799 304.73370361]
[233.56312561 293.25900269]
[223.81716919 281.85653687]
[213.98658752 270.52694702]
[204.15600586 259.19735718]
[194.32542419 247.86776733]
[184.32725525 236.68579102]
[174.16369629 225.65391541]
[164.00015259 214.62203979]
[159.34963989 213.53494263]
[155.33265686 209.51489258]
[153.70426941 203.10708618]
[143.87368774 191.77749634]
[134.04310608 180.44790649]
[124.21252441 169.11831665]
[114.38194275 157.78872681]
[118.18951416 172.29742432]
[118.94030762 187.27862549]
[116.60240936 202.09530640]
[111.27522278 216.11747742]
[103.18525696 228.74888611]
[92.67651367 239.45243835]
[80.19581604 247.77304077]
[66.27386475 253.35687256]
[51.50261307 255.96650696]
[36.51015472 255.49098206]
[21.93396759 251.95053101]
[8.39384270 245.49568176]
[-3.53448701 236.40090942]
[-13.34382343 225.05291748]
[-20.61706924 211.93423462]
[-25.04496002 197.60267639]
[-26.43922234 182.66760254]
[-24.74057198 167.76409912]
[-20.02123260 153.52584839]
[-12.48187637 140.55827332]
[-2.44307876 129.41275024]
[9.66830444 120.56320953]
[23.33729172 114.38593292]
[37.98266983 111.14356995]
[52.98171234 110.97400665]
[67.69664764 113.88443756]
[81.50179291 119.75111389]
[93.81015015 128.32458496]
[104.09845734 139.24044800]
[99.69746399 124.90059662]
[95.29646301 110.56075287]
[90.84543610 124.88514709]
[80.31288147 135.56527710]
[66.05180359 140.21519470]
[51.24816132 137.79606628]
[39.20912552 128.84834290]
[32.62424850 115.37097931]
[32.96461105 100.37484741]
[40.15417099 87.21011353]
[52.58676529 78.81781769]
[67.48491669 77.07282257]
[81.52034760 82.36495972]
[91.55751038 93.51197815]
[89.55349731 78.64644623]
[87.54948425 63.78092194]
[85.54547119 48.91539383]
[75.78031921 40.48896027]
[74.41721344 28.06617165]
[81.64472198 18.36618805]
[79.86225128 3.47247100]
[70.53988647 -9.31048870]
[76.70996857 -22.86701202]
[74.92750549 -37.76073074]
[73.14503479 -52.65444565]
[70.01499939 -56.83176041]
[68.91072083 -61.34107208]
[69.61943817 -65.35514069]
[71.63088226 -68.25107574]
[68.69049835 -72.56398773]
[67.78866577 -77.11810303]
[68.67591095 -81.09652710]
[70.81466675 -83.89974976]
[70.36805725 -98.89310455]
[69.92145538 -113.88645172]
[69.47484589 -128.87980652]
[57.44564438 -119.91886902]
[42.90150070 -123.58872223]
[36.56381226 -137.18408203]
[43.10448837 -150.68295288]
[57.70198822 -154.13447571]
[69.59482574 -144.99577332]
[70.26461029 -159.98081970]
[70.93439484 -174.96585083]
[71.60417938 -189.95089722]
[72.27396393 -204.93592834]
[72.94374847 -219.92097473]
[59.30308914 -226.69239807]
[49.60091019 -238.43069458]
[45.51818085 -253.10214233]
[47.76226044 -268.16479492]
[55.94433975 -281.00900269]
[68.64683533 -289.40939331]
[83.66895294 -291.91055298]
[98.40802765 -288.07916260]
[110.31041718 -278.57901001]
[117.31397247 -265.05606079]
[118.20526886 -249.85325623]
[112.82990265 -235.60455322]
[102.11917877 -224.77865601]
[87.92878723 -219.25119019]
[87.25900269 -204.26614380]
[86.58921814 -189.28111267]
[85.91943359 -174.29606628]
[85.24964905 -159.31103516]
[84.57986450 -144.32598877]
[84.46820068 -129.32641602]
[84.91480255 -114.33306122]
[85.36141205 -99.33970642]
[85.80801392 -84.34635925]
[86.58934021 -69.36672211]
[88.03875732 -54.43691254]
[89.82122040 -39.54319763]
[91.60369110 -24.64947891]
[100.79856110 -12.93181801]
[94.75597382 1.69000494]
[96.53843689 16.58372307]
[107.79841614 30.04402733]
[100.41099548 46.91138077]
[102.41500854 61.77690887]
[104.41902161 76.64243317]
[106.42303467 91.50796509]
[109.63631439 106.15975189]
[114.03730774 120.49959564]
[118.43830872 134.83944702]
[125.71154022 147.95814514]
[135.54211426 159.28773499]
[145.37269592 170.61732483]
[155.20327759 181.94691467]
[165.03385925 193.27650452]
[175.03202820 204.45848083]
[185.19557190 215.49035645]
[195.35913086 226.52224731]
[201.54554749 228.85453796]
[205.09292603 233.29449463]
[205.65501404 238.03718567]
[215.48559570 249.36677551]
[225.31617737 260.69638062]
[235.14675903 272.02597046]
[243.13458252 276.45681763]
[245.03782654 283.59820557]
[254.69863892 295.07290649]
[264.35943604 306.54760742]
[274.02026367 318.02230835]
[283.68106079 329.49700928]
[293.34188843 340.97167969]
[305.80575562 332.59918213]
[319.10183716 325.62338257]
[333.07418823 320.12603760]
[347.55899048 316.17163086]
[362.38644409 313.80651855]
[377.38269043 313.05844116]
[392.37191772 313.93612671]
[407.17837524 316.42932129]
[421.62847900 320.50878906]
[435.55279541 326.12670898]
[448.78805542 333.21719360]
[461.17907715 341.69714355]
[472.58062744 351.46710205]
[482.85900879 362.41250610]
[491.89370728 374.40509033]
[499.57879639 387.30416870]
[505.82415771 400.95858765]
[510.55657959 415.20819092]
[513.72058105 429.88592529]
[515.27905273 444.81973267]
[515.21380615 459.83450317]
[513.52545166 474.75418091]
[510.23388672 489.40383911]
[505.37768555 503.61175537]
[499.01379395 517.21130371]
[491.21679688 530.04309082]
[482.07812500 541.95660400]
[471.70495605 552.81219482]
[460.21884155 562.48260498]
[447.75451660 570.85443115]
[434.45806885 577.82952881]
[420.48541260 583.32611084]
[406.00039673 587.27972412]
[391.17282104 589.64404297]
[376.17651367 590.39135742]
[361.18734741 589.51281738]
[346.38101196 587.01885986]
[331.93115234 582.93859863]
[318.00714111 577.31994629]
[304.77227783 570.22869873]
[292.38168335 561.74810791]
[280.98065186 551.97753906]
[270.70288086 541.03161621]
[261.66882324 529.03851318]
[253.98443604 516.13903809]
[247.73980713 502.48428345]
[243.00813293 488.23443604]
[239.84492493 473.55651855]
[238.28723145 458.62261963]
[238.35334778 443.60787964]
[240.04248047 428.68829346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 159]
[6 158]
[7 157]
[8 156]
[9 155]
[10 154]
[11 152]
[12 151]
[13 150]
[14 149]
[15 146]
[16 145]
[17 144]
[20 143]
[21 142]
[22 141]
[23 140]
[24 139]
[53 138]
[54 137]
[55 136]
[67 135]
[68 134]
[69 133]
[70 132]
[73 130]
[74 129]
[76 127]
[77 126]
[78 125]
[82 124]
[86 123]
[87 122]
[88 121]
[89 120]
[95 119]
[96 118]
[97 117]
[98 116]
[99 115]
[100 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
