%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUACAAACCCAGACUCAAAUAUAUAGUGUCACUCUUAAGAUACUACCUGGUACAUUGCUUGUUACGAUGUCCCUACUUAUAAUACCUCUUCAUCAGAxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[16.44849396 551.12597656]
[7.51621246 563.96142578]
[-7.59021187 568.00244141]
[-21.73798752 561.34106445]
[-28.24696732 547.12249756]
[-24.04380989 532.06036377]
[-11.11311913 523.26654053]
[-9.77488422 508.32635498]
[-8.43665028 493.38616943]
[-10.12852001 491.15106201]
[-11.03697300 488.11111450]
[-10.85102272 484.56134033]
[-9.37212753 480.90383911]
[-6.54804325 477.60559082]
[-4.32292604 462.77154541]
[-2.09780884 447.93750000]
[0.12730840 433.10345459]
[2.35242558 418.26940918]
[4.57754278 403.43536377]
[6.80265999 388.60131836]
[4.73469782 384.29635620]
[5.34912395 378.64663696]
[9.32121372 373.36135864]
[-1.20365977 384.04907227]
[-15.46139240 388.70922852]
[-30.26676941 386.30075073]
[-42.31223297 377.36169434]
[-48.90679550 363.88906860]
[-48.57721329 348.89266968]
[-41.39712143 335.72277832]
[-28.97056198 327.32156372]
[-14.07366562 325.56585693]
[-0.03443706 330.84790039]
[10.01072502 341.98767090]
[13.81770706 356.49655151]
[18.85462379 342.36752319]
[23.89153862 328.23849487]
[28.92845535 314.10946655]
[33.96537018 299.98043823]
[32.88712692 297.39285278]
[32.76888275 294.22229004]
[33.83784103 290.83218384]
[36.18553162 287.66156006]
[39.74558258 285.17559814]
[45.61454391 271.37142944]
[51.48350143 257.56723022]
[57.35246277 243.76306152]
[63.22142410 229.95889282]
[68.04742432 215.75642395]
[71.80372620 201.23437500]
[70.43539429 193.97148132]
[75.72556305 186.52488708]
[79.69766235 172.06036377]
[82.91093445 157.40856934]
[85.35665894 142.60929871]
[87.80239105 127.81002808]
[90.24811554 113.01075745]
[83.93856049 97.46837616]
[94.72304535 84.62037659]
[89.11848450 69.82512665]
[98.65815735 58.38642502]
[100.88327789 43.55237961]
[103.10839081 28.71833801]
[97.50382996 13.92308617]
[107.04350281 2.48438597]
[109.26862335 -12.34965801]
[107.53653717 -16.33134651]
[107.19583893 -20.26179886]
[108.05957031 -23.70989418]
[109.81996918 -26.34951973]
[112.09316254 -27.98986816]
[115.19727325 -42.66516876]
[118.30137634 -57.34047318]
[121.40548706 -72.01577759]
[108.99368286 -82.94001007]
[103.81429291 -98.54351807]
[107.19109344 -114.53770447]
[118.10977936 -126.57672882]
[133.52009583 -131.43830872]
[136.40536499 -146.15818787]
[139.29063416 -160.87808228]
[142.17590332 -175.59797668]
[145.06118774 -190.31787109]
[147.94645691 -205.03776550]
[150.83172607 -219.75764465]
[153.71699524 -234.47753906]
[155.61029053 -249.35757446]
[156.50311279 -264.33099365]
[157.39591980 -279.30438232]
[147.56925964 -296.90548706]
[158.90773010 -312.56838989]
[159.35433960 -327.56173706]
[159.80093384 -342.55508423]
[160.24754333 -357.54843140]
[160.58251953 -372.54470825]
[160.80584717 -387.54302979]
[161.02917480 -402.54138184]
[146.77526855 -407.65069580]
[134.95423889 -417.11334229]
[126.84832764 -429.90289307]
[123.33680725 -444.63204956]
[124.80058289 -459.70309448]
[131.08087158 -473.48120117]
[141.49642944 -484.47189331]
[154.91748047 -491.48291016]
[169.88816833 -493.75378418]
[184.78462219 -491.03817749]
[197.99096680 -483.63067627]
[208.07469177 -472.33477783]
[213.94197083 -458.37576294]
[214.95635986 -443.26782227]
[211.00785828 -428.64974976]
[202.52474976 -416.10720825]
[190.42721558 -407.00070190]
[176.02751160 -402.31805420]
[175.80418396 -387.31970215]
[175.58085632 -372.32138062]
[178.62442017 -365.58648682]
[175.24089050 -357.10183716]
[174.79428101 -342.10848999]
[174.34768677 -327.11514282]
[173.90107727 -312.12179565]
[181.54872131 -305.34487915]
[184.26068115 -295.26550293]
[180.90834045 -285.14907837]
[172.36932373 -278.41156006]
[171.47651672 -263.43817139]
[170.58369446 -248.46476746]
[180.58328247 -259.64547729]
[195.01145935 -263.74761963]
[209.39750671 -259.50009155]
[219.28376770 -248.21905518]
[221.60684204 -233.40003967]
[215.64694214 -219.63487244]
[203.25076294 -211.18887329]
[188.25942993 -210.67910767]
[175.31816101 -218.26351929]
[168.43688965 -231.59226990]
[165.55162048 -216.87237549]
[162.66635132 -202.15248108]
[159.78106689 -187.43260193]
[156.89579773 -172.71270752]
[154.01052856 -157.99281311]
[151.12525940 -143.27291870]
[148.23997498 -128.55302429]
[159.10237122 -120.27500153]
[165.36845398 -108.06578827]
[165.76467896 -94.28202820]
[160.15673828 -81.61201477]
[149.58691406 -72.55139923]
[136.08079529 -68.91166687]
[132.97668457 -54.23636246]
[129.87257385 -39.56106186]
[126.76846313 -24.88575745]
[124.10266876 -10.12454033]
[121.87754822 4.70950317]
[127.64126587 18.44372368]
[117.94243622 30.94345474]
[115.71732330 45.77749634]
[113.49220276 60.61154175]
[119.25592041 74.34576416]
[109.55709076 86.84548950]
[115.90273285 96.61145782]
[114.08937836 108.11593628]
[105.04738617 115.45648193]
[102.60166168 130.25575256]
[100.15592957 145.05502319]
[97.71020508 159.85429382]
[109.85293579 151.04782104]
[124.82385254 151.98136902]
[135.77845764 162.22814941]
[137.70846558 177.10346985]
[129.73147583 189.80653381]
[115.49448395 194.52966309]
[101.50643921 189.11352539]
[94.16218567 176.03245544]
[90.19008636 190.49697876]
[86.32578278 204.99067688]
[82.56948090 219.51272583]
[94.16983795 210.00317383]
[108.95445251 207.47035217]
[123.05866241 212.57635498]
[132.79566956 223.98648071]
[135.62022400 238.71813965]
[130.79400635 252.92051697]
[119.57859039 262.88116455]
[104.90563202 265.99636841]
[90.61062622 261.45181274]
[80.43025208 250.43547058]
[77.02560425 235.82785034]
[71.15663910 249.63201904]
[65.28768158 263.43618774]
[59.41872025 277.24038696]
[53.54975891 291.04455566]
[48.09440231 305.01736450]
[43.05748367 319.14639282]
[38.02056885 333.27542114]
[32.98365402 347.40444946]
[27.94673729 361.53347778]
[24.08243179 376.02716064]
[21.63670349 390.82644653]
[19.41158676 405.66049194]
[17.18647003 420.49450684]
[14.96135235 435.32855225]
[12.73623466 450.16259766]
[10.51111794 464.99664307]
[8.28600025 479.83068848]
[6.50353479 494.72442627]
[5.16530037 509.66461182]
[3.82706642 524.60479736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 210]
[8 209]
[9 208]
[14 207]
[15 206]
[16 205]
[17 204]
[18 203]
[19 202]
[20 201]
[23 200]
[35 199]
[36 198]
[37 197]
[38 196]
[39 195]
[44 194]
[45 193]
[46 192]
[47 191]
[48 190]
[49 179]
[50 178]
[52 177]
[53 176]
[54 168]
[55 167]
[56 166]
[57 165]
[59 162]
[61 160]
[62 159]
[63 158]
[65 156]
[66 155]
[71 154]
[72 153]
[73 152]
[74 151]
[79 145]
[80 144]
[81 143]
[82 142]
[83 141]
[84 140]
[85 139]
[86 138]
[87 128]
[88 127]
[89 126]
[91 122]
[92 121]
[93 120]
[94 119]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
