%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[177.28247070 468.47833252]
[188.06823730 457.99111938]
[200.59750366 449.66452026]
[194.72853088 435.86035156]
[188.85957336 422.05618286]
[171.50102234 416.24267578]
[163.77177429 399.29653931]
[171.00558472 381.78695679]
[164.72822571 368.16363525]
[158.45086670 354.54031372]
[152.17349243 340.91699219]
[145.89613342 327.29367065]
[139.61877441 313.67037964]
[138.33192444 328.61505127]
[131.79884338 342.11761475]
[120.87908173 352.40151978]
[107.00932312 358.11376953]
[92.01436615 358.50280762]
[77.86706543 353.51745605]
[66.42872620 343.81359863]
[59.20427704 330.66799927]
[57.14420700 315.81011963]
[60.51955414 301.19482422]
[68.88623810 288.74499512]
[81.14347076 280.09857178]
[95.67861176 276.39321899]
[110.57930756 278.11639404]
[123.88511658 285.04138184]
[133.84666443 296.25912476]
[130.74255371 281.58383179]
[127.63843536 266.90850830]
[124.53432465 252.23321533]
[114.33071899 241.38261414]
[119.04472351 226.27999878]
[104.24040985 224.25080872]
[90.99877930 217.26594543]
[80.92703247 206.15133667]
[75.25505066 192.23551941]
[74.68527985 177.19073486]
[79.30578613 162.83207703]
[88.57727051 150.89843750]
[101.39597321 142.84199524]
[98.29186249 128.16668701]
[95.18775177 113.49139404]
[85.98612213 102.96421051]
[90.13694763 89.61271667]
[87.03283691 74.93741608]
[83.92872620 60.26211548]
[73.50309753 48.36182785]
[78.43911743 34.30889511]
[75.33501434 19.63359451]
[72.23090363 4.95829153]
[69.12679291 -9.71701050]
[65.80452728 -24.34447098]
[62.26485825 -38.92084503]
[49.24883652 -51.94638443]
[54.84234238 -68.58007050]
[51.08604431 -83.10213470]
[47.32974243 -97.62419128]
[43.57344055 -112.14624786]
[39.81714249 -126.66831207]
[35.52301788 -141.04052734]
[30.69701958 -155.24298096]
[25.87102318 -169.44543457]
[21.04502487 -183.64788818]
[16.21902657 -197.85034180]
[11.39302921 -212.05279541]
[-3.27590179 -208.84306335]
[-18.21197891 -207.29592896]
[-33.22736359 -207.43086243]
[-48.13322449 -209.24617004]
[-62.74209976 -212.71902466]
[-76.87027740 -217.80575562]
[-90.34006500 -224.44236755]
[-102.98207855 -232.54542542]
[-114.63732147 -242.01301575]
[-125.15923309 -252.72607422]
[-134.41546631 -264.54986572]
[-142.28964233 -277.33569336]
[-148.68270874 -290.92276001]
[-153.51426697 -305.14022827]
[-156.72357178 -319.80926514]
[-158.27026367 -334.74536133]
[-158.13487244 -349.76077271]
[-156.31912231 -364.66656494]
[-152.84582520 -379.27532959]
[-147.75868225 -393.40335083]
[-141.12165833 -406.87295532]
[-133.01821899 -419.51470947]
[-123.55028534 -431.16967773]
[-112.83692169 -441.69128418]
[-101.01284790 -450.94714355]
[-88.22678375 -458.82095337]
[-74.63951111 -465.21359253]
[-60.42191315 -470.04473877]
[-45.75279236 -473.25360107]
[-30.81662178 -474.79983521]
[-15.80124474 -474.66400146]
[-0.89549303 -472.84780884]
[13.71317673 -469.37408447]
[27.84104538 -464.28649902]
[41.31044006 -457.64907837]
[53.95196533 -449.54528809]
[65.60665131 -440.07699585]
[76.12791443 -429.36331177]
[85.38344574 -417.53897095]
[93.25684357 -404.75265503]
[99.64910126 -391.16519165]
[104.47982025 -376.94744873]
[107.68824768 -362.27822876]
[109.23403931 -347.34201050]
[109.09775543 -332.32666016]
[107.28110504 -317.42095947]
[103.80693817 -302.81237793]
[98.71894836 -288.68466187]
[92.08112335 -275.21548462]
[83.97692871 -262.57418823]
[74.50829315 -250.91978455]
[63.79430008 -240.39884949]
[51.96967697 -231.14366150]
[39.18313599 -223.27064514]
[25.59548569 -216.87879944]
[30.42148209 -202.67634583]
[35.24748230 -188.47389221]
[40.07347870 -174.27143860]
[44.89947510 -160.06896973]
[49.72547531 -145.86651611]
[58.59613037 -157.96244812]
[73.57691956 -158.72135925]
[83.62456512 -147.58381653]
[81.33230591 -132.75999451]
[68.38992310 -125.17747498]
[54.33919907 -130.42460632]
[58.09550095 -115.90254974]
[61.85180283 -101.38049316]
[65.60810089 -86.85843658]
[69.36440277 -72.33637238]
[79.62476349 -65.92922211]
[82.87304688 -53.86139679]
[76.84123230 -42.46051788]
[80.38090515 -27.88414383]
[83.92104340 -24.67844963]
[85.48496246 -19.21482658]
[83.80209351 -12.82112122]
[86.90620422 1.85418141]
[90.01031494 16.52948380]
[93.11442566 31.20478630]
[103.31803131 42.05539322]
[98.60402679 57.15800476]
[101.70813751 71.83330536]
[104.81224823 86.50860596]
[114.01387787 97.03578949]
[109.86305237 110.38728333]
[112.96716309 125.06258392]
[116.07127380 139.73788452]
[131.05429077 141.91372681]
[144.36387634 149.07102966]
[154.40278625 160.32894897]
[159.97378540 174.31587219]
[160.42243958 189.33653259]
[155.71386719 203.57745361]
[146.43469238 215.32589722]
[133.72001648 223.17588806]
[144.14566040 235.07617188]
[139.20962524 249.12910461]
[142.31373596 263.80441284]
[145.41784668 278.47970581]
[148.52195740 293.15502930]
[153.24209595 307.39300537]
[159.51945496 321.01632690]
[165.79681396 334.63964844]
[172.07417297 348.26293945]
[178.35153198 361.88626099]
[184.62889099 375.50958252]
[196.36984253 377.37689209]
[205.65649414 384.60592651]
[210.25286865 395.30953979]
[209.12338257 406.78298950]
[202.66375732 416.18719482]
[208.53271484 429.99139404]
[214.40167236 443.79556274]
[229.09114075 440.54989624]
[244.12687683 440.05889893]
[258.99679565 442.33929443]
[273.19442749 447.31344604]
[286.23617554 454.81192017]
[297.67788696 464.57931519]
[307.12985229 476.28295898]
[314.27011108 489.52423096]
[318.85549927 503.85214233]
[320.72982788 518.77868652]
[319.82925415 533.79547119]
[316.18444824 548.39099121]
[309.91958618 562.06823730]
[301.24801636 574.36120605]
[290.46508789 584.85137939]
[277.93804932 593.18133545]
[264.09359741 599.06744385]
[249.40327454 602.30914307]
[234.36740112 602.79608154]
[219.49810791 600.51165771]
[205.30181885 595.53369141]
[192.26208496 588.03167725]
[180.82299805 578.26123047]
[171.37420654 566.55505371]
[164.23750305 553.31182861]
[159.65599060 538.98266602]
[157.78567505 524.05566406]
[158.69029236 509.03912354]
[162.33901978 494.44454956]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 181]
[4 180]
[5 179]
[8 174]
[9 173]
[10 172]
[11 171]
[12 170]
[13 169]
[29 168]
[30 167]
[31 166]
[32 165]
[34 163]
[42 155]
[43 154]
[44 153]
[46 151]
[47 150]
[48 149]
[50 147]
[51 146]
[52 145]
[53 144]
[54 141]
[55 140]
[57 137]
[58 136]
[59 135]
[60 134]
[61 133]
[62 127]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
