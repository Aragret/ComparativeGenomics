%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxCACUGAUAUACCUACGGGGGGUGGGAUGGUGUGUAAGCUUCUUGGGCAUAUGUAUUUUAGAUCUGUUUUUUCCUUCCUUAGCUUGGGGGGUUUCGACCAA\
) } def
/len { sequence length } bind def

/coor [
[-31.85590553 417.89709473]
[-27.93604469 432.39077759]
[-25.57900047 447.21899414]
[-24.81147957 462.21377563]
[-25.64217758 477.20516968]
[-28.06168556 492.02334595]
[-32.04258347 506.50036621]
[-37.53977203 520.47222900]
[-44.49095535 533.78063965]
[-52.81737518 546.27471924]
[-62.42469025 557.81298828]
[-73.20403290 568.26470947]
[-85.03327942 577.51135254]
[-97.77838135 585.44830322]
[-111.29492950 591.98547363]
[-125.42977905 597.04888916]
[-140.02276611 600.58117676]
[-154.90853882 602.54223633]
[-169.91842651 602.90991211]
[-184.88237000 601.68005371]
[-199.63079834 598.86657715]
[-213.99662781 594.50128174]
[-227.81704712 588.63378906]
[-240.93548584 581.33044434]
[-253.20329285 572.67407227]
[-264.48144531 562.76269531]
[-274.64221191 551.70867920]
[-283.57040405 539.63726807]
[-291.16485596 526.68518066]
[-297.33956909 512.99920654]
[-302.02453613 498.73446655]
[-305.16671753 484.05255127]
[-306.73043823 469.11981201]
[-306.69802856 454.10543823]
[-305.06985474 439.17959595]
[-301.86437988 424.51135254]
[-297.11788940 410.26696777]
[-290.88415527 396.60778809]
[-283.23385620 383.68862915]
[-274.25363159 371.65585327]
[-264.04528809 360.64578247]
[-252.72444153 350.78320312]
[-240.41938782 342.17984009]
[-227.26954651 334.93316650]
[-213.42393494 329.12533569]
[-199.03941345 324.82214355]
[-184.27896118 322.07232666]
[-169.30986023 320.90704346]
[-154.30169678 321.33950806]
[-139.42453003 323.36483765]
[-124.84691620 326.96005249]
[-110.73405457 332.08441162]
[-97.24584961 338.67990112]
[-84.53511810 346.67175293]
[-72.74589539 355.96939087]
[-62.25839615 345.24502563]
[-51.77089310 334.52062988]
[-41.28339386 323.79626465]
[-30.79589081 313.07186890]
[-20.30838966 302.34750366]
[-9.82088947 291.62310791]
[0.26024935 280.51586914]
[9.92105961 269.04116821]
[19.58187103 257.56646729]
[29.24268150 246.09178162]
[38.90349197 234.61708069]
[48.56430054 223.14237976]
[58.22511292 211.66767883]
[65.20356750 198.38983154]
[69.17565918 183.92530823]
[73.14775848 169.46078491]
[69.05693054 155.13896179]
[80.17239380 143.88032532]
[84.14449310 129.41580200]
[88.11658478 114.95127869]
[81.04122162 102.30670166]
[84.87813568 88.33442688]
[97.41889191 81.07662201]
[101.39098358 66.61209869]
[105.36308289 52.14757538]
[101.55636597 36.79116058]
[112.38771820 26.56711960]
[116.35981750 12.10259628]
[110.67012024 0.52718288]
[114.27627563 -11.43857861]
[124.72284698 -17.53740120]
[128.90985107 -31.94118309]
[133.09686279 -46.34496689]
[137.28387451 -60.74874878]
[141.47088623 -75.15252686]
[136.66732788 -92.92912292]
[149.79943848 -104.57019043]
[153.77154541 -119.03471375]
[157.74363708 -133.49923706]
[161.71572876 -147.96376038]
[148.02098083 -154.16055298]
[135.46429443 -162.42349243]
[124.35489655 -172.54908752]
[114.96635437 -184.28799438]
[107.52988434 -197.35112000]
[102.22860718 -211.41677856]
[99.19306946 -226.13861084]
[98.49803925 -241.15403748]
[100.16061401 -256.09332275]
[104.13985443 -270.58856201]
[110.33778381 -284.28280640]
[118.60175323 -296.83883667]
[128.72827148 -307.94738770]
[140.46794128 -317.33496094]
[153.53169250 -324.77035522]
[167.59779358 -330.07046509]
[182.31985474 -333.10479736]
[197.33535767 -333.79858398]
[212.27450562 -332.13476562]
[226.76942444 -328.15432739]
[240.46315002 -321.95529175]
[253.01847839 -313.69027710]
[264.12622070 -303.56283569]
[273.51281738 -291.82238770]
[280.94711304 -278.75802612]
[286.24609375 -264.69149780]
[289.27917480 -249.96917725]
[289.97174072 -234.95361328]
[288.30670166 -220.01460266]
[284.32507324 -205.52001953]
[278.12487793 -191.82679749]
[269.85882568 -179.27215576]
[259.73049927 -168.16526794]
[247.98925781 -158.77963257]
[234.92430115 -151.34638977]
[220.85731506 -146.04859924]
[206.13475037 -143.01670837]
[191.11914062 -142.32539368]
[176.18025208 -143.99166870]
[172.20816040 -129.52714539]
[168.23606873 -115.06261444]
[164.26396179 -100.59809113]
[169.97261047 -89.93328857]
[166.78176880 -77.85015106]
[155.87467957 -70.96551514]
[151.68766785 -56.56173706]
[147.50065613 -42.15795517]
[143.31364441 -27.75417137]
[139.12663269 -13.35038948]
[144.22241211 3.44246387]
[130.82434082 16.07469177]
[126.85224152 30.53921700]
[130.94306946 44.86103058]
[119.82760620 56.11967468]
[115.85550690 70.58419800]
[111.88341522 85.04872131]
[118.95877838 97.69329834]
[115.12186432 111.66557312]
[102.58110809 118.92337799]
[98.60901642 133.38789368]
[94.63691711 147.85241699]
[98.44363403 163.20883179]
[87.61228180 173.43287659]
[83.64018250 187.89739990]
[79.66809082 202.36192322]
[89.63613892 191.15309143]
[101.63150787 182.14691162]
[115.17640686 175.70210266]
[129.73136902 172.07534790]
[144.71664429 171.41111755]
[159.53540039 173.73583984]
[173.59741211 178.95693970]
[186.34259033 186.86647034]
[197.26329041 197.14938354]
[205.92456055 209.39611816]
[211.98139954 223.11888123]
[215.19259644 237.77113342]
[215.43023682 252.76924133]
[212.68486023 267.51586914]
[207.06581116 281.42364502]
[198.79687500 293.93862915]
[188.20744324 304.56237793]
[175.71925354 312.87170410]
[161.82971191 318.53567505]
[147.09204102 321.32873535]
[132.09323120 321.13955688]
[117.43067932 317.97576904]
[103.68840027 311.96328735]
[91.41372681 303.34167480]
[81.09556580 292.45425415]
[73.14488220 279.73474121]
[67.87834930 265.68966675]
[65.50572968 250.87850952]
[66.12152863 235.89115906]
[69.69981384 221.32849121]
[60.03900146 232.80319214]
[50.37819290 244.27789307]
[40.71738052 255.75259399]
[31.05657005 267.22729492]
[21.39575958 278.70199585]
[11.73494911 290.17669678]
[26.67516136 291.51461792]
[35.07119370 303.94470215]
[30.73380470 318.30392456]
[16.86035538 324.00720215]
[3.67783761 316.85028076]
[0.90349030 302.11062622]
[-9.58401108 312.83499146]
[-20.07151222 323.55938721]
[-30.55901337 334.28375244]
[-41.04651260 345.00811768]
[-51.53401566 355.73251343]
[-62.02151489 366.45687866]
[-52.46290970 378.03555298]
[-44.18920898 390.56463623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 208]
[56 207]
[57 206]
[58 205]
[59 204]
[60 203]
[61 202]
[62 196]
[63 195]
[64 194]
[65 193]
[66 192]
[67 191]
[68 190]
[69 160]
[70 159]
[71 158]
[73 156]
[74 155]
[75 154]
[78 151]
[79 150]
[80 149]
[82 147]
[83 146]
[86 144]
[87 143]
[88 142]
[89 141]
[90 140]
[92 137]
[93 136]
[94 135]
[95 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
