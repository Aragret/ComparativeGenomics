%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCUACUACCUGGGCCUCGUGUAUUUAUCAUACCGAAACUUCUUCCGCACCCAUGUCUACACGUCCUUACGAUCCACACCAACCAACUACGGCUAACAxxxxxxxxxxUUGGGGGAGGGGUACGAAUGUUCGUUCAUGUCGUUAGUUGGGAGUUGAUAGUGUGUAGUUGACGUUGAGGUUUCGGUGGGGAGUGGGUGAUCCUAUGGUU\
) } def
/len { sequence length } bind def

/coor [
[42.46141815 630.51452637]
[55.32359695 622.36071777]
[53.09848022 607.52667236]
[50.87336349 592.69262695]
[48.64824677 577.85858154]
[46.42313004 563.02453613]
[44.19800949 548.19049072]
[41.97289276 533.35644531]
[39.74777603 518.52239990]
[30.20810127 507.08370972]
[35.81266403 492.28848267]
[33.58754730 477.45443726]
[31.36243057 462.62039185]
[26.58740425 476.84005737]
[18.04694939 489.17135620]
[6.41460562 498.64175415]
[-7.39225435 504.50439453]
[-22.28476334 506.29693604]
[-37.08843613 503.87799072]
[-50.63579178 497.43832397]
[-61.85843277 487.48583984]
[-69.87129211 474.80535889]
[-74.04244232 460.39697266]
[-74.04293060 445.39697266]
[-69.87271118 430.98831177]
[-61.86067963 418.30734253]
[-50.63868713 408.35409546]
[-37.09174728 401.91357422]
[-22.28823280 399.49368286]
[-7.39560699 401.28524780]
[6.41163397 407.14700317]
[18.04459381 416.61663818]
[26.58584785 428.94735718]
[31.36243057 443.17013550]
[33.58754730 428.33609009]
[35.81266403 413.50204468]
[38.03778458 398.66802979]
[40.26290131 383.83398438]
[42.48801804 368.99993896]
[44.71313477 354.16589355]
[46.93825150 339.33184814]
[49.16336823 324.49780273]
[51.38848495 309.66375732]
[53.61360168 294.82971191]
[44.58029175 285.64120483]
[42.45691681 272.73486328]
[48.23977280 260.78625488]
[60.01937103 254.25514221]
[62.46509933 239.45587158]
[64.80058289 224.63879395]
[67.02570343 209.80474854]
[65.23521423 206.76724243]
[64.82701874 202.71157837]
[66.26362610 198.29689026]
[69.69568634 194.36393738]
[68.04261780 191.24951172]
[67.81592560 187.17965698]
[69.44822693 182.83352661]
[73.05247498 179.05775452]
[76.59214783 164.48138428]
[80.13182068 149.90499878]
[83.67149353 135.32862854]
[87.21116638 120.75225830]
[90.75083923 106.17588043]
[77.41078186 113.03466034]
[63.08652115 108.58319855]
[55.98364258 95.37149048]
[60.17099762 80.96781158]
[73.24987793 73.62323761]
[87.72811127 77.54507446]
[95.31176758 90.48577118]
[100.13777161 76.28331757]
[97.25183105 60.72755051]
[108.67253113 51.16632843]
[113.49852753 36.96387100]
[118.32452393 22.76141548]
[115.43858337 7.20564747]
[126.85928345 -2.35557413]
[131.68527222 -16.55802917]
[127.68027496 -34.53138351]
[141.31909180 -45.57445908]
[145.93310547 -59.84719086]
[150.54711914 -74.11992645]
[155.16111755 -88.39266205]
[159.77513123 -102.66539001]
[156.65791321 -118.17646790]
[167.93498230 -127.90666962]
[172.54899597 -142.17939758]
[177.16300964 -156.45213318]
[174.04579163 -171.96321106]
[185.32286072 -181.69340515]
[189.93687439 -195.96614075]
[194.55088806 -210.23887634]
[198.84500122 -224.61108398]
[202.81710815 -239.07560730]
[199.01039124 -254.43202209]
[209.84173584 -264.65606689]
[213.81384277 -279.12060547]
[217.78593445 -293.58511353]
[221.75802612 -308.04965210]
[208.38284302 -314.96325684]
[196.73762512 -324.50695801]
[187.33142090 -336.26354980]
[180.57545471 -349.71905518]
[176.76506042 -364.28527832]
[176.06681824 -379.32540894]
[178.51124573 -394.18200684]
[183.99148560 -408.20559692]
[192.26795959 -420.78311157]
[202.97885132 -431.36468506]
[215.65596008 -439.48782349]
[229.74505615 -444.79733276]
[244.63023376 -447.06112671]
[259.66079712 -446.18026733]
[274.17965698 -442.19326782]
[287.55212402 -435.27438354]
[299.19360352 -425.72610474]
[308.59518433 -413.96582031]
[315.34585571 -400.50765991]
[319.15051270 -385.93994141]
[319.84283447 -370.89950562]
[317.39257812 -356.04388428]
[311.90679932 -342.02246094]
[303.62539673 -329.44821167]
[292.91030884 -318.87081909]
[280.23004150 -310.75271606]
[266.13885498 -305.44873047]
[251.25276184 -303.19076538]
[236.22254944 -304.07754517]
[232.25045776 -289.61303711]
[228.27836609 -275.14849854]
[224.30625916 -260.68395996]
[228.39709473 -246.36215210]
[217.28163147 -235.10351562]
[213.30952454 -220.63899231]
[214.72637939 -217.41023254]
[214.64974976 -213.33480835]
[212.69871521 -209.12210083]
[208.82362366 -205.62486267]
[204.20960999 -191.35212708]
[199.59559631 -177.07940674]
[203.04284668 -162.58920288]
[191.43574524 -151.83811951]
[186.82173157 -137.56539917]
[182.20771790 -123.29265594]
[185.65496826 -108.80245972]
[174.04786682 -98.05138397]
[169.43385315 -83.77864838]
[164.81983948 -69.50591278]
[160.20584106 -55.23318100]
[155.59182739 -40.96044922]
[160.81855774 -30.05138016]
[157.09136963 -18.12276840]
[145.88774109 -11.73203182]
[141.06173706 2.47042370]
[144.29286194 17.01033783]
[132.52697754 27.58741379]
[127.70098114 41.78986740]
[122.87498474 55.99232483]
[126.10610962 70.53224182]
[114.34022522 81.10931396]
[109.51422882 95.31176758]
[105.32721710 109.71555328]
[101.78754425 124.29193115]
[98.24787140 138.86830139]
[94.70819855 153.44467163]
[91.16852570 168.02105713]
[87.62885284 182.59742737]
[84.41558075 197.24922180]
[81.85974884 212.02987671]
[79.63462830 226.86390686]
[81.45640564 235.81483459]
[77.26437378 241.90159607]
[74.81864166 256.70086670]
[85.26466370 270.73297119]
[82.38691711 287.64547729]
[68.44764709 297.05484009]
[66.22252655 311.88885498]
[63.99741364 326.72290039]
[61.77229691 341.55694580]
[59.54717636 356.39099121]
[57.32205963 371.22503662]
[55.09694290 386.05908203]
[52.87182617 400.89312744]
[50.64670944 415.72717285]
[48.42159271 430.56121826]
[46.19647598 445.39526367]
[46.19647598 460.39526367]
[48.42159271 475.22930908]
[50.64670944 490.06335449]
[60.34553909 502.56307983]
[54.58182144 516.29730225]
[56.80693817 531.13134766]
[59.03205490 545.96539307]
[61.25717163 560.79943848]
[63.48228836 575.63348389]
[65.70740509 590.46752930]
[67.93252563 605.30157471]
[70.15763855 620.13562012]
[84.84607697 624.15679932]
[96.62495422 633.80963135]
[103.45351410 647.42181396]
[104.14866638 662.63482666]
[98.58998108 676.81304932]
[87.74052429 687.49987793]
[73.48002625 692.84387207]
[58.27921677 691.91912842]
[44.77171707 684.88580322]
[35.29779053 672.96252441]
[31.49884796 658.21502686]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 199]
[3 198]
[4 197]
[5 196]
[6 195]
[7 194]
[8 193]
[9 192]
[11 190]
[12 189]
[13 188]
[34 187]
[35 186]
[36 185]
[37 184]
[38 183]
[39 182]
[40 181]
[41 180]
[42 179]
[43 178]
[44 177]
[48 174]
[49 173]
[50 171]
[51 170]
[55 169]
[59 168]
[60 167]
[61 166]
[62 165]
[63 164]
[64 163]
[71 162]
[72 161]
[74 159]
[75 158]
[76 157]
[78 155]
[79 154]
[81 151]
[82 150]
[83 149]
[84 148]
[85 147]
[87 145]
[88 144]
[89 143]
[91 141]
[92 140]
[93 139]
[94 135]
[95 134]
[97 132]
[98 131]
[99 130]
[100 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
