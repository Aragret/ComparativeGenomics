%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAUUCGUAUCACAAUCUCAAACCUAAUCACCCGAUAAAAGACGAUCCCCCACCUUCGCCUACUCAUUCUUCUAAGGACGAUGUUGAUAUCACGAACxxxxxxxxxxUGUUUCGUAUUAUAAAGCGGGUGAUUCGGUUAGUGAAAUAACUGAGGAUCGGCGUCUGGAGGAGUAAGAUUGGACUUAGCCUCCUGUUGGUCAUUCGAUG\
) } def
/len { sequence length } bind def

/coor [
[233.39089966 294.82778931]
[223.90199280 283.21051025]
[214.41310120 271.59326172]
[200.36949158 266.63073730]
[197.63201904 251.04817200]
[188.14312744 239.43090820]
[178.65422058 227.81364441]
[179.94029236 242.75840759]
[174.21908569 256.62448120]
[162.76873779 266.31411743]
[148.14726257 269.66265869]
[133.62117004 265.92202759]
[122.43559265 255.92788696]
[117.08943939 241.91294861]
[118.77704620 227.00817871]
[127.12139893 214.54335022]
[140.25834656 207.30314636]
[155.25306702 206.90504456]
[168.75570679 213.43797302]
[161.28796387 200.42901611]
[153.82022095 187.42007446]
[146.35247803 174.41111755]
[138.88473511 161.40216064]
[130.37791443 149.04765320]
[120.88901520 137.43038940]
[111.40011597 125.81313324]
[101.91121674 114.19586945]
[88.90633392 109.06123352]
[86.47151947 95.29302979]
[76.98262024 83.67576599]
[67.49372101 72.05850220]
[58.00482178 60.44124222]
[48.51592255 48.82397842]
[39.02702713 37.20671463]
[29.53812790 25.58945084]
[20.04922867 13.97218800]
[10.56033039 2.35492468]
[-4.16198206 -3.43852735]
[-6.22075129 -18.19016266]
[-25.12898445 -19.37041855]
[-36.96702957 -33.75004196]
[-34.57666016 -51.89947510]
[-44.40724182 -63.22906494]
[-59.29552078 -68.58161163]
[-61.79258728 -83.26541138]
[-71.62316895 -94.59500122]
[-81.45375061 -105.92459869]
[-91.28433228 -117.25418854]
[-103.48114777 -108.50420380]
[-116.43329620 -100.91694641]
[-130.03025818 -94.55713654]
[-144.15603638 -89.47903442]
[-158.69010925 -85.72597504]
[-173.50846863 -83.32997894]
[-188.48469543 -82.31148529]
[-203.49101257 -82.67917633]
[-218.39938354 -84.42992401]
[-233.08261108 -87.54878998]
[-247.41543579 -92.00915527]
[-261.27554321 -97.77297974]
[-274.54473877 -104.79108429]
[-287.10974121 -113.00358582]
[-298.86337280 -122.34041595]
[-309.70538330 -132.72190857]
[-319.54324341 -144.05950928]
[-328.29302979 -156.25648499]
[-335.88006592 -169.20875549]
[-342.23965454 -182.80583191]
[-347.31750488 -196.93168640]
[-351.07034302 -211.46582031]
[-353.46609497 -226.28422546]
[-354.48434448 -241.26046753]
[-354.11639404 -256.26678467]
[-352.36538696 -271.17510986]
[-349.24627686 -285.85830688]
[-344.78567505 -300.19104004]
[-339.02163696 -314.05105591]
[-332.00329590 -327.32012939]
[-323.79058838 -339.88497925]
[-314.45355225 -351.63848877]
[-304.07186890 -362.48031616]
[-292.73413086 -372.31799316]
[-280.53701782 -381.06756592]
[-267.58459473 -388.65438843]
[-253.98742676 -395.01376343]
[-239.86148071 -400.09136963]
[-225.32728577 -403.84396362]
[-210.50885010 -406.23947144]
[-195.53259277 -407.25744629]
[-180.52629089 -406.88925171]
[-165.61798096 -405.13803101]
[-150.93484497 -402.01867676]
[-136.60217285 -397.55783081]
[-122.74224854 -391.79351807]
[-109.47330475 -384.77499390]
[-96.90856934 -376.56207275]
[-85.15523529 -367.22485352]
[-74.31357574 -356.84298706]
[-64.47609711 -345.50506592]
[-55.72672272 -333.30780029]
[-48.14010620 -320.35528564]
[-41.78097534 -306.75799561]
[-36.70358276 -292.63195801]
[-32.95125198 -278.09768677]
[-30.55599403 -263.27920532]
[-29.53824425 -248.30294800]
[-29.90668869 -233.29664612]
[-31.65818024 -218.38836670]
[-34.77777863 -203.70529175]
[-39.23886871 -189.37269592]
[-45.00338364 -175.51286316]
[-52.02214813 -162.24403381]
[-60.23527527 -149.67944336]
[-69.57269287 -137.92625427]
[-79.95473480 -127.08477020]
[-70.12415314 -115.75518036]
[-60.29357529 -104.42558289]
[-50.46299362 -93.09599304]
[-36.27786255 -88.55381012]
[-33.07764816 -73.05964661]
[-23.24706650 -61.73005295]
[-11.96233559 -63.40965652]
[-1.15626454 -59.39163208]
[6.44623852 -50.56576920]
[8.86884308 -39.04917526]
[5.39651203 -27.67905998]
[19.44011497 -22.71655273]
[22.17759323 -7.13397360]
[31.66649246 4.48328972]
[41.15539169 16.10055351]
[50.64428711 27.71781540]
[60.13318634 39.33507919]
[69.62208557 50.95234299]
[79.11098480 62.56960678]
[88.59988403 74.18686676]
[98.08878326 85.80413055]
[111.09366608 90.93876648]
[113.52848053 104.70697021]
[123.01737976 116.32423401]
[132.50628662 127.94149780]
[141.99517822 139.55876160]
[140.70910645 124.61399078]
[146.43031311 110.74792480]
[157.88066101 101.05827332]
[172.50213623 97.70973206]
[187.02822876 101.45036316]
[198.21380615 111.44451141]
[203.55996704 125.45945740]
[201.87236023 140.36422729]
[193.52799988 152.82904053]
[180.39105225 160.06924438]
[165.39633179 160.46736145]
[151.89369202 153.93441772]
[159.36143494 166.94337463]
[166.82917786 179.95233154]
[174.29692078 192.96128845]
[181.76466370 205.97023010]
[190.27148438 218.32473755]
[199.76039124 229.94200134]
[209.24928284 241.55926514]
[223.97158813 247.35272217]
[226.03036499 262.10437012]
[235.51925659 273.72161865]
[245.00816345 285.33889771]
[257.76055908 277.40130615]
[271.42330933 271.15969849]
[285.77203369 266.71655273]
[300.57119751 264.14480591]
[315.57769775 263.48669434]
[330.54513550 264.75302124]
[345.22778320 267.92303467]
[359.38446045 272.94461060]
[372.78274536 279.73535156]
[385.20263672 288.18368530]
[396.44018555 298.15097046]
[406.31082153 309.47344971]
[414.65249634 321.96524048]
[421.32821655 335.42120361]
[426.22836304 349.62039185]
[429.27249146 364.32962036]
[430.41058350 379.30737305]
[429.62396240 394.30770874]
[426.92556763 409.08425903]
[422.35968018 423.39443970]
[416.00128174 437.00320435]
[407.95477295 449.68716431]
[398.35232544 461.23794556]
[387.35156250 471.46594238]
[375.13317871 480.20318604]
[361.89776611 487.30618286]
[347.86270142 492.65829468]
[333.25845337 496.17169189]
[318.32479858 497.78860474]
[303.30697632 497.48251343]
[288.45162964 495.25845337]
[274.00262451 491.15292358]
[260.19729614 485.23336792]
[247.26231384 477.59698486]
[235.41007996 468.36917114]
[224.83522034 457.70141602]
[215.71138000 445.76895142]
[208.18838501 432.76770020]
[202.38977051 418.91113281]
[198.41075134 404.42678833]
[196.31666565 389.55255127]
[196.14190674 374.53265381]
[197.88934326 359.61370850]
[201.53027344 345.04071045]
[207.00491333 331.05297852]
[214.22337341 317.88021851]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 164]
[2 163]
[3 162]
[5 160]
[6 159]
[7 158]
[19 157]
[20 156]
[21 155]
[22 154]
[23 153]
[24 141]
[25 140]
[26 139]
[27 138]
[29 136]
[30 135]
[31 134]
[32 133]
[33 132]
[34 131]
[35 130]
[36 129]
[37 128]
[39 126]
[42 121]
[43 120]
[45 118]
[46 117]
[47 116]
[48 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
