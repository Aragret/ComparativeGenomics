%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGACCAACGGAGUAGCCCACUACUAUCGGUUCCACCCCUAUUCACACCAAAGCUUCUUCUAUAUUUUAUACUAAUCAAGACACCGACACUUACAAUxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[52.25963593 520.45532227]
[40.50780106 510.88085938]
[32.74200821 497.86285400]
[29.90001488 482.97329712]
[32.32500839 468.01019287]
[39.72415924 454.78033447]
[51.20397949 444.88137817]
[65.37822723 439.50863647]
[65.15489960 424.51028442]
[64.93157196 409.51196289]
[64.70824432 394.51361084]
[64.48491669 379.51528931]
[62.56969833 377.46832275]
[61.34991455 374.53936768]
[61.16555405 370.98953247]
[62.25591660 367.19799805]
[64.72154236 363.62384033]
[62.62476349 360.78906250]
[61.79685211 356.79788208]
[62.76638412 352.25769043]
[65.77066040 347.98904419]
[67.10889435 333.04885864]
[68.44712830 318.10867310]
[69.78536224 303.16848755]
[71.12359619 288.22830200]
[72.46183014 273.28811646]
[73.80006409 258.34793091]
[75.13829803 243.40774536]
[76.47653198 228.46755981]
[77.81476593 213.52737427]
[79.15299988 198.58718872]
[77.18489075 195.66163635]
[76.53601837 191.63745117]
[77.70731354 187.14508057]
[80.89919281 183.01483154]
[82.90321350 168.14930725]
[84.90722656 153.28378296]
[86.91123962 138.41824341]
[88.91525269 123.55271912]
[90.91926575 108.68719482]
[82.42258453 121.04868317]
[70.94137573 130.70175171]
[57.30447769 136.94955444]
[42.49634552 139.34103394]
[27.58598900 137.70355225]
[13.64980507 132.15533447]
[1.69385707 123.09689331]
[-7.41874552 111.18217468]
[-13.03015518 97.27131653]
[-14.73528004 82.36854553]
[-12.41102600 67.54971313]
[-6.22518158 53.88459778]
[3.37569046 42.35970306]
[15.69849586 33.80701447]
[29.85363960 28.84395981]
[44.81925201 27.82882881]
[59.51494598 30.83490181]
[72.87983704 37.64516830]
[83.94909668 47.76799011]
[91.92362213 60.47259521]
[96.22772980 74.84181976]
[96.55056763 89.83950043]
[103.03006744 76.31114960]
[109.50955963 62.78280640]
[115.98905945 49.25445938]
[103.66387177 57.80371475]
[89.09989929 61.39409256]
[74.21329498 59.55321121]
[60.96263123 52.52328110]
[51.09127045 41.22919846]
[45.89795685 27.15690422]
[46.06595993 12.15784550]
[51.57318115 -1.79459298]
[61.69504547 -12.86472797]
[75.09984589 -19.59609222]
[90.02395630 -21.10305786]
[104.50385284 -17.18736076]
[116.63444519 -8.36417580]
[124.81976318 4.20565462]
[127.98287201 18.86835289]
[125.70684052 33.69703674]
[135.02171326 21.93978691]
[134.31466675 9.06101036]
[142.31509399 -0.53986537]
[154.31510925 -2.06511092]
[163.80400085 -13.68237400]
[173.29289246 -25.29963684]
[176.29791260 -33.92562866]
[183.01058960 -37.01785278]
[192.67138672 -48.49254990]
[202.33219910 -59.96725082]
[211.99301147 -71.44194794]
[221.65382385 -82.91664886]
[231.31463623 -94.39134979]
[240.97544861 -105.86605072]
[250.46434021 -117.48331451]
[259.77923584 -129.24057007]
[269.09411621 -140.99781799]
[278.40899658 -152.75506592]
[267.69766235 -163.27645874]
[258.16540527 -174.87680054]
[249.92021179 -187.42466736]
[243.05549622 -200.77786255]
[237.64906311 -214.78509521]
[233.76214600 -229.28764343]
[231.43881226 -244.12120056]
[230.70538330 -259.11767578]
[231.57014465 -274.10714722]
[234.02333069 -288.91976929]
[238.03712463 -303.38772583]
[243.56605530 -317.34704590]
[250.54747009 -330.63961792]
[258.90228271 -343.11474609]
[268.53579712 -354.63116455]
[279.33886719 -365.05831909]
[291.18908691 -374.27810669]
[303.95220947 -382.18600464]
[317.48358154 -388.69247437]
[331.62988281 -393.72375488]
[346.23086548 -397.22283936]
[361.12106323 -399.15008545]
[376.13174438 -399.48364258]
[391.09286499 -398.21975708]
[405.83486938 -395.37274170]
[420.19070435 -390.97485352]
[433.99777222 -385.07592773]
[447.09957886 -377.74279785]
[459.34765625 -369.05853271]
[470.60327148 -359.12158203]
[480.73886108 -348.04449463]
[489.63961792 -335.95278931]
[497.20462036 -322.98348999]
[503.34820557 -309.28353882]
[508.00073242 -295.00817871]
[511.10952759 -280.31915283]
[512.63928223 -265.38290405]
[512.57275391 -250.36865234]
[510.91067505 -235.44653320]
[507.67187500 -220.78562927]
[502.89300537 -206.55206299]
[496.62826538 -192.90708923]
[488.94860840 -180.00534058]
[479.94107056 -167.99301147]
[469.70770264 -157.00617981]
[458.36447144 -147.16934204]
[446.03988647 -138.59397888]
[432.87362671 -131.37722778]
[419.01483154 -125.60088348]
[404.62057495 -121.33039093]
[389.85391235 -118.61412811]
[374.88220215 -117.48287964]
[359.87506104 -117.94945526]
[345.00253296 -120.00858307]
[330.43313599 -123.63692474]
[316.33197021 -128.79336548]
[302.85876465 -135.41947937]
[290.16622925 -143.44018555]
[280.85134888 -131.68293762]
[271.53646851 -119.92568207]
[262.22158813 -108.16843414]
[261.87185669 -103.40537262]
[258.52627563 -98.81145477]
[252.45014954 -96.20523834]
[242.78933716 -84.73054504]
[233.12852478 -73.25584412]
[223.46771240 -61.78113937]
[213.80690002 -50.30644226]
[204.14608765 -38.83174133]
[194.48529053 -27.35704041]
[184.91015625 -15.81073952]
[175.42126465 -4.19347620]
[165.93237305 7.42378759]
[164.05146790 24.87168503]
[146.77897644 31.25466919]
[137.46409607 43.01192093]
[129.51741028 55.73395538]
[123.03791046 69.26229858]
[116.55841064 82.79064941]
[110.07891846 96.31899261]
[105.78479004 110.69120789]
[103.78077698 125.55673218]
[101.77676392 140.42225647]
[99.77275085 155.28779602]
[97.76873779 170.15332031]
[95.76472473 185.01884460]
[94.09318542 199.92541504]
[92.75495148 214.86560059]
[91.41671753 229.80578613]
[90.07848358 244.74597168]
[88.74024963 259.68615723]
[87.40201569 274.62634277]
[86.06378174 289.56652832]
[84.72554779 304.50671387]
[83.38731384 319.44689941]
[82.04907990 334.38708496]
[80.71084595 349.32727051]
[79.70658112 364.29360962]
[79.48325348 379.29196167]
[79.70658112 394.29028320]
[79.92990875 409.28863525]
[80.15323639 424.28695679]
[80.37656403 439.28530884]
[94.70449829 444.23364258]
[106.47396088 453.78643799]
[114.26372528 466.79010010]
[117.13315582 481.67437744]
[114.73574066 496.64196777]
[107.36098480 509.88540649]
[95.89942932 519.80548096]
[81.73509979 525.20434570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 202]
[9 201]
[10 200]
[11 199]
[12 198]
[17 197]
[21 196]
[22 195]
[23 194]
[24 193]
[25 192]
[26 191]
[27 190]
[28 189]
[29 188]
[30 187]
[31 186]
[35 185]
[36 184]
[37 183]
[38 182]
[39 181]
[40 180]
[62 179]
[63 178]
[64 177]
[65 176]
[81 175]
[82 174]
[85 172]
[86 171]
[87 170]
[89 169]
[90 168]
[91 167]
[92 166]
[93 165]
[94 164]
[95 163]
[96 160]
[97 159]
[98 158]
[99 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
