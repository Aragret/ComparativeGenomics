%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUAAAAUAAAAUUCAAACAACCAAUCCAUCAACUCCAGAUCCCGACAAUCUUCAGGAUCCUUUCACUGUCGCUCCCGACACUCAAAAUCCAUCUCCCCCxxxxxxxxxxGUUAAGAGGCUAGGCAGGGAUUGUUUGAUCCUCCGCAGGAACGGGAUAAUGAUAGGUAGGAGUAGGAUCGUUAUUAGGGGUAGGAGGUAUAUAGGUUUGU\
) } def
/len { sequence length } bind def

/coor [
[121.28075409 465.86538696]
[121.00790405 481.02127075]
[115.56497955 495.16873169]
[105.60926056 506.59936523]
[92.34292603 513.93286133]
[77.36796570 516.28369141]
[62.49267578 513.36798096]
[49.51331711 505.53775024]
[39.99721146 493.73861694]
[35.09347153 479.39535522]
[35.39425659 464.23999023]
[40.86323547 450.10260010]
[50.84000778 438.69033813]
[64.11982727 431.38128662]
[79.09909821 429.05807495]
[81.98436737 414.33816528]
[84.86964417 399.61828613]
[87.75491333 384.89837646]
[90.64019012 370.17849731]
[93.08591461 355.37924194]
[94.97920990 340.49920654]
[96.76167297 325.60546875]
[98.54413605 310.71176147]
[96.34892273 306.47027588]
[96.79486084 300.80477905]
[100.60782623 295.40356445]
[102.83294678 280.56954956]
[105.05805969 265.73550415]
[105.72784424 250.75045776]
[104.83502960 235.77705383]
[103.94221497 220.80363464]
[93.50337219 206.69699097]
[101.88165283 190.29925537]
[100.76600647 175.34080505]
[99.65036011 160.38235474]
[98.53471375 145.42388916]
[97.41905975 130.46543884]
[95.41504669 115.59991455]
[84.06761932 103.24628448]
[89.67687988 87.43766022]
[86.57276917 72.76235962]
[83.46865845 58.08705902]
[80.36455536 43.41175461]
[77.26044464 28.73645401]
[74.15633392 14.06115150]
[59.10857010 12.85914040]
[45.02342987 7.47108269]
[33.03935623 -1.65837634]
[24.12238693 -13.78256416]
[18.98828697 -27.91384125]
[18.04510498 -42.90405655]
[21.36074829 -57.53782654]
[28.65817070 -70.63108063]
[39.33850479 -81.12688446]
[52.53020096 -88.18070984]
[49.42609024 -102.85601044]
[46.32198334 -117.53131104]
[43.21787262 -132.20661926]
[40.11376190 -146.88191223]
[37.00965118 -161.55722046]
[24.03998566 -166.22396851]
[15.14046860 -176.60746765]
[12.55444622 -189.92596436]
[16.85240364 -202.68023682]
[26.81035233 -211.57301331]
[23.92508125 -226.29290771]
[19.87474060 -231.51844788]
[19.17626762 -237.15840149]
[21.17990494 -241.49366760]
[18.73417854 -256.29293823]
[16.28845024 -271.09219360]
[6.40459299 -283.44613647]
[11.96319103 -297.26464844]
[9.51746368 -312.06393433]
[-0.36639425 -324.41787720]
[5.19220352 -338.23638916]
[2.74647593 -353.03567505]
[-11.53287697 -358.51721191]
[-21.08819580 -370.33215332]
[-23.43114281 -385.24444580]
[-18.03141403 -399.23370361]
[-6.43260098 -408.57891846]
[-8.87832832 -423.37817383]
[-11.32405567 -438.17745972]
[-26.36531258 -438.57376099]
[-41.05969238 -441.80975342]
[-54.87600327 -447.76846313]
[-67.31479645 -456.23446655]
[-77.92641449 -466.90170288]
[-86.32724762 -479.38458252]
[-92.21362305 -493.23187256]
[-95.37274170 -507.94296265]
[-95.69041443 -522.98608398]
[-93.15515137 -537.81744385]
[-87.85859680 -551.90087891]
[-79.99221802 -564.72729492]
[-69.84039307 -575.83300781]
[-57.77008438 -584.81652832]
[-44.21764374 -591.35321045]
[-29.67297173 -595.20660400]
[-14.66185379 -596.23754883]
[0.27306810 -594.40875244]
[14.59190655 -589.78625488]
[27.77704430 -582.53723145]
[39.35184479 -572.92364502]
[48.89788818 -561.29309082]
[56.07009506 -548.06604004]
[60.60918808 -533.72052002]
[62.35108185 -518.77520752]
[61.23281479 -503.77035522]
[57.29480362 -489.24835205]
[50.67941284 -475.73416138]
[41.62577820 -463.71633911]
[30.46118355 -453.62930298]
[17.58922577 -445.83770752]
[3.47521496 -440.62316895]
[5.92094231 -425.82391357]
[8.36666965 -411.02462769]
[22.35544586 -405.90802002]
[31.96887589 -394.39984131]
[34.54828644 -379.52661133]
[29.30227852 -365.26562500]
[17.54574776 -355.48138428]
[19.99147415 -340.68212891]
[29.70039749 -329.38671875]
[24.31673431 -314.50967407]
[26.76246071 -299.71038818]
[36.47138596 -288.41497803]
[31.08772087 -273.53793335]
[33.53344727 -258.73867798]
[35.97917557 -243.93939209]
[38.64496994 -229.17817688]
[41.53024292 -214.45828247]
[56.63269043 -208.02450562]
[65.00826263 -193.71325684]
[63.18515778 -177.06460571]
[51.68495560 -164.66133118]
[54.78906250 -149.98602295]
[57.89317322 -135.31072998]
[60.99728394 -120.63542175]
[64.10139465 -105.96012115]
[67.20550537 -91.28482056]
[82.12359619 -90.17675781]
[96.13915253 -84.90461731]
[108.11331177 -75.88767242]
[117.07051849 -63.84984207]
[122.27798462 -49.76160812]
[123.30568695 -34.76174927]
[120.06179810 -20.06530571]
[112.80086517 -6.86515522]
[102.10385132 3.76480722]
[88.83163452 10.95704174]
[91.93574524 25.63234329]
[95.03985596 40.30764771]
[98.14396667 54.98294830]
[101.24807739 69.65824890]
[104.35218811 84.33355713]
[113.71292877 91.26303101]
[116.03817749 102.67506409]
[110.13494110 112.71463776]
[117.65375519 99.73514557]
[131.31860352 93.54871368]
[146.03283691 96.46273804]
[156.30839539 107.39035034]
[158.31275940 122.25583649]
[151.29835510 135.51472473]
[137.88137817 142.22177124]
[123.06602478 139.87544250]
[112.37751770 129.34979248]
[113.49316406 144.30824280]
[114.60881042 159.26669312]
[115.72446442 174.22515869]
[116.84011078 189.18360901]
[126.08639526 198.17633057]
[126.70766449 210.65823364]
[118.91561890 219.91082764]
[119.80843353 234.88423157]
[120.70125580 249.85763550]
[127.53801727 236.50628662]
[138.91377258 226.72915649]
[153.14097595 221.97662354]
[168.10911560 222.95368958]
[181.59776306 229.51544189]
[191.60595703 240.68844604]
[196.64901733 254.81529236]
[195.97886658 269.80032349]
[189.69490051 283.42059326]
[178.72932434 293.65560913]
[164.70878601 298.98712158]
[149.71318054 298.62417603]
[135.96701050 292.62060547]
[125.50941467 281.86706543]
[119.89210510 267.96060181]
[117.66698456 282.79464722]
[115.44187164 297.62869263]
[113.43785858 312.49423218]
[111.65538788 327.38793945]
[109.87292480 342.28164673]
[111.96039581 351.17437744]
[107.95144653 357.38323975]
[109.74262238 361.33871460]
[110.14179993 365.26364136]
[109.32949829 368.72421265]
[107.60859680 371.38977051]
[105.36007690 373.06378174]
[102.47480774 387.78366089]
[99.58953094 402.50354004]
[96.70426178 417.22344971]
[93.81899261 431.94332886]
[106.81275940 439.74960327]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 209]
[16 208]
[17 207]
[18 206]
[19 205]
[20 200]
[21 198]
[22 197]
[23 196]
[26 195]
[27 194]
[28 193]
[29 178]
[30 177]
[31 176]
[33 173]
[34 172]
[35 171]
[36 170]
[37 169]
[38 160]
[40 157]
[41 156]
[42 155]
[43 154]
[44 153]
[45 152]
[55 142]
[56 141]
[57 140]
[58 139]
[59 138]
[60 137]
[65 133]
[66 132]
[69 131]
[70 130]
[71 129]
[73 127]
[74 126]
[76 124]
[77 123]
[82 118]
[83 117]
[84 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
