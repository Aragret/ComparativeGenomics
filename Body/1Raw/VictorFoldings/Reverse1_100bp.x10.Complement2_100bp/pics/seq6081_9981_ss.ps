%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxCUCCCAGAAUGAGAAAAUCAUAUUUAUCAUGGCAAUUGAAGGUUAAUUGAUCAAAACUGUUGUAAGUUUUUUCUCAUUAUUUGAAGCGGAAUUAAAAUUA\
) } def
/len { sequence length } bind def

/coor [
[86.24812317 737.58923340]
[72.22617340 732.03619385]
[60.02621841 723.16986084]
[50.41514587 711.54754639]
[43.99712372 697.89984131]
[41.17558670 683.08465576]
[42.12789917 668.03326416]
[46.79420471 653.69189453]
[54.88117218 640.96191406]
[65.88044739 630.64361572]
[79.10060883 623.38568115]
[93.71061707 619.64422607]
[93.71061707 604.64422607]
[93.71061707 589.64422607]
[93.71061707 574.64422607]
[83.02974701 564.32653809]
[82.81606293 549.11444092]
[93.71061707 537.98126221]
[85.97332001 525.25402832]
[93.71061707 511.45385742]
[93.71061707 496.45385742]
[93.71061707 481.45385742]
[93.71061707 466.45385742]
[93.71061707 451.45385742]
[93.71061707 436.45385742]
[79.05624390 433.36434937]
[65.35917664 427.29299927]
[53.21912003 418.50292969]
[43.16814804 407.37640381]
[35.64739990 394.39813232]
[30.98771286 380.13421631]
[29.39508247 365.20733643]
[30.94153976 350.26974487]
[35.56190872 335.97457886]
[43.05654144 322.94747925]
[53.09994888 311.75903320]
[65.25494385 302.89999390]
[78.99164581 296.75949097]
[93.71061707 293.60818481]
[93.71061707 278.60818481]
[93.71061707 263.60818481]
[93.71061707 248.60818481]
[93.71061707 233.60818481]
[93.71061707 218.60818481]
[93.71061707 203.60818481]
[93.71061707 188.60818481]
[93.71061707 173.60818481]
[85.38166046 164.83576965]
[85.25890350 152.33903503]
[93.95353699 142.81190491]
[94.17686462 127.81356049]
[93.61865234 112.82395172]
[85.73317719 101.27791595]
[91.44116211 88.51428223]
[90.10292816 73.57409668]
[76.17395782 70.21473694]
[63.98165894 62.72906113]
[54.71114731 51.86022186]
[49.25870132 38.67945862]
[48.14516830 24.48050880]
[51.46620178 10.65262699]
[58.88422775 -1.45534015]
[69.66268921 -10.66652584]
[82.73918152 -16.09043121]
[81.62353516 -31.04888535]
[80.50788116 -46.00733948]
[79.39223480 -60.96579361]
[77.94281769 -75.89559937]
[76.16035461 -90.78932190]
[74.04573059 -105.63951874]
[71.59999847 -120.43878937]
[69.15427399 -135.23805237]
[66.70854187 -150.03732300]
[56.69684219 -158.16928101]
[54.96446609 -170.54597473]
[61.89996338 -180.45684814]
[59.67484665 -195.29089355]
[57.44972992 -210.12493896]
[55.22461319 -224.95898438]
[52.66877747 -239.73963928]
[49.78350830 -254.45951843]
[46.89823532 -269.17941284]
[31.85849571 -268.96478271]
[17.02216148 -271.43923950]
[2.86615682 -276.52325439]
[-10.15446186 -284.05340576]
[-21.62113571 -293.78762817]
[-31.16525650 -305.41302490]
[-38.48002243 -318.55584717]
[-43.33029175 -332.79364014]
[-45.56015396 -347.66870117]
[-45.09791946 -362.70288086]
[-41.95845413 -377.41284180]
[-36.24267578 -391.32577515]
[-28.13432503 -403.99441528]
[-17.89404869 -415.01150513]
[-5.85103226 -424.02291870]
[7.60759258 -430.73898315]
[22.04918671 -434.94375610]
[37.00951004 -436.50210571]
[52.00765610 -435.36392212]
[66.56149292 -431.56579590]
[80.20317078 -425.22985840]
[92.49417114 -416.55972290]
[103.03939056 -405.83413696]
[111.49983978 -393.39788818]
[117.60355377 -379.65072632]
[121.15431976 -365.03457642]
[122.03799438 -350.01928711]
[120.22618103 -335.08752441]
[115.77711487 -320.71932983]
[108.83380890 -307.37652588]
[99.61946869 -295.48803711]
[88.43029785 -285.43606567]
[75.62598419 -277.54370117]
[61.61812592 -272.06469727]
[64.50339508 -257.34478760]
[67.38867188 -242.62490845]
[70.09517670 -240.36500549]
[71.84153748 -236.68190002]
[71.97077179 -232.04113770]
[70.05865479 -227.18409729]
[72.28377533 -212.35005188]
[74.50888824 -197.51600647]
[76.73400879 -182.68196106]
[88.38975525 -169.56288147]
[81.50781250 -152.48306274]
[83.95354462 -137.68379211]
[86.39926910 -122.88451385]
[88.84500122 -108.08524323]
[91.48301697 -105.74575806]
[93.11894989 -102.01229095]
[93.10995483 -97.36974335]
[91.05406952 -92.57178497]
[92.83653259 -77.67807007]
[95.36746216 -75.22312164]
[96.83505249 -71.42032623]
[96.61876678 -66.78281403]
[94.35069275 -62.08143997]
[95.46633911 -47.12298584]
[96.58198547 -32.16453552]
[97.69763947 -17.20608139]
[112.90476990 -13.12782764]
[125.81807709 -4.07346678]
[134.86569214 8.87731552]
[138.93864441 24.16920662]
[137.52670288 39.95804214]
[130.78228760 54.33320618]
[119.50421906 65.54883575]
[105.04311371 72.23586273]
[106.38134766 87.17604828]
[114.26682281 98.72208405]
[108.55883789 111.48571777]
[118.10934448 99.91905212]
[132.83703613 97.07384491]
[146.00859070 104.25088501]
[151.60217285 118.16892242]
[147.06045532 132.46482849]
[134.45986938 140.60269165]
[119.56120300 138.86201477]
[109.17520142 128.03689575]
[108.95187378 143.03523254]
[118.29131317 158.90521240]
[108.71061707 173.60818481]
[108.71061707 188.60818481]
[108.71061707 203.60818481]
[108.71061707 218.60818481]
[108.71061707 233.60818481]
[108.71061707 248.60818481]
[108.71061707 263.60818481]
[108.71061707 278.60818481]
[108.71061707 293.60818481]
[123.42958832 296.75949097]
[137.16629028 302.89999390]
[149.32128906 311.75903320]
[159.36470032 322.94747925]
[166.85932922 335.97457886]
[171.47969055 350.26974487]
[173.02615356 365.20733643]
[171.43351746 380.13421631]
[166.77383423 394.39813232]
[159.25308228 407.37640381]
[149.20211792 418.50292969]
[137.06205750 427.29299927]
[123.36499786 433.36434937]
[108.71061707 436.45385742]
[108.71061707 451.45385742]
[108.71061707 466.45385742]
[108.71061707 481.45385742]
[108.71061707 496.45385742]
[108.71061707 511.45385742]
[116.44792175 525.25402832]
[108.71061707 537.98126221]
[119.60517120 549.11444092]
[119.39149475 564.32653809]
[108.71061707 574.64422607]
[108.71061707 589.64422607]
[108.71061707 604.64422607]
[108.71061707 619.64422607]
[123.32063293 623.38568115]
[136.54078674 630.64361572]
[147.54006958 640.96191406]
[155.62702942 653.69189453]
[160.29333496 668.03326416]
[161.24565125 683.08465576]
[158.42411804 697.89984131]
[152.00608826 711.54754639]
[142.39501953 723.16986084]
[130.19506836 732.03619385]
[116.17311859 737.58923340]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 199]
[13 198]
[14 197]
[15 196]
[18 193]
[20 191]
[21 190]
[22 189]
[23 188]
[24 187]
[25 186]
[39 172]
[40 171]
[41 170]
[42 169]
[43 168]
[44 167]
[45 166]
[46 165]
[47 164]
[50 162]
[51 161]
[52 153]
[54 151]
[55 150]
[64 142]
[65 141]
[66 140]
[67 139]
[68 135]
[69 134]
[70 130]
[71 129]
[72 128]
[73 127]
[76 125]
[77 124]
[78 123]
[79 122]
[80 118]
[81 117]
[82 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
