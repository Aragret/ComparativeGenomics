%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[160.58937073 471.32113647]
[154.73738098 457.50207520]
[149.93444824 443.28433228]
[146.20745850 428.74740601]
[143.57723999 413.97262573]
[142.05850220 399.04260254]
[141.65972900 384.04083252]
[142.38316345 369.05120850]
[144.22476196 354.15756226]
[147.17422485 339.44317627]
[151.21504211 324.99035645]
[156.32464600 310.87994385]
[162.47442627 297.19079590]
[169.63000488 283.99951172]
[177.75137329 271.37988281]
[186.79310608 259.40243530]
[196.70463562 248.13415527]
[207.43052673 237.63809204]
[197.76971436 226.16339111]
[188.10890198 214.68869019]
[178.44808960 203.21398926]
[168.78729248 191.73928833]
[159.12648010 180.26458740]
[143.29164124 183.48493958]
[127.90487671 178.25012207]
[117.19630432 165.89929199]
[114.16023254 149.74137878]
[119.71838379 134.16900635]
[105.53324890 129.62683105]
[102.33303833 114.13266754]
[89.18103790 109.38751221]
[86.33737183 95.69791412]
[76.50679016 84.36831665]
[66.67620850 73.03872681]
[56.84562683 61.70913315]
[47.01504898 50.37953949]
[32.12677002 45.02699280]
[29.62970161 30.34319496]
[19.79912186 19.01360321]
[9.96854019 7.68400955]
[5.03402519 5.98176193]
[1.59025908 2.86827946]
[-0.07483827 -0.85227150]
[-0.03423776 -4.37799025]
[-9.34912014 -16.13524055]
[-18.66400337 -27.89249229]
[-27.97888565 -39.64974213]
[-37.29376984 -51.40699387]
[-41.58760834 -37.03469849]
[-55.44370651 -31.28938675]
[-68.64785767 -38.40629196]
[-71.46646118 -53.13909531]
[-61.82173920 -64.62731934]
[-46.82490921 -64.40301514]
[-55.23952866 -76.82050323]
[-63.65414429 -89.23799896]
[-72.06876373 -101.65549469]
[-85.33605194 -94.62510681]
[-99.28569031 -89.07040405]
[-113.75413513 -85.05651093]
[-128.57174683 -82.63048553]
[-143.56480408 -81.82077026]
[-158.55751038 -82.63687134]
[-173.37408447 -85.06921387]
[-187.84082031 -89.08927155]
[-201.78808594 -94.64992523]
[-215.05236816 -101.68596649]
[-227.47816467 -110.11491394]
[-238.91975403 -119.83792877]
[-249.24302673 -130.74102783]
[-258.32690430 -142.69636536]
[-266.06494141 -155.56376648]
[-272.36636353 -169.19239807]
[-277.15731812 -183.42243958]
[-280.38159180 -198.08705139]
[-282.00143433 -213.01432800]
[-281.99783325 -228.02922058]
[-280.37081909 -242.95571899]
[-277.13949585 -257.61877441]
[-272.34173584 -271.84652710]
[-266.03375244 -285.47213745]
[-258.28955078 -298.33581543]
[-249.19993591 -310.28680420]
[-238.87142944 -321.18493652]
[-227.42517090 -330.90246582]
[-214.99534607 -339.32543945]
[-201.72767639 -346.35510254]
[-187.77774048 -351.90905762]
[-173.30908203 -355.92218018]
[-158.49133301 -358.34741211]
[-143.49822998 -359.15631104]
[-128.50556946 -358.33941650]
[-113.68912506 -355.90628052]
[-99.22261047 -351.88543701]
[-85.27564240 -346.32403564]
[-72.01173401 -339.28726196]
[-59.58639908 -330.85766602]
[-48.14532089 -321.13403320]
[-37.82264709 -310.23037720]
[-28.73939323 -298.27453613]
[-21.00206566 -285.40670776]
[-14.70137501 -271.77777100]
[-9.91119576 -257.54745483]
[-6.68769073 -242.88265991]
[-5.06865263 -227.95530701]
[-5.07306385 -212.94041443]
[-6.70087385 -198.01400757]
[-9.93299580 -183.35110474]
[-14.73153687 -169.12362671]
[-21.04023361 -155.49836731]
[-28.78512383 -142.63508606]
[-37.87540054 -130.68460083]
[-48.20448303 -119.78702545]
[-59.65126801 -110.07011414]
[-51.23664856 -97.65261841]
[-42.82203293 -85.23512268]
[-34.40741348 -72.81762695]
[-25.53651810 -60.72187805]
[-16.22163582 -48.96462631]
[-6.90675211 -37.20737457]
[2.40813065 -25.45012474]
[11.72301388 -13.69287300]
[21.29813385 -2.14657116]
[31.12871361 9.18302155]
[40.95929337 20.51261520]
[55.14442444 25.05479240]
[58.34463882 40.54895782]
[68.17522430 51.87855148]
[78.00580597 63.20814514]
[87.83638000 74.53773499]
[97.66696167 85.86733246]
[110.81896210 90.61248779]
[113.66262817 104.30208588]
[128.55090332 109.65463257]
[131.04797363 124.33843231]
[144.62498474 120.97280121]
[158.26248169 123.77190399]
[169.31053162 132.13365173]
[175.64749146 144.38076782]
[176.08732605 158.09701538]
[170.60118103 170.60377502]
[180.26199341 182.07847595]
[189.92279053 193.55317688]
[199.58360291 205.02787781]
[209.24441528 216.50257874]
[218.90522766 227.97727966]
[231.07537842 219.19664001]
[243.86767578 211.35003662]
[257.21060181 204.48135376]
[271.02951050 198.62899780]
[285.24710083 193.82569885]
[299.78393555 190.09831238]
[314.55862427 187.46769714]
[329.48861694 185.94856262]
[344.49038696 185.54939270]
[359.48001099 186.27244568]
[374.37371826 188.11364746]
[389.08816528 191.06271362]
[403.54110718 195.10316467]
[417.65167236 200.21237183]
[431.34097290 206.36180115]
[444.53244019 213.51702881]
[457.15231323 221.63806152]
[469.13000488 230.67947388]
[480.39852905 240.59071350]
[490.89486694 251.31632996]
[500.56033325 262.79635620]
[509.34085083 274.96658325]
[517.18737793 287.75894165]
[524.05590820 301.10192871]
[529.90814209 314.92086792]
[534.71136475 329.13854980]
[538.43859863 343.67538452]
[541.06909180 358.45010376]
[542.58807373 373.38012695]
[542.98712158 388.38186646]
[542.26391602 403.37152100]
[540.42260742 418.26519775]
[537.47338867 432.97961426]
[533.43280029 447.43252563]
[528.32348633 461.54302979]
[522.17395020 475.23226929]
[515.01861572 488.42367554]
[506.89746094 501.04348755]
[497.85592651 513.02111816]
[487.94461060 524.28955078]
[477.21890259 534.78576660]
[465.73876953 544.45117188]
[453.56848145 553.23156738]
[440.77603149 561.07794189]
[427.43298340 567.94641113]
[413.61398315 573.79852295]
[399.39630127 578.60156250]
[384.85940552 582.32867432]
[370.08465576 584.95904541]
[355.15466309 586.47790527]
[340.15289307 586.87683105]
[325.16323853 586.15350342]
[310.26959229 584.31207275]
[295.55517578 581.36273193]
[281.10232544 577.32202148]
[266.99185181 572.21252441]
[253.30265808 566.06286621]
[240.11132812 558.90740967]
[227.49159241 550.78619385]
[215.51406860 541.74456787]
[204.24571228 531.83312988]
[193.74955750 521.10729980]
[184.08428955 509.62710571]
[175.30397034 497.45672607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 146]
[19 145]
[20 144]
[21 143]
[22 142]
[23 141]
[28 135]
[30 133]
[32 131]
[33 130]
[34 129]
[35 128]
[36 127]
[38 125]
[39 124]
[40 123]
[44 122]
[45 121]
[46 120]
[47 119]
[48 118]
[54 117]
[55 116]
[56 115]
[57 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
