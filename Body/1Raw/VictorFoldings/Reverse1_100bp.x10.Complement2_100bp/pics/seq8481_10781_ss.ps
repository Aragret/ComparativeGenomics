%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAUCCGGAUCCUAACACCCCCGUUACUUACUUCGCUUGUCUAAAAGCAAGUAAAACCAAGAGUCCCAAACAAUAUUAAAAAAUAAAAAUACCCGAAAxxxxxxxxxxGUUAAUAUAAUGAUGGUGACUGUACUGAAAGGUUUUUUGUGUAUUAAACUUAGUUGUGUUGGUGGGUGUCGGAUUAAUAAUCGUAGUAGGGAGAUGAUAA\
) } def
/len { sequence length } bind def

/coor [
[129.59941101 512.32537842]
[136.57240295 498.99218750]
[145.94291687 487.21975708]
[157.37220764 477.43365479]
[170.44712830 469.98764038]
[165.62112427 455.78518677]
[160.79513550 441.58273315]
[155.96913147 427.38027954]
[151.14314270 413.17782593]
[144.59182739 426.67153931]
[130.95147705 432.91180420]
[116.45828247 429.04565430]
[107.73831940 416.84066772]
[108.77825165 401.87673950]
[119.10263062 390.99523926]
[133.99128723 389.17102051]
[146.63847351 397.23953247]
[143.31620789 382.61209106]
[139.99394226 367.98461914]
[136.67169189 353.35714722]
[133.34942627 338.72970581]
[130.02717590 324.10223389]
[126.59610748 309.49990845]
[123.05643463 294.92352295]
[119.51676178 280.34716797]
[106.70278931 272.84130859]
[102.90541077 258.10922241]
[110.86511230 244.71965027]
[107.32543945 230.14326477]
[97.16160583 223.58406067]
[94.09335327 211.46922302]
[100.29424286 200.15940857]
[96.97198486 185.53195190]
[93.64972687 170.90447998]
[89.47943115 185.31311035]
[80.68856812 197.46716309]
[68.30989075 205.93876648]
[53.79761887 209.73271179]
[38.85664749 208.40328979]
[25.24222565 202.10665894]
[14.55376244 191.58255005]
[8.04692745 178.06733704]
[6.48613691 163.14875793]
[10.05475140 148.57943726]
[18.33353424 136.07096863]
[30.34989929 127.09283447]
[44.69218063 122.69977570]
[59.67545700 123.40787506]
[73.53951263 129.13395691]
[84.65560150 139.20532227]
[91.71832275 152.44029236]
[91.94165039 137.44195557]
[92.16497803 122.44361877]
[92.38830566 107.44528198]
[91.38404846 92.47893524]
[89.15892792 77.64489746]
[86.93381500 62.81084824]
[84.70869446 47.97680664]
[82.48358154 33.14276123]
[80.25846100 18.30871964]
[77.59266663 3.54750156]
[74.27040863 -11.07995892]
[63.49507904 -22.66455841]
[68.01050568 -36.85822296]
[64.47083282 -51.43460083]
[60.93116379 -66.01097870]
[57.39149094 -80.58734894]
[53.74340439 -95.13697052]
[49.98710251 -109.65902710]
[46.23080063 -124.18109131]
[35.53352737 -131.38740540]
[32.70386124 -143.56019592]
[38.72749710 -154.05030823]
[35.18782806 -168.62667847]
[31.43152618 -183.14874268]
[27.45942879 -197.61326599]
[23.48733330 -212.07778931]
[19.51523781 -226.54231262]
[15.54314137 -241.00683594]
[11.57104492 -255.47135925]
[7.59894848 -269.93588257]
[-7.41156578 -268.85391235]
[-22.34470367 -270.72143555]
[-36.62647629 -275.46664429]
[-49.70792770 -282.90719604]
[-61.08624268 -292.75708008]
[-70.32407379 -304.63769531]
[-77.06632996 -318.09237671]
[-81.05387878 -332.60394287]
[-82.13343048 -347.61462402]
[-80.26349640 -362.54745483]
[-75.51594543 -376.82846069]
[-68.07328033 -389.90872192]
[-58.22155380 -401.28543091]
[-46.33945465 -410.52133179]
[-32.88369370 -417.26141357]
[-18.37147713 -421.24661255]
[-3.36061239 -422.32373047]
[11.57192039 -420.45138550]
[25.85215569 -415.70153809]
[38.93119812 -408.25674438]
[50.30632401 -398.40316772]
[59.54030609 -386.51959229]
[66.27821350 -373.06274414]
[70.26105499 -358.54986572]
[71.33574677 -343.53881836]
[69.46098328 -328.60659790]
[64.70881653 -314.32714844]
[57.26190948 -301.24929810]
[47.40650177 -289.87576294]
[35.52141571 -280.64370728]
[22.06347275 -273.90798950]
[26.03556824 -259.44345093]
[30.00766563 -244.97892761]
[33.97975922 -230.51440430]
[37.95185852 -216.04988098]
[41.92395401 -201.58535767]
[45.89604950 -187.12083435]
[49.53006363 -184.02197266]
[51.25596619 -178.60733032]
[49.76420212 -172.16635132]
[53.30387497 -157.58998108]
[66.08357239 -145.56307983]
[60.75286102 -127.93739319]
[64.50916290 -113.41532898]
[68.26546478 -98.89327240]
[72.98381805 -93.20478058]
[71.96786499 -84.12702179]
[75.50753784 -69.55064392]
[79.04721069 -54.97427368]
[82.58688354 -40.39789581]
[93.10903168 -29.85589790]
[88.84677887 -14.61963081]
[92.38691711 -11.41393661]
[93.95084381 -5.95031452]
[92.26796722 0.44339141]
[94.54116058 2.08373952]
[96.30155182 4.72336483]
[97.16529083 8.17146111]
[96.82459259 12.10191345]
[95.09250641 16.08360100]
[97.31761932 30.91764450]
[99.54273987 45.75168991]
[101.76785278 60.58573151]
[103.99297333 75.41977692]
[106.21809387 90.25382233]
[112.74477386 76.74817657]
[124.74510193 67.74861145]
[139.53816223 65.26565552]
[153.81916809 69.85400391]
[164.39768982 80.48860931]
[168.91047668 94.79367065]
[166.34933472 109.57341003]
[157.28643799 121.52598572]
[143.74647522 127.98116302]
[128.75430298 127.49684143]
[115.65919495 120.18122101]
[107.38664246 107.66860962]
[107.16331482 122.66694641]
[106.93998718 137.66528320]
[106.71665955 152.66362000]
[108.27718353 167.58222961]
[111.59944153 182.20968628]
[114.92170715 196.83714294]
[127.74235535 210.05503845]
[121.90180969 226.60359192]
[125.44148254 241.17997742]
[138.65553284 249.42779541]
[142.03761292 264.26074219]
[134.09313965 276.80749512]
[137.63281250 291.38388062]
[141.17248535 305.96023560]
[146.23858643 313.56106567]
[144.65463257 320.77996826]
[147.97688293 335.40744019]
[151.29914856 350.03488159]
[154.62141418 364.66235352]
[157.94366455 379.28982544]
[161.26593018 393.91726685]
[165.34559631 408.35183716]
[170.17158508 422.55429077]
[174.99758911 436.75674438]
[179.82359314 450.95919800]
[184.64958191 465.16165161]
[199.55418396 463.10021973]
[214.57954407 463.89700317]
[229.18252563 467.52322388]
[242.83522034 473.84780884]
[255.04411316 482.64208984]
[265.36785889 493.58819580]
[273.43322754 506.29040527]
[278.94869995 520.28955078]
[281.71487427 535.07958984]
[281.63177490 550.12579346]
[278.70236206 564.88439941]
[273.03259277 578.82177734]
[264.82739258 591.43408203]
[254.38336182 602.26544189]
[242.07806396 610.92437744]
[228.35632324 617.09771729]
[213.71418762 620.56237793]
[198.68092346 621.19317627]
[183.80001831 618.96722412]
[169.60937500 613.96496582]
[156.62199402 606.36730957]
[145.30734253 596.44891357]
[136.07446289 584.56823730]
[129.25711060 571.15478516]
[125.10170746 556.69348145]
[123.75849152 541.70709229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 184]
[6 183]
[7 182]
[8 181]
[9 180]
[17 179]
[18 178]
[19 177]
[20 176]
[21 175]
[22 174]
[23 172]
[24 171]
[25 170]
[28 167]
[29 166]
[32 164]
[33 163]
[34 162]
[51 161]
[52 160]
[53 159]
[54 158]
[55 146]
[56 145]
[57 144]
[58 143]
[59 142]
[60 141]
[61 136]
[62 133]
[64 131]
[65 130]
[66 129]
[67 128]
[68 126]
[69 125]
[70 124]
[73 122]
[74 121]
[75 118]
[76 117]
[77 116]
[78 115]
[79 114]
[80 113]
[81 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
