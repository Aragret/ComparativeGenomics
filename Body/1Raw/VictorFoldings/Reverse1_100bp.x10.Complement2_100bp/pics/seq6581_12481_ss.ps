%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxAGGGGUGUUGUUAUAAGUACACGGAUCUGGUUCUUCAAUAAUAGAGCUUGACUGUGACUCGGUGUUGGGUUUGUUGGGUCGAGAGGGAUUCGAAGUUUGA\
) } def
/len { sequence length } bind def

/coor [
[93.57134247 541.31231689]
[79.90306854 534.97784424]
[67.98736572 525.76025391]
[58.42192078 514.12194824]
[51.68653107 500.64672852]
[48.11904526 486.01043701]
[47.89839935 470.94726562]
[51.03567123 456.21276855]
[57.37348938 442.54602051]
[66.59395599 430.63256836]
[78.23456573 421.06994629]
[91.71144867 414.33779907]
[106.34859467 410.77386475]
[106.12526703 395.77554321]
[105.90193939 380.77719116]
[105.67861176 365.77886963]
[105.45528412 350.78051758]
[105.23195648 335.78219604]
[96.56390381 348.02410889]
[82.97778320 354.38159180]
[68.02497101 353.19274902]
[55.61408997 344.76837158]
[48.98932648 331.31054688]
[49.88236618 316.33715820]
[58.05978012 303.76220703]
[71.38400269 296.87271118]
[86.37212372 297.46960449]
[99.10627747 305.39685059]
[106.25758362 318.58145142]
[108.26159668 303.71591187]
[110.26560974 288.85037231]
[104.29804230 275.20349121]
[113.80970001 262.56076050]
[115.81371307 247.69522095]
[117.81772614 232.82969666]
[117.25951385 217.84008789]
[114.15540314 203.16477966]
[99.95211029 198.67790222]
[89.83440399 187.61047363]
[86.59343719 172.86724854]
[91.19743347 158.38623047]
[102.50534821 148.08679199]
[99.40123749 133.41149902]
[96.29712677 118.73619843]
[84.21060181 110.74481964]
[81.21212769 96.56894684]
[89.02757263 84.36791229]
[85.92346191 69.69261169]
[82.81935120 55.01731110]
[79.71524048 40.34200668]
[74.87767792 32.59372711]
[76.67588043 25.42516708]
[73.79060364 10.70527554]
[70.90533447 -4.01461601]
[68.02005768 -18.73450661]
[55.18747711 -27.56414986]
[52.47109222 -42.53331375]
[60.96788788 -54.71280670]
[58.08261490 -69.43270111]
[55.19734192 -84.15258789]
[41.69074631 -84.57393646]
[28.57775879 -87.81072235]
[16.43834305 -93.71694946]
[5.80880737 -102.02860260]
[-2.84188986 -112.37548065]
[-9.13282681 -124.29766846]
[-12.78789330 -137.26597595]
[-13.64790916 -150.70542908]
[-11.67755032 -164.02076721]
[-6.96679592 -176.62281799]
[0.27317894 -187.95454407]
[9.71946907 -197.51568604]
[20.95183945 -204.88482666]
[33.47141647 -209.73797607]
[31.24630165 -224.57202148]
[29.02118301 -239.40606689]
[26.79606628 -254.24009705]
[24.57094955 -269.07415771]
[14.68142891 -277.35424805]
[13.13351345 -289.75537109]
[20.21580124 -299.56188965]
[18.21178818 -314.42742920]
[16.20777321 -329.29293823]
[14.20376015 -344.15847778]
[12.19974709 -359.02401733]
[3.92170453 -346.51504517]
[-10.08714008 -341.15292358]
[-24.60183334 -344.93759155]
[-34.20875549 -356.45745850]
[-35.32476044 -371.41586304]
[-27.53360558 -384.23376465]
[-13.74119949 -390.13031006]
[0.90822971 -386.90631104]
[10.95128918 -375.76315308]
[10.72796154 -390.76147461]
[10.50463390 -405.75982666]
[10.28130627 -420.75814819]
[10.05797768 -435.75650024]
[-3.96154356 -441.70401001]
[-14.34519386 -452.84399414]
[-19.29394341 -467.24642944]
[-17.95039177 -482.41595459]
[-10.54731655 -495.72439575]
[1.63265431 -504.86596680]
[16.47926712 -508.25683594]
[31.42025757 -505.30950928]
[43.86700821 -496.53463745]
[51.66304398 -483.45251465]
[53.45765305 -468.32971191]
[48.93991089 -453.78634644]
[38.89254379 -442.34210205]
[25.05631638 -435.97982788]
[25.27964401 -420.98147583]
[25.50297165 -405.98315430]
[25.72629929 -390.98480225]
[25.94962692 -375.98648071]
[27.06527519 -361.02801514]
[29.06928825 -346.16247559]
[31.07330322 -331.29696655]
[33.07731628 -316.43142700]
[35.08132935 -301.56591797]
[46.54046249 -288.27471924]
[39.40499115 -271.29925537]
[41.63011169 -256.46520996]
[43.85522842 -241.63117981]
[46.08034515 -226.79713440]
[48.30546188 -211.96308899]
[64.78528595 -210.36537170]
[80.30910492 -204.57815552]
[93.83002472 -194.98603821]
[104.43477631 -182.23036194]
[111.40538025 -167.16642761]
[114.26774597 -150.80601501]
[112.82393646 -134.24957275]
[107.16584015 -118.61209869]
[97.66932678 -104.94806671]
[84.96929932 -94.18035126]
[69.91723633 -87.03786469]
[72.80250549 -72.31797028]
[75.68778229 -57.59807968]
[88.15381622 -49.52754974]
[91.28958893 -34.64059067]
[82.73995209 -21.61977959]
[85.62522125 -6.89988852]
[88.51049805 7.82000256]
[91.39576721 22.53989410]
[94.39054108 37.23789978]
[97.49465179 51.91320038]
[100.59876251 66.58850098]
[103.70287323 81.26380157]
[115.78939819 89.25518036]
[118.78787231 103.43105316]
[110.97242737 115.63208771]
[114.07653809 130.30738831]
[117.18064880 144.98269653]
[131.69052124 149.82115173]
[141.76387024 161.19764709]
[144.77035522 175.99046326]
[140.00067139 190.20686340]
[128.83070374 200.06066895]
[131.93481445 214.73597717]
[135.69358826 200.21455383]
[142.90081787 187.05949402]
[153.11579895 176.07521057]
[165.71386719 167.93342590]
[179.92465210 163.13200378]
[194.87915039 161.96453857]
[209.66288757 164.50242615]
[223.37184143 170.59048462]
[235.16770935 179.85643005]
[244.32916260 191.73362732]
[250.29595947 205.49578857]
[252.70326233 220.30136108]
[251.40382385 235.24497986]
[246.47714233 249.41281128]
[238.22445679 261.93850708]
[227.15043640 272.05612183]
[213.93226624 279.14697266]
[199.37823486 282.77740479]
[184.37832642 282.72543335]
[169.84977722 278.99426270]
[156.68104553 271.81204224]
[145.67738342 261.61795044]
[137.51167297 249.03536987]
[132.68325806 234.83370972]
[130.67924500 249.69923401]
[128.67523193 264.56475830]
[134.49945068 279.27493286]
[125.13113403 290.85440063]
[123.12712097 305.71990967]
[121.12310791 320.58544922]
[120.23029327 335.55886841]
[120.45362091 350.55718994]
[120.67694855 365.55554199]
[120.90027618 380.55386353]
[121.12360382 395.55221558]
[121.34693146 410.55053711]
[136.08369446 413.67709351]
[149.75505066 420.00497437]
[161.67521667 429.21679688]
[171.24629211 440.85043335]
[177.98822021 454.32241821]
[181.56278992 468.95697021]
[181.79074097 484.02005005]
[178.66061401 498.75604248]
[172.32942200 512.42584229]
[163.11473083 524.34381104]
[151.47874451 533.91204834]
[138.00512695 540.65069580]
[123.36971283 544.22174072]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 197]
[14 196]
[15 195]
[16 194]
[17 193]
[18 192]
[29 191]
[30 190]
[31 189]
[33 187]
[34 186]
[35 185]
[36 161]
[37 160]
[42 155]
[43 154]
[44 153]
[47 150]
[48 149]
[49 148]
[50 147]
[52 146]
[53 145]
[54 144]
[55 143]
[58 140]
[59 139]
[60 138]
[74 127]
[75 126]
[76 125]
[77 124]
[78 123]
[81 121]
[82 120]
[83 119]
[84 118]
[85 117]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
