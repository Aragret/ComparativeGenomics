%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGAAGACUCCAUUAUUUAUCCUAAUAGGGCAUAGCUUCCGGAAAAACCUGUCCACCACACACCACCGGAACCAUACACGAAAGAGCACAAUGUAGCGxxxxxxxxxxGGGGGAGAUGGAUUUUGAGUGUCGGGAGCGACAGUGAAAGGAUCCUGAAGAUUGUCGGGAUCUGGAGUUGAUGGAUUGGUUGUUUGAAUUUUAUUUUAGG\
) } def
/len { sequence length } bind def

/coor [
[135.24803162 593.60406494]
[135.91769409 578.59179688]
[138.76611328 563.83697510]
[143.73257446 549.65417480]
[150.71122742 536.34564209]
[159.55332947 524.19512939]
[170.07038879 513.46154785]
[182.03825378 504.37377930]
[195.20182800 497.12542725]
[189.95510864 483.07296753]
[184.70838928 469.02050781]
[179.46166992 454.96801758]
[174.21495056 440.91555786]
[168.96823120 426.86306763]
[158.09698486 421.55813599]
[153.61085510 409.89373779]
[158.42384338 397.92718506]
[155.95187378 396.60525513]
[153.85461426 394.22448730]
[152.53794861 390.92269897]
[152.35047913 386.98196411]
[153.53507996 382.80456543]
[149.34806824 368.40078735]
[145.16105652 353.99697876]
[140.97404480 339.59320068]
[131.57212830 351.28097534]
[116.57239532 351.37020874]
[107.03208923 339.79510498]
[109.98397827 325.08843994]
[123.25202942 318.09140015]
[137.05444336 323.96069336]
[133.95033264 309.28536987]
[130.84622192 294.61007690]
[127.74211121 279.93478394]
[123.28247070 274.04129028]
[124.70274353 265.01794434]
[114.66181946 254.01661682]
[119.60015106 238.98587036]
[116.71488190 224.26597595]
[113.82960510 209.54608154]
[110.94433594 194.82618713]
[100.90341187 183.82487488]
[105.84174347 168.79411316]
[102.95646667 154.07423401]
[100.07119751 139.35433960]
[82.86699677 135.42921448]
[69.10750580 124.38078308]
[61.55918121 108.43042755]
[61.73965454 90.78507996]
[69.61264801 74.99244690]
[83.59523773 64.22776794]
[80.05556488 49.65139389]
[76.51589203 35.07501602]
[72.97621918 20.49864197]
[69.43654633 5.92226696]
[65.78845978 -8.62735367]
[54.84185028 -20.05023956]
[59.14545441 -34.30956268]
[55.38915634 -48.83161926]
[42.05377579 -56.88179779]
[38.45122528 -71.66274261]
[46.20801926 -84.32637787]
[42.45172119 -98.84844208]
[38.69541931 -113.37049866]
[34.93911743 -127.89255524]
[31.07481194 -142.38624573]
[27.10271645 -156.85076904]
[23.38764191 -160.51756287]
[21.62666512 -164.81317139]
[21.73208427 -168.88795471]
[23.29169273 -172.05023193]
[19.96943283 -186.67768860]
[16.64717293 -201.30514526]
[13.21611214 -215.90747070]
[9.67644024 -230.48385620]
[6.13676786 -245.06022644]
[2.59709525 -259.63659668]
[-12.37230396 -258.30441284]
[-27.37305450 -259.21826172]
[-42.07003403 -262.35775757]
[-56.13491058 -267.65274048]
[-69.25346375 -274.98495483]
[-81.13262177 -284.19055176]
[-91.50700378 -295.06390381]
[-100.14483643 -307.36209106]
[-106.85315704 -320.81036377]
[-111.48208618 -335.10830688]
[-113.92821503 -349.93646240]
[-114.13690948 -364.96356201]
[-112.10348511 -379.85394287]
[-107.87339020 -394.27487183]
[-101.54111481 -407.90426636]
[-93.24813080 -420.43759155]
[-83.17969513 -431.59484863]
[-71.56075287 -441.12677002]
[-58.65087509 -448.82043457]
[-44.73846436 -454.50396729]
[-30.13433456 -458.05038452]
[-15.16474628 -459.38046265]
[-0.16412526 -458.46447754]
[14.53240776 -455.32287598]
[28.59652901 -450.02587891]
[41.71403885 -442.69180298]
[53.59188461 -433.48449707]
[63.96471786 -422.60968018]
[72.60079956 -410.31024170]
[79.30719757 -396.86102295]
[83.93409729 -382.56243896]
[86.37811279 -367.73394775]
[86.58466339 -352.70678711]
[84.54912567 -337.81671143]
[80.31697845 -323.39636230]
[73.98275757 -309.76788330]
[65.68798828 -297.23574829]
[55.61796570 -286.07992554]
[43.99766922 -276.54965210]
[31.08669090 -268.85781860]
[17.17347145 -263.17626953]
[20.71314240 -248.59989929]
[24.25281525 -234.02352905]
[27.79248810 -219.44714355]
[32.42562485 -213.68904114]
[31.27463341 -204.62741089]
[34.59689331 -189.99995422]
[37.91915131 -175.37249756]
[41.56724167 -160.82287598]
[45.53933716 -146.35835266]
[50.34185791 -140.74073792]
[49.46117783 -131.64886475]
[53.21747971 -117.12680054]
[56.97377777 -102.60473633]
[60.73007965 -88.08267975]
[73.65438843 -80.76845551]
[77.67067719 -66.09452820]
[69.91121674 -52.58792114]
[73.66751862 -38.06586075]
[84.34545135 -27.68169022]
[80.31051636 -12.38365364]
[85.02886963 -6.69516182]
[84.01292419 2.38259482]
[87.55259705 16.95897102]
[91.09226990 31.53534508]
[94.63194275 46.11172104]
[98.17161560 60.68809509]
[110.30506897 62.01876450]
[121.44718170 67.00322723]
[130.52607727 75.16197205]
[136.66836548 85.71013641]
[139.28315735 97.63298798]
[138.11891174 109.78353882]
[133.28762817 120.99291992]
[125.25407410 130.18278503]
[114.79108429 136.46905518]
[117.67636108 151.18894958]
[120.56163025 165.90884399]
[130.80892944 177.96302795]
[125.66422272 191.94091797]
[128.54949951 206.66081238]
[131.43476868 221.38070679]
[134.32003784 236.10058594]
[144.56733704 248.15478516]
[139.42263794 262.13265991]
[142.41740417 276.83065796]
[145.52151489 291.50598145]
[148.62562561 306.18127441]
[151.72973633 320.85656738]
[155.37782288 335.40618896]
[159.56483459 349.80996704]
[163.75184631 364.21377563]
[167.93885803 378.61755371]
[172.55287170 392.89028931]
[186.85337830 404.49102783]
[183.02070618 421.61636353]
[188.26742554 435.66882324]
[193.51414490 449.72131348]
[198.76086426 463.77377319]
[204.00758362 477.82623291]
[209.25428772 491.87872314]
[223.94717407 488.72640991]
[238.94247437 487.74707031]
[253.92054749 488.96160889]
[268.56213379 492.34408569]
[282.55517578 497.82247925]
[295.60140991 505.27996826]
[307.42272949 514.55755615]
[317.76718140 525.45758057]
[326.41424561 537.74768066]
[333.17962646 551.16583252]
[337.91912842 565.42608643]
[340.53173828 580.22448730]
[340.96173096 595.24554443]
[339.19998169 610.16918945]
[335.28399658 624.67718506]
[329.29730225 638.46044922]
[321.36746216 651.22503662]
[311.66348267 662.69897461]
[300.39227295 672.63769531]
[287.79403687 680.82928467]
[274.13729858 687.09912109]
[259.71316528 691.31372070]
[244.82910156 693.38305664]
[229.80235291 693.26318359]
[214.95320129 690.95654297]
[200.59815979 686.51232910]
[187.04322815 680.02532959]
[174.57730103 671.63372803]
[163.46612549 661.51641846]
[153.94650269 649.88909912]
[146.22137451 636.99957275]
[140.45536804 623.12255859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 178]
[10 177]
[11 176]
[12 175]
[13 174]
[14 173]
[17 171]
[22 170]
[23 169]
[24 168]
[25 167]
[31 166]
[32 165]
[33 164]
[34 163]
[36 162]
[38 160]
[39 159]
[40 158]
[41 157]
[43 155]
[44 154]
[45 153]
[51 144]
[52 143]
[53 142]
[54 141]
[55 140]
[56 138]
[58 136]
[59 135]
[62 132]
[63 131]
[64 130]
[65 129]
[66 127]
[67 126]
[71 125]
[72 124]
[73 123]
[74 121]
[75 120]
[76 119]
[77 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
