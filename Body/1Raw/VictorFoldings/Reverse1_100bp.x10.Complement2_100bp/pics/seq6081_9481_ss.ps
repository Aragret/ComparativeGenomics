%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAUAGCCCCCGUGGCUAAUAAUCCCCUUGAUCAGUCAACGGUUUCGGAGGCUAAUACUACCCAUAAUGAUACUUCUUCUAAUAAUGUUUACGUACCCxxxxxxxxxxAAAGAAGCGUCCUAAAAAGACUCGGAAAAUGGUGAGGUCGGAUCGGGGAUGGGGGGUUAAUCCUCCCGUGACCGGGGGUUGUCCGUAGUGGGGCGAUUUA\
) } def
/len { sequence length } bind def

/coor [
[226.71067810 580.35632324]
[223.38842773 565.72888184]
[220.06616211 551.10144043]
[215.51927185 545.27496338]
[216.80505371 536.23150635]
[213.70094299 521.55621338]
[210.59683228 506.88088989]
[207.49272156 492.20556641]
[204.38861084 477.53027344]
[201.28450012 462.85498047]
[198.18038940 448.17968750]
[195.07627869 433.50436401]
[191.97216797 418.82907104]
[188.86805725 404.15377808]
[185.32838440 389.57739258]
[181.35629272 375.11285400]
[177.38418579 360.64834595]
[160.57910156 356.90304565]
[147.92056274 345.10159302]
[142.95741272 328.42910767]
[147.14338684 311.45300293]
[159.41290283 298.87158203]
[155.01190186 284.53173828]
[150.61090088 270.19189453]
[146.20991516 255.85203552]
[141.80891418 241.51219177]
[137.40791321 227.17234802]
[133.00691223 212.83250427]
[128.60591125 198.49266052]
[124.20491791 184.15280151]
[119.27332306 169.98667908]
[113.81797028 156.01387024]
[108.36260986 142.04107666]
[102.90725708 128.06828308]
[97.45189667 114.09548187]
[86.65695953 105.20948029]
[88.57530212 91.35987854]
[82.80927277 77.51239014]
[76.73543549 63.79712296]
[70.66160583 50.08185577]
[57.99899673 40.59666061]
[59.92005157 25.82645988]
[53.84621811 12.11119270]
[41.18360901 2.62599492]
[43.10466385 -12.14420605]
[37.03083038 -25.85947227]
[30.95699501 -39.57473755]
[24.88316154 -53.29000473]
[12.22055531 -62.77520370]
[14.14160919 -77.54540253]
[8.06777477 -91.26067352]
[1.99394107 -104.97593689]
[-10.66866493 -114.46113586]
[-8.74761200 -129.23133850]
[-14.82144547 -142.94660950]
[-29.01090431 -138.05445862]
[-43.56412888 -134.38328552]
[-58.37626648 -131.95956421]
[-73.34059143 -130.80073547]
[-88.34928131 -130.91516113]
[-103.29419708 -132.30200195]
[-118.06765747 -134.95127869]
[-132.56321716 -138.84388733]
[-146.67643738 -143.95179749]
[-160.30563354 -150.23822021]
[-173.35260010 -157.65782166]
[-185.72332764 -166.15716553]
[-197.32868958 -175.67500305]
[-208.08506775 -186.14277649]
[-217.91496277 -197.48504639]
[-226.74754333 -209.62010193]
[-234.51916504 -222.46049500]
[-241.17384338 -235.91371155]
[-246.66362000 -249.88282776]
[-250.94895935 -264.26718140]
[-253.99896240 -278.96313477]
[-255.79165649 -293.86483765]
[-256.31414795 -308.86483765]
[-255.56263733 -323.85516357]
[-253.54257202 -338.72772217]
[-250.26849365 -353.37539673]
[-245.76397705 -367.69262695]
[-240.06149292 -381.57626343]
[-233.20213318 -394.92626953]
[-225.23532104 -407.64648438]
[-216.21844482 -419.64523315]
[-206.21647644 -430.83605957]
[-195.30149841 -441.13833618]
[-183.55212402 -450.47784424]
[-171.05303955 -458.78726196]
[-157.89428711 -466.00674438]
[-144.17066956 -472.08428955]
[-129.98109436 -476.97604370]
[-115.42776489 -480.64685059]
[-100.61557007 -483.07019043]
[-85.65121460 -484.22863770]
[-70.64252472 -484.11383057]
[-55.69764709 -482.72659302]
[-40.92425537 -480.07693481]
[-26.42879105 -476.18395996]
[-12.31570053 -471.07565308]
[1.31333041 -464.78890991]
[14.36010361 -457.36895752]
[26.73061371 -448.86929321]
[38.33573151 -439.35116577]
[49.09183884 -428.88311768]
[58.92143631 -417.54058838]
[67.75370026 -405.40530396]
[75.52499390 -392.56472778]
[82.17932892 -379.11132812]
[87.66874695 -365.14205933]
[91.95370483 -350.75759888]
[95.00333405 -336.06155396]
[96.79564667 -321.15982056]
[97.31774139 -306.15979004]
[96.56585693 -291.16949463]
[94.54539490 -276.29699707]
[91.27093506 -261.64941406]
[86.76605225 -247.33229065]
[81.06321716 -233.44879150]
[74.20351410 -220.09895325]
[66.23636627 -207.37895203]
[57.21918106 -195.38044739]
[47.21692657 -184.18988037]
[36.30167389 -173.88787842]
[24.55206680 -164.54869080]
[12.05276299 -156.23957825]
[-1.10617900 -149.02043152]
[4.96765518 -135.30517578]
[17.19581985 -126.80097961]
[15.70920753 -111.04977417]
[21.78304100 -97.33450317]
[27.85687637 -83.61923981]
[40.08504105 -75.11505127]
[38.59842682 -59.36383820]
[44.67226410 -45.64857483]
[50.74609756 -31.93330574]
[56.81993103 -18.21804047]
[69.04809570 -9.71384907]
[67.56148529 6.03735876]
[73.63531494 19.75262451]
[85.86347961 28.25681496]
[84.37686920 44.00802231]
[90.45070648 57.72328949]
[96.52453613 71.43856049]
[99.66436005 73.04288483]
[102.18309784 76.24772644]
[103.33697510 80.74459839]
[102.54810333 85.90451813]
[113.34304047 94.79051971]
[111.42469788 108.64012146]
[116.88005066 122.61292267]
[122.33541107 136.58572388]
[127.79076385 150.55851746]
[133.24612427 164.53131104]
[141.56782532 152.05136108]
[156.49978638 150.62426758]
[167.03471375 161.30206299]
[165.40666199 176.21343994]
[152.81576538 184.36631775]
[138.54476929 179.75181580]
[142.94577026 194.09165955]
[147.34675598 208.43150330]
[151.74775696 222.77134705]
[156.14875793 237.11119080]
[160.54975891 251.45104980]
[164.95075989 265.79089355]
[169.35174561 280.13073730]
[173.75274658 294.47058105]
[186.55697632 296.15328979]
[197.73312378 302.53048706]
[205.63844299 312.62408447]
[209.12632751 324.91287231]
[207.71264648 337.56155396]
[201.64251709 348.69503784]
[191.84872437 356.67623901]
[195.82081604 371.14077759]
[199.79290771 385.60528564]
[202.98892212 388.54458618]
[204.89196777 392.00045776]
[205.49841309 395.50296021]
[204.95764160 398.62933350]
[203.54336548 401.04965210]
[206.64747620 415.72494507]
[209.75158691 430.40026855]
[212.85569763 445.07556152]
[215.95980835 459.75085449]
[219.06390381 474.42617798]
[222.16801453 489.10147095]
[225.27212524 503.77676392]
[228.37623596 518.45208740]
[231.48034668 533.12738037]
[234.69361877 547.77917480]
[238.01588440 562.40661621]
[241.33815002 577.03405762]
[256.37994385 578.91027832]
[269.87149048 585.82067871]
[280.18362427 596.93084717]
[286.07110596 610.89916992]
[286.82299805 626.03887939]
[282.34848022 640.52178955]
[273.18789673 652.59899902]
[260.44741821 660.81219482]
[245.66554260 664.16949463]
[230.62722778 662.26556396]
[217.14843750 655.33032227]
[206.85678101 644.20117188]
[200.99505615 630.22204590]
[200.27108765 615.08099365]
[204.77227783 600.60632324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 195]
[2 194]
[3 193]
[5 192]
[6 191]
[7 190]
[8 189]
[9 188]
[10 187]
[11 186]
[12 185]
[13 184]
[14 183]
[15 178]
[16 177]
[17 176]
[22 169]
[23 168]
[24 167]
[25 166]
[26 165]
[27 164]
[28 163]
[29 162]
[30 161]
[31 155]
[32 154]
[33 153]
[34 152]
[35 151]
[37 149]
[38 145]
[39 144]
[40 143]
[42 141]
[43 140]
[45 138]
[46 137]
[47 136]
[48 135]
[50 133]
[51 132]
[52 131]
[54 129]
[55 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
