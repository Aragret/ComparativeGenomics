%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxGUCAAGAAGUUUAUAGAUGAGUAGAAGGAUUAAUGGUAUGAUUAGAAUCAAUGGCGAUUGUUGGAUAAGGUUGACAAGUAGCCGACUCUCCCGCAUCCUU\
) } def
/len { sequence length } bind def

/coor [
[205.12617493 646.13305664]
[218.13111877 638.37738037]
[215.02700806 623.70208740]
[211.92289734 609.02679443]
[208.81878662 594.35144043]
[205.71467590 579.67614746]
[188.23628235 573.05810547]
[178.19807434 557.11560059]
[179.80950928 538.19439697]
[192.59977722 523.95556641]
[188.84347534 509.43350220]
[185.08717346 494.91143799]
[181.33087158 480.38937378]
[164.90806580 480.81210327]
[148.84712219 477.31909180]
[134.06864929 470.10665894]
[121.42066956 459.58428955]
[111.62999725 446.35168457]
[105.26045227 431.16430664]
[102.68035889 414.89044189]
[104.04131317 398.46142578]
[109.26923370 382.81848145]
[118.06838989 368.85864258]
[129.93814087 357.38345337]
[144.20143127 349.05285645]
[139.80043030 334.71301270]
[135.39944458 320.37316895]
[130.99844360 306.03332520]
[126.59744263 291.69348145]
[122.19644165 277.35363770]
[119.26951599 275.38754272]
[117.14945984 271.90612793]
[116.53812408 267.30398560]
[117.93456268 262.27438354]
[114.17826080 247.75231934]
[110.42196655 233.23025513]
[106.66566467 218.70819092]
[96.40530396 212.30104065]
[93.15702057 200.23321533]
[99.18883514 188.83233643]
[95.64916229 174.25596619]
[91.51169586 188.67405701]
[82.50337982 200.66781616]
[69.80941010 208.65925598]
[55.09989166 211.59695435]
[40.31011963 209.09442139]
[27.38594246 201.48091125]
[18.02775574 189.75810242]
[13.46679211 175.46832275]
[14.30312347 160.49165344]
[20.42671776 146.79853821]
[31.03190804 136.19052124]
[44.72340012 130.06329346]
[59.69984436 129.22297668]
[73.99082947 133.78013611]
[85.71613312 143.13519287]
[93.33390808 156.05958557]
[93.11058044 141.06124878]
[85.18464661 128.45057678]
[92.71562195 114.53674316]
[84.86257172 105.93611145]
[84.77587128 94.28992462]
[92.50000000 85.57331848]
[92.50000000 70.57331848]
[92.50000000 55.57332230]
[92.50000000 40.57332230]
[80.11502075 31.41261482]
[75.55226898 16.88558197]
[80.36157990 2.62604070]
[92.50000000 -5.96446657]
[92.50000000 -20.96446609]
[92.50000000 -35.96446609]
[92.50000000 -50.96446609]
[92.50000000 -65.96446991]
[81.95564270 -55.29597855]
[67.03285217 -53.77605820]
[54.55411530 -62.09958649]
[50.22454834 -76.46115875]
[56.02356720 -90.29486084]
[69.29994202 -97.27611542]
[83.98389435 -94.21317291]
[93.36271667 -82.50462341]
[94.92324066 -97.42323303]
[96.48376465 -112.34183502]
[86.80656433 -124.54796600]
[88.60167694 -139.65531921]
[100.29798889 -148.80583191]
[101.85851288 -163.72444153]
[103.41903687 -178.64303589]
[104.97955322 -193.56164551]
[97.47864532 -204.05445862]
[99.08554077 -216.44807434]
[108.39791870 -224.16857910]
[110.06945801 -239.07514954]
[111.62998199 -253.99375916]
[112.74562836 -268.95220947]
[113.41541290 -283.93725586]
[114.08519745 -298.92230225]
[114.75498199 -313.90731812]
[100.84929657 -319.98980713]
[90.08263397 -330.68762207]
[83.91107941 -344.55398560]
[83.16930389 -359.71362305]
[87.95761108 -374.11627197]
[97.62843323 -385.81411743]
[110.87387085 -393.22512817]
[125.90257263 -395.34698486]
[140.68205261 -391.89279175]
[153.21348572 -383.32962036]
[161.80210876 -370.81564331]
[165.28639221 -356.04324341]
[163.19509888 -341.01022339]
[155.81105042 -327.74975586]
[144.13290405 -318.05514526]
[129.74002075 -313.23754883]
[129.07023621 -298.25250244]
[128.40045166 -283.26745605]
[127.73066711 -268.28244019]
[129.52066040 -266.12509155]
[130.56394958 -263.12872314]
[130.53668213 -259.57421875]
[129.22257996 -255.85430908]
[126.54858398 -252.43324280]
[124.98806000 -237.51463318]
[127.41863251 -230.53507996]
[123.29163361 -222.38610840]
[131.05728149 -206.64883423]
[119.89816284 -192.00111389]
[118.33763885 -177.08251953]
[116.77711487 -162.16390991]
[115.21659088 -147.24530029]
[124.76610565 -135.87243652]
[123.39603424 -120.72061157]
[111.40236664 -110.78131104]
[109.84184265 -95.86270905]
[108.28131866 -80.94410706]
[107.50000000 -65.96446991]
[107.50000000 -50.96446609]
[107.50000000 -35.96446609]
[107.50000000 -20.96446609]
[107.50000000 -5.96446657]
[119.63842010 2.62604070]
[124.44773102 16.88558197]
[119.88497925 31.41261482]
[107.50000000 40.57332230]
[107.50000000 55.57332230]
[107.50000000 70.57331848]
[107.50000000 85.57331848]
[116.25928497 99.87895203]
[107.71395874 114.31341553]
[115.65586853 127.99686432]
[108.10891724 140.83792114]
[108.33224487 155.83625793]
[110.22553253 170.71629333]
[113.76520538 185.29266357]
[126.78122711 198.31820679]
[121.18772125 214.95188904]
[124.94402313 229.47395325]
[128.70031738 243.99601746]
[132.45661926 258.51806641]
[136.53628540 272.95263672]
[140.93728638 287.29248047]
[145.33828735 301.63232422]
[149.73928833 315.97216797]
[154.14028931 330.31201172]
[158.54127502 344.65185547]
[172.12402344 343.45324707]
[185.67201233 344.94744873]
[198.65681458 349.07406616]
[210.57240295 355.66998291]
[220.95480347 364.47604370]
[229.40026855 375.14697266]
[235.58088684 387.26504517]
[239.25737000 400.35647583]
[240.28828430 413.90979004]
[238.63552856 427.39599609]
[234.36567688 440.28906250]
[227.64735413 452.08654785]
[218.74456787 462.32916260]
[208.00633240 470.61862183]
[195.85293579 476.63308716]
[199.60923767 491.15515137]
[203.36553955 505.67718506]
[207.12184143 520.19927979]
[218.35614014 522.48065186]
[227.88476562 528.76123047]
[234.35218811 538.10174561]
[236.85556030 549.13085938]
[235.07055664 560.24682617]
[229.29286194 569.84973145]
[220.38998413 576.57208252]
[223.49409485 591.24737549]
[226.59820557 605.92266846]
[229.70231628 620.59796143]
[232.80642700 635.27325439]
[247.83793640 637.09869385]
[261.46121216 643.70812988]
[272.19848633 654.38476562]
[278.88507080 667.97033691]
[280.79565430 682.99127197]
[277.72296143 697.81817627]
[270.00033569 710.84277344]
[258.46545410 720.65222168]
[244.36952209 726.18243408]
[229.24157715 726.83361816]
[214.72257996 722.53509521]
[202.38745117 713.75311279]
[193.57418823 701.44030762]
[189.23881531 686.93225098]
[189.85159302 671.80267334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 195]
[3 194]
[4 193]
[5 192]
[6 191]
[10 184]
[11 183]
[12 182]
[13 181]
[25 166]
[26 165]
[27 164]
[28 163]
[29 162]
[30 161]
[34 160]
[35 159]
[36 158]
[37 157]
[40 155]
[41 154]
[57 153]
[58 152]
[60 150]
[63 148]
[64 147]
[65 146]
[66 145]
[70 141]
[71 140]
[72 139]
[73 138]
[74 137]
[82 136]
[83 135]
[84 134]
[87 131]
[88 130]
[89 129]
[90 128]
[93 126]
[94 124]
[95 123]
[96 118]
[97 117]
[98 116]
[99 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
