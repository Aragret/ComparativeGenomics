%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxGGGGAUCUUCAGGGUGAGGAUUUGUGUAGGCAUAAUGAGCGUAGUCCUCAUAGUUAGUGGACUCGAGUGGUAUCAGAUUAUCUUUUGUUGGCUUUGGUUU\
) } def
/len { sequence length } bind def

/coor [
[16.45900536 469.35278320]
[19.17855263 484.13323975]
[19.66471100 499.15393066]
[17.90661812 514.07928467]
[13.94355297 528.57592773]
[7.86405134 542.31988525]
[-0.19606937 555.00421143]
[-10.05674267 566.34552002]
[-21.49767685 576.09039307]
[-34.26327896 584.02117920]
[-48.06835938 589.96063232]
[-62.60450745 593.77612305]
[-77.54698181 595.38244629]
[-92.56195831 594.74359131]
[-107.31400299 591.87396240]
[-121.47354126 586.83758545]
[-134.72425842 579.74700928]
[-146.77011108 570.76062012]
[-157.34199524 560.07922363]
[-166.20373535 547.94134521]
[-173.15736389 534.61828613]
[-178.04751587 520.40759277]
[-180.76495361 505.62673950]
[-181.24897766 490.60595703]
[-179.48875427 475.68084717]
[-175.52363586 461.18478394]
[-169.44216919 447.44165039]
[-161.38024902 434.75848389]
[-151.51795959 423.41860962]
[-140.07563782 413.67535400]
[-127.30889893 405.74639893]
[-113.50297546 399.80889893]
[-98.96628571 395.99545288]
[-84.02358246 394.39129639]
[-69.00869751 395.03225708]
[-54.25706100 397.90402222]
[-40.09823608 402.94241333]
[-33.02112961 389.71688843]
[-25.94402504 376.49136353]
[-18.86692047 363.26583862]
[-20.37727165 345.78195190]
[-4.65509987 336.19577026]
[2.22431254 322.86633301]
[9.10372543 309.53692627]
[15.58322144 296.00857544]
[21.65705490 282.29330444]
[27.73088837 268.57803345]
[33.80472183 254.86276245]
[29.74127388 243.46913147]
[34.68923569 231.99301147]
[46.49692917 226.80252075]
[52.77429199 213.17919922]
[59.05165100 199.55589294]
[64.50701141 185.58308411]
[61.05976486 171.09289551]
[72.66687012 160.34181213]
[77.28087616 146.06907654]
[81.89488220 131.79634094]
[86.50889587 117.52361298]
[91.12290192 103.25087738]
[89.85386658 98.16133118]
[91.52674866 92.72306061]
[96.09260559 88.62551880]
[101.12952423 74.49649048]
[106.16643524 60.36745834]
[111.20335388 46.23843002]
[116.24027252 32.10939789]
[121.27718353 17.98036957]
[126.31410217 3.85134029]
[131.35101318 -10.27768898]
[119.02525330 -20.37299538]
[110.91514587 -34.05552292]
[107.98545837 -49.66159058]
[110.57235718 -65.30092621]
[118.34491730 -79.08563232]
[130.34738159 -89.35806274]
[145.11663818 -94.89017487]
[160.86050415 -95.03031158]
[165.68650818 -109.23276520]
[170.51249695 -123.43522644]
[169.60131836 -129.98361206]
[171.80342102 -135.22267151]
[175.69940186 -137.98497009]
[180.94612122 -152.03744507]
[186.19284058 -166.08992004]
[191.43955994 -180.14239502]
[196.37115479 -194.30851746]
[200.98516846 -208.58125305]
[205.59916687 -222.85398865]
[202.48194885 -238.36506653]
[213.75903320 -248.09526062]
[218.37303162 -262.36801147]
[222.98704529 -276.64074707]
[226.74334717 -291.16278076]
[229.62861633 -305.88269043]
[232.51390076 -320.60256958]
[235.39916992 -335.32247925]
[238.28443909 -350.04235840]
[241.16970825 -364.76223755]
[227.44537354 -370.98635864]
[215.52673340 -380.20819092]
[206.05653381 -391.93048096]
[199.54548645 -405.52102661]
[196.34474182 -420.24691772]
[196.62689209 -435.31402588]
[200.37673950 -449.90975952]
[207.39204407 -463.24700928]
[217.29449463 -474.60650635]
[229.55004883 -483.37564087]
[243.49778748 -489.08154297]
[258.38552856 -491.41647339]
[273.41040039 -490.25451660]
[287.76211548 -485.65832520]
[300.66671753 -477.87576294]
[311.42825317 -467.32656860]
[319.46640015 -454.57958984]
[324.34765625 -440.32232666]
[325.80877686 -425.32357788]
[323.77096558 -410.39227295]
[318.34414673 -396.33361816]
[309.82092285 -383.90576172]
[298.66101074 -373.77893066]
[285.46618652 -366.49923706]
[270.94808960 -362.45932007]
[255.88960266 -361.87698364]
[253.00433350 -347.15707397]
[250.11906433 -332.43719482]
[247.23377991 -317.71731567]
[244.34851074 -302.99740601]
[241.46324158 -288.27752686]
[253.32568359 -297.45806885]
[268.31484985 -298.02795410]
[280.84014893 -289.77465820]
[286.22994995 -275.77645874]
[282.47399902 -261.25430298]
[270.97317505 -251.62463379]
[256.01696777 -250.47904968]
[243.18373108 -258.24484253]
[237.25978088 -272.02673340]
[232.64576721 -257.75399780]
[228.03176880 -243.48126221]
[231.47900391 -228.99105835]
[219.87190247 -218.23997498]
[215.25788879 -203.96725464]
[210.64389038 -189.69451904]
[211.91514587 -186.40571594]
[211.65661621 -182.33776855]
[209.51942444 -178.21638489]
[205.49203491 -174.89567566]
[200.24531555 -160.84320068]
[194.99859619 -146.79072571]
[189.75187683 -132.73825073]
[184.71496582 -118.60923004]
[179.88896179 -104.40676880]
[175.06295776 -90.20431519]
[186.36454773 -81.67861176]
[194.49291992 -70.06177521]
[198.64250183 -56.48198318]
[198.39494324 -42.26303864]
[193.76118469 -28.79535675]
[185.18174744 -17.39997101]
[173.48483276 -9.19896507]
[159.80645752 -5.00499678]
[145.48004150 -5.24077272]
[140.44313049 8.88825703]
[135.40621948 23.01728630]
[130.36929321 37.14631653]
[125.33238220 51.27534485]
[120.29547119 65.40437317]
[115.25855255 79.53340149]
[110.22163391 93.66243744]
[105.39563751 107.86489105]
[100.78163147 122.13761902]
[96.16761780 136.41035461]
[91.55361176 150.68309021]
[86.93959808 164.95582581]
[90.05682373 180.46690369]
[78.77973938 190.19709778]
[91.64907074 182.49124146]
[106.59976196 183.70654297]
[118.05556488 193.38975525]
[121.74375916 207.92926025]
[116.28873444 221.90219116]
[103.72508240 230.09698486]
[88.73873138 229.45718384]
[76.91921997 220.22142029]
[72.67496490 205.83325195]
[66.39760590 219.45655823]
[60.12024689 233.07987976]
[62.23366547 251.37236023]
[47.51998901 260.93661499]
[41.44615555 274.65185547]
[35.37232208 288.36712646]
[29.29848862 302.08239746]
[29.91436577 306.38061523]
[29.20208931 310.26098633]
[27.45611191 313.35726929]
[25.05957031 315.43649292]
[22.43315506 316.41632080]
[15.55374146 329.74575806]
[8.67432976 343.07519531]
[11.84543705 355.57745361]
[5.84114456 366.53793335]
[-5.64139271 370.34292603]
[-12.71849823 383.56845093]
[-19.79560280 396.79397583]
[-26.87270927 410.01950073]
[-14.82557583 419.00418091]
[-4.25216675 429.68411255]
[4.61130476 441.82067871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 207]
[38 206]
[39 205]
[40 204]
[42 201]
[43 200]
[44 199]
[45 194]
[46 193]
[47 192]
[48 191]
[51 189]
[52 188]
[53 187]
[54 178]
[56 176]
[57 175]
[58 174]
[59 173]
[60 172]
[63 171]
[64 170]
[65 169]
[66 168]
[67 167]
[68 166]
[69 165]
[70 164]
[78 155]
[79 154]
[80 153]
[83 152]
[84 151]
[85 150]
[86 149]
[87 145]
[88 144]
[89 143]
[91 141]
[92 140]
[93 139]
[94 130]
[95 129]
[96 128]
[97 127]
[98 126]
[99 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
