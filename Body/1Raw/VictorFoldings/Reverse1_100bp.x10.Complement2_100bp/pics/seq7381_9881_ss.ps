%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGGUCGAAACCCCCCAAGCUAAGGAAGGAAAAAACAGAUCUAAAAUACAUAUGCCCAAGAAGCUUACACACCAUCCCACCCCCCGUAGGUAUAUCAGUGxxxxxxxxxxGUGAAAUGUAGGUUUGUAGUGAAACCGAAGCUUCGGCGGCGGACUAUGACCGUAAAACAUCUACACCAAACUGAUAAAGACAUACAGAGGUAGAUAACUA\
) } def
/len { sequence length } bind def

/coor [
[96.35598755 723.89660645]
[81.52874756 721.59576416]
[66.86936951 718.39520264]
[52.43236542 714.30694580]
[38.27145767 709.34613037]
[24.43931961 703.53125000]
[10.98740959 696.88397217]
[-2.03423071 689.42889404]
[-14.57715988 681.19384766]
[-26.59471703 672.20947266]
[-38.04219437 662.50915527]
[-48.87700653 652.12902832]
[-59.05884933 641.10760498]
[-68.54984283 629.48602295]
[-77.31468201 617.30743408]
[-85.32076263 604.61712646]
[-92.53829956 591.46234131]
[-98.94043732 577.89202881]
[-104.50336456 563.95666504]
[-109.20638275 549.70806885]
[-113.03200531 535.19921875]
[-115.96598816 520.48419189]
[-117.99742889 505.61764526]
[-119.11876678 490.65490723]
[-119.32582092 475.65164185]
[-118.61783600 460.66366577]
[-116.99742889 445.74673462]
[-114.47064972 430.95632935]
[-111.04687500 416.34747314]
[-106.73885345 401.97451782]
[-101.56261444 387.89093018]
[-95.53740692 374.14910889]
[-88.68564606 360.80017090]
[-81.03282928 347.89376831]
[-72.60741425 335.47790527]
[-63.44075012 323.59881592]
[-53.56693649 312.30062866]
[-43.02270508 301.62542725]
[-31.84728241 291.61288452]
[-20.08223915 282.30029297]
[-7.77134562 273.72225952]
[5.03960228 265.91067505]
[18.30294609 258.89468384]
[31.96934700 252.70028687]
[45.98796082 247.35058594]
[60.30664062 242.86546326]
[74.87211609 239.26162720]
[89.63021088 236.55244446]
[104.52600861 234.74803162]
[103.63319397 219.77462769]
[102.74037933 204.80122375]
[101.84756470 189.82781982]
[100.62059021 174.87808228]
[99.06006622 159.95947266]
[97.49954224 145.04086304]
[95.93901825 130.12226868]
[94.26747894 115.21569061]
[85.56227875 107.47872162]
[84.26443481 95.90474701]
[91.03981781 86.43186951]
[89.47929382 71.51325989]
[87.91877747 56.59465790]
[86.35825348 41.67605209]
[84.79772949 26.75744820]
[83.23720551 11.83884335]
[81.67668152 -3.07976151]
[79.01088715 -17.84097862]
[75.25458527 -32.36303711]
[71.49828339 -46.88509750]
[60.55167770 -58.30798340]
[64.85527802 -72.56730652]
[61.09897995 -87.08936310]
[57.34268188 -101.61142731]
[42.43889618 -99.73911285]
[27.41804504 -99.78808594]
[12.52678680 -101.75753784]
[-1.99035406 -105.61511993]
[-15.89499187 -111.29749298]
[-28.95879936 -118.71134949]
[-40.96725845 -127.73494720]
[-51.72317505 -138.22010803]
[-61.04993439 -149.99464417]
[-68.79437256 -162.86523438]
[-74.82933044 -176.62051392]
[-79.05570221 -191.03460693]
[-81.40409088 -205.87081909]
[-81.83592987 -220.88554382]
[-80.34412384 -235.83221436]
[-76.95317841 -250.46539307]
[-71.71877289 -264.54476929]
[-64.72685242 -277.83920288]
[-56.09225082 -290.13034058]
[-45.95673752 -301.21633911]
[-34.48675156 -310.91519165]
[-21.87064552 -319.06762695]
[-8.31558323 -325.53976440]
[5.95584917 -330.22534180]
[20.70930099 -333.04739380]
[35.70250702 -333.95959473]
[50.68926239 -332.94696045]
[65.42347717 -330.02612305]
[79.66320038 -325.24505615]
[93.17459869 -318.68225098]
[105.73580170 -310.44549561]
[117.14055634 -300.67001343]
[127.20156860 -289.51632690]
[135.75363159 -277.16763306]
[142.65632629 -263.82669067]
[147.79629517 -249.71252441]
[151.08912659 -235.05696106]
[152.48077393 -220.10064697]
[151.94834900 -205.08915710]
[149.50062561 -190.26899719]
[145.17778015 -175.88354492]
[139.05081177 -162.16900635]
[131.22030640 -149.35058594]
[121.81488037 -137.63879395]
[110.98896027 -127.22592926]
[98.92031860 -118.28298950]
[85.80713654 -110.95681763]
[71.86473846 -105.36772156]
[75.62104034 -90.84566498]
[79.37734222 -76.32360840]
[90.05527496 -65.93943787]
[86.02034760 -50.64139938]
[89.77664185 -36.11933899]
[93.53294373 -21.59727859]
[99.06736755 -35.53895187]
[110.76956940 -44.92289352]
[125.58063507 -47.29616547]
[139.62898254 -42.03840256]
[149.24240112 -30.52397156]
[151.90797424 -15.76271439]
[146.92892456 -1.61318886]
[135.60676575 8.22595215]
[120.90107727 11.18278122]
[106.65589905 6.48439026]
[96.59528351 -4.64028454]
[98.15580750 10.27832031]
[99.71633148 25.19692421]
[101.27685547 40.11552811]
[102.83737946 55.03413391]
[104.39790344 69.95273590]
[105.95842743 84.87134552]
[116.15846252 98.18807983]
[109.16119385 113.43322754]
[113.28820038 121.58219147]
[110.85762787 128.56173706]
[112.41814423 143.48034668]
[113.97866821 158.39895630]
[115.53919220 173.31755066]
[118.60668945 177.54101562]
[119.64370728 182.06625366]
[118.87531281 186.06933594]
[116.82096863 188.93499756]
[117.71378326 203.90840149]
[118.60659790 218.88180542]
[119.49942017 233.85520935]
[134.50408936 233.87677002]
[149.47955322 234.81301880]
[164.37007141 236.66050720]
[179.12026978 239.41233826]
[193.67526245 243.05828857]
[207.98091125 247.58477783]
[221.98400879 252.97499084]
[235.63243103 259.20886230]
[248.87544250 266.26321411]
[261.66375732 274.11178589]
[273.94979858 282.72537231]
[285.68786621 292.07196045]
[296.83428955 302.11676025]
[307.34759521 312.82241821]
[317.18869019 324.14907837]
[326.32098389 336.05465698]
[334.71044922 348.49481201]
[342.32592773 361.42327881]
[349.13906860 374.79199219]
[355.12451172 388.55117798]
[360.26000977 402.64965820]
[364.52645874 417.03500366]
[367.90795898 431.65371704]
[370.39196777 446.45135498]
[371.96923828 461.37292480]
[372.63388062 476.36288452]
[372.38345337 491.36550903]
[371.21887207 506.32492065]
[369.14443970 521.18554688]
[366.16790771 535.89202881]
[362.30035400 550.38970947]
[357.55615234 564.62463379]
[351.95297241 578.54388428]
[345.51162720 592.09564209]
[338.25607300 605.22949219]
[330.21334839 617.89660645]
[321.41333008 630.04980469]
[311.88876343 641.64392090]
[301.67510986 652.63580322]
[290.81030273 662.98461914]
[279.33483887 672.65179443]
[267.29135132 681.60137939]
[254.72467041 689.80010986]
[241.68151855 697.21746826]
[228.21044922 703.82586670]
[214.36155701 709.60070801]
[200.18635559 714.52056885]
[185.73759460 718.56707764]
[171.06901550 721.72515869]
[156.23519897 723.98315430]
[141.29130554 725.33264160]
[126.29294586 725.76855469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 158]
[50 157]
[51 156]
[52 155]
[53 151]
[54 150]
[55 149]
[56 148]
[57 146]
[60 144]
[61 143]
[62 142]
[63 141]
[64 140]
[65 139]
[66 138]
[67 127]
[68 126]
[69 125]
[71 123]
[72 122]
[73 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
