%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAUUUUAAUUCCGCUUCAAAUAAUGAGAAAAAACUUACAACAGUUUUGAUCAAUUAACCUUCAAUUGCCAUGAUAAAUAUGAUUUUCUCAUUCUGGGAGxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[134.98657227 435.10202026]
[133.38546753 420.17324829]
[133.38029480 405.15884399]
[134.97109985 390.22897339]
[138.13987732 375.55276489]
[142.85070801 361.29653931]
[149.05021667 347.62179565]
[156.66816711 334.68353271]
[165.61822510 322.62829590]
[175.79899597 311.59271240]
[187.09512329 301.70184326]
[199.37860107 293.06771851]
[192.10537720 279.94900513]
[179.16726685 272.56967163]
[179.24269104 256.74865723]
[171.96946716 243.62995911]
[164.30886841 230.73362732]
[156.26770020 218.07110596]
[148.22653198 205.40858459]
[140.18534851 192.74604797]
[132.14418030 180.08352661]
[128.96211243 194.74212646]
[117.17955780 204.02497864]
[102.18334198 203.68809509]
[90.82952881 193.88549805]
[88.30893707 179.09880066]
[95.77394104 166.08827209]
[109.81163788 160.80216980]
[124.00563812 165.65837097]
[117.32544708 152.22798157]
[110.64524841 138.79760742]
[103.96505737 125.36723328]
[97.28485870 111.93685913]
[96.92031860 126.93243408]
[91.99906921 141.10215759]
[82.99018097 153.09548950]
[70.75231171 161.76928711]
[56.45191193 166.29681396]
[41.45199966 166.24653625]
[27.18226433 161.62326050]
[15.00281239 152.86764526]
[6.07451010 140.81419373]
[1.24834645 126.61180115]
[0.98432058 111.61412811]
[5.30759764 97.25065613]
[13.80611038 84.89042664]
[25.66983604 75.71153259]
[39.76799774 70.58885956]
[54.75684738 70.01065063]
[69.20774841 74.03202820]
[81.74333191 82.26969910]
[91.16934967 93.93948364]
[88.28407288 79.21958923]
[85.39880371 64.49970245]
[82.51352692 49.77980804]
[79.08146667 45.84686661]
[77.64485931 41.43217850]
[78.05305481 37.37651443]
[79.84354401 34.33900070]
[77.61843109 19.50495529]
[73.80545807 14.10376930]
[73.35951996 8.43824482]
[75.55474091 4.19677639]
[73.77227783 -10.69694042]
[71.98980713 -25.59065819]
[70.20734406 -40.48437500]
[68.42487335 -55.37809372]
[66.64241028 -70.27181244]
[64.85994720 -85.16552734]
[59.35946274 -71.21043396]
[49.67600632 -59.75483704]
[36.83149338 -52.00767899]
[22.18143272 -48.78653336]
[7.27188444 -50.43133926]
[-6.32371235 -56.76850891]
[-17.17058182 -67.12927246]
[-24.12402916 -80.42023468]
[-26.45023918 -95.23875427]
[-23.90372276 -110.02101898]
[-16.75321770 -123.20700836]
[-5.75333691 -133.40518188]
[7.93507862 -139.53927612]
[22.86745644 -140.96199036]
[37.46794891 -137.52314758]
[50.19572830 -129.58566284]
[59.70760345 -117.98719788]
[64.99980164 -103.95159149]
[67.00381470 -118.81711578]
[69.00782776 -133.68264771]
[70.67936707 -148.58921814]
[72.01760101 -163.52940369]
[73.35583496 -178.46958923]
[74.69406891 -193.40977478]
[76.03230286 -208.34996033]
[77.37053680 -223.29014587]
[63.03900909 -227.93287659]
[50.10017014 -235.64871216]
[39.20303345 -246.05064392]
[30.89418983 -258.61691284]
[25.59041214 -272.71719360]
[23.55773163 -287.64419556]
[24.89811134 -302.64923096]
[29.54431343 -316.97964478]
[37.26329041 -329.91662598]
[47.66785812 -340.81121826]
[60.23612976 -349.11703491]
[74.33768463 -354.41738892]
[89.26519775 -356.44644165]
[104.26991272 -355.10244751]
[118.59918976 -350.45275879]
[131.53428650 -342.73065186]
[142.42639160 -332.32345581]
[150.72914124 -319.75314331]
[156.02607727 -305.65032959]
[158.05152893 -290.72232056]
[156.70387268 -275.71792603]
[152.05073547 -261.38977051]
[144.32548523 -248.45654297]
[133.91563416 -237.56697083]
[121.34334564 -229.26727295]
[107.23921967 -223.97373962]
[92.31072235 -221.95191956]
[90.97248840 -207.01173401]
[89.63425446 -192.07154846]
[88.29602051 -177.13136292]
[86.95778656 -162.19117737]
[85.61955261 -147.25099182]
[87.58766174 -144.32542419]
[88.23653412 -140.30125427]
[87.06523895 -135.80888367]
[83.87335968 -131.67863464]
[81.86934662 -116.81310272]
[79.86532593 -101.94757843]
[79.75366211 -86.94799042]
[81.53612518 -72.05427551]
[83.31859589 -57.16055679]
[85.10105896 -42.26684189]
[86.88352966 -27.37312317]
[88.66599274 -12.47940636]
[90.44845581 2.41431069]
[92.45246887 17.27983856]
[94.67758942 32.11388397]
[97.23342133 46.89453506]
[100.11869049 61.61442947]
[103.00396729 76.33432007]
[105.88923645 91.05420685]
[110.71523285 105.25666809]
[117.39543152 118.68704224]
[124.07562256 132.11741638]
[130.75581360 145.54779053]
[137.43601990 158.97816467]
[144.80670166 172.04235840]
[152.84788513 184.70487976]
[160.88905334 197.36740112]
[168.93022156 210.02992249]
[176.97138977 222.69245911]
[180.88914490 224.56468201]
[183.72238159 227.31010437]
[185.32977295 230.48052979]
[185.73008728 233.62797546]
[185.08816528 236.35671997]
[192.36138916 249.47541809]
[205.81973267 257.79309082]
[205.22407532 272.67578125]
[212.49729919 285.79446411]
[226.32774353 279.95059204]
[240.70100403 275.60992432]
[255.45423889 272.82168579]
[270.42025757 271.61740112]
[285.42950439 272.01077271]
[300.31188965 273.99734497]
[314.89880371 277.55456543]
[329.02499390 282.64215088]
[342.53033447 289.20248413]
[355.26184082 297.16116333]
[367.07522583 306.42807007]
[377.83666992 316.89819336]
[387.42422485 328.45288086]
[395.72927856 340.96124268]
[402.65768433 354.28149414]
[408.13095093 368.26272583]
[412.08706665 382.74655151]
[414.48120117 397.56884766]
[415.28625488 412.56164551]
[414.49307251 427.55508423]
[412.11065674 442.37924194]
[408.16601562 456.86621094]
[402.70382690 470.85177612]
[395.78594971 484.17752075]
[387.49084473 496.69244385]
[377.91244507 508.25473022]
[367.15927124 518.73333740]
[355.35321045 528.00958252]
[342.62802124 535.97839355]
[329.12786865 542.54937744]
[315.00573730 547.64819336]
[300.42163086 551.21691895]
[285.54083252 553.21527100]
[270.53189087 553.62054443]
[255.56492615 552.42810059]
[240.80949402 549.65155029]
[226.43280029 545.32226562]
[212.59773254 539.48931885]
[199.46105957 532.21887207]
[187.17163086 523.59320068]
[175.86868286 513.71008301]
[165.68029785 502.68154907]
[156.72192383 490.63247681]
[149.09506226 477.69946289]
[142.88612366 464.02902222]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 165]
[13 164]
[15 162]
[16 161]
[17 156]
[18 155]
[19 154]
[20 153]
[21 152]
[29 151]
[30 150]
[31 149]
[32 148]
[33 147]
[52 146]
[53 145]
[54 144]
[55 143]
[59 142]
[60 141]
[63 140]
[64 139]
[65 138]
[66 137]
[67 136]
[68 135]
[69 134]
[87 133]
[88 132]
[89 131]
[90 127]
[91 126]
[92 125]
[93 124]
[94 123]
[95 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
