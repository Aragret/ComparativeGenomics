%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[159.10594177 530.22326660]
[164.38351440 516.09533691]
[173.00941467 503.72424316]
[184.44143677 493.88757324]
[197.96093750 487.20373535]
[194.85682678 472.52844238]
[191.75271606 457.85311890]
[188.64860535 443.17782593]
[178.44500732 432.32720947]
[183.15899658 417.22460938]
[179.40269470 402.70254517]
[175.00170898 388.36270142]
[170.60070801 374.02285767]
[166.19970703 359.68301392]
[150.46697998 359.07418823]
[135.86900330 353.10479736]
[124.17769623 342.47955322]
[116.81900024 328.46954346]
[114.69889832 312.76010132]
[118.09193420 297.24819946]
[126.60582733 283.81320190]
[139.22669983 274.08935547]
[134.61268616 259.81661987]
[129.99868774 245.54388428]
[127.56717682 244.14892578]
[125.54171753 241.70677185]
[124.32395172 238.36723328]
[124.25389099 234.42266846]
[125.56234741 230.28239441]
[121.80604553 215.76033020]
[117.08769226 210.07183838]
[118.10364532 200.99407959]
[114.56397247 186.41770935]
[111.02429962 171.84133911]
[107.37621307 157.29171753]
[103.61991119 142.76965332]
[99.86360931 128.24758911]
[95.99930573 113.75389862]
[86.18740082 103.79307556]
[89.53617096 90.21819305]
[85.56407928 75.75366974]
[81.59197998 61.28914642]
[65.86647034 61.07118988]
[50.85208511 56.43968582]
[37.76069260 47.77701569]
[27.64653587 35.79058838]
[21.32134056 21.45506477]
[19.28917122 5.93312168]
[21.70627213 -9.51885414]
[28.36908340 -23.65246010]
[38.73136139 -35.32813644]
[51.94894409 -43.60705185]
[47.76193237 -58.01083374]
[43.57492065 -72.41461945]
[39.28079987 -86.78682709]
[34.87979889 -101.12667847]
[30.47880173 -115.46652222]
[26.07780457 -129.80636597]
[21.67680550 -144.14622498]
[17.27580833 -158.48606873]
[5.95084429 -160.26354980]
[-3.84871745 -166.11241150]
[-10.72677040 -175.15476990]
[-13.72012424 -186.06112671]
[-12.43325329 -197.24571228]
[-7.09011126 -207.09704590]
[1.50372219 -214.21018982]
[-2.25257850 -228.73223877]
[-6.00887918 -243.25430298]
[-9.76517963 -257.77636719]
[-13.52148056 -272.29843140]
[-16.67337418 -275.28497314]
[-18.52475357 -278.76879883]
[-19.07899475 -282.27993774]
[-18.49173164 -285.39791870]
[-17.04157257 -287.79690552]
[-19.92684555 -302.51681519]
[-30.17622757 -310.34707642]
[-32.27633667 -322.66668701]
[-25.63899803 -332.77966309]
[-28.30479240 -347.54089355]
[-38.37148666 -359.74630737]
[-33.01924133 -373.64605713]
[-35.68503952 -388.40725708]
[-38.35083389 -403.16848755]
[-47.77105713 -391.49545288]
[-62.67095947 -389.76544189]
[-74.51519775 -398.96948242]
[-76.51885223 -413.83505249]
[-67.53414154 -425.84649658]
[-52.70792007 -428.12310791]
[-40.53381348 -419.36157227]
[-41.87204742 -434.30175781]
[-43.21028519 -449.24194336]
[-57.86657333 -453.11093140]
[-70.31393433 -461.76187134]
[-79.04930115 -474.15014648]
[-83.01782227 -488.77978516]
[-81.74028015 -503.88421631]
[-75.37095642 -517.63946533]
[-64.67897034 -528.38458252]
[-50.95542526 -534.82196045]
[-35.85751343 -536.17437744]
[-21.20837975 -532.27838135]
[-8.77697754 -523.60449219]
[-0.06446044 -511.20013428]
[3.87709403 -496.56320190]
[2.57172346 -481.46115112]
[-3.82294202 -467.71765137]
[-14.53471565 -456.99227905]
[-28.27009773 -450.58016968]
[-26.93186378 -435.63998413]
[-25.59362984 -420.69979858]
[-23.58961678 -405.83425903]
[-20.92382050 -391.07305908]
[-18.25802612 -376.31182861]
[-8.38200665 -365.16223145]
[-13.54357624 -350.20669556]
[-10.87777996 -335.44546509]
[1.16340613 -322.67922974]
[-5.20695353 -305.40206909]
[-2.32168078 -290.68218994]
[1.00057876 -276.05471802]
[4.75687933 -261.53265381]
[8.51317978 -247.01060486]
[12.26948071 -232.48854065]
[16.02578163 -217.96649170]
[33.78225327 -212.13548279]
[44.52232361 -196.65711975]
[43.75737381 -177.68281555]
[31.61565590 -162.88706970]
[36.01665497 -148.54721069]
[40.41765213 -134.20736694]
[44.81864929 -119.86752319]
[49.21964645 -105.52767181]
[53.62064362 -91.18782806]
[58.58829498 -85.71569824]
[57.97870255 -76.60163116]
[62.16571426 -62.19784546]
[66.35272980 -47.79406357]
[80.68388367 -48.04914856]
[94.60340881 -44.57901001]
[107.15890503 -37.61460495]
[117.48960876 -27.62618828]
[124.88543701 -15.29158020]
[128.83576965 -1.45015907]
[129.06468201 12.95425224]
[125.55027008 26.93774796]
[118.52649689 39.54354095]
[108.46770477 49.90742874]
[96.05650330 57.31705093]
[100.02860260 71.78157043]
[104.00069427 86.24610138]
[113.81259918 96.20692444]
[110.46382904 109.78180695]
[115.75399780 117.22840881]
[114.38566589 124.49129486]
[118.14196777 139.01335144]
[121.89826965 153.53541565]
[127.07698059 161.05995178]
[125.60066986 168.30166626]
[129.14035034 182.87803650]
[132.68002319 197.45440674]
[136.32810974 212.00402832]
[140.08441162 226.52609253]
[144.27142334 240.92987061]
[148.88542175 255.20260620]
[153.49943542 269.47534180]
[167.82652283 269.66622925]
[181.37396240 274.26559448]
[192.82150269 282.81121826]
[201.05786133 294.45700073]
[205.28857422 308.05667114]
[205.11268616 322.27667236]
[200.56060791 335.72689819]
[192.08996582 347.09658813]
[180.53955078 355.28201294]
[184.94055176 369.62185669]
[189.34155273 383.96170044]
[193.74255371 398.30154419]
[201.70890808 385.59182739]
[216.29765320 382.10348511]
[229.15170288 389.83483887]
[232.90765381 404.35699463]
[225.41394043 417.35101318]
[210.96328735 421.37332153]
[197.83430481 414.12048340]
[208.25993347 426.02078247]
[203.32391357 440.07373047]
[206.42802429 454.74902344]
[209.53213501 469.42431641]
[212.63624573 484.09960938]
[227.70425415 484.73666382]
[242.14021301 489.10174561]
[255.03666687 496.92047119]
[265.58291626 507.70132446]
[273.11602783 520.76666260]
[277.16247559 535.29516602]
[277.46789551 550.37353516]
[274.01306152 565.05395508]
[267.01516724 578.41363525]
[256.91409302 589.61267090]
[244.34481812 597.94720459]
[230.09744263 602.89324951]
[215.06759644 604.13989258]
[200.20002747 601.60882568]
[186.42935181 595.45910645]
[174.62120056 586.07727051]
[165.51783752 574.05316162]
[159.69151306 560.14251709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 192]
[6 191]
[7 190]
[8 189]
[10 187]
[11 180]
[12 179]
[13 178]
[14 177]
[22 168]
[23 167]
[24 166]
[29 165]
[30 164]
[32 163]
[33 162]
[34 161]
[35 159]
[36 158]
[37 157]
[38 155]
[40 153]
[41 152]
[42 151]
[52 140]
[53 139]
[54 138]
[55 136]
[56 135]
[57 134]
[58 133]
[59 132]
[60 131]
[67 127]
[68 126]
[69 125]
[70 124]
[71 123]
[76 122]
[77 121]
[80 119]
[81 118]
[83 116]
[84 115]
[85 114]
[92 113]
[93 112]
[94 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
