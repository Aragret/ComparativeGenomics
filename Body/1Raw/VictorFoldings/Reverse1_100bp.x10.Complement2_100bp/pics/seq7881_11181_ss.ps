%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCGGACCAAGAUCCUUAUUACCCCCUUCAUACAUCCUCAACUUCUAAUCAGGCGGCAUCAGCCACAUGAGCAUCCAAGUCAUGGUAACCACCGGUUAAxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[51.61516190 623.01397705]
[39.49515915 631.91088867]
[26.07600021 638.69146729]
[11.72377205 643.17071533]
[-3.16998601 645.22637939]
[-18.19896317 644.80242920]
[-32.95315552 641.91046143]
[-47.03005981 636.62927246]
[-60.04565048 629.10302734]
[-71.64484406 619.53704834]
[-81.51121521 608.19219971]
[-89.37560272 595.37811279]
[-95.02344513 581.44427490]
[-98.30068207 566.77087402]
[-99.11790466 551.75811768]
[-97.45281219 536.81567383]
[-93.35083771 522.35107422]
[-86.92388153 508.75903320]
[-78.34727478 496.41027832]
[-67.85499573 485.64172363]
[-55.73327637 476.74713135]
[-42.31281281 469.96914673]
[-27.95972061 465.49267578]
[-13.06556702 463.43988037]
[1.96332717 463.86672974]
[4.84859991 449.14682007]
[7.73387241 434.42694092]
[1.24783468 424.21624756]
[3.53113413 411.92926025]
[13.89596176 404.25247192]
[17.00007057 389.57717896]
[15.30880356 382.38262939]
[20.26118660 374.70721436]
[23.58344650 360.07977295]
[26.90570641 345.45230103]
[25.16366005 341.00546265]
[26.19659233 335.41708374]
[30.55077934 330.44189453]
[34.30707932 315.91983032]
[38.06338120 301.39776611]
[41.81968307 286.87570190]
[34.06288528 274.21206665]
[37.66543579 259.43112183]
[51.00081635 251.38095093]
[54.75711823 236.85890198]
[53.38879013 229.59600830]
[58.67895889 222.14939880]
[62.65105438 207.68487549]
[66.62315369 193.22035217]
[70.59524536 178.75582886]
[74.56734467 164.29130554]
[78.53943634 149.82678223]
[74.44860840 135.50497437]
[85.56407928 124.24633026]
[89.53617096 109.78180695]
[86.18740082 96.20692444]
[95.99930573 86.24610138]
[99.97139740 71.78157043]
[99.22618103 62.67759323]
[104.11180878 57.13210678]
[108.29882050 42.72832489]
[112.48583221 28.32454300]
[108.90817261 12.91315269]
[119.89054108 2.85150695]
[124.07755280 -11.55227470]
[120.49989319 -26.96366501]
[131.48226929 -37.02531052]
[134.69554138 -51.67709732]
[136.92065430 -66.51113892]
[139.14578247 -81.34518433]
[141.37089539 -96.17922974]
[143.15336609 -111.07294464]
[144.49159241 -126.01313019]
[145.82983398 -140.95332336]
[147.16806030 -155.89349365]
[148.50630188 -170.83367920]
[147.61347961 -185.80709839]
[144.50936890 -200.48239136]
[141.40525818 -215.15769958]
[138.30114746 -229.83299255]
[135.19703674 -244.50830078]
[129.48579407 -230.63812256]
[118.04241180 -220.94024658]
[103.42336273 -217.58119202]
[88.89456940 -221.31138611]
[77.70182037 -231.29748535]
[72.34559631 -245.30859375]
[74.02248383 -260.21456909]
[82.35787964 -272.68536377]
[95.48961639 -279.93502808]
[110.48403931 -280.34390259]
[123.99136353 -273.82070923]
[132.99401855 -261.82266235]
[132.32423401 -276.80770874]
[131.65443420 -291.79272461]
[117.12170410 -296.04458618]
[104.75839996 -304.78686523]
[95.90560913 -317.07128906]
[91.52362061 -331.56530762]
[92.08775330 -346.69674683]
[97.53681946 -360.82424927]
[107.27973938 -372.41537476]
[120.25968170 -380.21279907]
[135.06867981 -383.37072754]
[150.10035706 -381.54660034]
[163.72418213 -374.93826294]
[174.46237183 -364.26257324]
[181.15010071 -350.67755127]
[183.06193542 -335.65679932]
[179.99052429 -320.82962036]
[172.26899719 -307.80438232]
[160.73493958 -297.99395752]
[146.63948059 -292.46252441]
[147.30926514 -277.47747803]
[147.97904968 -262.49243164]
[149.87234497 -247.61241150]
[152.97645569 -232.93710327]
[156.08056641 -218.26181030]
[159.18467712 -203.58650208]
[162.28878784 -188.91120911]
[166.20896912 -203.38987732]
[174.00032043 -216.20764160]
[185.04835510 -226.35362244]
[198.48178101 -233.02767944]
[213.24119568 -235.70344543]
[228.16259766 -234.16992188]
[242.06922913 -228.54804993]
[253.86434937 -219.28117371]
[262.61776733 -207.10011292]
[267.63912964 -192.96556091]
[268.53240967 -177.99217224]
[265.22720337 -163.36085510]
[257.98416138 -150.22546387]
[247.37449646 -139.62193298]
[234.23492432 -132.38648987]
[219.60169983 -129.08975220]
[204.62884521 -129.99172974]
[190.49717712 -135.02125549]
[178.32119751 -143.78170776]
[169.06115723 -155.58219910]
[163.44648743 -169.49545288]
[162.10824585 -154.55526733]
[160.77001953 -139.61508179]
[159.43177795 -124.67489624]
[158.09355164 -109.73471069]
[159.78541565 -107.49960327]
[160.69386292 -104.45964813]
[160.50791931 -100.90988159]
[159.02902222 -97.25237274]
[156.20494080 -93.95410919]
[153.97982788 -79.12006378]
[151.75469971 -64.28602600]
[149.52958679 -49.45198059]
[160.48678589 -59.69599152]
[175.22340393 -62.49455643]
[189.17315674 -56.98051071]
[198.01353455 -44.86244202]
[199.00526428 -29.89526176]
[191.84104919 -16.71671677]
[178.74079895 -9.41032219]
[163.76376343 -10.24004364]
[151.55075073 -18.94878197]
[145.88604736 -32.83829880]
[149.76319885 -18.45716476]
[138.48133850 -7.36526394]
[134.29432678 7.03851843]
[138.17146301 21.41965294]
[126.88961029 32.51155472]
[122.70259857 46.91533661]
[118.51558685 61.31911850]
[114.43592072 75.75366974]
[110.46382904 90.21819305]
[113.81259918 103.79307556]
[104.00069427 113.75389862]
[100.02860260 128.21842957]
[103.83531952 143.57484436]
[93.00395966 153.79888916]
[89.03186798 168.26341248]
[85.05976868 182.72793579]
[81.08767700 197.19245911]
[77.11557770 211.65698242]
[73.14348602 226.12150574]
[69.27917480 240.61518860]
[65.52287292 255.13725281]
[73.28234100 268.64385986]
[69.26604462 283.31777954]
[56.34173965 290.63201904]
[52.58544159 305.15408325]
[48.82913971 319.67611694]
[45.07283783 334.19818115]
[41.53316498 348.77456665]
[38.21090698 363.40203857]
[34.88864899 378.02947998]
[31.67537308 392.68127441]
[28.57126427 407.35656738]
[34.68368530 424.72665405]
[22.45376396 437.31219482]
[19.56849098 452.03210449]
[16.68321800 466.75198364]
[30.76114082 472.03042603]
[43.77817917 479.55416870]
[55.37921906 489.11795044]
[65.24777222 500.46084595]
[73.11462402 513.27343750]
[78.76515961 527.20617676]
[82.04521942 541.87896729]
[82.86533356 556.89154053]
[81.20312500 571.83435059]
[77.10393524 586.29968262]
[70.67959595 599.89300537]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 199]
[26 198]
[27 197]
[30 195]
[31 194]
[33 193]
[34 192]
[35 191]
[38 190]
[39 189]
[40 188]
[41 187]
[44 184]
[45 183]
[47 182]
[48 181]
[49 180]
[50 179]
[51 178]
[52 177]
[54 175]
[55 174]
[57 172]
[58 171]
[60 170]
[61 169]
[62 168]
[64 166]
[65 165]
[67 163]
[68 153]
[69 152]
[70 151]
[71 150]
[72 145]
[73 144]
[74 143]
[75 142]
[76 141]
[77 120]
[78 119]
[79 118]
[80 117]
[81 116]
[93 115]
[94 114]
[95 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
