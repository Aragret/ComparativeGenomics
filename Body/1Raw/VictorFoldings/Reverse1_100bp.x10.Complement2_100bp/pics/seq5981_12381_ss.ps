%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[134.79481506 602.08673096]
[122.39864349 592.75317383]
[117.88823700 577.90612793]
[122.99794006 563.25445557]
[135.76296997 554.43212891]
[135.98629761 539.43377686]
[136.20962524 524.43548584]
[136.32128906 509.43588257]
[136.32128906 494.43588257]
[136.32128906 479.43588257]
[136.32128906 464.43588257]
[136.32128906 449.43588257]
[122.13388062 441.70089722]
[113.73480988 427.78646851]
[113.49757385 411.44140625]
[121.58160400 397.12554932]
[135.86293030 388.79272461]
[135.63960266 373.79440308]
[135.41627502 358.79605103]
[135.19294739 343.79772949]
[134.96961975 328.79937744]
[134.74629211 313.80105591]
[134.52296448 298.80270386]
[133.63014221 283.82931519]
[132.06962585 268.91070557]
[130.50909424 253.99209595]
[117.54283142 246.71102905]
[111.27613068 233.02919006]
[114.30280304 218.10630798]
[125.66754150 207.70683289]
[124.10701752 192.78823853]
[122.54650116 177.86962891]
[120.98597717 162.95101929]
[116.69184875 148.57881165]
[109.81243896 135.24937439]
[102.93302917 121.91995239]
[96.05361176 108.59052277]
[91.54738617 105.90576935]
[88.86615753 100.88736725]
[89.17449951 94.76023102]
[82.69500732 81.23188782]
[76.21550751 67.70353699]
[69.73601532 54.17519379]
[55.10119247 48.84042358]
[48.72278214 35.02845383]
[53.89885712 21.10926628]
[38.46907043 11.05922890]
[40.49931335 -6.37192249]
[33.81911850 -19.80229950]
[20.74560738 -28.71261978]
[22.00522041 -43.55386734]
[15.32502556 -56.98424530]
[8.64483070 -70.41461945]
[7.99243402 -55.42881393]
[2.31793189 -41.54357147]
[-7.71204042 -30.39011002]
[-20.91917229 -23.27873421]
[-35.75190353 -21.04487801]
[-50.46769714 -23.95097351]
[-63.33776093 -31.65561676]
[-72.85012817 -43.25366974]
[-77.88729858 -57.38261032]
[-77.85750580 -72.38258362]
[-72.76425171 -86.49140167]
[-63.20589447 -98.05158234]
[-50.30533218 -105.70503998]
[-35.57810974 -108.55265808]
[-20.75436974 -106.25991058]
[-7.57558870 -99.09613037]
[2.41083050 -87.90158844]
[-0.91142905 -102.52904510]
[-4.23368835 -117.15650940]
[-7.55594826 -131.78396606]
[-10.87820721 -146.41142273]
[-14.20046711 -161.03887939]
[-17.63152885 -175.64120483]
[-21.17119980 -190.21759033]
[-36.14059830 -188.88539124]
[-51.14134979 -189.79924011]
[-65.83833313 -192.93873596]
[-79.90320587 -198.23373413]
[-93.02175903 -205.56593323]
[-104.90091705 -214.77154541]
[-115.27529907 -225.64489746]
[-123.91313171 -237.94308472]
[-130.62144470 -251.39135742]
[-135.25038147 -265.68930054]
[-137.69651794 -280.51742554]
[-137.90519714 -295.54455566]
[-135.87178040 -310.43490601]
[-131.64169312 -324.85586548]
[-125.30941010 -338.48526001]
[-117.01642609 -351.01855469]
[-106.94799805 -362.17581177]
[-95.32905579 -371.70776367]
[-82.41917419 -379.40142822]
[-68.50675964 -385.08496094]
[-53.90262985 -388.63137817]
[-38.93304062 -389.96142578]
[-23.93242073 -389.04544067]
[-9.23588753 -385.90386963]
[4.82823229 -380.60687256]
[17.94574165 -373.27279663]
[29.82358932 -364.06549072]
[40.19642258 -353.19064331]
[48.83250427 -340.89123535]
[55.53890610 -327.44201660]
[60.16579819 -313.14343262]
[62.60982132 -298.31491089]
[62.81636810 -283.28778076]
[60.78083038 -268.39770508]
[56.54867935 -253.97735596]
[50.21446228 -240.34887695]
[41.91969299 -227.81674194]
[31.84967232 -216.66091919]
[20.22937202 -207.13064575]
[7.31839418 -199.43879700]
[-6.59482527 -193.75726318]
[-3.05515289 -179.18087769]
[1.57798338 -173.42277527]
[0.42699310 -164.36114502]
[3.74925256 -149.73368835]
[7.07151222 -135.10623169]
[10.39377117 -120.47876740]
[13.71603107 -105.85130310]
[17.03829002 -91.22384644]
[22.07520676 -77.09481812]
[28.75540161 -63.66444016]
[35.43559647 -50.23406219]
[48.03129578 -42.28437042]
[47.24949646 -26.48249245]
[53.92969131 -13.05211735]
[65.29384613 -8.90694332]
[70.96914673 2.22745323]
[67.42720032 14.62977028]
[81.51706696 19.32140350]
[88.28090668 32.94876480]
[83.26435852 47.69569778]
[89.74385834 61.22404480]
[96.22335052 74.75238800]
[102.70285034 88.28073120]
[109.38304138 101.71111298]
[116.26245880 115.04054260]
[123.14186859 128.36996460]
[130.02128601 141.69940186]
[129.75105286 126.70183563]
[132.90032959 112.03615570]
[139.30387878 98.47169495]
[148.62579346 86.72002411]
[160.37707520 77.39760590]
[173.94125366 70.99346924]
[188.60679626 67.84357452]
[203.60438538 68.11315918]
[218.14724731 71.78807068]
[231.47251892 78.67553711]
[242.88116455 88.41425323]
[251.77473450 100.49334717]
[257.68667603 114.27918243]
[260.30685425 129.04856873]
[259.49780273 144.02673340]
[255.30201721 158.42794800]
[247.93954468 171.49678040]
[237.79664612 182.54763794]
[225.40536499 191.00082397]
[211.41575623 196.41290283]
[196.56166077 198.49996948]
[181.62229919 197.15252686]
[167.38136292 192.44128418]
[154.58590698 184.61335754]
[143.90716553 174.07939148]
[135.90458679 161.39050293]
[137.46510315 176.30911255]
[139.02561951 191.22770691]
[140.58615112 206.14631653]
[153.85694885 213.96884155]
[159.90626526 227.94236755]
[156.60653687 242.62486267]
[145.42770386 252.43156433]
[146.98822021 267.35018921]
[148.54875183 282.26876831]
[158.81108093 271.32873535]
[173.79838562 270.71173096]
[184.92524719 280.77117920]
[185.81770325 295.74459839]
[175.96450806 307.05453491]
[161.01002502 308.22213745]
[149.52130127 298.57937622]
[149.74462891 313.57772827]
[149.96795654 328.57604980]
[150.19128418 343.57440186]
[150.41461182 358.57272339]
[150.63793945 373.57107544]
[150.86126709 388.56939697]
[163.41505432 394.73910522]
[172.04469299 405.66363525]
[175.11080933 419.17575073]
[172.07064819 432.62588501]
[163.57312012 443.40182495]
[151.32128906 449.43588257]
[151.32128906 464.43588257]
[151.32128906 479.43588257]
[151.32128906 494.43588257]
[151.32128906 509.43588257]
[154.45069885 518.01751709]
[151.20796204 524.65881348]
[150.98463440 539.65710449]
[150.76130676 554.65545654]
[163.25799561 563.85394287]
[167.92919922 578.65124512]
[162.97872925 593.35742188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 207]
[6 206]
[7 205]
[8 203]
[9 202]
[10 201]
[11 200]
[12 199]
[17 193]
[18 192]
[19 191]
[20 190]
[21 189]
[22 188]
[23 187]
[24 180]
[25 179]
[26 178]
[30 174]
[31 173]
[32 172]
[33 171]
[34 145]
[35 144]
[36 143]
[37 142]
[40 141]
[41 140]
[42 139]
[43 138]
[46 135]
[48 132]
[49 131]
[51 129]
[52 128]
[53 127]
[70 126]
[71 125]
[72 124]
[73 123]
[74 122]
[75 121]
[76 119]
[77 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
