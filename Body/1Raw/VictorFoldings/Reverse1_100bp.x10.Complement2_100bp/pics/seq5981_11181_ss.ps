%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACUGCUAUUGCAACAUCUACACCAGCAAUGGAUCUUCCAACGGACCGACCGGGUCGAGCCGAGCUUAUUCCUCCGAAUCUCGACACGGAUCCUGAGGxxxxxxxxxxUGCGGACUUGCGUCCGUGUAUGAAGGAUAAGAUGUGGGAUCAUCCGAGGGAAGGGGAUGAGUAGCGUGAUUAAAUGUGAGUGUUGUGGGAUCCGAGUGAU\
) } def
/len { sequence length } bind def

/coor [
[187.90258789 513.75036621]
[198.52761841 503.11001587]
[210.79814148 494.41851807]
[204.31864929 480.89016724]
[197.83915710 467.36181641]
[192.11473083 462.68713379]
[191.36558533 453.58349609]
[185.08822632 439.96017456]
[178.81086731 426.33685303]
[172.53349304 412.71353149]
[166.25613403 399.09020996]
[159.97877502 385.46691895]
[157.39872742 384.37075806]
[155.09742737 382.18661499]
[153.49143982 379.01544189]
[152.95314026 375.10714722]
[153.76033020 370.84072876]
[148.30497742 356.86791992]
[142.84962463 342.89514160]
[137.39425659 328.92233276]
[131.93890381 314.94952393]
[129.54049683 329.75656128]
[121.72374725 342.55883789]
[109.64822388 351.45724487]
[95.10524750 355.13174438]
[80.25219727 353.03726196]
[67.29242706 345.48449707]
[58.14844513 333.59384155]
[54.17670441 319.12921143]
[55.96638870 304.23635864]
[63.25201035 291.12454224]
[74.95278931 281.73883057]
[89.33299255 277.47152710]
[104.25938416 278.95565796]
[117.51774597 285.97106934]
[127.14033508 297.47537231]
[124.69461060 282.67611694]
[122.24888611 267.87683105]
[119.80315399 253.07756042]
[117.35742950 238.27828979]
[114.91169739 223.47901917]
[102.69147491 215.04090881]
[100.00034332 200.06718445]
[108.93386078 187.30670166]
[106.48813629 172.50743103]
[104.04241180 157.70816040]
[101.59667969 142.90888977]
[98.71141052 128.18901062]
[95.38915253 113.56154633]
[86.03180695 103.17252350]
[89.98339081 89.76071930]
[86.66113281 75.13325500]
[81.52604675 89.22690582]
[70.84509277 99.75862885]
[56.68059158 104.69491577]
[41.76748657 103.08264923]
[28.98527145 95.23313141]
[20.80198479 82.66197968]
[18.79769325 67.79648590]
[23.35939407 53.50695038]
[33.60629272 42.55245209]
[47.55987930 37.04813385]
[62.52592468 38.05679703]
[75.61473083 45.38367844]
[84.29953766 57.61525345]
[75.95374298 44.17433548]
[83.11502838 31.11426735]
[82.44524384 16.12922859]
[81.77545929 1.14419055]
[81.10566711 -13.84084797]
[80.43588257 -28.82588768]
[76.92640686 -37.25923538]
[79.86936188 -44.03867722]
[79.42276001 -59.03202438]
[78.97615051 -74.02537537]
[68.75411224 -63.04767609]
[53.88318634 -61.08411789]
[41.16215897 -69.03241730]
[36.40691376 -83.25872040]
[41.79148483 -97.25894928]
[54.85411835 -104.63238525]
[69.62275696 -102.00800323]
[79.34602356 -90.58389282]
[80.46166992 -105.54234314]
[72.08338928 -121.94008636]
[82.52223206 -136.04672241]
[83.41504669 -151.02014160]
[84.30786133 -165.99354553]
[85.20067596 -180.96694946]
[86.09349823 -195.94035339]
[86.98631287 -210.91375732]
[87.87912750 -225.88716125]
[88.10245514 -240.88549805]
[87.65584564 -255.87884521]
[87.20924377 -270.87219238]
[72.68378448 -275.09902954]
[60.17655182 -283.60928345]
[50.91288376 -295.56921387]
[45.80033875 -309.80706787]
[45.33979034 -324.92803955]
[49.57635880 -339.45065308]
[58.09498978 -351.95217896]
[70.06111145 -361.20782471]
[84.30240631 -366.31085205]
[99.42366028 -366.76126099]
[113.94345093 -362.51495361]
[126.43926239 -353.98794556]
[135.68688965 -342.01562500]
[140.78034973 -327.77090454]
[141.22064209 -312.64935303]
[136.96461487 -298.13241577]
[128.42922974 -285.64233398]
[116.45071411 -276.40270996]
[102.20259094 -271.31881714]
[102.64920044 -256.32546997]
[103.09580231 -241.33210754]
[114.14339447 -251.47857666]
[129.13508606 -250.97917175]
[139.48294067 -240.11999512]
[139.25924683 -225.12165833]
[128.59216309 -214.57591248]
[113.59224701 -214.52380371]
[102.85253143 -224.99435425]
[101.95971680 -210.02093506]
[101.06690216 -195.04753113]
[100.17408752 -180.07412720]
[99.28126526 -165.10072327]
[98.38845062 -150.12731934]
[97.49563599 -135.15391541]
[105.28768158 -125.90131378]
[104.66640472 -113.41941833]
[95.42012787 -104.42669678]
[94.30447388 -89.46823883]
[93.96950531 -74.47198486]
[94.41610718 -59.47863007]
[94.86271667 -44.48528290]
[95.42092133 -29.49567223]
[96.09070587 -14.51063347]
[96.76049805 0.47440538]
[97.43028259 15.45944405]
[98.10006714 30.44448280]
[106.39794922 42.81357193]
[99.28457642 56.94546890]
[101.28858948 71.81099701]
[104.61084747 86.43845367]
[113.96819305 96.82747650]
[110.01660919 110.23928070]
[113.33886719 124.86674500]
[116.40044403 127.94582367]
[118.14727783 131.48321533]
[118.59673309 135.00930786]
[117.91689301 138.10841370]
[116.39595032 140.46316528]
[118.84168243 155.26243591]
[121.28740692 170.06170654]
[123.73313141 184.86097717]
[136.29713440 194.06878662]
[138.56663513 209.11218262]
[129.71096802 221.03329468]
[132.15669250 235.83256531]
[134.60243225 250.63183594]
[137.04815674 265.43112183]
[139.49388123 280.23037720]
[141.93960571 295.02966309]
[145.91169739 309.49417114]
[151.36706543 323.46697998]
[156.82241821 337.43975830]
[162.27777100 351.41256714]
[167.73313904 365.38537598]
[173.60209656 379.18954468]
[179.87945557 392.81286621]
[186.15681458 406.43618774]
[192.43417358 420.05947876]
[198.71153259 433.68280029]
[204.98889160 447.30612183]
[211.36750793 460.88232422]
[217.84700012 474.41067505]
[224.32649231 487.93902588]
[238.78996277 483.82608032]
[253.74047852 482.21682739]
[268.74792480 483.15753174]
[283.38046265 486.62112427]
[297.21713257 492.50799561]
[309.85977173 500.64871216]
[320.94467163 510.80908203]
[330.15286255 522.69677734]
[337.21945190 535.96972656]
[341.94107056 550.24609375]
[344.18188477 565.11505127]
[343.87744141 580.14886475]
[341.03646851 594.91497803]
[335.74075317 608.98846436]
[328.14260864 621.96441650]
[318.46066284 633.46954346]
[306.97351074 643.17285156]
[294.01165771 650.79504395]
[279.94802856 656.11688232]
[265.18722534 658.98522949]
[250.15402222 659.31762695]
[235.28089905 657.10437012]
[220.99581909 652.40924072]
[207.70976257 645.36737061]
[195.80500793 636.18121338]
[185.62406921 625.11517334]
[177.45989990 612.48767090]
[171.54737854 598.66198730]
[168.05662537 584.03588867]
[167.08805847 569.03021240]
[168.66958618 554.07672119]
[172.75566101 539.60565186]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 178]
[4 177]
[5 176]
[7 175]
[8 174]
[9 173]
[10 172]
[11 171]
[12 170]
[17 169]
[18 168]
[19 167]
[20 166]
[21 165]
[36 164]
[37 163]
[38 162]
[39 161]
[40 160]
[41 159]
[44 156]
[45 155]
[46 154]
[47 153]
[48 148]
[49 147]
[51 145]
[52 144]
[65 143]
[67 141]
[68 140]
[69 139]
[70 138]
[71 137]
[73 136]
[74 135]
[75 134]
[83 133]
[84 132]
[86 129]
[87 128]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[93 116]
[94 115]
[95 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
