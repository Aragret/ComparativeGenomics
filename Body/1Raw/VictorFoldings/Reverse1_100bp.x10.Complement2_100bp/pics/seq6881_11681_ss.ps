%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGAUUAUGUUACGGUCAGUCCGGUGGAUGCCACUUUUCUUUCUACUUAGGAUCCCGAGUCUCGUGACGUCGUCUAGUAAAGUAUAACGAAGGCACCUCxxxxxxxxxxCGAAGUGGCCGCGUCAGUAAGAGUAUUAGCGGGUGCCCGAAUGUAGGAGUAAUGAUAAGACGGAUCGUUUGAGUUUGAUGCUUGCGUGAGUGUCAGCGUA\
) } def
/len { sequence length } bind def

/coor [
[167.36042786 442.97058105]
[160.68023682 429.54022217]
[154.00003052 416.10983276]
[147.31983948 402.67947388]
[140.63964844 389.24908447]
[139.79832458 404.22546387]
[133.67016602 417.91656494]
[123.06143188 428.52102661]
[109.36788940 434.64370728]
[94.39116669 435.47900391]
[80.10170746 430.91708374]
[68.37952423 421.55810547]
[60.76688004 408.63342285]
[58.26535034 393.84347534]
[61.20404816 379.13415527]
[69.19634247 366.44073486]
[81.19071198 357.43322754]
[95.60908508 353.29672241]
[110.55447388 354.57546997]
[124.06056976 361.10122681]
[134.35168457 372.01742554]
[130.81201172 357.44104004]
[127.27234650 342.86468506]
[123.73267365 328.28829956]
[119.37753296 342.64215088]
[109.92046356 354.28533936]
[96.76435852 361.49066162]
[81.86083984 363.18927002]
[67.42076874 359.12918091]
[55.58623886 349.91268921]
[48.11283112 336.90698242]
[46.10918427 322.04141235]
[49.87252426 307.52117920]
[58.84458160 295.50027466]
[71.69440460 287.76190186]
[86.51580811 285.45407104]
[101.11010742 288.91906738]
[113.31233978 297.64291382]
[121.31168365 310.32971191]
[120.86508179 295.33636475]
[120.41847229 280.34301758]
[119.97186279 265.34963989]
[118.52244568 250.41984558]
[116.07672119 235.62057495]
[113.63098907 220.82130432]
[111.18526459 206.02203369]
[108.73954010 191.22276306]
[106.18370819 176.44210815]
[103.51791382 161.68089294]
[93.64189148 150.53129578]
[98.80345917 135.57572937]
[96.13766479 120.81451416]
[82.36820984 111.71672058]
[79.31437683 95.49815369]
[88.83211517 82.01556396]
[85.94684601 67.29566956]
[83.06156921 52.57577896]
[80.17630005 37.85588455]
[76.74523926 23.25356483]
[65.62977600 11.99492264]
[69.72060394 -2.32689285]
[65.74850464 -16.79141617]
[61.77640915 -31.25594139]
[46.41680908 -39.62863159]
[41.95270538 -56.19325256]
[50.67492294 -70.57246399]
[46.48791122 -84.97624207]
[42.30089951 -99.38002777]
[38.11389160 -113.78380585]
[33.92687988 -128.18759155]
[28.52642822 -135.55461121]
[29.78647041 -142.83705139]
[25.81437302 -157.30158997]
[22.67715454 -142.63331604]
[15.40823174 -129.51223755]
[4.63643789 -119.07344818]
[-8.70635796 -112.21999359]
[-23.46587181 -109.54477692]
[-38.36525726 -111.27923584]
[-52.11556625 -117.27331543]
[-63.52726364 -127.00846863]
[-71.61312103 -139.64250183]
[-75.67362976 -154.08245850]
[-75.35752106 -169.07913208]
[-70.69213104 -183.33514404]
[-62.08107376 -195.61723328]
[-50.26928329 -204.86286926]
[-36.27860260 -210.27218628]
[-21.31936455 -211.37725830]
[-6.68569183 -208.08247375]
[6.35645580 -200.67286682]
[16.67880249 -189.78942871]
[23.38726807 -176.37704468]
[15.85628986 -190.29087830]
[23.78222275 -202.90155029]
[24.00555038 -217.89988708]
[24.22887802 -232.89822388]
[9.97497845 -238.00753784]
[-1.84605670 -247.47018433]
[-9.95196915 -260.25973511]
[-13.46349049 -274.98889160]
[-11.99971676 -290.05993652]
[-5.71942806 -303.83807373]
[4.69613743 -314.82873535]
[18.11717796 -321.83975220]
[33.08787537 -324.11062622]
[47.98432541 -321.39501953]
[61.19067383 -313.98751831]
[71.27439117 -302.69161987]
[77.14166260 -288.73260498]
[78.15606689 -273.62466431]
[74.20756531 -259.00659180]
[65.72444916 -246.46405029]
[53.62691879 -237.35754395]
[39.22721481 -232.67489624]
[39.00388718 -217.67655945]
[38.78055954 -202.67822266]
[46.32751083 -189.83715820]
[38.38560486 -176.15371704]
[40.27889633 -161.27368164]
[44.25099564 -146.80915833]
[48.33066177 -132.37460327]
[52.51767349 -117.97081757]
[56.70468140 -103.56703949]
[60.89169312 -89.16325378]
[65.07870483 -74.75947571]
[77.12825775 -70.19462585]
[84.45793152 -59.36144257]
[84.20619202 -46.08940125]
[76.24093628 -35.22803497]
[80.21302795 -20.76351357]
[84.18512726 -6.29898882]
[95.01647949 3.92505288]
[91.20976257 19.28146744]
[100.78465271 7.73497725]
[115.78405762 7.86908340]
[125.15096283 19.58492851]
[121.98044586 34.24602509]
[108.60968781 41.04476166]
[94.89619446 34.97061539]
[97.78146362 49.69050598]
[100.66674042 64.41039276]
[103.55200958 79.13028717]
[114.83755493 84.90004730]
[120.80424500 96.08271790]
[119.31318665 108.66963196]
[110.89888000 118.14871979]
[113.56467438 132.90994263]
[123.63137054 145.11535645]
[118.27912903 159.01509094]
[120.94492340 173.77630615]
[125.54964447 181.66519165]
[123.53881073 188.77703857]
[125.98453522 203.57630920]
[128.43026733 218.37557983]
[130.87599182 233.17485046]
[133.32171631 247.97412109]
[140.59660339 234.85633850]
[153.75788879 227.66046143]
[168.72740173 228.61621094]
[180.86669922 237.42744446]
[186.41426086 251.36389160]
[183.65112305 266.10720825]
[173.43348694 277.08898926]
[158.92738342 280.90643311]
[144.62768555 276.37667847]
[134.96520996 264.90304565]
[135.41181946 279.89639282]
[135.85842896 294.88973999]
[136.30503845 309.88308716]
[138.30905151 324.74862671]
[141.84872437 339.32501221]
[145.38839722 353.90136719]
[148.92807007 368.47775269]
[154.07002258 382.56887817]
[160.75021362 395.99926758]
[167.43041992 409.42965698]
[174.11061096 422.86001587]
[180.79080200 436.29040527]
[195.26103210 432.17614746]
[210.24089050 430.79107666]
[225.22018433 432.18237305]
[239.68869019 436.30264282]
[253.15365601 443.01156616]
[265.15643311 452.08062744]
[275.28823853 463.20092773]
[283.20397949 475.99371338]
[288.63406372 490.02328491]
[291.39352417 504.81179810]
[291.38836670 519.85552979]
[288.61877441 534.64215088]
[283.17907715 548.66802979]
[275.25457764 561.45538330]
[265.11514282 572.56872559]
[253.10614014 581.62957764]
[239.63658142 588.32922363]
[225.16525269 592.43957520]
[210.18501282 593.82061768]
[195.20610046 592.42529297]
[180.73869324 588.30114746]
[167.27554321 581.58856201]
[155.27520752 572.51629639]
[145.14639282 561.39324951]
[137.23410034 548.59832764]
[131.80781555 534.56726074]
[129.05235291 519.77801514]
[129.06156921 504.73428345]
[131.83512878 489.94839478]
[137.27859497 475.92401123]
[145.20655823 463.13879395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 176]
[5 175]
[21 174]
[22 173]
[23 172]
[24 171]
[39 170]
[40 169]
[41 168]
[42 167]
[43 157]
[44 156]
[45 155]
[46 154]
[47 153]
[48 151]
[49 150]
[51 148]
[52 147]
[55 143]
[56 142]
[57 141]
[58 140]
[59 134]
[61 132]
[62 131]
[63 130]
[66 126]
[67 125]
[68 124]
[69 123]
[70 122]
[72 121]
[73 120]
[93 119]
[95 117]
[96 116]
[97 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
