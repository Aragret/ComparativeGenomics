%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxUAAUGUUUGAAUGAUAGGCGGUAGGGUAUGUAACCCUGUCUGGAUCAAGUUACUUAGACUCCUCCGAUGAGUCAUCUGUCAGGGUGGGAGUGUGCUAAGA\
) } def
/len { sequence length } bind def

/coor [
[48.17017746 169.33453369]
[51.67791367 183.92752075]
[53.96858215 198.76033020]
[55.02653122 213.73164368]
[54.84453583 228.73919678]
[53.42383957 243.68045044]
[50.77414703 258.45336914]
[46.91356277 272.95700073]
[41.86845016 287.09228516]
[35.67327881 300.76266479]
[28.37036896 313.87475586]
[20.00960541 326.33898926]
[10.64810181 338.07022095]
[0.34980875 348.98831177]
[-10.81492519 359.01867676]
[-22.76983261 368.09280396]
[-35.43325043 376.14871216]
[-48.71866989 383.13134766]
[-62.53533554 388.99301147]
[-76.78887177 393.69369507]
[-91.38189697 397.20123291]
[-106.21473694 399.49172974]
[-121.18606567 400.54949951]
[-136.19361877 400.36734009]
[-151.13485718 398.94647217]
[-165.90773010 396.29660034]
[-180.41131592 392.43582153]
[-194.54653931 387.39056396]
[-208.21684265 381.19522095]
[-221.32885742 373.89215088]
[-233.79299927 365.53125000]
[-245.52410889 356.16958618]
[-256.44207764 345.87118530]
[-266.47232056 334.70632935]
[-275.54629517 322.75131226]
[-283.60205078 310.08779907]
[-290.58450317 296.80227661]
[-296.44601440 282.98556519]
[-301.14651489 268.73196411]
[-304.65393066 254.13888550]
[-306.94424438 239.30603027]
[-308.00183105 224.33468628]
[-307.81945801 209.32714844]
[-306.39840698 194.38592529]
[-303.74838257 179.61308289]
[-299.88745117 165.10954285]
[-294.84201050 150.97436523]
[-288.64648438 137.30413818]
[-281.34326172 124.19220734]
[-272.98220825 111.72817230]
[-263.62042236 99.99716949]
[-253.32188416 89.07932281]
[-242.15690613 79.04922485]
[-230.20178223 69.97537994]
[-217.53817749 61.91979218]
[-204.25259399 54.93747330]
[-190.43577576 49.07612610]
[-176.18214417 44.37579346]
[-161.58901978 40.86857605]
[-146.75611877 38.57844162]
[-131.78477478 37.52102661]
[-116.77723694 37.70355606]
[-101.83602905 39.12478638]
[-87.06321716 41.77500534]
[-72.55972290 45.63611221]
[-58.42461395 50.68172836]
[-44.75445175 56.87738800]
[-31.64262009 64.18077087]
[-19.17868233 72.54197693]
[-7.44778585 81.90390015]
[3.46993613 92.20258331]
[13.49990273 103.36767578]
[22.57359886 115.32290649]
[30.62903976 127.98661041]
[43.90688705 121.00816345]
[57.18473434 114.02970886]
[70.46257782 107.05125427]
[83.74042511 100.07279968]
[87.86277008 89.18025970]
[98.21219635 83.83885193]
[109.47886658 86.78900909]
[122.85913849 80.00901794]
[136.23941040 73.22902679]
[149.61968994 66.44903564]
[162.99995422 59.66904831]
[176.38023376 52.88905716]
[189.76049805 46.10906219]
[203.14077759 39.32907104]
[209.38127136 32.65868378]
[216.77111816 32.54941559]
[230.25085449 25.96938896]
[224.48689270 12.11614990]
[219.56172180 -2.05700397]
[215.49299622 -16.49933624]
[212.29525757 -31.15914536]
[209.97996521 -45.98395157]
[208.55540466 -60.92069244]
[208.02667236 -75.91588593]
[208.39567566 -90.91587067]
[209.66107178 -105.86692810]
[211.81834412 -120.71556091]
[214.85977173 -135.40858459]
[218.77445984 -149.89343262]
[223.54838562 -164.11824036]
[229.16448975 -178.03208923]
[235.60263062 -191.58515930]
[242.83979797 -204.72894287]
[250.85005188 -217.41638184]
[259.60473633 -229.60206604]
[269.07250977 -241.24237061]
[279.21948242 -252.29563904]
[290.00933838 -262.72229004]
[301.40341187 -272.48498535]
[313.36096191 -281.54879761]
[325.83914185 -289.88125610]
[338.79333496 -297.45257568]
[352.17712402 -304.23562622]
[365.94262695 -310.20611572]
[380.04052734 -315.34268188]
[394.42041016 -319.62695312]
[409.03076172 -323.04354858]
[423.81927490 -325.58029175]
[438.73303223 -327.22805786]
[453.71865845 -327.98098755]
[468.72247314 -327.83636475]
[483.69079590 -326.79470825]
[498.57000732 -324.85974121]
[513.30688477 -322.03839111]
[527.84863281 -318.34075928]
[542.14324951 -313.78009033]
[556.13952637 -308.37268066]
[569.78735352 -302.13793945]
[583.03790283 -295.09817505]
[595.84375000 -287.27853394]
[608.15899658 -278.70706177]
[619.93957520 -269.41442871]
[631.14337158 -259.43389893]
[641.73016357 -248.80119324]
[651.66217041 -237.55438232]
[660.90380859 -225.73371887]
[669.42199707 -213.38153076]
[677.18615723 -200.54202271]
[684.16857910 -187.26116943]
[690.34429932 -173.58651733]
[695.69110107 -159.56698608]
[700.18994141 -145.25280762]
[703.82470703 -130.69517517]
[706.58227539 -115.94625092]
[708.45294189 -101.05879211]
[709.42987061 -86.08611298]
[709.50964355 -71.08181000]
[708.69195557 -56.09959412]
[706.97973633 -41.19309235]
[704.37908936 -26.41567039]
[700.89929199 -11.82022953]
[696.55291748 2.54098415]
[691.35546875 16.61655998]
[685.32550049 30.35611153]
[678.48468018 43.71045303]
[670.85742188 56.63178253]
[662.47113037 69.07383728]
[653.35571289 80.99208832]
[643.54382324 92.34386444]
[633.07061768 103.08853149]
[621.97363281 113.18762207]
[610.29248047 122.60498810]
[598.06903076 131.30691528]
[585.34710693 139.26225281]
[572.17218018 146.44252014]
[558.59136963 152.82202148]
[544.65338135 158.37791443]
[530.40808105 163.09031677]
[515.90643311 166.94235229]
[501.20040894 169.92022705]
[486.34259033 172.01329041]
[471.38619995 173.21403503]
[456.38476562 173.51818848]
[441.39199829 172.92463684]
[426.46154785 171.43551636]
[411.64688110 169.05615234]
[397.00103760 165.79507446]
[382.57644653 161.66395569]
[368.42471313 156.67756653]
[354.59652710 150.85375977]
[341.14135742 144.21340942]
[328.10742188 136.78025818]
[315.54132080 128.58091736]
[303.48809814 119.64476013]
[291.99084473 110.00375366]
[281.09075928 99.69242859]
[270.82684326 88.74767303]
[261.23583984 77.20869446]
[252.35208130 65.11677551]
[244.20738220 52.51521683]
[236.83088684 39.44912338]
[223.35115051 46.02915192]
[209.92077637 52.70934677]
[196.54049683 59.48933792]
[183.16021729 66.26932526]
[169.77995300 73.04932404]
[156.39967346 79.82931519]
[143.01940918 86.60930634]
[129.63912964 93.38929749]
[116.25885773 100.16928864]
[107.45716095 114.44886780]
[90.71887970 113.35064697]
[77.44103241 120.32910156]
[64.16318512 127.30755615]
[50.88533783 134.28601074]
[37.60749435 141.26446533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[74 210]
[75 209]
[76 208]
[77 207]
[78 206]
[81 204]
[82 203]
[83 202]
[84 201]
[85 200]
[86 199]
[87 198]
[88 197]
[90 196]
[91 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
