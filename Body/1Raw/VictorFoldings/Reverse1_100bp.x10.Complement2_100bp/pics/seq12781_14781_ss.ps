%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGGCUAUAGCGGCUAUGCCAACAUAUCCUAACGAACUUACCGACGACACAACCGUAGACGAGCCCGCAUAGUAGUUGACUACUCGUUCUUCCUAUAUUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[66.64904022 703.92913818]
[59.67456436 690.59674072]
[55.34955978 676.18524170]
[53.83036804 661.21569824]
[55.17191315 646.22912598]
[59.32569885 631.76733398]
[66.14156342 618.35314941]
[75.37312317 606.47149658]
[86.68666077 596.55175781]
[99.67319489 588.95269775]
[113.86328125 583.94885254]
[111.63816071 569.11480713]
[109.41304779 554.28076172]
[107.18792725 539.44671631]
[103.08698273 533.29821777]
[105.04181671 524.37542725]
[98.31478119 537.78240967]
[86.18179321 546.60229492]
[71.35340118 548.86474609]
[57.14229202 544.06427002]
[46.72327423 533.27337646]
[42.42398071 518.90270996]
[45.20488358 504.16271973]
[54.44472122 492.34640503]
[68.07929230 486.09353638]
[83.06259918 486.80099487]
[96.04733276 494.31079102]
[104.13267517 506.94519043]
[104.57928467 491.95184326]
[105.02588654 476.95846558]
[105.47249603 461.96511841]
[98.11756134 449.01312256]
[106.26231384 435.44943237]
[106.70892334 420.45608521]
[93.40653992 410.83715820]
[88.40869141 395.02627563]
[93.87392426 379.19491577]
[107.83563995 369.64678955]
[108.05896759 354.64846802]
[108.28229523 339.65011597]
[105.65773010 335.66003418]
[105.51183319 329.97888184]
[108.74220276 324.21029663]
[109.41198730 309.22528076]
[109.30031586 294.22567749]
[108.40750122 279.25228882]
[107.51468658 264.27886963]
[99.03356171 252.03469849]
[105.93574524 237.79846191]
[104.70877075 222.84872437]
[103.14824677 207.93013000]
[101.58772278 193.01152039]
[100.02719879 178.09291077]
[98.46667480 163.17431641]
[96.90615082 148.25570679]
[93.08383942 141.93022156]
[95.43515778 133.10360718]
[94.09692383 118.16342163]
[83.04565430 108.79241180]
[81.75296783 94.36067200]
[90.96289062 83.17481232]
[82.02525330 70.11995697]
[88.59622955 56.75315094]
[79.65859222 43.69829559]
[86.22956848 30.33148766]
[84.89133453 15.39130306]
[83.55310059 0.45111793]
[74.61546326 -12.60373592]
[81.18643951 -25.97054291]
[71.80729675 -34.82460785]
[71.00025177 -47.29587173]
[78.65367889 -56.66345596]
[77.53802490 -71.62191010]
[76.31105042 -86.57164001]
[74.97281647 -101.51182556]
[66.03517914 -114.56668091]
[72.60615540 -127.93348694]
[71.26792145 -142.87367249]
[68.64515686 -146.33418274]
[67.38658142 -150.07322693]
[67.41224670 -153.62777710]
[68.50003052 -156.60826111]
[70.32193756 -158.73870850]
[69.87533569 -173.73205566]
[69.42872620 -188.72540283]
[68.98212433 -203.71876526]
[68.53551483 -218.71211243]
[56.50631332 -209.75117493]
[41.96216965 -213.42102051]
[35.62448120 -227.01638794]
[42.16515732 -240.51525879]
[56.76265717 -243.96676636]
[68.65549469 -234.82807922]
[69.32527924 -249.81312561]
[62.21190643 -263.94500732]
[70.50978851 -276.31411743]
[71.17958069 -291.29913330]
[56.94323349 -296.38027954]
[44.83806229 -305.43325806]
[35.94044495 -317.65307617]
[31.04154778 -331.95315552]
[30.57698250 -347.06192017]
[34.58805466 -361.63598633]
[42.71810532 -374.37936401]
[54.24421692 -384.15893555]
[68.14148712 -390.10513306]
[83.17419434 -391.68920898]
[98.00562286 -388.77029419]
[111.31698608 -381.60797119]
[121.92464447 -370.83905029]
[128.88536072 -357.42117310]
[131.58021545 -342.54739380]
[129.76956177 -327.54031372]
[123.61441040 -313.73431396]
[113.66207123 -302.35702515]
[100.79750824 -294.42013550]
[86.16461945 -290.62936401]
[85.49482727 -275.64431763]
[92.65611267 -262.58425903]
[84.31031799 -249.14334106]
[83.64053345 -234.15829468]
[83.52886963 -219.15870667]
[83.97547150 -204.16535950]
[84.42208099 -189.17201233]
[84.86868286 -174.17866516]
[85.31529236 -159.18531799]
[86.20810699 -144.21191406]
[87.54634094 -129.27172852]
[96.38825989 -117.28549194]
[89.91300201 -102.85005951]
[91.25123596 -87.90987396]
[94.97895050 -81.52819061]
[92.49648285 -72.73755646]
[93.61212921 -57.77910614]
[104.25984192 -43.82944107]
[96.12662506 -27.30877876]
[104.96854401 -15.32254601]
[98.49328613 -0.88711625]
[99.83152008 14.05306911]
[101.16975403 28.99325371]
[110.01167297 40.97948456]
[103.53641510 55.41491699]
[112.37833405 67.40114594]
[105.90307617 81.83657837]
[116.95434570 91.20758820]
[118.24703217 105.63932800]
[109.03710938 116.82518768]
[110.37534332 131.76538086]
[111.82476044 146.69517517]
[113.38528442 161.61378479]
[114.94580841 176.53239441]
[116.50632477 191.45100403]
[118.06684875 206.36959839]
[119.62737274 221.28820801]
[122.69487000 225.51165771]
[123.73188782 230.03691101]
[122.96349335 234.03997803]
[120.90914917 236.90563965]
[129.45413208 250.22082520]
[122.48809052 263.38604736]
[123.38090515 278.35946655]
[124.27372742 293.33288574]
[134.16438293 282.05569458]
[148.97026062 279.65023804]
[161.92228699 287.21624756]
[167.09899902 301.29467773]
[162.13365173 315.44900513]
[149.29634094 323.20809937]
[134.45611572 321.02459717]
[124.39702606 309.89505005]
[123.72724152 324.88009644]
[123.28063202 339.87344360]
[123.05730438 354.87179565]
[122.83397675 369.87011719]
[134.44792175 377.29354858]
[140.82662964 389.39025879]
[140.39859009 402.95074463]
[133.38250732 414.43630981]
[121.70227051 420.90270996]
[121.25566101 435.89605713]
[128.57865906 449.92047119]
[120.46584320 462.41174316]
[120.01923370 477.40509033]
[119.57263184 492.39843750]
[119.12602234 507.39178467]
[119.90734863 522.37139893]
[122.02197266 537.22161865]
[124.24708557 552.05566406]
[126.47220612 566.88970947]
[128.69732666 581.72375488]
[143.73101807 582.34399414]
[158.37557983 585.79840088]
[172.10165405 591.96209717]
[184.41300964 600.61236572]
[194.86463928 611.43640137]
[203.07868958 624.04302979]
[208.75823975 637.97637939]
[211.69799805 652.73291016]
[211.79165649 667.77905273]
[209.03585815 682.57104492]
[203.53021240 696.57403564]
[195.47373962 709.28192139]
[185.15768433 720.23522949]
[172.95497131 729.03808594]
[159.30670166 735.37225342]
[144.70626831 739.00872803]
[129.68147278 739.81604004]
[114.77543640 737.76507568]
[100.52700043 732.92993164]
[87.45125580 725.48535156]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 190]
[12 189]
[13 188]
[14 187]
[16 186]
[28 185]
[29 184]
[30 183]
[31 182]
[33 180]
[34 179]
[38 174]
[39 173]
[40 172]
[43 171]
[44 170]
[45 162]
[46 161]
[47 160]
[49 158]
[50 154]
[51 153]
[52 152]
[53 151]
[54 150]
[55 149]
[57 148]
[58 147]
[61 144]
[63 142]
[65 140]
[66 139]
[67 138]
[69 136]
[72 134]
[73 133]
[74 131]
[75 130]
[77 128]
[78 127]
[83 126]
[84 125]
[85 124]
[86 123]
[87 122]
[93 121]
[94 120]
[96 118]
[97 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
