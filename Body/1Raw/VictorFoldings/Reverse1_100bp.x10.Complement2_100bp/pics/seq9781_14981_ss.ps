%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUAUAAUCAACCGCCUACUUCGUCUAUCACUCCUUUCAACUCGGUUAUUACUGCACUUCAGGCACCUUCGGACACCGAUGUUUUUUACAACUCGGCAUCxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[182.27375793 574.28021240]
[178.08059692 559.86627197]
[175.27656555 545.11895752]
[173.88706970 530.17193604]
[173.92468262 515.16052246]
[175.38906860 500.22061157]
[178.26698303 485.48757935]
[182.53233337 471.09481812]
[188.14649963 457.17266846]
[195.05865479 443.84725952]
[203.20617676 431.23922729]
[212.51528931 419.46273804]
[222.90168762 408.62451172]
[234.27131653 398.82266235]
[246.52117920 390.14593506]
[239.05343628 377.13699341]
[231.58570862 364.12802124]
[218.53915405 356.94213867]
[218.37902832 341.12173462]
[210.91128540 328.11279297]
[203.44354248 315.10385132]
[195.97579956 302.09487915]
[188.50807190 289.08593750]
[181.04032898 276.07699585]
[173.57258606 263.06802368]
[166.10484314 250.05908203]
[158.63710022 237.05012512]
[154.80366516 251.55201721]
[142.61836243 260.29949951]
[127.65214539 259.29333496]
[116.74736786 248.99353027]
[114.88954926 234.10903931]
[122.92805481 221.44480896]
[137.18778992 216.79078674]
[151.15078735 222.27593994]
[145.07696533 208.56068420]
[139.00312805 194.84541321]
[132.92929077 181.13014221]
[126.44979858 167.60180664]
[119.57038116 154.27236938]
[112.69097137 140.94294739]
[105.81156158 127.61351776]
[98.93214417 114.28408813]
[87.27133179 106.56935883]
[87.73842621 92.59532928]
[80.85900879 79.26589966]
[65.58586121 78.44245911]
[52.85954285 70.13958740]
[46.04315567 56.67098618]
[46.87798309 41.69904709]
[55.03984070 29.23912239]
[48.16042709 15.90969276]
[41.28101349 2.58026361]
[34.40160370 -10.74916553]
[27.52219009 -24.07859421]
[20.64277649 -37.40802383]
[13.76336479 -50.73745346]
[6.88395214 -64.06687927]
[0.00453952 -77.39630890]
[-6.87487316 -90.72573853]
[-6.59857178 -75.72828674]
[-9.40421486 -60.99300766]
[-15.17250347 -47.14646149]
[-23.65816689 -34.77740860]
[-34.50039291 -24.41178513]
[-47.23816299 -16.49034500]
[-61.32986069 -11.34990883]
[-76.17630005 -9.20905399]
[-91.14620209 -10.15880871]
[-105.60303497 -14.15878963]
[-118.93209839 -21.03891563]
[-130.56661987 -30.50663948]
[-140.01191711 -42.15938950]
[-146.86633301 -55.50168228]
[-150.83845520 -69.96620178]
[-151.75935364 -84.93790436]
[-149.58988953 -99.78018951]
[-144.42231750 -113.86195374]
[-136.47633362 -126.58443451]
[-126.08983612 -137.40666199]
[-113.70445251 -145.86848450]
[-99.84681702 -151.61007690]
[-85.10616302 -154.38731384]
[-70.10926819 -154.08210754]
[-55.49381256 -150.70744324]
[-41.88124466 -144.40679932]
[-29.85038757 -135.44808960]
[-19.91279411 -124.21224976]
[-12.49094582 -111.17686462]
[-13.38376141 -126.15026855]
[-16.69965363 -131.87008667]
[-16.63836098 -137.55281067]
[-14.07349110 -141.58151245]
[-14.52009678 -156.57485962]
[-14.96670246 -171.56822205]
[-23.11145592 -185.13189697]
[-15.75652409 -198.08389282]
[-29.97971344 -203.44760132]
[-41.06420898 -213.84963989]
[-47.31970215 -227.70378113]
[-47.79227829 -242.89736938]
[-42.40987015 -257.11349487]
[-31.99325943 -268.18429565]
[-18.13090134 -274.42156982]
[-2.93670464 -274.87414551]
[11.27232552 -269.47305298]
[22.32941437 -259.04187012]
[28.54843712 -245.17132568]
[28.98103714 -229.97654724]
[23.56124878 -215.77462769]
[13.11554623 -204.73127747]
[-0.76317382 -198.53050232]
[7.34963465 -186.03924561]
[0.02664710 -172.01481628]
[0.47325304 -157.02146912]
[0.91985893 -142.02812195]
[1.58964407 -127.04308319]
[2.48246002 -112.06967926]
[6.45455599 -97.60515594]
[13.33396912 -84.27572632]
[20.21338081 -70.94629669]
[27.09279442 -57.61686707]
[33.97220612 -44.28743744]
[40.85161972 -30.95800781]
[47.73103333 -17.62857819]
[54.61044312 -4.29914904]
[61.48985672 9.03028011]
[68.36927032 22.35970879]
[83.25367737 22.92529297]
[95.94093323 30.91839409]
[102.97029114 44.27707672]
[102.36532593 59.46031952]
[94.18843842 72.38648224]
[101.06785583 85.71591187]
[112.72866821 93.43064117]
[112.26157379 107.40467072]
[119.14099121 120.73410034]
[126.02040100 134.06353760]
[132.89981079 147.39295959]
[139.77922058 160.72239685]
[143.51431274 162.93667603]
[146.09132385 165.92391968]
[147.40945435 169.22511292]
[147.52735901 172.39570618]
[146.64456177 175.05632019]
[152.71839905 188.77157593]
[158.79222107 202.48684692]
[164.86605835 216.20211792]
[171.64605713 229.58238220]
[179.11380005 242.59133911]
[186.58152771 255.60029602]
[194.04927063 268.60925293]
[201.51701355 281.61819458]
[208.98475647 294.62713623]
[216.45249939 307.63610840]
[223.92024231 320.64505005]
[231.38798523 333.65399170]
[244.96867371 341.77038574]
[244.59465027 356.66027832]
[252.06239319 369.66925049]
[259.53015137 382.67819214]
[273.20028687 376.47561646]
[287.39813232 371.60058594]
[301.99508667 368.09719849]
[316.85894775 365.99725342]
[331.85516357 365.31973267]
[346.84783936 366.07077026]
[361.70123291 368.24356079]
[376.28085327 371.81845093]
[390.45462036 376.76303101]
[404.09420776 383.03253174]
[417.07604980 390.57022095]
[429.28259277 399.30776978]
[440.60330200 409.16607666]
[450.93566895 420.05584717]
[460.18606567 431.87847900]
[468.27078247 444.52688599]
[475.11654663 457.88653564]
[480.66137695 471.83642578]
[484.85507202 486.25024414]
[487.65963745 500.99740601]
[489.04968262 515.94439697]
[489.01260376 530.95587158]
[487.54876709 545.89581299]
[484.67138672 560.62890625]
[480.40655518 575.02185059]
[474.79290771 588.94421387]
[467.88125610 602.26983643]
[459.73419189 614.87817383]
[450.42550659 626.65502930]
[440.03948975 637.49359131]
[428.67022705 647.29589844]
[416.42065430 655.97308350]
[403.40176392 663.44653320]
[389.73138428 669.64862061]
[375.53335571 674.52313232]
[360.93627930 678.02593994]
[346.07232666 680.12536621]
[331.07611084 680.80236816]
[316.08343506 680.05078125]
[301.23013306 677.87744141]
[286.65063477 674.30200195]
[272.47705078 669.35693359]
[258.83770752 663.08691406]
[245.85614014 655.54876709]
[233.64990234 646.81079102]
[222.32954407 636.95202637]
[211.99758911 626.06188965]
[202.74760437 614.23889160]
[194.66337585 601.59020996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 161]
[16 160]
[17 159]
[19 157]
[20 156]
[21 155]
[22 154]
[23 153]
[24 152]
[25 151]
[26 150]
[27 149]
[35 148]
[36 147]
[37 146]
[38 145]
[39 140]
[40 139]
[41 138]
[42 137]
[43 136]
[45 134]
[46 133]
[51 128]
[52 127]
[53 126]
[54 125]
[55 124]
[56 123]
[57 122]
[58 121]
[59 120]
[60 119]
[89 118]
[90 117]
[93 116]
[94 115]
[95 114]
[97 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
