%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCAAUGUUAUACCCUCUAAUAAGGCUUCGGACCAUCCUAUUCUUAUAUUUGAAGUCCCACUGGCUUUUUAGUCUUAUCCACAACCAUAUCUUACCCCAGxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[13.39483070 539.29479980]
[7.38793755 553.09020996]
[-1.12142658 565.49938965]
[-11.82565308 576.07373047]
[-24.33779144 584.43090820]
[-38.20553589 590.26892090]
[-52.92757416 593.37664795]
[-67.97171783 593.64178467]
[-82.79412079 591.05474854]
[-96.85897827 585.70910645]
[-109.65783691 577.79797363]
[-120.72804260 567.60742188]
[-129.66940308 555.50585938]
[-136.15870667 541.93066406]
[-139.96134949 527.37261963]
[-140.93988037 512.35803223]
[-139.05891418 497.42956543]
[-134.38647461 483.12695312]
[-127.09144592 469.96719360]
[-117.43753815 458.42602539]
[-105.77373505 448.92065430]
[-92.52168274 441.79467773]
[-78.16043854 437.30569458]
[-63.20913315 435.61596680]
[-48.20826340 436.78662109]
[-44.23616791 422.32208252]
[-40.26407242 407.85757446]
[-36.29197693 393.39303589]
[-49.83032990 399.85159302]
[-64.01570892 394.97561646]
[-70.72207642 381.55828857]
[-66.10772705 367.28567505]
[-52.81596375 360.33377075]
[-38.46091843 364.68493652]
[-31.26591492 377.84570312]
[-26.01919556 363.79321289]
[-20.77247810 349.74075317]
[-15.52575970 335.68826294]
[-10.27904224 321.63580322]
[-11.31864357 319.03247070]
[-11.38966656 315.86047363]
[-10.27035427 312.48666382]
[-7.87572002 309.35134888]
[-4.27905083 306.91867065]
[1.79478312 293.20339966]
[7.86861706 279.48812866]
[13.94245148 265.77285767]
[20.01628494 252.05760193]
[18.09523201 237.28739929]
[30.75783730 227.80220032]
[29.90367699 223.10331726]
[31.99225426 217.81797791]
[37.22211838 213.77322388]
[43.70161438 200.24487305]
[50.18111038 186.71652222]
[50.23536301 179.32606506]
[56.85910797 173.03608704]
[63.53930283 159.60571289]
[70.21949768 146.17533875]
[76.69898987 132.64700317]
[82.97635651 119.02368164]
[89.25371552 105.40036774]
[95.32755280 91.68509674]
[93.60659027 75.95777130]
[105.70678711 67.27246094]
[111.57574463 53.46828461]
[99.07904053 44.14716721]
[89.17575836 32.11788177]
[82.43587494 18.07933426]
[79.24574280 2.84588075]
[79.78591919 -12.69991207]
[84.02098083 -27.65839767]
[91.70178223 -41.16491318]
[102.38014221 -52.43976212]
[115.43495941 -60.83322144]
[130.10836792 -65.86298370]
[145.54974365 -67.24187469]
[160.86492920 -64.89423370]
[166.52770996 -78.78426361]
[172.19050598 -92.67429352]
[170.23558044 -108.37425232]
[182.20510864 -117.23875427]
[187.86790466 -131.12878418]
[193.53068542 -145.01879883]
[199.19348145 -158.90882874]
[204.85626221 -172.79885864]
[200.58239746 -184.96836853]
[205.58489990 -196.42082214]
[216.68218994 -201.23506165]
[222.55114746 -215.03923035]
[228.42010498 -228.84341431]
[234.28907776 -242.64758301]
[240.15803528 -256.45175171]
[245.40475464 -270.50424194]
[250.01875305 -284.77697754]
[254.31288147 -299.14916992]
[258.28497314 -313.61370850]
[262.25708008 -328.07821655]
[266.22918701 -342.54275513]
[270.20126343 -357.00726318]
[256.82608032 -363.92089844]
[245.18086243 -373.46459961]
[235.77465820 -385.22119141]
[229.01869202 -398.67669678]
[225.20829773 -413.24288940]
[224.51005554 -428.28305054]
[226.95448303 -443.13964844]
[232.43472290 -457.16323853]
[240.71119690 -469.74072266]
[251.42208862 -480.32232666]
[264.09918213 -488.44543457]
[278.18829346 -493.75494385]
[293.07348633 -496.01876831]
[308.10403442 -495.13790894]
[322.62289429 -491.15090942]
[335.99536133 -484.23202515]
[347.63684082 -474.68371582]
[357.03842163 -462.92343140]
[363.78909302 -449.46527100]
[367.59375000 -434.89758301]
[368.28607178 -419.85714722]
[365.83581543 -405.00152588]
[360.35003662 -390.98010254]
[352.06863403 -378.40585327]
[341.35354614 -367.82846069]
[328.67327881 -359.71032715]
[314.58209229 -354.40637207]
[299.69601440 -352.14840698]
[284.66580200 -353.03518677]
[280.69369507 -338.57064819]
[276.72158813 -324.10614014]
[272.74951172 -309.64160156]
[268.77740479 -295.17709351]
[270.19424438 -291.94833374]
[270.11761475 -287.87289429]
[268.16659546 -283.66018677]
[264.29150391 -280.16296387]
[259.67749023 -265.89022827]
[273.49072266 -271.73782349]
[287.44421387 -266.23330688]
[293.54479980 -252.52989197]
[288.29772949 -238.47755432]
[274.70880127 -232.12608337]
[260.56237793 -237.11389160]
[253.96220398 -250.58279419]
[248.09324646 -236.77862549]
[242.22428894 -222.97444153]
[236.35533142 -209.17027283]
[230.48635864 -195.36608887]
[233.55052185 -178.08668518]
[218.74629211 -167.13607788]
[213.08349609 -153.24604797]
[207.42071533 -139.35601807]
[201.75793457 -125.46598816]
[196.09513855 -111.57596588]
[198.45510864 -96.86950684]
[186.08052063 -87.01150513]
[180.41773987 -73.12147522]
[174.75495911 -59.23144913]
[186.56848145 -50.90388489]
[196.23234558 -40.14586639]
[203.25726318 -27.49703217]
[207.28648376 -13.59287643]
[208.11383057 0.86718196]
[205.69427490 15.15498447]
[200.14637756 28.55029678]
[191.74650574 40.37711334]
[180.91502380 50.03778458]
[168.19526672 57.04319382]
[154.22633362 61.03754425]
[139.71089172 61.81642151]
[125.37992096 59.33724594]
[119.51096344 73.14142609]
[121.65171051 87.88138580]
[109.13172913 97.55406189]
[109.94163513 102.73652649]
[107.79024506 108.00386810]
[102.87702942 111.67772675]
[96.59967041 125.30104065]
[90.32231140 138.92436218]
[90.54728699 145.53199768]
[87.81209564 150.51354980]
[83.64987183 152.85552979]
[76.96968079 166.28591919]
[70.28948212 179.71629333]
[63.70945740 193.19602966]
[57.22996140 206.72436523]
[50.75046539 220.25271606]
[44.47310638 233.87603760]
[45.95971680 249.62724304]
[33.73155212 258.13143921]
[27.65771866 271.84671021]
[21.58388329 285.56195068]
[15.51004982 299.27722168]
[9.43621635 312.99249268]
[3.77342939 326.88253784]
[-1.47328889 340.93499756]
[-6.72000694 354.98745728]
[-11.96672535 369.03994751]
[-17.21344376 383.09240723]
[-21.82745361 397.36514282]
[-25.79954910 411.82965088]
[-29.77164459 426.29418945]
[-33.74374008 440.75872803]
[-20.24880981 447.41329956]
[-8.25729847 456.50173950]
[1.79730761 467.69555664]
[9.55154133 480.59005737]
[14.72509098 494.71914673]
[17.13093567 509.57205200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 204]
[26 203]
[27 202]
[28 201]
[35 200]
[36 199]
[37 198]
[38 197]
[39 196]
[44 195]
[45 194]
[46 193]
[47 192]
[48 191]
[50 189]
[53 188]
[54 187]
[55 186]
[57 185]
[58 184]
[59 183]
[60 180]
[61 179]
[62 178]
[63 175]
[65 173]
[66 172]
[78 159]
[79 158]
[80 157]
[82 155]
[83 154]
[84 153]
[85 152]
[86 151]
[89 149]
[90 148]
[91 147]
[92 146]
[93 145]
[94 138]
[95 137]
[96 133]
[97 132]
[98 131]
[99 130]
[100 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
