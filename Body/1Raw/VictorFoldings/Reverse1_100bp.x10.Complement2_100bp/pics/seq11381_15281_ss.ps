%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGCGGAUCAAAAUUCUCAUGACGCCGUUCAUGAUAACUGGGUCGCUACCCCCGAAGCUGUACCCGAAAUCCCUCAGUAUUCACCUCAGGCAUUUCUCxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[30.25086021 491.21777344]
[17.93613434 482.25857544]
[10.33573723 469.06182861]
[8.76648235 453.91397095]
[13.50025272 439.43948364]
[23.71689415 428.14611816]
[37.64631271 421.99050903]
[37.64631271 406.99050903]
[37.64631271 391.99050903]
[37.64631271 376.99050903]
[37.64631271 361.99050903]
[29.79397583 374.77099609]
[17.46846962 383.31979370]
[2.74685764 386.19628906]
[-11.89000893 382.91571045]
[-23.97556114 374.03091431]
[-31.47317314 361.03915405]
[-33.11936188 346.12976074]
[-28.63671875 331.81524658]
[-18.78064537 320.50781250]
[-5.21206570 314.11300659]
[9.78247738 313.70843506]
[23.67613983 319.36230469]
[34.12759781 330.12179565]
[39.37583923 344.17544556]
[34.23113632 330.19754028]
[44.47843552 318.14337158]
[47.36370850 303.42346191]
[50.24897766 288.70358276]
[43.76294327 278.49291992]
[46.04624176 266.20590210]
[56.41106796 258.52911377]
[59.51517868 243.85382080]
[58.10089874 241.43350220]
[57.56012344 238.30712891]
[58.16657639 234.80461121]
[60.06961823 231.34875488]
[63.26562881 228.40945435]
[67.23772430 213.94493103]
[71.20982361 199.48040771]
[75.18191528 185.01588440]
[79.04622650 170.52218628]
[82.80252075 156.00012207]
[86.55882263 141.47807312]
[90.31512451 126.95600891]
[92.31913757 112.09048462]
[85.67764282 99.78673553]
[92.68252563 87.68618774]
[92.90585327 72.68785095]
[93.12918091 57.68951416]
[93.35250854 42.69117737]
[93.57583618 27.69284058]
[92.68302155 12.71943378]
[90.67900085 -2.14609408]
[88.67498779 -17.01162148]
[86.67097473 -31.87715149]
[84.66696167 -46.74267960]
[81.47508240 -50.87292862]
[80.30378723 -55.36529541]
[80.95265961 -59.38947678]
[82.92076874 -62.31503296]
[81.58253479 -77.25521851]
[80.24430084 -92.19540405]
[66.31532288 -95.55475616]
[54.12302780 -103.04043579]
[44.85251236 -113.90927887]
[39.40007019 -127.09004211]
[38.28653336 -141.28898621]
[41.60756683 -155.11686707]
[49.02559280 -167.22483826]
[59.80405807 -176.43601990]
[72.88054657 -181.85992432]
[71.76490021 -196.81838989]
[70.64925385 -211.77684021]
[69.53359985 -226.73529053]
[68.19536591 -241.67547607]
[66.63484955 -256.59408569]
[54.22106171 -262.58480835]
[46.45008469 -273.83782959]
[45.26367950 -287.35308838]
[50.86520767 -299.59100342]
[61.69427872 -307.39956665]
[60.35604477 -322.33975220]
[59.01781082 -337.27993774]
[57.67957687 -352.22009277]
[56.34134293 -367.16027832]
[47.51300049 -355.03344727]
[33.27869797 -350.30221558]
[18.94747734 -354.73120117]
[9.86452675 -366.66854858]
[9.41756439 -381.66189575]
[17.77329636 -394.11907959]
[31.81523895 -399.39392090]
[46.30609894 -395.51898193]
[55.84157181 -383.93847656]
[56.28817749 -398.93182373]
[56.73478317 -413.92517090]
[57.18138885 -428.91851807]
[43.08870316 -434.50170898]
[31.75753593 -444.57049561]
[24.55617905 -457.90902710]
[22.35423279 -472.90661621]
[25.41759300 -487.75219727]
[33.37634277 -500.65313721]
[45.26942825 -510.05157471]
[59.66069412 -514.81256104]
[74.81233215 -514.36126709]
[88.89470673 -508.75210571]
[100.20729828 -498.66244507]
[107.38406372 -485.31066895]
[109.55836487 -470.30905151]
[106.46765137 -455.46914673]
[98.48513794 -442.58288574]
[86.57476044 -433.20642090]
[72.17473602 -428.47192383]
[71.72813416 -413.47857666]
[71.28152466 -398.48522949]
[70.83492279 -383.49188232]
[71.28152466 -368.49853516]
[72.61975861 -353.55834961]
[73.95799255 -338.61816406]
[75.29622650 -323.67797852]
[76.63446045 -308.73779297]
[90.98561859 -300.76773071]
[97.82687378 -285.66281128]
[94.28162384 -269.29415894]
[81.55345154 -258.15460205]
[83.11397552 -243.23599243]
[86.19409180 -239.58607483]
[87.01404572 -233.96249390]
[84.49205780 -227.85093689]
[85.60770416 -212.89248657]
[86.72335052 -197.93403625]
[87.83900452 -182.97558594]
[103.04614258 -178.89732361]
[115.95944977 -169.84297180]
[125.00706482 -156.89218140]
[129.08000183 -141.60029602]
[127.66806793 -125.81145477]
[120.92366028 -111.43629456]
[109.64558411 -100.22065735]
[95.18448639 -93.53363800]
[96.52272034 -78.59345245]
[97.86095428 -63.65326691]
[99.53249359 -48.74669266]
[101.53650665 -33.88116455]
[103.54051971 -19.01563644]
[105.54453278 -4.15010786]
[107.54854584 10.71542072]
[114.70045471 -2.46980548]
[127.43485260 -10.39667225]
[142.42298889 -10.99311638]
[155.74700928 -4.10322809]
[163.92404175 8.47199154]
[164.81661987 23.44541168]
[158.19145203 36.90301514]
[145.78031921 45.32701492]
[130.82746887 46.51539993]
[117.24153900 40.15753174]
[108.57417297 27.91616821]
[108.35084534 42.91450500]
[108.12751770 57.91284180]
[107.90419006 72.91117859]
[107.68086243 87.90951538]
[114.32235718 100.21326447]
[107.31747437 112.31381226]
[114.77011871 99.29620361]
[126.18080139 89.55986023]
[140.20899963 84.24859619]
[155.20671082 83.98638153]
[169.41200256 88.80400848]
[181.15606689 98.13551331]
[189.05920410 110.88464355]
[192.19299316 125.55364227]
[190.18923950 140.41920471]
[183.28337097 153.73493958]
[172.28666687 163.93653870]
[158.49101257 169.82551575]
[143.51712036 170.71005249]
[129.12409973 166.48622131]
[117.00281525 157.65023804]
[108.57727814 145.24014282]
[104.83718872 130.71231079]
[101.08088684 145.23437500]
[97.32458496 159.75642395]
[93.56828308 174.27848816]
[94.44896698 183.37036133]
[89.64643860 188.98797607]
[85.67434692 203.45249939]
[81.70224762 217.91702271]
[77.73015594 232.38154602]
[74.19048309 246.95793152]
[71.08637238 261.63323975]
[77.19879150 279.00332642]
[64.96887207 291.58886719]
[62.08359909 306.30874634]
[59.19832611 321.02862549]
[64.13665771 336.05938721]
[54.09572983 347.06069946]
[52.64631271 361.99050903]
[52.64631271 376.99050903]
[52.64631271 391.99050903]
[52.64631271 406.99050903]
[52.64631271 421.99050903]
[66.57572937 428.14611816]
[76.79237366 439.43948364]
[81.52614594 453.91397095]
[79.95688629 469.06182861]
[72.35649109 482.25857544]
[60.04176712 491.21777344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 204]
[8 203]
[9 202]
[10 201]
[11 200]
[25 199]
[27 197]
[28 196]
[29 195]
[32 193]
[33 192]
[38 191]
[39 190]
[40 189]
[41 188]
[42 186]
[43 185]
[44 184]
[45 183]
[46 166]
[48 164]
[49 163]
[50 162]
[51 161]
[52 160]
[53 149]
[54 148]
[55 147]
[56 146]
[57 145]
[61 144]
[62 143]
[63 142]
[72 134]
[73 133]
[74 132]
[75 131]
[76 128]
[77 127]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
[95 118]
[96 117]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
