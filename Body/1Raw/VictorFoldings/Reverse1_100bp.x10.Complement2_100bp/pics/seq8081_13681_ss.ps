%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxGGGAUGAUUUGGGGUAAUUUGCGGACCGUCGGCCUUCGGAUAAGCGUCCUAAAGAGUAAUGAUUGUUGUAAAGGGGGCGUAGGGGGAAGGUUUGUUGUUA\
) } def
/len { sequence length } bind def

/coor [
[53.41719818 707.07708740]
[40.10112000 714.00970459]
[26.16094398 719.58197021]
[11.73521423 723.73852539]
[-3.03269243 726.43804932]
[-17.99600410 727.65374756]
[-33.00600433 727.37353516]
[-47.91350937 725.60015869]
[-62.57036591 722.35125732]
[-76.83089447 717.65917969]
[-90.55337524 711.57049561]
[-103.60140991 704.14569092]
[-115.84532928 695.45861816]
[-127.16343689 685.59564209]
[-137.44325256 674.65466309]
[-146.58259583 662.74456787]
[-154.49064636 649.98364258]
[-161.08880615 636.49871826]
[-166.31149292 622.42382812]
[-170.10681152 607.89892578]
[-172.43702698 593.06823730]
[-173.27897644 578.07922363]
[-172.62431335 563.08093262]
[-170.47953796 548.22229004]
[-166.86593628 533.65106201]
[-161.81947327 519.51202393]
[-155.39025879 505.94577026]
[-147.64221191 493.08706665]
[-138.65234375 481.06372070]
[-128.50999451 469.99523926]
[-117.31596375 459.99160767]
[-105.18151093 451.15228271]
[-92.22723389 443.56512451]
[-78.58187866 437.30548096]
[-64.38107300 432.43560791]
[-49.76594162 429.00390625]
[-34.88174820 427.04449463]
[-19.87642097 426.57678223]
[-4.89909124 427.60549927]
[9.90138340 430.12036133]
[13.87347889 415.65582275]
[17.84557533 401.19131470]
[21.81767082 386.72677612]
[16.47243309 370.01165771]
[29.68094444 357.18136597]
[33.43724442 342.65930176]
[37.19354630 328.13723755]
[40.94984818 313.61517334]
[44.59793472 299.06555176]
[48.13760757 284.48919678]
[43.62218094 270.29553223]
[54.39750290 258.71090698]
[57.93717575 244.13455200]
[61.47684860 229.55816650]
[55.45321274 219.06806946]
[58.28287888 206.89527893]
[68.98015594 199.68894958]
[72.73645020 185.16690063]
[76.27612305 170.59051514]
[71.54987335 156.46565247]
[82.15152740 144.72190857]
[85.47379303 130.09445190]
[88.79605103 115.46698761]
[81.16312408 103.15095520]
[84.37232208 89.02129364]
[96.57649231 81.21075439]
[99.89875031 66.58329010]
[103.22100830 51.95582962]
[106.43428040 37.30404282]
[101.72028351 22.20143509]
[111.92388916 11.35082626]
[115.02799988 -3.32447600]
[118.13211060 -17.99977875]
[121.23622131 -32.67507935]
[115.12380219 -50.04516602]
[127.35372162 -62.63071060]
[130.23899841 -77.35060120]
[125.30066681 -92.38134766]
[135.34158325 -103.38267517]
[138.22686768 -118.10256195]
[128.04145813 -123.96533203]
[119.91654205 -132.42985535]
[114.49336243 -142.81251526]
[112.19554901 -154.27899170]
[113.19610596 -165.91122437]
[117.40435028 -176.78097534]
[124.47409821 -186.02384949]
[133.83206177 -192.90809631]
[144.72434998 -196.89248657]
[156.27719116 -197.66886902]
[160.03349304 -212.19093323]
[163.78979492 -226.71298218]
[166.78456116 -241.41099548]
[169.00967407 -256.24502563]
[171.23480225 -271.07907104]
[173.45991516 -285.91311646]
[175.68502808 -300.74716187]
[170.08047485 -315.54241943]
[179.62014771 -326.98110962]
[181.84526062 -341.81515503]
[168.13746643 -348.16128540]
[156.77375793 -358.11331177]
[148.67533875 -370.86447144]
[144.49870300 -385.38110352]
[144.58242798 -400.48638916]
[148.91973877 -414.95581055]
[157.15902710 -427.61642456]
[168.63235474 -437.44183350]
[182.40965271 -443.63562012]
[197.37405396 -445.69561768]
[212.31245422 -443.45483398]
[226.01385498 -437.09494019]
[237.36755371 -427.13153076]
[245.45317078 -414.37222290]
[249.61521912 -399.85140991]
[249.51632690 -384.74621582]
[245.16447449 -370.28115845]
[236.91247559 -357.62884521]
[225.42927551 -347.81494141]
[211.64576721 -341.63500977]
[196.67930603 -339.59005737]
[194.45419312 -324.75601196]
[200.21791077 -311.02178955]
[190.51907349 -298.52206421]
[188.29396057 -283.68801880]
[186.06884766 -268.85397339]
[183.84371948 -254.01991272]
[181.61860657 -239.18586731]
[193.62887573 -248.17216492]
[208.61203003 -247.46160889]
[219.71798706 -237.37905884]
[221.86924744 -222.53411865]
[214.08227539 -209.71369934]
[199.91717529 -204.77912903]
[185.85005188 -209.98641968]
[178.31184387 -222.95668030]
[174.55554199 -208.43463135]
[170.79924011 -193.91256714]
[185.36201477 -182.66300964]
[193.55871582 -166.13061523]
[193.69750977 -147.62736511]
[185.70581055 -130.88186646]
[171.15394592 -119.28804016]
[152.94674683 -115.21729279]
[150.06147766 -100.49739838]
[155.20617676 -86.51951599]
[144.95889282 -74.46532440]
[142.07360840 -59.74543762]
[148.55964661 -49.53476334]
[146.27635193 -37.24776459]
[135.91152954 -29.57097054]
[132.80741882 -14.89566803]
[129.70330811 -0.22036588]
[126.59918976 14.45493698]
[131.53521729 28.50786972]
[121.10958862 40.40815353]
[122.80085754 47.60269547]
[117.84847260 55.27809143]
[114.52620697 69.90554810]
[111.20394897 84.53301239]
[118.83687592 96.84904480]
[115.62767792 110.97870636]
[103.42350769 118.78924561]
[100.10124969 133.41670227]
[96.77899170 148.04417419]
[101.26760864 163.21528625]
[90.90358734 173.91278076]
[92.49108124 180.33082581]
[90.84598541 185.77056885]
[87.25851440 188.92318726]
[83.50221252 203.44525146]
[88.83292389 221.07095337]
[76.05322266 233.09783936]
[72.51354980 247.67422485]
[68.97387695 262.25057983]
[73.23612976 277.48684692]
[62.71398163 288.02886963]
[59.17430878 302.60522461]
[60.19025803 311.68298340]
[55.47190475 317.37149048]
[51.71560669 331.89355469]
[47.95930481 346.41558838]
[44.20300293 360.93765259]
[50.06440735 372.42709351]
[46.63681030 384.44522095]
[36.28219604 390.69888306]
[32.31010056 405.16342163]
[28.33800316 419.62792969]
[24.36590767 434.09246826]
[38.37504959 439.48898315]
[51.77725220 446.25357056]
[64.43930817 454.31900024]
[76.23537445 463.60507202]
[87.04821014 474.01953125]
[96.77035522 485.45889282]
[105.30518341 497.80938721]
[112.56787109 510.94836426]
[118.48622894 524.74517822]
[123.00144196 539.06268311]
[126.06863403 553.75860596]
[127.65732574 568.68695068]
[127.75171661 583.69927979]
[126.35086823 598.64636230]
[123.46871948 613.37976074]
[119.13390350 627.75292969]
[113.38949585 641.62304688]
[106.29260254 654.85229492]
[97.91375732 667.30914307]
[88.33621979 678.86981201]
[77.65519714 689.41943359]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 189]
[41 188]
[42 187]
[43 186]
[45 183]
[46 182]
[47 181]
[48 180]
[49 178]
[50 177]
[52 175]
[53 174]
[54 173]
[57 171]
[58 170]
[59 167]
[61 165]
[62 164]
[63 163]
[66 160]
[67 159]
[68 158]
[69 156]
[71 154]
[72 153]
[73 152]
[74 151]
[76 148]
[77 147]
[79 145]
[80 144]
[90 138]
[91 137]
[92 136]
[93 128]
[94 127]
[95 126]
[96 125]
[97 124]
[99 122]
[100 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
