%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCAAUCAACACCGUUAUUUUUACUAAUUCCUAUGAUCAUAUUCUCUAGUCCAAGCAGGAAAUCACAACACAUACCAAUAGUAAACAAAACUCCAAxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[135.22830200 353.38204956]
[146.01406860 342.89480591]
[158.54333496 334.56820679]
[152.67437744 320.76403809]
[146.80540466 306.95986938]
[140.93644714 293.15570068]
[135.06748962 279.35150146]
[129.19853210 265.54733276]
[123.32956696 251.74316406]
[117.81958008 246.81753540]
[117.47768402 237.68949890]
[103.69205475 232.16754150]
[97.75131989 218.16174316]
[103.63672638 203.73954773]
[97.97393799 189.84951782]
[92.31114960 175.95950317]
[91.21702576 190.91954041]
[87.26431274 205.38937378]
[80.60079956 218.82803345]
[71.47560120 230.73310852]
[60.22986603 240.65950012]
[47.28403091 248.23612976]
[33.12207794 253.17973328]
[18.27346992 255.30548096]
[3.29332685 254.53390503]
[-11.25830460 250.89384460]
[-24.83740234 244.52139282]
[-36.93630219 235.65478516]
[-47.10267258 224.62551880]
[-54.95644379 211.84591675]
[-60.20399475 197.79374695]
[-62.64913940 182.99438477]
[-62.20046997 168.00109863]
[-58.87475204 153.37442017]
[-52.79632568 139.66119385]
[-44.19243240 127.37407684]
[-33.38474274 116.97245789]
[-20.77730370 108.84518433]
[-6.84145641 103.29611969]
[7.90179825 100.53270721]
[22.90127182 100.65826416]
[37.59619904 103.66809845]
[51.43720245 109.44968414]
[63.90681839 117.78686523]
[74.53886414 128.36796570]
[82.93585968 140.79737854]
[88.78204346 154.60462952]
[89.67485809 139.63121033]
[90.56768036 124.65781403]
[91.46049500 109.68441010]
[84.01654053 122.70698547]
[73.70812225 133.60360718]
[61.11822128 141.75802612]
[46.95886993 146.70906067]
[32.03084564 148.17671204]
[17.17839241 146.07797241]
[3.24149680 140.53153992]
[-8.99164581 131.85108948]
[-18.82919121 120.52754211]
[-25.71477699 107.20130157]
[-29.25899315 92.62602997]
[-29.26139450 77.62602997]
[-25.72184563 63.04962921]
[-18.84052658 49.72118378]
[-9.00660801 38.39448547]
[3.22375441 29.71011925]
[17.15887451 24.15922356]
[32.01065063 22.05572891]
[46.93914795 23.51860046]
[61.10008621 28.46510315]
[73.69258881 36.61548615]
[84.00450134 47.50881195]
[91.45262146 60.52900696]
[95.61573029 74.93971252]
[96.25830841 89.92700958]
[102.33213806 76.21174622]
[108.40597534 62.49647903]
[114.47980499 48.78121185]
[120.55364227 35.06594467]
[126.62747192 21.35067940]
[132.70130920 7.63541269]
[138.77514648 -6.07985401]
[142.09739685 -20.70731354]
[142.54400635 -35.70066452]
[142.99061584 -50.69401550]
[140.19824219 -56.68685913]
[140.76628113 -62.34144592]
[143.68034363 -66.12525940]
[144.57316589 -81.09867096]
[145.46597290 -96.07207489]
[146.35879517 -111.04547882]
[147.25160217 -126.01888275]
[147.92138672 -141.00392151]
[148.36799622 -155.99726868]
[148.81460571 -170.99063110]
[148.92626953 -185.99020386]
[148.70294189 -200.98854065]
[148.47961426 -215.98687744]
[148.25628662 -230.98521423]
[134.57086182 -237.83851624]
[125.64731598 -250.27349854]
[123.53621674 -265.43270874]
[128.72268677 -279.83267212]
[140.01490784 -290.16439819]
[154.81802368 -294.05371094]
[169.73036194 -290.60687256]
[181.32519531 -280.61593628]
[186.93809509 -266.37677002]
[185.27929688 -251.16143799]
[176.72993469 -238.46626282]
[163.25462341 -231.20854187]
[163.47795105 -216.21020508]
[163.70127869 -201.21186829]
[163.92460632 -186.21353149]
[166.18640137 -183.50860596]
[167.25039673 -179.57377625]
[166.55282593 -174.98391724]
[163.80795288 -170.54402161]
[163.36134338 -155.55067444]
[162.91474915 -140.55731201]
[165.47961426 -136.52861023]
[165.54090881 -130.84590149]
[162.22500610 -125.12606812]
[161.33219910 -110.15266418]
[160.43937683 -95.17926025]
[159.54656982 -80.20585632]
[158.65374756 -65.23244476]
[157.98396301 -50.24740982]
[157.53735352 -35.25405884]
[157.09075928 -20.26070786]
[164.11758423 -33.51301193]
[173.88238525 -44.89934921]
[185.90870667 -53.86415863]
[199.60974121 -59.97002411]
[214.31700134 -62.91902924]
[229.31286621 -62.56728363]
[243.86567688 -58.93195343]
[257.26538086 -52.19041061]
[268.85812378 -42.67159271]
[278.07833862 -30.83994102]
[284.47607422 -17.27274895]
[287.73925781 -2.63199210]
[287.70858765 12.36797619]
[284.38562012 26.99527550]
[277.93246460 40.53620529]
[268.66400146 52.33007431]
[257.03240967 61.80143356]
[243.60530090 68.48815155]
[229.03775024 72.06398010]
[214.04055786 72.35443115]
[199.34547424 69.34533691]
[185.66950989 63.18352509]
[173.67994690 54.16963959]
[163.96176147 42.74348831]
[156.98913574 29.46257782]
[153.10229492 14.97491264]
[152.49040222 -0.00602013]
[146.41658020 13.70924664]
[140.34274292 27.42451286]
[134.26890564 41.13977814]
[128.19506836 54.85504532]
[122.12123871 68.57031250]
[116.04740906 82.28558350]
[109.97357178 96.00084686]
[106.43389893 110.57722473]
[105.54108429 125.55062866]
[104.64826965 140.52403259]
[103.75545502 155.49743652]
[106.20117950 170.29670715]
[111.86396790 184.18673706]
[117.52674866 198.07676697]
[131.81809998 204.27316284]
[137.36309814 218.44029236]
[131.36770630 232.02671814]
[137.13374329 245.87419128]
[143.00270081 259.67837524]
[148.87167358 273.48254395]
[154.74063110 287.28674316]
[160.60958862 301.09091187]
[166.47854614 314.89508057]
[172.34750366 328.69924927]
[187.03697205 325.45358276]
[202.07270813 324.96258545]
[216.94262695 327.24301147]
[231.14024353 332.21716309]
[244.18202209 339.71560669]
[255.62371826 349.48300171]
[265.07568359 361.18664551]
[272.21594238 374.42791748]
[276.80133057 388.75582886]
[278.67565918 403.68237305]
[277.77508545 418.69915771]
[274.13031006 433.29470825]
[267.86541748 446.97189331]
[259.19384766 459.26492310]
[248.41091919 469.75506592]
[235.88389587 478.08505249]
[222.03944397 483.97113037]
[207.34910583 487.21282959]
[192.31323242 487.69976807]
[177.44393921 485.41534424]
[163.24765015 480.43737793]
[150.20791626 472.93539429]
[138.76884460 463.16491699]
[129.32003784 451.45874023]
[122.18334198 438.21554565]
[117.60182190 423.88638306]
[115.73151398 408.95935059]
[116.63613129 393.94281006]
[120.28485870 379.34823608]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 181]
[4 180]
[5 179]
[6 178]
[7 177]
[8 176]
[9 175]
[11 174]
[14 171]
[15 170]
[16 169]
[47 168]
[48 167]
[49 166]
[50 165]
[75 164]
[76 163]
[77 162]
[78 161]
[79 160]
[80 159]
[81 158]
[82 157]
[83 130]
[84 129]
[85 128]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[93 120]
[94 119]
[95 118]
[96 114]
[97 113]
[98 112]
[99 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
