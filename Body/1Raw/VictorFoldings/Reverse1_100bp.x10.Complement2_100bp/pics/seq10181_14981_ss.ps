%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCAUUUUCCUCCCGUUAAAGAUCUAGUUUAUUAUUCUUCCAUUAUCGAUGAUUCUUCUUAAAAUACCUCUUUCCCUGCGCCCGCCCCCUAUAUCCCAGxxxxxxxxxxAGGCGAUGGAAGUGCGGUUACCGCGGAGUUAUAAGAAAUAGACGGAGAAGGAUGUGUAGCCCGCUCCGGAUAUAAUGCCUAGUAAAGAGAUGAGUCUUUG\
) } def
/len { sequence length } bind def

/coor [
[29.35804367 689.88385010]
[32.00178528 704.75622559]
[30.34703255 719.77081299]
[24.52793121 733.71051025]
[15.01621246 745.44525146]
[2.58294511 754.02374268]
[-11.76395988 758.75054932]
[-26.86146355 759.24255371]
[-41.48567963 755.45983887]
[-54.45108795 747.70904541]
[-64.70663452 736.61846924]
[-71.42095947 723.08728027]
[-74.04975891 708.21221924]
[-72.37992859 693.19927979]
[-66.54682159 679.26544189]
[-57.02332306 667.54028320]
[-44.58144379 658.97430420]
[-30.22979546 654.26190186]
[-15.13180637 653.78503418]
[-11.37550545 639.26300049]
[-7.61920452 624.74090576]
[-3.86290407 610.21887207]
[-0.10660338 595.69677734]
[3.21565604 581.06933594]
[6.10092878 566.34942627]
[8.98620129 551.62957764]
[2.50016379 541.41888428]
[4.78346300 529.13189697]
[15.14829063 521.45507812]
[18.25240135 506.77978516]
[21.35651016 492.10449219]
[24.46062088 477.42919922]
[10.65655994 483.29843140]
[-2.61083221 476.30010986]
[-5.56132746 461.59317017]
[3.98006964 450.01898193]
[18.97979546 450.10961914]
[28.38022804 461.79666138]
[32.56724167 447.39288330]
[23.84502220 433.01367188]
[28.30912399 416.44906616]
[43.66872406 408.07635498]
[47.64082336 393.61184692]
[51.61291885 379.14730835]
[55.58501434 364.68280029]
[59.55710983 350.21826172]
[63.52920532 335.75375366]
[67.17729187 321.20413208]
[70.49955750 306.57666016]
[62.36915207 294.14959717]
[65.53002167 279.26794434]
[78.61980438 270.82427979]
[80.84492493 255.99024963]
[81.96057129 241.03178406]
[83.07622528 226.07333374]
[84.19187164 211.11488342]
[85.30751801 196.15643311]
[86.42316437 181.19798279]
[87.53881836 166.23951721]
[88.65446472 151.28106689]
[74.67099762 146.00990295]
[62.73814011 137.01382446]
[53.82196045 125.02114868]
[48.64430237 111.00279236]
[47.62434006 96.09365845]
[50.84465408 81.50077820]
[58.04452896 68.40557861]
[68.64106750 57.86822128]
[81.77639771 50.74180984]
[96.38708496 47.60328293]
[97.50273132 32.64482880]
[98.61837769 17.68637466]
[99.73402405 2.72792196]
[86.67983246 -8.02772808]
[82.64879608 -24.28355789]
[89.03728485 -39.58548355]
[103.14478302 -47.97929382]
[104.03759766 -62.95269775]
[97.13542175 -77.18893433]
[105.61653900 -89.43311310]
[106.50935364 -104.40651703]
[107.40217590 -119.37992096]
[107.73715210 -134.37617493]
[107.51382446 -149.37451172]
[107.29049683 -164.37286377]
[107.06716919 -179.37120056]
[106.73219299 -194.36744690]
[96.69343567 -209.80458069]
[105.60804749 -224.92068481]
[104.93826294 -239.90571594]
[102.12758636 -244.30426025]
[101.36175537 -248.88322449]
[102.36705780 -252.83346558]
[104.58832550 -255.57176208]
[104.58832550 -270.57177734]
[104.58832550 -285.57177734]
[104.47666168 -300.57135010]
[104.25333405 -315.56967163]
[90.23381042 -321.51721191]
[79.85015869 -332.65719604]
[74.90140533 -347.05963135]
[76.24495697 -362.22915649]
[83.64803314 -375.53759766]
[95.82800293 -384.67916870]
[110.67462158 -388.07000732]
[125.61560822 -385.12271118]
[138.06236267 -376.34783936]
[145.85839844 -363.26571655]
[147.65299988 -348.14291382]
[143.13526917 -333.59951782]
[133.08789062 -322.15530396]
[119.25167084 -315.79299927]
[119.47499847 -300.79467773]
[122.71773529 -294.15341187]
[119.58832550 -285.57177734]
[119.58832550 -270.57177734]
[119.58832550 -255.57176208]
[119.92330170 -240.57550049]
[120.59308624 -225.59046936]
[129.30545044 -217.19871521]
[129.98609924 -204.71992493]
[121.72554016 -194.81405640]
[125.06679535 -188.22180176]
[122.06550598 -179.59452820]
[122.28883362 -164.59619141]
[122.51216125 -149.59783936]
[122.73548889 -134.59950256]
[134.89677429 -143.38035583]
[149.38465881 -139.49436951]
[155.51924133 -125.80615997]
[148.77830505 -112.40616608]
[134.13104248 -109.17236328]
[122.37557983 -118.48710632]
[121.48276520 -103.51370239]
[120.58995056 -88.54029846]
[127.55599213 -75.37505341]
[119.01100922 -62.05988312]
[118.11818695 -47.08647537]
[129.17495728 -39.60382080]
[135.13836670 -27.53808784]
[134.35488892 -13.99350357]
[126.92239380 -2.51410556]
[114.69248199 3.84357071]
[113.57683563 18.80202484]
[112.46118164 33.76047897]
[111.34553528 48.71892929]
[125.32900238 53.99010086]
[137.26185608 62.98617554]
[146.17803955 74.97885132]
[151.35569763 88.99720764]
[152.37565613 103.90634155]
[149.15534973 118.49922180]
[141.95547485 131.59442139]
[131.35893250 142.13177490]
[118.22360229 149.25819397]
[103.61291504 152.39671326]
[102.49726868 167.35517883]
[101.38162231 182.31362915]
[100.26597595 197.27207947]
[99.15032196 212.23052979]
[98.03467560 227.18898010]
[96.91902924 242.14744568]
[95.80337524 257.10589600]
[105.52902985 245.68609619]
[119.62816620 240.56608582]
[134.41528320 243.08421326]
[146.02508545 252.58222961]
[151.42279053 266.57739258]
[149.19744873 281.41140747]
[139.93077087 293.20669556]
[126.04502106 298.87997437]
[111.16992188 296.94827271]
[99.19377899 287.91656494]
[93.24726868 274.14654541]
[101.40543365 287.41613770]
[97.82781982 302.20312500]
[85.12701416 309.89892578]
[81.80475616 324.52639771]
[83.35032654 329.51220703]
[82.87628937 334.13049316]
[80.86082458 337.67349243]
[77.99372864 339.72583008]
[74.02163696 354.19036865]
[70.04953766 368.65487671]
[66.07743835 383.11941528]
[62.10534668 397.58392334]
[58.13325119 412.04846191]
[66.09851074 422.90982056]
[66.35025024 436.18185425]
[59.02057266 447.01504517]
[46.97102356 451.57989502]
[42.78401184 465.98367310]
[39.13592148 480.53329468]
[36.03181458 495.20861816]
[32.92770386 509.88391113]
[29.82359314 524.55920410]
[35.93601608 541.92932129]
[23.70609283 554.51483154]
[20.82081985 569.23474121]
[17.93554688 583.95458984]
[19.48811531 588.00970459]
[19.65296745 591.95141602]
[18.63612938 595.35748291]
[16.75962448 597.91589355]
[14.41545582 599.45312500]
[10.65915489 613.97515869]
[6.90285444 628.49725342]
[3.14655375 643.01928711]
[-0.60974681 657.54132080]
[12.36344051 665.27911377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 209]
[20 208]
[21 207]
[22 206]
[23 205]
[24 200]
[25 199]
[26 198]
[29 196]
[30 195]
[31 194]
[32 193]
[38 192]
[39 191]
[42 187]
[43 186]
[44 185]
[45 184]
[46 183]
[47 182]
[48 178]
[49 177]
[52 174]
[53 163]
[54 162]
[55 161]
[56 160]
[57 159]
[58 158]
[59 157]
[60 156]
[70 146]
[71 145]
[72 144]
[73 143]
[77 138]
[78 137]
[80 135]
[81 134]
[82 133]
[83 127]
[84 126]
[85 125]
[86 124]
[87 122]
[89 119]
[90 118]
[94 117]
[95 116]
[96 115]
[97 113]
[98 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
