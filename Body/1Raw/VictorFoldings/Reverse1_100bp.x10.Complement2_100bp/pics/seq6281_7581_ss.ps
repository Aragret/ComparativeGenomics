%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGAAUUACCGUGUACGUCGCGUUCAUCCAGAUGUUCUGCGAUGAAGGGGAUAGUAUCUUCUCGAAUAGUGGAAAGUACUAGUGCGGGAGUAUUAGUAAAAG\
) } def
/len { sequence length } bind def

/coor [
[130.89561462 616.03387451]
[121.47428894 604.23803711]
[115.58586121 590.33734131]
[113.66729736 575.36334229]
[115.86096954 560.42712402]
[122.00408173 546.63708496]
[131.64079285 535.01660156]
[144.05596924 526.42785645]
[158.32833862 521.50830078]
[157.43553162 506.53491211]
[156.54270935 491.56152344]
[155.64990234 476.58810425]
[154.75708008 461.61471558]
[153.53010559 446.66497803]
[151.96958923 431.74636841]
[142.77319336 423.88806152]
[141.35099792 411.47189331]
[149.00729370 401.09191895]
[140.16537476 389.10571289]
[146.64062500 374.67025757]
[145.30239868 359.73007202]
[133.74362183 350.40643311]
[132.17362976 335.27404785]
[142.03149414 323.21334839]
[140.69325256 308.27316284]
[139.35502625 293.33297729]
[138.01678467 278.39279175]
[136.67855835 263.45260620]
[135.22914124 248.52279663]
[133.66860962 233.60418701]
[130.56449890 218.92889404]
[125.95049286 204.65615845]
[121.33648682 190.38342285]
[116.72247314 176.11068726]
[112.10846710 161.83795166]
[107.49445343 147.56521606]
[102.88044739 133.29248047]
[98.26643372 119.01975250]
[85.41411591 112.32916260]
[80.95713043 98.54215240]
[87.46083069 85.59425354]
[82.74069214 71.35626984]
[77.91469574 57.15381241]
[72.66797638 43.10134125]
[67.00519562 29.21131325]
[61.34240723 15.32128620]
[47.05106354 9.12489414]
[41.50606155 -5.04223680]
[47.50144577 -18.62866211]
[41.83866119 -32.51868820]
[36.17587280 -46.40871429]
[30.51308632 -60.29874420]
[15.37430096 -62.48149872]
[3.43947911 -71.88665009]
[-2.14811659 -85.90966797]
[0.01911329 -100.74742889]
[9.26004124 -112.42950439]
[3.59725475 -126.31952667]
[-2.06553173 -140.20954895]
[-14.44011402 -150.06756592]
[-12.08014870 -164.77401733]
[-17.74293518 -178.66404724]
[-29.30708313 -184.37660217]
[-33.73767853 -196.06221008]
[-29.16952705 -207.26304626]
[-34.62488556 -221.23583984]
[-40.08024216 -235.20863342]
[-54.61722946 -231.43870544]
[-69.49806976 -229.41461182]
[-84.51385498 -229.16476440]
[-99.45379639 -230.69268799]
[-114.10815430 -233.97689819]
[-128.27120972 -238.97132874]
[-141.74412537 -245.60585022]
[-154.33778381 -253.78732300]
[-165.87535095 -263.40087891]
[-176.19490051 -274.31158447]
[-185.15153503 -286.36624146]
[-192.61952209 -299.39566040]
[-198.49403381 -313.21688843]
[-202.69258118 -327.63592529]
[-205.15625000 -342.45034790]
[-205.85043335 -357.45214844]
[-204.76539612 -372.43075562]
[-201.91635132 -387.17590332]
[-197.34332275 -401.48059082]
[-191.11050415 -415.14398193]
[-183.30537415 -427.97427368]
[-174.03752136 -439.79135132]
[-163.43704224 -450.42932129]
[-151.65275574 -459.73883057]
[-138.85009766 -467.58920288]
[-125.20880127 -473.87020874]
[-110.92035675 -478.49371338]
[-96.18536377 -481.39477539]
[-81.21066284 -482.53271484]
[-66.20648956 -481.89147949]
[-51.38347626 -479.48013306]
[-36.94971466 -475.33251953]
[-23.10782623 -469.50683594]
[-10.05213642 -462.08486938]
[2.03407598 -453.17086792]
[12.98113918 -442.88989258]
[22.63537407 -431.38632202]
[30.86124802 -418.82162476]
[37.54328537 -405.37222290]
[42.58768082 -391.22689819]
[45.92361450 -376.58422852]
[47.50426102 -361.64978027]
[47.30743027 -346.63317871]
[45.33588028 -331.74530029]
[41.61729050 -317.19509888]
[36.20386505 -303.18682861]
[29.17160034 -289.91717529]
[20.61921692 -277.57241821]
[10.66677952 -266.32586670]
[-0.54599679 -256.33535767]
[-12.86170292 -247.74119568]
[-26.10744476 -240.66400146]
[-20.65208626 -226.69119263]
[-15.19672966 -212.71839905]
[-0.92479503 -202.50669861]
[-3.85290837 -184.32682800]
[1.80987823 -170.43679810]
[13.77942085 -161.57231140]
[11.82449532 -145.87234497]
[17.48728180 -131.98231506]
[23.15006828 -118.09228516]
[37.92466736 -116.20104218]
[49.84821320 -107.10791016]
[55.65774536 -93.17536926]
[53.70060730 -78.10664368]
[44.40311432 -65.96153259]
[50.06589890 -52.07150269]
[55.72868729 -38.18147659]
[61.39147186 -24.29144859]
[75.17710114 -18.76948929]
[81.11784363 -4.76369619]
[75.23242950 9.65849972]
[80.89521790 23.54852676]
[86.55800629 37.43855286]
[89.08653259 38.64879990]
[91.28801727 40.93354797]
[92.75079346 44.17325211]
[93.11404419 48.10168457]
[92.11715698 52.32781219]
[96.94315338 66.53026581]
[102.07152557 71.85207367]
[101.73356628 80.98024750]
[114.58588409 87.67083740]
[119.04286957 101.45784760]
[112.53916931 114.40574646]
[117.15318298 128.67848206]
[121.76718903 142.95121765]
[126.38119507 157.22393799]
[130.99520874 171.49667358]
[135.60922241 185.76940918]
[140.22322083 200.04214478]
[144.83723450 214.31488037]
[148.11271667 199.67687988]
[156.67761230 187.36254883]
[169.26138306 179.19866943]
[183.99726868 176.39628601]
[198.69932556 179.37112427]
[211.18656921 187.68190002]
[219.60659790 200.09571838]
[222.71034241 214.77110291]
[220.03739929 229.53102112]
[211.98426819 242.18594360]
[199.74557495 250.85858154]
[185.13688660 254.26240540]
[170.32528687 251.89245605]
[157.50799561 244.10034180]
[148.58721924 232.04367065]
[150.14773560 246.96226501]
[154.15295410 255.17178345]
[151.61874390 262.11437988]
[152.95697021 277.05456543]
[154.29521179 291.99475098]
[155.63343811 306.93493652]
[156.97167969 321.87512207]
[168.81604004 331.99188232]
[169.96035767 347.16241455]
[160.24258423 358.39184570]
[161.58081055 373.33203125]
[170.51844788 386.38690186]
[163.94747925 399.75369263]
[174.88726807 414.56594849]
[166.88818359 430.18585205]
[168.44871521 445.10446167]
[171.51620483 449.32791138]
[172.55322266 453.85314941]
[171.78483582 457.85623169]
[169.73048401 460.72189331]
[170.62330627 475.69528198]
[171.51611328 490.66870117]
[172.40893555 505.64212036]
[173.30175781 520.61553955]
[188.05758667 523.80419922]
[201.40541077 530.85675049]
[212.35472107 541.24975586]
[220.09298706 554.21209717]
[224.04600525 568.78179932]
[223.92041016 583.87774658]
[219.72554016 598.37963867]
[211.77267456 611.21142578]
[200.65197754 621.42083740]
[187.18865967 628.25036621]
[172.38182068 631.19305420]
[157.33018494 630.03070068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 198]
[10 197]
[11 196]
[12 195]
[13 194]
[14 190]
[15 189]
[18 187]
[20 185]
[21 184]
[24 181]
[25 180]
[26 179]
[27 178]
[28 177]
[29 175]
[30 174]
[31 159]
[32 158]
[33 157]
[34 156]
[35 155]
[36 154]
[37 153]
[38 152]
[41 149]
[42 147]
[43 146]
[44 141]
[45 140]
[46 139]
[49 136]
[50 135]
[51 134]
[52 133]
[57 128]
[58 127]
[59 126]
[61 124]
[62 123]
[65 121]
[66 120]
[67 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
