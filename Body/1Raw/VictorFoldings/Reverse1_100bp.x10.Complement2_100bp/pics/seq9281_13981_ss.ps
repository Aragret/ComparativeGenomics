%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxGGGAUGAGGAGGAUCUGGAUUGGACUGAUCUUUUCGAUAAUGGAUUUUGUUAAAGUGUCGUGGUUUAGAGGUGGAGGUAGUAGUGGAGUUGGGUUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[37.99985123 470.80471802]
[33.32202148 485.07476807]
[27.01913261 498.70526123]
[19.17642975 511.51184082]
[9.89997292 523.32135010]
[-0.68478352 533.97399902]
[-12.43469238 543.32580566]
[-25.19084930 551.25024414]
[-38.78074265 557.64019775]
[-53.02058411 562.40917969]
[-67.71779633 565.49279785]
[-82.67362213 566.84924316]
[-97.68578339 566.46020508]
[-112.55127716 564.33093262]
[-127.06906128 560.49029541]
[-141.04278564 554.99017334]
[-154.28349304 547.90496826]
[-166.61209106 539.33044434]
[-177.86187744 529.38262939]
[-187.88069153 518.19604492]
[-196.53305054 505.92196655]
[-203.70193481 492.72637939]
[-209.29039001 478.78771973]
[-213.22285461 464.29455566]
[-215.44613647 449.44284058]
[-215.93017578 434.43344116]
[-214.66841125 419.46932983]
[-211.67791748 404.75289917]
[-206.99913025 390.48315430]
[-200.69532776 376.85308838]
[-192.85177612 364.04702759]
[-183.57452393 352.23815918]
[-172.98905945 341.58618164]
[-161.23852539 332.23516846]
[-148.48184204 324.31158447]
[-134.89152527 317.92254639]
[-120.65135956 313.15447998]
[-105.95394135 310.07189941]
[-90.99803162 308.71643066]
[-75.98588562 309.10647583]
[-61.12053680 311.23669434]
[-46.60301590 315.07830811]
[-32.62965393 320.57937622]
[-25.55254936 307.35385132]
[-25.16835022 299.97320557]
[-18.27034950 293.98526001]
[-10.99711990 280.86654663]
[-3.72389030 267.74786377]
[3.54933906 254.62916565]
[10.82256889 241.51048279]
[10.22690868 226.62779236]
[23.68524742 218.31011963]
[20.65449142 206.59939575]
[26.60657501 195.61045837]
[38.83025742 191.49411011]
[38.45624161 176.60420227]
[52.03693008 168.48782349]
[59.50466919 155.47886658]
[66.97241211 142.46990967]
[74.44015503 129.46096802]
[81.90789032 116.45201111]
[89.37563324 103.44306183]
[96.74632263 90.37887573]
[104.01955414 77.26017761]
[111.29278564 64.14148712]
[118.56600952 51.02279282]
[125.83924103 37.90409851]
[132.11660767 24.28078079]
[137.36332703 10.22830963]
[142.61003113 -3.82416153]
[147.85675049 -17.87663269]
[153.10346985 -31.92910385]
[158.35018921 -45.98157501]
[160.90602112 -60.76222992]
[160.68269348 -75.76056671]
[160.45936584 -90.75890350]
[157.78089905 -95.23918152]
[157.15174866 -99.83890533]
[158.27421570 -103.75746918]
[160.57601929 -106.42842102]
[161.02262878 -121.42176819]
[161.46923828 -136.41511536]
[161.91584778 -151.40847778]
[162.36244202 -166.40182495]
[162.80905151 -181.39517212]
[163.25566101 -196.38851929]
[163.70227051 -211.38186646]
[164.14886475 -226.37522888]
[164.37219238 -241.37356567]
[164.37219238 -256.37356567]
[164.37219238 -271.37356567]
[164.37219238 -286.37356567]
[164.37219238 -301.37356567]
[149.73298645 -304.97311401]
[136.38090515 -311.97207642]
[125.09225464 -321.96356201]
[116.52333069 -334.36666870]
[111.17230988 -348.46029663]
[109.35030365 -363.42504883]
[111.16323853 -378.39089966]
[116.50570679 -392.48773193]
[125.06711578 -404.89602661]
[136.34971619 -414.89434814]
[149.69754028 -421.90142822]
[164.33456421 -425.50985718]
[179.40983582 -425.50985718]
[194.04685974 -421.90142822]
[207.39468384 -414.89434814]
[218.67727661 -404.89602661]
[227.23869324 -392.48773193]
[232.58116150 -378.39089966]
[234.39410400 -363.42504883]
[232.57208252 -348.46029663]
[227.22106934 -334.36666870]
[218.65214539 -321.96356201]
[207.36347961 -311.97207642]
[194.01141357 -304.97311401]
[179.37219238 -301.37356567]
[179.37219238 -286.37356567]
[179.37219238 -271.37356567]
[179.37219238 -256.37356567]
[179.37219238 -241.37356567]
[182.05587769 -237.42300415]
[182.28634644 -231.74462891]
[179.14222717 -225.92861938]
[178.69561768 -210.93527222]
[178.24900818 -195.94190979]
[177.80239868 -180.94856262]
[177.35580444 -165.95521545]
[176.90919495 -150.96186829]
[176.46258545 -135.96852112]
[176.01597595 -120.97516632]
[175.56938171 -105.98181915]
[175.45770264 -90.98223114]
[175.68103027 -75.98389435]
[175.90435791 -60.98555756]
[182.34152222 -74.53409576]
[191.69256592 -86.26261902]
[203.46691895 -95.55587006]
[217.04693604 -101.92634583]
[231.72024536 -105.03987122]
[246.71710205 -104.73310089]
[261.25082397 -101.02214050]
[274.55895996 -94.10165405]
[285.94345093 -84.33467865]
[294.80703735 -72.23356628]
[300.68475342 -58.43312073]
[303.26831055 -43.65728760]
[302.42211914 -28.68117142]
[298.19064331 -14.29039478]
[290.79580688 -1.23986757]
[280.62551880 9.78580666]
[268.21331787 18.20824242]
[254.21032715 23.58561516]
[239.35110474 25.63583946]
[224.41513062 24.25136566]
[210.18592834 19.50481796]
[197.40992737 11.64519215]
[186.75732422 1.08478832]
[178.78694153 -11.62241554]
[173.91688538 -25.80982590]
[172.40266418 -40.73485565]
[167.15594482 -26.68238640]
[161.90922546 -12.62991428]
[156.66250610 1.42255664]
[151.41578674 15.47502804]
[146.16906738 29.52750015]
[158.69580078 21.27638245]
[173.66369629 20.29542542]
[187.16017151 26.84104919]
[195.65728760 39.20223999]
[196.93391418 54.14781570]
[190.65634155 67.77103424]
[178.46553040 76.51082611]
[163.54811096 78.08262634]
[149.80346680 72.07556915]
[140.82440186 60.05988312]
[138.95793152 45.17732620]
[131.68470764 58.29602051]
[124.41147614 71.41471100]
[117.13824463 84.53340912]
[109.86502075 97.65209961]
[109.02146149 105.66839600]
[102.38459015 110.91079712]
[94.91684723 123.91975403]
[87.44910431 136.92871094]
[79.98136139 149.93765259]
[72.51361847 162.94660950]
[65.04588318 175.95556641]
[64.88574982 191.77595520]
[51.83920670 198.96185303]
[52.31222534 217.36993408]
[36.80394363 225.58334351]
[36.87937164 241.40437317]
[23.94126320 248.78370667]
[16.66803360 261.90240479]
[9.39480400 275.02108765]
[2.12157416 288.13980103]
[-5.15165520 301.25848389]
[-12.32702160 314.43096924]
[-19.40412712 327.65649414]
[-7.07494974 336.23016357]
[4.17549467 346.17721558]
[14.19505692 357.36315918]
[22.84823227 369.63665771]
[30.01799965 382.83175659]
[35.60739136 396.77001953]
[39.54082489 411.26293945]
[41.76509476 426.11453247]
[42.25012970 441.12390137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 201]
[44 200]
[46 199]
[47 198]
[48 197]
[49 196]
[50 195]
[52 193]
[55 191]
[57 189]
[58 188]
[59 187]
[60 186]
[61 185]
[62 184]
[63 182]
[64 181]
[65 180]
[66 179]
[67 178]
[68 167]
[69 166]
[70 165]
[71 164]
[72 163]
[73 162]
[74 136]
[75 135]
[76 134]
[80 133]
[81 132]
[82 131]
[83 130]
[84 129]
[85 128]
[86 127]
[87 126]
[88 125]
[89 122]
[90 121]
[91 120]
[92 119]
[93 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
