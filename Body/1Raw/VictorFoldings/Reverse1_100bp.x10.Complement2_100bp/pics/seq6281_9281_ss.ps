%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCUAUCUCCUCUGUGGACGAUCCACAUUCCUCUUCUACCAAUCCAGAUGCCUCCGAGGUCCCACCCUCAUCAAGGGACGAUUCCCUCCCAUCUGACAxxxxxxxxxxGAUUACUGGAGGCCGGAUCGGUACACUAAAGUGAAGGUGAGGUAUUGCGAGGAGUAUGAUCCGGAUGAUUGGUUGUGUGAUUGGUAUAUGGUUACUACCG\
) } def
/len { sequence length } bind def

/coor [
[61.32894516 758.10559082]
[46.31242371 757.43438721]
[31.58579826 754.42224121]
[17.51173401 749.14331055]
[4.43681097 741.72760010]
[-7.31698608 732.35766602]
[-17.46020889 721.26440430]
[-25.74307442 708.72082520]
[-31.96160507 695.03594971]
[-35.96266937 680.54669189]
[-37.64773178 665.60992432]
[-36.97529984 650.59344482]
[-33.96193314 635.86706543]
[-28.68183708 621.79345703]
[-21.26503754 608.71911621]
[-11.89418316 596.96612549]
[-0.80003721 586.82379150]
[11.74419594 578.54199219]
[25.42960358 572.32458496]
[39.91917038 568.32470703]
[54.85607910 566.64086914]
[55.52586365 551.65582275]
[56.19564819 536.67077637]
[56.86543274 521.68579102]
[57.53522110 506.70071411]
[58.09342957 491.71112061]
[58.54003525 476.71777344]
[58.98664093 461.72442627]
[59.43324661 446.73107910]
[50.22721481 458.57373047]
[36.37076569 464.31820679]
[21.48595047 462.46289062]
[9.46362019 453.49273682]
[3.44638371 439.75253296]
[5.00713253 424.83395386]
[13.73789024 412.63665771]
[27.35645866 406.34899902]
[42.30297470 407.61456299]
[54.67045593 416.10250854]
[61.22590256 429.59326172]
[63.89170074 414.83206177]
[66.55749512 400.07083130]
[69.22328949 385.30963135]
[71.88908386 370.54840088]
[74.55487823 355.78720093]
[77.22068024 341.02597046]
[79.00314331 326.13226318]
[79.89595795 311.15884399]
[72.92991638 297.99362183]
[81.47489929 284.67843628]
[82.36771393 269.70501709]
[75.40167236 256.53979492]
[83.94665527 243.22460938]
[84.83946991 228.25120544]
[85.73229218 213.27780151]
[86.62510681 198.30439758]
[73.15985107 191.85333252]
[63.16321945 180.70825195]
[58.18172455 166.54670715]
[59.00384521 151.51634216]
[65.53539276 137.90927124]
[76.80914307 127.81246185]
[91.12792206 122.78769684]
[92.02073669 107.81429291]
[92.80206299 92.83465576]
[93.47184753 77.84961700]
[94.14163208 62.86457825]
[94.81141663 47.87953949]
[87.69804382 33.74764252]
[95.99592590 21.37855339]
[96.66571045 6.39351559]
[97.33549500 -8.59152317]
[98.00528717 -23.57656288]
[85.96582794 -36.26793289]
[86.81345367 -53.40258789]
[99.53583527 -64.40166473]
[99.98243713 -79.39501953]
[100.31741333 -94.39128113]
[92.78643799 -108.30511475]
[100.71237183 -120.91577911]
[100.93569946 -135.91412354]
[101.04736328 -150.91369629]
[101.04736328 -165.91369629]
[101.04736328 -180.91369629]
[101.04736328 -195.91369629]
[101.04736328 -210.91369629]
[100.82403564 -225.91203308]
[100.37743378 -240.90539551]
[99.93082428 -255.89874268]
[99.48422241 -270.89208984]
[99.03761292 -285.88543701]
[84.25592804 -288.79223633]
[70.49188995 -294.91589355]
[58.43588638 -303.94918823]
[48.69265747 -315.43905640]
[41.75090790 -328.80917358]
[37.95883560 -343.38888550]
[37.50665283 -358.44686890]
[40.41703796 -373.22784424]
[46.54400635 -386.99041748]
[55.58023453 -399.04421997]
[67.07247162 -408.78466797]
[80.44425964 -415.72317505]
[95.02488708 -419.51171875]
[110.08299255 -419.96026611]
[124.86327362 -417.04629517]
[138.62434387 -410.91598511]
[150.67596436 -401.87683105]
[160.41362000 -390.38223267]
[167.34889221 -377.00875854]
[171.13389587 -362.42721558]
[171.57878113 -347.36901855]
[168.66123962 -332.58944702]
[162.52760315 -318.82986450]
[153.48553467 -306.78042603]
[141.98858643 -297.04553223]
[128.61341858 -290.11352539]
[114.03096008 -286.33203125]
[114.47756958 -271.33868408]
[114.92417145 -256.34533691]
[115.37078094 -241.35198975]
[115.81739044 -226.35864258]
[118.61750031 -222.48974609]
[119.01692963 -216.82075500]
[116.04736328 -210.91369629]
[116.04736328 -195.91369629]
[116.04736328 -180.91369629]
[116.04736328 -165.91369629]
[116.04736328 -150.91369629]
[119.19086456 -144.22489929]
[115.93403625 -135.69079590]
[115.71070862 -120.69245148]
[123.25765991 -107.85139465]
[115.31575012 -94.16795349]
[118.35932159 -87.43307495]
[114.97579193 -78.94841003]
[114.52918243 -63.95506287]
[124.59037018 -55.90509033]
[128.23237610 -43.34253311]
[123.91035461 -30.79141235]
[112.99032593 -22.90677643]
[112.32053375 -7.92173815]
[111.65074921 7.06330061]
[110.98096466 22.04833984]
[118.14225006 35.10840607]
[109.79645538 48.54932404]
[109.12667084 63.53436279]
[108.45688629 78.51940155]
[107.78710175 93.50444031]
[110.60183716 101.05757141]
[106.99414062 108.70710754]
[106.10132599 123.68051147]
[119.72155762 130.37118530]
[129.71560669 141.73612976]
[134.58393860 156.02294922]
[133.61415100 171.04449463]
[126.98512268 184.51374817]
[115.73494720 194.39195251]
[101.59851074 199.19721985]
[100.70569611 214.17062378]
[99.81288147 229.14402771]
[98.92006683 244.11743164]
[105.82224274 258.35366821]
[97.34112549 270.59783936]
[96.44830322 285.57125854]
[103.35048676 299.80749512]
[94.86936188 312.05166626]
[93.97654724 327.02505493]
[104.50612640 316.34201050]
[119.28478241 313.77462769]
[132.80044556 320.28054810]
[140.01210022 333.43319702]
[138.22999573 348.32693481]
[128.11878967 359.40682983]
[113.44972992 362.54028320]
[99.69400024 356.55865479]
[91.98189545 343.69177246]
[89.31610107 358.45297241]
[86.65030670 373.21420288]
[83.98450470 387.97540283]
[81.31871033 402.73663330]
[78.65291595 417.49786377]
[75.98712158 432.25906372]
[74.42659760 447.17767334]
[73.97999573 462.17102051]
[73.53338623 477.16436768]
[73.08677673 492.15771484]
[75.95929718 500.82873535]
[72.52025604 507.37051392]
[71.85047150 522.35552979]
[71.18068695 537.34057617]
[70.51090240 552.32562256]
[69.84111786 567.31066895]
[84.56823730 570.32037354]
[98.64317322 575.59698486]
[111.71932220 583.01055908]
[123.47466278 592.37854004]
[133.61972046 603.47015381]
[141.90464783 616.01232910]
[148.12544250 629.69616699]
[152.12889099 644.18475342]
[153.81642151 659.12127686]
[153.14646912 674.13781738]
[150.13552856 688.86468506]
[144.85775757 702.93920898]
[137.44311523 716.01477051]
[128.07420349 727.76934814]
[116.98172760 737.91345215]
[104.43886566 746.19738770]
[90.75448608 752.41699219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 193]
[22 192]
[23 191]
[24 190]
[25 189]
[26 187]
[27 186]
[28 185]
[29 184]
[40 183]
[41 182]
[42 181]
[43 180]
[44 179]
[45 178]
[46 177]
[47 168]
[48 167]
[50 165]
[51 164]
[53 162]
[54 161]
[55 160]
[56 159]
[63 152]
[64 151]
[65 149]
[66 148]
[67 147]
[68 146]
[70 144]
[71 143]
[72 142]
[73 141]
[76 137]
[77 136]
[78 134]
[80 132]
[81 131]
[82 129]
[83 128]
[84 127]
[85 126]
[86 125]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
