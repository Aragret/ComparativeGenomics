%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUUAUCUACCUCUGUAUGUCUUUAUCAGUUUGGUGUAGAUGUUUUACGGUCAUAGUCCGCCGCCGAAGCUUCGGUUUCACUACAAACCUACAUUUCACxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[59.76059723 703.33514404]
[45.07654572 706.43292236]
[30.20027161 708.41125488]
[15.21697998 709.25885010]
[0.21249995 708.97082520]
[-14.72722530 707.54882812]
[-29.51662064 705.00103760]
[-44.07097244 701.34204102]
[-58.30691528 696.59283447]
[-72.14290619 690.78051758]
[-85.49968719 683.93847656]
[-98.30075836 676.10583496]
[-110.47279358 667.32751465]
[-121.94606781 657.65374756]
[-132.65486145 647.14001465]
[-142.53785706 635.84649658]
[-151.53840637 623.83782959]
[-159.60498047 611.18286133]
[-166.69137573 597.95410156]
[-172.75698853 584.22729492]
[-177.76707458 570.08105469]
[-181.69294739 555.59637451]
[-184.51211548 540.85632324]
[-186.20843506 525.94525146]
[-186.77218628 510.94860840]
[-186.20013428 495.95227051]
[-184.49554443 481.04214478]
[-181.66821289 466.30364990]
[-177.73431396 451.82116699]
[-172.71638489 437.67770386]
[-166.64317322 423.95425415]
[-159.54945374 410.72940063]
[-151.47587585 398.07891846]
[-142.46865845 386.07525635]
[-132.57942200 374.78720093]
[-121.86479950 364.27938843]
[-110.38616943 354.61199951]
[-98.20927429 345.84042358]
[-85.40386200 338.01489258]
[-72.04328918 331.18023682]
[-58.20408249 325.37561035]
[-43.96551132 320.63424683]
[-29.40913582 316.98333740]
[-14.61833191 314.44372559]
[0.32217884 313.03002930]
[15.32681656 312.75033569]
[30.30963516 313.60623169]
[45.18481445 315.59280396]
[48.28892517 300.91748047]
[51.39303207 286.24218750]
[46.45700836 272.18923950]
[56.88264084 260.28897095]
[59.98675156 245.61366272]
[55.05072784 231.56072998]
[65.47635651 219.66044617]
[68.58046722 204.98513794]
[66.88919830 197.79060364]
[71.84158325 190.11520386]
[75.16384125 175.48774719]
[78.48610687 160.86029053]
[73.75984955 146.73542786]
[84.36150360 134.99168396]
[87.68376923 120.36421967]
[91.00602722 105.73675537]
[92.89931488 90.85671997]
[93.34592438 75.86337280]
[93.79252625 60.87002182]
[94.23913574 45.87667465]
[86.91614532 31.85225105]
[95.02895355 19.36098862]
[94.80562592 4.36265182]
[93.91281128 -10.61075401]
[93.01999664 -25.58415985]
[92.12718201 -40.55756378]
[81.63325500 -55.68895721]
[90.09385681 -71.06378174]
[88.97820282 -86.02223206]
[87.86255646 -100.98068237]
[84.92216492 -105.29359436]
[84.02033997 -109.84771729]
[84.90758514 -113.82614136]
[87.04634094 -116.62936401]
[86.59973145 -131.62271118]
[86.15312958 -146.61605835]
[85.70652008 -161.60942078]
[77.22169495 -149.23979187]
[63.73173141 -142.68075562]
[48.76287460 -143.64683533]
[36.22794724 -151.88549805]
[29.40354729 -165.24317932]
[30.07355881 -180.22821045]
[38.06284332 -192.92353821]
[51.28301620 -200.01063538]
[66.27835846 -199.63694763]
[79.12912750 -191.90017700]
[86.47593689 -178.82353210]
[88.25839996 -193.71723938]
[90.04087067 -208.61096191]
[91.82333374 -223.50468445]
[93.60580444 -238.39839172]
[79.86805725 -244.73318481]
[68.76162720 -255.00462341]
[61.37459946 -268.20639038]
[58.43067932 -283.04516602]
[60.21828461 -298.06713867]
[66.56228638 -311.80062866]
[76.84115601 -322.90017700]
[90.04788208 -330.27835083]
[104.88860321 -333.21231079]
[119.90937805 -331.41464233]
[133.63861084 -325.06146240]
[144.73127747 -314.77514648]
[152.10060120 -301.56347656]
[155.02462769 -286.72079468]
[153.21690369 -271.70123291]
[146.85449219 -257.97625732]
[136.56076050 -246.89048767]
[123.34415436 -239.53001404]
[108.49951935 -236.61593628]
[106.71705627 -221.72221375]
[104.93458557 -206.82849121]
[103.15212250 -191.93478394]
[101.36965179 -177.04106140]
[100.69986725 -162.05601501]
[101.14647675 -147.06266785]
[101.59307861 -132.06932068]
[102.03968811 -117.07597351]
[102.82100677 -102.09633636]
[103.93666077 -87.13787842]
[105.05230713 -72.17942810]
[114.01065826 -64.05080414]
[115.06254578 -51.59779739]
[107.10058594 -41.45038223]
[107.99340057 -26.47697639]
[108.88621521 -11.50356960]
[109.77903748 3.46983600]
[120.51963043 -7.00105858]
[135.51953125 -6.94824314]
[146.18612671 3.59802747]
[146.40910339 18.59637070]
[136.06071472 29.45505333]
[121.06900787 29.95372963]
[110.02230835 19.80759430]
[117.37723541 32.75959396]
[109.23248291 46.32328033]
[108.78588104 61.31662750]
[108.33927155 76.30998230]
[107.89266968 91.30332947]
[116.12204742 78.76230621]
[128.69662476 70.58427429]
[143.49734497 68.14738464]
[158.03004456 71.86229706]
[169.84571838 81.10297394]
[176.95318604 94.31220245]
[178.15473938 109.26400757]
[173.24787903 123.43872833]
[163.05950928 134.44769287]
[149.30654907 140.43568420]
[134.30661011 140.39361572]
[120.58744812 134.32859802]
[110.46097565 123.26268005]
[105.63348389 109.05902100]
[102.31122589 123.68647766]
[98.98896790 138.31393433]
[103.47758484 153.48506165]
[93.11356354 164.18254089]
[89.79130554 178.81001282]
[86.46904755 193.43746948]
[83.25576782 208.08924866]
[80.15165710 222.76455688]
[84.86566162 237.86717224]
[74.66205597 248.71777344]
[71.55794525 263.39306641]
[76.27194214 278.49569702]
[66.06833649 289.34628296]
[62.96422577 304.02160645]
[59.86011505 318.69689941]
[74.26565552 322.90377808]
[88.31178284 328.18807983]
[101.91802979 334.51953125]
[115.00646210 341.86187744]
[127.50212097 350.17309570]
[139.33341980 359.40551758]
[150.43258667 369.50628662]
[160.73605347 380.41757202]
[170.18481445 392.07684326]
[178.72471619 404.41732788]
[186.30686951 417.36831665]
[192.88783264 430.85565186]
[198.42990112 444.80209351]
[202.90135193 459.12771606]
[206.27656555 473.75045776]
[208.53619385 488.58663940]
[209.66731262 503.55117798]
[209.66342163 518.55841064]
[208.52456665 533.52239990]
[206.25726318 548.35736084]
[202.87448120 562.97839355]
[198.39562988 577.30169678]
[192.84632874 591.24523926]
[186.25839233 604.72918701]
[178.66954041 617.67626953]
[170.12324524 630.01232910]
[160.66847229 641.66668701]
[150.35934448 652.57263184]
[139.25495911 662.66766357]
[127.41887665 671.89398193]
[114.91893005 680.19873047]
[101.82669067 687.53430176]
[88.21717072 693.85870361]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[48 177]
[49 176]
[50 175]
[52 173]
[53 172]
[55 170]
[56 169]
[58 168]
[59 167]
[60 166]
[62 164]
[63 163]
[64 162]
[65 148]
[66 147]
[67 146]
[68 145]
[70 143]
[71 136]
[72 135]
[73 134]
[74 133]
[76 130]
[77 129]
[78 128]
[82 127]
[83 126]
[84 125]
[85 124]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
