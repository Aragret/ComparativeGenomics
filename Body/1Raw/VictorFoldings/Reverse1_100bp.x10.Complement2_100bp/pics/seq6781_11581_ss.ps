%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxUAGACGGAUGCUGUUUGUCUGGAUUUUAGCGAGUAACGUAUGAGAAGUUAGUCGGUGUAUCGGGAGCAUCAUUGUCGGUAAGAGUAGGUUUGGGGGACUU\
) } def
/len { sequence length } bind def

/coor [
[7.85841894 517.14562988]
[8.45296001 532.16540527]
[6.69045115 547.09326172]
[2.61429524 561.56152344]
[-3.67512846 575.21398926]
[-12.02293682 587.71441650]
[-22.22355843 598.75494385]
[-34.02579498 608.06378174]
[-47.13899994 615.41156006]
[-61.24025726 620.61743164]
[-75.98229980 623.55316162]
[-91.00210571 624.14648438]
[-105.92978668 622.38275146]
[-120.39774323 618.30535889]
[-134.04968262 612.01483154]
[-146.54942322 603.66601562]
[-157.58912659 593.46447754]
[-166.89695740 581.66143799]
[-174.24368286 568.54766846]
[-179.44839478 554.44598389]
[-182.38290405 539.70367432]
[-182.97497559 524.68383789]
[-181.20999146 509.75628662]
[-177.13145447 495.28866577]
[-170.83978271 481.63723755]
[-162.48989868 469.13818359]
[-152.28746033 458.09933472]
[-140.48368835 448.79248047]
[-127.36927032 441.44683838]
[-113.26715851 436.24328613]
[-98.52462769 433.30999756]
[-83.50472260 432.71917725]
[-68.57733154 434.48538208]
[-54.11005020 438.56509399]
[-47.83269119 424.94180298]
[-41.55532837 411.31848145]
[-35.27796936 397.69515991]
[-29.00060844 384.07183838]
[-37.71068954 371.98880005]
[-39.21321487 357.06906128]
[-33.00503159 343.30950928]
[-20.66215134 334.44668579]
[-5.44100094 332.94207764]
[0.83635950 319.31875610]
[7.11372042 305.69543457]
[13.39108086 292.07211304]
[19.66844177 278.44882202]
[14.28570175 264.60821533]
[20.45776939 250.70281982]
[35.01153946 245.15075684]
[41.28890228 231.52743530]
[47.56626129 217.90412903]
[53.84362411 204.28080750]
[59.40285110 190.34901428]
[64.22884369 176.14656067]
[63.40449905 168.80201721]
[69.23386383 161.76950073]
[74.27078247 147.64047241]
[73.55587769 140.28446960]
[79.48930359 133.33952332]
[84.73601532 119.28705597]
[89.98273468 105.23458862]
[76.78215790 112.35811615]
[61.90065002 110.47643280]
[50.88864899 100.29135895]
[47.85335922 85.60166168]
[53.92686462 71.88625336]
[66.84390259 64.26062775]
[81.78673553 65.56896210]
[93.18206024 75.32328033]
[96.77960968 89.88662720]
[103.65902710 76.55719757]
[110.53843689 63.22776794]
[107.36733246 50.72549057]
[113.37162018 39.76500702]
[124.85415649 35.96002197]
[131.93125916 22.73449516]
[139.00837708 9.50896740]
[146.08547974 -3.71655989]
[145.77450562 -19.53470993]
[158.60131836 -27.10585594]
[165.67842102 -40.33138275]
[169.86543274 -54.73516464]
[163.17596436 -69.07258606]
[171.83845520 -81.18913269]
[172.95410156 -96.14759064]
[174.06974792 -111.10604095]
[175.18539429 -126.06449890]
[176.30104065 -141.02294922]
[177.41668701 -155.98139954]
[178.53233337 -170.93984985]
[165.63616943 -163.27900696]
[151.55273438 -168.44203186]
[146.66381836 -182.62295532]
[154.57336426 -195.36811829]
[169.45072937 -197.28227234]
[180.32829285 -186.95590210]
[182.55340576 -201.78994751]
[184.77851868 -216.62399292]
[170.94046021 -222.63815308]
[159.13108826 -232.02970886]
[150.15560913 -244.15830994]
[144.62597656 -258.19702148]
[142.91921997 -273.18869019]
[145.15170288 -288.11108398]
[151.17120361 -301.94683838]
[160.56732178 -313.75259399]
[172.69940186 -322.72338867]
[186.74024963 -328.24758911]
[201.73255920 -329.94854736]
[216.65409851 -327.71029663]
[230.48753357 -321.68545532]
[242.28964233 -312.28479004]
[251.25575256 -300.14926147]
[256.77453613 -286.10626221]
[258.46972656 -271.11331177]
[256.22570801 -256.19262695]
[250.19552612 -242.36152649]
[240.79029846 -230.56304932]
[228.65129089 -221.60162354]
[214.60618591 -216.08825684]
[199.61256409 -214.39886475]
[197.38745117 -199.56481934]
[195.16233826 -184.73077393]
[193.49079895 -169.82420349]
[192.37515259 -154.86575317]
[191.25949097 -139.90730286]
[190.14384460 -124.94884491]
[189.02819824 -109.99039459]
[187.91255188 -95.03193665]
[186.79690552 -80.07348633]
[193.56616211 -66.80599213]
[184.82388306 -53.61951828]
[192.43887329 -66.54282379]
[202.54263306 -77.62948608]
[214.70552063 -86.40811157]
[228.41036987 -92.50541687]
[243.07444763 -95.66213989]
[258.07421875 -95.74406433]
[272.77191162 -92.74770355]
[286.54254150 -86.80045319]
[298.80056763 -78.15521240]
[309.02481079 -67.17956543]
[316.78051758 -54.34020996]
[321.73791504 -40.18308258]
[323.68618774 -25.31014633]
[322.54251099 -10.35380936]
[318.35552979 4.04997778]
[311.30325317 17.28875923]
[301.68554688 28.79961395]
[289.91137695 38.09309769]
[276.48135376 44.77404022]
[261.96658325 48.55837250]
[246.98420715 49.28517914]
[232.17127991 46.92355347]
[218.15765381 41.57391739]
[205.53921509 33.46373749]
[194.85250854 22.93786430]
[186.55191040 10.44386292]
[180.99037170 -3.48701668]
[178.40440369 -18.26242447]
[178.90394592 -33.25428009]
[171.82684326 -20.02875137]
[172.64401245 -5.15657902]
[159.31100464 3.36054564]
[152.23390198 16.58607292]
[145.15679932 29.81159973]
[138.07968140 43.03712845]
[139.59004211 60.52099991]
[123.86786652 70.10717773]
[116.98845673 83.43660736]
[110.10903931 96.76603699]
[104.03520966 110.48130035]
[98.78849030 124.53377533]
[93.54177094 138.58624268]
[88.39981079 152.67738342]
[83.36289978 166.80641174]
[78.43130493 180.97254944]
[73.60530853 195.17500305]
[87.02142334 188.46623230]
[101.63979340 191.82827759]
[110.77708435 203.72407532]
[110.25585175 218.71501160]
[100.31439972 229.94744873]
[85.49782562 232.28605652]
[72.58006287 224.66165161]
[67.46694183 210.55816650]
[61.18957901 224.18148804]
[54.91222000 237.80479431]
[48.63485718 251.42811584]
[53.87041092 266.09872437]
[47.31020355 279.82528687]
[33.29175949 284.72616577]
[27.01439667 298.34948730]
[20.73703575 311.97280884]
[14.45967579 325.59613037]
[8.18231487 339.21942139]
[16.92822838 351.76760864]
[18.21055984 366.90869141]
[11.78470230 380.56790161]
[-0.53298151 389.11956787]
[-15.37729263 390.34921265]
[-21.65465355 403.97250366]
[-27.93201447 417.59582520]
[-34.20937347 431.21914673]
[-40.48673630 444.84246826]
[-27.98562241 453.18923950]
[-16.94422913 463.38894653]
[-7.63445520 475.19042969]
[-0.28556502 488.30300903]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 206]
[35 205]
[36 204]
[37 203]
[38 202]
[43 197]
[44 196]
[45 195]
[46 194]
[47 193]
[50 190]
[51 189]
[52 188]
[53 187]
[54 179]
[55 178]
[57 177]
[58 176]
[60 175]
[61 174]
[62 173]
[71 172]
[72 171]
[73 170]
[76 168]
[77 167]
[78 166]
[79 165]
[81 163]
[82 162]
[83 133]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[90 126]
[91 125]
[97 124]
[98 123]
[99 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
