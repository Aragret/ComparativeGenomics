%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCACUUCGUAACCUGACAUUUAGAUUUCUGUCCCCAAUCCGGAGAAAAAUGGUCGAGGCUCCACUAAAAGUAUAACUUAACGUUUAAGCUUCUUCGUxxxxxxxxxxAGAUGUAUAAAUGGUGUUGUGUUACCCCGAGUGAGUGGGUGGUGUAAUUGUUGUAUUUUGGGAGUAAGUGUGCUCUUUUGUGGGAGUACAAGUAUGUGGA\
) } def
/len { sequence length } bind def

/coor [
[254.32614136 238.41293335]
[262.04913330 225.54124451]
[249.95336914 216.67034912]
[237.85762024 207.79945374]
[225.76187134 198.92855835]
[213.66612244 190.05766296]
[201.57037354 181.18676758]
[189.47460938 172.31587219]
[182.22181702 170.89501953]
[177.26612854 163.22177124]
[165.30380249 154.17176819]
[153.14233398 145.39115906]
[140.78782654 136.88433838]
[128.43331909 128.37750244]
[116.07881165 119.87068176]
[103.66131592 111.45606232]
[91.05900574 103.32084656]
[78.33696747 95.37416077]
[62.53348923 94.62540436]
[55.83809662 81.32048035]
[43.11605835 73.37379456]
[30.39402390 65.42710876]
[17.67198753 57.48042679]
[4.94995022 49.53374100]
[-7.77208567 41.58705521]
[-23.57556343 40.83829880]
[-30.27095985 27.53337479]
[-42.99299622 19.58669090]
[-58.79647446 18.83793068]
[-65.49186707 5.53300858]
[-78.21390533 -2.41367555]
[-90.93594360 -10.36036015]
[-99.86068726 1.70541811]
[-109.70459747 13.03376865]
[-120.40698242 23.55484962]
[-131.90185547 33.20378876]
[-144.11833191 41.92110443]
[-156.98112488 49.65304565]
[-170.41088867 56.35194016]
[-184.32485962 61.97649002]
[-198.63723755 66.49201965]
[-213.25978088 69.87068176]
[-228.10234070 72.09165192]
[-243.07339478 73.14123535]
[-258.08062744 73.01295471]
[-273.03155518 71.70761108]
[-287.83398438 69.23324585]
[-302.39663696 65.60511780]
[-316.62973022 60.84559631]
[-330.44552612 54.98402405]
[-343.75881958 48.05653763]
[-356.48754883 40.10585022]
[-368.55325317 31.18098068]
[-379.88150024 21.33695602]
[-390.40246582 10.63446617]
[-400.05130005 -0.86050153]
[-408.76846313 -13.07707691]
[-416.50027466 -25.93993950]
[-423.19903564 -39.36978149]
[-428.82345581 -53.28380966]
[-433.33883667 -67.59622955]
[-436.71734619 -82.21880341]
[-438.93817139 -97.06138611]
[-439.98760986 -112.03244781]
[-439.85916138 -127.03970337]
[-438.55368042 -141.99061584]
[-436.07916260 -156.79299927]
[-432.45086670 -171.35562134]
[-427.69122314 -185.58866882]
[-421.82949829 -199.40438843]
[-414.90188599 -212.71762085]
[-406.95104980 -225.44627380]
[-398.02606201 -237.51187134]
[-388.18191528 -248.84002686]
[-377.47933960 -259.36090088]
[-365.98425293 -269.00958252]
[-353.76760864 -277.72665405]
[-340.90466309 -285.45834351]
[-327.47473145 -292.15695190]
[-313.56066895 -297.78121948]
[-299.24819946 -302.29644775]
[-284.62557983 -305.67483521]
[-269.78298950 -307.89547729]
[-254.81190491 -308.94476318]
[-239.80465698 -308.81619263]
[-224.85375977 -307.51052856]
[-210.05139160 -305.03585815]
[-195.48881531 -301.40744019]
[-181.25581360 -296.64761353]
[-167.44013977 -290.78576660]
[-154.12698364 -283.85800171]
[-141.39840698 -275.90707397]
[-129.33290100 -266.98196411]
[-118.00485229 -257.13769531]
[-107.48410034 -246.43499756]
[-97.83551788 -234.93981934]
[-89.11857605 -222.72306824]
[-81.38703156 -209.86004639]
[-74.68854523 -196.43006897]
[-69.06442261 -182.51593018]
[-64.54933167 -168.20341492]
[-61.17111588 -153.58076477]
[-58.95059967 -138.73814392]
[-57.90147781 -123.76706696]
[-58.03021240 -108.75981140]
[-59.33601379 -93.80892944]
[-61.81083298 -79.00658417]
[-65.43940735 -64.44404602]
[-70.19936371 -50.21109772]
[-76.06136322 -36.39548492]
[-82.98925781 -23.08239555]
[-70.26721954 -15.13571167]
[-57.54518509 -7.18902731]
[-42.65167236 -7.00866747]
[-35.04631042 6.86465454]
[-22.32427597 14.81133842]
[-7.43076181 14.99169827]
[0.17459859 28.86502075]
[12.89663506 36.81170654]
[25.61867142 44.75838852]
[38.34070587 52.70507431]
[51.06274414 60.65176010]
[63.78477859 68.59844208]
[78.67829132 68.77880096]
[86.28365326 82.65212250]
[99.00569153 90.59880829]
[104.25106049 90.60568237]
[109.11919403 93.55094910]
[111.98326111 98.97626495]
[120.85925293 101.13370514]
[124.58563995 107.51617432]
[136.94015503 116.02299500]
[149.29466248 124.52982330]
[161.64916992 133.03665161]
[166.85273743 133.44895935]
[170.96644592 135.60084534]
[173.51019287 138.78587341]
[174.35379028 142.20942688]
[186.31613159 151.25942993]
[198.34550476 160.22012329]
[210.44126892 169.09101868]
[222.53701782 177.96191406]
[234.63276672 186.83280945]
[246.72851562 195.70370483]
[258.82427979 204.57460022]
[270.92001343 213.44549561]
[280.87594604 202.21142578]
[291.82595825 191.94390869]
[303.67663574 182.73054504]
[316.32687378 174.64993286]
[329.66873169 167.77102661]
[343.58837891 162.15249634]
[357.96707153 157.84230042]
[372.68212891 154.87721252]
[387.60800171 153.28250122]
[402.61734009 153.07180786]
[417.58209229 154.24691772]
[432.37457275 156.79779053]
[446.86859131 160.70268250]
[460.94046021 165.92826843]
[474.47015381 172.42996216]
[487.34222412 180.15229797]
[499.44686890 189.02938843]
[510.68075562 198.98550415]
[520.94812012 209.93568420]
[530.16125488 221.78651428]
[538.24163818 234.43687439]
[545.12036133 247.77885437]
[550.73864746 261.69860840]
[555.04858398 276.07736206]
[558.01342773 290.79248047]
[559.60791016 305.71838379]
[559.81835938 320.72772217]
[558.64300537 335.69244385]
[556.09185791 350.48489380]
[552.18670654 364.97885132]
[546.96093750 379.05062866]
[540.45898438 392.58023071]
[532.73645020 405.45214844]
[523.85913086 417.55664062]
[513.90283203 428.79037476]
[502.95251465 439.05752563]
[491.10153198 448.27050781]
[478.45101929 456.35067749]
[465.10891724 463.22915649]
[451.18908691 468.84719849]
[436.81024170 473.15692139]
[422.09509277 476.12152100]
[407.16915894 477.71572876]
[392.15982056 477.92593384]
[377.19512939 476.75033569]
[362.40270996 474.19894409]
[347.90881348 470.29357910]
[333.83712769 465.06753540]
[320.30764771 458.56536865]
[307.43582153 450.84262085]
[295.33151245 441.96511841]
[284.09793091 432.00863647]
[273.83096313 421.05810547]
[264.61819458 409.20697021]
[256.53820801 396.55633545]
[249.65995789 383.21414185]
[244.04214478 369.29418945]
[239.73266602 354.91528320]
[236.76829529 340.20010376]
[235.17434692 325.27413940]
[234.96440125 310.26480103]
[236.14025879 295.30010986]
[238.69186401 280.50775146]
[242.59748840 266.01391602]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 146]
[3 145]
[4 144]
[5 143]
[6 142]
[7 141]
[8 140]
[10 139]
[11 138]
[12 134]
[13 133]
[14 132]
[15 131]
[16 129]
[17 126]
[18 125]
[20 123]
[21 122]
[22 121]
[23 120]
[24 119]
[25 118]
[27 116]
[28 115]
[30 113]
[31 112]
[32 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
