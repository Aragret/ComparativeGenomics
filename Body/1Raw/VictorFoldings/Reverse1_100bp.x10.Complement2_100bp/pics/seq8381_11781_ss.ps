%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUCCCUCCAUCCACCAUCAAACACAAAUUAUAAAAAUCAACCCACUACUCCUUAUCACAUUCCUCAUACCCCCAUUAAUACCACCCGGUAUGCCAUCxxxxxxxxxxGUAUUAGGAGAGAGUUCCUGAAGUUUGAGAUGAGGGUGAUUAUCGAAAAACUACUGAAGAUCGUUCGGAGCGAUUGGAGCGGAAUGGGGGGUGAUAAUUG\
) } def
/len { sequence length } bind def

/coor [
[-22.47608948 316.24377441]
[-19.74127769 331.00650024]
[-18.56459999 345.97424316]
[-18.95894623 360.98297119]
[-20.91999626 375.86825562]
[-24.42626381 390.46704102]
[-29.43933296 404.61929321]
[-35.90427780 418.17004395]
[-43.75026321 430.97073364]
[-52.89132690 442.88119507]
[-63.22731018 453.77087402]
[-74.64497375 463.52047729]
[-87.01921082 472.02316284]
[-100.21444702 479.18582153]
[-114.08610535 484.92990112]
[-128.48220825 489.19253540]
[-143.24501038 491.92700195]
[-158.21278381 493.10330200]
[-173.22151184 492.70858765]
[-188.10675049 490.74719238]
[-202.70542908 487.24057007]
[-216.85758972 482.22714233]
[-230.40815735 475.76187134]
[-243.20867920 467.91558838]
[-255.11889648 458.77423096]
[-266.00833130 448.43798828]
[-275.75765991 437.02008057]
[-284.26004028 424.64562988]
[-291.42236328 411.45022583]
[-297.16613770 397.57843018]
[-301.42840576 383.18222046]
[-304.16250610 368.41934204]
[-305.33847046 353.45156860]
[-304.94338989 338.44284058]
[-302.98162842 323.55764771]
[-299.47463989 308.95904541]
[-294.46087646 294.80700684]
[-287.99526978 281.25659180]
[-280.14868164 268.45626831]
[-271.00701904 256.54626465]
[-260.67050171 245.65710449]
[-249.25238037 235.90805054]
[-236.87773132 227.40594482]
[-223.68214417 220.24395752]
[-209.81019592 214.50051880]
[-195.41389465 210.23858643]
[-180.65095520 207.50485229]
[-165.68313599 206.32926941]
[-150.67442322 206.72470093]
[-135.78927612 208.68684387]
[-121.19076538 212.19416809]
[-107.03885651 217.20826721]
[-93.48860168 223.67420959]
[-80.68846130 231.52111816]
[-68.77868652 240.66305542]
[-58.45201874 229.78372192]
[-48.12535095 218.90438843]
[-37.79867935 208.02505493]
[-27.47201157 197.14572144]
[-17.14534378 186.26638794]
[-6.81867504 175.38705444]
[-21.57512474 178.07911682]
[-35.73356247 173.12547302]
[-45.59300995 161.82098389]
[-48.57623291 147.12063599]
[-43.90341568 132.86705017]
[-32.79603195 122.78607178]
[-18.15751648 119.51286316]
[-3.81434774 123.90302277]
[6.48420715 134.80897522]
[10.04612923 149.37992859]
[5.94079494 163.80630493]
[17.76706505 154.57920837]
[29.59333420 145.35211182]
[41.41960526 136.12501526]
[53.24587250 126.89791870]
[65.07214355 117.67081451]
[76.89841461 108.44371796]
[88.72468567 99.21662140]
[73.74822998 98.37641907]
[62.05332184 88.98339081]
[58.00186157 74.54089355]
[63.10494614 60.43563080]
[75.45925140 51.92850876]
[90.45693207 52.19247818]
[102.50421143 61.12908554]
[107.10776520 75.40519714]
[102.54989624 89.69712067]
[115.38883972 81.94073486]
[128.22778320 74.18434143]
[136.03884888 60.42578888]
[150.93339539 60.46718979]
[153.45153809 55.89487839]
[157.10627747 53.03197479]
[161.05613708 52.02516556]
[164.52337646 52.66591644]
[177.69584656 45.49054718]
[190.86833191 38.31518173]
[184.64808655 24.65861511]
[179.41793823 10.59309483]
[175.20454407 -3.80970383]
[172.02938843 -18.47638702]
[169.90863037 -33.33221436]
[168.85307312 -48.30148697]
[168.86811829 -63.30791855]
[169.95367432 -78.27504730]
[172.10420227 -93.12659454]
[175.30876160 -107.78688049]
[179.55101013 -122.18120575]
[184.80934143 -136.23620605]
[191.05694580 -149.88027954]
[198.26200867 -163.04388428]
[206.38778687 -175.65994263]
[215.39288330 -187.66416931]
[225.23141479 -198.99539185]
[235.85324097 -209.59587097]
[247.20423889 -219.41157532]
[259.22656250 -228.39250183]
[271.85894775 -236.49288940]
[285.03701782 -243.67143250]
[298.69363403 -249.89157104]
[312.75918579 -255.12161255]
[327.16201782 -259.33489990]
[341.82873535 -262.50994873]
[356.68457031 -264.63058472]
[371.65386963 -265.68603516]
[386.66027832 -265.67086792]
[401.62741089 -264.58520508]
[416.47894287 -262.43453979]
[431.13919067 -259.22988892]
[445.53347778 -254.98751831]
[459.58847046 -249.72908020]
[473.23248291 -243.48136902]
[486.39602661 -236.27621460]
[499.01202393 -228.15034485]
[511.01617432 -219.14514160]
[522.34735107 -209.30653381]
[532.94775391 -198.68463135]
[542.76336670 -187.33355713]
[551.74420166 -175.31115723]
[559.84448242 -162.67871094]
[567.02288818 -149.50057983]
[573.24291992 -135.84391785]
[578.47290039 -121.77832031]
[582.68603516 -107.37545776]
[585.86096191 -92.70872498]
[587.98150635 -77.85285950]
[589.03686523 -62.88357544]
[589.02154541 -47.87714386]
[587.93579102 -32.91003418]
[585.78503418 -18.05851936]
[582.58026123 -3.39827943]
[578.33776855 10.99597931]
[573.07922363 25.05090714]
[566.83142090 38.69488144]
[559.62615967 51.85837555]
[551.50018311 64.47431183]
[542.49487305 76.47840118]
[532.65618896 87.80947113]
[522.03417969 98.40978241]
[510.68304443 108.22531891]
[498.66058350 117.20606232]
[486.02807617 125.30624390]
[472.84988403 132.48458862]
[459.19317627 138.70451355]
[445.12753296 143.93434143]
[430.72463989 148.14739990]
[416.05789185 151.32221985]
[401.20202637 153.44264221]
[386.23272705 154.49784851]
[371.22628784 154.48246765]
[356.25918579 153.39656067]
[341.40768433 151.24569702]
[326.74746704 148.04078674]
[312.35324097 143.79821777]
[298.29837036 138.53956604]
[284.65444946 132.29164124]
[271.49099731 125.08628845]
[258.87512207 116.96022034]
[246.87110901 107.95484161]
[235.54010010 98.11605072]
[224.93988037 87.49398041]
[215.12443542 76.14276123]
[206.14378357 64.12023163]
[198.04370117 51.48765945]
[184.87121582 58.66302490]
[171.69874573 65.83839417]
[158.68978882 73.30612946]
[151.79704285 86.50989532]
[135.98417664 87.02328491]
[123.14523315 94.77967072]
[110.30628967 102.53606415]
[97.95178223 111.04289246]
[86.12551117 120.26998901]
[74.29924011 129.49708557]
[62.47297287 138.72418213]
[50.64670181 147.95127869]
[38.82043457 157.17837524]
[26.99416351 166.40548706]
[15.16789341 175.63258362]
[4.06065941 185.71371460]
[-6.26600885 196.59304810]
[-16.59267807 207.47238159]
[-26.91934586 218.35171509]
[-37.24601364 229.23104858]
[-47.57268524 240.11038208]
[-57.89935303 250.98973083]
[-48.14947128 262.40713501]
[-39.64646912 274.78118896]
[-32.48350906 287.97625732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 207]
[56 206]
[57 205]
[58 204]
[59 203]
[60 202]
[61 201]
[72 200]
[73 199]
[74 198]
[75 197]
[76 196]
[77 195]
[78 194]
[79 193]
[88 192]
[89 191]
[90 190]
[92 188]
[96 187]
[97 186]
[98 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
