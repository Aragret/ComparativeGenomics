%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:31:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUUAUCACCCCCCAUUCCGCUCCAAUCGCUCCGAACGAUCUUCAGUAGUUUUUCGAUAAUCACCCUCAUCUCAAACUUCAGGAACUCUCUCCUAAUACxxxxxxxxxxUGGAGGGACUGUUCGCGGAUAUCGUGAGCUUAUUAAGAAGAGUGGGAUUGUCCAGUUGGAGCGAAGGGGUGGGAAUGAUUGUAAUUGCUUUUAUUGGGGU\
) } def
/len { sequence length } bind def

/coor [
[203.30342102 516.64538574]
[200.41815186 501.92550659]
[197.53288269 487.20559692]
[194.64759827 472.48571777]
[191.76232910 457.76580811]
[188.54905701 443.11404419]
[185.00938416 428.53765869]
[181.46971130 413.96127319]
[177.93003845 399.38491821]
[174.17373657 384.86285400]
[170.20164490 370.39831543]
[166.22955322 355.93380737]
[162.14987183 341.49923706]
[157.96287537 327.09545898]
[153.77586365 312.69168091]
[142.79348755 302.63003540]
[146.37113953 287.21865845]
[142.18412781 272.81484985]
[137.99711609 258.41107178]
[133.11149597 252.86560059]
[133.85670471 243.76161194]
[129.88461304 229.29708862]
[125.91252136 214.83256531]
[121.94042206 200.36804199]
[117.96833038 185.90351868]
[113.99623108 171.43899536]
[110.02413177 156.97447205]
[106.05204010 142.50994873]
[101.65103912 128.17010498]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[79.32050323 62.45344543]
[68.11687469 56.06270599]
[64.38967896 44.13409805]
[69.61641693 33.22502518]
[65.00240326 18.95229340]
[60.35980988 14.24508286]
[58.99608231 8.72808456]
[60.47035980 4.18544817]
[56.28334808 -10.21833420]
[52.09633636 -24.62211609]
[47.90932465 -39.02589798]
[43.72231293 -53.42967987]
[27.55244637 -52.95900726]
[11.81860924 -56.67189026]
[-2.41602588 -64.31175995]
[-14.19105721 -75.35687256]
[-22.71365166 -89.05595398]
[-27.41192818 -104.47930908]
[-27.97332573 -120.58187103]
[-24.36539459 -136.27406311]
[-16.83761597 -150.49549866]
[-5.90415812 -162.28663635]
[7.69123793 -170.85354614]
[3.07722878 -185.12628174]
[-1.53678036 -199.39901733]
[-6.15078974 -213.67173767]
[-10.76479912 -227.94447327]
[-13.24391651 -213.15075684]
[-19.91970253 -199.71820068]
[-30.21463585 -188.80882263]
[-43.23810196 -181.36642456]
[-57.86343765 -178.03483582]
[-72.82540894 -179.10226440]
[-86.82965851 -184.47637939]
[-98.66466522 -193.69226074]
[-107.30659485 -205.95265198]
[-112.00783539 -220.19688416]
[-112.36167908 -235.19271851]
[-108.33750916 -249.64283752]
[-100.28346252 -262.29718018]
[-88.89629364 -272.06100464]
[-75.16110229 -278.08966064]
[-60.26613235 -279.86160278]
[-45.49993515 -277.22351074]
[-32.13993835 -270.40365601]
[-21.34191704 -259.99200439]
[-14.04124737 -246.89253235]
[-14.48785400 -261.88589478]
[-22.63260651 -275.44958496]
[-15.27767467 -288.40158081]
[-15.83588600 -303.39117432]
[-16.50567055 -318.37622070]
[-17.17545509 -333.36126709]
[-17.84524155 -348.34628296]
[-18.73805618 -363.31970215]
[-19.85370636 -378.27816772]
[-20.96935463 -393.23660278]
[-22.08500290 -408.19506836]
[-23.20065117 -423.15350342]
[-24.31629944 -438.11196899]
[-25.43194962 -453.07043457]
[-40.08483887 -456.88769531]
[-52.70295334 -465.25799561]
[-61.91756821 -477.27337646]
[-66.72915649 -491.63052368]
[-66.61579132 -506.77203369]
[-61.58977127 -521.05554199]
[-52.19628143 -532.93157959]
[-39.45425034 -541.11199951]
[-24.74584579 -544.70947266]
[-9.66652393 -543.33367920]
[4.14802408 -537.13391113]
[15.19929886 -526.78271484]
[22.28854179 -513.40283203]
[24.64676476 -498.44561768]
[22.01816368 -483.53356934]
[14.68787003 -470.28421021]
[3.45102096 -460.13473511]
[-10.47349548 -454.18606567]
[-9.35784721 -439.22763062]
[-8.24219799 -424.26916504]
[-7.12654972 -409.31069946]
[-6.01090097 -394.35226440]
[-4.89525223 -379.39379883]
[-3.77960348 -364.43536377]
[-0.80952460 -360.69534302]
[-0.15736510 -355.04983521]
[-2.86020231 -349.01608276]
[-2.19041705 -334.03103638]
[-1.52063203 -319.04598999]
[-0.85084689 -304.06097412]
[2.58818913 -297.51919556]
[-0.28432471 -288.84817505]
[7.82848358 -276.35690308]
[0.50549620 -262.33248901]
[0.95210218 -247.33914185]
[3.50793433 -232.55848694]
[8.12194347 -218.28575134]
[12.73595333 -204.01301575]
[17.34996223 -189.74028015]
[21.96397209 -175.46755981]
[35.80741501 -176.58833313]
[49.55915451 -174.58714294]
[62.52363968 -169.56167603]
[74.04434204 -161.76263428]
[83.53701019 -151.58132935]
[90.51929474 -139.52993774]
[94.63526154 -126.21581268]
[95.67353821 -112.31085968]
[93.57813263 -98.51760101]
[88.45150757 -85.53371429]
[80.54949951 -74.01672363]
[70.26861572 -64.55071259]
[58.12609482 -57.61669159]
[62.31310654 -43.21290970]
[66.50012207 -28.80912781]
[70.68712616 -14.40534496]
[74.87413788 -0.00156299]
[79.27513885 14.33828449]
[83.88914490 28.61101723]
[97.52796936 39.65409088]
[93.52296448 57.62744522]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[115.85349274 123.34410095]
[119.21878815 126.08795929]
[121.32415771 129.42442322]
[122.13800812 132.88462830]
[121.78427887 136.03764343]
[120.51656342 138.53784180]
[124.48865509 153.00238037]
[128.46075439 167.46690369]
[132.43284607 181.93142700]
[136.40495300 196.39595032]
[140.37704468 210.86047363]
[144.34913635 225.32499695]
[148.32124329 239.78952026]
[152.40090942 254.22407532]
[156.58792114 268.62783813]
[160.77491760 283.03164673]
[172.05677795 294.12353516]
[168.17964172 308.50466919]
[172.36665344 322.90844727]
[176.55366516 337.31222534]
[181.95411682 344.67926025]
[180.69407654 351.96170044]
[184.66616821 366.42623901]
[188.63825989 380.89074707]
[193.06604004 385.80056763]
[194.18206787 391.37295532]
[192.50640869 395.84524536]
[196.04608154 410.42160034]
[199.58575439 424.99798584]
[203.12542725 439.57437134]
[206.72969055 443.35012817]
[208.36198425 447.69625854]
[208.13528442 451.76611328]
[206.48222351 454.88055420]
[209.36749268 469.60043335]
[212.25276184 484.32031250]
[215.13804626 499.04022217]
[218.02331543 513.76013184]
[232.93070984 516.73297119]
[245.56291199 525.18847656]
[253.99359131 537.83728027]
[256.93713379 552.75048828]
[253.94467163 567.65399170]
[245.47253418 580.27502441]
[232.81265259 588.68908691]
[217.89558411 591.61297607]
[202.99604797 588.60095215]
[190.38613892 580.11218262]
[181.98876953 567.44128418]
[179.08447266 552.52038574]
[182.11613464 537.62481689]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 197]
[2 196]
[3 195]
[4 194]
[5 193]
[6 189]
[7 188]
[8 187]
[9 186]
[10 183]
[11 182]
[12 181]
[13 179]
[14 178]
[15 177]
[17 175]
[18 174]
[19 173]
[21 172]
[22 171]
[23 170]
[24 169]
[25 168]
[26 167]
[27 166]
[28 165]
[29 160]
[30 159]
[32 157]
[33 156]
[34 155]
[37 153]
[38 152]
[41 151]
[42 150]
[43 149]
[44 148]
[45 147]
[56 134]
[57 133]
[58 132]
[59 131]
[60 130]
[80 129]
[81 128]
[83 126]
[84 124]
[85 123]
[86 122]
[87 121]
[88 118]
[89 117]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
