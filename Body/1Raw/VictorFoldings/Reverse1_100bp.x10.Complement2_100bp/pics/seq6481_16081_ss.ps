%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGGAGGCCGCCCCAGCUUCUUCCACCACAACUCCAACGCCAGACAAUCAUCAUAUCACUACGGUCGUCGAUCCUGACCCUCUCUAUCCUCUUCAUCCxxxxxxxxxxGGCGAUACAUAAAGCAUGUAAUGACGGUCGGUGGUACUUAUAACAUGCCAUGGUAUUUAUGAACUGGUGGACAUCAUGUAUUUUUGGGUUAGGUGUAGUU\
) } def
/len { sequence length } bind def

/coor [
[89.88366699 450.23956299]
[86.16068268 464.81817627]
[79.74571228 478.42864990]
[70.87065125 490.57894897]
[59.85633469 500.82986450]
[47.10091782 508.81082153]
[33.06550598 514.23333740]
[18.25746346 516.90136719]
[3.21209764 516.71850586]
[-11.52671337 513.69128418]
[-25.42617035 507.92922974]
[-37.98381805 499.64053345]
[-48.74570084 489.12493896]
[-57.32279205 476.76248169]
[-63.40502548 463.00009155]
[-66.77253723 448.33529663]
[-67.30359650 433.29818726]
[-64.97899628 418.43237305]
[-59.88277817 404.27520752]
[-52.19916534 391.33850098]
[-42.20591736 380.08987427]
[-30.26427650 370.93600464]
[-16.80593491 364.20773315]
[-2.31739616 360.14831543]
[12.67758465 358.90451050]
[27.63694954 360.52127075]
[32.03794861 346.18142700]
[36.43894577 331.84158325]
[40.83994293 317.50173950]
[35.45136642 306.67169189]
[39.00055313 294.68890381]
[50.10779190 288.13208008]
[54.72180176 273.85934448]
[59.33581161 259.58660889]
[58.40220261 252.25517273]
[64.12622070 245.13664246]
[68.95221710 230.93418884]
[73.77821350 216.73173523]
[78.60421753 202.52926636]
[81.92647552 187.90180969]
[83.70893860 173.00808716]
[85.49140930 158.11437988]
[87.27387238 143.22065735]
[89.05633545 128.32695007]
[90.83880615 113.43322754]
[83.84153748 98.18807983]
[94.04157257 84.87134552]
[95.60209656 69.95273590]
[96.60636139 54.98639297]
[97.05296326 39.99304581]
[97.49957275 24.99969482]
[97.94617462 10.00634480]
[98.39278412 -4.98700476]
[98.61611176 -19.98534203]
[98.61611176 -34.98534393]
[98.61611176 -49.98534393]
[97.61184692 -64.95168304]
[95.60783386 -79.81721497]
[93.60382080 -94.68274689]
[91.59980774 -109.54827118]
[89.59579468 -124.41380310]
[85.86367035 -129.87115479]
[85.50212860 -135.54269409]
[87.76025391 -139.75100708]
[86.19972992 -154.66961670]
[84.63920593 -169.58821106]
[83.07868195 -184.50682068]
[81.51815796 -199.42543030]
[79.95763397 -214.34402466]
[78.39711761 -229.26263428]
[76.83659363 -244.18124390]
[75.27606964 -259.09985352]
[60.26261902 -259.08084106]
[45.32679367 -260.60568237]
[30.62691498 -263.65817261]
[16.31881714 -268.20593262]
[2.55416894 -274.20080566]
[-10.52111435 -281.57922363]
[-22.76842690 -290.26296997]
[-34.05794144 -300.16000366]
[-44.26998520 -311.16537476]
[-53.29629898 -323.16244507]
[-61.04120636 -336.02401733]
[-67.42259979 -349.61380005]
[-72.37283325 -363.78768921]
[-75.83943939 -378.39544678]
[-77.78565979 -393.28222656]
[-78.19087219 -408.29022217]
[-77.05077362 -423.26031494]
[-74.37745667 -438.03387451]
[-70.19925690 -452.45422363]
[-64.56047058 -466.36853027]
[-57.52085876 -479.62930298]
[-49.15505600 -492.09594727]
[-39.55174255 -503.63632202]
[-28.81271935 -514.12811279]
[-17.05182457 -523.46008301]
[-4.39373159 -531.53326416]
[9.02737808 -538.26214600]
[23.06923294 -543.57537842]
[37.58298111 -547.41662598]
[52.41476822 -549.74517822]
[67.40737152 -550.53631592]
[82.40185547 -549.78173828]
[97.23927307 -547.48931885]
[111.76234436 -543.68347168]
[125.81710815 -538.40447998]
[139.25457764 -531.70837402]
[151.93231201 -523.66601562]
[163.71592712 -514.36279297]
[174.48049927 -503.89721680]
[184.11190796 -492.38027954]
[192.50808716 -479.93405151]
[199.58000183 -466.69049072]
[205.25270081 -452.78997803]
[209.46603394 -438.37985229]
[212.17535400 -423.61285400]
[213.35194397 -408.64556885]
[212.98332214 -393.63662720]
[211.07339478 -378.74514771]
[207.64241028 -364.12899780]
[202.72674561 -349.94308472]
[196.37849426 -336.33779907]
[188.66497803 -323.45736694]
[179.66792297 -311.43832397]
[169.48274231 -300.40808105]
[158.21739197 -290.48358154]
[145.99128723 -281.77001953]
[132.93402100 -274.35974121]
[119.18403625 -268.33132935]
[104.88706207 -263.74868774]
[90.19467163 -260.66036987]
[91.75519562 -245.74176025]
[93.31571960 -230.82316589]
[94.87624359 -215.90455627]
[96.43676758 -200.98594666]
[97.99729156 -186.06735229]
[99.55780792 -171.14874268]
[101.11833191 -156.23013306]
[102.67885590 -141.31152344]
[104.46132660 -126.41781616]
[106.46533966 -111.55228424]
[108.46935272 -96.68675995]
[110.47336578 -81.82122803]
[112.47737885 -66.95570374]
[120.13960266 -79.85105896]
[133.50929260 -86.65188599]
[148.44372559 -85.25086212]
[160.31529236 -76.08210754]
[165.44544983 -61.98666763]
[162.24458313 -47.33216476]
[151.70449829 -36.65945816]
[137.09117126 -33.27560043]
[122.93268585 -38.22911453]
[113.61611176 -49.98534393]
[113.61611176 -34.98534393]
[113.61611176 -19.98534203]
[116.29978943 -16.03478622]
[116.53025055 -10.35641479]
[113.38613129 -4.54039907]
[112.93952942 10.45295048]
[112.49291992 25.44630051]
[112.04631042 40.43965149]
[111.59970856 55.43300247]
[124.14094543 47.20394516]
[138.44087219 51.73297119]
[143.95811462 65.68144989]
[136.62556458 78.76708221]
[121.84851074 81.34362793]
[110.52070618 71.51325989]
[108.96018219 86.43186951]
[115.73556519 95.90474701]
[114.43772125 107.47872162]
[105.73252106 115.21569061]
[103.95005798 130.10940552]
[102.16758728 145.00312805]
[100.38512421 159.89685059]
[98.60266113 174.79055786]
[96.82019043 189.68428040]
[105.92092133 177.76049805]
[118.85317230 170.16069031]
[133.69851685 168.01226807]
[148.25474548 171.63392639]
[160.36251831 180.48841858]
[168.22570801 193.26222229]
[170.67788696 208.06042480]
[167.35527039 222.68780518]
[158.75074768 234.97447205]
[146.14076233 243.09777832]
[131.39590454 245.85267639]
[116.70351410 242.83049011]
[104.24310303 234.47955322]
[95.86311340 222.03866577]
[92.80667114 207.35527039]
[87.98067474 221.55772400]
[83.15467834 235.76017761]
[78.32867432 249.96263123]
[73.60854340 264.20062256]
[68.99453735 278.47335815]
[64.38052368 292.74609375]
[68.65268707 310.65783691]
[55.17979050 321.90274048]
[50.77879333 336.24258423]
[46.37779617 350.58242798]
[41.97679520 364.92227173]
[55.26761246 371.97570801]
[66.98320770 381.41717529]
[76.70008087 392.90536499]
[84.06695557 406.02502441]
[88.81753540 420.30187988]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 205]
[27 204]
[28 203]
[29 202]
[32 200]
[33 199]
[34 198]
[36 197]
[37 196]
[38 195]
[39 194]
[40 179]
[41 178]
[42 177]
[43 176]
[44 175]
[45 174]
[47 171]
[48 170]
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[54 157]
[55 156]
[56 155]
[57 145]
[58 144]
[59 143]
[60 142]
[61 141]
[64 140]
[65 139]
[66 138]
[67 137]
[68 136]
[69 135]
[70 134]
[71 133]
[72 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
