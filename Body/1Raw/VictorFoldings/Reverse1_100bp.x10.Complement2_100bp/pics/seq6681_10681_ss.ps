%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUAUACCACACGAGUGUGCUAUUUGGGAUCCUUCGGUUAACUAUAGUAUCGAGUCUGGUAUGGAUACAUAGGUUUACCAAGAAAAAAAGGCCUCAUCAxxxxxxxxxxUCGCCACCCGGAUCGGGAUGAUCAGAGUUAGAGGUUGUGUAUACCGGAUCUGAUGCAUGUAUUGGAUUUGGAUGAGGUUACGAUUUUGAUUAGCAGGGUU\
) } def
/len { sequence length } bind def

/coor [
[150.30937195 490.02755737]
[152.94895935 475.23638916]
[157.62145996 460.95654297]
[164.23593140 447.46600342]
[172.66362000 435.02734375]
[182.74047852 423.88269043]
[194.27033997 414.24899292]
[207.02879333 406.31375122]
[200.95495605 392.59848022]
[194.88113403 378.88320923]
[180.16744995 369.31896973]
[182.28086853 351.02648926]
[176.00350952 337.40316772]
[169.72615051 323.77987671]
[167.14610291 322.68374634]
[164.84480286 320.49957275]
[163.23881531 317.32839966]
[162.70051575 313.42010498]
[163.50770569 309.15368652]
[158.05235291 295.18087769]
[152.59698486 281.20809937]
[147.23609924 276.12057495]
[147.16613770 266.98641968]
[141.91941833 252.93395996]
[136.67269897 238.88148499]
[132.77670288 236.11918640]
[130.57461548 230.88011169]
[131.48579407 224.33174133]
[126.65979767 210.12927246]
[121.83380127 195.92681885]
[117.00780487 181.72436523]
[112.18180847 167.52191162]
[109.19763947 165.64385986]
[106.97486115 162.22708130]
[106.22677612 157.64520264]
[107.47284698 152.57623291]
[103.28583527 138.17245483]
[99.09883118 123.76867676]
[94.91181946 109.36489105]
[89.45645905 95.39209747]
[82.77626801 81.96171570]
[76.09606934 68.53134155]
[69.41587830 55.10096741]
[62.73567963 41.67058945]
[55.75722885 28.39274406]
[48.48399734 15.27405071]
[35.02565765 6.95637846]
[35.62131882 -7.92631102]
[28.34808922 -21.04500580]
[14.88975048 -29.36267662]
[15.48541069 -44.24536514]
[8.21218109 -57.36405945]
[0.93895191 -70.48275757]
[-6.33427763 -83.60144806]
[-13.23227882 -89.58938599]
[-13.61647701 -96.97004700]
[-20.69358253 -110.19557953]
[-27.77068901 -123.42110443]
[-34.84779358 -136.64663696]
[-41.92490005 -149.87216187]
[-54.02060318 -154.35064697]
[-59.64286423 -165.51190186]
[-56.26477814 -177.12721252]
[-63.14419174 -190.45663452]
[-70.02360535 -203.78605652]
[-84.12860107 -198.62347412]
[-98.76943207 -195.26947021]
[-113.71518707 -193.77693176]
[-128.73014832 -194.16943359]
[-143.57751465 -196.44075012]
[-158.02311707 -200.55506897]
[-171.83914185 -206.44752502]
[-184.80766296 -214.02514648]
[-196.72418213 -223.16845703]
[-207.40072632 -233.73324585]
[-216.66893005 -245.55287170]
[-224.38261414 -258.44094849]
[-230.42012024 -272.19418335]
[-234.68623352 -286.59570312]
[-237.11366272 -301.41833496]
[-237.66413879 -316.42834473]
[-236.32896423 -331.38897705]
[-233.12921143 -346.06430054]
[-228.11534119 -360.22283936]
[-221.36642456 -373.64129639]
[-212.98889160 -386.10806274]
[-203.11488342 -397.42651367]
[-191.90013123 -407.41815186]
[-179.52149963 -415.92535400]
[-166.17420959 -422.81396484]
[-152.06878662 -427.97537231]
[-137.42767334 -431.32815552]
[-122.48178864 -432.81942749]
[-107.46685791 -432.42565918]
[-92.61968231 -430.15310669]
[-78.17441559 -426.03756714]
[-64.35889435 -420.14395142]
[-51.39100647 -412.56521606]
[-39.47526932 -403.42092896]
[-28.79961205 -392.85522461]
[-19.53240585 -381.03482056]
[-11.81980801 -368.14611816]
[-5.78345823 -354.39236450]
[-1.51855707 -339.99047852]
[0.90763116 -325.16763306]
[1.45684206 -310.15759277]
[0.12041382 -295.19705200]
[-3.08057618 -280.52203369]
[-8.09564400 -266.36389160]
[-14.84569454 -252.94599915]
[-23.22426987 -240.47993469]
[-33.09922791 -229.16232300]
[-44.31482315 -219.17164612]
[-56.69417572 -210.66548157]
[-49.81476212 -197.33604431]
[-42.93535233 -184.00662231]
[-27.67848778 -175.33511353]
[-28.69937134 -156.94926453]
[-21.62226677 -143.72373962]
[-14.54516029 -130.49821472]
[-7.46805525 -117.27268219]
[-0.39094982 -104.04715729]
[6.78441668 -90.87467957]
[14.05764580 -77.75598145]
[21.33087540 -64.63729095]
[28.60410500 -51.51859665]
[41.54221344 -44.13925934]
[41.46678543 -28.31823540]
[48.74001312 -15.19954014]
[61.67812347 -7.82020569]
[61.60269165 8.00082111]
[68.87592316 21.11951447]
[72.14635468 22.43732834]
[74.94097137 25.40467644]
[76.49143982 29.78067398]
[76.16605377 34.99039459]
[82.84625244 48.42077255]
[89.52644348 61.85114670]
[96.20664215 75.28152466]
[102.88683319 88.71189880]
[104.55110168 73.80451202]
[112.44515228 61.04975128]
[125.04476929 52.91035843]
[139.91716003 50.95792770]
[154.19070435 55.56943512]
[165.10939026 65.85447693]
[170.56501770 79.82717896]
[169.50416565 94.78961945]
[162.13166809 107.85278320]
[149.87106323 116.49439240]
[135.08966064 119.04588318]
[120.64151764 115.01459503]
[109.31559753 105.17787933]
[113.50260925 119.58166504]
[117.68962097 133.98544312]
[121.87663269 148.38922119]
[126.38426208 162.69590759]
[131.21025085 176.89837646]
[136.03625488 191.10083008]
[140.86225891 205.30328369]
[145.68824768 219.50573730]
[150.72517395 233.63476562]
[155.97187805 247.68724060]
[161.21859741 261.73971558]
[166.56979370 275.75274658]
[172.02514648 289.72552490]
[177.48049927 303.69833374]
[183.34947205 317.50250244]
[189.62683105 331.12582397]
[195.90419006 344.74914551]
[207.71188354 349.93963623]
[212.65985107 361.41574097]
[208.59638977 372.80938721]
[214.67022705 386.52465820]
[220.74406433 400.23992920]
[235.19461060 396.12557983]
[250.07714844 394.06250000]
[265.10195923 394.09082031]
[279.97662354 396.20999146]
[294.41156006 400.37878418]
[308.12579346 406.51602173]
[320.85241699 414.50222778]
[332.34362793 424.18200684]
[342.37582397 435.36688232]
[350.75366211 447.83917236]
[357.31408691 461.35607910]
[361.92944336 475.65447998]
[364.50979614 490.45611572]
[365.00500488 505.47277832]
[363.40539551 520.41223145]
[359.74212646 534.98364258]
[354.08645630 548.90344238]
[346.54852295 561.90057373]
[337.27502441 573.72210693]
[326.44647217 584.13787842]
[314.27368164 592.94525146]
[300.99356079 599.97265625]
[286.86465454 605.08337402]
[272.16192627 608.17791748]
[257.17160034 609.19604492]
[242.18548584 608.11791992]
[227.49526978 604.96459961]
[213.38690186 599.79736328]
[200.13500977 592.71685791]
[187.99755859 583.86090088]
[177.21078491 573.40185547]
[167.98466492 561.54333496]
[160.49877930 548.51611328]
[154.89886475 534.57385254]
[151.29391479 519.98791504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 175]
[9 174]
[10 173]
[12 170]
[13 169]
[14 168]
[19 167]
[20 166]
[21 165]
[23 164]
[24 163]
[25 162]
[28 161]
[29 160]
[30 159]
[31 158]
[32 157]
[36 156]
[37 155]
[38 154]
[39 153]
[40 140]
[41 139]
[42 138]
[43 137]
[44 136]
[45 132]
[46 131]
[48 129]
[49 128]
[51 126]
[52 125]
[53 124]
[54 123]
[56 122]
[57 121]
[58 120]
[59 119]
[60 118]
[63 116]
[64 115]
[65 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
