%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACGACACUAAUCCUGCCUAGUCUGCUUCUCCCCGCAAACCAUAACCCAAUACCGUCCCCCAAAAUAUAACUAUUAACAACACUACUUUAACUACCGGGxxxxxxxxxxGAUGCCGAGUUGUAAAAAACAUCGGUGUCCGAAGGUGCCUGAAGUGCAGUAAUAACCGAGUUGAAAGGAGUGAUAGACGAAGUAGGCGGUUGAUUAUAAA\
) } def
/len { sequence length } bind def

/coor [
[71.14144897 446.72732544]
[56.70541763 451.48858643]
[41.54658508 450.35797119]
[27.97656250 443.50796509]
[18.06467819 431.98306274]
[13.32242203 417.54080200]
[14.47295570 402.38345337]
[21.34082985 388.82244873]
[32.87874222 378.92575073]
[47.32725143 374.20248413]
[48.44289780 359.24404907]
[49.55854797 344.28558350]
[50.67419434 329.32711792]
[51.78984451 314.36868286]
[52.68265915 299.39526367]
[53.35244370 284.41021729]
[54.02223206 269.42520142]
[54.69201660 254.44015503]
[55.36180115 239.45510864]
[56.03158569 224.47007751]
[56.70137024 209.48503113]
[44.03900528 217.52645874]
[29.80809402 212.78503418]
[24.49913406 198.75595093]
[32.02569580 185.78094482]
[46.83947754 183.42469788]
[58.01966858 193.42262268]
[59.80213547 178.52890015]
[61.58459854 163.63519287]
[53.39504242 176.20225525]
[42.56090546 186.57632446]
[29.65051651 194.21321106]
[15.34113407 198.71226501]
[0.38339874 199.83750916]
[-14.43803596 197.52989197]
[-28.34566689 191.91049194]
[-40.60993195 183.27406311]
[-50.58746338 172.07366943]
[-57.75486755 158.89685059]
[-61.73615646 144.43486023]
[-62.32247543 129.44631958]
[-59.48307037 114.71751404]
[-53.36688614 101.02108002]
[-44.29477310 89.07550812]
[-32.74263382 79.50743103]
[-19.31646538 72.81878662]
[-4.72058249 69.36042786]
[10.27934456 69.31378937]
[24.89645004 72.68131256]
[38.36395264 79.28634644]
[49.97536850 88.78239441]
[59.12158966 100.67132568]
[65.32282257 114.32946014]
[68.25376129 129.04032898]
[67.76042175 144.03385925]
[74.83752441 130.80833435]
[81.91462708 117.58280945]
[88.99173737 104.35727692]
[76.17765808 112.15467072]
[61.36703491 114.53070068]
[46.75693893 111.13288879]
[34.51469040 102.46527863]
[26.45635414 89.81367493]
[23.77733803 75.05484772]
[26.87505341 60.37819672]
[35.28997803 47.96090698]
[47.77380371 39.64501190]
[62.47463226 36.66412735]
[77.21167755 39.46044540]
[89.79879761 47.61915588]
[98.36875153 59.92995453]
[101.65025330 74.56661224]
[99.15718079 89.35607910]
[108.81799316 77.88137817]
[118.47879791 66.40667725]
[103.48013306 66.60679626]
[92.63722992 56.24188995]
[92.16139221 41.24943924]
[102.32520294 30.21780396]
[117.30637360 29.46640778]
[128.52301025 39.42568207]
[129.55000305 54.38960266]
[140.19601440 43.82255554]
[150.84202576 33.25550842]
[161.48802185 22.68845940]
[165.83178711 7.47523022]
[180.31546021 4.00067568]
[190.96145630 -6.56637239]
[201.60746765 -17.13341904]
[212.25347900 -27.70046806]
[222.82052612 -38.34647751]
[233.30802917 -49.07085800]
[243.79553223 -59.79523468]
[254.28303528 -70.51961517]
[256.28991699 -76.81912994]
[260.53906250 -80.59296417]
[265.24603271 -81.40132141]
[276.04821777 -91.80869293]
[286.85037231 -102.21606445]
[277.47695923 -113.94055939]
[269.22534180 -126.47991943]
[262.16592407 -139.72715759]
[256.35891724 -153.56924438]
[251.85391235 -167.88809204]
[248.68930054 -182.56153870]
[246.89210510 -197.46438599]
[246.47764587 -212.46946716]
[247.44946289 -227.44880676]
[249.79927063 -242.27455139]
[253.50701904 -256.82025146]
[258.54107666 -270.96179199]
[264.85848999 -284.57849121]
[272.40533447 -297.55422974]
[281.11727905 -309.77825928]
[290.91995239 -321.14630127]
[301.72970581 -331.56137085]
[313.45437622 -340.93457031]
[325.99386597 -349.18597412]
[339.24121094 -356.24517822]
[353.08340454 -362.05194092]
[367.40231323 -366.55673218]
[382.07580566 -369.72106934]
[396.97869873 -371.51803589]
[411.98379517 -371.93225098]
[426.96310425 -370.96017456]
[441.78881836 -368.61010742]
[456.33444214 -364.90213013]
[470.47589111 -359.86782837]
[484.09252930 -353.55020142]
[497.06811523 -346.00311279]
[509.29199219 -337.29098511]
[520.65991211 -327.48812866]
[531.07476807 -316.67819214]
[540.44775391 -304.95336914]
[548.69897461 -292.41375732]
[555.75793457 -279.16629028]
[561.56451416 -265.32400513]
[566.06903076 -251.00498962]
[569.23315430 -236.33143616]
[571.02984619 -221.42854309]
[571.44378662 -206.42343140]
[570.47149658 -191.44413757]
[568.12115479 -176.61845398]
[564.41296387 -162.07289124]
[559.37841797 -147.93151855]
[553.06054688 -134.31501770]
[545.51324463 -121.33953857]
[536.80090332 -109.11579895]
[526.99786377 -97.74808502]
[516.18774414 -87.33338928]
[504.46279907 -77.96055603]
[491.92303467 -69.70957184]
[478.67544556 -62.65081406]
[464.83306885 -56.84451675]
[450.51397705 -52.34021378]
[435.84039307 -49.17634201]
[420.93743896 -47.37988663]
[405.93234253 -46.96617889]
[390.95306396 -47.93875122]
[376.12741089 -50.28929901]
[361.58190918 -53.99777222]
[347.44064331 -59.03253174]
[333.82421875 -65.35061646]
[320.84887695 -72.89813232]
[308.62527466 -81.61067200]
[297.25772095 -91.41390991]
[286.45556641 -81.00653839]
[275.65341187 -70.59915924]
[265.00741577 -60.03211594]
[254.51991272 -49.30773544]
[244.03240967 -38.58335495]
[233.54490662 -27.85897446]
[231.11578369 -20.87892151]
[222.82052612 -17.05445862]
[212.17451477 -6.48741102]
[201.52850342 4.07963657]
[190.88250732 14.64668465]
[187.30021667 29.10408783]
[172.05506897 33.33446884]
[161.40907288 43.90151596]
[150.76306152 54.46856308]
[140.11705017 65.03561401]
[129.95350647 76.06748962]
[120.29269409 87.54219055]
[110.63188171 99.01689148]
[102.21726227 111.43438721]
[95.14015961 124.65991211]
[88.06304932 137.88543701]
[80.98594666 151.11096191]
[76.47831726 165.41764832]
[74.69585419 180.31137085]
[72.91338348 195.20509338]
[71.68640900 210.15481567]
[71.01662445 225.13986206]
[70.34683990 240.12489319]
[69.67705536 255.10993958]
[69.00727081 270.09497070]
[68.33748627 285.08001709]
[67.66770172 300.06506348]
[70.37053680 306.09881592]
[69.71837616 311.74432373]
[66.74829865 315.48431396]
[65.63265228 330.44277954]
[64.51699829 345.40124512]
[63.40135193 360.35968018]
[62.28570175 375.31814575]
[75.87370300 382.13244629]
[85.81587219 393.63119507]
[90.59610748 408.06097412]
[89.48545837 423.22128296]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 206]
[11 205]
[12 204]
[13 203]
[14 202]
[15 199]
[16 198]
[17 197]
[18 196]
[19 195]
[20 194]
[21 193]
[27 192]
[28 191]
[29 190]
[55 189]
[56 188]
[57 187]
[58 186]
[73 185]
[74 184]
[75 183]
[82 182]
[83 181]
[84 180]
[85 179]
[87 177]
[88 176]
[89 175]
[90 174]
[91 172]
[92 171]
[93 170]
[94 169]
[97 168]
[98 167]
[99 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
