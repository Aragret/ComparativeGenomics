%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGAACAAUAUUAAUACGGAGUAUCCCUAUCAUGUUCCUUCCCCAUCCGAUACACAAAACAGUCCCCCAACUCUUACUCACACUCCGCAUAAUAUGGUxxxxxxxxxxUAAUUAAUUGGUGAGUAAGUAGCUGGAGGGGUGGGGUAGGUUGUAGAGGCGUACUACUUUGAAGCCGAGUGAGGAACCGCGGACGGACUAGGAGGUUUAG\
) } def
/len { sequence length } bind def

/coor [
[231.34756470 342.35708618]
[221.02090454 331.47775269]
[210.69422913 320.59841919]
[200.36755371 309.71908569]
[188.28735352 309.09060669]
[179.59498596 300.11135864]
[179.34220886 287.21566772]
[169.17866516 276.18377686]
[159.01512146 265.15191650]
[148.85157776 254.12002563]
[153.08943176 268.50894165]
[154.28594971 283.46115112]
[152.39022827 298.34085083]
[147.48289490 312.51541138]
[139.77259827 325.38211060]
[129.58720398 336.39379883]
[117.35977173 345.08230591]
[103.61023712 351.07815552]
[88.92324066 354.12643433]
[73.92326355 354.09750366]
[59.24813080 350.99261475]
[45.52182388 344.94378662]
[33.32799530 336.20819092]
[23.18513680 325.15728760]
[15.52452374 312.26095581]
[10.67189121 298.06759644]
[8.83357430 283.18066406]
[10.08773994 268.23318481]
[14.38106060 253.86073303]
[21.53098106 240.67442322]
[31.23348427 229.23495483]
[43.07601547 220.02873230]
[56.55501938 213.44721985]
[71.09736633 209.77024841]
[86.08471680 209.15419006]
[100.87978363 211.62521362]
[114.85347748 217.07826233]
[127.41164398 225.28146362]
[138.02040100 235.88615417]
[133.19439697 221.68370056]
[128.36840820 207.48124695]
[116.94770813 197.92002869]
[119.83364105 182.36425781]
[115.00764465 168.16180420]
[110.18164825 153.95935059]
[105.35565186 139.75688171]
[100.52965546 125.55442810]
[95.70365143 111.35197449]
[93.21011353 126.14326477]
[86.10690308 139.35478210]
[75.14362335 149.59230042]
[61.47727585 155.77540588]
[46.55009079 157.25160217]
[31.93737221 153.86509705]
[19.18123627 145.97326660]
[9.62786674 134.40895081]
[4.28545475 120.39258575]
[3.71779704 105.40333557]
[7.98480082 91.02304077]
[16.63615799 78.76931000]
[28.75887108 69.93529510]
[43.07360077 65.45326996]
[58.06967926 65.79624176]
[72.16453552 70.92800903]
[83.87070465 80.30700684]
[91.95288086 92.94362640]
[90.83723450 77.98516846]
[89.72158813 63.02671432]
[88.49460602 48.07698441]
[87.15637207 33.13679886]
[85.81813812 18.19661331]
[76.88050079 5.14175892]
[83.45147705 -8.22504902]
[82.11324310 -23.16523361]
[80.66382599 -38.09504318]
[79.10330200 -53.01364899]
[77.54277802 -67.93225098]
[75.98225403 -82.85086060]
[74.42173767 -97.76946259]
[72.86121368 -112.68806458]
[71.30068970 -127.60667419]
[69.74016571 -142.52526855]
[68.17964172 -157.44387817]
[53.17064285 -158.29602051]
[38.49273300 -161.54489136]
[24.52610016 -167.10630798]
[11.63251781 -174.83622742]
[0.14595796 -184.53442383]
[-9.63604832 -195.94970703]
[-17.46012306 -208.78637695]
[-23.12360573 -222.71192932]
[-26.47979736 -237.36566162]
[-27.44176483 -252.36802673]
[-25.98459053 -267.33041382]
[-22.14601898 -281.86523438]
[-16.02547836 -295.59606934]
[-7.78150558 -308.16717529]
[2.37236071 -319.25299072]
[14.17311096 -328.56634521]
[27.31507874 -335.86599731]
[41.45785141 -340.96286011]
[56.23510361 -343.72491455]
[71.26406097 -344.08065796]
[86.15544128 -342.02084351]
[100.52352905 -337.59881592]
[113.99614716 -330.92910767]
[126.22431946 -322.18450928]
[136.89131165 -311.59152222]
[145.72082520 -299.42453003]
[152.48416138 -285.99868774]
[157.00611877 -271.66174316]
[159.16957092 -256.78506470]
[158.91848755 -241.75398254]
[156.25935364 -226.95785522]
[151.26107788 -212.77993774]
[144.05310059 -199.58746338]
[134.82214355 -187.72216797]
[123.80728912 -177.49136353]
[111.29387665 -169.16006470]
[97.60601044 -162.94407654]
[83.09824371 -159.00440979]
[84.65876770 -144.08580017]
[86.21929169 -129.16719055]
[87.77981567 -114.24858856]
[89.34033966 -99.32998657]
[90.90086365 -84.41137695]
[92.46138763 -69.49277496]
[94.02190399 -54.57416916]
[95.58242798 -39.65556717]
[99.40473938 -33.33008575]
[97.05342865 -24.50346756]
[98.39166260 -9.56328297]
[107.23358154 2.42294860]
[100.75832367 16.85837936]
[102.09655762 31.79856300]
[103.43479156 46.73874664]
[107.16250610 53.12043762]
[104.68003845 61.91106796]
[105.79568481 76.86952209]
[106.91133881 91.82797241]
[109.90611267 106.52597809]
[114.73210907 120.72843170]
[119.55810547 134.93089294]
[124.38410187 149.13334656]
[129.21009827 163.33580017]
[134.03610229 177.53825378]
[145.80198669 188.11532593]
[142.57086182 202.65524292]
[147.39685059 216.85769653]
[152.22285461 231.06016541]
[159.88345337 243.95648193]
[170.04699707 254.98835754]
[180.21054077 266.02023315]
[190.37408447 277.05212402]
[208.07348633 282.13275146]
[211.24688721 299.39242554]
[221.57356262 310.27175903]
[231.90023804 321.15109253]
[242.22689819 332.03042603]
[254.24472046 323.02551270]
[267.22671509 315.47668457]
[280.99728394 309.48608398]
[295.37023926 305.13467407]
[310.15118408 302.48129272]
[325.14019775 301.56188965]
[340.13464355 302.38885498]
[354.93167114 304.95098877]
[369.33117676 309.21368408]
[383.13842773 315.11926270]
[396.16671753 322.58789062]
[408.23986816 331.51849365]
[419.19454956 341.79037476]
[428.88262939 353.26458740]
[437.17309570 365.78594971]
[443.95385742 379.18511963]
[449.13314819 393.28091431]
[452.64099121 407.88269043]
[454.42990112 422.79296875]
[454.47570801 437.81008911]
[452.77780151 452.73101807]
[449.35910034 467.35391235]
[444.26586914 481.48101807]
[437.56701660 494.92132568]
[429.35305786 507.49304199]
[419.73516846 519.02612305]
[408.84335327 529.36462402]
[396.82492065 538.36877441]
[383.84243774 545.91668701]
[370.07144165 551.90643311]
[355.69821167 556.25689697]
[340.91708374 558.90924072]
[325.92797852 559.82763672]
[310.93362427 558.99969482]
[296.13677979 556.43658447]
[281.73754883 552.17291260]
[267.93066406 546.26641846]
[254.90287781 538.79693604]
[242.83035278 529.86547852]
[231.87635803 519.59289551]
[222.18902588 508.11801147]
[213.89938354 495.59609985]
[207.11953735 482.19647217]
[201.94116211 468.10034180]
[198.43431091 453.49835205]
[196.64637756 438.58795166]
[196.60157776 423.57080078]
[198.30050659 408.65002441]
[201.72016907 394.02734375]
[206.81433105 379.90057373]
[213.51411438 366.46072388]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 159]
[2 158]
[3 157]
[4 156]
[7 154]
[8 153]
[9 152]
[10 151]
[39 150]
[40 149]
[41 148]
[43 146]
[44 145]
[45 144]
[46 143]
[47 142]
[48 141]
[66 140]
[67 139]
[68 138]
[69 136]
[70 135]
[71 134]
[73 132]
[74 131]
[75 129]
[76 128]
[77 127]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
[83 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
