%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:30:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxUAAGGGGGGUAGGAAUGGUGGGAGCAAUUGGGAUUGUUUUUUUUGAGUAUGGGGGUAAUACAUUUUAGGUAACAGCGUAGGUGGAAAUAAUAGUCAGAGA\
) } def
/len { sequence length } bind def

/coor [
[142.16535950 180.82501221]
[145.93696594 166.29925537]
[150.80944824 152.10482788]
[156.75421143 138.32504272]
[143.47636414 131.34658813]
[130.19851685 124.36813354]
[116.92066956 117.38967896]
[103.64282227 110.41122437]
[105.53640747 125.29122162]
[95.19347382 136.15510559]
[80.23844910 134.99440002]
[71.69561768 122.66476440]
[75.86244202 108.25512695]
[89.66564178 102.38767242]
[76.94360352 94.44099426]
[64.22156525 86.49430847]
[51.49953079 78.54762268]
[38.77749252 70.60093689]
[26.05545807 62.65425491]
[13.33342171 54.70756912]
[-2.47005677 53.95880890]
[-9.16545200 40.65388870]
[-21.88748932 32.70720291]
[-34.60952377 24.76051903]
[-43.37427521 36.94006729]
[-52.91683960 48.52029800]
[-63.19636154 59.45161438]
[-74.16881561 69.68721008]
[-85.78722382 79.18325806]
[-98.00182343 87.89908600]
[-110.76032257 95.79738617]
[-124.00807953 102.84431458]
[-137.68835449 109.00971222]
[-151.74258423 114.26717377]
[-166.11058044 118.59418488]
[-180.73080444 121.97221375]
[-195.54067993 124.38680267]
[-210.47674561 125.82759857]
[-225.47508240 126.28844452]
[-240.47143555 125.76736450]
[-255.40161133 124.26658630]
[-270.20166016 121.79253387]
[-284.80819702 118.35581207]
[-299.15869141 113.97113037]
[-313.19168091 108.65726471]
[-326.84710693 102.43696594]
[-340.06643677 95.33688354]
[-352.79312134 87.38740540]
[-364.97262573 78.62258911]
[-376.55279541 69.07994843]
[-387.48403931 58.80036545]
[-397.71957397 47.82785034]
[-407.21554565 36.20938492]
[-415.93130493 23.99473190]
[-423.82952881 11.23618984]
[-430.87637329 -2.01160526]
[-437.04171753 -15.69192410]
[-442.29907227 -29.74618340]
[-446.62600708 -44.11420441]
[-450.00393677 -58.73445511]
[-452.41845703 -73.54433441]
[-453.85916138 -88.48041534]
[-454.31991577 -103.47874451]
[-453.79873657 -118.47509766]
[-452.29788208 -133.40525818]
[-449.82373047 -148.20529175]
[-446.38693237 -162.81181335]
[-442.00216675 -177.16229248]
[-436.68820190 -191.19525146]
[-430.46783447 -204.85063171]
[-423.36767578 -218.06993103]
[-415.41812134 -230.79655457]
[-406.65322876 -242.97599792]
[-397.11053467 -254.55610657]
[-386.83087158 -265.48730469]
[-375.85830688 -275.72277832]
[-364.23977661 -285.21868896]
[-352.02508545 -293.93438721]
[-339.26647949 -301.83251953]
[-326.01864624 -308.87930298]
[-312.33828735 -315.04452515]
[-298.28399658 -320.30181885]
[-283.91595459 -324.62866211]
[-269.29568481 -328.00653076]
[-254.48579407 -330.42092896]
[-239.54971313 -331.86157227]
[-224.55137634 -332.32223511]
[-209.55502319 -331.80096436]
[-194.62487793 -330.30001831]
[-179.82485962 -327.82580566]
[-165.21835327 -324.38888550]
[-150.86790466 -320.00402832]
[-136.83496094 -314.69000244]
[-123.17963409 -308.46954346]
[-109.96037292 -301.36932373]
[-97.23379517 -293.41967773]
[-85.05440521 -284.65472412]
[-73.47434235 -275.11193848]
[-62.54320908 -264.83224487]
[-52.30780411 -253.85960388]
[-42.81196213 -242.24102783]
[-34.09634781 -230.02626038]
[-26.19828033 -217.26763916]
[-19.15158081 -204.01976013]
[-12.98642445 -190.33935547]
[-7.72921228 -176.28503418]
[-3.40245652 -161.91697693]
[-0.02468484 -147.29667664]
[2.38963819 -132.48677063]
[3.83017421 -117.55067444]
[4.29075480 -102.55233765]
[3.76940703 -87.55598450]
[2.26836371 -72.62584686]
[-0.20594725 -57.82584381]
[-3.64293051 -43.21936035]
[-8.02786827 -28.86893845]
[-13.34198380 -14.83603382]
[-19.56251907 -1.18073499]
[-26.66283989 12.03848267]
[-13.94080353 19.98516655]
[-1.21876776 27.93185043]
[13.67474556 28.11221123]
[21.28010559 41.98553467]
[34.00214386 49.93221664]
[46.72417831 57.87890244]
[59.44621658 65.82558441]
[72.16825104 73.77227020]
[84.89028931 81.71895599]
[97.61231995 89.66564178]
[110.62127686 97.13337708]
[123.89912415 104.11183167]
[137.17697144 111.09028625]
[150.45481873 118.06874084]
[163.73266602 125.04718781]
[171.71075439 112.33606720]
[180.63847351 100.27295685]
[190.46342468 88.92865753]
[201.12796021 78.36974335]
[212.56947327 68.65818024]
[224.72082520 59.85095978]
[237.51072693 51.99975967]
[250.86410522 45.15066147]
[264.70257568 39.34385681]
[278.94497681 34.61342621]
[293.50769043 30.98712349]
[308.30526733 28.48623276]
[323.25088501 27.12543106]
[338.25680542 26.91270447]
[353.23495483 27.84930038]
[368.09747314 29.92972374]
[382.75714111 33.14176178]
[397.12789917 37.46656799]
[411.12542725 42.87876511]
[424.66760254 49.34658432]
[437.67489624 56.83207703]
[450.07104492 65.29131317]
[461.78323364 74.67464447]
[472.74279785 84.92700958]
[482.88537598 95.98824310]
[492.15145874 107.79343414]
[500.48666382 120.27330017]
[507.84207153 133.35459900]
[514.17456055 146.96057129]
[519.44689941 161.01138306]
[523.62823486 175.42454529]
[526.69390869 190.11550903]
[528.62603760 204.99803162]
[529.41320801 219.98480225]
[529.05090332 234.98783875]
[527.54113770 249.91912842]
[524.89282227 264.69104004]
[521.12152100 279.21685791]
[516.24926758 293.41137695]
[510.30477905 307.19128418]
[503.32287598 320.47570801]
[495.34454346 333.18667603]
[486.41659546 345.24963379]
[476.59143066 356.59371948]
[465.92669678 367.15243530]
[454.48498535 376.86380005]
[442.33346558 385.67077637]
[429.54342651 393.52172852]
[416.18991089 400.37057495]
[402.35131836 406.17712402]
[388.10882568 410.90728760]
[373.54605103 414.53332520]
[358.74844360 417.03393555]
[343.80279541 418.39443970]
[328.79687500 418.60687256]
[313.81872559 417.67001343]
[298.95623779 415.58929443]
[284.29666138 412.37698364]
[269.92596436 408.05191040]
[255.92854309 402.63943481]
[242.38650513 396.17135620]
[229.37933350 388.68563843]
[216.98336792 380.22616577]
[205.27133179 370.84259033]
[194.31198120 360.59002686]
[184.16961670 349.52859497]
[174.90376282 337.72323608]
[166.56878662 325.24322510]
[159.21360779 312.16177368]
[152.88139343 298.55566406]
[147.60931396 284.50476074]
[143.42828369 270.09152222]
[140.36285400 255.40051270]
[138.43101501 240.51794434]
[137.64410400 225.53117371]
[138.00672913 210.52812195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 134]
[5 133]
[6 132]
[7 131]
[8 130]
[14 129]
[15 128]
[16 127]
[17 126]
[18 125]
[19 124]
[20 123]
[22 121]
[23 120]
[24 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
