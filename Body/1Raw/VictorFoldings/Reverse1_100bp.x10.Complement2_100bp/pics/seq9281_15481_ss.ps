%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:32:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUAGUAACCAUAUACCAAUCACACAACCAAUCAUCCGGAUCAUACUCCUCGCAAUACCUCACCUUCACUUUAGUGUACCGAUCCGGCCUCCAGUAAUCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[64.99240875 430.38375854]
[71.05852509 444.14276123]
[74.71193695 458.72906494]
[75.84753418 473.72302246]
[74.43263245 488.69320679]
[70.50794983 503.20886230]
[64.18640137 516.85241699]
[55.64987946 529.23126221]
[45.14398956 539.98925781]
[32.97100830 548.81683350]
[19.48117638 555.46008301]
[5.06262636 559.72778320]
[-9.86979389 561.49719238]
[-24.88644981 560.71740723]
[-39.55527878 557.41082764]
[-53.45423126 551.67260742]
[-66.18341064 543.66784668]
[-77.37656403 533.62689209]
[-86.71165466 521.83856201]
[-93.92008209 508.64212036]
[-98.79444885 494.41717529]
[-101.19450378 479.57305908]
[-101.05120850 464.53686523]
[-98.36867523 449.74118042]
[-93.22408295 435.61175537]
[-85.76545715 422.55505371]
[-76.20739746 410.94680786]
[-64.82490540 401.12097168]
[-51.94548035 393.36029053]
[-37.93968964 387.88800049]
[-23.21050453 384.86160278]
[-8.18171501 384.36813354]
[6.71427059 386.42184448]
[21.04886436 390.96356201]
[27.92827797 377.63415527]
[34.80768967 364.30471802]
[41.68710327 350.97528076]
[48.56651688 337.64584351]
[55.44592667 324.31643677]
[60.16606140 310.07843018]
[62.61178970 295.27917480]
[57.05319214 281.46066284]
[66.93704987 269.10671997]
[69.27253723 254.28964233]
[71.49765015 239.45559692]
[73.72277069 224.62155151]
[75.94789124 209.78750610]
[78.17300415 194.95347595]
[80.39812469 180.11943054]
[82.62323761 165.28538513]
[84.84835815 150.45133972]
[87.07347107 135.61729431]
[81.30975342 121.88307190]
[91.00858307 109.38334656]
[92.79105377 94.48962402]
[94.12928772 79.54943848]
[95.46752167 64.60925293]
[88.99226379 50.17382812]
[97.83418274 38.18759537]
[99.17241669 23.24740982]
[100.51065063 8.30722427]
[101.84888458 -6.63296080]
[103.18711853 -21.57314491]
[94.63086700 -9.25281620]
[82.24272919 -0.79503673]
[67.65258026 2.68742728]
[52.78000259 0.73639750]
[39.58174515 -6.39143467]
[29.79426193 -17.75827980]
[24.70526505 -31.86863518]
[24.98430061 -46.86603928]
[30.59465408 -60.77732849]
[40.79819107 -71.77223206]
[54.25245667 -78.40417480]
[69.18731689 -79.80062103]
[83.63782501 -75.77783966]
[95.70277405 -66.86509705]
[103.79480743 -54.23501587]
[106.84934235 -39.54692459]
[111.46335602 -53.81966019]
[116.07736206 -68.09239197]
[120.69137573 -82.36512756]
[125.30538177 -96.63785553]
[129.91938782 -110.91059113]
[134.53340149 -125.18332672]
[137.19918823 -139.94454956]
[137.86898804 -154.92958069]
[138.53877258 -169.91462708]
[138.98536682 -184.90797424]
[139.20869446 -199.90631104]
[139.43202209 -214.90464783]
[139.65534973 -229.90298462]
[139.87867737 -244.90132141]
[140.10200500 -259.89965820]
[140.32533264 -274.89797974]
[125.84752655 -279.17532349]
[113.06122589 -287.20111084]
[102.91524506 -298.37973022]
[96.16249847 -311.88168335]
[93.30408478 -326.70504761]
[94.55210876 -341.74981689]
[99.81396484 -355.89956665]
[108.69918060 -368.10430908]
[120.54842377 -377.45834351]
[134.48239136 -383.26754761]
[149.46710205 -385.10086060]
[164.39059448 -382.82220459]
[178.14543152 -376.60070801]
[189.71090698 -366.89804077]
[198.22880554 -354.43417358]
[203.06704712 -340.13400269]
[203.86657715 -325.05877686]
[200.56806946 -310.32708740]
[193.41632080 -297.03216553]
[182.94201660 -286.16055298]
[169.92242432 -278.51904297]
[155.32366943 -274.67465210]
[155.10034180 -259.67633057]
[154.87701416 -244.67799377]
[154.65368652 -229.67965698]
[154.43035889 -214.68132019]
[154.20703125 -199.68298340]
[153.98370361 -184.68464661]
[156.60827637 -180.69456482]
[156.75416565 -175.01339722]
[153.52380371 -169.24484253]
[152.85401917 -154.25979614]
[152.18423462 -139.27476501]
[159.77413940 -152.21281433]
[170.94880676 -162.21914673]
[184.64314270 -168.34002686]
[199.55189514 -169.99201965]
[214.25405884 -167.01770020]
[227.34829712 -159.70054626]
[237.58657837 -148.73799133]
[243.99302673 -135.17489624]
[245.95704651 -120.30403900]
[243.29142761 -105.54278564]
[236.25022888 -92.29810333]
[225.50459290 -81.83238220]
[212.07872009 -75.14315796]
[197.25227356 -72.86798859]
[182.43841553 -75.22374725]
[169.04910278 -81.98588562]
[158.36053467 -92.50988007]
[151.39146423 -105.79265594]
[148.80613708 -120.56931305]
[144.19212341 -106.29658508]
[139.57810974 -92.02384949]
[134.96411133 -77.75111389]
[130.35009766 -63.47838211]
[125.73608398 -49.20565033]
[121.12207794 -34.93291473]
[118.12730408 -20.23491096]
[116.78907013 -5.29472637]
[115.45083618 9.64545822]
[114.11260223 24.58564377]
[112.77436829 39.52582932]
[119.34534454 52.89263535]
[110.40770721 65.94748688]
[109.06947327 80.88767242]
[107.73123932 95.82785797]
[109.48027039 98.32393646]
[110.35974121 101.51157379]
[110.11175537 105.06993866]
[108.60055542 108.58740234]
[105.84262848 111.60845947]
[111.44718933 126.40370941]
[101.90751648 137.84240723]
[99.68240356 152.67645264]
[97.45728302 167.51049805]
[95.23216248 182.34454346]
[93.00704956 197.17858887]
[90.78192902 212.01263428]
[88.55681610 226.84667969]
[86.33169556 241.68072510]
[84.10658264 256.51477051]
[85.92835236 265.46566772]
[81.73632050 271.55242920]
[87.11997986 286.42950439]
[77.41106415 297.72488403]
[74.96533203 312.52416992]
[83.82629395 300.42114258]
[95.58982086 291.11416626]
[109.40669250 285.27517700]
[124.27946472 283.32565308]
[139.13446045 285.40634155]
[152.89927673 291.36703491]
[164.58021545 300.77743530]
[173.33403015 312.95819092]
[178.52877808 327.02993774]
[179.78942871 341.97686768]
[177.02499390 356.71994019]
[170.43502808 370.19482422]
[160.49528503 381.42874146]
[147.92329407 389.61074829]
[133.62664795 394.15014648]
[118.63745117 394.71923828]
[104.03777313 391.27697754]
[90.88157654 384.07180786]
[80.11862183 373.62390137]
[72.52589417 360.68750000]
[68.65151978 346.19647217]
[68.77536011 331.19583130]
[61.89594650 344.52526855]
[55.01653290 357.85470581]
[48.13711929 371.18414307]
[41.25770569 384.51354980]
[34.37829590 397.84298706]
[46.38460159 406.89596558]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 209]
[35 208]
[36 207]
[37 206]
[38 205]
[39 204]
[40 182]
[41 181]
[43 179]
[44 177]
[45 176]
[46 175]
[47 174]
[48 173]
[49 172]
[50 171]
[51 170]
[52 169]
[54 167]
[55 162]
[56 161]
[57 160]
[59 158]
[60 157]
[61 156]
[62 155]
[63 154]
[79 153]
[80 152]
[81 151]
[82 150]
[83 149]
[84 148]
[85 147]
[86 128]
[87 127]
[88 126]
[89 123]
[90 122]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
