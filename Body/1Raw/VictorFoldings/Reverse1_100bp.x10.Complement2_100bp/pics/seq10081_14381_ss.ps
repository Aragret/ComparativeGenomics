%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCGGCGUGAGCAUUCCCCACCUAAAAAGAUACAUCGGCAACUCAACACCAUCAGUUUUACAUUAUUAAUAAUCAUCAUUCCGAUCCUCCCACAACUAAxxxxxxxxxxAGCGAUUGGGGUGAUUUUGUGAGUGGUUCUGGAGUUGGGGACUGGGGGUACGGAGUCCUAUGAGGAGUUAUCGGUAGCGACAUCAUAUAGGUUUCUGUUG\
) } def
/len { sequence length } bind def

/coor [
[13.02529907 628.97918701]
[0.27518603 636.89001465]
[-12.94207764 643.99285889]
[-26.57535744 650.26025391]
[-40.57190704 655.66796875]
[-54.87757492 660.19500732]
[-69.43701935 663.82397461]
[-84.19390869 666.54071045]
[-99.09115601 668.33477783]
[-114.07111359 669.19921875]
[-129.07583618 669.13067627]
[-144.04728699 668.12939453]
[-158.92750549 666.19934082]
[-173.65896606 663.34790039]
[-188.18464661 659.58605957]
[-202.44836426 654.92852783]
[-216.39492798 649.39318848]
[-229.97038269 643.00146484]
[-243.12219238 635.77819824]
[-255.79949951 627.75122070]
[-267.95324707 618.95159912]
[-279.53643799 609.41345215]
[-290.50421143 599.17358398]
[-300.81414795 588.27172852]
[-310.42639160 576.74993896]
[-319.30374146 564.65283203]
[-327.41183472 552.02728271]
[-334.71929932 538.92199707]
[-341.19787598 525.38781738]
[-346.82250977 511.47705078]
[-351.57144165 497.24346924]
[-355.42630005 482.74221802]
[-358.37213135 468.02935791]
[-360.39758301 453.16180420]
[-361.49481201 438.19708252]
[-361.65954590 423.19311523]
[-360.89117432 408.20791626]
[-359.19265747 393.29946899]
[-356.57058716 378.52545166]
[-353.03506470 363.94305420]
[-348.59982300 349.60864258]
[-343.28198242 335.57772827]
[-337.10211182 321.90454102]
[-330.08416748 308.64199829]
[-322.25524902 295.84143066]
[-313.64566040 283.55233765]
[-304.28872681 271.82229614]
[-294.22064209 260.69665527]
[-283.48034668 250.21844482]
[-272.10940552 240.42823792]
[-260.15179443 231.36390686]
[-247.65377808 223.06051636]
[-234.66372681 215.55017090]
[-221.23190308 208.86195374]
[-207.41023254 203.02172852]
[-193.25222778 198.05209351]
[-178.81265259 193.97225952]
[-164.14735413 190.79803467]
[-149.31309509 188.54168701]
[-134.36724854 187.21194458]
[-119.36763763 186.81396484]
[-104.37230682 187.34927368]
[-89.43926239 188.81579590]
[-74.62628174 191.20788574]
[-59.99066544 194.51625061]
[-45.58904266 198.72811890]
[-31.47713089 203.82717896]
[-17.70952415 209.79371643]
[-4.33948946 216.60462952]
[8.58124828 224.23359680]
[16.99586678 211.81610107]
[25.41048622 199.39860535]
[33.82510376 186.98110962]
[42.14704895 174.50131226]
[50.37585449 161.95991516]
[50.88876724 147.07414246]
[64.92847443 139.78050232]
[73.15727997 127.23909760]
[81.38608551 114.69770050]
[89.61489868 102.15629578]
[97.37128448 89.31735229]
[104.64451599 76.19866180]
[111.91774750 63.07996750]
[119.19097900 49.96127319]
[115.06107330 34.94189835]
[122.62404633 21.74128723]
[136.96817017 17.89661407]
[144.24140930 4.77792072]
[145.66557312 -4.24480391]
[151.72183228 -8.48077583]
[159.18957520 -21.48972893]
[166.65731812 -34.49868011]
[174.12506104 -47.50763321]
[181.10351562 -60.78548050]
[187.58300781 -74.31382751]
[194.06250000 -87.84217072]
[200.54199219 -101.37051392]
[207.02149963 -114.89886475]
[194.48074341 -123.17191315]
[183.18336487 -133.07559204]
[173.33979797 -144.42539978]
[165.13345337 -157.00990295]
[158.71719360 -170.59465027]
[154.21055603 -184.92655945]
[151.69747925 -199.73866272]
[151.22480774 -214.75500488]
[152.80133057 -229.69583130]
[156.39767456 -244.28280640]
[161.94685364 -258.24420166]
[169.34548950 -271.31991577]
[178.45573425 -283.26632690]
[189.10787964 -293.86093140]
[201.10348511 -302.90631104]
[214.21908569 -310.23400879]
[228.21034241 -315.70745850]
[242.81658936 -319.22473145]
[257.76574707 -320.72027588]
[272.77929688 -320.16625977]
[287.57754517 -317.57296753]
[301.88485718 -312.98873901]
[315.43463135 -306.49899292]
[327.97448730 -298.22457886]
[339.27081299 -288.31967163]
[349.11312866 -276.96881104]
[357.31811523 -264.38342285]
[363.73291016 -250.79797363]
[368.23800659 -236.46556091]
[370.74945068 -221.65319824]
[371.22052002 -206.63681030]
[369.64236450 -191.69615173]
[366.04446411 -177.10955811]
[360.49377441 -163.14877319]
[353.09371948 -150.07386780]
[343.98217773 -138.12841797]
[333.32888794 -127.53498077]
[321.33227539 -118.49088287]
[308.21591187 -111.16462708]
[294.22406006 -105.69268036]
[279.61743164 -102.17699432]
[264.66812134 -100.68306732]
[249.65461731 -101.23871613]
[234.85664368 -103.83359528]
[220.54983521 -108.41936493]
[214.07034302 -94.89102173]
[207.59085083 -81.36267090]
[201.11135864 -67.83432770]
[194.63185120 -54.30598450]
[209.43107605 -56.75200272]
[220.67233276 -46.82052231]
[220.06896973 -31.83266258]
[208.06579590 -22.83691406]
[193.51107788 -26.46460724]
[187.13400269 -40.03989029]
[179.66627502 -27.03093910]
[172.19853210 -14.02198696]
[164.73078918 -1.01303482]
[157.36009216 12.05115032]
[150.08686829 25.16984367]
[154.42527771 39.37244034]
[147.23606873 52.78027344]
[132.30967712 57.23450470]
[125.03643799 70.35319519]
[117.76321411 83.47189331]
[110.48998260 96.59058380]
[125.40855408 95.02976990]
[136.03874207 105.61273193]
[134.54437256 120.53810883]
[122.02702332 128.80346680]
[107.71403503 124.31588745]
[102.15629578 110.38510132]
[93.92749023 122.92650604]
[85.69867706 135.46791077]
[77.46987152 148.00930786]
[76.36837769 163.79211426]
[62.91725540 170.18872070]
[54.68844986 182.73011780]
[52.59714508 191.62193298]
[46.24259949 195.39573669]
[37.82798004 207.81323242]
[29.41336250 220.23072815]
[20.99874496 232.64822388]
[32.87303925 241.82141113]
[44.15407181 251.71508789]
[54.79819107 262.29098511]
[64.76422119 273.50814819]
[74.01360321 285.32318115]
[82.51055145 297.69042969]
[90.22219086 310.56198120]
[97.11869812 323.88806152]
[103.17337799 337.61715698]
[108.36281586 351.69607544]
[112.66693115 366.07040405]
[116.06906128 380.68450928]
[118.55606079 395.48184204]
[120.11830139 410.40518188]
[120.74974060 425.39675903]
[120.44792938 440.39862061]
[119.21404266 455.35269165]
[117.05284882 470.20111084]
[113.97271729 484.88644409]
[109.98554993 499.35189819]
[105.10678864 513.54144287]
[99.35529327 527.40026855]
[92.75332642 540.87475586]
[85.32643127 553.91265869]
[77.10333252 566.46362305]
[68.11584473 578.47912598]
[58.39875031 589.91259766]
[47.98962784 600.71984863]
[36.92876053 610.85906982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 181]
[71 180]
[72 179]
[73 178]
[74 176]
[75 175]
[77 173]
[78 172]
[79 171]
[80 170]
[81 164]
[82 163]
[83 162]
[84 161]
[87 158]
[88 157]
[90 156]
[91 155]
[92 154]
[93 153]
[94 147]
[95 146]
[96 145]
[97 144]
[98 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
