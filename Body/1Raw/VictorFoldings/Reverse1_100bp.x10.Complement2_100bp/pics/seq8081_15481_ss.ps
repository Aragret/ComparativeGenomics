%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:29:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAAGUCUCGUAACUGGCAUCAUAUGGGGGCCAGCACAUCGCCACUUUCACCAAACCAAAUCUGCAGGCCCUUAACGUAGACAAAAAUUCGGAUUACACCxxxxxxxxxxAGUGGUCUGGAGGAUCCGCUGGGUCUGUUAAUAUGGGAUCGGUUGGGGAAUUUGUGGGGAGGGGUGUAGUUCGGGCUUACUAUAAAGGAUAAGCGGAUGU\
) } def
/len { sequence length } bind def

/coor [
[121.62757874 405.74862671]
[132.52215576 395.33685303]
[145.52449036 387.71871948]
[141.12348938 373.37887573]
[136.72248840 359.03903198]
[131.75483704 353.56689453]
[132.36444092 344.45281982]
[128.17742920 330.04904175]
[123.99040985 315.64526367]
[119.80340576 301.24148560]
[114.91777802 295.69598389]
[115.66299438 286.59201050]
[111.69089508 272.12750244]
[107.71880341 257.66296387]
[103.74670410 243.19844055]
[99.77461243 228.73391724]
[96.06826019 243.26881409]
[87.42103577 255.52546692]
[74.97062683 263.89129639]
[60.35509872 267.26565552]
[45.49737549 265.20458984]
[32.35224152 257.97924805]
[22.64917374 246.54025269]
[17.66477203 232.39262390]
[18.05482292 217.39768982]
[23.76800537 203.52832031]
[34.05265427 192.60925293]
[47.55564499 186.07708740]
[62.50043106 184.79122925]
[76.92076874 188.92088318]
[88.91940308 197.92269897]
[96.91860962 210.61454773]
[96.24882507 195.62950134]
[87.95093536 183.26040649]
[95.06430817 169.12850952]
[86.76642609 156.75942993]
[93.87979889 142.62753296]
[90.44075775 136.08575439]
[93.31327820 127.41474152]
[92.86666870 112.42139435]
[85.68240356 100.42647552]
[92.13998413 88.02521515]
[91.69337463 73.03186035]
[91.24677277 58.03851318]
[90.80016327 43.04516220]
[79.44239044 26.39093208]
[89.33827209 9.77893162]
[88.44545746 -5.19447374]
[87.55263519 -20.16787910]
[79.00765228 -33.48305130]
[85.97369385 -46.64829254]
[85.08087921 -61.62169647]
[84.18806458 -76.59510040]
[83.29524994 -91.56851196]
[79.66059875 -99.94866943]
[82.50229645 -106.77117920]
[81.83251190 -121.75621796]
[72.85807037 -131.02024841]
[72.60870361 -143.51510620]
[80.67278290 -152.53160095]
[80.22617340 -167.52496338]
[79.77957153 -182.51831055]
[79.33296204 -197.51165771]
[78.10598755 -212.46139526]
[76.10197449 -227.32691956]
[74.09796143 -242.19244385]
[72.09394836 -257.05798340]
[70.08993530 -271.92349243]
[68.08592224 -286.78903198]
[66.08190918 -301.65457153]
[64.07789612 -316.52008057]
[55.05338669 -304.53851318]
[40.46743393 -301.03851318]
[26.98853683 -307.62023926]
[20.77906227 -321.27465820]
[24.67790222 -335.75909424]
[36.90255737 -344.45147705]
[51.86408234 -343.37780762]
[62.72309494 -333.02722168]
[62.27648926 -348.02056885]
[53.31428146 -335.99234009]
[39.30960846 -330.61932373]
[24.60197639 -333.56643677]
[13.74870205 -343.92050171]
[10.11279202 -358.47317505]
[14.82087326 -372.71514893]
[26.41409302 -382.23339844]
[41.30016708 -384.07861328]
[54.86648560 -377.67901611]
[62.90944672 -365.01733398]
[64.46997070 -379.93591309]
[66.03049469 -394.85452271]
[67.59101868 -409.77313232]
[69.15153503 -424.69174194]
[54.80066299 -429.23455811]
[41.65818024 -436.57348633]
[30.26226997 -446.40805054]
[21.07958794 -458.33544922]
[14.48615742 -471.86734009]
[10.75197506 -486.44952393]
[10.02995396 -501.48495483]
[12.34966087 -516.35784912]
[17.61610603 -530.45928955]
[25.61362839 -543.21166992]
[36.01473618 -554.09295654]
[48.39351273 -562.65747070]
[62.24305344 -568.55450439]
[76.99623108 -571.54260254]
[92.04890442 -571.49938965]
[106.78468323 -568.42663574]
[120.60014343 -562.45019531]
[132.92955017 -553.81475830]
[143.26802063 -542.87402344]
[151.19221497 -530.07586670]
[156.37762451 -515.94445801]
[158.61190796 -501.05847168]
[157.80358887 -486.02746582]
[153.98576355 -471.46691895]
[147.31475830 -457.97311401]
[138.06375122 -446.09863281]
[126.61157990 -436.32965088]
[113.42718506 -429.06628418]
[99.05046844 -424.60592651]
[84.07014465 -423.13122559]
[82.50962067 -408.21261597]
[80.94909668 -393.29400635]
[79.38857269 -378.37539673]
[77.82804871 -363.45678711]
[77.26984406 -348.46719360]
[77.71644592 -333.47384644]
[78.94342041 -318.52410889]
[80.94743347 -303.65856934]
[82.95144653 -288.79306030]
[84.95545959 -273.92752075]
[86.95948029 -259.06198120]
[88.96349335 -244.19645691]
[90.96750641 -229.33093262]
[92.97151947 -214.46540833]
[101.99602509 -226.44699097]
[116.58197784 -229.94697571]
[130.06088257 -223.36524963]
[136.27035522 -209.71084595]
[132.37150574 -195.22640991]
[120.14685059 -186.53401184]
[105.18532562 -187.60769653]
[94.32631683 -197.95826721]
[94.77291870 -182.96492004]
[95.21952820 -167.97155762]
[95.66613007 -152.97821045]
[105.68034363 -138.56701660]
[96.81755066 -122.42600250]
[97.48733521 -107.44096375]
[98.26865387 -92.46132660]
[99.16146851 -77.48792267]
[100.05429077 -62.51451492]
[100.94710541 -47.54110718]
[109.42822266 -35.29693222]
[102.52604675 -21.06069565]
[103.41886139 -6.08728981]
[104.31167603 8.88611603]
[112.53343201 14.95371246]
[116.13380432 24.75093842]
[113.69738007 35.12610245]
[105.79351044 42.59855652]
[106.24011993 57.59190750]
[106.68672180 72.58525848]
[107.13333130 87.57860565]
[114.31759644 99.57352448]
[107.86001587 111.97478485]
[108.30662537 126.96813965]
[108.86483765 141.95774841]
[117.21063232 155.39866638]
[110.04934692 168.45872498]
[118.39514160 181.89964294]
[111.23386383 194.95971680]
[111.90364838 209.94474792]
[114.23913574 224.76182556]
[118.21122742 239.22634888]
[122.18332672 253.69087219]
[126.15541840 268.15539551]
[130.12751770 282.61993408]
[134.20718384 297.05447388]
[138.39419556 311.45825195]
[142.58120728 325.86203003]
[146.76821899 340.26580811]
[151.06234741 354.63803101]
[155.46333313 368.97787476]
[159.86433411 383.31771851]
[174.90168762 382.33029175]
[189.76130676 384.83792114]
[203.64186096 390.70535278]
[215.79476929 399.61621094]
[225.56466675 411.08993530]
[232.42463684 424.50772095]
[236.00476074 439.14602661]
[236.11196899 454.21536255]
[232.74044800 468.90310669]
[226.07205200 482.41714478]
[216.46638489 494.02868652]
[204.44146729 503.11154175]
[190.64579773 509.17587280]
[175.82334900 511.89462280]
[160.77348328 511.12121582]
[146.30781555 506.89733887]
[133.20645142 499.45077515]
[122.17596436 489.18310547]
[113.81118011 476.64807129]
[108.56322479 462.52166748]
[106.71509552 447.56567383]
[108.36647034 432.58670044]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 188]
[4 187]
[5 186]
[7 185]
[8 184]
[9 183]
[10 182]
[12 181]
[13 180]
[14 179]
[15 178]
[16 177]
[32 176]
[33 175]
[35 173]
[37 171]
[39 170]
[40 169]
[42 167]
[43 166]
[44 165]
[45 164]
[47 160]
[48 159]
[49 158]
[51 156]
[52 155]
[53 154]
[54 153]
[56 152]
[57 151]
[60 149]
[61 148]
[62 147]
[63 146]
[64 138]
[65 137]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[71 131]
[79 130]
[80 129]
[90 128]
[91 127]
[92 126]
[93 125]
[94 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
