%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxGGUGAUACGUGUAAAAUAAAGAGGUUGUAUGAGCCUAAGAUGGGAUCGUAGUGUGUGGCGUGUUAGGGGAUAGAUCCGGAAGAAUGCUCGGUUUUGGACG\
) } def
/len { sequence length } bind def

/coor [
[146.84619141 617.87896729]
[143.29261780 603.28759766]
[141.48979187 588.37835693]
[141.46302795 573.36047363]
[143.21270752 558.44488525]
[146.71424866 543.84094238]
[151.91850281 529.75366211]
[158.75242615 516.38079834]
[167.12007141 503.91003418]
[176.90396118 492.51654053]
[187.96675110 482.36022949]
[200.15313721 473.58364868]
[213.29203796 466.31002808]
[207.62925720 452.41998291]
[201.96646118 438.52996826]
[196.30368042 424.63992310]
[190.64089966 410.74990845]
[187.55023193 409.05279541]
[185.12803650 405.77438354]
[184.10855103 401.24514771]
[185.05070496 396.11102295]
[180.01379395 381.98199463]
[174.80674744 376.73712158]
[175.00877380 367.60491943]
[170.18276978 353.40246582]
[158.76206970 343.84124756]
[161.64801025 328.28549194]
[156.82202148 314.08303833]
[151.99601746 299.88058472]
[149.01185608 298.00253296]
[146.78907776 294.58575439]
[146.04098511 290.00387573]
[147.28706360 284.93490601]
[143.10005188 270.53112793]
[138.91304016 256.12734985]
[134.72602844 241.72355652]
[130.53901672 227.31977844]
[126.35200500 212.91598511]
[122.16499329 198.51220703]
[108.86101532 187.06794739]
[113.39937592 169.22181702]
[108.99838257 154.88195801]
[104.59738159 140.54211426]
[100.19638824 126.20227051]
[95.79538727 111.86241913]
[91.07525635 97.62443542]
[86.03833771 83.49539948]
[81.00141907 69.36637115]
[75.96450043 55.23734283]
[69.61482239 68.82710266]
[56.06889725 75.26976013]
[41.51974106 71.61982727]
[32.61903000 59.54599762]
[33.43605423 44.56826401]
[43.59727859 33.53424835]
[58.45712662 31.48855019]
[71.22303772 39.36788559]
[67.68336487 24.79151154]
[64.14369202 10.21513557]
[56.41465759 23.07056427]
[42.27197266 28.06901550]
[28.18148613 22.92526627]
[20.58517456 9.99096870]
[22.95597076 -4.82049036]
[34.20998001 -14.73751163]
[49.20201874 -15.22616577]
[61.07892609 -6.06148577]
[59.07491302 -20.92701340]
[57.07089996 -35.79254150]
[49.40867615 -22.89718056]
[36.03897858 -16.09635735]
[21.10455132 -17.49738312]
[9.23298931 -26.66613579]
[4.10282469 -40.76157379]
[7.30369473 -55.41607666]
[17.84377670 -66.08878326]
[32.45710754 -69.47264099]
[46.61559296 -64.51912689]
[55.93216705 -52.76290131]
[55.93216705 -67.76290131]
[55.93216705 -82.76290131]
[55.93216705 -97.76290131]
[40.51124954 -106.19074249]
[31.52870750 -121.19155884]
[31.38173485 -138.58645630]
[40.02061081 -153.58256531]
[54.98724365 -162.09362793]
[54.54063797 -177.08697510]
[54.09403229 -192.08032227]
[53.64742661 -207.07366943]
[53.20082092 -222.06703186]
[40.25077057 -233.82778931]
[39.82163239 -250.97802734]
[51.69070053 -262.89288330]
[51.02091217 -277.87792969]
[50.35112762 -292.86297607]
[35.95824432 -297.68057251]
[24.28009605 -307.37518311]
[16.89605904 -320.63565063]
[14.80476284 -335.66864014]
[18.28903770 -350.44107056]
[26.87766457 -362.95504761]
[39.40910339 -371.51821899]
[54.18857574 -374.97241211]
[69.21728516 -372.85055542]
[82.46271515 -365.43954468]
[92.13353729 -353.74169922]
[96.92185211 -339.33905029]
[96.18006897 -324.17941284]
[90.00852203 -310.31304932]
[79.24185181 -299.61520386]
[65.33616638 -293.53274536]
[66.00595093 -278.54772949]
[66.67573547 -263.56268311]
[77.30778503 -256.28332520]
[81.87406158 -244.02644348]
[78.49752045 -231.18862915]
[68.19416809 -222.51362610]
[68.64077759 -207.52027893]
[69.08737946 -192.52693176]
[69.53398895 -177.53358459]
[69.98059082 -162.54023743]
[81.68505096 -157.78376770]
[90.75459290 -148.92124939]
[95.81719208 -137.24401855]
[96.08832550 -124.47272491]
[91.49239349 -112.50392151]
[82.67916870 -103.12830353]
[70.93216705 -97.76290131]
[70.93216705 -82.76290131]
[70.93216705 -67.76290131]
[70.93216705 -52.76290131]
[71.93642426 -37.79655457]
[73.94043732 -22.93102837]
[75.94445038 -8.06549931]
[78.72006226 6.67546368]
[82.25973511 21.25183868]
[85.79940796 35.82821274]
[90.09353638 50.20042801]
[95.13044739 64.32946014]
[100.16736603 78.45848846]
[105.20428467 92.58751678]
[108.41915131 94.71753693]
[110.67953491 98.25427246]
[111.37821960 102.73968506]
[110.13523102 107.46142578]
[114.53623199 121.80126953]
[118.93723297 136.14111328]
[123.33822632 150.48095703]
[127.73922729 164.82081604]
[138.74760437 171.54228210]
[142.11799622 183.57658386]
[136.56877136 194.32519531]
[140.75578308 208.72897339]
[144.94279480 223.13276672]
[149.12980652 237.53654480]
[153.31681824 251.94032288]
[157.50382996 266.34411621]
[161.69084167 280.74789429]
[166.19847107 295.05456543]
[171.02447510 309.25701904]
[175.85046387 323.45947266]
[187.61634827 334.03656006]
[184.38522339 348.57647705]
[189.21122742 362.77893066]
[194.14282227 376.94506836]
[199.17973328 391.07409668]
[204.53091431 405.08712769]
[210.19371033 418.97714233]
[215.85649109 432.86718750]
[221.51928711 446.75720215]
[227.18206787 460.64721680]
[241.66131592 456.66128540]
[256.51037598 454.41586304]
[271.52078247 453.94247437]
[286.48181152 455.24780273]
[301.18344116 458.31347656]
[315.41928101 463.09646606]
[328.98947144 469.52966309]
[341.70355225 477.52273560]
[353.38296509 486.96343994]
[363.86383057 497.71929932]
[372.99893188 509.63928223]
[380.66009521 522.55603027]
[386.73971558 536.28826904]
[391.15249634 550.64318848]
[393.83645630 565.41931152]
[394.75390625 580.40911865]
[393.89199829 595.40222168]
[391.26281738 610.18817139]
[386.90325928 624.55932617]
[380.87454224 638.31402588]
[373.26132202 651.25909424]
[364.17041016 663.21282959]
[353.72952271 674.00744629]
[342.08514404 683.49139404]
[329.40078735 691.53149414]
[315.85449219 698.01489258]
[301.63647461 702.85064697]
[286.94631958 705.97076416]
[271.99020386 707.33148193]
[256.97814941 706.91375732]
[242.12089539 704.72338867]
[227.62696838 700.79107666]
[213.69989014 695.17211914]
[200.53514099 687.94537354]
[188.31755066 679.21228027]
[177.21862793 669.09545898]
[167.39419556 657.73693848]
[158.98216248 645.29608154]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 172]
[14 171]
[15 170]
[16 169]
[17 168]
[21 167]
[22 166]
[24 165]
[25 164]
[27 162]
[28 161]
[29 160]
[33 159]
[34 158]
[35 157]
[36 156]
[37 155]
[38 154]
[39 153]
[41 150]
[42 149]
[43 148]
[44 147]
[45 146]
[46 142]
[47 141]
[48 140]
[49 139]
[57 138]
[58 137]
[59 136]
[67 135]
[68 134]
[69 133]
[79 132]
[80 131]
[81 130]
[82 129]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[94 114]
[95 113]
[96 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
