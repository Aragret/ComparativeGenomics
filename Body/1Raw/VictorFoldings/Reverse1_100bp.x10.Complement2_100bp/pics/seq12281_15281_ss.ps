%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCCUUCAGUCCCAAUCCCACCAAUAUCAUCACACGUACCAAUAAUGAAAAUAAACCUCAACGUGGUUUUAAAAACCCCGGAUUCUGGUUACCUAUCGAxxxxxxxxxxAAUGGAAAGUGAAGUAGAACGGGAAGUAAUAACGUCGGGAUCGUUGUGAGGUGGAGGAUAAGAACGUGCUUUGCCCUAGUUUGUUGGGGGAUCCUUAGUG\
) } def
/len { sequence length } bind def

/coor [
[88.17704010 736.56365967]
[74.17266846 742.14410400]
[59.23965836 744.21014404]
[44.24620438 742.64184570]
[30.06399918 737.53021240]
[17.51758385 729.17254639]
[7.33638668 718.05468750]
[0.11233028 704.82299805]
[-3.73458838 690.24688721]
[-3.98071456 675.17358398]
[-0.61173868 660.47961426]
[6.17647123 647.01916504]
[15.98925781 635.57482910]
[28.25611877 626.81201172]
[42.26387405 621.24005127]
[57.19813156 619.18304443]
[58.75865555 604.26446533]
[60.31917953 589.34582520]
[61.87969971 574.42724609]
[63.44022369 559.50860596]
[61.00965118 552.52905273]
[65.13665009 544.38012695]
[66.91912079 529.48638916]
[68.70158386 514.59265137]
[70.48404694 499.69894409]
[58.05355072 508.09436035]
[43.30181122 505.37658691]
[34.67929840 493.10253906]
[37.12538147 478.30334473]
[49.23883057 469.45663452]
[64.08051300 471.63021851]
[73.14819336 483.57803345]
[76.25230408 468.90274048]
[77.92384338 453.99615479]
[78.14717102 438.99783325]
[78.37049866 423.99948120]
[78.59382629 409.00115967]
[78.81715393 394.00280762]
[66.57369232 391.54019165]
[54.91238403 387.06033325]
[44.16312790 380.68881226]
[34.63024139 372.60452271]
[26.58382797 363.03506470]
[20.25214005 352.25000000]
[15.81508827 340.55349731]
[13.39914513 328.27557373]
[13.07372856 315.76293945]
[14.84921455 303.36904907]
[18.67660713 291.44427490]
[24.44889259 280.32589722]
[32.00402832 270.32864380]
[41.12948990 261.73559570]
[51.56826019 254.79049683]
[63.02605438 249.69050598]
[75.17962646 246.58081055]
[87.68586731 245.55041504]
[89.24639130 230.63180542]
[90.80691528 215.71321106]
[92.36743927 200.79460144]
[93.92796326 185.87599182]
[95.48848724 170.95739746]
[95.82346344 155.96113586]
[94.93064880 140.98773193]
[94.03782654 126.01432037]
[93.14501190 111.04091644]
[91.80677795 96.10073090]
[82.48441315 83.31777191]
[88.65449524 69.76124573]
[86.87203217 54.86753082]
[78.40866089 67.25185394]
[64.32154083 72.40480042]
[49.86480331 68.40445709]
[40.43045807 56.74284744]
[39.53728867 41.76946259]
[47.51841736 29.06900787]
[61.39708328 23.37843704]
[75.99688721 26.82019234]
[85.87293243 38.11166000]
[85.87293243 23.11165810]
[85.87293243 8.11165905]
[85.87293243 -6.88834143]
[82.90336609 -12.79539108]
[83.30279541 -18.46438408]
[86.10290527 -22.33328438]
[86.54951477 -37.32663345]
[86.99611664 -52.31998444]
[87.44272614 -67.31333160]
[87.88933563 -82.30668640]
[80.56634521 -96.33110809]
[88.67915344 -108.82236481]
[89.12575531 -123.81571960]
[78.56751251 -135.26828003]
[79.23401642 -150.46730042]
[90.21735382 -160.46240234]
[90.66395569 -175.45574951]
[83.34097290 -189.48017883]
[91.45378113 -201.97143555]
[91.90038300 -216.96478271]
[77.80770111 -222.54797363]
[66.47653198 -232.61676025]
[59.27517319 -245.95529175]
[57.07322693 -260.95285034]
[60.13658905 -275.79846191]
[68.09533691 -288.69940186]
[79.98841858 -298.09780884]
[94.37969208 -302.85882568]
[109.53132629 -302.40750122]
[123.61370087 -296.79833984]
[134.92630005 -286.70870972]
[142.10305786 -273.35693359]
[144.27735901 -258.35531616]
[141.18664551 -243.51539612]
[133.20413208 -230.62915039]
[121.29375458 -221.25265503]
[106.89373779 -216.51818848]
[106.44712830 -201.52482605]
[113.80206299 -188.57283020]
[105.65731049 -175.00914001]
[105.21070099 -160.01579285]
[115.57964325 -149.38467407]
[115.34030914 -134.17292786]
[104.11911011 -123.36911011]
[103.67250061 -108.37576294]
[111.02743530 -95.42376709]
[102.88268280 -81.86007690]
[102.43607330 -66.86672974]
[101.98947144 -51.87337875]
[101.54286194 -36.88002777]
[101.09626007 -21.88667870]
[100.87293243 -6.88834143]
[100.87293243 8.11165905]
[100.87293243 23.11165810]
[100.87293243 38.11166000]
[101.76574707 53.08506393]
[103.54821014 67.97878265]
[112.74308777 79.69644165]
[106.70049286 94.31826782]
[108.92820740 96.39836121]
[110.44829559 99.33500671]
[110.94204712 102.86766052]
[110.19146729 106.62171173]
[108.11841583 110.14810181]
[109.01123810 125.12150574]
[109.90405273 140.09490967]
[110.79686737 155.06831360]
[118.50243378 142.19880676]
[131.25781250 134.30575562]
[146.21340942 133.15246582]
[160.02810669 138.99661255]
[169.61567688 150.53257751]
[172.83422852 165.18321228]
[168.96472168 179.67550659]
[158.87161255 190.77186584]
[144.80973816 195.99333191]
[129.92054749 194.17341614]
[117.53033447 185.71867371]
[110.40708923 172.51791382]
[108.84656525 187.43652344]
[107.28604126 202.35513306]
[105.72551727 217.27372742]
[104.16500092 232.19233704]
[102.60447693 247.11094666]
[119.36695862 252.76609802]
[134.32167053 262.20294189]
[146.63063049 274.88851929]
[155.60502625 290.10794067]
[160.74388123 307.00466919]
[161.76194763 324.62872314]
[158.60554504 341.99011230]
[151.45539856 358.11441040]
[140.71627808 372.09744263]
[126.99411774 383.15606689]
[111.06175232 390.67196655]
[93.81549072 394.22613525]
[93.59216309 409.22448730]
[93.36883545 424.22280884]
[93.14550781 439.22116089]
[92.92218018 454.21948242]
[100.96392822 441.55734253]
[113.41535187 433.19299316]
[128.17816162 430.53601074]
[142.76455688 434.03414917]
[154.71649170 443.09786987]
[162.01983643 456.19982910]
[163.44386292 471.13208008]
[158.74859619 485.37829590]
[148.72526550 496.53771973]
[135.06298828 502.72979736]
[120.06407928 502.91107178]
[106.25613403 497.05099487]
[95.96602631 486.13705444]
[90.92760468 472.00683594]
[87.82349396 486.68215942]
[85.37776947 501.48141479]
[83.59529877 516.37512207]
[81.81283569 531.26885986]
[80.03037262 546.16259766]
[78.35882568 561.06915283]
[76.79830933 575.98773193]
[75.23778534 590.90637207]
[73.67726135 605.82495117]
[72.11673737 620.74359131]
[86.30203247 625.84655762]
[98.85351562 634.19665527]
[109.04145050 645.30834961]
[116.27352905 658.53558350]
[120.12928772 673.10943604]
[120.38455200 688.18249512]
[117.02448273 702.87854004]
[110.24443054 716.34313965]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 202]
[17 201]
[18 200]
[19 199]
[20 198]
[22 197]
[23 196]
[24 195]
[25 194]
[32 193]
[33 192]
[34 178]
[35 177]
[36 176]
[37 175]
[38 174]
[56 162]
[57 161]
[58 160]
[59 159]
[60 158]
[61 157]
[62 145]
[63 144]
[64 143]
[65 142]
[66 137]
[68 135]
[69 134]
[78 133]
[79 132]
[80 131]
[81 130]
[84 129]
[85 128]
[86 127]
[87 126]
[88 125]
[90 123]
[91 122]
[94 119]
[95 118]
[97 116]
[98 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
