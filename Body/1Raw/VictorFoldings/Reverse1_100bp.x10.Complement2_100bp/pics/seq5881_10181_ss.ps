%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGAGUACGCGGCUUAUUAUCCAUAUCACAAGGUUACAGAAACACCAAACAUCUCUUAUCAGUUGCCAGCCGCUUGUAGUCACCCCCACUCCAUUUUACCxxxxxxxxxxCUGGGAUAUAGGGGGCGGGCGCAGGGAAAGAGGUAUUUUAAGAAGAAUCAUCGAUAAUGGAAGAAUAAUAAACUAGAUCUUUAACGGGAGGAAAAUGGGG\
) } def
/len { sequence length } bind def

/coor [
[176.64782715 718.45965576]
[170.60838318 704.70538330]
[166.41596985 690.28039551]
[164.14231873 675.43164062]
[163.82632446 660.41314697]
[165.47338867 645.48193359]
[169.05535889 630.89343262]
[174.51091003 616.89727783]
[181.74670410 603.73297119]
[190.63893127 591.62585449]
[201.03543091 580.78295898]
[212.75828552 571.38989258]
[225.60693359 563.60742188]
[239.36151123 557.56866455]
[235.17449951 543.16485596]
[230.98748779 528.76104736]
[226.80047607 514.35729980]
[222.61346436 499.95352173]
[209.30947876 488.50924683]
[213.84783936 470.66311646]
[209.44685364 456.32327271]
[205.04585266 441.98342896]
[200.64485168 427.64355469]
[196.24385071 413.30371094]
[191.73622131 398.99703979]
[187.12222290 384.72430420]
[182.50820923 370.45156860]
[166.68360901 372.00201416]
[150.90171814 370.01004028]
[135.94599915 364.57162476]
[122.55957794 355.95373535]
[111.40827179 344.58151245]
[103.04755402 331.01715088]
[97.89480591 315.93212891]
[96.20852661 300.07403564]
[98.07536316 284.22940063]
[103.40563965 269.18475342]
[111.93768311 255.68765259]
[123.25064850 244.40937805]
[136.78530884 235.91166687]
[131.74838257 221.78263855]
[126.71147156 207.65361023]
[115.14968872 198.26347351]
[117.80370331 182.66647339]
[112.76678467 168.53742981]
[107.72987366 154.40840149]
[99.04028320 166.63507080]
[84.07245636 167.61692810]
[73.86010742 156.63021851]
[75.93140411 141.77391052]
[88.75946045 133.99954224]
[102.88674927 139.03689575]
[98.91464996 124.57238007]
[94.94255829 110.10785675]
[88.40993500 123.61062622]
[75.24305725 130.79626465]
[60.35285187 128.98471069]
[49.29299164 118.85161591]
[46.18852997 104.17639160]
[52.19735718 90.43251801]
[65.07833099 82.74613190]
[80.02716064 83.98405457]
[91.46892548 93.68556976]
[89.24380493 78.85152435]
[79.54497528 66.35179901]
[85.30869293 52.61757660]
[83.08358002 37.78353119]
[73.38475037 25.28380203]
[79.14846802 11.54958153]
[76.92334747 -3.28446221]
[72.55555725 -11.30694103]
[74.77724457 -18.35576248]
[72.77323151 -33.22129059]
[70.76921082 -48.08681870]
[68.76519775 -62.95234680]
[66.76118469 -77.81787872]
[56.82913208 -66.57713318]
[41.86684418 -65.51416016]
[30.44539833 -75.23787689]
[29.10752296 -90.17809296]
[38.61960983 -101.77638245]
[53.53270340 -103.38871002]
[65.30344391 -94.09229279]
[64.63365936 -109.07733154]
[63.96387100 -124.06237030]
[63.29408646 -139.04740906]
[62.62430191 -154.03244019]
[48.16574478 -166.27435303]
[47.26221848 -184.87802124]
[60.02129745 -198.00515747]
[58.90565109 -212.96360779]
[57.79000092 -227.92205811]
[42.98831940 -230.89070129]
[29.53697777 -237.74372864]
[18.43415260 -247.97259521]
[10.50374794 -260.81826782]
[6.33425283 -275.32751465]
[6.23507214 -290.42361450]
[10.21356487 -304.98638916]
[17.97450066 -317.93515015]
[28.94196701 -328.30902100]
[42.30210495 -335.33819580]
[57.06349945 -338.50106812]
[72.13076782 -337.56292725]
[86.38580322 -332.59338379]
[98.77080536 -323.96121216]
[108.36670685 -312.30697632]
[114.46144104 -298.49548340]
[116.60272980 -283.55166626]
[114.63168335 -268.58447266]
[108.69456482 -254.70451355]
[99.23194122 -242.94180298]
[86.94599915 -234.16920471]
[72.74845123 -229.03771973]
[73.86410522 -214.07925415]
[74.97975159 -199.12080383]
[85.03299713 -193.72651672]
[91.29873657 -184.04888916]
[92.12322998 -172.42933655]
[87.18627930 -161.74629211]
[77.60934448 -154.70222473]
[78.27912903 -139.71719360]
[78.94891357 -124.73215485]
[79.61869812 -109.74711609]
[80.28848267 -94.76207733]
[81.62671661 -79.82189178]
[83.63072968 -64.95635986]
[85.63474274 -50.09083176]
[87.63875580 -35.22530365]
[89.64276886 -20.35977745]
[91.75739288 -5.50957918]
[93.98251343 9.32446480]
[103.52218628 20.76316452]
[97.91762543 35.55841446]
[100.14273834 50.39245987]
[109.68241119 61.83116150]
[104.07785034 76.62641144]
[106.30297089 91.46045685]
[109.40708160 106.13575745]
[113.37917328 120.60028076]
[117.35127258 135.06480408]
[121.85890198 149.37149048]
[126.89581299 163.50051880]
[131.93273926 177.62954712]
[143.85478210 188.03027344]
[140.84049988 202.61668396]
[145.87741089 216.74571228]
[150.91433716 230.87474060]
[164.92288208 228.94085693]
[179.03347778 229.79193115]
[192.69804382 233.39288330]
[205.38623047 239.60188293]
[216.60597229 248.17585754]
[225.92260742 258.78009033]
[232.97570801 271.00131226]
[237.49301147 284.36364746]
[239.30093384 298.34735107]
[238.33123779 312.40887451]
[234.62364197 326.00207520]
[228.32412720 338.59939575]
[219.67924500 349.71228027]
[209.02645874 358.91027832]
[196.78094482 365.83755493]
[201.39494324 380.11029053]
[206.00895691 394.38302612]
[211.62635803 401.58599854]
[210.58369446 408.90270996]
[214.98469543 423.24255371]
[219.38569641 437.58242798]
[223.78669739 451.92227173]
[228.18769836 466.26211548]
[239.19607544 472.98358154]
[242.56646729 485.01788330]
[237.01724243 495.76651001]
[241.20425415 510.17028809]
[245.39126587 524.57403564]
[249.57827759 538.97784424]
[253.76528931 553.38165283]
[268.61370850 551.10583496]
[283.63217163 550.78771973]
[298.56365967 552.43267822]
[313.15267944 556.01251221]
[327.14959717 561.46606445]
[340.31491089 568.70001221]
[352.42333984 577.59051514]
[363.26770020 587.98541260]
[372.66241455 599.70697021]
[380.44674683 612.55450439]
[386.48748779 626.30822754]
[390.68127441 640.73272705]
[392.95635986 655.58129883]
[393.27377319 670.59973145]
[391.62811279 685.53112793]
[388.04754639 700.11999512]
[382.59332275 714.11663818]
[375.35879517 727.28161621]
[366.46771240 739.38964844]
[356.07226562 750.23352051]
[344.35028076 759.62768555]
[331.50238037 767.41137695]
[317.74838257 773.45147705]
[303.32363892 777.64459229]
[288.47500610 779.91894531]
[273.45651245 780.23565674]
[258.52520752 778.58929443]
[243.93652344 775.00799561]
[229.94012451 769.55310059]
[216.77549744 762.31793213]
[204.66790771 753.42633057]
[193.82453918 743.03033447]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 178]
[15 177]
[16 176]
[17 175]
[18 174]
[20 171]
[21 170]
[22 169]
[23 168]
[24 167]
[25 165]
[26 164]
[27 163]
[40 148]
[41 147]
[42 146]
[44 144]
[45 143]
[46 142]
[52 141]
[53 140]
[54 139]
[63 138]
[64 137]
[66 135]
[67 134]
[69 132]
[70 131]
[72 130]
[73 129]
[74 128]
[75 127]
[76 126]
[83 125]
[84 124]
[85 123]
[86 122]
[87 121]
[90 116]
[91 115]
[92 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
