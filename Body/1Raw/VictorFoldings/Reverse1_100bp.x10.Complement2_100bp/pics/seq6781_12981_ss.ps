%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCGCUCAGUCGAUUUAUGAAACUGCGGCCACCCCUAUCGCUACUAAUACCAUCGCCUCCACUUUAUACGAGCACACAGAUGCAGAUAAGGAUGACAUxxxxxxxxxxGAGGAGGAUCGUCGUCGUCCGUUUAGUCGGGUUAAUCCAGAGGUGGGGACUGAGGGGAGUCGGUAUCUUCCGGGGUGGGGUCAGAGUCGGGAUGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[55.08932495 621.76733398]
[61.13566589 605.92822266]
[61.13566589 590.92822266]
[61.13566589 575.92822266]
[61.13566589 560.92822266]
[58.45198441 556.97766113]
[58.22152328 551.29931641]
[61.36564255 545.48327637]
[61.81224823 530.48992920]
[62.25885391 515.49658203]
[53.12017059 500.51489258]
[62.92798233 484.92999268]
[63.15130997 469.93167114]
[63.37463760 454.93331909]
[63.59796524 439.93499756]
[63.82129288 424.93664551]
[64.04461670 409.93832397]
[53.34259796 420.44863892]
[38.39882660 421.74621582]
[26.04539680 413.23782349]
[21.93013382 398.81335449]
[27.93447495 385.06753540]
[41.31332016 378.28472900]
[55.95004272 381.56594849]
[65.15350342 393.41284180]
[66.93596649 378.51910400]
[68.71842957 363.62539673]
[70.38997650 348.71884155]
[63.01884842 339.12753296]
[64.19685364 326.68582153]
[73.83545685 318.11492920]
[75.61791992 303.22122192]
[77.40039062 288.32748413]
[79.18285370 273.43377686]
[80.96531677 258.54006958]
[82.74778748 243.64634705]
[84.53025055 228.75262451]
[85.64589691 213.79417419]
[86.09250641 198.80082703]
[86.53910828 183.80747986]
[86.98571777 168.81413269]
[87.43232727 153.82077026]
[74.89108276 162.04983521]
[60.59115982 157.52079773]
[55.07391739 143.57232666]
[62.40646362 130.48669434]
[77.18352509 127.91014862]
[88.51132965 137.74050903]
[82.14009094 124.27735901]
[91.27111053 111.35701752]
[85.75378418 98.50981140]
[93.81028748 87.08245850]
[95.37081146 72.16385651]
[89.11119080 57.63361740]
[98.13059235 45.78035736]
[99.69110870 30.86175346]
[101.14053345 15.93194485]
[102.36750793 0.98221087]
[103.48315430 -13.97624207]
[101.00068665 -22.76687241]
[104.72840118 -29.14856148]
[106.06663513 -44.08874512]
[107.40486908 -59.02893066]
[108.74310303 -73.96911621]
[110.08133698 -88.90930176]
[96.55087280 -93.99525452]
[84.81033325 -102.40651703]
[75.65808105 -113.56337738]
[69.71446991 -126.69969177]
[67.37979126 -140.91548157]
[68.80734253 -155.23861694]
[73.89333344 -168.69125366]
[82.28444672 -180.35664368]
[93.40235901 -189.44154358]
[106.48359680 -195.33021545]
[120.63195038 -197.62611389]
[122.19247437 -212.54472351]
[115.93285370 -227.07495117]
[124.95224762 -238.92822266]
[122.73261261 -247.78886414]
[126.64868164 -254.05673218]
[128.43113708 -268.95043945]
[130.21360779 -283.84417725]
[116.98822021 -276.76681519]
[103.14937592 -282.55355835]
[98.89855957 -296.93862915]
[107.36930847 -309.31790161]
[122.31730652 -310.56582642]
[132.72291565 -299.76403809]
[135.60820007 -314.48394775]
[138.49346924 -329.20382690]
[141.15927124 -343.96505737]
[143.60499573 -358.76431274]
[146.05072021 -373.56359863]
[148.49644470 -388.36285400]
[150.94216919 -403.16213989]
[153.38789368 -417.96139526]
[155.83363342 -432.76068115]
[141.93006897 -438.57339478]
[129.74212646 -447.43627930]
[119.92711639 -458.87139893]
[113.01432037 -472.26208496]
[109.37654114 -486.88613892]
[109.20996857 -501.95495605]
[112.52358246 -516.65588379]
[119.13867950 -530.19604492]
[128.69851685 -541.84533691]
[140.68754578 -550.97552490]
[154.45922852 -557.09417725]
[169.27084351 -559.87133789]
[184.32365417 -559.15722656]
[198.80584717 -554.99035645]
[211.93643188 -547.59545898]
[223.00730896 -537.37133789]
[231.42141724 -524.86938477]
[236.72499084 -510.76376343]
[238.63203430 -495.81518555]
[237.03968811 -480.82980347]
[232.03384399 -466.61581421]
[223.88444519 -453.93969727]
[213.03097534 -443.48507690]
[200.05874634 -435.81576538]
[185.66735840 -431.34536743]
[170.63290405 -430.31494141]
[168.18716431 -415.51565552]
[165.74143982 -400.71640015]
[163.29571533 -385.91711426]
[160.84999084 -371.11785889]
[158.40426636 -356.31857300]
[155.95854187 -341.51931763]
[157.96217346 -337.18405151]
[157.26370239 -331.54409790]
[153.21336365 -326.31854248]
[150.32809448 -311.59866333]
[147.44281006 -296.87878418]
[145.10733032 -282.06170654]
[143.32485962 -267.16799927]
[141.54238892 -252.27426147]
[139.87084961 -237.36769104]
[146.24209595 -223.90454102]
[137.11106873 -210.98419189]
[135.55055237 -196.06559753]
[150.02905273 -190.26748657]
[162.30137634 -180.61926270]
[171.36993408 -167.89476013]
[176.49468994 -153.11831665]
[177.25341797 -137.48231506]
[173.57661438 -122.25088501]
[165.75369263 -108.65778351]
[154.41023254 -97.80641174]
[140.45796204 -90.58028412]
[125.02152252 -87.57106781]
[123.68328857 -72.63088226]
[122.34505463 -57.69069672]
[121.00682068 -42.75051117]
[119.66858673 -27.81032753]
[118.44161224 -12.86059380]
[117.32595825 2.09785962]
[119.96326447 9.00194740]
[116.08071899 17.27017784]
[118.61493683 24.21276665]
[114.60971832 32.42227554]
[113.04919434 47.34088135]
[119.42042542 60.80403900]
[110.28941345 73.72438049]
[108.72888947 88.64298248]
[114.24621582 101.49018860]
[106.18971252 112.91754150]
[112.44932556 127.44777679]
[103.42993164 139.30104065]
[102.42567444 154.26737976]
[101.97906494 169.26072693]
[101.53246307 184.25407410]
[101.08585358 199.24743652]
[100.63925171 214.24078369]
[112.27117920 204.76986694]
[127.20656586 206.16070557]
[136.88972473 217.61654663]
[135.77372742 232.57496643]
[124.49784088 242.46711731]
[109.52142334 241.62631226]
[99.42396545 230.53509521]
[97.64150238 245.42881775]
[95.85903931 260.32254028]
[94.07656860 275.21624756]
[92.29410553 290.10995483]
[90.51164246 305.00369263]
[88.72917175 319.89739990]
[96.36690521 336.65289307]
[85.30857849 350.27935791]
[87.52821350 359.13998413]
[83.61215210 365.40786743]
[81.82968140 380.30157471]
[80.04721832 395.19531250]
[79.04296112 410.16165161]
[78.81963348 425.15997314]
[78.59629822 440.15832520]
[78.37297058 455.15664673]
[78.14964294 470.15499878]
[77.92631531 485.15332031]
[86.33343506 494.93511963]
[85.83865356 507.42266846]
[77.25220490 515.94317627]
[76.80560303 530.93652344]
[76.35899353 545.92987061]
[76.13566589 560.92822266]
[76.13566589 575.92822266]
[76.13566589 590.92822266]
[76.13566589 605.92822266]
[82.18200684 621.76733398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[4 207]
[5 206]
[8 205]
[9 204]
[10 203]
[12 200]
[13 199]
[14 198]
[15 197]
[16 196]
[17 195]
[25 194]
[26 193]
[27 192]
[28 190]
[31 188]
[32 187]
[33 186]
[34 185]
[35 184]
[36 183]
[37 182]
[38 175]
[39 174]
[40 173]
[41 172]
[42 171]
[48 170]
[50 168]
[52 166]
[53 165]
[55 163]
[56 162]
[57 160]
[58 158]
[59 157]
[61 156]
[62 155]
[63 154]
[64 153]
[65 152]
[76 142]
[77 141]
[79 139]
[81 138]
[82 137]
[83 136]
[89 135]
[90 134]
[91 133]
[92 130]
[93 129]
[94 128]
[95 127]
[96 126]
[97 125]
[98 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
