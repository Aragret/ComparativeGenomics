%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:33:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACUCCCCGUAAACCAUUUAUACUAAUAGUAUUAAAUUACUCAGCUUUAGUAAGCAAAACAAAUUUGAUAUAUGGUUAAGCCAAGUCAGAUUAGGAAAAxxxxxxxxxxGAUGACCCUCUUGAGAGACACGAUCAUUGGUGCAAGAGGACUAGUUUAUAGUGAGAGGAUGAAUGUCCUGAGUUGUAUGAUCAGUGUCGGGAUAUGAGGG\
) } def
/len { sequence length } bind def

/coor [
[193.81335449 614.05560303]
[182.86576843 602.65710449]
[183.26812744 586.85797119]
[194.78173828 576.03149414]
[195.00506592 561.03314209]
[195.22839355 546.03479004]
[195.00506592 531.03643799]
[194.33528137 516.05139160]
[193.66549683 501.06637573]
[192.99571228 486.08132935]
[182.36366272 478.80197144]
[177.79737854 466.54510498]
[181.17391968 453.70727539]
[191.47727966 445.03228760]
[191.03067017 430.03894043]
[188.58494568 415.23968506]
[184.18394470 400.89984131]
[179.78294373 386.55996704]
[175.38194275 372.22012329]
[170.98095703 357.88027954]
[166.57995605 343.54043579]
[162.17895508 329.20059204]
[151.04798889 319.30358887]
[154.39581299 303.84063721]
[149.99481201 289.50079346]
[136.75679016 282.77093506]
[132.08927917 268.29098511]
[139.23789978 254.45138550]
[134.83691406 240.11154175]
[123.70594788 230.21452332]
[127.05375671 214.75157166]
[122.65276337 200.41172791]
[118.25176239 186.07186890]
[113.28411102 180.59974670]
[113.89370728 171.48567200]
[109.70669556 157.08189392]
[105.51968384 142.67811584]
[101.33267212 128.27432251]
[96.82504272 113.96764374]
[86.43765259 104.60848999]
[88.97250366 90.85835266]
[84.14650726 76.65589905]
[79.32050323 62.45344543]
[65.19430542 50.64107895]
[69.28152466 33.57469177]
[64.24460602 19.44566154]
[57.89492798 33.03541946]
[44.34899902 39.47808075]
[29.79984283 35.82814789]
[20.89913559 23.75431633]
[21.71615791 8.77658367]
[31.87738228 -2.25743389]
[46.73723221 -4.30313110]
[59.50313950 3.57620549]
[48.72781372 -8.00839329]
[53.24324036 -22.20206070]
[49.70356750 -36.77843475]
[46.16389465 -51.35481262]
[39.23213959 -38.05252838]
[25.85716057 -31.26210022]
[11.02749157 -33.51618958]
[0.27423483 -43.97407913]
[-2.39191175 -58.73523331]
[4.02345896 -72.29410553]
[17.12757301 -79.59357452]
[32.03291702 -77.91111755]
[43.18075943 -67.87323761]
[41.39829254 -82.76695251]
[39.61582565 -97.66066742]
[37.83336258 -112.55438995]
[26.35714340 -119.60498810]
[21.11358452 -131.79988098]
[23.81114006 -144.59852600]
[33.24573135 -153.37452698]
[31.68520737 -168.29312134]
[22.55419350 -181.21347046]
[28.92542839 -194.67662048]
[27.03213692 -209.55665588]
[24.80702019 -224.39070129]
[22.58190155 -239.22474670]
[20.35678482 -254.05879211]
[7.68788385 -259.48922729]
[-0.57781780 -270.38403320]
[-2.36652517 -283.83282471]
[2.68296051 -296.30868530]
[13.15256214 -304.59298706]
[11.14854813 -319.45849609]
[9.14453506 -334.32403564]
[7.14052105 -349.18957520]
[-7.83837509 -350.94555664]
[-21.90969086 -356.37222290]
[-34.18888855 -365.12847900]
[-43.90409088 -376.66390991]
[-50.44459152 -390.25332642]
[-53.39924622 -405.04254150]
[-52.58232880 -420.10186768]
[-48.04518509 -434.48468018]
[-40.07302475 -447.28686523]
[-29.16698837 -457.70361328]
[-16.01263428 -465.08020020]
[-1.43686008 -468.95288086]
[13.64409161 -469.07821655]
[28.28221893 -465.44833374]
[41.55735779 -458.29141235]
[52.63501740 -448.05734253]
[60.81885147 -435.38943481]
[65.59441376 -421.08401489]
[66.66151428 -406.04034424]
[63.95307159 -391.20407104]
[57.63933563 -377.50781250]
[48.11719894 -365.81253052]
[35.98522568 -356.85339355]
[22.00605011 -351.19357300]
[24.01006317 -336.32806396]
[26.01407623 -321.46252441]
[28.01809120 -306.59698486]
[42.71081543 -299.27569580]
[50.21971893 -284.49130249]
[47.40890121 -267.98068237]
[35.19083023 -256.28390503]
[37.41594696 -241.44985962]
[39.64106369 -226.61581421]
[41.86618042 -211.78178406]
[44.46907425 -209.40327454]
[46.04923630 -205.64585876]
[45.97112274 -201.00396729]
[43.84403229 -196.23715210]
[52.86343002 -184.38388062]
[46.60381317 -169.85365295]
[48.16433716 -154.93504333]
[61.66955185 -144.91267395]
[63.78924561 -127.88851929]
[52.72707748 -114.33685303]
[54.50954437 -99.44313812]
[56.29201126 -84.54941559]
[58.07447433 -69.65570068]
[60.74027252 -54.89448166]
[64.27994537 -40.31810760]
[67.81961823 -25.74173355]
[78.34175873 -15.19973373]
[74.07951355 0.03653302]
[78.37363434 14.40874577]
[83.41055298 28.53777504]
[94.20161438 34.00399399]
[98.51358795 45.73389816]
[93.52296448 57.62744522]
[98.34896088 71.82990265]
[103.17495728 86.03235626]
[113.56234741 95.39151001]
[111.02749634 109.14164734]
[114.95423889 112.58080292]
[116.96777344 116.76398468]
[117.10507202 120.83782196]
[115.73645020 124.08731842]
[119.92346191 138.49110413]
[124.11047363 152.89488220]
[128.29748535 167.29866028]
[132.59161377 181.67088318]
[136.99261475 196.01072693]
[141.39360046 210.35057068]
[152.83935547 221.27326965]
[149.17675781 235.71054077]
[153.57775879 250.05038452]
[167.25929260 257.49707031]
[171.51824951 272.10241699]
[164.33465576 285.09979248]
[168.73565674 299.43963623]
[180.18139648 310.36233521]
[176.51879883 324.79959106]
[180.91979980 339.13943481]
[185.32080078 353.47927856]
[189.72180176 367.81912231]
[194.12278748 382.15899658]
[198.52378845 396.49884033]
[202.92478943 410.83868408]
[205.72946167 396.10321045]
[212.89520264 382.92550659]
[223.73902893 372.56155396]
[237.22738647 365.99920654]
[252.07461548 363.86392212]
[266.86560059 366.35922241]
[280.19058228 373.24728394]
[290.77944946 383.87158203]
[297.62298584 397.21948242]
[300.06887817 412.01873779]
[297.88403320 426.85876465]
[291.27664185 440.32510376]
[280.87655640 451.13427734]
[267.67498779 458.25595093]
[252.93023682 461.01141357]
[238.04768372 459.13796997]
[224.44584656 452.81420898]
[213.42115784 442.64285278]
[206.02401733 429.59234619]
[206.47062683 444.58569336]
[219.42066956 456.34646606]
[219.84982300 473.49670410]
[207.98074341 485.41156006]
[208.65052795 500.39660645]
[209.32031250 515.38165283]
[209.99009705 530.36669922]
[212.45573425 533.94085693]
[213.54609680 537.73236084]
[213.36172485 541.28222656]
[212.14195251 544.21118164]
[210.22673035 546.25811768]
[210.00340271 561.25646973]
[209.78007507 576.25482178]
[220.96623230 587.41925049]
[220.89801025 603.22338867]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 208]
[5 207]
[6 206]
[7 201]
[8 200]
[9 199]
[10 198]
[14 195]
[15 194]
[16 175]
[17 174]
[18 173]
[19 172]
[20 171]
[21 170]
[22 169]
[24 167]
[25 166]
[28 163]
[29 162]
[31 160]
[32 159]
[33 158]
[35 157]
[36 156]
[37 155]
[38 154]
[39 150]
[41 148]
[42 147]
[43 146]
[45 143]
[46 142]
[54 141]
[56 139]
[57 138]
[58 137]
[67 136]
[68 135]
[69 134]
[70 133]
[74 130]
[75 129]
[77 127]
[78 123]
[79 122]
[80 121]
[81 120]
[86 116]
[87 115]
[88 114]
[89 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
