%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 13:35:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACGCUGACACUCACGCAAGCAUCAAACUCAAACGAUCCGUCUUAUCAUUACUCCUACAUUCGGGCACCCGCUAAUACUCUUACUGACGCGGCCACUUCGxxxxxxxxxxUGGAAUUGUUACUUGUUCUAUAAGCUUUUUAUCCUCCUGAUGAGUUUUGGUAUGGAGAGUGAAGUUGGAGGGAGUGGUAACCGUCGGAUCGUAAUCGUCC\
) } def
/len { sequence length } bind def

/coor [
[38.52120972 583.56793213]
[32.75521469 597.44494629]
[25.03007889 610.33447266]
[15.51046181 621.96179199]
[4.39927816 632.07910156]
[-8.06663799 640.47070312]
[-21.62157631 646.95770264]
[-35.97660828 651.40191650]
[-50.82575989 653.70855713]
[-65.85251617 653.82843018]
[-80.73658752 651.75909424]
[-95.16071320 647.54449463]
[-108.81744385 641.27465820]
[-121.41568756 633.08300781]
[-132.68690491 623.14434814]
[-142.39086914 611.67041016]
[-150.32070923 598.90582275]
[-156.30741882 585.12255859]
[-160.22338867 570.61456299]
[-161.98515320 555.69091797]
[-161.55514526 540.66986084]
[-158.94255066 525.87145996]
[-154.20304871 511.61120605]
[-147.43765259 498.19305420]
[-138.79058838 485.90298462]
[-128.44613647 475.00296021]
[-116.62482452 465.72531128]
[-103.57860565 458.26785278]
[-89.58556366 452.78945923]
[-74.94395447 449.40698242]
[-59.96588135 448.19244385]
[-44.97058868 449.17178345]
[-30.27770996 452.32409668]
[-25.03099060 438.27160645]
[-19.78427315 424.21914673]
[-14.53755474 410.16668701]
[-9.29083633 396.11419678]
[-4.04411840 382.06173706]
[1.20259976 368.00927734]
[6.44931793 353.95678711]
[3.65253258 339.32711792]
[15.72811985 329.10504150]
[20.76503563 314.97601318]
[25.59103394 300.77355957]
[30.41703033 286.57110596]
[35.24303055 272.36865234]
[40.06902695 258.16619873]
[44.89502335 243.96374512]
[49.72102356 229.76129150]
[54.54701996 215.55882263]
[50.20616150 198.55519104]
[64.15493011 186.53381348]
[68.76893616 172.26107788]
[73.38294220 157.98834229]
[77.99695587 143.71560669]
[74.54971313 129.22541809]
[86.15681458 118.47433472]
[90.77082062 104.20160675]
[90.05668640 96.17274475]
[95.56123352 89.75162506]
[100.38722992 75.54917145]
[105.21322632 61.34671402]
[110.03923035 47.14426041]
[103.30583191 33.09793854]
[108.40239716 18.76337814]
[121.83490753 12.43067455]
[118.94897461 -3.12509394]
[130.36967468 -12.68631554]
[135.19566345 -26.88877106]
[131.19065857 -44.86212540]
[144.82948303 -55.90520096]
[149.44349670 -70.17793274]
[154.05749512 -84.45066833]
[158.67150879 -98.72339630]
[163.28552246 -112.99613190]
[160.16830444 -128.50721741]
[171.44537354 -138.23741150]
[176.05938721 -152.51014709]
[180.67340088 -166.78288269]
[185.28739929 -181.05560303]
[171.45535278 -186.88276672]
[158.17544556 -193.87744141]
[145.54598999 -201.98782349]
[133.66050720 -211.15390015]
[122.60698700 -221.30776978]
[112.46726990 -232.37426758]
[103.31642914 -244.27148438]
[95.22221375 -256.91131592]
[88.24454498 -270.20016479]
[82.43509674 -284.03964233]
[77.83687592 -298.32733154]
[74.48391724 -312.95739746]
[72.40105438 -327.82156372]
[71.60371399 -342.80975342]
[72.09778595 -357.81100464]
[73.87962341 -372.71423340]
[76.93602753 -387.40911865]
[81.24436951 -401.78686523]
[86.77275848 -415.74102783]
[93.48024750 -429.16827393]
[101.31719971 -441.96920776]
[110.22557068 -454.04904175]
[120.13941193 -465.31832886]
[130.98533630 -475.69366455]
[142.68301392 -485.09820557]
[155.14587402 -493.46234131]
[168.28161621 -500.72415161]
[181.99299622 -506.82983398]
[196.17848206 -511.73422241]
[210.73307800 -515.40100098]
[225.54901123 -517.80297852]
[240.51658630 -518.92242432]
[255.52499390 -518.75103760]
[270.46310425 -517.29010010]
[285.22030640 -514.55035400]
[299.68737793 -510.55218506]
[313.75717163 -505.32513428]
[327.32556152 -498.90792847]
[340.29202271 -491.34805298]
[352.56063843 -482.70147705]
[364.04049683 -473.03225708]
[374.64666748 -462.41195679]
[384.30056763 -450.91918945]
[392.93075562 -438.63906860]
[400.47332764 -425.66250610]
[406.87243652 -412.08560181]
[412.08071899 -398.00881958]
[416.05960083 -383.53643799]
[418.77963257 -368.77560425]
[420.22067261 -353.83554077]
[420.37203979 -338.82693481]
[419.23263550 -323.86087036]
[416.81088257 -309.04815674]
[413.12469482 -294.49847412]
[408.20138550 -280.31951904]
[402.07742310 -266.61630249]
[394.79809570 -253.49024963]
[386.41735840 -241.03855896]
[376.99719238 -229.35343933]
[366.60742188 -218.52136230]
[355.32489014 -208.62255859]
[343.23318481 -199.73030090]
[330.42181396 -191.91044617]
[316.98565674 -185.22085571]
[303.02413940 -179.71109009]
[288.64065552 -175.42193604]
[273.94168091 -172.38513184]
[259.03610229 -170.62318420]
[244.03419495 -170.14910889]
[229.04708862 -170.96644592]
[214.18572998 -173.06913757]
[199.56013489 -176.44160461]
[194.94612122 -162.16886902]
[190.33212280 -147.89613342]
[185.71810913 -133.62339783]
[189.16535950 -119.13320160]
[177.55825806 -108.38212585]
[172.94424438 -94.10939026]
[168.33023071 -79.83665466]
[163.71621704 -65.56392670]
[159.10221863 -51.29119110]
[164.32894897 -40.38212204]
[160.60174561 -28.45351028]
[149.39811707 -22.06277275]
[144.57212830 -7.86031771]
[147.80325317 6.67959595]
[136.03736877 17.25667191]
[142.83079529 30.46215820]
[138.13887024 44.93421555]
[124.24168396 51.97025681]
[119.41568756 66.17271423]
[114.58969116 80.37516785]
[109.76368713 94.57762146]
[105.04355621 108.81561279]
[100.42955017 123.08834839]
[103.54676819 138.59942627]
[92.26969147 148.32962036]
[87.65567780 162.60235596]
[83.04167175 176.87509155]
[78.42765808 191.14782715]
[83.59481049 202.96574402]
[79.45795441 214.75854492]
[68.74947357 220.38482666]
[63.92347717 234.58728027]
[59.09748077 248.78973389]
[54.27148056 262.99218750]
[49.44548416 277.19464111]
[44.61948776 291.39709473]
[39.79348755 305.59954834]
[34.96749115 319.80203247]
[35.87866974 326.35040283]
[33.67657852 331.58947754]
[29.78059006 334.35177612]
[32.20209503 349.98657227]
[20.50178909 359.20352173]
[15.25507069 373.25598145]
[10.00835323 387.30844116]
[4.76163483 401.36093140]
[-0.48508349 415.41339111]
[-5.73180151 429.46588135]
[-10.97851944 443.51834106]
[-16.22523880 457.57080078]
[-3.06167245 464.81915283]
[8.90619087 473.90695190]
[19.42325783 484.64050293]
[28.26535416 496.79101562]
[35.24401093 510.09951782]
[40.21047974 524.28234863]
[43.05889511 539.03717041]
[43.72854996 554.04943848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 202]
[34 201]
[35 200]
[36 199]
[37 198]
[38 197]
[39 196]
[40 195]
[42 193]
[43 190]
[44 189]
[45 188]
[46 187]
[47 186]
[48 185]
[49 184]
[50 183]
[52 180]
[53 179]
[54 178]
[55 177]
[57 175]
[58 174]
[60 173]
[61 172]
[62 171]
[63 170]
[66 167]
[68 165]
[69 164]
[71 161]
[72 160]
[73 159]
[74 158]
[75 157]
[77 155]
[78 154]
[79 153]
[80 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
