%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGCCCCCAUUCGUAUAAUAAUUACAUCACAAGACGUCUUGCACUCAUGAGCUGUCCCCACAxxxxxxxxxxAACAUAAAACCCUCAUUCACACGAGAAAACACCCUCAUGUUCAUACACCUAUCCCCCAUUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[86.63102722 453.87954712]
[86.63102722 438.87954712]
[86.63102722 423.87954712]
[86.63102722 408.87954712]
[86.63102722 393.87954712]
[86.63102722 378.87954712]
[86.63102722 363.87954712]
[86.63102722 348.87954712]
[86.63102722 333.87954712]
[86.63102722 318.87954712]
[70.29991150 315.17709351]
[55.28978729 307.73587036]
[42.44354248 296.96963501]
[32.48351669 283.47894287]
[25.97088814 268.01776123]
[23.27405167 251.45115662]
[24.54778481 234.70703125]
[29.72436523 218.72410583]
[38.51716995 204.39929199]
[50.43653488 192.53735352]
[64.81702423 183.80570984]
[80.85458374 178.69686890]
[79.62397003 163.74743652]
[78.39335632 148.79800415]
[77.16274261 133.84857178]
[71.07556915 147.55792236]
[70.22869110 162.53399658]
[63.16294098 175.76559448]
[51.18839645 184.79942322]
[36.52526474 187.96054077]
[21.89225769 184.66279602]
[10.00249195 175.51766968]
[3.06046581 162.22073364]
[2.35330701 147.23741150]
[8.01213074 133.34577942]
[18.98772812 123.12148285]
[33.24510193 118.46022797]
[48.14192200 120.22666168]
[62.70002365 116.61256409]
[48.19139862 112.80470276]
[33.68277359 108.99684906]
[19.17414665 105.18898773]
[3.50712037 110.03422546]
[-8.33695793 98.69183350]
[-4.17391539 82.82989502]
[11.71366692 78.76580811]
[22.98200607 90.68036652]
[37.49063110 94.48822021]
[51.99925613 98.29608154]
[66.50788116 102.10394287]
[69.17341614 90.53040314]
[75.53643799 81.06010437]
[84.48310089 74.75960541]
[94.63983154 72.19321442]
[104.57865143 73.38208771]
[111.12651825 59.88670349]
[117.67439270 46.39131927]
[124.22225952 32.89593506]
[130.77012634 19.40055084]
[137.31800842 5.90516758]
[135.54635620 -12.39488506]
[150.38853455 -21.70908737]
[156.65794373 -35.33606720]
[162.92733765 -48.96304321]
[150.23757935 -57.00376511]
[138.73278809 -66.66416931]
[128.61831665 -77.77185822]
[120.07464600 -90.12860870]
[113.25426483 -103.51389313]
[108.27887726 -117.68883514]
[105.23728943 -132.40046692]
[104.18376923 -147.38624573]
[105.13712311 -162.37872314]
[108.08032990 -177.11035156]
[112.96087646 -191.31823730]
[119.69166565 -204.74879456]
[128.15255737 -217.16236877]
[138.19258118 -228.33740234]
[149.63255310 -238.07446289]
[162.26831055 -246.19981384]
[175.87434387 -252.56840515]
[190.20785522 -257.06661987]
[205.01304626 -259.61416626]
[220.02568054 -260.16555786]
[234.97785950 -258.71099854]
[249.60273743 -255.27641296]
[263.63931274 -249.92311096]
[276.83709717 -242.74661255]
[288.96057129 -233.87501526]
[299.79333496 -223.46662903]
[309.14208984 -211.70719910]
[316.83999634 -198.80659485]
[322.74969482 -184.99504089]
[326.76568604 -170.51901245]
[328.81631470 -155.63685608]
[328.86495972 -140.61418152]
[326.91082764 -125.71905518]
[322.98870850 -111.21730804]
[317.16864014 -97.36775208]
[309.55450439 -84.41753387]
[300.28213501 -72.59777832]
[289.51702881 -62.11941528]
[277.45132446 -53.16944122]
[264.30032349 -45.90758514]
[250.29872131 -40.46343994]
[235.69639587 -36.93416214]
[220.75396729 -35.38273621]
[205.73806763 -35.83685303]
[190.91668701 -38.28840256]
[176.55432129 -42.69363785]
[170.28491211 -29.06665993]
[164.01551819 -15.43968105]
[167.91772461 -3.94903636]
[162.75627136 7.47596645]
[150.81338501 12.45303822]
[144.26551819 25.94842148]
[137.71765137 39.44380569]
[131.16976929 52.93918991]
[124.62190247 66.43457794]
[118.07403564 79.92996216]
[128.20242310 94.97742462]
[126.78830719 114.12360382]
[113.13737488 129.09205627]
[92.11218262 132.61795044]
[93.34278870 147.56738281]
[94.57340240 162.51681519]
[95.80401611 177.46626282]
[109.07305908 179.05940247]
[121.80514526 183.10601807]
[133.55097961 189.46148682]
[143.89643860 197.89971924]
[152.47709656 208.12126160]
[158.99116516 219.76388550]
[163.21002197 232.41537476]
[164.98628235 245.62825012]
[164.25889587 258.93545532]
[161.05531311 271.86694336]
[155.49040222 283.96630859]
[147.76235962 294.80679321]
[138.14564514 304.00640869]
[126.98118591 311.24139404]
[114.66438293 316.25765991]
[101.63102722 318.87954712]
[101.63102722 333.87954712]
[101.63102722 348.87954712]
[101.63102722 363.87954712]
[101.63102722 378.87954712]
[101.63102722 393.87954712]
[101.63102722 408.87954712]
[101.63102722 423.87954712]
[101.63102722 438.87954712]
[101.63102722 453.87954712]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[22 127]
[23 126]
[24 125]
[25 124]
[39 50]
[40 49]
[41 48]
[42 47]
[55 120]
[56 119]
[57 118]
[58 117]
[59 116]
[60 115]
[62 112]
[63 111]
[64 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
