%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAAACAACCCAGCUCUCCCUAAGCUUCAAACUAGACUACUUCUCCAUAAUAUUCAUCCCUxxxxxxxxxxAAACCCAAUCCACAUCAAAACCCCCUCCCCAUGCUUACAAGCAAGUACAGCAAUCAACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[87.81678009 99.10590363]
[76.72546387 89.00724792]
[65.63414764 78.90859985]
[54.54283524 68.80995178]
[43.45151901 58.71130371]
[32.36020660 48.61265182]
[21.26888847 38.51400375]
[10.17757416 28.41535378]
[-0.91374141 18.31670380]
[-12.00505638 8.21805382]
[-22.84117889 18.59857368]
[-34.36043549 28.21540642]
[-46.50911713 37.02371597]
[-59.23057556 44.98243332]
[-72.46550751 52.05444717]
[-86.15219116 58.20679092]
[-100.22682953 63.41077042]
[-114.62378693 67.64212799]
[-129.27593994 70.88114166]
[-144.11497498 73.11269379]
[-159.07170105 74.32638550]
[-174.07638550 74.51657104]
[-189.05906677 73.68234253]
[-203.94989014 71.82760620]
[-218.67942810 68.96099854]
[-233.17900085 65.09589386]
[-247.38101196 60.25030899]
[-261.21923828 54.44683456]
[-274.62915039 47.71253586]
[-287.54824829 40.07880402]
[-299.91629028 31.58123589]
[-311.67556763 22.25944901]
[-322.77130127 12.15690899]
[-333.15176392 1.32071674]
[-342.76852417 -10.19860363]
[-351.57675171 -22.34734344]
[-359.53536987 -35.06885910]
[-366.60729980 -48.30383301]
[-372.75955200 -61.99056244]
[-377.96343994 -76.06523132]
[-382.19470215 -90.46221924]
[-385.43359375 -105.11438751]
[-387.66506958 -119.95343781]
[-388.87866211 -134.91017151]
[-389.06872559 -149.91485596]
[-388.23440552 -164.89753723]
[-386.37957764 -179.78834534]
[-383.51287842 -194.51786804]
[-379.64767456 -209.01742554]
[-374.80197144 -223.21939087]
[-368.99841309 -237.05758667]
[-362.26403809 -250.46745300]
[-354.63021851 -263.38650513]
[-346.13256836 -275.75445557]
[-336.81069946 -287.51370239]
[-326.70806885 -298.60937500]
[-315.87182617 -308.98974609]
[-304.35244751 -318.60641479]
[-292.20364380 -327.41458130]
[-279.48205566 -335.37310791]
[-266.24703979 -342.44494629]
[-252.56027222 -348.59710693]
[-238.48556519 -353.80090332]
[-224.08856201 -358.03207397]
[-209.43635559 -361.27087402]
[-194.59730530 -363.50222778]
[-179.64054871 -364.71572876]
[-164.63586426 -364.90570068]
[-149.65319824 -364.07128906]
[-134.76239014 -362.21633911]
[-120.03289032 -359.34954834]
[-105.53337097 -355.48425293]
[-91.33142853 -350.63845825]
[-77.49327850 -344.83480835]
[-64.08345032 -338.10034180]
[-51.16446304 -330.46643066]
[-38.79655075 -321.96868896]
[-27.03737831 -312.64675903]
[-15.94177532 -302.54406738]
[-5.56147385 -291.70773315]
[4.05512810 -280.18826294]
[12.86319256 -268.03942871]
[20.82165337 -255.31779480]
[27.89340210 -242.08273315]
[34.04546738 -228.39591980]
[39.24916840 -214.32118225]
[43.48023605 -199.92413330]
[46.71894836 -185.27191162]
[48.95020676 -170.43284607]
[50.16360092 -155.47608948]
[50.35347748 -140.47140503]
[49.51895142 -125.48873138]
[47.66391373 -110.59794617]
[44.79701233 -95.86846161]
[40.93161774 -81.36896515]
[36.08574677 -67.16705322]
[30.28199387 -53.32894516]
[23.54742241 -39.91916275]
[15.91343212 -27.00022507]
[7.41561508 -14.63237000]
[-1.90640724 -2.87326121]
[9.18490791 7.22538853]
[20.27622414 17.32403755]
[31.36753845 27.42268753]
[42.45885468 37.52133560]
[53.55017090 47.61998749]
[64.64148712 57.71863556]
[75.73280334 67.81728363]
[86.82411957 77.91593170]
[97.91542816 88.01458740]
[105.30259705 89.09939575]
[110.63959503 94.28259277]
[125.40564728 96.92145538]
[140.17170715 99.56031799]
[154.93775940 102.19918823]
[170.16856384 96.12014008]
[182.87933350 106.48200989]
[179.99432373 122.62538910]
[164.48138428 127.94335938]
[152.29888916 116.96524048]
[137.53283691 114.32637787]
[122.76678467 111.68751526]
[108.00073242 109.04864502]
[119.32180023 118.88903809]
[128.39088440 130.83691406]
[134.82453918 144.38713074]
[138.35073853 158.96676636]
[138.82040405 173.95941162]
[136.21368408 188.73117065]
[130.64077759 202.65750122]
[122.33731079 215.14961243]
[111.65436554 225.67930603]
[99.04360199 233.80140686]
[85.03820038 239.17253113]
[70.23031616 241.56555176]
[55.24602509 240.87931824]
[40.71885300 237.14283752]
[27.26301193 230.51408386]
[15.44741344 221.27333069]
[5.77161789 209.81126404]
[-1.35528231 196.61250305]
[-5.63196278 182.23509216]
[-6.87760544 167.28689575]
[-5.03954554 152.39993286]
[-0.19549567 138.20362854]
[7.44973850 125.29818726]
[17.57291794 114.22925568]
[29.74603271 105.46482849]
[43.45441055 99.37545776]
[58.11845779 96.21860504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 110]
[2 109]
[3 108]
[4 107]
[5 106]
[6 105]
[7 104]
[8 103]
[9 102]
[10 101]
[112 123]
[113 122]
[114 121]
[115 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
