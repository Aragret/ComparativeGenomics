%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUUGACCACCUGUAGUACAUAAAAACCCAAUCCACAUCAAAACCCCCUCCCCAUGCUUACxxxxxxxxxxAGUCAAAUCCCUUCUCGUCCCCAUGGAUGACCCCCCUCAGAUAGGGGUCCCUUGACCACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-34.72376633 143.60986328]
[-49.21936417 147.46702576]
[-63.71495819 151.32418823]
[-78.21055603 155.18135071]
[-92.70615387 159.03849792]
[-107.20175171 162.89566040]
[-121.69734955 166.75282288]
[-136.19294739 170.60998535]
[-150.68853760 174.46714783]
[-165.18414307 178.32429504]
[-177.88162231 191.61917114]
[-194.62886047 186.46844482]
[-209.04107666 190.62632751]
[-223.45329285 194.78421021]
[-237.86550903 198.94210815]
[-226.43450928 208.65458679]
[-226.68774414 223.65245056]
[-238.44013977 232.97346497]
[-253.10162354 229.80473328]
[-259.95584106 216.46234131]
[-253.99342346 202.69891357]
[-268.75949097 205.33778381]
[-283.52554321 207.97665405]
[-285.15136719 222.99441528]
[-290.94363403 236.94528198]
[-300.43273926 248.69828796]
[-312.84948730 257.30068970]
[-327.18725586 262.05514526]
[-342.28378296 262.57620239]
[-356.91525269 258.82165527]
[-369.89556885 251.09582520]
[-380.17245483 240.02503967]
[-386.91281128 226.50674438]
[-389.57022095 211.63681030]
[-387.92929077 196.62068176]
[-382.12301636 182.67565918]
[-372.62213135 170.93217468]
[-360.19674683 162.34223938]
[-345.85421753 157.60220337]
[-330.75717163 157.09629822]
[-316.12945557 160.86557007]
[-303.15692139 168.60443115]
[-292.89117432 179.68553162]
[-286.16439819 193.21058655]
[-271.39834595 190.57173157]
[-256.63229370 187.93286133]
[-242.02339172 184.52989197]
[-227.61117554 180.37199402]
[-213.19895935 176.21411133]
[-198.78674316 172.05622864]
[-192.63652039 161.59284973]
[-180.61283875 158.03617859]
[-169.04129028 163.82870483]
[-154.54570007 159.97154236]
[-140.05009460 156.11437988]
[-125.55450439 152.25723267]
[-111.05890656 148.40007019]
[-96.56330872 144.54290771]
[-82.06771851 140.68574524]
[-67.57212067 136.82858276]
[-53.07652283 132.97143555]
[-38.58092499 129.11427307]
[-40.57487869 117.05923462]
[-41.52217865 104.87718201]
[-41.41577148 92.65881348]
[-40.25645447 80.49510193]
[-38.05285263 68.47662354]
[-34.82137680 56.69284439]
[-30.58608818 45.23151398]
[-25.37851906 34.17795944]
[-19.23744011 23.61448860]
[-12.20857906 13.61974430]
[-4.34426594 4.26814556]
[4.29694366 -4.37067938]
[13.65071201 -12.23241138]
[23.64739418 -19.25851440]
[34.21256256 -25.39667702]
[45.26755142 -30.60119820]
[56.73005295 -34.83332443]
[68.51471710 -38.06154633]
[80.53380585 -40.26182938]
[92.69783783 -41.41779327]
[104.91622925 -41.52082825]
[117.09802246 -40.57016373]
[129.15251160 -38.57288742]
[140.98994446 -35.54386139]
[152.52218628 -31.50564194]
[163.66337585 -26.48829460]
[174.33055115 -20.52917862]
[184.44430542 -13.67265892]
[193.92932129 -5.96978903]
[202.71499634 2.52208114]
[210.73588562 11.73972416]
[217.93231201 21.61451149]
[224.25065613 32.07291794]
[237.77484131 25.58475304]
[251.29904175 19.09658813]
[264.82321167 12.60842228]
[278.34741211 6.12025738]
[291.87161255 -0.36790782]
[300.67803955 -14.20187378]
[317.04788208 -13.22202587]
[324.14126587 1.56365323]
[314.66107178 14.94492435]
[298.35977173 13.15628242]
[284.83557129 19.64444733]
[271.31140137 26.13261223]
[257.78720093 32.62077713]
[244.26301575 39.10894394]
[230.73881531 45.59710693]
[239.13954163 73.68454742]
[241.57649231 102.89990234]
[237.94525146 131.99096680]
[252.35746765 136.14886475]
[266.76968384 140.30674744]
[281.18188477 144.46463013]
[295.59411621 148.62252808]
[310.27679443 142.15733337]
[324.41848755 149.73306274]
[327.17092896 165.53823853]
[316.42266846 177.44848633]
[300.41885376 176.32730103]
[291.43621826 163.03474426]
[277.02401733 158.87684631]
[262.61178589 154.71896362]
[248.19956970 150.56108093]
[233.78735352 146.40318298]
[228.49905396 159.50047302]
[221.93229675 172.00576782]
[214.15238953 183.79466248]
[205.23677063 194.74986267]
[195.27412415 204.76237488]
[184.36357117 213.73258972]
[172.61366272 221.57124329]
[160.14131165 228.20037842]
[147.07060242 233.55400085]
[133.53158569 237.57887268]
[119.65894318 240.23493958]
[105.59071350 241.49578857]
[91.46685791 241.34886169]
[77.42790222 239.79560852]
[63.61352158 236.85151672]
[50.16115570 232.54585266]
[37.20465088 226.92146301]
[24.87290764 220.03430176]
[13.28862190 211.95289612]
[2.56704664 202.75764465]
[-7.18514729 192.54003906]
[-15.87093258 181.40171814]
[-23.40389252 169.45353699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 62]
[2 61]
[3 60]
[4 59]
[5 58]
[6 57]
[7 56]
[8 55]
[9 54]
[10 53]
[12 50]
[13 49]
[14 48]
[15 47]
[21 46]
[22 45]
[23 44]
[95 110]
[96 109]
[97 108]
[98 107]
[99 106]
[100 105]
[113 127]
[114 126]
[115 125]
[116 124]
[117 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
