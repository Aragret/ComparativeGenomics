%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAUAGUAGAAGAACCCUCCAUAAACCUGGAGUGACUAUAUGGAUGCCCCCCACCCUACCACxxxxxxxxxxAUAAUAACACACCCGACCACACCGCUAACAAUCAAUACUAAACCCCCAUAAAUAGGAGAAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[284.75619507 67.21552277]
[270.10345459 70.42452240]
[255.45074463 73.63351440]
[244.67338562 83.91446686]
[229.53744507 79.30861664]
[214.88473511 82.51760864]
[200.23200989 85.72660828]
[185.57928467 88.93560028]
[170.92655945 92.14459991]
[156.27383423 95.35359192]
[145.49647522 105.63454437]
[130.36053467 101.02869415]
[115.70781708 104.23768616]
[103.64353943 115.85617065]
[87.71765900 110.66946411]
[73.13390350 114.17863464]
[58.55015564 117.68779755]
[51.13333511 128.28942871]
[38.86863327 130.88719177]
[28.47883034 124.61709595]
[13.82610512 127.82609558]
[6.19317579 138.27320862]
[-6.12227774 140.61860657]
[-16.38115501 134.13650513]
[-28.41987228 144.40197754]
[-42.40550232 139.27836609]
[-57.12102509 142.18583679]
[-71.83654785 145.09330750]
[-86.55207062 148.00077820]
[-101.26759338 150.90824890]
[-109.85552216 164.17562866]
[-125.32682037 167.40274048]
[-138.50265503 158.67501831]
[-141.56602478 143.17047119]
[-132.69949341 130.08764648]
[-117.16340637 127.18837738]
[-104.17506409 136.19273376]
[-89.45954132 133.28526306]
[-74.74401855 130.37779236]
[-60.02849579 127.47031403]
[-45.31297302 124.56284332]
[-34.32680893 114.50533295]
[-19.28862762 119.42098999]
[-6.76065016 107.16969299]
[10.61710835 113.17337036]
[25.26983261 109.96437073]
[37.54362869 97.45843506]
[55.04098892 103.10404968]
[69.62474060 99.59487915]
[84.20848846 96.08571625]
[90.90533447 86.50998688]
[102.29367065 83.89308929]
[112.49881744 89.58496094]
[127.15154266 86.37596893]
[138.97695923 75.86548615]
[153.06483459 80.70086670]
[167.71755981 77.49187469]
[182.37028503 74.28287506]
[197.02301025 71.07388306]
[211.67573547 67.86488342]
[226.32846069 64.65589142]
[238.15386963 54.14540482]
[252.24174500 58.98078918]
[266.89447021 55.77179337]
[281.54718018 52.56279755]
[279.36703491 37.71585846]
[278.22787476 22.75300407]
[278.13522339 7.74713278]
[279.08956909 -7.22864580]
[281.08627319 -22.10137177]
[284.11557007 -36.79858398]
[288.16271973 -51.24868393]
[293.20797729 -65.38126373]
[299.22680664 -79.12747955]
[306.18988037 -92.42034912]
[314.06326294 -105.19512177]
[322.80856323 -117.38954926]
[332.38323975 -128.94422913]
[342.74060059 -139.80287170]
[353.83016968 -149.91255188]
[365.59796143 -159.22404480]
[377.98663330 -167.69195557]
[390.93582153 -175.27505493]
[404.38241577 -181.93640137]
[418.26095581 -187.64350891]
[432.50378418 -192.36860657]
[447.04153442 -196.08865356]
[461.80334473 -198.78552246]
[476.71734619 -200.44609070]
[491.71084595 -201.06227112]
[506.71081543 -200.63104248]
[521.64416504 -199.15452576]
[536.43811035 -196.63989258]
[551.02062988 -193.09941101]
[565.32061768 -188.55032349]
[579.26849365 -183.01478577]
[592.79626465 -176.51979065]
[605.83795166 -169.09695435]
[618.33007812 -160.78245544]
[630.21185303 -151.61679077]
[641.42523193 -141.64463806]
[651.91571045 -130.91455078]
[661.63214111 -119.47882843]
[670.52716064 -107.39317322]
[678.55749512 -94.71646881]
[685.68395996 -81.51047516]
[691.87182617 -67.83953094]
[697.09106445 -53.77024460]
[701.31610107 -39.37115860]
[704.52636719 -24.71241760]
[706.70635986 -9.86544704]
[707.84527588 5.09742355]
[707.93774414 20.10329628]
[706.98315430 35.07905960]
[704.98626709 49.95175552]
[701.95672607 64.64892578]
[697.90936279 79.09896851]
[692.86389160 93.23147583]
[686.84484863 106.97760010]
[679.88159180 120.27037811]
[672.00805664 133.04502869]
[663.26257324 145.23933411]
[653.68774414 156.79388428]
[643.33026123 167.65237427]
[632.24047852 177.76190186]
[620.47259521 187.07321167]
[608.08380127 195.54095459]
[595.13452148 203.12387085]
[581.68780518 209.78501892]
[567.80920410 215.49192810]
[553.56628418 220.21681213]
[539.02850342 223.93666077]
[524.26660156 226.63331604]
[509.35260010 228.29368591]
[494.35910034 228.90963745]
[479.35913086 228.47819519]
[464.42581177 227.00146484]
[449.63189697 224.48661804]
[435.04943848 220.94592285]
[420.74948120 216.39663696]
[406.80169678 210.86090088]
[393.27407837 204.36570740]
[380.23245239 196.94268799]
[367.74041748 188.62800598]
[355.85882568 179.46217346]
[344.64556885 169.48985291]
[334.15524292 158.75962830]
[324.43896484 147.32376099]
[315.54409790 135.23797607]
[307.51397705 122.56115723]
[300.38769531 109.35506439]
[294.20001221 95.68403625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 65]
[2 64]
[3 63]
[5 61]
[6 60]
[7 59]
[8 58]
[9 57]
[10 56]
[12 54]
[13 53]
[15 50]
[16 49]
[17 48]
[20 46]
[21 45]
[24 43]
[26 41]
[27 40]
[28 39]
[29 38]
[30 37]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
