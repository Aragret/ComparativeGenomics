%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACAUGCAAGCAUCCCCGUUCCAGUGAGUUCACCCUCUAAAUCACCACGAUCAAAAGGAACxxxxxxxxxxCACAGCGCUAAGCUCGCACUGAUUUUUUACCUGAGUAGGCCUAGAAAUAAACAUGCUAGCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[76.88346863 263.95755005]
[76.88346863 248.95756531]
[76.88346863 233.95756531]
[76.88346863 218.95756531]
[76.88346863 203.95756531]
[76.88346863 188.95756531]
[76.88346863 173.95756531]
[76.88346863 158.95756531]
[76.88346863 143.95756531]
[76.88346863 128.95756531]
[78.09838867 107.83570862]
[90.73857117 98.02657318]
[80.07695007 87.47528076]
[69.30613708 77.03546906]
[58.42731476 66.70825958]
[47.54848862 56.38105774]
[32.21286392 52.49142456]
[28.30932617 38.11743164]
[17.43050194 27.79022789]
[6.55167580 17.46302414]
[-6.67181349 22.13049316]
[-20.54856300 20.63822174]
[-32.36454010 13.33564091]
[-39.83362961 1.70291507]
[-41.53989029 -11.94874477]
[-37.20564651 -24.93618965]
[-47.86727142 -35.48748016]
[-58.52889633 -46.03876877]
[-71.54520416 -53.49367905]
[-86.04080200 -57.35084152]
[-100.97629547 -48.30271912]
[-117.51774597 -52.73717499]
[-125.59976959 -67.45243835]
[-140.17247009 -71.00719452]
[-154.74517822 -74.56195831]
[-169.31787109 -78.11672211]
[-184.55854797 -73.87025452]
[-195.08964539 -84.40330505]
[-209.66235352 -87.95806885]
[-221.41070557 -77.82122040]
[-236.87640381 -76.55940247]
[-250.11253357 -84.65780640]
[-256.02957153 -99.00244141]
[-252.35226440 -114.07748413]
[-240.49462891 -124.08628845]
[-225.01617432 -125.18025970]
[-211.86865234 -116.93874359]
[-206.10758972 -102.53076935]
[-191.53488159 -98.97600555]
[-177.33654785 -103.47673798]
[-165.76312256 -92.68942261]
[-151.19041443 -89.13466644]
[-136.61770630 -85.57990265]
[-122.04500580 -82.02513885]
[-112.04411316 -90.20919800]
[-98.95893097 -91.13249207]
[-87.57434845 -84.23183441]
[-82.18364716 -71.84643555]
[-67.68804932 -67.98928070]
[-78.05592346 -78.82934570]
[-85.70113373 -91.73480225]
[-90.22682953 -106.03578186]
[-91.39811707 -120.98998260]
[-89.15419006 -135.82119751]
[-83.61152649 -149.75958252]
[-75.05781555 -162.08168030]
[-63.93705750 -172.14790344]
[-50.82646942 -179.43572998]
[-36.40657425 -183.56690979]
[-21.42584229 -184.32699585]
[-6.66186476 -181.67652893]
[7.11902571 -175.75309753]
[19.20152092 -166.86415100]
[28.95847130 -155.47108459]
[35.88343430 -142.16526794]
[39.61696243 -127.63733673]
[39.96526718 -112.64138031]
[36.91027069 -97.95577240]
[30.61053848 -84.34278870]
[21.39306831 -72.50901031]
[9.73629856 -63.06868744]
[-3.75471711 -56.51182175]
[-18.37971878 -53.17875290]
[-33.37958145 -53.24248886]
[-47.97760773 -56.70039749]
[-37.31598282 -46.14910507]
[-26.65435410 -35.59781647]
[-11.20843697 -40.24272919]
[4.56744480 -36.46071625]
[16.36383438 -25.18795204]
[20.90965271 -9.41991138]
[16.87888145 6.58419847]
[27.75770569 16.91140366]
[38.63653183 27.23860741]
[53.19402695 30.38956833]
[57.87569427 45.50223160]
[68.75451660 55.82943726]
[79.63334656 66.15663910]
[86.69546509 68.49589539]
[90.62823486 76.81365204]
[101.28986359 87.36494446]
[114.94610596 93.57035065]
[129.90635681 94.66165924]
[144.86660767 95.75296783]
[159.82685852 96.84428406]
[168.94692993 83.08918762]
[183.66659546 75.83473206]
[199.94375610 76.96791840]
[213.36126709 86.08672333]
[220.32557678 100.63491058]
[235.30529785 101.41475677]
[250.28500366 102.19460297]
[264.64041138 94.26651001]
[278.54238892 102.96516418]
[277.68981934 119.34213257]
[262.95971680 126.55019379]
[249.50515747 117.17431641]
[234.52545166 116.39447021]
[219.54573059 115.61462402]
[212.86054993 127.56317139]
[201.61749268 135.49241638]
[187.98748779 137.80126953]
[174.63278198 133.98069763]
[164.18693542 124.72460175]
[158.73553467 111.80452728]
[143.77529907 110.71321869]
[128.81504822 109.62191010]
[113.85479736 108.53060150]
[108.36196136 113.63733673]
[120.96761322 121.76737976]
[133.57325745 129.89741516]
[147.77006531 134.74003601]
[155.66279602 147.49562073]
[153.66094971 162.36143494]
[142.67518616 172.57481384]
[127.70310211 173.48950195]
[115.55573273 164.68942261]
[111.75906372 150.17829895]
[104.56768036 137.01455688]
[97.37629700 123.85082245]
[91.88346863 128.95756531]
[91.88346863 143.95756531]
[91.88346863 158.95756531]
[91.88346863 173.95756531]
[91.88346863 188.95756531]
[91.88346863 203.95756531]
[91.88346863 218.95756531]
[91.88346863 233.95756531]
[91.88346863 248.95756531]
[91.88346863 263.95755005]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 101]
[13 100]
[14 98]
[15 97]
[16 96]
[18 94]
[19 93]
[20 92]
[26 87]
[27 86]
[28 85]
[29 59]
[30 58]
[33 54]
[34 53]
[35 52]
[36 51]
[38 49]
[39 48]
[102 128]
[103 127]
[104 126]
[105 125]
[110 119]
[111 118]
[112 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
