%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCAUGACCCCUAACAGGGGCCCUCUCAGCCCUCCUAAUGACCUCCGGCCUAGCCAUGUGAUxxxxxxxxxxCGCCCAUAAUCAUACAAAGCCCCCGCACCAAUAGGAUCCUCCCGAAUCAACCCUGACCCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[216.06571960 214.20252991]
[204.67465210 204.44325256]
[189.97546387 202.03839111]
[184.52957153 187.18400574]
[169.83039856 184.77915955]
[164.38450623 169.92477417]
[152.99342346 160.16549683]
[141.60235596 150.40621948]
[130.21128845 140.64694214]
[118.82020569 130.88766479]
[107.42913818 121.12839508]
[82.23900604 110.52540588]
[67.25876617 109.75574493]
[52.27852631 108.98609161]
[37.29828644 108.21643066]
[27.57152367 125.40319061]
[3.09935713 129.77717590]
[-9.05397606 138.56901550]
[-21.20730972 147.36085510]
[-33.36064148 156.15270996]
[-45.51397324 164.94454956]
[-54.80329514 179.12710571]
[-71.00312805 174.12693787]
[-70.68292999 157.17601013]
[-54.30581665 152.79121399]
[-42.15248489 143.99937439]
[-29.99915123 135.20753479]
[-17.84581757 126.41568756]
[-5.69248533 117.62384033]
[-6.53768396 110.17161560]
[-21.44215775 111.86178589]
[-23.13209534 96.95728302]
[-8.22808170 95.26717377]
[-9.07328033 87.81494904]
[-22.88686371 81.96816254]
[-37.38596344 87.66147614]
[-51.31161118 81.53522491]
[-56.64996719 67.67746735]
[-70.46354675 61.83067703]
[-84.27713013 55.98388672]
[-94.82180786 66.90058136]
[-108.59963226 73.26737213]
[-123.74726868 74.22319794]
[-138.21611023 69.63880157]
[-150.04939270 60.13416672]
[-157.64674377 46.99473190]
[-159.98068237 31.99749374]
[-156.73556519 17.17070580]
[-148.35026550 4.51956749]
[-135.95884705 -4.24495649]
[-121.23711395 -7.93753672]
[-106.17607880 -6.05878258]
[-92.81262207 1.13722026]
[-82.95404053 12.67727184]
[-77.93362427 27.00067329]
[-78.43034363 42.17030334]
[-64.61676025 48.01709366]
[-50.80317688 53.86388016]
[-37.13831711 48.04949188]
[-23.04608917 53.78218842]
[-17.04007530 68.15457916]
[-3.22649240 74.00136566]
[25.97583771 73.61145782]
[38.06794357 93.23619080]
[53.04818726 94.00584412]
[68.02842712 94.77550507]
[83.00866699 95.54516602]
[94.69487762 86.14131165]
[97.14780426 71.34323120]
[99.60073090 56.54515076]
[102.05365753 41.74707413]
[88.61586761 34.79863358]
[77.98439026 24.03634262]
[71.20079803 10.51458073]
[68.92967224 -4.44192982]
[71.39353180 -19.36790085]
[78.35096741 -32.80104065]
[89.12038422 -43.42530060]
[102.64669037 -50.19982910]
[117.60471344 -52.46092987]
[132.52903748 -49.98707581]
[145.95750427 -43.02063370]
[156.57455444 -32.24410629]
[163.34001160 -18.71326447]
[165.59109497 -3.75372338]
[163.10723877 11.16893291]
[156.13179016 24.59273338]
[145.34815979 35.20255280]
[131.81278992 41.95895004]
[116.85173798 44.20000076]
[114.39881134 58.99808121]
[111.94588470 73.79615784]
[109.49295807 88.59423828]
[117.80792236 76.10979462]
[132.34802246 72.42395782]
[145.60618591 79.43975067]
[150.73718262 93.53488159]
[145.09185791 107.43202209]
[131.58493042 113.95603943]
[117.18840790 109.73731995]
[128.57948303 119.49659729]
[139.97055054 129.25587463]
[151.36163330 139.01515198]
[162.75270081 148.77441406]
[174.14378357 158.53369141]
[189.65773010 161.63659668]
[194.28884888 175.79293823]
[209.80279541 178.89584351]
[214.43391418 193.05216980]
[225.82499695 202.81144714]
[227.41284180 187.89572144]
[240.49198914 180.55162048]
[254.05389404 186.96055603]
[256.68368530 201.72824097]
[246.16784668 212.42491150]
[260.93994141 215.02963257]
[275.71206665 217.63435364]
[292.36050415 214.43031311]
[300.04809570 229.54115295]
[287.65591431 241.11138916]
[273.10736084 232.40647888]
[258.33523560 229.80175781]
[243.56311035 227.19703674]
[254.73789978 237.20324707]
[263.81961060 249.14152527]
[270.48071289 262.58139038]
[274.48104858 277.03811646]
[275.67630005 291.99041748]
[274.02340698 306.89907837]
[269.58197021 321.22644043]
[262.51214600 334.45587158]
[253.06889343 346.11026001]
[241.59272766 355.76934814]
[228.49752808 363.08477783]
[214.25552368 367.79278564]
[199.38031006 369.72360229]
[184.40830994 368.80752563]
[169.87944031 365.07766724]
[156.31764221 358.66848755]
[144.21197510 349.81112671]
[133.99899292 338.82498169]
[126.04698944 326.10629272]
[120.64273834 312.11364746]
[117.98111725 297.35165405]
[118.15811920 282.35272217]
[121.16735077 267.65765381]
[126.90029907 253.79644775]
[135.15022278 241.26892090]
[145.61961365 230.52687073]
[157.93093872 221.95764160]
[171.64019775 215.87028503]
[186.25305176 212.48431396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 110]
[2 109]
[4 107]
[6 105]
[7 104]
[8 103]
[9 102]
[10 101]
[11 100]
[12 67]
[13 66]
[14 65]
[15 64]
[17 29]
[18 28]
[19 27]
[20 26]
[21 25]
[34 62]
[35 61]
[38 58]
[39 57]
[40 56]
[68 93]
[69 92]
[70 91]
[71 90]
[115 123]
[116 122]
[117 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
