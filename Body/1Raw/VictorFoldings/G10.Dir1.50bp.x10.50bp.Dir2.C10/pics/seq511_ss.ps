%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCACCCCCCAACUAACACAUUAUUUUCCCCUCCCACUCCCAUACUACUAAUCUCAUCAAUxxxxxxxxxxUCCCACUAAUAGCUUUUUGAUGACUUCUAGCAAGCCUCGCUAACCUCGCCUUACCCCCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[13.66079235 185.34368896]
[2.36178732 195.20941162]
[-8.93721771 205.07513428]
[-20.23622131 214.94085693]
[-29.62338448 226.64047241]
[-36.80589294 239.80906677]
[-43.98840332 252.97764587]
[-51.17090988 266.14624023]
[-58.35342026 279.31481934]
[-65.53592682 292.48339844]
[-67.81212616 309.28384399]
[-84.58612823 311.74743652]
[-91.59693909 296.31094360]
[-78.70451355 285.30087280]
[-71.52200317 272.13229370]
[-64.33949280 258.96371460]
[-57.15698242 245.79513550]
[-49.97447586 232.62655640]
[-42.79196548 219.45797729]
[-53.00544739 208.47230530]
[-66.66168976 214.67771912]
[-76.02471161 227.43092346]
[-90.81269836 225.65194702]
[-104.46894073 231.85736084]
[-118.12518311 238.06275940]
[-127.21751404 251.71052551]
[-143.56343079 250.39033508]
[-150.34765625 235.46029663]
[-140.59115601 222.27914429]
[-124.33058929 224.40652466]
[-110.67434692 218.20111084]
[-97.01810455 211.99571228]
[-88.63186646 199.68635559]
[-72.86709595 201.02146912]
[-59.21085358 194.81607056]
[-40.80797577 194.38185120]
[-30.10194588 203.64184570]
[-18.80294037 193.77612305]
[-7.50393581 183.91040039]
[3.79506898 174.04467773]
[-3.60649753 163.27478027]
[-9.80754185 151.77168274]
[-14.73621082 139.66870117]
[-18.33539391 127.10605621]
[-20.56338501 114.22933197]
[-21.39436913 101.18772125]
[-20.81871796 88.13235474]
[-18.84309959 75.21449280]
[-15.49040794 62.58383942]
[-10.79949188 50.38673401]
[-4.82470512 38.76451492]
[2.36471939 27.85185051]
[10.68547630 17.77519035]
[20.04114914 8.65129662]
[30.32333183 0.58588946]
[41.41287994 -6.32757378]
[53.18129730 -12.00898457]
[65.49221802 -16.39250946]
[78.20298767 -19.42735863]
[91.16633606 -21.07836342]
[104.23203278 -21.32639313]
[117.24869537 -20.16857338]
[130.06549072 -17.61832237]
[134.67105103 -31.89378357]
[139.27662659 -46.16924286]
[143.88218689 -60.44470215]
[148.48774719 -74.72016144]
[153.09332275 -88.99562836]
[157.69888306 -103.27108765]
[144.69204712 -110.86293793]
[133.62162781 -121.07372284]
[125.00542450 -133.42585754]
[119.24642181 -147.34159851]
[116.61398315 -162.17008972]
[117.23123169 -177.21778870]
[121.06929016 -191.78086853]
[127.94865417 -205.17819214]
[137.54756165 -216.78315735]
[149.41705322 -226.05296326]
[163.00196838 -232.55403137]
[177.66693115 -235.98233032]
[192.72601318 -236.17749023]
[207.47488403 -233.13038635]
[221.22370911 -226.98353577]
[233.32943726 -218.02442932]
[243.22586060 -206.67211914]
[250.45010376 -193.45756531]
[254.66426086 -178.99884033]
[255.67124939 -163.97219849]
[253.42396545 -149.08045959]
[248.02752686 -135.02014160]
[239.73431396 -122.44888306]
[228.93222046 -111.95464325]
[216.12649536 -104.02827454]
[201.91607666 -99.04049683]
[186.96559143 -97.22460175]
[171.97433472 -98.66551971]
[167.36877441 -84.39006042]
[162.76321411 -70.11460114]
[158.15765381 -55.83913803]
[153.55207825 -41.56367874]
[148.94651794 -27.28821754]
[144.34095764 -13.01275730]
[170.09016418 0.87698174]
[191.76870728 20.52353859]
[208.11755371 44.78589249]
[218.18721008 72.25494385]
[221.39283752 101.33535767]
[236.35308838 102.42666626]
[251.31333923 103.51797485]
[266.27359009 104.60929108]
[277.03961182 93.26792145]
[292.58273315 91.55158234]
[305.56393433 100.27066040]
[309.85388184 115.30828857]
[303.42703247 129.56414795]
[289.31793213 136.30706787]
[274.18844604 132.35324097]
[265.18228149 119.56953430]
[250.22201538 118.47822571]
[235.26177979 117.38691711]
[220.30152893 116.29560852]
[218.76135254 125.17432404]
[216.56681824 133.91433716]
[213.73001099 142.46748352]
[210.26658630 150.78663635]
[206.19561768 158.82597351]
[201.53952026 166.54118347]
[196.32395935 173.88977051]
[190.57768250 180.83123779]
[184.33232117 187.32733154]
[177.62231445 193.34226990]
[170.48461914 198.84291077]
[162.95857239 203.79895020]
[155.08563232 208.18307495]
[146.90917969 211.97113037]
[138.47425842 215.14224243]
[129.82736206 217.67893982]
[121.01612091 219.56724548]
[112.08908081 220.79676819]
[103.09543610 221.36070251]
[94.08473206 221.25598145]
[85.10662079 220.48315430]
[76.21057129 219.04649353]
[67.44559479 216.95390320]
[58.85998917 214.21691895]
[50.50105667 210.85061646]
[42.41485596 206.87355042]
[34.64593887 202.30761719]
[27.23710823 197.17800903]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 40]
[2 39]
[3 38]
[4 37]
[5 19]
[6 18]
[7 17]
[8 16]
[9 15]
[10 14]
[20 35]
[21 34]
[23 32]
[24 31]
[25 30]
[63 103]
[64 102]
[65 101]
[66 100]
[67 99]
[68 98]
[69 97]
[108 122]
[109 121]
[110 120]
[111 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
