%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUAAACAAAACGAAUGAUUUCGACUCAUUAAAUUAUGAUAAUCAUAUUUACCAAAUGCCCxxxxxxxxxxAACACUAUGCUUAGGCGCUAUCACCACUCUGUUCGCAGCAGUCUGCGCCCUUACACAAAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[74.50265503 264.89086914]
[74.50265503 249.89086914]
[74.50265503 234.89086914]
[74.50265503 219.89086914]
[74.50265503 204.89086914]
[74.50265503 189.89086914]
[74.50265503 174.89086914]
[74.50265503 159.89086914]
[74.50265503 144.89086914]
[74.50265503 129.89086914]
[72.35299683 115.05375671]
[76.53697968 103.13111115]
[84.56732941 96.33310699]
[93.34952545 95.45772552]
[86.16701508 82.28914642]
[78.98450470 69.12055969]
[71.80200195 55.95197678]
[57.65705109 57.88103867]
[43.73469543 54.86188126]
[31.71008301 47.27871704]
[23.02286339 36.06364441]
[18.70481491 22.58210182]
[19.25734138 8.46665192]
[24.59333611 -4.58071613]
[34.05015182 -14.99380779]
[27.14315414 -28.30896378]
[20.23615646 -41.62411880]
[13.32915783 -54.93927383]
[-1.46811914 -59.80531693]
[-8.28311825 -73.40717316]
[-3.55290055 -87.48412323]
[-10.45989895 -100.79927826]
[-23.68264198 -109.48661041]
[-22.67490005 -124.34708405]
[-29.58189964 -137.66224670]
[-39.68054962 -148.75355530]
[-52.29167557 -156.87509155]
[-64.90280151 -164.99664307]
[-77.51393127 -173.11817932]
[-90.45198822 -180.70808411]
[-103.69457245 -187.75321960]
[-116.93715668 -194.79835510]
[-130.17974854 -201.84349060]
[-139.29039001 -203.12727356]
[-143.62229919 -209.17543030]
[-156.71545410 -216.49453735]
[-169.80860901 -223.81364441]
[-182.90176392 -231.13275146]
[-199.67762756 -233.58358765]
[-201.96658325 -250.38230896]
[-186.45802307 -257.23217773]
[-175.58265686 -244.22590637]
[-162.48950195 -236.90679932]
[-149.39634705 -229.58769226]
[-136.30319214 -222.26858521]
[-123.13461304 -215.08607483]
[-109.89202881 -208.04093933]
[-96.64943695 -200.99580383]
[-83.40685272 -193.95066833]
[-80.63939667 -194.69129944]
[-77.40314484 -194.34400940]
[-74.12468719 -192.72116089]
[-71.29161072 -189.79801941]
[-69.39238739 -185.72930908]
[-56.78126144 -177.60777283]
[-44.17013550 -169.48622131]
[-31.55900574 -161.36468506]
[-38.09778214 -174.86447144]
[-41.41123962 -189.49392700]
[-41.32740021 -204.49369812]
[-37.85060501 -219.08520508]
[-31.16132736 -232.51104736]
[-21.60677528 -244.07438660]
[-9.68288803 -253.17497253]
[3.99141908 -259.34048462]
[18.70636940 -262.25085449]
[33.69817352 -261.75500488]
[48.18866730 -257.87875366]
[61.42571640 -250.82321167]
[72.72223663 -240.95463562]
[81.49187469 -228.78527832]
[87.27944183 -214.94677734]
[89.78452301 -200.15744019]
[88.87709045 -185.18490601]
[84.60424805 -170.80635071]
[77.18778229 -157.76809692]
[67.01264191 -146.74691772]
[54.60698700 -138.31484985]
[40.61473465 -132.90957642]
[25.76216507 -130.81167603]
[10.82021332 -132.13003540]
[-3.43554926 -136.79621887]
[-16.26674271 -144.56924438]
[-9.35974503 -131.25408936]
[3.36896229 -123.51914215]
[2.85525656 -107.70627594]
[9.76225471 -94.39112091]
[23.99436760 -90.15053558]
[31.18872643 -76.74546814]
[26.64431381 -61.84627533]
[33.55131149 -48.53111649]
[40.45830917 -35.21596146]
[47.36530685 -21.90080643]
[63.10086823 -23.50609589]
[78.28833008 -18.95156479]
[90.60335541 -8.90350151]
[98.14946747 5.12872553]
[99.75006104 21.01935387]
[95.13175201 36.34824371]
[84.97058105 48.76947021]
[92.15309143 61.93805313]
[99.33560181 75.10663605]
[106.51811218 88.27521515]
[118.11945343 97.78357697]
[132.44204712 102.24039459]
[146.76464844 106.69720459]
[161.08723450 111.15402222]
[175.40983582 115.61083984]
[191.27900696 111.47544861]
[202.60073853 123.33927155]
[197.72821045 138.99783325]
[181.67385864 142.34294128]
[170.95301819 129.93344116]
[156.63043213 125.47662354]
[142.30783081 121.01980591]
[127.98522949 116.56298828]
[113.66263580 112.10617065]
[107.62264252 116.55234528]
[118.05519104 127.33019257]
[128.48774719 138.10803223]
[138.92028809 148.88587952]
[151.86433411 156.46556091]
[155.57746887 170.99871826]
[147.85556030 183.85842896]
[133.28234863 187.41111755]
[120.50855255 179.54792786]
[117.11679840 164.93591309]
[109.92541504 151.77217102]
[102.73403168 138.60842896]
[95.54264832 125.44469452]
[89.50265503 129.89086914]
[89.50265503 144.89086914]
[89.50265503 159.89086914]
[89.50265503 174.89086914]
[89.50265503 189.89086914]
[89.50265503 204.89086914]
[89.50265503 219.89086914]
[89.50265503 234.89086914]
[89.50265503 249.89086914]
[89.50265503 264.89086914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[14 113]
[15 112]
[16 111]
[17 110]
[25 103]
[26 102]
[27 101]
[28 100]
[31 97]
[32 96]
[34 94]
[35 93]
[36 67]
[37 66]
[38 65]
[39 64]
[40 59]
[41 58]
[42 57]
[43 56]
[45 55]
[46 54]
[47 53]
[48 52]
[114 127]
[115 126]
[116 125]
[117 124]
[118 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
