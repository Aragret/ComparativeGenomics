%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUGCUUAUUACAAUUUUACUGGGUCUCUAUUUUACCCUCCUACAAGCCUCAGAGUACUUCxxxxxxxxxxUCCCCCGCCCGCGUCCCUUUCUCCAUAAAAUUCUUCUUAGUAGCUAUUACCUUCUUAUUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[137.20257568 342.80245972]
[136.89051819 327.80569458]
[136.57846069 312.80892944]
[136.26640320 297.81219482]
[135.95434570 282.81542969]
[135.64228821 267.81866455]
[135.33023071 252.82192993]
[135.01817322 237.82516479]
[134.70613098 222.82841492]
[131.91380310 208.09060669]
[126.71838379 194.01908875]
[121.52296448 179.94757080]
[116.32755280 165.87605286]
[111.13213348 151.80453491]
[105.93672180 137.73301697]
[91.05863953 137.13592529]
[77.53929138 130.89566040]
[67.43307495 119.96047211]
[62.27573776 105.99208832]
[62.85099030 91.11314392]
[69.07141876 77.58465576]
[79.99176025 67.46240234]
[74.79634094 53.39088058]
[69.60092926 39.31936264]
[64.40550995 25.24784279]
[59.21009827 11.17632389]
[54.01468277 -2.89519572]
[48.81926727 -16.96671486]
[42.87360764 -23.98818016]
[43.66547012 -31.38538361]
[38.76391983 -45.56193924]
[33.86236954 -59.73849869]
[19.30330467 -56.08842850]
[4.48151684 -53.72116089]
[-10.49019241 -52.65472031]
[-25.49787521 -52.89722061]
[-40.42731476 -54.44681549]
[-55.16488266 -57.29170990]
[-69.59841919 -61.41025162]
[-83.61807251 -66.77110291]
[-97.11714172 -73.33345032]
[-109.99288940 -81.04736328]
[-122.14732361 -89.85412598]
[-133.48794556 -99.68672180]
[-143.92842102 -110.47029877]
[-153.38932800 -122.12280273]
[-161.79862976 -134.55554199]
[-169.09233093 -147.67388916]
[-175.21493530 -161.37802124]
[-180.11984253 -175.56361389]
[-183.76971436 -190.12274170]
[-186.13676453 -204.94456482]
[-187.20300293 -219.91627502]
[-186.96028137 -234.92396545]
[-185.41047668 -249.85337830]
[-182.56538391 -264.59091187]
[-178.44664001 -279.02438354]
[-173.08558655 -293.04397583]
[-166.52304077 -306.54293823]
[-158.80895996 -319.41857910]
[-150.00201416 -331.57290649]
[-140.16928101 -342.91336060]
[-129.38554382 -353.35369873]
[-117.73291016 -362.81445312]
[-105.30005646 -371.22357178]
[-92.18160248 -378.51708984]
[-78.47738647 -384.63949585]
[-64.29171753 -389.54421997]
[-49.73255157 -393.19387817]
[-34.91069412 -395.56072998]
[-19.93895721 -396.62673950]
[-4.93128061 -396.38381958]
[9.99811459 -394.83380127]
[24.73560333 -391.98849487]
[39.16902542 -387.86953735]
[53.18852615 -382.50830078]
[66.68740845 -375.94558716]
[79.56294250 -368.23129272]
[91.71713257 -359.42419434]
[103.05747223 -349.59127808]
[113.49765778 -338.80740356]
[122.95822906 -327.15466309]
[131.36718750 -314.72167969]
[138.66052246 -301.60311890]
[144.78274536 -287.89883423]
[149.68724060 -273.71307373]
[153.33670044 -259.15386963]
[155.70333862 -244.33197021]
[156.76914978 -229.36022949]
[156.52603149 -214.35255432]
[154.97579956 -199.42317200]
[152.13029480 -184.68572998]
[148.01113892 -170.25236511]
[142.64970398 -156.23294067]
[136.08677673 -142.73414612]
[128.37232971 -129.85871887]
[119.56504822 -117.70465088]
[109.73197937 -106.36445618]
[98.94795990 -95.92442322]
[87.29506683 -86.46401215]
[74.86196899 -78.05523682]
[61.74331284 -70.76207733]
[48.03892899 -64.64005280]
[52.94047928 -50.46349335]
[57.84202957 -36.28693390]
[62.89078522 -22.16213036]
[68.08620453 -8.09061146]
[73.28161621 5.98090792]
[78.47703552 20.05242729]
[83.67244720 34.12394714]
[88.86786652 48.19546509]
[94.06327820 62.26698685]
[108.94136047 62.86407089]
[122.46070862 69.10434723]
[132.56692505 80.03952789]
[137.72425842 94.00791168]
[137.14900208 108.88685608]
[130.92858887 122.41534424]
[120.00823975 132.53759766]
[125.20365906 146.60911560]
[130.39907837 160.68063354]
[135.59448242 174.75215149]
[140.78990173 188.82366943]
[145.98532104 202.89520264]
[149.15710449 188.23437500]
[157.07038879 175.49153137]
[168.80509949 166.14828491]
[182.99687195 161.29095459]
[197.99562073 161.48429871]
[212.05746460 166.70584106]
[223.54745483 176.34846497]
[231.12962341 189.29106140]
[233.92243958 204.02877808]
[231.60116577 218.84806824]
[224.43568420 232.02592468]
[213.25914001 242.03016663]
[199.37100220 247.69760132]
[184.38604736 248.36927795]
[170.04656982 243.96711731]
[158.01977539 235.00294495]
[149.70288086 222.51635742]
[150.01493835 237.51310730]
[150.32699585 252.50987244]
[150.63905334 267.50662231]
[150.95109558 282.50338745]
[151.26315308 297.50012207]
[151.57521057 312.49688721]
[151.88726807 327.49362183]
[152.19932556 342.49038696]
[154.79032898 361.69812012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 124]
[11 123]
[12 122]
[13 121]
[14 120]
[15 119]
[22 112]
[23 111]
[24 110]
[25 109]
[26 108]
[27 107]
[28 106]
[30 105]
[31 104]
[32 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
