%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAUUGCCCCCACAAUCCUAGGCCUACCCGCCGCAGUACUGAUCAUUCUAUUUCCCCCUCUxxxxxxxxxxAAACGCCUGGCAGCCGGAAGCCUAUUCGCAGGAUUUCUCAUUACUAACAACAUUUCCCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[163.77571106 315.26492310]
[158.27670288 301.30923462]
[154.92994690 286.68737793]
[153.81094360 271.73452759]
[153.33731079 287.54864502]
[140.15092468 294.47454834]
[132.42684937 307.33294678]
[124.70275879 320.19137573]
[116.97866821 333.04977417]
[109.25458527 345.90817261]
[101.53050232 358.76657104]
[98.55739594 375.45779419]
[81.69543457 377.22146606]
[75.33282471 361.50671387]
[88.67209625 351.04248047]
[96.39618683 338.18408203]
[104.12026978 325.32568359]
[111.84435272 312.46728516]
[119.56843567 299.60888672]
[127.29252625 286.75048828]
[127.21366882 271.85607910]
[140.95254517 264.01043701]
[142.97486877 249.14738464]
[138.96713257 234.69270325]
[134.95939636 220.23800659]
[130.95166016 205.78332520]
[126.94391632 191.32862854]
[122.93617249 176.87394714]
[118.03462219 162.69738770]
[112.25834656 148.85417175]
[106.48207855 135.01095581]
[100.70580292 121.16773224]
[88.45903778 117.75886536]
[80.37005615 107.95213318]
[79.35301971 95.28054047]
[85.77432251 84.30919647]
[80.28729248 70.34880066]
[74.51102448 56.50558472]
[68.30561829 42.84934616]
[61.95848465 29.25839424]
[55.61135483 15.66744232]
[48.98285675 2.21147728]
[42.07585907 -11.10367870]
[35.30223846 -17.33022881]
[35.16693497 -24.76846313]
[28.53843689 -38.22443008]
[14.14229679 -33.88841248]
[-0.77120143 -31.98120880]
[-15.79520893 -32.55485153]
[-30.51985931 -35.59368896]
[-44.54345322 -41.01482391]
[-57.48341751 -48.67036057]
[-68.98674011 -58.35144806]
[-78.73959351 -69.79398346]
[-86.47592926 -82.68579865]
[-91.98468781 -96.67520142]
[-95.11557770 -111.38055420]
[-95.78319550 -126.40068054]
[-93.96932983 -141.32582092]
[-89.72345734 -155.74879456]
[-83.16140747 -169.27615356]
[-74.46220398 -181.53884888]
[-63.86316299 -192.20234680]
[-51.65343475 -200.97575378]
[-38.16611481 -207.61968994]
[-23.76913834 -211.95294189]
[-8.85527325 -213.85726929]
[6.16862297 -213.28073120]
[20.89268684 -210.23905945]
[34.91523743 -204.81521606]
[47.85372543 -197.15719604]
[59.35517883 -187.47389221]
[69.10583496 -176.02947998]
[76.83968353 -163.13616943]
[82.34574890 -149.14569092]
[85.47380829 -134.43974304]
[86.13852692 -119.41948700]
[84.32178497 -104.49470520]
[80.07313538 -90.07254028]
[73.50847626 -76.54644775]
[64.80691528 -64.28542328]
[54.20581818 -53.62397003]
[41.99440002 -44.85292816]
[48.62290192 -31.39696121]
[55.39101410 -18.01067734]
[62.29801178 -4.69552135]
[66.55899048 -2.41088319]
[69.39677429 2.60691643]
[69.20230865 9.32031345]
[75.54943848 22.91126442]
[81.89656830 36.50221634]
[87.61352539 41.26267624]
[88.23107910 50.44257355]
[92.34125519 52.98854065]
[94.86051941 58.17357635]
[94.24768829 64.86177063]
[99.73471832 78.82215881]
[114.99152374 85.03920746]
[121.17724609 100.30873871]
[114.54901886 115.39146423]
[120.32529449 129.23468018]
[126.10157013 143.07789612]
[131.87783813 156.92111206]
[138.95014954 143.69302368]
[153.24765015 139.15635681]
[166.65289307 145.88684082]
[171.55499268 160.06321716]
[165.17076111 173.63677979]
[151.12487793 178.90109253]
[137.39085388 172.86621094]
[141.39860535 187.32089233]
[145.40634155 201.77558899]
[149.41407776 216.23027039]
[153.42182922 230.68496704]
[157.42956543 245.13964844]
[162.50521851 231.02449036]
[169.63772583 217.82875061]
[178.66618347 205.85015869]
[189.38690186 195.35891724]
[201.55802917 186.59172058]
[214.90498352 179.74636841]
[229.12664795 174.97727966]
[243.90219116 172.39204407]
[258.89825439 172.04901123]
[273.77658081 173.95588684]
[288.20144653 178.06965637]
[301.84744263 184.29753113]
[314.40673828 192.49899292]
[325.59597778 202.48902893]
[335.16275024 214.04225159]
[342.89120483 226.89802551]
[348.60699463 240.76632690]
[352.18118286 255.33427429]
[353.53311157 270.27322388]
[352.63232422 285.24615479]
[349.49908447 299.91525269]
[344.20410156 313.94961548]
[336.86685181 327.03262329]
[327.65286255 338.86911011]
[316.76995850 349.19201660]
[304.46371460 357.76849365]
[291.01171875 364.40505981]
[276.71746826 368.95196533]
[261.90344238 371.30667114]
[246.90383911 371.41601562]
[232.05705261 369.27752686]
[217.69804382 364.93951416]
[204.15072632 358.49975586]
[191.72073364 350.10360718]
[180.68850708 339.94042969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 22]
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[11 15]
[23 115]
[24 114]
[25 113]
[26 112]
[27 111]
[28 110]
[29 103]
[30 102]
[31 101]
[32 100]
[36 97]
[37 96]
[38 93]
[39 91]
[40 90]
[41 89]
[42 86]
[43 85]
[45 84]
[46 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
