%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCCUAAUAGUAGAAGAACCCUCCAUAAACCUGGAGUGACUAUAUGGAUGCCCCCCACCCUAxxxxxxxxxxCCUAUUUAGCUGUUCCCCAACCUUUUCCUCCGACCCCCUAACAACCCCCCUCCUAAUACUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[293.32431030 79.32330322]
[278.45770264 81.31935883]
[263.59109497 83.31541443]
[252.00662231 92.67752838]
[237.29957581 86.84543610]
[222.43296814 88.84149170]
[207.56637573 90.83754730]
[192.69978333 92.83361053]
[177.83317566 94.82966614]
[162.96658325 96.82572174]
[148.14410400 99.12659454]
[133.37197876 101.73131561]
[118.59986877 104.33604431]
[110.20326233 116.14465332]
[95.93386841 118.66072845]
[84.00485992 110.43607330]
[69.23274231 113.04079437]
[54.46062469 115.64552307]
[39.68850708 118.25024414]
[24.91639137 120.85496521]
[37.47823334 129.05253601]
[42.97028732 143.01095581]
[39.36246109 157.57060242]
[27.98835564 167.34965515]
[13.05231285 168.73335266]
[0.07530960 161.21022034]
[-6.14581728 147.56114197]
[-3.31148219 132.83135986]
[7.52965355 122.46608734]
[-7.46718454 122.77406311]
[-22.46006966 123.23598480]
[-37.45295715 123.69791412]
[-52.44584274 124.15983582]
[-67.43872833 124.62176514]
[-78.08064270 136.30616760]
[-93.87140656 136.95983887]
[-105.44264221 126.19499207]
[-105.92933655 110.39819336]
[-95.04273987 98.94142151]
[-79.24168396 98.62176514]
[-67.90065002 109.62887573]
[-52.90776825 109.16695404]
[-37.91488266 108.70502472]
[-22.92199707 108.24310303]
[-7.92911053 107.78117371]
[-1.29939556 104.41085052]
[7.37565660 107.46687317]
[22.31166840 106.08284760]
[37.08378601 103.47812653]
[51.85589981 100.87340546]
[66.62802124 98.26868439]
[81.40013123 95.66395569]
[89.79673767 83.85534668]
[104.06613159 81.33927155]
[115.99514008 89.56392670]
[130.76725769 86.95920563]
[145.53938293 84.35447693]
[150.92094421 80.34432983]
[156.65470886 79.78588867]
[160.97052002 81.95912170]
[175.83712769 79.96306610]
[190.70372009 77.96701050]
[205.57031250 75.97095490]
[220.43692017 73.97489166]
[235.30351257 71.97883606]
[247.95135498 62.47395325]
[261.59503174 68.44882202]
[276.46163940 66.45275879]
[291.32824707 64.45670319]
[290.42205811 49.47734451]
[290.61172485 34.47179794]
[291.89620972 19.52012634]
[294.26867676 4.70210457]
[297.71646118 -9.90320683]
[302.22119141 -24.21788025]
[307.75881958 -38.16553879]
[314.29977417 -51.67176819]
[321.80917358 -64.66450500]
[330.24697876 -77.07442474]
[339.56811523 -88.83531189]
[349.72290039 -99.88442993]
[360.65713501 -110.16281128]
[372.31246948 -119.61561584]
[384.62670898 -128.19241333]
[397.53417969 -135.84745789]
[410.96600342 -142.53987122]
[424.85052490 -148.23397827]
[439.11364746 -152.89938354]
[453.67926025 -156.51119995]
[468.46966553 -159.05014038]
[483.40594482 -160.50268555]
[498.40841675 -160.86106873]
[513.39703369 -160.12336731]
[528.29180908 -158.29354858]
[543.01324463 -155.38134766]
[557.48284912 -151.40231323]
[571.62341309 -146.37767029]
[585.35949707 -140.33424377]
[598.61773682 -133.30426025]
[611.32751465 -125.32523346]
[623.42089844 -116.43973541]
[634.83343506 -106.69517517]
[645.50421143 -96.14354706]
[655.37628174 -84.84114838]
[664.39703369 -72.84827423]
[672.51824951 -60.22892761]
[679.69665527 -47.05042648]
[685.89392090 -33.38309097]
[691.07702637 -19.29984093]
[695.21832275 -4.87581873]
[698.29559326 9.81201839]
[700.29254150 24.68530273]
[701.19848633 39.66467667]
[701.00860596 54.67021942]
[699.72387695 69.62187195]
[697.35113525 84.43985748]
[693.90307617 99.04510498]
[689.39813232 113.35971069]
[683.86029053 127.30727386]
[677.31909180 140.81340027]
[669.80950928 153.80601501]
[661.37152100 166.21578979]
[652.05017090 177.97653198]
[641.89520264 189.02548218]
[630.96081543 199.30368042]
[619.30529785 208.75630188]
[606.99090576 217.33290100]
[594.08331299 224.98771667]
[580.65136719 231.67991638]
[566.76678467 237.37379456]
[552.50360107 242.03897095]
[537.93792725 245.65054321]
[523.14746094 248.18923950]
[508.21115112 249.64154053]
[493.20867920 249.99966431]
[478.22009277 249.26173401]
[463.32534790 247.43165588]
[448.60394287 244.51922607]
[434.13439941 240.53994751]
[419.99392700 235.51507568]
[406.25796509 229.47142029]
[392.99981689 222.44122314]
[380.29019165 214.46197510]
[368.19692993 205.57627869]
[356.78457642 195.83154297]
[346.11395264 185.27973938]
[336.24206543 173.97717285]
[327.22152710 161.98416138]
[319.10049438 149.36466980]
[311.92230225 136.18605042]
[305.72525024 122.51861572]
[300.54238892 108.43527985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 69]
[2 68]
[3 67]
[5 65]
[6 64]
[7 63]
[8 62]
[9 61]
[10 60]
[11 57]
[12 56]
[13 55]
[16 52]
[17 51]
[18 50]
[19 49]
[20 48]
[29 47]
[30 45]
[31 44]
[32 43]
[33 42]
[34 41]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
