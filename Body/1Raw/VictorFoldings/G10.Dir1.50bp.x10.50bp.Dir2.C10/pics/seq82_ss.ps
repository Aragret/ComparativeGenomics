%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGAUUCCUGCCUCAUCCUAUUAUUUAUCGCACCUACGUUCAAUAUUACAGGCGAACAUACUUACxxxxxxxxxxUCUUAUACUAGUAUCCUUAAUCAUUUUUAUUGCCACAACUAACCUCCUCGGACUCCUGCCUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.35143280 107.34843445]
[92.65156555 92.35143280]
[92.95169830 77.35443878]
[93.25183105 62.35744095]
[93.55196381 47.36044312]
[93.85209656 32.36344528]
[94.15222931 17.36644936]
[94.45236206 2.36945271]
[94.75249481 -12.62754440]
[95.05262756 -27.62454224]
[95.35276031 -42.62154007]
[80.38264465 -43.60903168]
[65.47354126 -45.28181458]
[50.65681458 -47.63637161]
[35.96361160 -50.66775131]
[21.42483902 -54.36957550]
[7.07106924 -58.73406219]
[-7.06751013 -63.75202942]
[-20.96116638 -69.41293335]
[-34.58067703 -75.70485687]
[-47.89740753 -82.61457062]
[-60.88334274 -90.12754822]
[-73.51118469 -98.22798920]
[-85.75436401 -106.89885712]
[-97.58714294 -116.12191772]
[-108.98462677 -125.87776947]
[-119.92285919 -136.14590454]
[-130.37882996 -146.90472412]
[-140.33055115 -158.13159180]
[-149.75709534 -169.80291748]
[-158.63862610 -181.89413452]
[-166.95648193 -194.37983704]
[-174.69317627 -207.23376465]
[-181.83241272 -220.42886353]
[-188.35919189 -233.93739319]
[-194.25978088 -247.73095703]
[-199.52178955 -261.78054810]
[-204.13414001 -276.05661011]
[-208.08711243 -290.52911377]
[-211.37243652 -305.16760254]
[-213.98315430 -319.94137573]
[-215.91381836 -334.81927490]
[-217.16033936 -349.77005005]
[-217.72012329 -364.76223755]
[-217.59196472 -379.76434326]
[-216.77613831 -394.74478149]
[-215.27438354 -409.67208862]
[-213.08982849 -424.51483154]
[-210.22708130 -439.24182129]
[-206.69216919 -453.82208252]
[-202.49250793 -468.22494507]
[-197.63694763 -482.42010498]
[-192.13568115 -496.37774658]
[-186.00030518 -510.06848145]
[-179.24369812 -523.46356201]
[-171.88006592 -536.53472900]
[-163.92491150 -549.25463867]
[-155.39497375 -561.59637451]
[-146.30816650 -573.53411865]
[-136.68359375 -585.04272461]
[-126.54153442 -596.09790039]
[-115.90328217 -606.67651367]
[-104.79122925 -616.75628662]
[-93.22873688 -626.31604004]
[-81.24011230 -635.33557129]
[-68.85058594 -643.79602051]
[-56.08620453 -651.67956543]
[-42.97380829 -658.96954346]
[-29.54097939 -665.65075684]
[-15.81596184 -671.70910645]
[-1.82762325 -677.13183594]
[12.39461994 -681.90753174]
[26.82085800 -686.02612305]
[41.42074966 -689.47906494]
[56.16359711 -692.25897217]
[71.01838684 -694.36004639]
[85.95388794 -695.77789307]
[100.93869019 -696.50946045]
[115.94127655 -696.55328369]
[130.93008423 -695.90924072]
[145.87362671 -694.57873535]
[160.74043274 -692.56445312]
[175.49926758 -689.87072754]
[190.11909485 -686.50317383]
[204.56913757 -682.46887207]
[218.81904602 -677.77636719]
[232.83882141 -672.43548584]
[246.59899902 -666.45745850]
[260.07064819 -659.85485840]
[273.22540283 -652.64154053]
[286.03561401 -644.83270264]
[298.47436523 -636.44482422]
[310.51547241 -627.49542236]
[322.13363647 -618.00341797]
[333.30438232 -607.98876953]
[344.00427246 -597.47247314]
[354.21075439 -586.47668457]
[363.90237427 -575.02453613]
[373.05877686 -563.14013672]
[381.66067505 -550.84838867]
[389.69000244 -538.17523193]
[397.12988281 -525.14727783]
[403.96463013 -511.79190063]
[410.17990112 -498.13723755]
[415.76260376 -484.21197510]
[420.70101929 -470.04541016]
[424.98474121 -455.66735840]
[428.60479736 -441.10800171]
[431.55352783 -426.39797974]
[433.82476807 -411.56823730]
[435.41372681 -396.64999390]
[436.31704712 -381.67456055]
[436.53283691 -366.67346191]
[436.06066895 -351.67825317]
[434.90151978 -336.72042847]
[433.05780029 -321.83151245]
[430.53344727 -307.04275513]
[427.33370972 -292.38531494]
[423.46533203 -277.88995361]
[418.93649292 -263.58718872]
[413.75665283 -249.50711060]
[407.93673706 -235.67930603]
[401.48901367 -222.13287354]
[394.42697144 -208.89628601]
[386.76553345 -195.99739075]
[378.52075195 -183.46330261]
[369.71002197 -171.32040405]
[360.35180664 -159.59420776]
[350.46585083 -148.30937195]
[340.07293701 -137.48965454]
[329.19488525 -127.15779114]
[317.85458374 -117.33551788]
[306.07589722 -108.04348755]
[293.88357544 -99.30123138]
[281.30328369 -91.12715912]
[268.36145020 -83.53843689]
[255.08532715 -76.55103302]
[241.50280762 -70.17964935]
[227.64245605 -64.43766785]
[213.53343201 -59.33718491]
[199.20541382 -54.88891220]
[184.68850708 -51.10220718]
[170.01327515 -47.98503876]
[155.21055603 -45.54395676]
[140.31147766 -43.78409576]
[125.34738922 -42.70915985]
[110.34975433 -42.32140732]
[110.04962158 -27.32440948]
[109.74948883 -12.32741261]
[109.44935608 2.66958475]
[109.14922333 17.66658211]
[108.84909058 32.66357803]
[108.54895782 47.66057587]
[108.24882507 62.65757370]
[107.94869995 77.65457153]
[107.64856720 92.65156555]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 156]
[3 155]
[4 154]
[5 153]
[6 152]
[7 151]
[8 150]
[9 149]
[10 148]
[11 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
