%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGCUGUCCCCACAUUAGGCUUAAAAACAGAUGCAAUUCCCGGACGUCUAAACCAAACCACxxxxxxxxxxUUAGCAUCAUCCCUCUACUAUUUUUUAACCAAAUCAACAACAACCUAUUUAGCUGUUCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[193.28775024 571.89764404]
[193.28775024 556.89764404]
[193.28775024 541.89764404]
[193.28775024 526.89764404]
[193.28775024 511.89761353]
[193.28775024 496.89761353]
[193.28775024 481.89761353]
[193.28775024 466.89761353]
[193.28775024 451.89761353]
[193.28775024 436.89761353]
[191.11091614 422.05642700]
[186.80332947 407.68823242]
[173.40533447 396.39691162]
[177.70800781 378.52328491]
[173.10244751 364.24783325]
[168.49688721 349.97238159]
[154.64372253 348.75137329]
[142.26875305 342.31164551]
[133.26374817 331.60034180]
[129.01957703 318.22027588]
[130.21139526 304.19033813]
[136.69149780 291.64077759]
[147.50675964 282.48977661]
[143.19917297 268.12158203]
[138.89158630 253.75340271]
[127.82527161 243.78414917]
[131.27363586 228.34332275]
[126.96605682 213.97514343]
[122.00046539 208.43540955]
[122.72166443 199.26307678]
[118.71392822 184.80838013]
[114.70618439 170.35369873]
[110.69844818 155.89901733]
[106.69070435 141.44432068]
[102.68296814 126.98963165]
[98.67522430 112.53494263]
[88.56558990 111.90801239]
[79.80357361 102.96710205]
[78.82410431 88.04509735]
[71.64160156 74.87651062]
[64.45909119 61.70793152]
[57.27658081 48.53934860]
[50.09407043 35.37076569]
[35.97594070 40.52207947]
[21.24771309 43.51155472]
[6.23842430 44.27241516]
[-8.71661282 42.78765488]
[-23.28329849 39.09044647]
[-37.13620377 33.26338577]
[-49.96585464 25.43665695]
[-61.48563004 15.78510475]
[-71.43817139 4.52435207]
[-79.60114288 -8.09403229]
[-85.79216766 -21.78814888]
[-89.87294769 -36.25206375]
[-91.75231171 -51.16265488]
[-91.38827515 -66.18680573]
[-88.78897858 -80.98887634]
[-84.01247406 -95.23818207]
[-77.16548157 -108.61638641]
[-68.40096283 -120.82461548]
[-57.91472244 -131.59013367]
[-45.94102478 -140.67243958]
[-32.74736786 -147.86862183]
[-18.62850189 -153.01792908]
[-3.89984894 -156.00531006]
[11.10954857 -156.76402283]
[26.06437492 -155.27713013]
[40.63053131 -151.57785034]
[54.48260880 -145.74882507]
[67.31114197 -137.92025757]
[78.82954407 -128.26707458]
[88.78048706 -117.00489807]
[96.94165802 -104.38535309]
[103.13072968 -90.69035339]
[107.20944977 -76.22585297]
[109.08669281 -61.31500244]
[108.72052002 -46.29090118]
[106.11910248 -31.48920059]
[101.34057617 -17.24057770]
[94.49167633 -3.86334825]
[85.72541809 8.34363365]
[75.23764801 19.10766029]
[63.26265335 28.18825722]
[70.44515991 41.35683823]
[77.62767029 54.52542114]
[84.81018066 67.69400787]
[91.99269104 80.86258698]
[106.81044769 83.19369507]
[117.68927002 72.86648560]
[114.70211029 57.73108292]
[120.39321136 43.39180374]
[132.94656372 34.42426300]
[148.35644531 33.68996429]
[161.70561218 41.42322540]
[168.73439026 55.15638733]
[167.19993591 70.50724792]
[157.59187317 82.57740784]
[142.97610474 87.51531982]
[128.01647949 83.74530792]
[117.13764954 94.07251740]
[113.12991333 108.52720642]
[117.13764954 122.98189545]
[121.14539337 137.43658447]
[125.15313721 151.89126587]
[129.16087341 166.34596252]
[133.16860962 180.80064392]
[137.17636108 195.25534058]
[141.33424377 209.66755676]
[145.64183044 224.03573608]
[157.01625061 235.03268433]
[153.25978088 249.44581604]
[157.56735229 263.81399536]
[161.87493896 278.18218994]
[177.93527222 280.59252930]
[191.29774475 289.71975708]
[199.32695007 303.70254517]
[200.46600342 319.72814941]
[194.53823853 334.59814453]
[182.77233887 345.36679077]
[187.37789917 359.64227295]
[191.98347473 373.91772461]
[203.11872864 380.51013184]
[206.63854980 392.54464722]
[201.17150879 403.38064575]
[205.47909546 417.74884033]
[209.86810303 403.40530396]
[219.32934570 391.76550293]
[232.47358704 384.53857422]
[247.37081909 382.78564453]
[261.83358765 386.76416016]
[273.73825073 395.88986206]
[281.33682251 408.82284546]
[283.51351929 423.66406250]
[279.94876099 438.23434448]
[271.16598511 450.39422607]
[258.45477295 458.35821533]
[243.68161011 460.95693970]
[229.01568604 457.80883789]
[216.61047363 449.37609863]
[208.28775024 436.89761353]
[208.28775024 451.89761353]
[208.28775024 466.89761353]
[208.28775024 481.89761353]
[208.28775024 496.89761353]
[208.28775024 511.89761353]
[208.28775024 526.89764404]
[208.28775024 541.89764404]
[208.28775024 556.89764404]
[208.28775024 571.89764404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 126]
[12 125]
[14 122]
[15 121]
[16 120]
[23 114]
[24 113]
[25 112]
[27 110]
[28 109]
[30 108]
[31 107]
[32 106]
[33 105]
[34 104]
[35 103]
[36 102]
[39 88]
[40 87]
[41 86]
[42 85]
[43 84]
[89 101]
[90 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
