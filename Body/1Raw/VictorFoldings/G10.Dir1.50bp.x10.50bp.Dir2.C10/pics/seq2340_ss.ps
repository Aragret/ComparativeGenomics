%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAGUAGGCCUAAAAGCAGCCACCAAUUAAGAAAGCGUUCAAGCUCAACACCCACUACCUAxxxxxxxxxxAGACCCACAACAAAUAGCCCUUCUAAACGCUAAUCCAAGCCUCACCCCACUACUAGGCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[151.17617798 344.19519043]
[149.92930603 329.24710083]
[148.68243408 314.29901123]
[147.43556213 299.35092163]
[146.18867493 284.40283203]
[144.94180298 269.45474243]
[141.84349060 254.77822876]
[136.94194031 240.60166931]
[132.04039001 226.42510986]
[127.13883209 212.24855042]
[122.23728180 198.07199097]
[117.04554749 192.74362183]
[117.38456726 183.54922485]
[112.30480194 178.11401367]
[112.83502960 168.92864990]
[108.52744293 154.56047058]
[104.21985626 140.19229126]
[99.91226959 125.82410431]
[88.58826447 123.16601562]
[79.57946014 115.80802155]
[65.56275177 121.14953613]
[51.54603577 126.49105072]
[50.75424576 141.69937134]
[43.83934021 155.26786804]
[31.99937630 164.84570312]
[17.28569221 168.77348328]
[2.24752688 166.37068176]
[-10.50966740 158.05358887]
[-18.77563095 145.26321411]
[-21.11823463 130.21556091]
[-17.13160706 115.51770782]
[-7.50645781 103.71617126]
[6.08959961 96.85562134]
[21.30096436 96.12469482]
[35.49217606 101.65003204]
[46.20452499 112.47433472]
[60.22123718 107.13282776]
[74.23795319 101.79131317]
[79.36326599 84.47526550]
[94.58007050 74.75091553]
[95.82695007 59.80282593]
[87.58155060 43.37135315]
[98.06860352 29.33491325]
[99.00423431 14.36412144]
[99.93986511 -0.60666972]
[100.87548828 -15.57746124]
[101.81111908 -30.54825211]
[102.74674988 -45.51904297]
[87.94590759 -48.04235840]
[73.49713135 -52.12463760]
[59.56413651 -57.71962357]
[46.30480194 -64.76392365]
[33.86936188 -73.17771912]
[22.39871979 -82.86566925]
[12.02284622 -93.71800995]
[2.85930753 -105.61177826]
[-4.98806620 -118.41220093]
[-11.43035793 -131.97424316]
[-16.39457130 -146.14422607]
[-19.82445908 -160.76162720]
[-21.68115616 -175.66076660]
[-21.94362640 -190.67288208]
[-20.60889435 -205.62782288]
[-17.69208336 -220.35617065]
[-13.22624683 -234.69104004]
[-7.26198149 -248.47000122]
[0.13313040 -261.53692627]
[8.87529755 -273.74374390]
[18.86546326 -284.95217896]
[29.99043274 -295.03518677]
[42.12415314 -303.87854004]
[55.12913513 -311.38204956]
[68.85802460 -317.46066284]
[83.15526581 -322.04553223]
[97.85885620 -325.08468628]
[112.80219269 -326.54373169]
[127.81595612 -326.40609741]
[142.73002625 -324.67333984]
[157.37542725 -321.36508179]
[171.58621216 -316.51885986]
[185.20133972 -310.18957520]
[198.06657410 -302.44888306]
[210.03611755 -293.38455200]
[220.97434998 -283.09927368]
[230.75733948 -271.70956421]
[239.27424622 -259.34451294]
[246.42854309 -246.14421082]
[252.13917542 -232.25822449]
[256.34146118 -217.84388733]
[258.98773193 -203.06454468]
[260.04806519 -188.08763123]
[259.51040649 -173.08287048]
[257.38085938 -158.22026062]
[253.68354797 -143.66821289]
[248.46037292 -129.59161377]
[241.77052307 -116.14996338]
[233.68977356 -103.49556732]
[224.30972290 -91.77180481]
[213.73661804 -81.11151886]
[202.09028625 -71.63549805]
[189.50268555 -63.45111084]
[176.11642456 -56.65109634]
[162.08319092 -51.31249619]
[147.56199646 -47.49581146]
[132.71739197 -45.24427795]
[117.71753693 -44.58341599]
[116.78191376 -29.61262512]
[115.84628296 -14.64183235]
[114.91065216 0.32895875]
[113.97502899 15.29975033]
[113.03939819 30.27054214]
[120.82219696 39.58372116]
[120.12437439 52.10298538]
[110.77503204 61.04970169]
[109.52816010 75.99778748]
[120.58222961 84.40307617]
[125.68464661 97.31844330]
[123.35999298 111.00921631]
[114.28045654 121.51651764]
[118.58804321 135.88470459]
[122.89562225 150.25288391]
[127.20320892 164.62106323]
[131.66001892 178.94366455]
[136.41383362 193.17044067]
[141.31538391 207.34700012]
[146.21694946 221.52355957]
[151.11849976 235.70011902]
[156.02005005 249.87667847]
[160.29344177 235.49829102]
[170.29281616 224.31739807]
[184.10670471 218.47134399]
[199.09445190 219.07765198]
[212.39099121 226.02043152]
[221.45454407 237.97248840]
[224.55255127 252.64907837]
[221.09278870 267.24462891]
[211.73661804 278.96905518]
[198.27255249 285.58111572]
[183.27441406 285.81683350]
[169.60920715 279.63116455]
[159.88989258 268.20788574]
[161.13676453 283.15597534]
[162.38363647 298.10406494]
[163.63052368 313.05215454]
[164.87739563 328.00024414]
[166.12426758 342.94830322]
[177.39414978 354.36624146]
[175.35092163 370.27865601]
[161.56195068 378.47891235]
[146.60498047 372.67645264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 146]
[2 145]
[3 144]
[4 143]
[5 142]
[6 141]
[7 128]
[8 127]
[9 126]
[10 125]
[11 124]
[13 123]
[15 122]
[16 121]
[17 120]
[18 119]
[20 38]
[21 37]
[22 36]
[40 115]
[41 114]
[43 111]
[44 110]
[45 109]
[46 108]
[47 107]
[48 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
