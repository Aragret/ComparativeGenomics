%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUCUUCGAAUUUGCAAUUCAAUAUGAAAAUCACCUCGGAGCUGGUAAAAAGAGGCCUAACxxxxxxxxxxUCAUAGAAUUCUCACUGUGAUAUAUAAACUCAGACCCAAACAUUAAUCAGUUCUUCAAAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[113.21895599 263.85592651]
[113.21895599 248.85592651]
[113.21895599 233.85592651]
[113.21895599 218.85592651]
[113.21895599 203.85592651]
[113.21895599 188.85592651]
[113.21895599 173.85592651]
[113.21895599 158.85592651]
[113.21895599 143.85592651]
[113.21895599 128.85592651]
[107.27276611 124.28505707]
[95.38038635 115.14331818]
[89.43419647 110.57244873]
[74.93859863 114.42961121]
[60.44300079 118.28677368]
[45.94740295 122.14392853]
[31.45180702 126.00109100]
[16.95621109 129.85824585]
[2.63361311 134.31506348]
[-11.49118996 139.36381531]
[-25.61599350 144.41258240]
[-39.74079514 149.46133423]
[-50.13152695 161.39210510]
[-64.72045898 158.39004517]
[-78.84526062 163.43879700]
[-83.07907867 178.36711121]
[-95.29972839 187.92929077]
[-110.80811310 188.44850159]
[-123.64094543 179.72508240]
[-128.86373901 165.11337280]
[-124.46823120 150.23187256]
[-112.14456940 140.80282593]
[-96.63146210 140.45187378]
[-83.89402008 149.31399536]
[-69.76921082 144.26524353]
[-60.38878250 132.69558716]
[-44.78955078 135.33653259]
[-30.66474915 130.28778076]
[-16.53994560 125.23902130]
[-2.41514325 120.19026184]
[-1.09961200 117.64532471]
[1.33597994 115.48619080]
[4.74314117 114.15459442]
[8.81192017 114.02774048]
[13.09905052 115.36265564]
[27.59464836 111.50549316]
[42.09024429 107.64833069]
[56.58584213 103.79117584]
[71.08143616 99.93401337]
[85.57703400 96.07685852]
[97.92860413 87.56576538]
[106.69481659 75.39392853]
[115.46102142 63.22209167]
[104.04785919 53.47533035]
[93.47856903 42.81936264]
[83.82535553 31.32698059]
[75.15414429 19.07668686]
[67.52418518 6.15216684]
[60.98758698 -7.35829067]
[55.58901215 -21.36239433]
[51.36533356 -35.76448059]
[48.34540558 -50.46616745]
[46.54985428 -65.36701965]
[45.99095154 -80.36526489]
[46.67251205 -95.35842896]
[48.58987808 -110.24410248]
[51.72995377 -124.92059326]
[56.07128906 -139.28764343]
[61.58422852 -153.24713135]
[68.23110962 -166.70367432]
[75.96652985 -179.56535339]
[84.73764801 -191.74430847]
[94.48454285 -203.15734863]
[105.14064026 -213.72651672]
[116.63313293 -223.37959290]
[128.88352966 -232.05065918]
[141.80813599 -239.68046570]
[155.31867981 -246.21690369]
[169.32284546 -251.61531067]
[183.72497559 -255.83882141]
[198.42671204 -258.85858154]
[213.32757568 -260.65393066]
[228.32582092 -261.21267700]
[243.31898499 -260.53091431]
[258.20462036 -258.61337280]
[272.88110352 -255.47312927]
[287.24810791 -251.13162231]
[301.20751953 -245.61851501]
[314.66397095 -238.97148132]
[327.52557373 -231.23590088]
[339.70440674 -222.46464539]
[351.11734009 -212.71760559]
[361.68637085 -202.06138611]
[371.33932495 -190.56877136]
[380.01022339 -178.31828308]
[387.63989258 -165.39356995]
[394.17617798 -151.88296509]
[399.57440186 -137.87873840]
[403.79772949 -123.47654724]
[406.81732178 -108.77478790]
[408.61251831 -93.87388611]
[409.17105103 -78.87563324]
[408.48913574 -63.88248444]
[406.57141113 -48.99686050]
[403.43099976 -34.32044220]
[399.08932495 -19.95348740]
[393.57604980 -5.99413967]
[386.92883301 7.46224260]
[379.19311523 20.32373810]
[370.42172241 32.50248718]
[360.67453003 43.91529846]
[350.01818848 54.48420715]
[338.52548218 64.13701630]
[326.27487183 72.80778503]
[313.35006714 80.43728638]
[299.83938599 86.97339630]
[285.83508301 92.37147522]
[271.43286133 96.59463501]
[256.73104858 99.61404419]
[241.83013916 101.40905762]
[226.83187866 101.96742249]
[211.83872986 101.28533173]
[196.95312500 99.36743164]
[182.27674866 96.22682953]
[167.90985107 91.88497925]
[153.95056152 86.37154388]
[140.49426270 79.72418213]
[127.63285828 71.98829651]
[118.86665344 84.16013336]
[110.10044098 96.33197021]
[123.62900543 89.85292816]
[136.36970520 81.93620300]
[151.32194519 80.74007416]
[165.15917969 86.53063965]
[174.80297852 98.01963806]
[178.10781860 112.65104675]
[174.33843994 127.16971588]
[164.33345032 138.34559631]
[150.31872559 143.69230652]
[135.41033936 142.01965332]
[128.21894836 128.85592651]
[128.21894836 143.85592651]
[128.21894836 158.85592651]
[128.21894836 173.85592651]
[128.21894836 188.85592651]
[128.21894836 203.85592651]
[128.21894836 218.85592651]
[128.21894836 233.85592651]
[128.21894836 248.85592651]
[128.21894836 263.85592651]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[13 50]
[14 49]
[15 48]
[16 47]
[17 46]
[18 45]
[19 40]
[20 39]
[21 38]
[22 37]
[24 35]
[25 34]
[51 130]
[52 129]
[53 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
