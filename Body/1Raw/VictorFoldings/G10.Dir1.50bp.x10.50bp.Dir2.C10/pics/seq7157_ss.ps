%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAUCAUAUUCAUCGGCGUAAAUCUAACUUUCUUCCCACAACACUUUCUCGGCCUAUCCGGAxxxxxxxxxxAUUGGAAGCGCCACCCUAGCAAUAUCAACCAUUAACCUUCCCUCUACACUUAUCAUCUUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[249.76033020 441.97085571]
[249.76033020 426.97085571]
[249.76033020 411.97085571]
[249.76033020 396.97085571]
[249.76033020 381.97085571]
[249.76033020 366.97085571]
[249.76033020 351.97085571]
[249.76033020 336.97085571]
[249.76033020 321.97085571]
[249.76033020 306.97085571]
[245.65538025 292.54348755]
[237.75889587 279.79022217]
[229.34548950 267.37191772]
[212.91600037 261.27957153]
[210.91917419 243.00273132]
[201.75724792 231.12590027]
[192.59530640 219.24908447]
[183.43336487 207.37225342]
[174.27143860 195.49543762]
[155.78643799 199.05915833]
[137.95172119 192.78457642]
[125.66539764 178.30839539]
[122.34535217 159.53157043]
[128.97871399 141.56820679]
[118.87328339 130.48306274]
[108.76784515 119.39793396]
[98.66240692 108.31279755]
[92.88861847 116.06676483]
[83.32628632 120.88023376]
[68.50380707 123.18111420]
[53.68132019 125.48198700]
[44.55594254 138.38558960]
[28.96519279 140.97482300]
[16.15878868 131.71351624]
[13.73454285 116.09626770]
[23.13071632 103.38849640]
[38.77272797 101.12950134]
[51.38044739 110.65950775]
[66.20292664 108.35862732]
[81.02541351 106.05775452]
[87.84898376 92.69965363]
[81.02541351 79.34155273]
[74.20183563 65.98345947]
[67.37825775 52.62535858]
[60.55468369 39.26725769]
[45.27521896 43.47603607]
[29.46196365 44.44774246]
[13.79292488 42.14296722]
[-1.06053412 36.66272736]
[-14.46246338 28.24404907]
[-25.83955383 17.24971771]
[-34.70565796 4.15264082]
[-40.68256760 -10.48448753]
[-43.51615143 -26.03336716]
[-43.08713913 -41.82705688]
[-39.41616821 -57.18858719]
[-32.66278839 -71.45997620]
[-23.11851692 -84.03040314]
[-11.19428349 -94.36236572]
[-18.56052399 -107.42906189]
[-25.92676353 -120.49575806]
[-40.93113708 -126.17450714]
[-45.70903015 -141.48957825]
[-36.59524536 -154.69255066]
[-20.58110046 -155.65524292]
[-9.95127869 -143.63914490]
[-12.86006737 -127.86199188]
[-5.49382830 -114.79529572]
[1.87241113 -101.72860718]
[15.33842945 -106.23657227]
[29.41129112 -108.16835022]
[43.60250854 -107.45529175]
[57.41918564 -104.12055969]
[70.38114166 -98.27841187]
[82.03759003 -90.13027191]
[91.98283386 -79.95780945]
[99.87036133 -68.11315918]
[105.42494965 -55.00675964]
[108.45223236 -41.09314346]
[108.84552765 -26.85514259]
[106.58959198 -12.78715420]
[101.76119232 0.62203252]
[94.52650452 12.90622139]
[85.13539124 23.63801384]
[73.91278076 32.44368362]
[80.73635864 45.80178070]
[87.55993652 59.15988159]
[94.38350677 72.51798248]
[101.20708466 85.87608337]
[109.74754333 98.20736694]
[119.85298157 109.29249573]
[129.95841980 120.37763214]
[140.06384277 131.46276855]
[150.68881226 127.34107208]
[162.03935242 126.68137360]
[173.01855469 129.53099060]
[182.57040405 135.59890747]
[189.78141785 144.28536987]
[193.96794128 154.74116516]
[194.74098206 165.95060730]
[192.04225159 176.83024597]
[186.14825439 186.33349609]
[195.31019592 198.21032715]
[204.47213745 210.08714294]
[213.63406372 221.96397400]
[222.79600525 233.84078979]
[235.50279236 236.27824402]
[242.88529968 246.41085815]
[241.40792847 258.45574951]
[245.58378601 260.08728027]
[248.67948914 262.72167969]
[250.50984192 265.88342285]
[251.06785583 269.08621216]
[250.51216125 271.89373779]
[258.40863037 284.64700317]
[258.31930542 269.64724731]
[261.39724731 254.96644592]
[267.50384521 241.26573181]
[276.36404419 229.16217041]
[287.57888794 219.20085144]
[300.64321899 211.83041382]
[314.96865845 207.38281250]
[329.91009521 206.05834961]
[344.79452515 207.91665649]
[358.95166016 212.87406921]
[371.74386597 220.70729065]
[382.59500122 231.06355286]
[391.01641846 243.47644043]
[396.62881470 257.38690186]
[399.17941284 272.16845703]
[398.55334473 287.15539551]
[394.77883911 301.67272949]
[388.02581787 315.06665039]
[378.59848022 326.73391724]
[366.92138672 336.14907837]
[353.52044678 342.88812256]
[338.99917603 346.64752197]
[324.01159668 347.25796509]
[309.23272705 344.69195557]
[295.32812500 339.06506348]
[282.92401123 330.63073730]
[272.57907104 319.76876831]
[264.76031494 306.97085571]
[264.76031494 321.97085571]
[264.76031494 336.97085571]
[264.76031494 351.97085571]
[264.76031494 366.97085571]
[264.76031494 381.97085571]
[264.76031494 396.97085571]
[264.76031494 411.97085571]
[264.76031494 426.97085571]
[264.76031494 441.97085571]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 115]
[12 114]
[13 109]
[15 106]
[16 105]
[17 104]
[18 103]
[19 102]
[24 93]
[25 92]
[26 91]
[27 90]
[29 40]
[30 39]
[31 38]
[41 89]
[42 88]
[43 87]
[44 86]
[45 85]
[59 69]
[60 68]
[61 67]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
