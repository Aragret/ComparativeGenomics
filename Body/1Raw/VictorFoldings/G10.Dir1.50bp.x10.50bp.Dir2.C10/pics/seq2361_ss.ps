%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGCCACCAAUUAAGAAAGCGUUCAAGCUCAACACCCACUACCUAAAAAAUCCCAAACAUAUxxxxxxxxxxACCUAACCAUCUUCUCCUUACACCUAGCAGGUGUCUCCUCUAUCUUAGGGGCCAUCAAUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.24272919 384.05358887]
[94.83372498 364.84585571]
[95.14578247 349.84909058]
[95.45783997 334.85235596]
[95.76989746 319.85559082]
[96.08194733 304.85882568]
[96.39400482 289.86209106]
[96.70606232 274.86532593]
[97.01811981 259.86859131]
[97.33017731 244.87182617]
[97.64223480 229.87507629]
[96.23992920 214.94076538]
[93.14160919 200.26423645]
[83.73044586 211.94456482]
[68.83833313 213.74037170]
[56.92031860 204.63208008]
[54.74290848 189.79096985]
[63.54233170 177.64311218]
[78.32268524 175.08554077]
[90.69320679 183.57157898]
[89.44633484 168.62350464]
[88.19945526 153.67541504]
[86.95258331 138.72732544]
[85.70571136 123.77923584]
[83.09999084 92.14609528]
[75.11007690 79.45117188]
[67.12015533 66.75624084]
[53.76012421 73.59780884]
[39.84770584 79.23183441]
[25.49179077 83.61421967]
[10.80473423 86.71067047]
[-4.09851551 88.49694824]
[-19.10131836 88.95906830]
[-34.08625412 88.09342194]
[-48.93604279 85.90677643]
[-63.53446198 82.41625214]
[-77.76725769 77.64916992]
[-91.52304077 71.64282990]
[-104.69414520 64.44424438]
[-117.17749023 56.10975266]
[-128.87538147 46.70458984]
[-139.69624329 36.30236053]
[-149.55541992 24.98448181]
[-158.37571716 12.83952808]
[-166.08811951 -0.03744525]
[-172.63226318 -13.54565716]
[-177.95693970 -27.57938576]
[-182.02044678 -42.02879715]
[-184.79101562 -56.78079987]
[-186.24693298 -71.71994019]
[-186.37683105 -86.72929382]
[-185.17967224 -101.69139862]
[-182.66484070 -116.48913574]
[-178.85200500 -131.00671387]
[-173.77101135 -145.13049316]
[-167.46163940 -158.74993896]
[-159.97325134 -171.75846863]
[-151.36445618 -184.05424500]
[-141.70265198 -195.54107666]
[-131.06343079 -206.12901306]
[-119.53006744 -215.73522949]
[-107.19284058 -224.28451538]
[-94.14829254 -231.70997620]
[-80.49851990 -237.95347595]
[-66.35036469 -242.96618652]
[-51.81454086 -246.70883179]
[-37.00481796 -249.15216064]
[-22.03710938 -250.27702332]
[-7.02855730 -250.07461548]
[7.90337515 -248.54653931]
[22.64182281 -245.70474243]
[37.07143402 -241.57147217]
[51.07927704 -236.17907715]
[64.55571747 -229.56974792]
[77.39527893 -221.79522705]
[89.49748230 -212.91635132]
[100.76760101 -203.00262451]
[111.11743927 -192.13163757]
[120.46598053 -180.38844299]
[128.74006653 -167.86499023]
[135.87493896 -154.65925598]
[141.81475830 -140.87461853]
[146.51303101 -126.61895752]
[149.93298340 -112.00384521]
[152.04786682 -97.14366913]
[152.84111023 -82.15472412]
[152.30651855 -67.15433502]
[150.44827271 -52.25988770]
[147.28091431 -37.58795929]
[142.82922363 -23.25338173]
[137.12805176 -9.36834431]
[130.22201538 3.95848417]
[122.16517639 16.62279892]
[113.02057648 28.52548409]
[102.85978699 39.57338333]
[91.76234436 49.68003082]
[79.81508636 58.76632309]
[87.80500793 71.46125031]
[95.79492188 84.15618134]
[109.75531006 89.64321136]
[124.25090790 85.78605652]
[138.74650574 81.92889404]
[153.24209595 78.07173920]
[167.73770142 74.21457672]
[182.23329163 70.35741425]
[195.98503113 60.44145966]
[209.32032776 70.91075897]
[202.95175171 86.62309265]
[186.09045410 84.85301208]
[171.59486389 88.71017456]
[157.09925842 92.56732941]
[142.60366821 96.42449188]
[128.10806274 100.28165436]
[113.61247253 104.13880920]
[128.30712891 101.12763977]
[142.15467834 106.89350128]
[150.36981201 119.44386292]
[150.11358643 134.44168091]
[141.47456360 146.70410156]
[127.43812561 151.99359131]
[112.85490417 148.48223877]
[102.76445007 137.38346863]
[100.65379333 122.53236389]
[101.90067291 137.48045349]
[103.14754486 152.42854309]
[104.39441681 167.37661743]
[105.64129639 182.32470703]
[107.81813049 197.16590881]
[110.91645050 211.84243774]
[117.26186371 198.25068665]
[129.11857605 189.06274414]
[143.86399841 186.31088257]
[158.23655701 190.60380554]
[169.05720520 200.99195862]
[173.93249512 215.17756653]
[171.78407288 230.02291870]
[163.08712769 242.24433899]
[149.76536560 249.13858032]
[134.76542664 249.18069458]
[121.40515900 242.36135864]
[112.63898468 230.18713379]
[112.32692719 245.18388367]
[112.01486969 260.18063354]
[111.70281982 275.17739868]
[111.39076233 290.17413330]
[111.07870483 305.17089844]
[110.76664734 320.16766357]
[110.45458984 335.16439819]
[110.14253235 350.16116333]
[109.83048248 365.15789795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[11 141]
[12 129]
[13 128]
[20 127]
[21 126]
[22 125]
[23 124]
[24 123]
[25 99]
[26 98]
[27 97]
[100 114]
[101 113]
[102 112]
[103 111]
[104 110]
[105 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
