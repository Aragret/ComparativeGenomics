%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUUUUUCUUCGCAGGAUUUUUCUGAGCCUUUUACCACUCCAGCCUAGCCCCUACCCCCCAxxxxxxxxxxUCCAUCAUCACCUCAACCCAAAAAGGCAUAAUUAAACUUUACUUCCUCUCUUUCUUCUUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[95.03208160 425.45239258]
[95.03208160 410.45239258]
[95.03208160 395.45239258]
[95.03208160 380.45239258]
[95.03208160 365.45239258]
[95.03208160 350.45239258]
[95.03208160 335.45239258]
[95.03208160 320.45239258]
[95.03208160 305.45239258]
[95.03208160 290.45239258]
[79.97370148 287.11154175]
[66.02337646 280.51461792]
[53.87574768 270.98672485]
[44.13643646 258.99899292]
[37.29187012 245.14521790]
[33.68497849 230.11259460]
[33.49802017 214.64747620]
[36.74335861 199.51843262]
[43.26272202 185.47802734]
[52.73489380 173.22534180]
[64.69155884 163.37120056]
[78.54043579 156.40774536]
[93.59463501 152.68377686]
[93.28257751 137.68702698]
[92.97052002 122.69026947]
[92.65846252 107.69351196]
[91.25616455 92.75920105]
[88.77104187 77.96649933]
[86.28592682 63.17378998]
[71.51280212 59.70526886]
[59.22624207 50.86878586]
[51.28033447 38.03616333]
[48.85943222 23.17928505]
[52.30171204 8.56711388]
[61.05231094 -3.58082557]
[73.75251007 -11.43157673]
[71.26738739 -26.22428322]
[68.78227234 -41.01699066]
[66.29714966 -55.80969620]
[63.81203079 -70.60240173]
[61.32691193 -85.39511108]
[58.84179688 -100.18782043]
[43.85651016 -99.26100922]
[28.85644150 -99.90569305]
[14.00593472 -102.11479950]
[-0.53229862 -105.86413574]
[-14.59896946 -111.11260986]
[-28.03995514 -117.80271912]
[-40.70799255 -125.86116791]
[-52.46427917 -135.19966125]
[-63.18000412 -145.71588135]
[-72.73777008 -157.29460144]
[-81.03284454 -169.80897522]
[-87.97435760 -183.12187195]
[-93.48623657 -197.08743286]
[-97.50810242 -211.55264282]
[-99.99588776 -226.35900879]
[-100.92233276 -241.34431458]
[-100.27729034 -256.34436035]
[-98.06781769 -271.19482422]
[-94.31813049 -285.73297119]
[-89.06932068 -299.79949951]
[-82.37888336 -313.24032593]
[-74.32012177 -325.90817261]
[-64.98134613 -337.66421509]
[-54.46486664 -348.37969971]
[-42.88591003 -357.93719482]
[-30.37133980 -366.23196411]
[-17.05827713 -373.17315674]
[-3.09258270 -378.68469238]
[11.37272453 -382.70620728]
[26.17915726 -385.19363403]
[41.16448593 -386.11972046]
[56.16452408 -385.47430420]
[71.01492310 -383.26446533]
[85.55297852 -379.51443481]
[99.61939240 -374.26525879]
[113.06005096 -367.57449341]
[125.72769928 -359.51544189]
[137.48353577 -350.17639160]
[148.19874573 -339.65963745]
[157.75595093 -328.08044434]
[166.05041504 -315.56567383]
[172.99127197 -302.25244141]
[178.50248718 -288.28662109]
[182.52365112 -273.82122803]
[185.01071167 -259.01470947]
[185.93643188 -244.02937317]
[185.29064941 -229.02934265]
[183.08045959 -214.17900085]
[179.33007812 -199.64103699]
[174.08056641 -185.57475281]
[167.38948059 -172.13426208]
[159.33010864 -159.46681213]
[149.99075317 -147.71119690]
[139.47375488 -136.99624634]
[127.89434052 -127.43932343]
[115.37936401 -119.14515686]
[102.06596375 -112.20461273]
[88.10000610 -106.69374847]
[73.63449860 -102.67293549]
[76.11962128 -87.88023376]
[78.60473633 -73.08752441]
[81.08985901 -58.29481506]
[83.57497406 -43.50210953]
[86.06009674 -28.70940208]
[88.54521179 -13.91669464]
[103.11360931 -10.64696407]
[115.35341644 -2.02533293]
[123.38154602 10.65985394]
[125.94832611 25.49222565]
[122.63193512 40.21686935]
[113.90735626 52.58314514]
[101.07862854 60.68867111]
[103.56375122 75.48137665]
[106.04886627 90.27408600]
[115.07107544 78.29077911]
[129.64476013 74.74004364]
[143.16790771 81.23040009]
[149.51437378 94.82165527]
[145.80917358 109.35683441]
[133.73078918 118.25136566]
[118.75084686 117.47592926]
[107.65522003 107.38145447]
[107.96727753 122.37821198]
[108.27932739 137.37496948]
[108.59138489 152.37171936]
[122.92650604 155.19369507]
[136.35046387 160.94511414]
[148.27212524 169.36994934]
[158.16708374 180.09449768]
[165.60075378 192.64396667]
[170.24742126 206.46353149]
[171.90451050 220.94276428]
[170.50144958 235.44270325]
[166.10267639 249.32400513]
[158.90463257 261.97512817]
[149.22703552 272.83929443]
[137.49867249 281.43893433]
[124.23836517 287.39682007]
[110.03208160 290.45239258]
[110.03208160 305.45239258]
[110.03208160 320.45239258]
[110.03208160 335.45239258]
[110.03208160 350.45239258]
[110.03208160 365.45239258]
[110.03208160 380.45239258]
[110.03208160 395.45239258]
[110.03208160 410.45239258]
[110.03208160 425.45239258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[23 127]
[24 126]
[25 125]
[26 124]
[27 116]
[28 115]
[29 114]
[36 107]
[37 106]
[38 105]
[39 104]
[40 103]
[41 102]
[42 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
