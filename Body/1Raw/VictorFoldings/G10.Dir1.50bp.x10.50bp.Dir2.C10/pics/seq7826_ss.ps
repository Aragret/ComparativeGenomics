%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUGUCCCCACAUUAGGCUUAAAAACAGAUGCAAUUCCCGGACGUCUAAACCAAACCACUUxxxxxxxxxxAUAAUAGUUACAAUCGGCAUCAACCAACCACACCUAGCAUUCCUGCACAUCUGUACCCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[74.84997559 265.38104248]
[74.84997559 250.38102722]
[74.84997559 235.38102722]
[74.84997559 220.38102722]
[74.84997559 205.38102722]
[74.84997559 190.38102722]
[74.84997559 175.38102722]
[74.84997559 160.38102722]
[74.84997559 145.38102722]
[74.84997559 130.38102722]
[67.78757477 127.85665131]
[46.60036469 120.28351593]
[37.09200668 131.88485718]
[27.58364868 143.48619080]
[25.45818710 159.74702454]
[10.21145153 165.78599548]
[-2.47202206 155.39071655]
[0.45543617 139.25498962]
[15.98230839 133.97784424]
[25.49066734 122.37649536]
[34.99902344 110.77515411]
[65.49481964 84.34767151]
[94.78987885 91.59283447]
[91.08371735 77.05789948]
[87.37755585 62.52296448]
[83.67139435 47.98802948]
[68.04943848 47.85305023]
[53.00152588 43.69646835]
[39.54435349 35.80505753]
[28.58559036 24.71773148]
[20.86268044 11.18874264]
[16.89321136 -3.86363435]
[16.94023323 -19.41942596]
[20.99483299 -34.42607117]
[28.77712059 -47.86965179]
[39.75555038 -58.84337997]
[53.18322372 -66.60877991]
[49.17548370 -81.06346893]
[45.16774368 -95.51815796]
[41.15999985 -109.97284698]
[37.15225983 -124.42753601]
[22.32931519 -122.03098297]
[7.33269310 -121.27964783]
[-7.65556097 -122.18265533]
[-22.45350266 -124.72904205]
[-36.88150024 -128.88790894]
[-50.76440811 -134.60874939]
[-63.93370438 -141.82212830]
[-76.22952271 -150.44047546]
[-87.50260162 -160.35919189]
[-97.61610413 -171.45785522]
[-106.44725037 -183.60174561]
[-113.88884735 -196.64343262]
[-119.85055542 -210.42462158]
[-124.26000977 -224.77801514]
[-127.06368256 -239.52938843]
[-128.22753906 -254.49963379]
[-127.73744202 -269.50708008]
[-125.59935760 -284.36950684]
[-121.83922577 -298.90649414]
[-116.50270081 -312.94161987]
[-109.65455627 -326.30450439]
[-101.37792969 -338.83288574]
[-91.77328491 -350.37472534]
[-80.95721436 -360.78988647]
[-69.06101990 -369.95196533]
[-56.22910690 -377.74975586]
[-42.61724472 -384.08856201]
[-28.39066505 -388.89141846]
[-13.72207069 -392.10009766]
[1.21047831 -393.67556763]
[16.22571373 -393.59878540]
[31.14136505 -391.87060547]
[45.77636719 -388.51205444]
[59.95306778 -383.56390381]
[73.49937439 -377.08618164]
[86.25084686 -369.15756226]
[98.05268860 -359.87423706]
[108.76165009 -349.34896851]
[118.24771881 -337.70947266]
[126.39575195 -325.09707642]
[133.10682678 -311.66485596]
[138.29949951 -297.57586670]
[141.91072083 -283.00115967]
[143.89665222 -268.11764526]
[144.23320007 -253.10598755]
[142.91625977 -238.14840698]
[139.96183777 -223.42649841]
[135.40577698 -209.11897278]
[129.30340576 -195.39949036]
[121.72877502 -182.43460083]
[112.77385712 -170.38169861]
[102.54735565 -159.38706970]
[91.17339325 -149.58419800]
[78.79005432 -141.09208679]
[65.54765320 -134.01379395]
[51.60694885 -128.43527222]
[55.61468887 -113.98059082]
[59.62242889 -99.52590179]
[63.63016891 -85.07121277]
[67.63790894 -70.61652374]
[82.06322479 -70.98754120]
[96.16452026 -67.88040924]
[109.11501312 -61.47265244]
[120.15426636 -52.13543701]
[128.63284302 -40.41210556]
[134.05053711 -26.98654175]
[136.08583069 -12.64327717]
[134.61503601 1.77834165]
[129.71974182 15.43328190]
[121.68237305 27.52033615]
[110.96980286 37.32912827]
[98.20632935 44.28186798]
[101.91249084 58.81680298]
[105.61865234 73.35173798]
[109.32481384 87.88668060]
[119.42346191 98.97798920]
[133.54826355 104.02674866]
[147.67306519 109.07550812]
[163.70053101 105.60382843]
[174.51895142 117.92835236]
[168.99926758 133.37066650]
[152.81965637 136.04504395]
[142.62431335 123.20030975]
[128.49951172 118.15155029]
[114.37471008 113.10279846]
[108.24352264 117.42235565]
[118.21870422 128.62484741]
[128.19387817 139.82733154]
[138.16905212 151.02983093]
[152.12113953 156.53797913]
[159.01467896 169.86009216]
[155.45252991 184.43099976]
[143.19012451 193.07006836]
[128.27044678 191.51992798]
[118.04595947 180.54449463]
[117.55530548 165.55268860]
[110.36392212 152.38894653]
[103.17253876 139.22520447]
[95.98115540 126.06147003]
[89.84997559 130.38102722]
[89.84997559 145.38102722]
[89.84997559 160.38102722]
[89.84997559 175.38102722]
[89.84997559 190.38102722]
[89.84997559 205.38102722]
[89.84997559 220.38102722]
[89.84997559 235.38102722]
[89.84997559 250.38102722]
[89.84997559 265.38104248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 21]
[13 20]
[14 19]
[23 116]
[24 115]
[25 114]
[26 113]
[37 101]
[38 100]
[39 99]
[40 98]
[41 97]
[117 126]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
