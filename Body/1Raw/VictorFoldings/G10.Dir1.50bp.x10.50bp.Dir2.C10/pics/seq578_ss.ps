%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUCCCACUCCCAUACUACUAAUCUCAUCAAUACAACCCCCGCCCAUCCUACCCAGCACACxxxxxxxxxxGGGGCCCUCUCAGCCCUCCUAAUGACCUCCGGCCUAGCCAUGUGAUUUCACUUCCACUCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-67.02847290 184.13586426]
[-80.68471527 190.34127808]
[-94.34095764 196.54667664]
[-103.70397949 209.29989624]
[-118.49196625 207.52091980]
[-132.14820862 213.72633362]
[-145.80445862 219.93173218]
[-159.46069336 226.13714600]
[-173.11692810 232.34254456]
[-169.23222351 246.86697388]
[-167.79129028 261.83273315]
[-168.83345032 276.83151245]
[-172.33026123 291.45416260]
[-178.18632507 305.30178833]
[-186.24189758 317.99658203]
[-196.27720642 329.19219971]
[-208.01849365 338.58328247]
[-221.14543152 345.91360474]
[-235.29991150 350.98315430]
[-250.09579468 353.65368652]
[-265.12942505 353.85229492]
[-279.99072266 351.57360840]
[-294.27416992 346.87976074]
[-307.59020996 339.89880371]
[-319.57546997 330.82122803]
[-329.90307617 319.89462280]
[-338.29122925 307.41708374]
[-344.51107788 293.72900391]
[-348.39300537 279.20382690]
[-349.83102417 264.23782349]
[-348.78598022 249.23922729]
[-345.28637695 234.61723328]
[-339.42764282 220.77075195]
[-331.36962891 208.07751465]
[-321.33215332 196.88380432]
[-309.58905029 187.49499512]
[-296.46072388 180.16722107]
[-282.30526733 175.10038757]
[-267.50885010 172.43270874]
[-252.47517395 172.23698425]
[-237.61433411 174.51853943]
[-223.33177185 179.21513367]
[-210.01710510 186.19865417]
[-198.03356934 195.27854919]
[-187.70808411 206.20715332]
[-179.32234192 218.68630981]
[-165.66610718 212.48089600]
[-152.00985718 206.27549744]
[-138.35362244 200.07008362]
[-124.69737244 193.86468506]
[-116.31113434 181.55532837]
[-100.54636383 182.89044189]
[-86.89012146 176.68502808]
[-73.23387909 170.47962952]
[-78.78683472 154.88737488]
[-82.93946838 138.86521912]
[-85.65927124 122.53866577]
[-86.92492676 106.03557587]
[-86.72652435 89.48522186]
[-85.06562042 73.01721954]
[-81.95523071 56.76055527]
[-77.41970825 40.84255600]
[-71.49457550 25.38789368]
[-64.22624207 10.51762009]
[-55.67164230 -3.65180016]
[-45.89776993 -17.00938606]
[-34.98117828 -29.45051956]
[-23.00737381 -40.87775421]
[-10.07013607 -51.20158768]
[3.72920561 -60.34116745]
[18.28256989 -68.22489929]
[33.47597122 -74.79104614]
[49.19041061 -79.98816681]
[65.30280304 -83.77557373]
[81.68695831 -86.12358093]
[98.21455383 -87.01381683]
[114.75612640 -86.43930054]
[131.18211365 -84.40453339]
[147.36389160 -80.92544556]
[163.17469788 -76.02929688]
[178.49069214 -69.75443268]
[193.19192505 -62.14999771]
[201.18183899 -74.84492493]
[209.17175293 -87.53985596]
[217.16166687 -100.23478699]
[212.20561218 -115.06622314]
[217.99057007 -129.59440613]
[231.78507996 -136.95957947]
[247.07577515 -133.68412781]
[256.64288330 -121.31462097]
[255.96907043 -105.69155884]
[245.37252808 -94.19168091]
[229.85659790 -92.24486542]
[221.86668396 -79.54994202]
[213.87677002 -66.85501099]
[205.88685608 -54.16007996]
[215.93746948 -46.75100327]
[225.47131348 -38.68779373]
[234.44587708 -30.00638962]
[242.82115173 -20.74548912]
[250.55981445 -10.94637489]
[257.62734985 -0.65272278]
[263.99227905 10.08958244]
[269.62625122 21.23265839]
[274.50408936 32.72683716]
[278.60409546 44.52087784]
[281.90798950 56.56221771]
[284.40103149 68.79717255]
[286.07211304 81.17121887]
[286.91378784 93.62918854]
[286.92233276 106.11556244]
[301.88256836 107.20687103]
[316.84283447 108.29817963]
[333.07986450 103.42022705]
[342.26205444 117.67237854]
[331.10876465 130.44110107]
[315.75152588 123.25843048]
[300.79125977 122.16712189]
[285.83102417 121.07580566]
[283.63659668 135.42530823]
[280.33587646 149.56138611]
[275.94866943 163.39888000]
[270.50149536 176.85441589]
[264.02706909 189.84693909]
[256.56448364 202.29817200]
[248.15866089 214.13310242]
[238.86024475 225.28044128]
[228.72525024 235.67300415]
[217.81475830 245.24819946]
[206.19445801 253.94833374]
[193.93440247 261.72100830]
[181.10841370 268.51937866]
[167.79379272 274.30249023]
[154.07075500 279.03549194]
[140.02194214 282.68991089]
[125.73202515 285.24368286]
[111.28708649 286.68142700]
[96.77413940 286.99450684]
[82.28063202 286.18103027]
[67.89387512 284.24591064]
[53.70054245 281.20077515]
[39.78614807 277.06396484]
[26.23451233 271.86044312]
[13.12728405 265.62152100]
[0.54342586 258.38479614]
[-11.44124889 250.19389343]
[-22.75453949 241.09811401]
[-33.32828522 231.15229797]
[-43.09878540 220.41633606]
[-52.00717545 208.95491028]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 54]
[2 53]
[3 52]
[5 50]
[6 49]
[7 48]
[8 47]
[9 46]
[82 96]
[83 95]
[84 94]
[85 93]
[111 119]
[112 118]
[113 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
