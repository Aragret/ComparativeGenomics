%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUAACACCCAUAGUAGGCCUAAAAGCAGCCACCAAUUAAGAAAGCGUUCAAGCUCAACACxxxxxxxxxxCCUAGAAGGAAUAAUACUAUCGCUGUUCAUUAUAGCUACUCUCAUAACCCUCAACACCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[159.49090576 426.85412598]
[158.55526733 411.88333130]
[157.61964417 396.91253662]
[156.68402100 381.94177246]
[155.74838257 366.97097778]
[154.81275940 352.00018311]
[153.87713623 337.02938843]
[151.39201355 322.23666382]
[147.38427734 307.78198242]
[143.37652588 293.32730103]
[139.36878967 278.87261963]
[135.36105347 264.41793823]
[131.35331726 249.96324158]
[117.33708954 248.77604675]
[104.54518890 242.85372925]
[94.52934265 232.89210510]
[88.51222229 220.07836914]
[87.23821259 205.94958496]
[90.88140869 192.20829773]
[99.02208710 180.51742554]
[110.69503021 172.29895020]
[106.98886871 157.76400757]
[103.28270721 143.22908020]
[99.57654572 128.69413757]
[84.71408844 124.28731537]
[74.31216431 112.79328156]
[59.60420609 115.73876190]
[44.89624405 118.68424225]
[39.36232376 133.08491516]
[26.90780640 142.18922424]
[11.50688171 143.09202576]
[-1.92607105 135.50524902]
[-9.10464573 121.84978485]
[-7.73818493 106.48305511]
[1.73727846 94.30853271]
[16.29815865 89.21105194]
[31.29813194 92.81720734]
[41.95075989 103.97628021]
[56.65872192 101.03079987]
[71.36668396 98.08531952]
[72.32437897 92.41100311]
[74.39494324 87.04184723]
[77.49510193 82.19375610]
[81.50020599 78.06166840]
[86.24920654 74.81173706]
[91.55113983 72.57465363]
[97.19281006 71.44036865]
[99.67793274 56.64766312]
[102.16304779 41.85495377]
[104.49414825 27.03719711]
[106.67098999 12.19599247]
[108.84782410 -2.64521360]
[110.87016296 -17.50826073]
[112.73777008 -32.39154053]
[114.60538483 -47.27481842]
[116.47299957 -62.15810013]
[101.95928192 -66.03956604]
[88.10929871 -71.86122894]
[75.18106842 -79.51463318]
[63.41543961 -88.85720825]
[53.03158951 -99.71489716]
[44.22296524 -111.88542938]
[37.15367508 -125.14208221]
[31.95540428 -139.23788452]
[28.72499847 -153.91024780]
[27.52263832 -168.88583374]
[28.37072372 -183.88565063]
[31.25345230 -198.63026428]
[36.11712265 -212.84500122]
[42.87113190 -226.26502991]
[51.38964844 -238.64035034]
[61.51398087 -249.74041748]
[73.05551910 -259.35845947]
[85.79925537 -267.31527710]
[99.50777435 -273.46264648]
[113.92570496 -277.68606567]
[128.78443909 -279.90679932]
[143.80717468 -280.08355713]
[158.71403503 -278.21298218]
[173.22734070 -274.32992554]
[187.07669067 -268.50677490]
[200.00408936 -260.85195923]
[211.76870728 -251.50813293]
[222.15138245 -240.64930725]
[230.95869446 -228.47782898]
[238.02655029 -215.22041321]
[243.22329712 -201.12403870]
[246.45210266 -186.45132446]
[247.65284729 -171.47561646]
[246.80313110 -156.47589111]
[243.91880798 -141.73158264]
[239.05360413 -127.51738739]
[232.29814148 -114.09809113]
[223.77828979 -101.72368622]
[213.65275574 -90.62471008]
[202.11016846 -81.00792694]
[189.36557007 -73.05248260]
[175.65638733 -66.90659332]
[161.23800659 -62.68474960]
[146.37902832 -60.46559906]
[131.35627747 -60.29048538]
[129.48866272 -45.40720749]
[127.62105560 -30.52392769]
[125.75344086 -15.64064693]
[128.05615234 -8.56652927]
[123.68903351 -0.46837655]
[121.51219177 14.37282944]
[119.33535767 29.21403503]
[121.49040985 36.33452606]
[116.95575714 44.34007263]
[114.47063446 59.13278198]
[111.98551941 73.92549133]
[126.34488678 88.62107849]
[127.19957733 109.14962769]
[114.11148071 124.98797607]
[117.81764221 139.52291870]
[121.52380371 154.05784607]
[125.22996521 168.59278870]
[141.12937927 170.77108765]
[154.94914246 178.85302734]
[164.59681702 191.58079529]
[168.62472534 206.99583435]
[166.44718933 222.74009705]
[158.42541504 236.41685486]
[145.80799866 245.95549011]
[149.81573486 260.41018677]
[153.82348633 274.86486816]
[157.83122253 289.31954956]
[161.83895874 303.77426147]
[165.84669495 318.22894287]
[171.72987366 304.43081665]
[183.64076233 295.31320190]
[198.49627686 293.23617554]
[212.45108032 298.73739624]
[221.89305115 310.39282227]
[224.37814331 325.18554688]
[219.26310730 339.28646851]
[207.87194824 349.04565430]
[193.15322876 351.93692017]
[178.91685486 347.21191406]
[168.84791565 336.09375000]
[169.78355408 351.06454468]
[170.71917725 366.03533936]
[171.65480042 381.00613403]
[172.59043884 395.97692871]
[173.52606201 410.94772339]
[174.46168518 425.91851807]
[183.97702026 439.27478027]
[176.92257690 454.07907104]
[160.55535889 455.10198975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 147]
[2 146]
[3 145]
[4 144]
[5 143]
[6 142]
[7 141]
[8 130]
[9 129]
[10 128]
[11 127]
[12 126]
[13 125]
[21 118]
[22 117]
[23 116]
[24 115]
[26 40]
[27 39]
[28 38]
[47 112]
[48 111]
[49 110]
[50 108]
[51 107]
[52 106]
[53 104]
[54 103]
[55 102]
[56 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
