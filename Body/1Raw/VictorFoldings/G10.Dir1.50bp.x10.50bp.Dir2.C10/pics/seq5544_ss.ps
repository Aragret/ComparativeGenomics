%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCACAAAAAACAAUAGCCUCAUCAUCCCCACCAUCAUAGCCACCAUCACCCUCCUUAACCxxxxxxxxxxUACCCCUCACAAUCAUGGCAAGCCAACGCCACUUAUCCAGUGAACCACUAUCACGAAAAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 242.69361877]
[92.50000000 227.69361877]
[92.50000000 212.69361877]
[92.50000000 197.69361877]
[92.50000000 182.69361877]
[92.50000000 167.69361877]
[92.50000000 152.69361877]
[92.50000000 137.69361877]
[92.50000000 122.69362640]
[92.50000000 107.69362640]
[89.86113739 92.92756653]
[84.66571808 78.85604858]
[79.47030640 64.78453064]
[74.27488708 50.71300888]
[59.91859055 55.07503128]
[45.33104324 58.58699417]
[30.56252861 61.23679352]
[15.66395664 63.01529312]
[0.68668938 63.91636658]
[-14.31764507 63.93690109]
[-29.29732323 63.07683182]
[-44.20070648 61.33911896]
[-58.97642136 58.72975540]
[-73.57352448 55.25773621]
[-87.94171143 50.93502808]
[-102.03144073 45.77653503]
[-115.79414368 39.80003738]
[-129.18237305 33.02614212]
[-142.14997864 25.47819328]
[-154.65226746 17.18221474]
[-166.64613342 8.16680336]
[-178.09024048 -1.53696239]
[-188.94512939 -11.89563084]
[-199.17337036 -22.87349319]
[-208.73971558 -34.43270874]
[-217.61119080 -46.53342819]
[-225.75721741 -59.13393402]
[-233.14970398 -72.19079590]
[-239.76316833 -85.65900421]
[-245.57481384 -99.49212646]
[-250.56460571 -113.64247894]
[-254.71534729 -128.06127930]
[-258.01272583 -142.69882202]
[-260.44537354 -157.50465393]
[-262.00491333 -172.42773438]
[-262.68597412 -187.41662598]
[-262.48617554 -202.41963196]
[-261.40621948 -217.38507080]
[-259.44985962 -232.26133728]
[-256.62380981 -246.99713135]
[-252.93782043 -261.54168701]
[-248.40458679 -275.84484863]
[-243.03976440 -289.85729980]
[-236.86181641 -303.53076172]
[-229.89205933 -316.81808472]
[-222.15449524 -329.67346191]
[-213.67582703 -342.05258179]
[-204.48527527 -353.91278076]
[-194.61450195 -365.21316528]
[-184.09756470 -375.91476440]
[-172.97068787 -385.98071289]
[-161.27224731 -395.37628174]
[-149.04257202 -404.06912231]
[-136.32379150 -412.02923584]
[-123.15979004 -419.22918701]
[-109.59592438 -425.64416504]
[-95.67895508 -431.25207520]
[-81.45686340 -436.03353882]
[-66.97866058 -439.97210693]
[-52.29427719 -443.05416870]
[-37.45431900 -445.26916504]
[-22.50994682 -446.60940552]
[-7.51267815 -447.07028198]
[7.48578882 -446.65020752]
[22.43375015 -445.35061646]
[37.27967834 -443.17602539]
[51.97239685 -440.13388062]
[66.46125031 -436.23471069]
[80.69630432 -431.49194336]
[94.62847900 -425.92193604]
[108.20973969 -419.54388428]
[121.39328766 -412.37976074]
[134.13366699 -404.45428467]
[146.38694763 -395.79473877]
[158.11090088 -386.43099976]
[169.26512146 -376.39538574]
[179.81112671 -365.72241211]
[189.71260071 -354.44894409]
[198.93539429 -342.61380005]
[207.44770813 -330.25778198]
[215.22019958 -317.42349243]
[222.22607422 -304.15518188]
[228.44119263 -290.49859619]
[233.84411621 -276.50076294]
[238.41624451 -262.20999146]
[242.14178467 -247.67552185]
[245.00790405 -232.94746399]
[247.00473022 -218.07658386]
[248.12538147 -203.11413574]
[248.36598206 -188.11172485]
[247.72572327 -173.12103271]
[246.20678711 -158.19377136]
[243.81440735 -143.38137817]
[240.55686951 -128.73490906]
[236.44535828 -114.30487823]
[231.49407959 -100.14100647]
[225.72007751 -86.29212189]
[219.14328003 -72.80597687]
[211.78634644 -59.72905350]
[203.67462158 -47.10643387]
[194.83610535 -34.98162842]
[185.30123901 -23.39643288]
[175.10289001 -12.39078617]
[164.27622986 -2.00262785]
[152.85856628 7.73223257]
[140.88926697 16.78023720]
[128.40959167 25.11019325]
[115.46255493 32.69338989]
[102.09280396 39.50368118]
[88.34640503 45.51759338]
[93.54182434 59.58911514]
[98.73723602 73.66063690]
[103.93265533 87.73215485]
[106.99595642 73.04827881]
[114.58233643 60.10815048]
[125.89946747 50.26322937]
[139.76541138 44.54171371]
[154.73199463 43.54115295]
[169.23614502 47.36605072]
[181.76303101 55.61692810]
[191.00436401 67.43207550]
[195.99499512 81.57752228]
[196.21368408 96.57592773]
[191.63761902 110.86086273]
[182.74468994 122.94042969]
[170.46368408 131.55303955]
[156.07722473 135.79917908]
[141.08781433 135.23541260]
[127.06095886 129.92060852]
[115.46160126 120.40983582]
[107.50000000 107.69362640]
[107.50000000 122.69362640]
[107.50000000 137.69361877]
[107.50000000 152.69361877]
[107.50000000 167.69361877]
[107.50000000 182.69361877]
[107.50000000 197.69361877]
[107.50000000 212.69361877]
[107.50000000 227.69361877]
[107.50000000 242.69361877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 123]
[12 122]
[13 121]
[14 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
