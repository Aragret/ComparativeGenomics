%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUAAAUCCCCUUGUAAAUUUAACUGUUAGUCCAAAGAGGAACAGCUCUUUGGACACUAGGxxxxxxxxxxACUCAACGGCUACAUAGAAAAAUCCACCCCUUACGAGUGCGGCUUCGACCCUAUAUCCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[123.58631134 358.73324585]
[123.58631134 343.73324585]
[123.58631134 328.73324585]
[123.58631134 313.73324585]
[123.58631134 298.73324585]
[123.58631134 283.73324585]
[123.58631134 268.73324585]
[123.58631134 253.73324585]
[123.58631134 238.73324585]
[123.58631134 223.73324585]
[121.56398010 208.87019348]
[110.70745850 198.67288208]
[114.47630310 183.30712891]
[110.46856689 168.85244751]
[100.06974030 162.59370422]
[96.63833618 150.53367615]
[102.55091858 139.02301025]
[98.84475708 124.48807526]
[94.98759460 109.99248505]
[90.82971191 95.58026886]
[86.52212524 81.21208191]
[82.21453857 66.84389496]
[77.90695190 52.47571182]
[73.59937286 38.10752869]
[69.29178619 23.73934555]
[64.98419952 9.37116146]
[59.64268875 -4.64555168]
[53.29555893 -18.23650360]
[46.94842911 -31.82745361]
[40.60129929 -45.41840363]
[26.01925278 -50.89577866]
[19.77596855 -64.76935577]
[25.08767128 -78.63735199]
[18.74054337 -92.22830200]
[8.64189339 -103.31961823]
[-4.29616308 -110.90952301]
[-10.99833775 -111.34352875]
[-15.72886753 -114.63797760]
[-17.60515404 -119.09387970]
[-30.21628189 -127.21542358]
[-42.82741165 -135.33695984]
[-55.43853760 -143.45851135]
[-68.04966736 -151.58004761]
[-80.66079712 -159.70158386]
[-93.27191925 -167.82313538]
[-105.88304901 -175.94467163]
[-118.49417877 -184.06622314]
[-131.10530090 -192.18775940]
[-146.49659729 -188.59838867]
[-159.87365723 -197.01443481]
[-163.30010986 -212.44282532]
[-154.74308777 -225.73014832]
[-139.27934265 -228.99328613]
[-126.08322906 -220.29626465]
[-122.98376465 -204.79888916]
[-110.37263489 -196.67735291]
[-97.76151276 -188.55580139]
[-85.15038300 -180.43426514]
[-72.53925323 -172.31271362]
[-59.92812347 -164.19117737]
[-47.31699753 -156.06964111]
[-34.70586777 -147.94808960]
[-22.09473991 -139.82655334]
[-9.48361206 -131.70500183]
[3.29374552 -123.84757996]
[16.23180199 -116.25767517]
[9.30176640 -129.56085205]
[5.13617802 -143.97084045]
[3.89920115 -158.91975403]
[5.63958406 -173.81845093]
[10.28873920 -188.07977295]
[17.66344452 -201.14169312]
[27.47306442 -212.48944092]
[39.33100510 -221.67579651]
[52.76994705 -228.33874512]
[67.26026154 -232.21569824]
[82.23089600 -233.15383911]
[97.09185791 -231.11624146]
[111.25747681 -226.18316650]
[124.16949463 -218.54904175]
[135.31904602 -208.51472473]
[144.26673889 -196.47567749]
[150.65994263 -182.90634155]
[154.24668884 -168.34147644]
[154.88565063 -153.35508728]
[152.55162048 -138.53779602]
[147.33660889 -124.47352600]
[139.44612122 -111.71656036]
[129.19111633 -100.76964569]
[116.97574615 -92.06420135]
[103.28141785 -85.94329834]
[88.64782715 -82.64816284]
[73.65167236 -82.30866241]
[58.88394547 -84.93816376]
[44.92664337 -90.43305206]
[32.33149338 -98.57543182]
[38.67862320 -84.98448181]
[52.72201538 -80.15553284]
[59.35251617 -66.46279144]
[54.19225311 -51.76553345]
[60.53937912 -38.17458344]
[66.88651276 -24.58363152]
[73.23364258 -10.99268150]
[78.72612000 -24.95092773]
[91.82129669 -32.26641464]
[106.58692932 -29.62515640]
[116.33403015 -18.22366714]
[116.64707947 -3.22693372]
[107.38425446 8.57137680]
[92.74171448 11.82651424]
[79.35238647 5.06357670]
[83.65997314 19.43176079]
[87.96755219 33.79994583]
[92.27513885 48.16812897]
[96.58272552 62.53631210]
[100.89031219 76.90449524]
[105.19789124 91.27268219]
[110.37693787 97.52260590]
[109.44228363 105.98474121]
[114.78370667 113.47614288]
[113.37969208 120.78191376]
[117.08585358 135.31684875]
[130.24792480 148.15196228]
[124.92325592 164.84469604]
[128.93099976 179.29939270]
[140.07417297 190.53059387]
[136.01866150 204.86245728]
[140.91783142 190.68507385]
[151.07690430 179.64907837]
[164.80113220 173.59552002]
[179.80101013 173.53427124]
[193.57421875 179.47555542]
[203.82305908 190.42823792]
[208.83782959 204.56513977]
[207.78193665 219.52792358]
[200.83151245 232.82046509]
[189.14607239 242.22528076]
[174.67498779 246.17340088]
[159.83236694 244.00622559]
[147.09429932 236.08526611]
[138.58631897 223.73324585]
[138.58631897 238.73324585]
[138.58631897 253.73324585]
[138.58631897 268.73324585]
[138.58631897 283.73324585]
[138.58631897 298.73324585]
[138.58631897 313.73324585]
[138.58631897 328.73324585]
[138.58631897 343.73324585]
[138.58631897 358.73324585]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 127]
[13 125]
[14 124]
[17 122]
[18 121]
[19 119]
[20 117]
[21 116]
[22 115]
[23 114]
[24 113]
[25 112]
[26 111]
[27 103]
[28 102]
[29 101]
[30 100]
[33 97]
[34 96]
[35 66]
[36 65]
[39 64]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
