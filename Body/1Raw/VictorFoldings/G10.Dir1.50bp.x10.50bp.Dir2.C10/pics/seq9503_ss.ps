%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCCUAGCCCUAAGUCUGGCCUAUGAGUGACUACAAAAAGGAUUAGACUGAACCGAAUUGGxxxxxxxxxxAUUCACACGAGAAAACACCCUCAUGUUCAUACACCUAUCCCCCAUUCUCCUCCUAUCCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[93.79177856 255.71925354]
[93.79177856 240.71925354]
[93.79177856 225.71925354]
[93.79177856 210.71925354]
[93.79177856 195.71925354]
[93.79177856 180.71925354]
[93.79177856 165.71925354]
[93.79177856 150.71925354]
[93.79177856 135.71925354]
[93.79177856 120.71924591]
[81.80493927 111.70171356]
[67.39272308 115.85960388]
[52.98051071 120.01749420]
[38.56829453 124.17537689]
[37.38599014 138.40222168]
[31.42131042 151.33937073]
[21.41237831 161.43476868]
[8.58113956 167.48497009]
[-5.51580858 168.77864075]
[-19.17603683 165.18013000]
[-30.75688744 157.14331055]
[-38.87300110 145.65449524]
[-53.36859512 149.51165771]
[-67.86418915 153.36882019]
[-82.35978699 157.22598267]
[-85.17276001 172.22764587]
[-94.22304535 184.51808167]
[-107.71371460 191.65702820]
[-122.96618652 192.22703552]
[-136.95207214 186.11492920]
[-146.89445496 174.53425598]
[-150.81927490 159.78439331]
[-147.94725037 144.79391479]
[-138.84863281 132.53921509]
[-125.32994843 125.45345306]
[-110.07535553 124.94351196]
[-96.11364746 131.11065674]
[-86.21694946 142.73037720]
[-71.72135162 138.87322998]
[-57.22575378 135.01606750]
[-42.73015976 131.15890503]
[-40.88705826 115.44942474]
[-33.14931870 101.60998535]
[-20.67113113 91.76527405]
[-5.33699512 87.43959808]
[10.52285004 89.32089233]
[24.48653793 97.15153503]
[34.41040802 109.76316071]
[48.82262421 105.60527802]
[63.23484039 101.44738770]
[77.64705658 97.28949738]
[80.11511993 91.71939850]
[83.86273956 87.25444794]
[88.48613739 84.15444183]
[93.54062653 82.54648590]
[80.95215607 73.37216949]
[78.64261627 58.33485794]
[87.46650696 46.39021301]
[84.98139191 31.59750557]
[82.49626923 16.80479813]
[80.01115417 2.01209116]
[75.85326385 -12.40012455]
[70.07699585 -26.24334335]
[55.84573364 -33.64947891]
[52.90456772 -49.42062759]
[63.50970459 -61.45851135]
[79.52578735 -60.52869797]
[88.66665649 -47.34445953]
[83.92021179 -32.01961517]
[89.69647980 -18.17639732]
[93.40080261 -32.71180344]
[103.33988190 -43.94633484]
[117.31528473 -49.39501953]
[132.23577881 -47.85265732]
[144.80108643 -39.66040421]
[152.23188782 -26.63031387]
[152.88453674 -11.64452076]
[146.61470032 1.98225808]
[134.80918884 11.23590279]
[120.07928467 14.06959248]
[105.68309784 9.85654163]
[94.80385590 -0.47302729]
[97.28897858 14.31968021]
[99.77409363 29.11238670]
[102.25921631 43.90509415]
[114.50186157 52.31064224]
[117.23284912 67.27714539]
[108.33332825 80.06137085]
[120.59570312 88.70048523]
[135.36175537 86.06162262]
[150.12780762 83.42276001]
[164.89385986 80.78388977]
[179.65992737 78.14502716]
[193.73144531 72.94961548]
[206.66949463 65.35970306]
[219.60755920 57.76979446]
[232.54560852 50.17988968]
[236.28704834 34.82485199]
[249.83352661 26.68430138]
[265.14816284 30.58788109]
[273.14501953 44.21966553]
[269.07974243 59.49216080]
[255.36418152 67.34446716]
[240.13551331 63.11794281]
[227.19746399 70.70785522]
[214.25939941 78.29776001]
[201.32135010 85.88767242]
[216.31512451 86.31994629]
[230.38806152 91.51152039]
[242.07038879 100.92018890]
[250.14202881 113.56331635]
[253.75996399 128.12046814]
[252.54635620 143.07128906]
[246.62794495 156.85433960]
[236.62284851 168.03010559]
[223.57598877 175.43142700]
[208.84997559 178.28529358]
[193.98278809 176.29365540]
[180.52714539 169.66452026]
[169.88833618 159.09020996]
[163.17747498 145.67514038]
[161.09545898 130.82032776]
[163.85971069 116.07723236]
[171.18153381 102.98560333]
[182.29878235 92.91108704]
[167.53273010 95.54994965]
[152.76667786 98.18881226]
[138.00062561 100.82767487]
[123.23456573 103.46653748]
[137.45812988 108.22994232]
[152.45416260 107.88500977]
[165.71687317 114.89221191]
[173.88290405 127.47457886]
[174.88143921 142.44129944]
[168.45922852 155.99694824]
[156.24493408 164.70388794]
[141.33598328 166.35411072]
[127.51319122 160.52912903]
[118.28190613 148.70613098]
[115.98315430 133.88298035]
[108.79177856 120.71924591]
[108.79177856 135.71925354]
[108.79177856 150.71925354]
[108.79177856 165.71925354]
[108.79177856 180.71925354]
[108.79177856 195.71925354]
[108.79177856 210.71925354]
[108.79177856 225.71925354]
[108.79177856 240.71925354]
[108.79177856 255.71925354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 51]
[12 50]
[13 49]
[14 48]
[22 41]
[23 40]
[24 39]
[25 38]
[55 88]
[58 85]
[59 84]
[60 83]
[61 82]
[62 70]
[63 69]
[89 129]
[90 128]
[91 127]
[92 126]
[93 125]
[94 107]
[95 106]
[96 105]
[97 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
