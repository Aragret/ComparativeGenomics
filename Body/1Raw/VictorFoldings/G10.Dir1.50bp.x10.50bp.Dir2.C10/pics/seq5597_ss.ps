%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCACCAUCAUAGCCACCAUCACCCUCCUUAACCUCUACUUCUACCUACGCCUAAUCUACxxxxxxxxxxUUGGGACAGACCUAGUUCAAUGAAUCUGAGGAGGCUACUCAGUAGACAGUCCCACCCUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[70.14534760 263.69940186]
[70.14534760 248.69941711]
[70.14534760 233.69941711]
[70.14534760 218.69941711]
[70.14534760 203.69941711]
[70.14534760 188.69941711]
[70.14534760 173.69941711]
[70.14534760 158.69941711]
[70.14534760 143.69941711]
[70.14534760 128.69941711]
[55.38498306 131.36990356]
[40.91513824 127.41722870]
[29.56231499 117.61348724]
[23.54413033 103.87371063]
[24.03615952 88.88178253]
[30.94229317 75.56617737]
[42.91350555 66.52792358]
[57.61138153 63.53252029]
[72.16488647 67.16508484]
[83.73118591 76.71604156]
[90.05067444 90.31845093]
[86.04293823 75.86376190]
[82.03519440 61.40907669]
[78.02745056 46.95438766]
[74.01971436 32.49969864]
[62.87652969 21.26849174]
[66.93203735 6.93663549]
[62.92430115 -7.51805258]
[50.90103149 -10.32492733]
[41.26400757 -17.90312767]
[35.77929306 -28.77042389]
[35.41226959 -40.85096359]
[40.15848923 -51.87169647]
[30.65013313 -63.47303772]
[21.14177322 -75.07437897]
[8.40270901 -67.11544800]
[-5.24955606 -60.85094833]
[-19.59083939 -56.38374329]
[-34.38564301 -53.78718948]
[-49.39102554 -53.10392761]
[-64.36058044 -54.34517288]
[-79.04850006 -57.49054718]
[-93.21359253 -62.48839951]
[-106.62325287 -69.25666046]
[-119.05728149 -77.68418884]
[-130.31150818 -87.63259888]
[-140.20111084 -98.93852234]
[-148.56372070 -111.41631317]
[-155.26197815 -124.86106873]
[-160.18592834 -139.05201721]
[-163.25469971 -153.75613403]
[-164.41790771 -168.73194885]
[-163.65643311 -183.73356628]
[-160.98280334 -198.51464844]
[-156.44090271 -212.83244324]
[-150.10533142 -226.45187378]
[-142.08009338 -239.14927673]
[-132.49700928 -250.71615601]
[-121.51342773 -260.96258545]
[-109.30970001 -269.72027588]
[-96.08622742 -276.84545898]
[-82.06015015 -282.22109985]
[-67.46179962 -285.75894165]
[-52.53087616 -287.40090942]
[-37.51257324 -287.11999512]
[-22.65350151 -284.92083740]
[-8.19765949 -280.83953857]
[5.61757612 -274.94314575]
[18.56534576 -267.32843018]
[30.43303490 -258.12048340]
[41.02576447 -247.47048950]
[50.16959381 -235.55332947]
[57.71437454 -222.56469727]
[63.53620911 -208.71788025]
[67.53950500 -194.24023438]
[69.65851593 -179.36952209]
[69.85845184 -164.34992981]
[68.13602448 -149.42808533]
[64.51953125 -134.84901428]
[59.06834030 -120.85211945]
[51.87197495 -107.66725922]
[43.04860306 -95.51092529]
[32.74311447 -84.58274078]
[42.25147247 -72.98139954]
[51.75983047 -61.38005447]
[65.93186188 -63.49830246]
[79.25380707 -58.22014618]
[91.14618683 -67.36187744]
[103.03856659 -76.50361633]
[114.93094635 -85.64534760]
[100.73935699 -90.50319672]
[95.48879242 -104.55422974]
[103.01700592 -117.52828979]
[117.82147217 -119.94237518]
[129.08132935 -110.03199768]
[128.56683350 -95.04141998]
[141.34419250 -102.89884186]
[154.12155151 -110.75627136]
[164.44645691 -124.20367432]
[180.22654724 -118.00487518]
[178.63836670 -101.12548065]
[161.97897339 -97.97891235]
[149.20161438 -90.12148285]
[136.42425537 -82.26406097]
[124.07268524 -73.75296783]
[112.18030548 -64.61123657]
[100.28792572 -55.46950150]
[88.39554596 -46.32776642]
[89.37149048 -27.06810379]
[77.37899017 -11.52579308]
[81.38672638 2.92889547]
[92.24325562 13.12620640]
[88.47440338 28.49195862]
[92.48213959 42.94664764]
[96.48988342 57.40133667]
[100.49761963 71.85602570]
[104.50536346 86.31071472]
[114.71884155 97.29637909]
[128.84364319 102.34513092]
[144.87110901 98.87345123]
[155.68952942 111.19797516]
[150.16983032 126.64028931]
[133.99021912 129.31466675]
[123.79489136 116.46993256]
[109.67008972 111.42118073]
[103.53890228 115.74073792]
[113.51408386 126.94322968]
[123.48925781 138.14572144]
[133.46443176 149.34820557]
[143.43962097 160.55070496]
[155.95596313 168.81756592]
[159.07464600 183.48977661]
[151.00283813 196.13279724]
[136.38073730 199.47859192]
[123.61408997 191.60377502]
[120.04206848 177.03480530]
[112.85068512 163.87106323]
[105.65930176 150.70733643]
[98.46791840 137.54359436]
[91.27653503 124.37985229]
[85.14534760 128.69941711]
[85.14534760 143.69941711]
[85.14534760 158.69941711]
[85.14534760 173.69941711]
[85.14534760 188.69941711]
[85.14534760 203.69941711]
[85.14534760 218.69941711]
[85.14534760 233.69941711]
[85.14534760 248.69941711]
[85.14534760 263.69940186]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[21 117]
[22 116]
[23 115]
[24 114]
[25 113]
[27 111]
[28 110]
[33 85]
[34 84]
[35 83]
[87 108]
[88 107]
[89 106]
[90 105]
[96 104]
[97 103]
[98 102]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
