%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACCUGAAACAAGCUAACAUGACUAACACCCUUAAUUCCAUCCACCCUCCUCUCCCUAGGAxxxxxxxxxxGGCCUAUCCGGAAUGCCCCGACGUUACUCGGACUACCCCGAUGCAUACACCACAUGAAACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[127.07512665 317.98464966]
[126.76714325 302.98782349]
[126.45916748 287.99099731]
[126.15119171 272.99414062]
[125.84321594 257.99731445]
[125.53523254 243.00047302]
[125.22725677 228.00363159]
[124.91928101 213.00679016]
[124.61130524 198.00994873]
[121.70382690 183.29443359]
[116.28520203 169.30734253]
[110.86657715 155.32026672]
[103.79292297 152.82760620]
[108.71609497 166.99667358]
[100.70794678 179.68009949]
[85.79865265 181.32723999]
[75.21498108 170.69775391]
[76.92647552 155.79571533]
[89.64560699 147.84228516]
[82.57194519 145.34962463]
[69.58156586 152.84962463]
[61.49891663 166.45040894]
[46.60812378 166.11334229]
[38.88161087 180.57823181]
[22.48469543 180.84881592]
[14.28512096 166.64672852]
[22.71790695 152.58187866]
[39.10812378 153.12295532]
[46.26161575 140.05862427]
[62.08156586 139.85923767]
[75.07194519 132.35923767]
[64.69152832 109.35167694]
[70.29515839 87.56082916]
[86.17625427 75.78559875]
[82.51754761 61.23864365]
[78.85884094 46.69168854]
[75.20014191 32.14473724]
[59.37129974 30.60409164]
[45.04628372 23.75802040]
[33.94235229 12.44749928]
[27.38368034 -1.95252824]
[26.14346504 -17.70029449]
[30.35281944 -32.89786911]
[39.48717499 -45.71990967]
[52.43157578 -54.63288116]
[48.47496796 -69.10164642]
[44.51835632 -83.57041931]
[40.56174469 -98.03918457]
[36.60513687 -112.50794983]
[20.66913414 -114.41184998]
[6.71111345 -122.25543213]
[-3.15455008 -134.81675720]
[-7.44636250 -150.16184998]
[-5.53812647 -165.94239807]
[2.24988031 -179.75518799]
[14.70421124 -189.50802612]
[10.45136452 -203.89250183]
[4.74670124 -217.76538086]
[-2.34970236 -230.98057556]
[-9.44610596 -244.19575500]
[-16.54250908 -257.41094971]
[-31.74546432 -261.72900391]
[-39.36916351 -275.57293701]
[-34.89060211 -290.72940063]
[-20.96683121 -298.20629883]
[-5.85857677 -293.56774902]
[1.47070217 -279.56570435]
[-3.32732606 -264.50735474]
[3.76907730 -251.29216003]
[10.86548042 -238.07698059]
[17.96188354 -224.86178589]
[20.62896347 -239.62277222]
[30.21514511 -251.15989685]
[44.23793793 -256.48544312]
[59.06591797 -254.22024536]
[70.85913849 -244.95094299]
[76.56357574 -231.07797241]
[74.70195770 -216.19393921]
[65.75638580 -204.15330505]
[52.04346085 -198.07418823]
[37.11436081 -199.53086853]
[24.83584595 -208.14535522]
[29.08869171 -193.76087952]
[43.12157440 -192.81242371]
[56.01119232 -187.10963440]
[66.19464874 -177.32160950]
[72.42955017 -164.61410522]
[73.94551849 -150.51075745]
[70.53938293 -136.71037292]
[62.60206985 -124.88231659]
[51.07390213 -116.46456146]
[55.03051376 -101.99579620]
[58.98712540 -87.52702332]
[62.94373322 -73.05825806]
[66.90034485 -58.58949280]
[81.06872559 -57.85057831]
[94.33312225 -52.75598526]
[105.38672638 -43.79338837]
[113.13613129 -31.83223152]
[116.80947876 -18.03940773]
[116.03334045 -3.76540899]
[110.87062073 9.58789062]
[101.81569672 20.70492363]
[89.74709320 28.48603058]
[93.40579987 43.03298569]
[97.06450653 57.57993698]
[100.72321320 72.12689209]
[130.50833130 84.18233490]
[133.98219299 122.66580200]
[148.97508240 123.12772369]
[163.96797180 123.58965302]
[178.96086121 124.05157471]
[190.30189514 113.04446411]
[206.10295105 113.36412048]
[216.98953247 124.82089233]
[216.50283813 140.61769104]
[204.93161011 151.38253784]
[189.14083862 150.72886658]
[178.49893188 139.04446411]
[163.50604248 138.58253479]
[148.51315308 138.12060547]
[133.52026367 137.65869141]
[124.85366058 149.90164185]
[130.27229309 163.88871765]
[135.69091797 177.87580872]
[138.47647095 163.13671875]
[145.81828308 150.05628967]
[156.94920349 140.00129700]
[170.70613098 134.02241516]
[185.65158081 132.74440002]
[200.22389221 136.30076599]
[212.90037537 144.31991577]
[222.35644531 155.96391296]
[227.60401917 170.01606750]
[228.09478760 185.00802612]
[223.77743530 199.37329102]
[215.10311890 211.61077881]
[202.97822571 220.44178772]
[188.66969299 224.94355774]
[173.67265320 224.64569092]
[159.55415344 219.57931519]
[147.78948975 210.27380371]
[139.60813904 197.70198059]
[139.91612244 212.69882202]
[140.22409058 227.69564819]
[140.53207397 242.69248962]
[140.84005737 257.68933105]
[141.14802551 272.68615723]
[141.45600891 287.68301392]
[141.76397705 302.67984009]
[142.07196045 317.67666626]
[144.65773010 336.88510132]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 151]
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 125]
[11 124]
[12 123]
[20 31]
[21 30]
[23 28]
[34 107]
[35 106]
[36 105]
[37 104]
[45 95]
[46 94]
[47 93]
[48 92]
[49 91]
[56 83]
[57 82]
[58 71]
[59 70]
[60 69]
[61 68]
[109 122]
[110 121]
[111 120]
[112 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
