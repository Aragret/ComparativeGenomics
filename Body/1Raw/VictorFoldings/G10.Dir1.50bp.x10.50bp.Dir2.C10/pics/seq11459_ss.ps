%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCAACUACAAGAACACCAAUGACCCCAAUACGCAAAACUAACCCCCUAAUAAAAUUAAUUxxxxxxxxxxCUCCCCAUGCUUACAAGCAAGUACAGCAAUCAACCCUCAACUAUCACACAUCAACUGCAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-66.33319855 186.21026611]
[-72.25495911 173.66934204]
[-86.27167511 179.01084900]
[-100.28838348 184.35237122]
[-114.30509949 189.69387817]
[-128.32180786 195.03538513]
[-141.33811951 202.49029541]
[-153.03775024 211.87745667]
[-164.73736572 221.26463318]
[-176.43699646 230.65179443]
[-188.13661194 240.03895569]
[-199.83624268 249.42611694]
[-211.53585815 258.81326294]
[-206.64193726 273.15988159]
[-206.95307922 288.31506348]
[-212.43173218 302.44869995]
[-222.41630554 313.85415649]
[-235.70111084 321.15411377]
[-250.68196106 323.46710205]
[-265.54983521 320.51379395]
[-278.50936890 312.65081787]
[-287.99563599 300.82766724]
[-292.86312866 286.47207642]
[-292.52404785 271.31750488]
[-287.01937866 257.19396973]
[-277.01379395 245.80694580]
[-263.71554565 238.53147888]
[-248.73045349 236.24610901]
[-233.86804199 239.22680664]
[-220.92301941 247.11364746]
[-209.22340393 237.72648621]
[-197.52377319 228.33932495]
[-185.82415771 218.95216370]
[-174.12452698 209.56500244]
[-162.42491150 200.17784119]
[-150.72528076 190.79067993]
[-165.65045166 192.28707886]
[-180.13494873 188.38844299]
[-192.29252625 179.60247803]
[-200.53996277 167.07330322]
[-203.80322266 152.43257141]
[-201.65736389 137.58685303]
[-194.38182068 124.46945190]
[-182.92404175 114.78855896]
[-168.77615356 109.80488586]
[-153.78053284 110.16743469]
[-139.88999939 115.82897949]
[-128.91345215 126.05225372]
[-122.28031158 139.50593567]
[-120.85437775 154.43800354]
[-124.82134247 168.90393066]
[-133.66333008 181.01867676]
[-119.64661407 175.67716980]
[-105.62989807 170.33564758]
[-91.61318207 164.99414062]
[-77.59647369 159.65263367]
[-82.11768341 143.95555115]
[-85.25435638 127.92430878]
[-86.98262787 111.68077087]
[-87.28936005 95.34842682]
[-86.17223358 79.05144501]
[-83.63973236 62.91372681]
[-79.71111298 47.05795670]
[-74.41623688 31.60467911]
[-67.79535675 16.67137527]
[-59.89882278 2.37157679]
[-50.78665543 -11.18600178]
[-40.52813339 -23.89828873]
[-29.20124817 -35.66864014]
[-16.89211082 -46.40757370]
[-3.69430113 -56.03343964]
[10.29184341 -64.47306824]
[24.95999527 -71.66228485]
[40.19863510 -77.54644012]
[55.89191818 -82.08080292]
[71.92053223 -85.23089600]
[88.16262054 -86.97277832]
[104.49469757 -87.29319000]
[120.79261017 -86.18971252]
[136.93244934 -83.67073059]
[152.79150391 -79.75539398]
[168.24920654 -74.47346497]
[183.18804932 -67.86509705]
[197.49446106 -59.98054123]
[211.05966187 -50.87973404]
[223.78053284 -40.63186264]
[235.56037903 -29.31484032]
[246.30961609 -17.01470184]
[258.38958740 -25.90705109]
[270.46957397 -34.79940033]
[282.54959106 -43.69174957]
[294.53640747 -52.70928192]
[306.42880249 -61.85101318]
[318.32116699 -70.99275208]
[320.12167358 -86.69413757]
[332.54919434 -96.45798492]
[348.23065186 -94.49156189]
[357.86257935 -81.96152496]
[355.73046875 -66.30171204]
[343.09930420 -56.80281830]
[327.46289062 -59.10036850]
[315.57052612 -49.95863342]
[303.67813110 -40.81690216]
[300.26980591 -34.20411682]
[291.44192505 -31.61176109]
[279.36193848 -22.71941185]
[267.28195190 -13.82706261]
[255.20196533 -4.93471289]
[262.53939819 6.83406401]
[268.98608398 19.11338997]
[274.50674438 31.83597183]
[279.07113647 44.93209457]
[282.65417480 58.32998657]
[285.23629761 71.95623016]
[286.80334473 85.73615265]
[287.34667969 99.59424591]
[286.86337280 113.45455933]
[285.35604858 127.24114227]
[282.83297729 140.87844849]
[279.30798340 154.29173279]
[274.80038452 167.40750122]
[269.33486938 180.15386963]
[262.94140625 192.46101379]
[255.65504456 204.26145935]
[247.51567078 215.49055481]
[238.56793213 226.08676147]
[228.86082458 235.99201965]
[218.44757080 245.15203857]
[207.38522339 253.51663208]
[195.73440552 261.03994751]
[183.55895996 267.68078613]
[170.92562866 273.40270996]
[157.90361023 278.17440796]
[144.56428528 281.96969604]
[130.98074341 284.76779175]
[117.22743225 286.55337524]
[103.37971497 287.31661987]
[89.51347351 287.05340576]
[75.70469666 285.76513672]
[62.02906418 283.45886230]
[48.56151199 280.14721680]
[35.37583923 275.84838867]
[22.54430580 270.58593750]
[10.13723087 264.38864136]
[-1.77739823 257.29049683]
[-13.13428783 249.33042908]
[-23.87120247 240.55201721]
[-33.92930603 231.00337219]
[-43.25347519 220.73684692]
[-51.79261780 209.80867004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 56]
[3 55]
[4 54]
[5 53]
[6 52]
[7 36]
[8 35]
[9 34]
[10 33]
[11 32]
[12 31]
[13 30]
[88 108]
[89 107]
[90 106]
[91 105]
[92 103]
[93 102]
[94 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
