%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUCAAGGACUUCAAACUCUACUCCCACUAAUAGCUUUUUGAUGACUUCUAGCAAGCCUCGxxxxxxxxxxUGACUCCCCUCAGCCAUAGAAGGCCCCACCCCAGUCUCAGCCCUACUCCACUCAAGCACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[186.33985901 220.58441162]
[195.45333862 208.63442993]
[185.01351929 197.86361694]
[174.57371521 187.09280396]
[164.13389587 176.32200623]
[149.72007751 172.56819153]
[145.67112732 157.27386475]
[135.23132324 146.50305176]
[124.79150391 135.73225403]
[114.35169220 124.96144104]
[103.91188049 114.19062805]
[89.58928680 109.73381805]
[74.88132477 112.67929840]
[60.17336273 115.62477875]
[71.75515747 125.15692902]
[73.39595795 140.06692505]
[64.16418457 151.88954163]
[49.30121613 153.91246033]
[37.24556351 144.98713684]
[34.84186935 130.18098450]
[43.45614243 117.89939880]
[28.49589348 118.99071503]
[13.53564548 120.08202362]
[-1.42460346 121.17333221]
[-16.38485146 122.26464081]
[-27.54378700 135.69653320]
[-44.62622833 136.91075134]
[-57.07308197 125.64427185]
[-72.00739288 127.04657745]
[-86.94169617 128.44888306]
[-93.27100372 142.44300842]
[-105.75875092 151.38456726]
[-121.04580688 152.86834717]
[-135.02001953 146.49520874]
[-143.92240906 133.97949219]
[-145.35826111 118.68786621]
[-138.94134521 104.73369598]
[-126.39778900 95.87059021]
[-111.10173798 94.48267365]
[-97.16774750 100.94329071]
[-88.34400177 113.51457214]
[-73.40969086 112.11226654]
[-58.47538757 110.70996094]
[-51.69780731 99.70718384]
[-39.63265991 94.55873108]
[-26.61811256 97.36043549]
[-17.47616196 107.30439758]
[-2.51591396 106.21308136]
[12.44433498 105.12177277]
[27.40458298 104.03046417]
[42.36483383 102.93915558]
[57.22787857 100.91681671]
[71.93583679 97.97133636]
[86.64379883 95.02585602]
[96.85728455 84.04019165]
[98.72489166 69.15690613]
[100.59250641 54.27362823]
[102.46012115 39.39035034]
[104.32773590 24.50706863]
[106.19535065 9.62378979]
[107.75292969 -5.29512262]
[108.99980164 -20.24320984]
[94.53339386 -24.39161110]
[81.15440369 -31.28282928]
[69.37709045 -40.65198517]
[59.65413284 -52.13895035]
[52.35926437 -65.30220032]
[47.77288055 -79.63577271]
[46.07126236 -94.58872223]
[47.31982040 -109.58629608]
[51.47056198 -124.05204010]
[58.36394501 -137.42991638]
[67.73500824 -149.20570374]
[79.22354889 -158.92680359]
[92.38797760 -166.21954346]
[106.72229004 -170.80360413]
[121.67551422 -172.50280762]
[136.67289734 -171.25181580]
[151.13795471 -167.09873962]
[164.51470947 -160.20318604]
[176.28900146 -150.83021545]
[186.00823975 -139.34010315]
[193.29884338 -126.17449951]
[197.88058472 -111.83943939]
[199.57736206 -96.88594055]
[198.32394409 -81.88877106]
[194.16851807 -67.42437744]
[187.27081299 -54.04873276]
[177.89593506 -42.27597046]
[166.40425110 -32.55859375]
[153.23745728 -25.27011681]
[138.90167236 -20.69069099]
[123.94789124 -18.99633598]
[122.70101929 -4.04824829]
[125.09026337 0.15496416]
[124.81917572 5.91324615]
[121.07862854 11.49140263]
[119.21101379 26.37468147]
[117.34339905 41.25796127]
[115.47579193 56.14124298]
[113.60817719 71.02452087]
[111.74056244 85.90779877]
[114.68269348 103.75081635]
[125.12250519 114.52162933]
[135.56231689 125.29243469]
[146.00212097 136.06324768]
[156.44194031 146.83404541]
[171.60249329 151.35826111]
[174.90470886 165.88218689]
[185.34452820 176.65299988]
[195.78433228 187.42379761]
[206.22415161 198.19461060]
[218.45268250 189.45845032]
[231.84674072 182.64253235]
[246.10710144 177.89910889]
[260.91516113 175.33416748]
[275.94012451 175.00498962]
[290.84631348 176.91896057]
[305.30072021 181.03329468]
[318.98040771 187.25608826]
[331.57983398 195.44831848]
[342.81744385 205.42697144]
[352.44223022 216.96911621]
[360.23916626 229.81689453]
[366.03405762 243.68328857]
[369.69744873 258.25851440]
[371.14749146 273.21694946]
[370.35180664 288.22442627]
[367.32815552 302.94567871]
[362.14410400 317.05181885]
[354.91543579 330.22772217]
[345.80368042 342.17901611]
[335.01235962 352.63870239]
[322.78256226 361.37310791]
[309.38754272 368.18713379]
[295.12652588 372.92852783]
[280.31808472 375.49136353]
[265.29309082 375.81838989]
[250.38716125 373.90231323]
[235.93334961 369.78591919]
[222.25451660 363.56115723]
[209.65628052 355.36712646]
[198.42007446 345.38687134]
[188.79693604 333.84338379]
[181.00183105 320.99447632]
[175.20890808 307.12725830]
[171.54759216 292.55151367]
[170.09968567 277.59286499]
[170.89750671 262.58551025]
[173.92324829 247.86466980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 112]
[3 111]
[4 110]
[5 109]
[7 107]
[8 106]
[9 105]
[10 104]
[11 103]
[12 54]
[13 53]
[14 52]
[21 51]
[22 50]
[23 49]
[24 48]
[25 47]
[28 43]
[29 42]
[30 41]
[55 102]
[56 101]
[57 100]
[58 99]
[59 98]
[60 97]
[61 94]
[62 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
