%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAUCGUCCUAGAAUUAAUUCCCCUAAAAAUCUUUGAAAUAGGGCCCGUAUUUACCCUAUAGxxxxxxxxxxCUACAAACAACUAACCUGCCACUAAUAGUUAUGUCAUCCCUCUUAUUAAUCAUCAUCCUAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[105.70552063 597.21209717]
[105.70552063 582.21209717]
[105.70552063 567.21209717]
[105.70552063 552.21209717]
[105.70552063 537.21209717]
[105.70552063 522.21209717]
[105.70552063 507.21209717]
[105.70552063 492.21209717]
[105.70552063 477.21209717]
[105.70552063 462.21209717]
[91.59416962 458.95098877]
[78.56147766 452.61596680]
[67.26791382 443.52438354]
[58.28664398 432.13330078]
[52.07444000 419.01663208]
[48.94846725 404.83615112]
[49.07007217 390.30822754]
[52.43647003 376.16741943]
[58.88071442 363.12957764]
[68.07997131 351.85543823]
[79.57168579 342.91717529]
[92.77685547 336.76943970]
[107.02918243 333.72610474]
[107.33716583 318.72927856]
[107.64514160 303.73242188]
[107.95311737 288.73559570]
[108.26109314 273.73876953]
[108.56907654 258.74191284]
[93.13228607 254.47682190]
[79.30017090 246.38359070]
[68.00405884 235.00079346]
[60.00615692 221.08869934]
[55.84812927 205.57849121]
[55.81440735 189.50994873]
[59.91274261 173.96176147]
[67.87332153 159.97909546]
[79.16650391 148.50329590]
[93.03810120 140.30862427]
[108.55969238 135.94989014]
[108.25171661 120.95305634]
[84.27722168 111.99488068]
[86.36449432 89.79356384]
[79.54092407 76.43546295]
[72.71734619 63.07736206]
[65.89376831 49.71926498]
[52.72562790 40.94939423]
[53.82630157 26.09551430]
[45.28584290 13.76423073]
[35.18040848 2.67909670]
[25.07497597 -8.40603733]
[14.96954060 -19.49117088]
[4.86410570 -30.57630539]
[-5.24132872 -41.66143799]
[-20.22726631 -38.29732895]
[-34.88273239 -42.89220810]
[-45.26547623 -54.21007538]
[-48.58259964 -69.20648193]
[-43.94180298 -83.84747314]
[-32.59144592 -94.19469452]
[-17.58471298 -97.46479034]
[-2.95834017 -92.77812958]
[7.35325003 -81.39539337]
[10.57629204 -66.37847900]
[5.84380484 -51.76687241]
[15.94923973 -40.68173981]
[26.05467415 -29.59660530]
[36.16011047 -18.51147270]
[46.26554489 -7.42633820]
[56.37097931 3.65879583]
[54.30146027 -11.19775486]
[58.34611511 -25.64215660]
[67.82987976 -37.26361084]
[81.16989899 -44.12246704]
[96.13969421 -45.07396698]
[110.24076080 -39.95930481]
[121.11962128 -29.63213158]
[126.96054840 -15.81607151]
[126.78869629 -0.81705576]
[120.63272858 12.86154652]
[109.52011108 22.93674660]
[95.30554962 27.72697067]
[80.36148834 26.43272018]
[67.18440247 19.27193832]
[79.86447906 27.08634567]
[79.25186920 42.89568710]
[86.07544708 56.25378799]
[92.89902496 69.61188507]
[99.72259521 82.96998596]
[112.15566254 84.40119934]
[121.92343140 94.85369873]
[134.42747498 86.56822968]
[146.93150330 78.28275299]
[159.43554688 69.99727631]
[171.93957520 61.71180344]
[169.81311035 46.59754181]
[174.46324158 32.06003952]
[184.96669006 20.98572540]
[199.23797607 15.57341385]
[214.44354248 16.89772415]
[227.56428528 24.69571495]
[235.99510193 37.41908646]
[238.06202698 52.54160309]
[233.35467529 67.06068420]
[222.80770874 78.09355164]
[208.51521301 83.44961548]
[193.31498718 82.06543732]
[180.22505188 74.21583557]
[167.72102356 82.50131226]
[155.21697998 90.78678894]
[142.71295166 99.07226562]
[130.20890808 107.35773468]
[123.24855042 120.64508057]
[123.55653381 135.64192200]
[137.27476501 138.64920044]
[149.96212769 144.65281677]
[160.97390747 153.34375000]
[169.75140381 164.27656555]
[175.85026550 176.89219666]
[178.96302795 190.54650879]
[178.93460083 204.54322815]
[175.76995850 218.16944885]
[169.63372803 230.73190308]
[160.84162903 241.59225464]
[149.84423828 250.19956970]
[137.20388794 256.11822510]
[123.56591034 259.04989624]
[123.25793457 274.04672241]
[122.94995880 289.04357910]
[122.64197540 304.04040527]
[122.33399963 319.03726196]
[122.02602386 334.03408813]
[137.06819153 338.02191162]
[150.71844482 345.47634888]
[162.19175720 355.96398926]
[170.82940674 368.87707520]
[176.13684082 383.46875000]
[177.81195068 398.89633179]
[175.76228333 414.26983643]
[170.11010742 428.70339966]
[161.18521118 441.36642456]
[149.50555420 451.53112793]
[135.74726868 458.61459351]
[120.70552063 462.21209717]
[120.70552063 477.21209717]
[120.70552063 492.21209717]
[120.70552063 507.21209717]
[120.70552063 522.21209717]
[120.70552063 537.21209717]
[120.70552063 552.21209717]
[120.70552063 567.21209717]
[120.70552063 582.21209717]
[120.70552063 597.21209717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[23 131]
[24 130]
[25 129]
[26 128]
[27 127]
[28 126]
[39 113]
[40 112]
[42 88]
[43 87]
[44 86]
[45 85]
[47 83]
[48 69]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[90 111]
[91 110]
[92 109]
[93 108]
[94 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
