%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUAUGUCGCAGUAUCUGUCUUUGAUUCCUGCCUCAUCCUAUUAUUUAUCGCACCUACGUUxxxxxxxxxxCCCCCGAAACCAGACGAGCUACCUAAGAACAGCUAAAAGAGCACACCCGUCUAUGUAGCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[121.54479980 255.61573792]
[121.54479980 240.61573792]
[121.54479980 225.61573792]
[121.54479980 210.61573792]
[121.54479980 195.61573792]
[121.54479980 180.61573792]
[121.54479980 165.61573792]
[121.54479980 150.61573792]
[121.54479980 135.61573792]
[121.54479980 120.61574554]
[106.53284454 126.82805634]
[91.77468109 124.03633881]
[81.85353851 114.45096588]
[67.72872925 119.49972534]
[53.60393143 124.54847717]
[46.78731155 138.55461121]
[32.39083099 143.47354126]
[19.08014297 136.88862610]
[4.95534039 141.93739319]
[-9.16946316 146.98614502]
[-23.29426575 152.03489685]
[-34.84267426 166.33923340]
[-51.96010590 162.59844971]
[-65.97681427 167.93995667]
[-79.99353027 173.28146362]
[-84.94922638 188.11302185]
[-98.30601501 196.24508667]
[-113.75721741 193.83793640]
[-124.00724792 182.02815247]
[-124.21636963 166.39196777]
[-114.28582764 154.31230164]
[-98.90452576 151.49281311]
[-85.33504486 159.26475525]
[-71.31832886 153.92324829]
[-57.30161667 148.58172607]
[-52.04244614 137.64334106]
[-40.35601807 133.09950256]
[-28.34302139 137.91009521]
[-14.21821880 132.86134338]
[-0.09341609 127.81258392]
[14.03138733 122.76382446]
[20.15205956 109.23338318]
[34.40469742 103.91201019]
[48.55517197 110.42367554]
[62.67997742 105.37492371]
[76.80477905 100.32616425]
[92.04560852 74.71321106]
[124.68685150 83.27437592]
[121.58853149 68.59785461]
[108.97177887 55.22634125]
[114.98622894 38.76953888]
[111.58325195 24.16064644]
[101.28961182 35.07123947]
[86.32520294 34.03860474]
[77.62778473 21.81751823]
[81.55447388 7.34060240]
[95.23517609 1.18931174]
[108.66999817 7.85922575]
[106.80238342 -7.02405453]
[104.93477631 -21.90733337]
[89.96129608 -23.65618515]
[75.84169769 -28.93826485]
[63.39686966 -37.44647598]
[53.35033798 -48.68616867]
[46.28619766 -62.00387573]
[42.61514282 -76.62532806]
[42.55060959 -91.70044708]
[46.09634399 -106.35279083]
[53.04620743 -119.73049164]
[62.99614334 -131.05578613]
[75.36767578 -139.67022705]
[89.44152832 -145.07299805]
[104.39948273 -146.94998169]
[119.37189484 -145.19204712]
[133.48829651 -139.90141296]
[145.92796326 -131.38566589]
[155.96766663 -120.13987732]
[163.02374268 -106.81789398]
[166.68592834 -92.19422150]
[166.74131775 -77.11906433]
[163.18670654 -62.46887207]
[156.22872925 -49.09538651]
[146.27192688 -37.77613068]
[133.89518738 -29.16918373]
[119.81805420 -23.77494812]
[121.68566895 -8.89166737]
[123.55327606 5.99161243]
[126.19214630 20.75766754]
[129.59512329 35.36656189]
[139.72459412 42.05245209]
[142.65135193 54.24478912]
[136.26506042 65.49953461]
[139.36337280 80.17605591]
[151.25575256 89.31779480]
[166.23547363 88.53794861]
[181.21519470 87.75810242]
[195.95298767 84.96577454]
[210.17977905 80.21195984]
[224.40655518 75.45814514]
[238.63333130 70.70433044]
[241.62283325 55.63919067]
[251.75643921 44.09772491]
[266.30828857 39.18453217]
[281.36398315 42.22123718]
[292.87362671 52.39097977]
[297.74118042 66.95815277]
[294.65728760 82.00425720]
[284.45153809 93.48196411]
[269.86917114 98.30383301]
[254.83280945 95.17280579]
[243.38714600 84.93111420]
[229.16036987 89.68492889]
[214.93359375 94.43874359]
[200.70680237 99.19255829]
[215.11972046 103.34801483]
[226.66896057 112.91959381]
[233.42784119 126.31053925]
[234.26884460 141.28694153]
[229.05166626 155.35040283]
[218.64663696 166.15483093]
[204.78956604 171.89778137]
[189.79211426 171.62121582]
[176.15620422 165.37127686]
[166.15660095 154.19058228]
[161.46145630 139.94433594]
[162.85404968 125.00911713]
[170.10203552 111.87646484]
[181.99502563 102.73781586]
[167.01531982 103.51766205]
[152.03559875 104.29750824]
[165.55541992 110.79478455]
[180.49263000 112.16573334]
[192.42301941 121.25781250]
[197.70611572 135.29664612]
[194.72982788 149.99839783]
[184.40234375 160.87696838]
[169.87500000 164.61282349]
[155.58071899 160.06600952]
[145.88127136 148.62394714]
[143.73617554 133.77947998]
[136.54479980 120.61574554]
[136.54479980 135.61573792]
[136.54479980 150.61573792]
[136.54479980 165.61573792]
[136.54479980 180.61573792]
[136.54479980 195.61573792]
[136.54479980 210.61573792]
[136.54479980 225.61573792]
[136.54479980 240.61573792]
[136.54479980 255.61573792]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[13 46]
[14 45]
[15 44]
[18 41]
[19 40]
[20 39]
[21 38]
[23 35]
[24 34]
[25 33]
[48 93]
[49 92]
[51 89]
[52 88]
[58 87]
[59 86]
[60 85]
[94 130]
[95 129]
[96 128]
[97 114]
[98 113]
[99 112]
[100 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
