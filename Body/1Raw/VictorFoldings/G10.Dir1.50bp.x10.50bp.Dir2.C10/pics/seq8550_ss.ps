%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUACACCCCUUAUCCCCAUACUAGUUAUUAUCGAAACCAUCAGCCUACUCAUUCAACCAxxxxxxxxxxUACAACCGUAUCGGCGAUAUCGGUUUCAUCCUCGCCUUAGCAUGAUUUAUCCUACACUCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[91.41677094 118.16197968]
[82.90567780 130.51354980]
[74.39459229 142.86512756]
[65.88349915 155.21670532]
[57.89358521 167.91163635]
[50.43867493 180.92793274]
[42.98376465 193.94424438]
[35.52885437 206.96055603]
[35.38432312 222.78109741]
[22.34487152 229.97985840]
[22.94278717 246.36810303]
[8.90725708 254.84960938]
[-5.32316780 246.69932556]
[-5.10944700 230.30157471]
[9.32856274 222.52494812]
[8.93986702 207.63540649]
[22.51254272 199.50564575]
[29.96745300 186.48933411]
[37.42236328 173.47302246]
[44.87727356 160.45672607]
[44.22335434 157.66751099]
[44.67147064 154.44366455]
[46.39582062 151.21743774]
[49.40593338 148.47694397]
[53.53192902 146.70561218]
[62.04301834 134.35403442]
[70.55410767 122.00246429]
[79.06520081 109.65089417]
[70.10856628 121.68329620]
[59.92360306 132.69540405]
[48.62573242 142.56242371]
[36.34298706 151.17254639]
[23.21455574 158.42819214]
[9.38921833 164.24713135]
[-4.97635126 168.56341553]
[-19.71935844 171.32815552]
[-34.67272568 172.50999451]
[-49.66699982 172.09556580]
[-64.53225708 170.08953857]
[-79.10003662 166.51466370]
[-93.20526123 161.41145325]
[-106.68806458 154.83772278]
[-119.39567566 146.86799622]
[-131.18406677 137.59255981]
[-141.91966248 127.11653900]
[-151.48080444 115.55865479]
[-159.75912476 103.04988861]
[-166.66082764 89.73197937]
[-172.10769653 75.75586700]
[-176.03799438 61.27993393]
[-178.40718079 46.46821976]
[-179.18843079 31.48857689]
[-178.37286377 16.51076508]
[-175.96974182 1.70451605]
[-172.00628662 -12.76237774]
[-166.52742004 -26.72597313]
[-159.59521484 -40.02802658]
[-151.28825378 -52.51779938]
[-141.70066833 -64.05374908]
[-130.94110107 -74.50514221]
[-119.13147736 -83.75354004]
[-106.40564728 -91.69414520]
[-92.90780640 -98.23696136]
[-78.79093170 -103.30784607]
[-64.21500397 -106.84932709]
[-49.34518433 -108.82128906]
[-34.35000229 -109.20137024]
[-19.39937973 -107.98526764]
[-4.66274738 -105.18675995]
[9.69289589 -100.83756256]
[23.50486565 -94.98696136]
[36.61663818 -87.70126343]
[48.87962341 -79.06302643]
[60.15485764 -69.17014313]
[70.31455994 -58.13472366]
[79.24360657 -46.08183289]
[86.84078979 -33.14805222]
[93.02004242 -19.47995186]
[97.71131134 -5.23242807]
[100.86145020 9.43306255]
[102.43476105 24.35032463]
[102.41340637 39.35031128]
[100.79763031 54.26303101]
[97.60545349 68.92055511]
[108.26708221 58.36926270]
[118.92870331 47.81797028]
[129.59033203 37.26668167]
[140.25195312 26.71539116]
[150.80325317 16.05376434]
[161.24305725 5.28295612]
[171.68287659 -5.48785210]
[182.12268066 -16.25866127]
[188.80493164 -31.84018898]
[205.62734985 -29.73248863]
[208.25892639 -12.98402214]
[192.89349365 -5.81884813]
[182.45368958 4.95196009]
[172.01387024 15.72276878]
[161.57405090 26.49357796]
[159.16146851 33.53098297]
[150.80325317 37.37701797]
[140.14161682 47.92830658]
[129.47999573 58.47959900]
[118.81836700 69.03089142]
[108.15674591 79.58217621]
[113.20549774 93.70697784]
[128.13980103 95.10928345]
[143.07411194 96.51158905]
[158.00842285 97.91389465]
[162.01515198 95.88716125]
[166.04872131 95.33816528]
[169.62939453 96.08687592]
[172.38905334 97.81266022]
[174.10803223 100.10447693]
[188.87408447 102.74333954]
[204.10488892 96.66429901]
[216.81565857 107.02616882]
[213.93064880 123.16954803]
[198.41770935 128.48751831]
[186.23522949 117.50939941]
[171.46916199 114.87053680]
[156.60612488 112.84819794]
[141.67181396 111.44589233]
[126.73750305 110.04359436]
[111.80319977 108.64128876]
[124.23698425 117.03181458]
[136.67077637 125.42234039]
[151.57614136 127.10462189]
[165.67674255 132.22058105]
[178.19309998 140.48742676]
[188.43331909 151.44816589]
[195.83134460 164.49690247]
[199.97819519 178.91229248]
[200.64465332 193.89747620]
[197.79386902 208.62408447]
[191.58343506 222.27804565]
[182.35665894 234.10456848]
[170.62358093 243.44989014]
[157.03282166 249.79740906]
[142.33564758 252.79623413]
[127.34450531 252.28060913]
[112.88811493 248.27903748]
[99.76560211 241.01269531]
[88.70236969 230.88328552]
[80.30998993 218.45074463]
[75.05239105 204.40234375]
[73.22019958 189.51466370]
[74.91470337 174.61068726]
[80.04223633 160.51428223]
[88.32172394 148.00190735]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[4 25]
[5 20]
[6 19]
[7 18]
[8 17]
[10 15]
[84 105]
[85 104]
[86 103]
[87 102]
[88 101]
[89 99]
[90 98]
[91 97]
[92 96]
[106 125]
[107 124]
[108 123]
[109 122]
[114 121]
[115 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
