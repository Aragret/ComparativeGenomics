%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUUUCAACUACAAGAACACCAAUGACCCCAAUACGCAAAACUAACCCCCUAAUAAAAUUAxxxxxxxxxxCAGAGAAAAAGUCUUUAACUCCACCAUUAGCACCCAAAGCUAAGAUUCUAAUUUAAACUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[89.32263947 451.65100098]
[89.32263947 436.65100098]
[89.32263947 421.65100098]
[89.32263947 406.65100098]
[89.32263947 391.65100098]
[89.32263947 376.65100098]
[89.32263947 361.65100098]
[89.32263947 346.65100098]
[89.32263947 331.65100098]
[89.32263947 316.65100098]
[75.20993805 313.38940430]
[62.17615891 307.05337524]
[50.88195801 297.96029663]
[41.90063858 286.56741333]
[35.68906021 273.44888306]
[32.56441116 259.26666260]
[32.68800735 244.73730469]
[36.05696106 230.59564209]
[42.50416183 217.55766296]
[51.70656967 206.28424072]
[63.20138550 197.34764099]
[76.40933990 191.20248413]
[90.66386414 188.16259766]
[90.97592163 173.16584778]
[91.28797913 158.16909790]
[91.60003662 143.17233276]
[73.45580292 135.06872559]
[60.73018265 119.80635071]
[56.02091980 100.50079346]
[60.28934860 81.09300995]
[72.66412354 65.54480743]
[65.48161316 52.37622452]
[52.08100891 43.96586227]
[52.77937698 29.08763695]
[45.59686661 15.91905403]
[38.41436005 2.75047159]
[24.50991058 8.42024422]
[10.05806828 12.49753094]
[-4.75942087 14.93105698]
[-19.75621033 15.69021606]
[-34.74369812 14.76546288]
[-49.53340530 12.16842556]
[-63.93933105 7.93176603]
[-77.78031158 2.10876393]
[-90.88227081 -5.22735023]
[-103.08045197 -13.98431683]
[-114.22143555 -24.05200768]
[-124.16512299 -35.30381012]
[-132.78646851 -47.59822464]
[-139.97702026 -60.78063202]
[-145.64637756 -74.68524933]
[-149.72323608 -89.13721466]
[-152.15631104 -103.95477295]
[-152.91502380 -118.95158386]
[-151.98982239 -133.93904114]
[-149.39234924 -148.72868347]
[-145.15525818 -163.13447571]
[-139.33183289 -176.97528076]
[-131.99533081 -190.07702637]
[-123.23800659 -202.27494812]
[-113.16997528 -213.41563416]
[-101.91787720 -223.35897827]
[-89.62320709 -231.97994995]
[-76.44058228 -239.17012024]
[-62.53579712 -244.83905029]
[-48.08370972 -248.91548157]
[-33.26607895 -251.34811401]
[-18.26924324 -252.10638428]
[-3.28180861 -251.18072510]
[11.50774193 -248.58280945]
[25.91341591 -244.34529114]
[39.75404358 -238.52145386]
[52.85556793 -231.18455505]
[65.05322266 -222.42686462]
[76.19361115 -212.35850525]
[86.13662720 -201.10610962]
[94.75722504 -188.81117249]
[101.94699860 -175.62834167]
[107.61552429 -161.72338867]
[111.69151306 -147.27117920]
[114.12371063 -132.45347595]
[114.88152313 -117.45661163]
[113.95542145 -102.46920776]
[111.35706329 -87.67973328]
[107.11911011 -73.27418518]
[101.29486084 -59.43373108]
[93.95757294 -46.33242416]
[85.19951630 -34.13503265]
[75.13082123 -22.99494743]
[63.87812805 -13.05226994]
[51.58294296 -4.43203735]
[58.76544952 8.73654556]
[65.94795990 21.90512848]
[78.83482361 29.37358856]
[78.65019989 45.19371796]
[85.83271027 58.36230087]
[92.80589294 56.61042786]
[99.97132874 56.01807785]
[107.13753510 56.60108566]
[114.11299896 58.34386444]
[120.71131134 61.19984818]
[126.75614166 65.09270477]
[132.08595276 69.91841888]
[136.55831909 75.54801178]
[140.05371094 81.83105469]
[142.47872925 88.59963226]
[143.76855469 95.67287445]
[158.72880554 96.76418304]
[173.68905640 97.85549164]
[188.64929199 98.94680023]
[203.60954285 100.03811646]
[214.37557983 88.69674683]
[229.91868591 86.98040009]
[242.89988708 95.69948578]
[247.18986511 110.73711395]
[240.76300049 124.99297333]
[226.65388489 131.73588562]
[211.52441406 127.78205872]
[202.51823425 114.99835968]
[187.55798340 113.90705109]
[172.59773254 112.81574249]
[157.63749695 111.72443390]
[142.67724609 110.63311768]
[135.37727356 126.13156891]
[122.70981598 137.66529846]
[106.59678650 143.48439026]
[106.28473663 158.48115540]
[105.97267914 173.47790527]
[105.66062164 188.47465515]
[120.70042419 192.46603394]
[134.34771729 199.92308044]
[145.81776428 210.41226196]
[154.45217896 223.32588196]
[159.75665283 237.91719055]
[161.42933655 253.34364319]
[159.37792969 268.71554565]
[153.72477722 283.14727783]
[144.79965210 295.80844116]
[133.12043762 305.97158813]
[119.36312103 313.05395508]
[104.32263947 316.65100098]
[104.32263947 331.65100098]
[104.32263947 346.65100098]
[104.32263947 361.65100098]
[104.32263947 376.65100098]
[104.32263947 391.65100098]
[104.32263947 406.65100098]
[104.32263947 421.65100098]
[104.32263947 436.65100098]
[104.32263947 451.65100098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[23 129]
[24 128]
[25 127]
[26 126]
[31 96]
[32 95]
[34 93]
[35 92]
[36 91]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
