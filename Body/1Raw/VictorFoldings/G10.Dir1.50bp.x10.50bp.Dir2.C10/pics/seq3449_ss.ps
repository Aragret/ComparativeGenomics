%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAACUCUUCACCAAAGAGCCCCUAAAACCCGCCACAUCUACCAUCACCCUCUACAUCACCxxxxxxxxxxAUAACAAGCUCCAUCUGCCUACGACAAACAGACCUAAAAUCGCUCAUUGCAUACUCUUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 296.61566162]
[92.50000000 281.61566162]
[92.50000000 266.61566162]
[92.50000000 251.61564636]
[92.50000000 236.61564636]
[92.50000000 221.61564636]
[92.50000000 206.61564636]
[92.50000000 191.61564636]
[92.50000000 176.61564636]
[92.50000000 161.61564636]
[77.97521210 158.03143311]
[64.72989655 151.07600403]
[53.53352737 141.15342712]
[45.03652191 128.84014893]
[39.73249435 114.85145569]
[37.92957306 100.00000000]
[39.73249435 85.14854431]
[45.03652191 71.15985870]
[53.53352737 58.84656906]
[64.72989655 48.92399597]
[77.97521210 41.96857071]
[92.50000000 38.38435364]
[92.50000000 23.38435173]
[92.50000000 8.38435268]
[84.76270294 -5.41581964]
[92.50000000 -18.14309120]
[92.50000000 -33.14309311]
[92.50000000 -48.14309311]
[92.50000000 -63.14309311]
[77.52785492 -64.14517212]
[62.65607834 -66.14505005]
[47.95109177 -69.13378906]
[33.47856522 -73.09804535]
[19.30314445 -78.02011108]
[5.48813915 -83.87799835]
[-7.90475035 -90.64555359]
[-20.81570816 -98.29254150]
[-33.18706894 -106.78481293]
[-44.96357727 -116.08444214]
[-56.09263992 -126.14989471]
[-66.52455139 -136.93620300]
[-76.21271515 -148.39520264]
[-85.11386108 -160.47572327]
[-93.18824005 -173.12379456]
[-100.39978790 -186.28292847]
[-106.71629333 -199.89436340]
[-112.10954285 -213.89729309]
[-116.55545807 -228.22918701]
[-120.03417206 -242.82601929]
[-122.53015137 -257.62261963]
[-124.03225708 -272.55288696]
[-124.53376770 -287.55014038]
[-124.03244019 -302.54742432]
[-122.53053284 -317.47769165]
[-120.03473663 -332.27432251]
[-116.55620575 -346.87121582]
[-112.11047363 -361.20315552]
[-106.71739197 -375.20617676]
[-100.40106201 -388.81768799]
[-93.18968201 -401.97689819]
[-85.11546326 -414.62506104]
[-76.21446228 -426.70568848]
[-66.52644348 -438.16482544]
[-56.09466934 -448.95126343]
[-44.96573257 -459.01684570]
[-33.18933868 -468.31661987]
[-20.81808662 -476.80905151]
[-7.90722561 -484.45620728]
[5.48557901 -491.22393799]
[19.30051231 -497.08200073]
[33.47587204 -502.00424194]
[47.94834518 -505.96868896]
[62.65329742 -508.95761108]
[77.52504730 -510.95767212]
[92.49717712 -511.95993042]
[107.50282288 -511.95993042]
[122.47495270 -510.95767212]
[137.34671021 -508.95761108]
[152.05165100 -505.96868896]
[166.52412415 -502.00424194]
[180.69949341 -497.08200073]
[194.51441956 -491.22393799]
[207.90722656 -484.45620728]
[220.81808472 -476.80905151]
[233.18934631 -468.31661987]
[244.96572876 -459.01684570]
[256.09466553 -448.95126343]
[266.52642822 -438.16482544]
[276.21447754 -426.70568848]
[285.11544800 -414.62506104]
[293.18966675 -401.97689819]
[300.40106201 -388.81768799]
[306.71740723 -375.20617676]
[312.11047363 -361.20315552]
[316.55621338 -346.87121582]
[320.03472900 -332.27432251]
[322.53051758 -317.47769165]
[324.03244019 -302.54742432]
[324.53375244 -287.55014038]
[324.03225708 -272.55288696]
[322.53015137 -257.62261963]
[320.03417969 -242.82601929]
[316.55545044 -228.22918701]
[312.10955811 -213.89729309]
[306.71627808 -199.89436340]
[300.39978027 -186.28292847]
[293.18823242 -173.12379456]
[285.11386108 -160.47572327]
[276.21270752 -148.39520264]
[266.52453613 -136.93620300]
[256.09265137 -126.14989471]
[244.96357727 -116.08444214]
[233.18707275 -106.78481293]
[220.81570435 -98.29254150]
[207.90475464 -90.64555359]
[194.51185608 -83.87799835]
[180.69685364 -78.02011108]
[166.52143860 -73.09804535]
[152.04890442 -69.13378906]
[137.34391785 -66.14505005]
[122.47214508 -64.14517212]
[107.50000000 -63.14309311]
[107.50000000 -48.14309311]
[107.50000000 -33.14309311]
[107.50000000 -18.14309120]
[115.23729706 -5.41581964]
[107.50000000 8.38435268]
[107.50000000 23.38435173]
[107.50000000 38.38435364]
[122.02478790 41.96857071]
[135.27009583 48.92399597]
[146.46647644 58.84656906]
[154.96348572 71.15985870]
[160.26750183 85.14854431]
[162.07043457 100.00000000]
[160.26750183 114.85145569]
[154.96348572 128.84014893]
[146.46647644 141.15342712]
[135.27009583 151.07600403]
[122.02478790 158.03143311]
[107.50000000 161.61564636]
[107.50000000 176.61564636]
[107.50000000 191.61564636]
[107.50000000 206.61564636]
[107.50000000 221.61564636]
[107.50000000 236.61564636]
[107.50000000 251.61564636]
[107.50000000 266.61566162]
[107.50000000 281.61566162]
[107.50000000 296.61566162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[22 129]
[23 128]
[24 127]
[26 125]
[27 124]
[28 123]
[29 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
