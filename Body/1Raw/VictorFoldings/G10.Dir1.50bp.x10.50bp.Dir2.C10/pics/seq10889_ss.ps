%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCCUCAGCCAUAGAAGGCCCCACCCCAGUCUCAGCCCUACUCCACUCAAGCACUAUAGUUxxxxxxxxxxUACAGCAAUCAACCCUCAACUAUCACACAUCAACUGCAACUCCAAAGCCACCCCUCACCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[157.28637695 75.76808929]
[146.28808594 65.56304169]
[135.51939392 76.00505066]
[124.75072479 86.44705963]
[113.98204041 96.88906860]
[109.97138214 110.28333282]
[96.45996857 113.87960815]
[85.69129181 124.32161713]
[74.92260742 134.76362610]
[64.15393066 145.20564270]
[53.38525009 155.64764404]
[42.61657333 166.08966064]
[41.62661743 178.99018860]
[32.39051056 187.46754456]
[20.25584984 187.35694885]
[9.27504730 197.57566833]
[10.25806141 213.18231201]
[0.93776798 225.73883057]
[-14.28507519 229.31640625]
[-28.22270775 222.22583008]
[-34.29420471 207.81503296]
[-29.63279152 192.88836670]
[-16.43944550 184.49375916]
[-0.94366002 186.59486389]
[10.03714275 176.37614441]
[14.23916626 159.36476135]
[32.17456436 155.32098389]
[42.94324112 144.87896729]
[53.71192169 134.43696594]
[64.48059845 123.99494934]
[75.24927521 113.55294037]
[86.01795959 103.11093140]
[90.02861786 89.71666718]
[103.54003143 86.12039185]
[114.30870819 75.67838287]
[125.07739258 65.23637390]
[135.84606934 54.79436111]
[125.98455811 43.48702240]
[116.73353577 31.67499542]
[108.11878967 19.39120102]
[100.16433716 6.66987944]
[92.89233398 -6.45351410]
[86.32306671 -19.94240189]
[80.47483826 -33.75918579]
[75.36393738 -47.86536026]
[71.00462341 -62.22160721]
[67.40904236 -76.78791046]
[64.58721924 -91.52367401]
[62.54700851 -106.38782501]
[61.29410934 -121.33892822]
[60.83200455 -136.33532715]
[61.16198349 -151.33520508]
[62.28313065 -166.29676819]
[64.19231415 -181.17831421]
[66.88422394 -195.93836975]
[70.35134888 -210.53578186]
[74.58402252 -224.92987061]
[79.57045746 -239.08052063]
[85.29674530 -252.94828796]
[91.74693298 -266.49453735]
[98.90304565 -279.68145752]
[106.74512482 -292.47238159]
[115.25132751 -304.83157349]
[124.39793396 -316.72463989]
[134.15945435 -328.11840820]
[144.50868225 -338.98114014]
[155.41677856 -349.28253174]
[166.85333252 -358.99389648]
[178.78646851 -368.08816528]
[191.18293762 -376.53997803]
[204.00816345 -384.32580566]
[217.22642517 -391.42388916]
[230.80087280 -397.81451416]
[244.69366455 -403.47979736]
[258.86608887 -408.40402222]
[273.27862549 -412.57339478]
[287.89114380 -415.97634888]
[302.66287231 -418.60339355]
[317.55267334 -420.44717407]
[332.51901245 -421.50256348]
[347.52020264 -421.76663208]
[362.51440430 -421.23864746]
[377.45986938 -419.92007446]
[392.31491089 -417.81457520]
[407.03814697 -414.92803955]
[421.58850098 -411.26849365]
[435.92544556 -406.84613037]
[450.00903320 -401.67330933]
[463.79998779 -395.76443481]
[477.25988770 -389.13595581]
[490.35119629 -381.80636597]
[503.03744507 -373.79608154]
[515.28326416 -365.12744141]
[527.05456543 -355.82461548]
[538.31842041 -345.91351318]
[549.04357910 -335.42178345]
[559.20007324 -324.37863159]
[568.75958252 -312.81484985]
[577.69555664 -300.76269531]
[585.98291016 -288.25573730]
[593.59875488 -275.32882690]
[600.52172852 -262.01800537]
[606.73254395 -248.36036682]
[612.21392822 -234.39398193]
[616.95056152 -220.15777588]
[620.92932129 -205.69143677]
[624.13903809 -191.03527832]
[626.57086182 -176.23014832]
[628.21789551 -161.31730652]
[629.07556152 -146.33833313]
[629.14160156 -131.33497620]
[628.41564941 -116.34902954]
[626.89990234 -101.42227936]
[624.59844971 -86.59632874]
[621.51776123 -71.91250610]
[617.66644287 -57.41172409]
[613.05517578 -43.13440704]
[607.69683838 -29.12034607]
[601.60644531 -15.40860462]
[594.80084229 -2.03739810]
[587.29901123 10.95600605]
[579.12194824 23.53539276]
[570.29241943 35.66569901]
[560.83496094 47.31311798]
[550.77600098 58.44518661]
[540.14361572 69.03087616]
[528.96728516 79.04067993]
[517.27832031 88.44670105]
[505.10922241 97.22271729]
[492.49395752 105.34428406]
[479.46762085 112.78874969]
[466.06655884 119.53536987]
[452.32809448 125.56533813]
[438.29055786 130.86186218]
[423.99307251 135.41015625]
[409.47546387 139.19755554]
[394.77819824 142.21351624]
[379.94226074 144.44960022]
[365.00897217 145.89961243]
[350.01998901 146.55947876]
[335.01705933 146.42738342]
[320.04199219 145.50367737]
[305.13656616 143.79095459]
[290.34228516 141.29397583]
[275.70040894 138.01969910]
[261.25173950 133.97724915]
[247.03656006 129.17790222]
[233.09446716 123.63502502]
[219.46434021 117.36408234]
[206.18414307 110.38253021]
[193.29092407 102.70984650]
[180.82058716 94.36741638]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 37]
[3 36]
[4 35]
[5 34]
[7 32]
[8 31]
[9 30]
[10 29]
[11 28]
[12 27]
[15 25]
[16 24]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
