%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUACUAACCAACACACUAACCAUAUACCAAUGAUGGCGCGAUGUAACACGAGAAAGCACAUAxxxxxxxxxxAAUCUCAAUUACAAUAUAUACACCAACAAACAAUGUUCAACCAGUAACUACUACUAAUCAACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[228.44230652 551.42755127]
[228.13830566 536.43060303]
[227.83430481 521.43371582]
[227.53028870 506.43676758]
[227.22628784 491.43984985]
[226.92228699 476.44293213]
[226.61828613 461.44601440]
[226.31427002 446.44909668]
[226.01026917 431.45217896]
[223.58871460 416.64892578]
[212.39617920 406.82159424]
[215.64738464 391.33804321]
[211.15693665 377.02597046]
[206.66648865 362.71386719]
[202.17604065 348.40179443]
[196.96646118 334.33551025]
[191.05111694 320.55114746]
[185.13578796 306.76678467]
[169.68493652 309.97451782]
[153.89924622 309.93106079]
[138.45564270 306.63604736]
[124.01685333 300.22860718]
[111.20296478 290.98141479]
[100.56479645 279.28918457]
[92.56018829 265.65185547]
[87.53434753 250.65306091]
[85.70490265 234.93528748]
[87.15255737 219.17230225]
[91.81745148 204.04025269]
[99.50168610 190.18870544]
[109.87770844 178.21275330]
[122.50226593 168.62742615]
[116.03316498 155.09410095]
[109.56407166 141.56077576]
[103.09497070 128.02746582]
[96.62587738 114.49414062]
[84.40189362 105.80078888]
[69.49500275 104.13211823]
[54.58810425 102.46343994]
[39.78693008 109.52440643]
[26.42644691 100.01496887]
[28.25077248 83.71760559]
[43.38319778 77.39765930]
[56.25678253 87.55654144]
[71.16367340 89.22521973]
[86.07057190 90.89389801]
[91.23782349 85.45795441]
[77.70458221 78.98868561]
[79.67540741 64.11872101]
[94.42663574 61.39819717]
[101.57232666 74.58605957]
[106.73957825 69.15011597]
[104.31802368 54.34687042]
[101.89646149 39.54362488]
[99.47490692 24.74037933]
[97.05335236 9.93713379]
[85.25702667 3.36372805]
[79.50160217 -8.63671780]
[81.69483185 -21.56629562]
[90.81066895 -30.72110939]
[88.68962097 -45.57039261]
[86.56858063 -60.41967392]
[84.44754028 -75.26895142]
[69.47946167 -77.23348236]
[55.59692001 -83.16455078]
[43.83008957 -92.62204742]
[35.05214310 -104.90415955]
[29.91446304 -119.09946442]
[28.79830170 -134.15458679]
[31.78648376 -148.95233154]
[38.65726852 -162.39462280]
[48.90079498 -173.48393250]
[61.75692749 -181.39735413]
[76.27165985 -185.54768372]
[91.36788940 -185.62693787]
[105.92539215 -181.62921143]
[118.86389160 -173.85118103]
[129.22328186 -162.87002563]
[136.23480225 -149.50061035]
[139.37817383 -134.73504639]
[138.42012024 -119.66904449]
[133.43174744 -105.42057800]
[124.78322601 -93.04698944]
[113.11633301 -83.46648407]
[99.29682159 -77.38999939]
[101.41786194 -62.54071426]
[103.53890228 -47.69143295]
[105.65995026 -32.84215164]
[119.52089691 -23.36474419]
[122.32187653 -6.46704245]
[111.85659790 7.51557684]
[114.27815247 22.31882095]
[116.69970703 37.12206650]
[119.12126923 51.92531204]
[121.54282379 66.72855377]
[125.93969727 95.71239471]
[110.15919495 108.02503967]
[116.62829590 121.55836487]
[123.09738922 135.09169006]
[129.56648254 148.62500000]
[136.03558350 162.15832520]
[149.84408569 158.59002686]
[164.07055664 157.64553833]
[178.22106934 159.35604858]
[191.80455017 163.66059875]
[204.34997559 170.40824890]
[215.42256165 179.36335754]
[224.63893127 190.21382141]
[231.68037415 202.58192444]
[236.30381775 216.03753662]
[238.35026550 230.11303711]
[237.75027466 244.31958008]
[234.52622986 258.16406250]
[228.79162598 271.16622925]
[220.74697876 282.87536621]
[210.67288208 292.88589478]
[198.92015076 300.85144043]
[204.83547974 314.63580322]
[210.75082397 328.42016602]
[218.94036865 315.85308838]
[233.85052490 314.21380615]
[244.57479858 324.70141602]
[243.26860046 339.64443970]
[230.88737488 348.11233521]
[216.48812866 343.91134644]
[220.97857666 358.22341919]
[225.46902466 372.53552246]
[229.95947266 386.84759521]
[241.47319031 397.69863892]
[237.90080261 412.15847778]
[242.03421021 397.73922729]
[251.28924561 385.93481445]
[264.30569458 378.48013306]
[279.17050171 376.47082520]
[293.69897461 380.20220947]
[305.75585938 389.12585449]
[313.56915283 401.93026733]
[315.99047852 416.73355103]
[312.66400146 431.36004639]
[304.07864380 443.66009521]
[291.49615479 451.82592773]
[276.76583862 454.65744019]
[262.05258179 451.73846436]
[249.51885986 443.49795532]
[241.00718689 431.14816284]
[241.31120300 446.14508057]
[241.61520386 461.14199829]
[241.91920471 476.13891602]
[242.22320557 491.13586426]
[242.52720642 506.13278198]
[242.83122253 521.12969971]
[243.13522339 536.12658691]
[243.43922424 551.12353516]
[246.01991272 570.33264160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 153]
[2 152]
[3 151]
[4 150]
[5 149]
[6 148]
[7 147]
[8 146]
[9 145]
[10 130]
[12 128]
[13 127]
[14 126]
[15 125]
[16 119]
[17 118]
[18 117]
[32 101]
[33 100]
[34 99]
[35 98]
[36 97]
[37 46]
[38 45]
[39 44]
[52 95]
[53 94]
[54 93]
[55 92]
[56 91]
[60 88]
[61 87]
[62 86]
[63 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
