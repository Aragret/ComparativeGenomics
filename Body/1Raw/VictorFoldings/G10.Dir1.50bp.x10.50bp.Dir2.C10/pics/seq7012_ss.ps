%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUAGACAUCGUACUACACGACACGUACUACGUUGUAGCCCACUUCCACUAUGUCCUAUCAxxxxxxxxxxACCUUCCCUCUACACUUAUCAUCUUCACAAUUCUAAUUCUACUGACUAUCCUAGAAAUCGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[297.44189453 51.05186462]
[291.21130371 37.40139771]
[277.19458008 42.74290848]
[263.17788696 48.08441925]
[249.16116333 53.42593384]
[235.14445496 58.76744461]
[226.00674438 70.52973938]
[210.35594177 68.21389008]
[196.33923340 73.55540466]
[182.32252502 78.89691925]
[168.30580139 84.23842621]
[154.28909302 89.57994080]
[151.53288269 93.55219269]
[146.22387695 95.79848480]
[139.57659912 94.83876038]
[125.34981537 99.59257507]
[111.12303162 104.34639740]
[109.10638428 149.00749207]
[96.49525452 157.12904358]
[83.88412476 165.25057983]
[71.27299500 173.37213135]
[66.48599243 188.68434143]
[51.47823715 194.35417175]
[37.76240158 186.03219604]
[35.86009216 170.10232544]
[47.23060608 158.78459167]
[63.15145493 160.76100159]
[75.76258087 152.63945007]
[88.37371063 144.51791382]
[100.98484039 136.39636230]
[98.75643158 129.23507690]
[92.07120514 107.75117493]
[77.07851410 108.21921539]
[62.08581543 108.68725586]
[47.09312057 109.15530396]
[31.45036125 115.69292450]
[20.83788681 102.47128296]
[30.60499382 88.61343384]
[46.62507629 94.16260529]
[61.61777115 93.69456482]
[76.61046600 93.22652435]
[91.60316467 92.75847626]
[106.36921692 90.11961365]
[120.59600067 85.36579895]
[134.82278442 80.61198425]
[148.94758606 75.56322479]
[162.96429443 70.22171783]
[176.98100281 64.88020325]
[190.99772644 59.53869247]
[205.01443481 54.19717789]
[215.15470886 42.05282593]
[229.80293274 44.75073242]
[243.81965637 39.40922165]
[257.83636475 34.06770706]
[271.85308838 28.72619629]
[285.86978149 23.38468361]
[281.43560791 9.04962921]
[277.92901611 -5.54007196]
[275.36437988 -20.32446671]
[273.75225830 -35.24280167]
[273.09927368 -50.23377609]
[273.40811157 -65.23578644]
[274.67749023 -80.18717957]
[276.90219116 -95.02653503]
[280.07312012 -109.69285583]
[284.17718506 -124.12587738]
[289.19757080 -138.26629639]
[295.11358643 -152.05601501]
[301.90100098 -165.43835449]
[309.53186035 -178.35832214]
[317.97482300 -190.76283264]
[327.19522095 -202.60090637]
[337.15515137 -213.82389832]
[347.81365967 -224.38571167]
[359.12698364 -234.24291992]
[371.04861450 -243.35502625]
[383.52954102 -251.68458557]
[396.51852417 -259.19735718]
[409.96218872 -265.86251831]
[423.80523682 -271.65261841]
[437.99084473 -276.54388428]
[452.46066284 -280.51623535]
[467.15527344 -283.55334473]
[482.01428223 -285.64273071]
[496.97665405 -286.77578735]
[511.98083496 -286.94784546]
[526.96520996 -286.15826416]
[541.86828613 -284.41021729]
[556.62866211 -281.71093750]
[571.18579102 -278.07150269]
[585.47985840 -273.50683594]
[599.45202637 -268.03576660]
[613.04504395 -261.68069458]
[626.20288086 -254.46778870]
[638.87158203 -246.42666626]
[650.99908447 -237.59037781]
[662.53546143 -227.99522400]
[673.43341064 -217.68064880]
[683.64813232 -206.68902588]
[693.13757324 -195.06553650]
[701.86285400 -182.85792542]
[709.78802490 -170.11637878]
[716.88055420 -156.89321899]
[723.11132812 -143.24282837]
[728.45465088 -129.22126770]
[732.88867188 -114.88616180]
[736.39514160 -100.29641724]
[738.95959473 -85.51199341]
[740.57153320 -70.59364319]
[741.22436523 -55.60266495]
[740.91540527 -40.60065842]
[739.64581299 -25.64927292]
[737.42095947 -10.80994797]
[734.24987793 3.85633874]
[730.14562988 18.28931999]
[725.12512207 32.42968369]
[719.20892334 46.21932983]
[712.42138672 59.60158920]
[704.79034424 72.52147675]
[696.34722900 84.92588806]
[687.12670898 96.76386261]
[677.16668701 107.98675537]
[666.50805664 118.54843903]
[655.19464111 128.40551758]
[643.27288818 137.51750183]
[630.79187012 145.84692383]
[617.80279541 153.35955811]
[604.35906982 160.02455139]
[590.51593018 165.81451416]
[576.33032227 170.70562744]
[561.86041260 174.67782593]
[547.16577148 177.71475220]
[532.30676270 179.80397034]
[517.34436035 180.93685913]
[502.34017944 181.10876465]
[487.35577393 180.31900024]
[472.45278931 178.57080078]
[457.69241333 175.87135315]
[443.13531494 172.23175049]
[428.84130859 167.66694641]
[414.86917114 162.19569397]
[401.27627563 155.84048462]
[388.11846924 148.62742615]
[375.44985962 140.58616638]
[363.32247925 131.74974060]
[351.78616333 122.15447235]
[340.88833618 111.83977509]
[330.67376709 100.84804535]
[321.18444824 89.22444153]
[312.45932007 77.01673889]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 56]
[3 55]
[4 54]
[5 53]
[6 52]
[8 50]
[9 49]
[10 48]
[11 47]
[12 46]
[15 45]
[16 44]
[17 43]
[18 30]
[19 29]
[20 28]
[21 27]
[32 42]
[33 41]
[34 40]
[35 39]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
