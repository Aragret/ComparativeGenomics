%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCAACGCCACUUAUCCAGUGAACCACUAUCACGAAAAAAACUCUACCUCUCUAUACUAAUxxxxxxxxxxACAAGCAAGUACAGCAAUCAACCCUCAACUAUCACACAUCAACUGCAACUCCAAAGCCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 315.82177734]
[92.50000000 300.82177734]
[92.50000000 285.82177734]
[92.50000000 270.82177734]
[92.50000000 255.82177734]
[92.50000000 240.82177734]
[92.50000000 225.82177734]
[92.50000000 210.82177734]
[92.50000000 195.82177734]
[92.50000000 180.82177734]
[77.77803040 178.06788635]
[63.81266022 172.65594482]
[51.07939148 164.77024841]
[40.01176071 154.67926025]
[30.98659325 142.72656250]
[24.31117439 129.31913757]
[20.21278954 114.91345215]
[18.83097839 100.00000000]
[20.21278954 85.08654785]
[24.31117439 70.68086243]
[30.98659325 57.27343369]
[40.01176071 45.32074356]
[51.07939148 35.22975922]
[63.81266022 27.34405327]
[77.77803040 21.93211937]
[92.50000000 19.17822075]
[92.50000000 4.17822075]
[92.50000000 -10.82177925]
[92.50000000 -25.82177925]
[92.34396362 -40.82096863]
[92.03190613 -55.81772232]
[77.04419708 -56.56439209]
[62.14649582 -58.36642838]
[47.41301346 -61.21484756]
[32.91716003 -65.09545898]
[18.73115349 -69.98893738]
[4.92566442 -75.87089539]
[-8.43052578 -82.71202850]
[-21.27087784 -90.47825623]
[-33.53141785 -99.13088226]
[-45.15106964 -108.62681580]
[-56.07194138 -118.91873169]
[-66.23962402 -129.95535278]
[-75.60346222 -141.68171692]
[-84.11680603 -154.03938293]
[-91.73723602 -166.96678162]
[-98.42680359 -180.39953613]
[-104.15216827 -194.27069092]
[-108.88480377 -208.51116943]
[-112.60114288 -223.05000305]
[-115.28266144 -237.81477356]
[-116.91600800 -252.73191833]
[-117.49304199 -267.72711182]
[-117.01088715 -282.72564697]
[-115.47194672 -297.65283203]
[-112.88388062 -312.43426514]
[-109.25959778 -326.99633789]
[-104.61714172 -341.26644897]
[-98.97964478 -355.17355347]
[-92.37519836 -368.64834595]
[-84.83669281 -381.62371826]
[-76.40170288 -394.03500366]
[-67.11223602 -405.82034302]
[-57.01457596 -416.92108154]
[-46.15903473 -427.28189087]
[-34.59969330 -436.85113525]
[-22.39413452 -445.58114624]
[-9.60317230 -453.42846680]
[3.70947218 -460.35394287]
[17.47747421 -466.32312012]
[31.63224030 -471.30624390]
[46.10325241 -475.27850342]
[60.81842041 -478.22006226]
[75.70442200 -480.11630249]
[90.68711090 -480.95779419]
[105.69182587 -480.74029541]
[120.64382935 -479.46493530]
[135.46862793 -477.13803101]
[150.09234619 -473.77120972]
[164.44215393 -469.38119507]
[178.44654846 -463.98992920]
[192.03575134 -457.62420654]
[205.14208984 -450.31579590]
[217.70024109 -442.10104370]
[229.64764404 -433.02093506]
[240.92477417 -423.12069702]
[251.47546387 -412.44961548]
[261.24713135 -401.06088257]
[270.19113159 -389.01123047]
[278.26284790 -376.36068726]
[285.42211914 -363.17230225]
[291.63323975 -349.51171875]
[296.86529541 -335.44708252]
[301.09222412 -321.04840088]
[304.29290771 -306.38742065]
[306.45147705 -291.53717041]
[307.55712891 -276.57165527]
[307.60437012 -261.56542969]
[306.59298706 -246.59326172]
[304.52798462 -231.72973633]
[301.41964722 -217.04888916]
[297.28347778 -202.62387085]
[292.14010620 -188.52655029]
[286.01510620 -174.82714844]
[278.93902588 -161.59393311]
[270.94711304 -148.89282227]
[262.07916260 -136.78709412]
[252.37940979 -125.33705902]
[241.89611816 -114.59976196]
[230.68153381 -104.62869263]
[218.79154968 -95.47353363]
[206.28536987 -87.17988586]
[193.22532654 -79.78907776]
[179.67646790 -73.33792877]
[165.70629883 -67.85857391]
[151.38441467 -63.37831116]
[136.78218079 -59.91946793]
[121.97233582 -57.49927139]
[107.02866364 -56.12977600]
[107.34071350 -41.13302231]
[110.64566803 -34.46797180]
[107.50000000 -25.82177925]
[107.50000000 -10.82177925]
[107.50000000 4.17822075]
[107.50000000 19.17822075]
[122.22196960 21.93211937]
[136.18733215 27.34405327]
[148.92060852 35.22975922]
[159.98823547 45.32074356]
[169.01341248 57.27343369]
[175.68882751 70.68086243]
[179.78721619 85.08654785]
[181.16902161 100.00000000]
[179.78721619 114.91345215]
[175.68882751 129.31913757]
[169.01341248 142.72656250]
[159.98823547 154.67926025]
[148.92060852 164.77024841]
[136.18733215 172.65594482]
[122.22196960 178.06788635]
[107.50000000 180.82177734]
[107.50000000 195.82177734]
[107.50000000 210.82177734]
[107.50000000 225.82177734]
[107.50000000 240.82177734]
[107.50000000 255.82177734]
[107.50000000 270.82177734]
[107.50000000 285.82177734]
[107.50000000 300.82177734]
[107.50000000 315.82177734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[26 125]
[27 124]
[28 123]
[29 122]
[30 120]
[31 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
