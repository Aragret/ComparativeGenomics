%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCCGCUACGACCAACUCAUACACCUCCUAUGAAAAAACUUCCUACCACUCACCCUAGCAUxxxxxxxxxxACCAUAUAUUUACAGUAGGAAUAGACGUAGACACACGAGCAUAUUUCACCUCCGCUACCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[178.72854614 396.28509521]
[178.72854614 381.28509521]
[178.72854614 366.28509521]
[178.72854614 351.28509521]
[178.72854614 336.28509521]
[178.72854614 321.28509521]
[178.72854614 306.28509521]
[178.72854614 291.28509521]
[178.72854614 276.28509521]
[178.72854614 261.28509521]
[175.32557678 246.67620850]
[168.69708252 233.22024536]
[162.88230896 228.57974243]
[162.07392883 219.41468811]
[155.02879333 206.17210388]
[147.30470276 193.31369019]
[139.58061218 180.45529175]
[131.85653687 167.59689331]
[124.13244629 154.73849487]
[110.94606018 147.81257629]
[110.47243500 131.99845886]
[100.50538635 133.66477966]
[90.49281311 132.29840088]
[81.33669281 128.02238464]
[73.86187744 121.22196198]
[68.74172974 112.50973511]
[53.92397308 114.84084320]
[39.10621643 117.17194366]
[24.28845596 119.50305176]
[9.47069836 121.83415222]
[1.55833995 135.32225037]
[-13.19011974 140.52001953]
[-27.81090927 134.97326660]
[-35.40053940 121.30097961]
[-32.37541580 105.95879364]
[-20.16391373 96.19082642]
[-4.53192759 96.60920715]
[7.13959503 107.01639557]
[21.95735359 104.68529510]
[36.77511215 102.35418701]
[51.59286880 100.02308655]
[66.41062927 97.69197845]
[67.36265564 91.73097229]
[69.36385345 86.03577423]
[72.34988403 80.78947449]
[76.22476196 76.16072083]
[80.86392212 72.29830933]
[86.11823273 69.32640076]
[91.81878662 67.34053040]
[91.50673676 52.34378052]
[91.19467926 37.34702682]
[90.88262177 22.35027313]
[90.57056427 7.35351896]
[90.25850677 -7.64323425]
[89.94644928 -22.63998795]
[75.04780579 -24.62262154]
[60.62644958 -28.85639572]
[47.02043152 -35.24206161]
[34.54870224 -43.62993240]
[23.50361443 -53.82338715]
[14.14408207 -65.58347321]
[6.68950462 -78.63451385]
[1.31462920 -92.67057800]
[-1.85454988 -107.36264038]
[-2.74374247 -122.36630249]
[-1.33210456 -137.32984924]
[2.34727311 -151.90251160]
[8.20814037 -165.74269104]
[16.11311150 -178.52595520]
[25.87687874 -189.95265198]
[37.27056885 -199.75491333]
[50.02709961 -207.70295715]
[63.84743500 -213.61047363]
[78.40760803 -217.33898926]
[93.36631012 -218.80108643]
[108.37287903 -217.96250916]
[123.07554626 -214.84291077]
[137.12966919 -209.51541138]
[150.20578003 -202.10488892]
[161.99736023 -192.78507996]
[172.22801208 -181.77444458]
[180.65791321 -169.33106995]
[187.08943176 -155.74667358]
[191.37182617 -141.33967590]
[193.40470886 -126.44780731]
[193.14041138 -111.42014313]
[190.58514404 -96.60896301]
[185.79879761 -82.36146545]
[178.89358521 -69.01161957]
[170.03135681 -56.87237167]
[159.41986084 -46.22828293]
[147.30784607 -37.32886887]
[133.97923279 -30.38273811]
[119.74648285 -25.55272293]
[104.94320679 -22.95204353]
[105.25526428 -7.95529079]
[105.56732178 7.04146290]
[105.87937164 22.03821754]
[106.19142914 37.03496933]
[106.50348663 52.03172302]
[106.81554413 67.02848053]
[126.94700623 79.81505585]
[133.55775452 102.72946930]
[123.33083344 124.27436829]
[137.06970215 132.12001038]
[136.99084473 147.01440430]
[144.71493530 159.87280273]
[152.43902588 172.73121643]
[160.16310120 185.58961487]
[167.88719177 198.44801331]
[174.33366394 184.90390015]
[188.89230347 181.29200745]
[200.92195129 190.25236511]
[201.62988281 205.23564148]
[190.49867249 215.29029846]
[175.66487122 213.06755066]
[182.15304565 226.59175110]
[188.78153992 240.04771423]
[190.08329773 225.10430908]
[195.13908386 210.98200989]
[203.61706543 198.60769653]
[214.96084595 188.79350281]
[228.42593384 182.18351746]
[243.12857056 179.21159363]
[258.10382080 180.07275391]
[272.36886597 184.71049500]
[284.98745728 192.82043457]
[295.13143921 203.87030029]
[302.13504028 217.13488770]
[305.53863525 231.74365234]
[305.11880493 246.73776245]
[300.90313721 261.13317871]
[293.16827393 273.98510742]
[282.42190552 284.45007324]
[269.36929321 291.84124756]
[254.86711121 295.67352295]
[239.86712646 295.69540405]
[225.35380554 291.90545654]
[212.27969360 284.55239868]
[201.50282288 274.11883545]
[193.72854614 261.28509521]
[193.72854614 276.28509521]
[193.72854614 291.28509521]
[193.72854614 306.28509521]
[193.72854614 321.28509521]
[193.72854614 336.28509521]
[193.72854614 351.28509521]
[193.72854614 366.28509521]
[193.72854614 381.28509521]
[193.72854614 396.28509521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 118]
[12 117]
[14 116]
[15 110]
[16 109]
[17 108]
[18 107]
[19 106]
[21 104]
[26 42]
[27 41]
[28 40]
[29 39]
[30 38]
[49 101]
[50 100]
[51 99]
[52 98]
[53 97]
[54 96]
[55 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
