%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACACCCCCACGGGAAACAGCAGUGAUUAACCUUUAGCAAUAAACGAAAGUUUAACUAAGxxxxxxxxxxCCUAAUUCCCCCCAUCCUUACCACCCUCGUUAACCCUAACAAAAAAAACUCAUACCCCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[142.84187317 119.95116425]
[128.93931580 114.31921387]
[115.03676605 108.68725586]
[100.86020660 113.58880615]
[100.71567535 129.40934753]
[87.67622375 136.60809326]
[80.22131348 149.62440491]
[72.76640320 162.64071655]
[65.31149292 175.65702820]
[57.85658264 188.67333984]
[58.45449829 205.06158447]
[44.41896820 213.54309082]
[30.18854141 205.39280701]
[30.40226364 188.99505615]
[44.84027100 181.21842957]
[52.29518127 168.20211792]
[59.75009155 155.18580627]
[67.20500183 142.16949463]
[74.65991211 129.15318298]
[74.27121735 114.26365662]
[87.84389496 106.13389587]
[85.66706085 91.29268646]
[74.78823090 80.96548462]
[63.90940857 70.63827515]
[53.03058243 60.31107330]
[42.15175629 49.98386765]
[26.57671738 50.22026062]
[15.69115543 39.59203339]
[15.56177616 24.74215698]
[4.68295097 14.41495132]
[-7.40643787 22.61895943]
[-20.93707466 28.11471176]
[-35.31116104 30.66214180]
[-49.89421463 30.15138435]
[-64.04306030 26.60750580]
[-77.13420105 20.18929482]
[-88.59130859 11.18213940]
[-97.91057587 -0.01465544]
[-104.68287659 -12.90557098]
[-108.61174011 -26.92080498]
[-109.52629852 -41.44145584]
[-107.38875580 -55.82685089]
[-102.29590607 -69.44282532]
[-94.47477722 -81.68966675]
[-105.13639832 -92.24095917]
[-115.79802704 -102.79224396]
[-126.45965576 -113.34353638]
[-137.39666748 -112.65995026]
[-146.69514465 -118.03041077]
[-151.37222290 -127.45082092]
[-150.08425903 -137.66712952]
[-160.29774475 -148.65278625]
[-170.51121521 -159.63845825]
[-180.72470093 -170.62411499]
[-190.93817139 -181.60978699]
[-206.76397705 -185.90817261]
[-210.69219971 -201.82987976]
[-198.68183899 -212.99603271]
[-183.08810425 -207.91984558]
[-179.95251465 -191.82327271]
[-169.73902893 -180.83760071]
[-159.52555847 -169.85194397]
[-149.31207275 -158.86627197]
[-139.09858704 -147.88061523]
[-120.27133942 -143.64218140]
[-115.90836334 -124.00516510]
[-105.24673462 -113.45387268]
[-94.58511353 -102.90258026]
[-83.92348480 -92.35129547]
[-70.95652008 -100.70437622]
[-56.45466614 -105.97952271]
[-41.13760757 -107.91165924]
[-25.76619911 -106.40171051]
[-11.10468674 -101.52165222]
[2.11729336 -93.51109314]
[13.24102592 -82.76551056]
[21.71153259 -69.81674957]
[27.10525703 -55.30665588]
[29.15125084 -39.95529556]
[27.74477577 -24.52520752]
[22.95266724 -9.78353405]
[15.01015568 3.53612590]
[25.88898087 13.86333084]
[40.72550201 13.22049522]
[51.90529251 23.53877640]
[52.47896194 39.10504532]
[63.35778809 49.43224716]
[74.23661041 59.75945282]
[85.11544037 70.08665466]
[95.99426270 80.41386414]
[120.66871643 94.78469849]
[134.57127380 100.41665649]
[148.47383118 106.04861450]
[158.14402771 89.75072479]
[170.39097595 75.29222870]
[184.87214661 63.07612610]
[201.18280029 53.44274902]
[218.86721802 46.66024399]
[237.43148804 42.91711426]
[256.35723877 42.31699753]
[275.11624146 44.87578201]
[293.18493652 50.52119446]
[310.05926514 59.09482574]
[325.26861572 70.35660553]
[338.38900757 83.99148560]
[349.05477905 99.61830139]
[356.96899414 116.80036926]
[361.91146851 135.05773926]
[363.74514771 153.88059998]
[378.72485352 154.66043091]
[393.70455933 155.44027710]
[408.68429565 156.22012329]
[423.03967285 148.29203796]
[436.94168091 156.99069214]
[436.08908081 173.36766052]
[421.35897827 180.57572937]
[407.90444946 171.19984436]
[392.92471313 170.41999817]
[377.94500732 169.64015198]
[362.96530151 168.86030579]
[360.96752930 180.50654602]
[357.76629639 191.88183594]
[353.39639282 202.86218262]
[347.90524292 213.32786560]
[341.35250854 223.16474915]
[333.80950928 232.26556396]
[325.35827637 240.53100586]
[316.09082031 247.87088013]
[306.10800171 254.20509338]
[295.51849365 259.46447754]
[284.43768311 263.59155273]
[272.98620605 266.54116821]
[261.28884888 268.28106689]
[249.47302246 268.79205322]
[237.66749573 268.06848145]
[226.00094604 266.11798096]
[214.60049438 262.96170044]
[203.59045410 258.63381958]
[193.09085083 253.18139648]
[183.21620178 246.66366577]
[174.07417297 239.15153503]
[165.76451111 230.72669983]
[158.37789917 221.48088074]
[151.99496460 211.51472473]
[146.68537903 200.93673706]
[142.50717163 189.86210632]
[139.50604248 178.41146851]
[137.71484375 166.70956421]
[137.15325928 154.88388062]
[137.82759094 143.06327820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 93]
[2 92]
[3 91]
[4 21]
[6 19]
[7 18]
[8 17]
[9 16]
[10 15]
[22 90]
[23 89]
[24 88]
[25 87]
[26 86]
[29 83]
[30 82]
[44 69]
[45 68]
[46 67]
[47 66]
[51 64]
[52 63]
[53 62]
[54 61]
[55 60]
[109 120]
[110 119]
[111 118]
[112 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
