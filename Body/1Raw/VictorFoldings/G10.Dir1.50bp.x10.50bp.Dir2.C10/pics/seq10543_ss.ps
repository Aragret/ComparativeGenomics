%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUAACCAAAACAUCAGAUUGUGAAUCUGACAACAGAGGCUUACGACCCCUUAUUUACCGAxxxxxxxxxxAAUUCUUCUCACCCUAACAGGUCAACCUCGCUUCCCCACCCUUACUAACAUUAACGAAAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[151.17472839 240.46670532]
[161.94876099 229.96351624]
[153.69647217 217.43756104]
[145.44418335 204.91160583]
[131.98109436 198.54020691]
[130.85003662 182.75947571]
[122.59775543 170.23352051]
[114.34546661 157.70755005]
[106.09317780 145.18159485]
[91.10047913 144.71354675]
[82.08294678 156.70037842]
[73.06542206 168.68722534]
[75.52549744 184.29887390]
[66.15851593 197.02816772]
[50.52172852 199.32305908]
[37.89217377 189.82200623]
[35.76273346 174.16183472]
[45.39677429 161.63343811]
[61.07858658 159.66969299]
[70.09611511 147.68286133]
[79.11364746 135.69602966]
[71.98131561 126.90363312]
[67.92412567 117.05968475]
[53.51190948 121.21757507]
[39.09969330 125.37545776]
[24.68747520 129.53335571]
[10.27525997 133.69123840]
[-4.13695621 137.84912109]
[-18.54917145 142.00700378]
[-32.09164047 152.20690918]
[-45.64184952 142.01730347]
[-39.60152817 126.17587280]
[-22.70705986 127.59479523]
[-8.29484367 123.43690491]
[6.11737251 119.27902222]
[20.52958870 115.12113190]
[34.94180298 110.96324158]
[49.35401917 106.80535889]
[63.76623535 102.64746857]
[64.23575592 93.61142731]
[66.92366791 84.97166443]
[71.66323090 77.26406860]
[78.16047668 70.96674347]
[86.01237488 66.47029114]
[94.73190308 64.05362701]
[95.66753387 49.08283234]
[96.60316467 34.11204147]
[97.53878784 19.14125061]
[94.93855286 10.31568336]
[98.65280914 3.86975551]
[99.89968109 -11.07833099]
[97.39199066 -17.30882263]
[98.31614685 -22.99892235]
[101.52207184 -26.61798286]
[103.38967896 -41.50126266]
[105.25729370 -56.38454056]
[107.12490845 -71.26782227]
[92.63336182 -75.23970032]
[78.85460663 -81.23358917]
[66.06916809 -89.12746429]
[54.53733444 -98.76062012]
[44.49387741 -109.93692017]
[36.14327621 -122.42884827]
[29.65553665 -135.98207092]
[25.16273689 -150.32067871]
[22.75634766 -165.15274048]
[22.48535728 -180.17630005]
[24.35528564 -195.08549500]
[28.32806206 -209.57679749]
[34.32280350 -223.35517883]
[42.21747208 -236.14013672]
[51.85133362 -247.67137146]
[63.02826309 -257.71414185]
[75.52070618 -266.06396484]
[89.07433319 -272.55087280]
[103.41321564 -277.04278564]
[118.24542236 -279.44824219]
[133.26899719 -279.71829224]
[148.17808533 -277.84744263]
[162.66912842 -273.87377930]
[176.44714355 -267.87817383]
[189.23161316 -259.98272705]
[200.76225281 -250.34814453]
[210.80432129 -239.17060852]
[219.15338135 -226.67764282]
[225.63943481 -213.12361145]
[230.13046265 -198.78445435]
[232.53501892 -183.95208740]
[232.80415344 -168.92849731]
[230.93237305 -154.01953125]
[226.95780945 -139.52873230]
[220.96136475 -125.75109100]
[213.06510925 -112.96710968]
[203.42982483 -101.43706512]
[192.25164795 -91.39569092]
[179.75817871 -83.04740906]
[166.20373535 -76.56217957]
[151.86430359 -72.07204437]
[137.03179932 -69.66841125]
[122.00818634 -69.40020752]
[120.14057159 -54.51692963]
[118.27296448 -39.63364792]
[116.40534973 -24.75037003]
[114.84777069 -9.83145714]
[113.60089111 5.11663008]
[112.50958252 20.07687950]
[111.57395172 35.04766846]
[110.63832855 50.01846313]
[109.70269775 64.98925018]
[125.48230743 72.71239471]
[136.16239929 87.25907898]
[138.95004272 105.57260132]
[132.77223206 123.54299927]
[118.61913300 136.92930603]
[126.87142181 149.45526123]
[135.12371826 161.98123169]
[143.37600708 174.50718689]
[157.42935181 181.77452087]
[157.97015381 196.65930176]
[166.22244263 209.18527222]
[174.47473145 221.71122742]
[188.37744141 215.95701599]
[203.11796570 212.93814087]
[218.16342163 212.76376343]
[232.96995544 215.44017029]
[247.00230408 220.87062073]
[259.75320435 228.85881042]
[270.76171875 239.11595154]
[279.62991333 251.27127075]
[286.03717041 264.88534546]
[289.75192261 279.46606445]
[290.63986206 294.48632812]
[288.66885376 309.40313721]
[283.91021729 323.67730713]
[276.53591919 336.79281616]
[266.81256104 348.27551270]
[255.09161377 357.71035767]
[241.79681396 364.75625610]
[227.40873718 369.15850830]
[212.44752502 370.75799561]
[197.45397949 369.49685669]
[182.97015381 365.42071533]
[169.51959229 358.67691040]
[157.58853149 349.50921631]
[147.60829163 338.24905396]
[139.93962097 325.30349731]
[134.85977173 311.14044189]
[132.55235291 296.27194214]
[133.10078430 281.23547363]
[136.48522949 266.57455444]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 121]
[3 120]
[4 119]
[6 117]
[7 116]
[8 115]
[9 114]
[10 21]
[11 20]
[12 19]
[23 39]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[45 109]
[46 108]
[47 107]
[48 106]
[50 105]
[51 104]
[54 103]
[55 102]
[56 101]
[57 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
