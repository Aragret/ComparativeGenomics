%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAACCCCCCCUCCCCCGCUUCUGGCCACAGCACUUAAACACAUCUCUGCCAAACCCCAAAxxxxxxxxxxUACUCCCCAUAUCUAACAACGUAAAAAUAAAAUGACAGUUUGAACAUACAAAACCCACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-3.83780932 279.06491089]
[-11.82772541 291.75985718]
[-19.81764221 304.45477295]
[-27.80755806 317.14971924]
[-35.79747391 329.84463501]
[-43.65489960 342.62197876]
[-51.37898636 355.48040771]
[-59.10306931 368.33880615]
[-66.82715607 381.19720459]
[-74.55123901 394.05560303]
[-72.07901764 409.90701294]
[-83.03644562 421.62515259]
[-99.01792145 420.22082520]
[-107.76381683 406.77133179]
[-102.56504059 391.59396362]
[-87.40964508 386.33151245]
[-79.68555450 373.47311401]
[-71.96147156 360.61471558]
[-64.23738861 347.75631714]
[-56.51330185 334.89791870]
[-55.76016235 327.49667358]
[-48.49240494 321.85470581]
[-40.50248718 309.15979004]
[-32.51257324 296.46484375]
[-24.52265549 283.76992798]
[-16.53273964 271.07501221]
[-43.58565903 249.09625244]
[-66.56716156 222.88984680]
[-84.82561493 193.19886780]
[-97.84327698 160.86518860]
[-105.25104523 126.80567932]
[-120.18534851 128.20797729]
[-135.11965942 129.61029053]
[-148.17253113 139.53773499]
[-163.18972778 132.94866943]
[-164.72283936 116.62133789]
[-151.19473267 107.35191345]
[-136.52195740 114.67597961]
[-121.58765411 113.27367401]
[-106.65334320 111.87137604]
[-106.98401642 102.03759003]
[-106.84700012 92.19920349]
[-106.24261475 82.37844086]
[-105.17221832 72.59749603]
[-103.63822174 62.87847137]
[-101.64411163 53.24332047]
[-99.19437408 43.71381378]
[-96.29456329 34.31149292]
[-92.95121002 25.05759239]
[-89.17189026 15.97302723]
[-84.96512604 7.07832289]
[-80.34042358 -1.60642314]
[-75.30825043 -10.06158733]
[-69.87995911 -18.26806450]
[-64.06781769 -26.20731354]
[-57.88496399 -33.86139297]
[-51.34536743 -41.21301270]
[-44.46379852 -48.24555588]
[-37.25581360 -54.94313812]
[-29.73769760 -61.29062271]
[-21.92643547 -67.27366638]
[-13.83967876 -72.87875366]
[-5.49569845 -78.09321594]
[3.08665156 -82.90527344]
[11.88797951 -87.30404663]
[20.88839912 -91.27960968]
[30.06757164 -94.82297516]
[39.40475845 -97.92612457]
[48.87886047 -100.58206177]
[58.46847534 -102.78478241]
[68.15192413 -104.52930450]
[77.90734100 -105.81168365]
[87.71267700 -106.62902832]
[97.54577637 -106.97949219]
[107.38441467 -106.86228180]
[117.20637512 -106.27766418]
[126.98945618 -105.22695923]
[136.71154785 -103.71253204]
[146.35069275 -101.73781586]
[155.88511658 -99.30727386]
[165.29325867 -96.42639160]
[174.55386353 -93.10167694]
[183.64601135 -89.34064484]
[192.54916382 -85.15179443]
[201.24320984 -80.54458618]
[209.70848083 -75.52943420]
[217.92587280 -70.11767578]
[225.87680054 -64.32152557]
[233.54331970 -58.15409470]
[240.90808105 -51.62931061]
[247.95446777 -44.76191330]
[254.66653442 -37.56742477]
[261.02914429 -30.06209946]
[267.02789307 -22.26289558]
[272.64926147 -14.18743801]
[277.88049316 -5.85397053]
[282.70980835 2.71867585]
[287.12631226 11.51113129]
[291.11996460 20.50353050]
[294.68182373 29.67555237]
[297.80374146 39.00647354]
[300.47875977 48.47521210]
[302.70077515 58.06037140]
[304.46478271 67.74029541]
[305.76678467 77.49310303]
[306.60388184 87.29677582]
[306.97412109 97.12915039]
[306.87673950 106.96800232]
[306.31188965 116.79112244]
[305.28088379 126.57629395]
[303.78601074 136.30142212]
[301.83071899 145.94451904]
[316.32629395 149.80168152]
[330.82189941 153.65884399]
[348.44766235 148.43273926]
[360.42025757 161.22558594]
[374.99298096 164.78034973]
[391.81378174 162.65986633]
[398.50787354 178.23631287]
[385.39324951 188.98077393]
[371.43820190 179.35304260]
[356.86550903 175.79827881]
[346.32839966 181.82128906]
[334.12713623 178.93190002]
[326.96475220 168.15443420]
[312.46914673 164.29727173]
[297.97354126 160.44010925]
[293.11273193 174.52523804]
[287.25125122 188.22418213]
[280.41949463 201.46598816]
[272.65283203 214.18202209]
[263.99154663 226.30639648]
[254.48051453 237.77627563]
[244.16900635 248.53225708]
[233.11045837 258.51858521]
[221.36216736 267.68350220]
[208.98501587 275.97955322]
[196.04313660 283.36370850]
[182.60359192 289.79772949]
[168.73600769 295.24829102]
[154.51226807 299.68713379]
[140.00604248 303.09124756]
[125.29253387 305.44299316]
[110.44795990 306.73019409]
[95.54925537 306.94619751]
[80.67360687 306.08984375]
[65.89810181 304.16561890]
[51.29930496 301.18344116]
[36.95285797 297.15881348]
[22.93310547 292.11254883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 26]
[2 25]
[3 24]
[4 23]
[5 22]
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[31 40]
[32 39]
[33 38]
[112 127]
[113 126]
[114 125]
[116 122]
[117 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
