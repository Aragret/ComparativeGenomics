%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAAACCAAACCCAGCUACGCAAAAUCUUAGCAUACUCCUCAAUUACCCACAUAGGAUGAAUxxxxxxxxxxAUGAGCUGUCCCCACAUUAGGCUUAAAAACAGAUGCAAUUCCCGGACGUCUAAACCAAACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[74.17124939 582.77484131]
[74.17124939 567.77484131]
[74.17124939 552.77484131]
[74.17124939 537.77484131]
[74.17124939 522.77484131]
[74.17124939 507.77487183]
[74.17124939 492.77487183]
[74.17124939 477.77487183]
[74.17124939 462.77487183]
[74.17124939 447.77487183]
[60.97003555 445.28033447]
[48.41530228 440.48681641]
[36.90412903 433.54446411]
[26.80084419 424.67138672]
[18.42549896 414.14688110]
[12.04373741 402.30249023]
[7.85835791 389.51171875]
[6.00287628 376.17822266]
[6.53726530 362.72293091]
[9.44601822 349.57098389]
[14.63859177 337.13812256]
[21.95223045 325.81759644]
[31.15705872 315.96777344]
[41.96331787 307.90069580]
[54.03047180 301.87231445]
[66.97795105 298.07427979]
[80.39715576 296.62789917]
[81.62776947 281.67846680]
[82.85837555 266.72900391]
[68.75701904 261.71890259]
[56.42361069 253.22280884]
[46.70228195 241.81489563]
[40.26028061 228.26893616]
[37.54215622 213.50573730]
[38.73910141 198.53054810]
[43.77551270 184.36465454]
[52.31373215 171.97573853]
[63.77668381 162.21168518]
[77.38687897 155.74267578]
[92.21911621 153.01507568]
[93.44972992 138.06564331]
[94.68034363 123.11621094]
[95.91095734 108.16677856]
[91.24162292 108.19495392]
[86.30416107 105.75435638]
[82.29988098 100.76760864]
[80.40972900 93.70140076]
[81.56256866 85.52754211]
[75.85791016 71.65466309]
[70.15324402 57.78178406]
[64.44857788 43.90890121]
[57.21687698 30.76727104]
[48.55027008 18.52431679]
[39.88366318 6.28136301]
[22.61613464 3.66992283]
[12.74849129 -10.32869148]
[15.96396065 -26.80788612]
[7.04780912 -38.87031937]
[-8.54069328 -42.66217041]
[-15.16441250 -57.27400970]
[-7.74219608 -71.49688721]
[8.03226566 -74.42022705]
[20.05815506 -63.80149460]
[19.11024094 -47.78646851]
[28.02639198 -35.72403717]
[40.94685364 -35.60578156]
[51.58758545 -27.93743515]
[55.91405487 -15.34923363]
[52.12661743 -2.38524461]
[60.79322433 9.85770893]
[69.45983124 22.10066223]
[69.86077881 7.10602236]
[77.07316589 -6.04621887]
[89.50096893 -14.44560814]
[104.39404297 -16.23344803]
[118.45671082 -11.01410961]
[128.57704163 0.05742305]
[132.51551819 14.53113651]
[129.40060425 29.20414925]
[119.92158508 40.82947540]
[106.17607880 46.83455658]
[91.20581818 45.89052582]
[78.32146454 38.20423889]
[84.02612305 52.07711792]
[89.73078918 65.94999695]
[95.43545532 79.82288361]
[109.81993103 84.07572937]
[122.15121460 75.53527069]
[134.48249817 66.99481201]
[146.81378174 58.45434952]
[142.23741150 44.04781723]
[142.11241150 28.93240166]
[146.44990540 14.45215607]
[154.86421204 1.89465296]
[166.60713196 -7.62350273]
[180.63449097 -13.25596333]
[195.69898987 -14.50189304]
[210.46109009 -11.25050640]
[223.60818481 -3.79091287]
[233.97120667 7.21358442]
[240.62872314 20.78447342]
[242.98870850 35.71504211]
[240.84135437 50.67766953]
[234.37757874 64.34189606]
[224.17213440 75.49269867]
[211.13249207 83.13856506]
[196.41813660 86.59961700]
[181.33743286 85.56811523]
[167.23136902 80.13577271]
[155.35424805 70.78563690]
[143.02296448 79.32609558]
[130.69168091 87.86655426]
[118.36038971 96.40701294]
[110.86038971 109.39739227]
[109.62977600 124.34682465]
[108.39916992 139.29626465]
[107.16855621 154.24569702]
[121.35509491 159.36206055]
[133.72421265 167.96965027]
[143.43615723 179.47677612]
[149.83349609 193.09516907]
[152.48558044 207.89396667]
[151.21754456 222.86329651]
[146.12179565 236.98329163]
[137.55136108 249.29344177]
[126.09538269 258.95806885]
[112.53864288 265.32293701]
[97.80781555 267.95962524]
[96.57720184 282.90905762]
[95.34658813 297.85848999]
[111.31589508 302.67248535]
[125.84355164 310.85363770]
[138.23002625 322.00485229]
[147.87957764 335.58618164]
[154.32891846 350.94073486]
[157.26939392 367.32678223]
[156.56187439 383.95321655]
[152.24320984 400.01806641]
[144.52441406 414.74700928]
[133.78027344 427.43075562]
[120.53124237 437.45910645]
[105.41814423 444.35046387]
[89.17124939 447.77487183]
[89.17124939 462.77487183]
[89.17124939 477.77487183]
[89.17124939 492.77487183]
[89.17124939 507.77487183]
[89.17124939 522.77484131]
[89.17124939 537.77484131]
[89.17124939 552.77484131]
[89.17124939 567.77484131]
[89.17124939 582.77484131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[27 130]
[28 129]
[29 128]
[40 117]
[41 116]
[42 115]
[43 114]
[48 86]
[49 85]
[50 84]
[51 83]
[52 71]
[53 70]
[54 69]
[57 65]
[58 64]
[87 113]
[88 112]
[89 111]
[90 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
