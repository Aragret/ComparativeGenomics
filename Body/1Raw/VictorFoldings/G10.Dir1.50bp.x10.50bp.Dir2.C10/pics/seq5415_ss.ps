%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCCUACUACUAUCUCGCACCUGAAACAAGCUAACAUGACUAACACCCUUAAUUCCAUCCxxxxxxxxxxAUAGUAGAAGAACCCUCCAUAAACCUGGAGUGACUAUAUGGAUGCCCCCCACCCUACCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[101.24748993 215.91748047]
[113.20058441 206.70954895]
[107.42431641 192.86633301]
[101.64804077 179.02311707]
[95.87176514 165.17990112]
[90.09549713 151.33668518]
[84.31922150 137.49345398]
[87.05908966 100.27961731]
[74.44795990 92.15807343]
[61.83683395 84.03652954]
[49.04956055 88.38891602]
[36.28247070 84.61673737]
[28.15566444 74.31967926]
[27.47409248 61.41494370]
[15.03465271 53.03279877]
[-0.73345238 51.73764420]
[-6.96445084 38.20901108]
[-19.40389061 29.82686806]
[-31.84333229 21.44472504]
[-44.28277206 13.06258106]
[-56.72221375 4.68043756]
[-69.16165161 -3.70170546]
[-81.60108948 -12.08384895]
[-91.26668549 -0.59435427]
[-102.09879303 9.80264187]
[-113.97467804 18.98933411]
[-126.75978851 26.86162949]
[-140.30924988 33.33032990]
[-154.46955872 38.32213974]
[-169.08023071 41.78049469]
[-183.97573853 43.66621399]
[-198.98730469 43.95793152]
[-213.94482422 42.65233612]
[-228.67883301 39.76422501]
[-243.02236938 35.32632065]
[-256.81292725 29.38891029]
[-269.89422607 22.01926804]
[-282.11804199 13.30089951]
[-293.34591675 3.33258724]
[-303.45059204 -7.77271795]
[-312.31756592 -19.88918495]
[-319.84637451 -32.87952423]
[-325.95175171 -46.59654617]
[-330.56445312 -60.88482666]
[-333.63226318 -75.58247375]
[-335.12039185 -90.52293396]
[-335.01199341 -105.53694153]
[-333.30831909 -120.45436859]
[-330.02859497 -135.10618591]
[-325.21008301 -149.32637024]
[-318.90731812 -162.95381165]
[-311.19171143 -175.83409119]
[-302.15072632 -187.82127380]
[-291.88674927 -198.77952576]
[-280.51614380 -208.58468628]
[-268.16769409 -217.12565613]
[-254.98135376 -224.30566406]
[-241.10652161 -230.04333496]
[-226.70039368 -234.27368164]
[-211.92622375 -236.94876099]
[-196.95141602 -238.03825378]
[-181.94563293 -237.52983093]
[-167.07890320 -235.42924500]
[-152.51968384 -231.76028442]
[-138.43293762 -226.56454468]
[-124.97827911 -219.90089417]
[-112.30816650 -211.84481812]
[-100.56615448 -202.48762512]
[-89.88529205 -191.93530273]
[-80.38659668 -180.30746460]
[-72.17770386 -167.73582458]
[-65.35162354 -154.36283875]
[-59.98569489 -140.34002686]
[-56.14072418 -125.82630157]
[-53.86027908 -110.98609924]
[-53.17019653 -95.98757172]
[-54.07829285 -81.00066376]
[-56.57428360 -66.19518280]
[-60.62988281 -51.73889923]
[-66.19914246 -37.79560471]
[-73.21894836 -24.52328873]
[-60.77951050 -16.14114571]
[-48.34006882 -7.75900269]
[-35.90062714 0.62314057]
[-23.46118927 9.00528336]
[-11.02174854 17.38742638]
[1.41769218 25.76956940]
[16.29604530 26.46517944]
[23.41679573 40.59336090]
[35.85623550 48.97550201]
[52.17817688 45.04457092]
[66.59352875 54.29019928]
[69.95837402 71.42539978]
[82.56950378 79.54694366]
[95.18063354 87.66848755]
[109.88859558 90.61396790]
[124.65464783 87.97510529]
[139.42070007 85.33624268]
[154.18676758 82.69737244]
[168.95281982 80.05850983]
[183.71887207 77.41964722]
[186.59757996 62.51738358]
[194.66851807 49.66342163]
[206.84016418 40.59615326]
[221.46641541 36.54185867]
[236.56918335 38.04884338]
[250.10592651 44.91329575]
[260.24594116 56.20686340]
[265.61785889 70.40218353]
[265.49514771 85.57944489]
[259.89447021 99.68605804]
[249.57319641 110.81421661]
[235.92723083 117.45893097]
[220.80207825 118.72154999]
[206.24328613 114.43132782]
[194.21981812 105.16846466]
[186.35774231 92.18569946]
[171.59167480 94.82456970]
[156.82562256 97.46343231]
[142.05957031 100.10229492]
[127.29351807 102.74115753]
[112.52745819 105.38002777]
[108.93620300 111.96431732]
[101.75369263 125.13289642]
[98.16244507 131.71719360]
[103.93871307 145.56040955]
[109.71498871 159.40362549]
[115.49125671 173.24684143]
[121.26753235 187.09005737]
[127.04380035 200.93327332]
[141.99661255 198.91435242]
[156.96232605 200.83525085]
[170.92054749 206.56501770]
[182.91961670 215.71296692]
[192.14138794 227.65538025]
[197.95710754 241.57801819]
[199.97026062 256.53158569]
[198.04357910 271.49658203]
[192.30842590 285.45257568]
[183.15585327 297.44812012]
[171.20986938 306.66528320]
[157.28498840 312.47561646]
[142.33062744 314.48300171]
[127.36640930 312.55053711]
[113.41259766 306.80999756]
[101.42060852 297.65280151]
[92.20806885 285.70324707]
[86.40309143 271.77612305]
[84.40148926 256.82101440]
[86.33972931 241.85752869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 130]
[3 129]
[4 128]
[5 127]
[6 126]
[7 125]
[8 95]
[9 94]
[10 93]
[14 90]
[15 89]
[17 87]
[18 86]
[19 85]
[20 84]
[21 83]
[22 82]
[23 81]
[96 122]
[97 121]
[98 120]
[99 119]
[100 118]
[101 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
