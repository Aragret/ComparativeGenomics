%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACCAAGACCCUACUUCUAACCUCCCUGUUCUUAUGAAUUCGAACAGCAUACCCCCGAUUCCGCUACGAxxxxxxxxxxUAUAUUAUCCUAACUACUACCGCAUUCCUACUACUCAACUUAAACUCCAGCACCACGACCCUACUACUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[92.50000000 77.50000000]
[92.50000000 62.50000000]
[92.50000000 47.50000000]
[92.50000000 32.50000000]
[92.50000000 17.50000000]
[92.50000000 2.49999952]
[92.50000000 -12.50000000]
[92.50000000 -27.50000000]
[92.50000000 -42.50000000]
[77.51094818 -43.12818146]
[62.56135559 -44.38348770]
[47.67743683 -46.26372147]
[32.88531494 -48.76557541]
[18.21093178 -51.88467026]
[3.68003535 -55.61552429]
[-10.68188286 -59.95159912]
[-24.84962654 -64.88528442]
[-38.79833984 -70.40792847]
[-52.50355530 -76.50984192]
[-65.94122314 -83.18031311]
[-79.08777618 -90.40764618]
[-91.92015076 -98.17916107]
[-104.41583252 -106.48123169]
[-116.55289459 -115.29927063]
[-128.31004333 -124.61783600]
[-139.66667175 -134.42056274]
[-150.60282898 -144.69024658]
[-161.09934998 -155.40888977]
[-171.13781738 -166.55767822]
[-180.70060730 -178.11706543]
[-189.77095032 -190.06674194]
[-198.33294678 -202.38578796]
[-206.37155151 -215.05255127]
[-213.87268066 -228.04483032]
[-220.82316589 -241.33981323]
[-227.21083069 -254.91421509]
[-233.02444458 -268.74417114]
[-238.25381470 -282.80548096]
[-242.88978577 -297.07339478]
[-246.92419434 -311.52297974]
[-250.34999084 -326.12878418]
[-253.16114807 -340.86526489]
[-255.35273743 -355.70654297]
[-256.92092896 -370.62655640]
[-257.86294556 -385.59915161]
[-258.17715454 -400.59808350]
[-257.86300659 -415.59698486]
[-256.92102051 -430.56958008]
[-255.35289001 -445.48962402]
[-253.16133118 -460.33090210]
[-250.35021973 -475.06738281]
[-246.92446899 -489.67321777]
[-242.89010620 -504.12277222]
[-238.25418091 -518.39074707]
[-233.02485657 -532.45202637]
[-227.21127319 -546.28204346]
[-220.82365417 -559.85644531]
[-213.87321472 -573.15142822]
[-206.37211609 -586.14373779]
[-198.33355713 -598.81054688]
[-189.77159119 -611.12957764]
[-180.70129395 -623.07934570]
[-171.13853455 -634.63873291]
[-161.10009766 -645.78753662]
[-150.60362244 -656.50622559]
[-139.66748047 -666.77593994]
[-128.31089783 -676.57873535]
[-116.55377197 -685.89727783]
[-104.41673279 -694.71539307]
[-91.92108154 -703.01751709]
[-79.08873749 -710.78906250]
[-65.94220734 -718.01641846]
[-52.50455475 -724.68695068]
[-38.79935837 -730.78887939]
[-24.85066032 -736.31158447]
[-10.68293190 -741.24530029]
[3.67897201 -745.58142090]
[18.20985603 -749.31231689]
[32.88422775 -752.43145752]
[47.67634583 -754.93334961]
[62.56025696 -756.81365967]
[77.50984955 -758.06896973]
[92.49889374 -758.69720459]
[107.50110626 -758.69720459]
[122.49015045 -758.06896973]
[137.43974304 -756.81365967]
[152.32365417 -754.93334961]
[167.11576843 -752.43145752]
[181.79014587 -749.31231689]
[196.32102966 -745.58142090]
[210.68293762 -741.24530029]
[224.85066223 -736.31158447]
[238.79936218 -730.78887939]
[252.50454712 -724.68695068]
[265.94219971 -718.01641846]
[279.08874512 -710.78906250]
[291.92108154 -703.01751709]
[304.41674805 -694.71539307]
[316.55377197 -685.89727783]
[328.31088257 -676.57873535]
[339.66748047 -666.77593994]
[350.60360718 -656.50622559]
[361.10009766 -645.78753662]
[371.13851929 -634.63873291]
[380.70129395 -623.07934570]
[389.77160645 -611.12957764]
[398.33355713 -598.81054688]
[406.37213135 -586.14373779]
[413.87319946 -573.15142822]
[420.82366943 -559.85644531]
[427.21127319 -546.28204346]
[433.02484131 -532.45202637]
[438.25418091 -518.39074707]
[442.89010620 -504.12277222]
[446.92446899 -489.67321777]
[450.35021973 -475.06738281]
[453.16134644 -460.33090210]
[455.35287476 -445.48962402]
[456.92102051 -430.56958008]
[457.86300659 -415.59698486]
[458.17715454 -400.59808350]
[457.86294556 -385.59915161]
[456.92092896 -370.62655640]
[455.35275269 -355.70654297]
[453.16116333 -340.86526489]
[450.35000610 -326.12878418]
[446.92419434 -311.52297974]
[442.88977051 -297.07339478]
[438.25381470 -282.80548096]
[433.02444458 -268.74417114]
[427.21081543 -254.91421509]
[420.82318115 -241.33981323]
[413.87268066 -228.04483032]
[406.37155151 -215.05255127]
[398.33294678 -202.38578796]
[389.77093506 -190.06674194]
[380.70059204 -178.11706543]
[371.13781738 -166.55767822]
[361.09933472 -155.40888977]
[350.60284424 -144.69024658]
[339.66665649 -134.42056274]
[328.31005859 -124.61783600]
[316.55288696 -115.29927063]
[304.41583252 -106.48123169]
[291.92016602 -98.17916107]
[279.08776855 -90.40764618]
[265.94122314 -83.18031311]
[252.50355530 -76.50984192]
[238.79833984 -70.40792847]
[224.84962463 -64.88528442]
[210.68188477 -59.95159912]
[196.31996155 -55.61552429]
[181.78906250 -51.88467026]
[167.11468506 -48.76557541]
[152.32255554 -46.26372147]
[137.43864441 -44.38348770]
[122.48905182 -43.12818146]
[107.50000000 -42.50000000]
[107.50000000 -27.50000000]
[107.50000000 -12.50000000]
[107.50000000 2.49999952]
[107.50000000 17.50000000]
[107.50000000 32.50000000]
[107.50000000 47.50000000]
[107.50000000 62.50000000]
[107.50000000 77.50000000]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 166]
[4 165]
[5 164]
[6 163]
[7 162]
[8 161]
[9 160]
[10 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
