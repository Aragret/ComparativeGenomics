%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUGAGCCCUACAAACAACUAACCUGCCACUAAUAGUUAUGUCAUCCCUCUUAUUAAUCAUCxxxxxxxxxxUAGGUCUCCACCCCUGACUCCCCUCAGCCAUAGAAGGCCCCACCCCAGUCUCAGCCCUACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[104.45355225 270.08001709]
[104.45355225 255.08001709]
[104.45355225 240.08001709]
[104.45355225 225.08001709]
[104.45355225 210.08001709]
[104.45355225 195.08001709]
[104.45355225 180.08001709]
[104.45355225 165.08001709]
[104.45355225 150.08001709]
[104.45355225 135.08001709]
[76.45239258 121.07524872]
[72.93666840 93.46380615]
[59.84351349 86.14469910]
[46.75035858 78.82559204]
[30.92916489 78.84564209]
[23.59516335 65.88178253]
[10.50200844 58.56267929]
[-2.59114623 51.24357224]
[-15.68430042 43.92446518]
[-24.27741432 56.23450470]
[-34.05352783 67.62776184]
[-44.91547394 77.99099731]
[-56.75530243 87.22122192]
[-69.45534515 95.22669220]
[-82.88936615 101.92785645]
[-96.92386627 107.25809479]
[-111.41934967 111.16445160]
[-126.23175049 113.60808563]
[-141.21385193 114.56472778]
[-156.21676636 114.02484894]
[-171.09135437 111.99383545]
[-185.68980408 108.49185944]
[-199.86701965 103.55372620]
[-213.48210144 97.22852325]
[-226.39973450 89.57910919]
[-238.49151611 80.68151093]
[-249.63729858 70.62416077]
[-259.72628784 59.50701141]
[-268.65820312 47.44055557]
[-276.34429932 34.54471970]
[-282.70816040 20.94766808]
[-287.68655396 6.78453970]
[-291.23001099 -7.80390120]
[-293.30328369 -22.67266464]
[-293.88577271 -37.67397308]
[-292.97174072 -52.65873718]
[-290.57019043 -67.47801971]
[-286.70504761 -81.98455048]
[-281.41470337 -96.03413391]
[-274.75173950 -109.48715210]
[-266.78237915 -122.20988464]
[-257.58584595 -134.07589722]
[-247.25352478 -144.96725464]
[-235.88809204 -154.77569580]
[-223.60252380 -163.40376282]
[-210.51892090 -170.76568604]
[-196.76730347 -176.78829956]
[-182.48437500 -181.41174316]
[-167.81205750 -184.59007263]
[-152.89619446 -186.29170227]
[-137.88500977 -186.49971008]
[-122.92772675 -185.21203613]
[-108.17297363 -182.44148254]
[-93.76741028 -178.21557617]
[-79.85420227 -172.57630920]
[-66.57163239 -165.57974243]
[-54.05170822 -157.29542542]
[-42.41886139 -147.80566406]
[-31.78871346 -137.20478821]
[-22.26690865 -125.59815216]
[-13.94808388 -113.10112762]
[-6.91491747 -99.83789825]
[-1.23731005 -85.94029236]
[3.02831054 -71.54644012]
[5.83954954 -56.79938507]
[7.16846657 -41.84570694]
[7.00185442 -26.83401489]
[5.34136820 -11.91351223]
[2.20351148 2.76751184]
[-2.38052940 17.06314659]
[-8.36519527 30.83131218]
[4.72795963 38.15041733]
[17.82111359 45.46952438]
[30.91426849 52.78862762]
[45.79895020 52.24506760]
[54.06946182 65.73243713]
[67.16262054 73.05154419]
[80.25577545 80.37065125]
[86.73632812 74.45694733]
[94.98428345 70.70479584]
[104.27267456 69.63765717]
[113.72218323 71.53321838]
[122.38437653 76.38027954]
[129.33662415 83.86379242]
[133.77919006 93.38099670]
[135.12445068 104.08839417]
[150.12364197 103.93235779]
[165.12283325 103.77632141]
[180.12202454 103.62028503]
[185.32022095 88.59162903]
[195.32438660 76.26493835]
[208.91575623 68.11287689]
[224.44842529 65.10132599]
[240.04869080 67.57491302]
[253.84103394 75.21774292]
[264.17364502 87.09355164]
[269.81625366 101.76041412]
[284.80892944 101.29237366]
[299.80163574 100.82433319]
[310.43878174 89.13559723]
[326.22927856 88.47547150]
[337.80490112 99.23560333]
[338.29803467 115.03219604]
[327.41613770 126.49341583]
[311.61520386 126.81951141]
[300.26968384 115.81703186]
[285.27697754 116.28507233]
[270.28427124 116.75311279]
[266.25619507 130.35845947]
[258.20324707 142.06707764]
[246.90512085 150.72186279]
[233.46298218 155.46252441]
[219.19215393 155.81108093]
[205.49342346 151.72003174]
[193.71551514 143.57827759]
[185.02236938 132.17422485]
[180.27806091 118.61947632]
[165.27886963 118.77551270]
[150.27967834 118.93154907]
[135.28048706 119.08758545]
[148.51832581 126.14163971]
[163.43896484 127.68250275]
[175.24342346 136.93750000]
[180.30017090 151.05944824]
[177.05355835 165.70388794]
[166.50239563 176.36563110]
[151.89259338 179.76470947]
[137.71870422 174.85545349]
[128.34115601 163.14811707]
[126.64493561 148.24375916]
[119.45355225 135.08001709]
[119.45355225 150.08001709]
[119.45355225 165.08001709]
[119.45355225 180.08001709]
[119.45355225 195.08001709]
[119.45355225 210.08001709]
[119.45355225 225.08001709]
[119.45355225 240.08001709]
[119.45355225 255.08001709]
[119.45355225 270.08001709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 88]
[13 87]
[14 86]
[16 84]
[17 83]
[18 82]
[19 81]
[96 130]
[97 129]
[98 128]
[99 127]
[107 118]
[108 117]
[109 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
