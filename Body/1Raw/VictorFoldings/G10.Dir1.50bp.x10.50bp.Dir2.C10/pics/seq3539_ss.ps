%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAGCUCUCACCAUCGCUCUUCUACUAUGAACCCCCCUCCCCAUACCCAACCCCCUGGUCAxxxxxxxxxxCCUUAACAAUGAACAAGAUAUUCGAAAAAUAGGAGGACUACUCAAAACCAUACCUCUCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-17.17971611 170.83563232]
[-30.42230034 177.88076782]
[-43.66488647 184.92590332]
[-56.90747070 191.97103882]
[-70.07605743 199.15354919]
[-83.16921234 206.47265625]
[-96.26236725 213.79174805]
[-109.35551453 221.11085510]
[-122.44866943 228.42996216]
[-135.54182434 235.74906921]
[-148.63497925 243.06817627]
[-160.71496582 251.96052551]
[-171.59379578 262.28771973]
[-182.47262573 272.61492920]
[-178.80659485 287.52990723]
[-183.10461426 302.27514648]
[-194.21054077 312.88430786]
[-209.13690186 316.50357056]
[-223.86862183 312.15933228]
[-234.44291687 301.02023315]
[-238.01536560 286.08258057]
[-233.62498474 271.36456299]
[-222.45278931 260.82522583]
[-207.50401306 257.29962158]
[-192.79981995 261.73611450]
[-181.92100525 251.40890503]
[-171.04217529 241.08169556]
[-185.90037537 243.13938904]
[-200.21630859 238.66125488]
[-211.25338745 228.50334167]
[-216.90171814 214.60743713]
[-216.08160400 199.62986755]
[-208.94978333 186.43376160]
[-196.86961365 177.54167175]
[-182.15029907 174.65341187]
[-167.60560608 178.32110596]
[-156.01589966 187.84364319]
[-149.59664917 201.40068054]
[-149.57496643 216.40066528]
[-155.95408630 229.97502136]
[-142.86093140 222.65591431]
[-129.76777649 215.33680725]
[-116.67462158 208.01770020]
[-103.58146667 200.69860840]
[-90.48831177 193.37950134]
[-77.39515686 186.06039429]
[-73.06324768 180.01223755]
[-63.95260620 178.72845459]
[-50.71002197 171.68331909]
[-37.46743774 164.63818359]
[-24.22484970 157.59304810]
[-32.57500458 134.24383545]
[-36.57704544 109.77153015]
[-36.09972000 84.97873688]
[-31.15868187 60.67860031]
[-21.91598320 37.66810226]
[-8.67476082 16.70192909]
[8.13070774 -1.53228760]
[27.94924736 -16.43651199]
[20.76673889 -29.60509491]
[13.58422947 -42.77367783]
[-0.68887186 -50.84898758]
[-0.56141168 -67.24763489]
[13.83549023 -75.10010529]
[27.69153595 -66.32844543]
[26.75281143 -49.95618439]
[33.93532181 -36.78760529]
[41.11782837 -23.61902046]
[47.64406967 -26.52125740]
[54.31276703 -29.07923508]
[61.10577774 -31.28599167]
[68.00461578 -33.13552475]
[74.99051666 -34.62279892]
[82.04447174 -35.74377060]
[89.14727020 -36.49538803]
[96.27960968 -36.87560272]
[103.42206573 -36.88338852]
[110.55521393 -36.51871490]
[117.65964508 -35.78258133]
[124.71601868 -34.67698669]
[131.70513916 -33.20494080]
[138.60800171 -31.37044907]
[145.40580750 -29.17850113]
[152.08006287 -26.63506508]
[158.61260986 -23.74705696]
[164.98567200 -20.52233887]
[171.18191528 -16.96968460]
[177.18447876 -13.09875774]
[182.97702026 -8.92009354]
[188.54377747 -4.44506168]
[193.86962891 0.31416181]
[198.94004822 5.34462690]
[203.74125671 10.63264656]
[208.26019287 16.16383171]
[212.48455811 21.92313194]
[216.40284729 27.89487648]
[220.00440979 34.06281662]
[223.27944946 40.41017151]
[226.21905518 46.91966629]
[240.34385681 41.87091064]
[254.46865845 36.82215118]
[268.59347534 31.77339745]
[276.72946167 17.94642830]
[292.63220215 15.82917500]
[304.10244751 27.04581451]
[302.34121704 42.99190140]
[288.69958496 51.43495941]
[273.64221191 45.89820099]
[259.51742554 50.94695663]
[245.39262390 55.99571228]
[231.26780701 61.04446793]
[236.56329346 90.03807068]
[235.53149414 119.49322510]
[250.23945618 122.43871307]
[264.94741821 125.38419342]
[279.04187012 117.72088623]
[293.76437378 124.09485626]
[297.82107544 139.61653137]
[288.10003662 152.37902832]
[272.05841064 152.59202576]
[262.00192261 140.09214783]
[247.29397583 137.14666748]
[232.58601379 134.20118713]
[229.38957214 144.80079651]
[225.34725952 155.10751343]
[220.48548889 165.05397034]
[214.83605957 174.57514954]
[208.43589783 183.60879517]
[201.32682800 192.09584045]
[193.55535889 199.98083496]
[185.17227173 207.21220398]
[176.23237610 213.74267578]
[166.79411316 219.52957153]
[156.91920471 224.53504944]
[146.67216492 228.72637939]
[136.12002563 232.07617188]
[125.33175659 234.56253052]
[114.37787628 236.16918945]
[103.33000183 236.88565063]
[92.26036072 236.70724487]
[81.24131775 235.63511658]
[70.34490204 233.67628479]
[59.64235687 230.84355164]
[49.20365143 227.15542603]
[39.09701920 222.63604736]
[29.38853645 217.31492615]
[20.14167404 211.22688293]
[11.41687775 204.41169739]
[3.27118826 196.91392517]
[-4.24214315 188.78259277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[4 48]
[5 46]
[6 45]
[7 44]
[8 43]
[9 42]
[10 41]
[11 40]
[12 27]
[13 26]
[14 25]
[59 68]
[60 67]
[61 66]
[99 111]
[100 110]
[101 109]
[102 108]
[113 123]
[114 122]
[115 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
