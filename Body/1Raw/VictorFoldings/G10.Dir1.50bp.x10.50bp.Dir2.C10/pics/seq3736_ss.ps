%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCCUCUGAUCAGGGUGAGCAUCAAACUCAAACUACGCCCUGAUCGGCGCACUGCGAGCAGxxxxxxxxxxAAUUAUCAAUAUAAAACCCCCUGCCAUAACCCAAUACCAAACGCCCCUCUUCGUCUGAUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[109.21373749 263.94805908]
[109.21373749 248.94804382]
[109.21373749 233.94804382]
[109.21373749 218.94804382]
[109.21373749 203.94804382]
[109.21373749 188.94804382]
[109.21373749 173.94804382]
[109.21373749 158.94804382]
[109.21373749 143.94804382]
[109.21373749 128.94804382]
[103.66807556 123.89871979]
[100.46794128 138.55337524]
[86.17652893 143.10920715]
[75.08543396 133.01031494]
[78.28588867 118.35572815]
[92.57675934 113.80007172]
[87.03110504 108.75074768]
[72.09679413 110.15305328]
[57.16248703 111.55535126]
[42.22817993 112.95765686]
[27.29387283 114.35996246]
[12.35956478 115.76226044]
[-2.57474256 117.16456604]
[-17.50905037 118.56687164]
[-32.30175781 121.05198669]
[-46.87446213 124.60675049]
[-61.44716263 128.16151428]
[-76.01986694 131.71627808]
[-82.78364563 145.81539917]
[-97.04899597 152.22116089]
[-112.08026123 147.90895081]
[-120.78012848 134.91487122]
[-119.04079437 119.37431335]
[-107.68351746 108.62506866]
[-92.07085419 107.74259949]
[-79.57463074 117.14356995]
[-65.00192261 113.58881378]
[-50.42922211 110.03404999]
[-35.85651779 106.47928619]
[-48.46447372 98.35282135]
[-53.06609344 84.07608795]
[-47.57679749 70.11658478]
[-34.48329163 62.79811096]
[-19.71706390 65.43599701]
[-9.96735573 76.83526611]
[-9.65088367 91.83192444]
[-18.91135406 103.63256073]
[-3.97704625 102.23026276]
[10.95726109 100.82795715]
[25.89156914 99.42565155]
[40.82587814 98.02334595]
[55.76018524 96.62104797]
[70.69448853 95.21874237]
[85.62879944 93.81643677]
[98.56685638 86.22653198]
[107.07794189 73.87495422]
[115.58903503 61.52338409]
[124.10012817 49.17181396]
[112.61823273 39.50114822]
[102.12331390 28.76745796]
[92.71334839 17.07095909]
[84.47620392 4.52086115]
[77.48879242 -8.76565552]
[71.81634521 -22.66453552]
[67.51183319 -37.04600525]
[64.61544037 -51.77578735]
[63.15422058 -66.71634674]
[63.14181137 -81.72818756]
[64.57833099 -96.67114258]
[67.45036316 -111.40569305]
[71.73109436 -125.79425812]
[77.38055420 -139.70249939]
[84.34599304 -153.00054932]
[92.56237793 -165.56425476]
[101.95299530 -177.27629089]
[112.43015289 -188.02731323]
[123.89604187 -197.71694946]
[136.24359131 -206.25471497]
[149.35752869 -213.56089783]
[163.11540222 -219.56727600]
[177.38873291 -224.21777344]
[192.04429626 -227.46896362]
[206.94522095 -229.29049683]
[221.95237732 -229.66537476]
[236.92567444 -228.59007263]
[251.72526550 -226.07463074]
[266.21298218 -222.14256287]
[280.25360107 -216.83056641]
[293.71594238 -210.18823242]
[306.47436523 -202.27760315]
[318.40972900 -193.17250061]
[329.41058350 -182.95797729]
[339.37423706 -171.72940063]
[348.20764160 -159.59158325]
[355.82833862 -146.65788269]
[362.16513062 -133.04905701]
[367.15890503 -118.89215088]
[370.76303101 -104.31937408]
[372.94381714 -89.46677399]
[373.68090820 -74.47303009]
[372.96743774 -59.47815323]
[370.81008911 -44.62213135]
[367.22897339 -30.04368591]
[362.25753784 -15.87893009]
[355.94216919 -2.26012206]
[348.34188843 10.68558121]
[339.52764893 22.83730507]
[329.58172607 34.08159256]
[318.59698486 44.31344986]
[306.67599487 53.43735123]
[293.93005371 61.36809921]
[280.47817993 68.03164673]
[266.44598389 73.36578369]
[251.96447754 77.32069397]
[237.16886902 79.85945892]
[222.19729614 80.95837402]
[207.18955994 80.60717010]
[192.28578186 78.80913544]
[177.62512207 75.58105469]
[163.34445190 70.95307159]
[149.57713318 64.96839905]
[136.45170593 57.68290329]
[127.94060516 70.03447723]
[119.42951965 82.38604736]
[110.91842651 94.73761749]
[124.30927277 87.97853088]
[134.34124756 76.82686615]
[147.59284973 69.79870605]
[162.45213318 67.74897003]
[177.11161804 70.92697144]
[189.78808594 78.94615173]
[198.93954468 90.83103943]
[203.45283508 105.13594818]
[202.77891541 120.12079620]
[196.99980164 133.96282959]
[186.81843567 144.97825623]
[173.47331238 151.82717896]
[158.58773804 153.67645264]
[143.97242737 150.30116272]
[131.40512085 142.11178589]
[124.21373749 128.94804382]
[124.21373749 143.94804382]
[124.21373749 158.94804382]
[124.21373749 173.94804382]
[124.21373749 188.94804382]
[124.21373749 203.94804382]
[124.21373749 218.94804382]
[124.21373749 233.94804382]
[124.21373749 248.94804382]
[124.21373749 263.94805908]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[17 54]
[18 53]
[19 52]
[20 51]
[21 50]
[22 49]
[23 48]
[24 47]
[25 39]
[26 38]
[27 37]
[28 36]
[55 125]
[56 124]
[57 123]
[58 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
