%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAACAACCUAUUUAGCUGUUCCCCAACCUUUUCCUCCGACCCCCUAACAACCCCCCUCCUxxxxxxxxxxCUCACAGCCCUCGCUGUCACUUUCCUAGGACUUCUAACAGCCCUAGACCUCAACUACCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-26.95744896 130.30758667]
[-41.72350311 132.94644165]
[-56.48955917 135.58531189]
[-71.25561523 138.22418213]
[-86.02166748 140.86303711]
[-100.78772736 143.50190735]
[-114.31192017 149.99006653]
[-125.61092377 159.85578918]
[-136.90992737 169.72151184]
[-148.20892334 179.58723450]
[-152.65286255 187.64349365]
[-159.84715271 189.53768921]
[-171.34895325 199.16621399]
[-182.85075378 208.79473877]
[-194.35255432 218.42326355]
[-196.28175354 231.21905518]
[-206.11422729 238.99987793]
[-218.21011353 238.00134277]
[-229.90972900 247.38850403]
[-235.34811401 262.85964966]
[-251.51342773 265.61911011]
[-261.77618408 252.82817078]
[-255.57894897 237.64508057]
[-239.29689026 235.68888855]
[-227.59727478 226.30172729]
[-222.16253662 209.64448547]
[-203.98107910 206.92146301]
[-192.47927856 197.29293823]
[-180.97747803 187.66441345]
[-169.47567749 178.03588867]
[-158.07466125 168.28823853]
[-146.77565002 158.42251587]
[-135.47663879 148.55679321]
[-124.17764282 138.69107056]
[-138.96682739 141.19708252]
[-153.94630432 140.41279602]
[-168.39291382 136.37605286]
[-181.60922241 129.28173828]
[-192.95716858 119.47234344]
[-201.88890076 107.42144775]
[-207.97322083 93.71083069]
[-210.91641235 79.00241089]
[-210.57637024 64.00626373]
[-206.96949768 49.44636917]
[-200.26995850 36.02563477]
[-190.80116272 24.39198494]
[-179.02023315 15.10705471]
[-165.49594116 8.61909771]
[-150.88119507 5.24133587]
[-135.88156128 5.13683748]
[-121.22118378 8.31064796]
[-107.60781097 14.60954475]
[-95.69866943 23.72943306]
[-86.06869507 35.23003006]
[-79.18281555 48.55611420]
[-75.37344360 63.06434250]
[-74.82448578 78.05429077]
[-77.56246185 92.80229187]
[-83.45516968 106.59635162]
[-92.21813965 118.77052307]
[-103.42658997 128.73585510]
[-88.66053772 126.09698486]
[-73.89447784 123.45812225]
[-59.12842560 120.81925964]
[-44.36236954 118.18039703]
[-29.59631348 115.54152679]
[-30.52250671 99.21347046]
[-29.39960098 82.89775848]
[-26.24522400 66.85054016]
[-21.10889816 51.32373810]
[-14.07125759 36.56111908]
[-5.24278879 22.79443741]
[5.23790836 10.23982143]
[17.20629501 -0.90562940]
[30.47447777 -10.46694183]
[44.83415604 -18.29401207]
[60.05989456 -24.26395798]
[75.91265869 -28.28306007]
[92.14357758 -30.28821945]
[108.49783325 -30.24795723]
[124.71868134 -28.16290474]
[140.55146790 -24.06579781]
[155.74761963 -18.02095413]
[170.06858826 -10.12327671]
[178.83479309 -22.29511261]
[187.60101318 -34.46694946]
[196.36721802 -46.63878632]
[205.13342285 -58.81062317]
[206.24047852 -75.17236328]
[221.08084106 -82.15058899]
[234.38801575 -72.56669617]
[232.47273254 -56.27978134]
[217.30525208 -50.04441833]
[208.53904724 -37.87258148]
[199.77284241 -25.70074272]
[191.00663757 -13.52890682]
[182.24043274 -1.35706949]
[193.38778687 8.81083107]
[203.28727722 20.19722748]
[211.80661011 32.64997101]
[218.83193970 46.00266647]
[224.26942444 60.07688904]
[228.04637146 74.68457794]
[230.11231995 89.63053131]
[230.43968201 104.71504974]
[245.37399292 106.11735535]
[260.30828857 107.51966095]
[275.24261475 108.92196655]
[290.17691040 110.32426453]
[298.01174927 97.22548676]
[310.75878906 88.83047485]
[325.88705444 86.80606079]
[340.39282227 91.55420685]
[351.39599609 102.13214874]
[356.71188354 116.43963623]
[355.28497314 131.63591003]
[347.39862061 144.70373535]
[334.61865234 153.04849243]
[319.48251343 155.01330566]
[304.99554443 150.20808411]
[294.03408813 139.58688354]
[288.77462769 125.25857544]
[273.84030151 123.85626984]
[258.90600586 122.45396423]
[243.97169495 121.05166626]
[229.03738403 119.64936066]
[226.23402405 133.19212341]
[222.01347351 146.36224365]
[216.42312622 159.01187134]
[209.52572632 170.99899292]
[201.39874268 182.18904114]
[192.13337708 192.45639038]
[181.83367920 201.68576050]
[170.61524963 209.77352905]
[158.60406494 216.62893677]
[145.93495178 222.17497253]
[132.75013733 226.34941101]
[119.19764709 229.10536194]
[105.42964172 230.41189575]
[91.60066986 230.25434875]
[77.86599731 228.63447571]
[64.37982178 225.57048035]
[51.29353333 221.09675598]
[38.75405502 215.26351929]
[26.90216255 208.13626099]
[15.87091351 199.79499817]
[5.78414965 190.33337402]
[-3.24488807 179.85760498]
[-11.11483383 168.48530579]
[-17.73733521 156.34414673]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 66]
[2 65]
[3 64]
[4 63]
[5 62]
[6 61]
[7 34]
[8 33]
[9 32]
[10 31]
[12 30]
[13 29]
[14 28]
[15 27]
[18 25]
[19 24]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
[105 126]
[106 125]
[107 124]
[108 123]
[109 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
