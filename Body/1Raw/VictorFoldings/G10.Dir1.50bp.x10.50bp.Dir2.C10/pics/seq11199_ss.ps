%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCAACAAACUUAAAAUAAAAUCCCCACUAUGCACAUUUUAUUUCUCCAACAUACUCGGAxxxxxxxxxxUCCUAAUCACAUAACCUAUUCCCCCGAGCAAUCUCAAUUACAAUAUAUACACCAACAAACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[93.79553223 391.21441650]
[93.79553223 376.21441650]
[93.79553223 361.21441650]
[93.79553223 346.21441650]
[93.79553223 331.21441650]
[93.79553223 316.21441650]
[93.79553223 301.21441650]
[93.79553223 286.21441650]
[93.79553223 271.21441650]
[93.79553223 256.21441650]
[79.25313568 252.66375732]
[65.97518158 245.73152161]
[54.73550797 235.81680298]
[46.19032669 223.49269104]
[40.83992386 209.47309875]
[38.99937439 194.57139587]
[40.77997208 179.65327454]
[46.08252335 165.58642578]
[54.60286331 153.19004822]
[65.84929657 143.18721008]
[79.17096710 136.16258240]
[93.79553223 132.52833557]
[93.79553223 117.52834320]
[83.46833038 106.64951324]
[68.48860931 105.86967468]
[53.50889969 105.08982849]
[38.52918243 104.30998230]
[23.54947090 103.53013611]
[8.56975555 102.75028992]
[-6.40995884 101.97044373]
[-21.38967323 101.19059753]
[-36.36938858 100.41075897]
[-43.24083328 114.00131226]
[-55.05008316 123.61699677]
[-69.75112152 127.59184265]
[-84.79689789 125.23717499]
[-97.58065033 116.96096039]
[-105.88750458 104.19710541]
[-108.27825165 89.15702057]
[-104.33868408 74.44648743]
[-94.75135040 62.61420441]
[-81.17732239 55.71017838]
[-65.96836853 54.93057632]
[-51.75954819 60.41046906]
[-41.01261520 71.20043182]
[-35.58954239 85.43103790]
[-20.60982704 86.21088409]
[-5.63011360 86.99073029]
[9.34960079 87.77057648]
[24.32931519 88.55042267]
[39.30902863 89.33026886]
[54.28874207 90.11011505]
[69.26845551 90.88995361]
[84.24816895 91.66979980]
[70.81703186 84.99114227]
[64.28444672 71.48835754]
[67.38419342 56.81213379]
[78.81908417 47.10423660]
[93.80380249 46.42726135]
[106.06748199 55.06451797]
[110.47797394 69.40144348]
[105.18875885 83.43925476]
[115.62857056 72.66844940]
[126.06838226 61.89763641]
[129.92384338 16.62257767]
[136.55233765 3.16661263]
[143.18083191 -10.28935242]
[149.80934143 -23.74531746]
[156.43783569 -37.20128250]
[144.30397034 -46.08612442]
[133.89741516 -56.94314194]
[125.53441620 -69.44239807]
[119.46912384 -83.20405579]
[115.88584137 -97.80992126]
[114.89347076 -112.81613159]
[116.52217102 -127.76666260]
[120.72243500 -142.20719910]
[127.36663055 -155.69888306]
[136.25285339 -167.83174133]
[147.11103821 -178.23706055]
[159.61125183 -186.59864807]
[173.37359619 -192.66238403]
[187.97987366 -196.24400330]
[202.98619080 -197.23466492]
[217.93653870 -195.60427856]
[232.37658691 -191.40237427]
[245.86753845 -184.75665283]
[257.99938965 -175.86904907]
[268.40347290 -165.00967407]
[276.76364136 -152.50852966]
[282.82580566 -138.74548340]
[286.40576172 -124.13881683]
[287.39474487 -109.13237762]
[285.76266479 -94.18221283]
[281.55911255 -79.74263763]
[274.91186523 -66.25245667]
[266.02288818 -54.12161255]
[255.16232300 -43.71875381]
[242.66023254 -35.36001205]
[228.89649963 -29.29939842]
[214.28942871 -25.72108841]
[199.28288269 -24.73382378]
[184.33290100 -26.36760521]
[169.89379883 -30.57278442]
[163.26530457 -17.11681938]
[156.63679504 -3.66085410]
[150.00830078 9.79511166]
[143.37980652 23.25107765]
[147.17475891 29.72010422]
[158.55961609 49.12718964]
[173.53933716 49.90703201]
[188.51904297 50.68687820]
[202.87445068 42.75878525]
[216.77644348 51.45743942]
[215.92385864 67.83441162]
[201.19375610 75.04247284]
[187.73919678 65.66659546]
[172.75949097 64.88674927]
[157.77976990 64.10690308]
[167.55619812 75.48325348]
[163.94410706 90.04185486]
[149.98373413 95.52891541]
[137.42533875 87.32606506]
[136.83918762 72.33744812]
[126.39937592 83.10826111]
[115.95956421 93.87906647]
[117.11194611 106.63210297]
[108.79553223 117.52834320]
[108.79553223 132.52833557]
[123.42009735 136.16258240]
[136.74177551 143.18721008]
[147.98820496 153.19004822]
[156.50854492 165.58642578]
[161.81109619 179.65327454]
[163.59169006 194.57139587]
[161.75114441 209.47309875]
[156.40074158 223.49269104]
[147.85556030 235.81680298]
[136.61587524 245.73152161]
[123.33792877 252.66375732]
[108.79553223 256.21441650]
[108.79553223 271.21441650]
[108.79553223 286.21441650]
[108.79553223 301.21441650]
[108.79553223 316.21441650]
[108.79553223 331.21441650]
[108.79553223 346.21441650]
[108.79553223 361.21441650]
[108.79553223 376.21441650]
[108.79553223 391.21441650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[22 129]
[23 128]
[24 54]
[25 53]
[26 52]
[27 51]
[28 50]
[29 49]
[30 48]
[31 47]
[32 46]
[62 126]
[63 125]
[64 124]
[65 108]
[66 107]
[67 106]
[68 105]
[69 104]
[110 119]
[111 118]
[112 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
