%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAACCCACAGGUCCUAAACUACCAAACCUGCAUUAAAAAUUUCGGUUGGGGCGACCUCGGxxxxxxxxxxACAACAUUUCCCCCGCAUCCCCCUUCCAAACAACAAUCCCCCUCUACCUAAAACUCACAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[257.26461792 202.93231201]
[244.82519531 194.55015564]
[232.38575745 186.16801453]
[219.94630432 177.78587341]
[207.50686646 169.40373230]
[194.72950745 161.54631042]
[181.63635254 154.22720337]
[168.54319763 146.90809631]
[155.45004272 139.58898926]
[142.35688782 132.26988220]
[129.26373291 124.95078278]
[116.17058563 117.63167572]
[103.07743073 110.31256866]
[88.50473022 106.75780487]
[73.51203156 107.22584534]
[58.51933670 107.69389343]
[43.52664185 108.16193390]
[28.81867790 111.10741425]
[14.80196571 116.44892883]
[0.78525257 121.79044342]
[-13.23146057 127.13195038]
[-27.24817276 132.47346497]
[-28.03996468 147.68177795]
[-34.95486832 161.25027466]
[-46.79483414 170.82812500]
[-61.50851822 174.75588989]
[-76.54668427 172.35308838]
[-89.30387878 164.03601074]
[-97.56983948 151.24563599]
[-99.91244507 136.19796753]
[-95.92581940 121.50012207]
[-86.30066681 109.69858551]
[-72.70461273 102.83803558]
[-57.49324417 102.10710907]
[-43.30203247 107.63244629]
[-32.58968735 118.45674896]
[-18.57297325 113.11524200]
[-4.55626011 107.77372742]
[9.46045303 102.43221283]
[23.47716522 97.09069824]
[8.78413868 94.07160187]
[-4.04032707 86.29130554]
[-13.50514221 74.65441132]
[-18.50984001 60.51393509]
[-18.47252846 45.51398468]
[-13.39754677 31.39858055]
[-3.87495756 19.80891800]
[8.98805523 12.09251308]
[23.69591904 9.14654732]
[38.53856659 11.31354427]
[51.79024887 18.34155083]
[61.91020966 29.41342354]
[67.72180939 43.24184799]
[68.54933167 58.21900558]
[64.29656982 72.60350800]
[55.45798492 84.72289276]
[43.05859756 93.16923523]
[58.05129242 92.70119476]
[73.04399109 92.23315430]
[88.03668976 91.76510620]
[75.00985718 84.32860565]
[63.92153931 74.22666168]
[55.30705261 61.94697571]
[49.58228302 48.08237839]
[47.02360916 33.30221939]
[47.75454712 18.32003784]
[51.73981857 3.85913849]
[58.78702164 -9.38234615]
[68.55593872 -20.76515388]
[80.57495117 -29.73975182]
[94.26380920 -35.87287140]
[108.96165466 -38.86841965]
[123.95891571 -38.58177948]
[138.53155518 -35.02679443]
[151.97607422 -28.37508392]
[163.64337158 -18.94777870]
[172.97019958 -7.20000029]
[179.50627136 6.30109787]
[182.93606567 20.90371895]
[183.09397888 35.90288925]
[179.97241211 50.57448578]
[173.72203064 64.21020508]
[164.64460754 76.15174866]
[153.17839050 85.82261658]
[139.87690735 92.75591278]
[125.38233948 96.61693573]
[110.39653778 97.21941376]
[123.48969269 104.53852081]
[136.58283997 111.85762787]
[149.67599487 119.17672729]
[162.76914978 126.49583435]
[175.86230469 133.81494141]
[188.95545959 141.13404846]
[202.04861450 148.45315552]
[206.53265381 148.21888733]
[210.44393921 149.34710693]
[213.41645813 151.47924805]
[215.24307251 154.17321777]
[215.88900757 156.96429443]
[228.32846069 165.34643555]
[240.76789856 173.72857666]
[253.20733643 182.11071777]
[265.64675903 190.49285889]
[275.53421021 179.18615723]
[286.76083374 169.20785522]
[299.14956665 160.71534729]
[312.50500488 153.84257507]
[326.61654663 148.69792175]
[341.26162720 145.36253357]
[356.20928955 143.88902283]
[371.22372437 144.30059814]
[386.06820679 146.59080505]
[400.50857544 150.72349548]
[414.31707764 156.63349915]
[427.27597046 164.22761536]
[439.18084717 173.38607788]
[449.84393311 183.96443176]
[459.09710693 195.79583740]
[466.79437256 208.69369507]
[472.81439209 222.45460510]
[477.06219482 236.86154175]
[479.47079468 251.68725586]
[480.00216675 266.69793701]
[478.64797974 281.65686035]
[475.42956543 296.32809448]
[470.39767456 310.48025513]
[463.63171387 323.89013672]
[455.23834229 336.34625244]
[445.34994507 347.65213013]
[434.12249756 357.62948608]
[421.73303223 366.12094116]
[408.37701416 372.99258423]
[394.26504517 378.13604736]
[379.61965942 381.47021484]
[364.67190552 382.94247437]
[349.65747070 382.52960205]
[334.81320190 380.23815918]
[320.37319946 376.10424805]
[306.56518555 370.19308472]
[293.60693359 362.59786987]
[281.70285034 353.43841553]
[271.04061890 342.85916138]
[261.78845215 331.02697754]
[254.09225464 318.12847900]
[248.07339478 304.36706543]
[243.82681274 289.95977783]
[241.41947937 275.13385010]
[240.88935852 260.12310791]
[242.24481201 245.16430664]
[245.46446228 230.49334717]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 103]
[2 102]
[3 101]
[4 100]
[5 99]
[6 94]
[7 93]
[8 92]
[9 91]
[10 90]
[11 89]
[12 88]
[13 87]
[14 60]
[15 59]
[16 58]
[17 57]
[18 40]
[19 39]
[20 38]
[21 37]
[22 36]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
