%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:33:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACAGUCUACCCUCCCUUAGCAGGGAACUACUCCCACCCUGGAGCCUCCGUAGACCUAACxxxxxxxxxxUUCCCCUACUCAUCGCACUAAUUUACACUCACAACACCCUAGGCUCACUAAACAUUCUACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[117.25753021 264.35198975]
[117.25753021 249.35200500]
[117.25753021 234.35200500]
[117.25753021 219.35200500]
[117.25753021 204.35200500]
[117.25753021 189.35200500]
[117.25753021 174.35200500]
[117.25753021 159.35200500]
[117.25753021 144.35200500]
[117.25753021 129.35200500]
[110.63623810 125.82943726]
[103.59110260 139.07202148]
[96.54574585 152.31448364]
[83.30339813 145.26892090]
[90.34851837 132.02688599]
[97.39365387 118.78430176]
[90.77236176 115.26173401]
[78.33291626 123.64387512]
[65.89347839 132.02601624]
[65.47937012 147.53756714]
[56.00021744 159.82273865]
[41.10094070 164.15760803]
[26.51062012 158.87536621]
[17.83953094 146.00711060]
[18.42188263 130.50097656]
[28.03375053 118.31935883]
[42.97917557 114.14636230]
[57.51133347 119.58657837]
[69.95077515 111.20443726]
[82.39021301 102.82228851]
[78.98723602 88.21340179]
[64.12419128 86.19106293]
[49.26114273 84.16873169]
[34.39809799 82.14639282]
[19.53504944 80.12406158]
[10.71204853 92.63059235]
[-2.91768456 99.59399414]
[-18.22213554 99.41413116]
[-31.68445587 92.13233185]
[-40.21109772 79.42190552]
[-41.84270859 64.20361328]
[-36.20434952 49.97450638]
[-24.59167862 40.00432968]
[-9.67320061 36.58415604]
[5.12292671 40.49991608]
[16.39666367 50.85179901]
[21.55738449 65.26101685]
[36.42043304 67.28334808]
[51.28347778 69.30568695]
[66.14652252 71.32801819]
[81.00957489 73.35034943]
[94.60052490 67.00321960]
[102.59043884 54.30829239]
[110.58035278 41.61336517]
[118.57027435 28.91843414]
[126.56018829 16.22350502]
[134.55010986 3.52857518]
[122.67586517 -5.65608740]
[111.74352264 -15.94391441]
[101.85514832 -27.23884964]
[93.10306549 -39.43543243]
[85.56900024 -52.41978073]
[79.32329559 -66.07066345]
[74.42426300 -80.26062775]
[70.91764069 -94.85717010]
[68.83618164 -109.72401428]
[68.19931030 -124.72234344]
[69.01298523 -139.71212769]
[71.26959229 -154.55339050]
[74.94807434 -169.10757446]
[80.01408386 -183.23878479]
[86.42031860 -196.81507874]
[94.10695648 -209.70968628]
[103.00224304 -221.80223083]
[113.02310944 -232.97978210]
[124.07599640 -243.13800049]
[136.05770874 -252.18200684]
[148.85635376 -260.02737427]
[162.35246277 -266.60086060]
[176.41999817 -271.84109497]
[190.92762756 -275.69912720]
[205.73986816 -278.13894653]
[220.71846008 -279.13775635]
[235.72351074 -278.68624878]
[250.61492920 -276.78863525]
[265.25369263 -273.46264648]
[279.50311279 -268.73928833]
[293.23010254 -262.66275024]
[306.30654907 -255.28967285]
[318.61035156 -246.68896484]
[330.02661133 -236.94090271]
[340.44873047 -226.13650513]
[349.77938843 -214.37664795]
[357.93151855 -201.77114868]
[364.82894897 -188.43769836]
[370.40728760 -174.50079346]
[374.61447144 -160.09054565]
[377.41122437 -145.34152222]
[378.77142334 -130.39143372]
[378.68234253 -115.37984467]
[377.14483643 -100.44694519]
[374.17324829 -85.73214722]
[369.79534912 -71.37284851]
[364.05200195 -57.50312042]
[356.99679565 -44.25246048]
[348.69567871 -31.74459648]
[339.22610474 -20.09630775]
[328.67648315 -9.41635609]
[317.14535522 0.19554026]
[304.74038696 8.64963627]
[291.57736206 15.86699486]
[277.77917480 21.78022957]
[263.47473145 26.33412743]
[248.79753113 29.48616982]
[233.88462830 31.20692444]
[218.87527466 31.48032761]
[203.90960693 30.30382538]
[189.12734985 27.68840218]
[174.66653442 23.65847778]
[160.66217041 18.25168037]
[147.24504089 11.51849174]
[139.25511169 24.21342087]
[131.26519775 36.90835190]
[123.27528381 49.60327911]
[115.28536987 62.29821014]
[107.29545593 74.99314117]
[120.39353943 67.68286133]
[132.31076050 58.57353210]
[146.53207397 53.80340195]
[161.53186035 53.88420486]
[175.70095825 58.80727386]
[187.51934814 68.04446411]
[195.71916199 80.60483551]
[199.42076111 95.14093781]
[198.22702026 110.09336090]
[192.26602173 123.85804749]
[182.17724609 134.95834351]
[169.04298401 142.20343018]
[154.27226257 144.81607056]
[139.44891357 142.51574707]
[132.25752258 129.35200500]
[132.25752258 144.35200500]
[132.25752258 159.35200500]
[132.25752258 174.35200500]
[132.25752258 189.35200500]
[132.25752258 204.35200500]
[132.25752258 219.35200500]
[132.25752258 234.35200500]
[132.25752258 249.35200500]
[132.25752258 264.35198975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[17 30]
[18 29]
[19 28]
[31 51]
[32 50]
[33 49]
[34 48]
[35 47]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
