%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCCACCCUUAUCACAACACAAGAACACCUCUGAUUACUCCUGCCAUCAUGACCCUUGGCCxxxxxxxxxxGGGAUCAAACAACCCCCUAGGAAUCACCUCCCAUUCCGAUAAAAUCACCUUCCACCCUUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[42.62257767 286.24993896]
[31.92890930 282.61309814]
[26.15263748 296.45629883]
[20.37636566 310.29953003]
[22.20273781 326.01495361]
[10.16104889 334.78118896]
[4.38477612 348.62442017]
[7.01849937 364.81069946]
[-5.85180378 374.97372437]
[-20.98626900 368.65866089]
[-22.81585503 352.36190796]
[-9.45844173 342.84814453]
[-3.68216896 329.00491333]
[-5.92169857 314.27966309]
[6.53314734 304.52325439]
[12.30941963 290.68002319]
[18.08569145 276.83682251]
[7.89830017 271.75125122]
[-1.97470927 266.07940674]
[-11.49963570 259.84066772]
[-20.64396667 253.05635071]
[-29.37648964 245.74955750]
[-37.66739655 237.94528198]
[-45.48838425 229.67013550]
[-52.81275558 220.95236206]
[-59.61551666 211.82173157]
[-65.87344360 202.30940247]
[-71.56517029 192.44784546]
[-76.67127228 182.27073669]
[-81.17432404 171.81278992]
[-85.05894470 161.10972595]
[-88.31188965 150.19805908]
[-90.92203522 139.11505127]
[-92.88049316 127.89852142]
[-94.18056488 116.58676910]
[-94.81781006 105.21839905]
[-94.79006958 93.83221436]
[-94.09741974 82.46707916]
[-92.74223328 71.16179657]
[-90.72914124 59.95494843]
[-88.06501007 48.88478851]
[-84.75892639 37.98910904]
[-80.82218933 27.30510139]
[-76.26822662 16.86923027]
[-71.11257935 6.71711969]
[-65.37286377 -3.11657643]
[-59.06865311 -12.59829235]
[-52.22147369 -21.69566154]
[-44.85470200 -30.37763405]
[-36.99347687 -38.61457062]
[-28.66463470 -46.37835693]
[-19.89660645 -53.64249420]
[-28.66281319 -65.81433105]
[-37.42901993 -77.98616791]
[-46.19522858 -90.15800476]
[-61.46826553 -88.53632355]
[-75.49942780 -94.78308868]
[-84.51439667 -107.21795654]
[-86.08819580 -122.49600220]
[-79.79747772 -136.50750732]
[-67.33441925 -145.48345947]
[-52.05150986 -147.00936890]
[-38.05978775 -140.67475891]
[-29.12294769 -128.18362427]
[-27.64495850 -112.89601135]
[-34.02339172 -98.92420959]
[-25.25718307 -86.75237274]
[-16.49097633 -74.58053589]
[-7.72476912 -62.40869904]
[7.12693071 -71.33535767]
[22.71283340 -78.90753174]
[38.90972519 -85.06536865]
[55.58956146 -89.76017761]
[72.62048340 -92.95484924]
[89.86785126 -94.62413025]
[107.19532013 -94.75481415]
[124.46590424 -93.34588623]
[141.54307556 -90.40847015]
[158.29183960 -85.96578979]
[174.57975769 -80.05296326]
[190.27810669 -72.71674347]
[197.73301697 -85.73305511]
[205.18792725 -98.74936676]
[197.98011780 -112.38941956]
[199.31365967 -127.75903320]
[208.76303101 -139.95382690]
[223.31295776 -145.08248901]
[238.32061768 -141.50846863]
[248.99713135 -130.37223816]
[251.93565369 -115.22731781]
[246.19850159 -100.90640259]
[233.61639404 -91.97923279]
[218.20423889 -91.29445648]
[210.74932861 -78.27814484]
[203.29441833 -65.26183319]
[227.59953308 -47.30774307]
[248.83708191 -25.81229782]
[266.49652100 -1.29226184]
[280.15328979 25.66289330]
[289.47906494 54.40515137]
[304.18704224 51.45966721]
[318.89498901 48.51418304]
[333.60296631 45.56870270]
[348.31091309 42.62321854]
[354.66635132 28.46736908]
[368.14532471 20.77990150]
[383.56488037 22.51680565]
[394.99591064 33.01020432]
[398.04290771 48.22517395]
[391.53430176 62.31124878]
[377.97271729 69.85204315]
[362.57290649 67.94796753]
[351.25640869 57.33118057]
[336.54843140 60.27666473]
[321.84048462 63.22214508]
[307.13253784 66.16762543]
[292.42456055 69.11311340]
[293.89074707 80.31273651]
[294.70565796 91.57849121]
[294.86651611 102.87253571]
[294.37283325 114.15692902]
[293.22619629 125.39376831]
[291.43054199 136.54530334]
[288.99185181 147.57409668]
[285.91830444 158.44306946]
[282.22027588 169.11573792]
[277.91012573 179.55624390]
[273.00238037 189.72950745]
[267.51351929 199.60136414]
[261.46197510 209.13865662]
[254.86804199 218.30934143]
[247.75390625 227.08262634]
[240.14346313 235.42901611]
[232.06227112 243.32051086]
[223.53747559 250.73057556]
[214.59770203 257.63430786]
[205.27297974 264.00857544]
[195.59465027 269.83190918]
[185.59521484 275.08474731]
[175.30824280 279.74948120]
[164.76832581 283.81042480]
[154.01083374 287.25393677]
[143.07192993 290.06845093]
[131.98832703 292.24453735]
[120.79728699 293.77484131]
[109.53638458 294.65423584]
[98.24344635 294.87976074]
[86.95641327 294.45071411]
[75.71318817 293.36846924]
[64.55154419 291.63668823]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 17]
[3 16]
[4 15]
[6 13]
[7 12]
[52 69]
[53 68]
[54 67]
[55 66]
[81 95]
[82 94]
[83 93]
[100 117]
[101 116]
[102 115]
[103 114]
[104 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
