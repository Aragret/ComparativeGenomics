%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCACAGAACCCUCUAAAUCCCCUUGUAAAUUUAACUGUUAGUCCAAAGAGGAACAGCUCUxxxxxxxxxxUCCUACACUAUUAAAGUUUACCACAACCACCACCCCAUCAUACUCUUUCACCCACAGCACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[200.84730530 271.77194214]
[190.97160339 260.48165894]
[181.09590149 249.19137573]
[171.22018433 237.90109253]
[157.01705933 233.41555786]
[153.75503540 217.93428040]
[143.87933350 206.64399719]
[129.67619324 202.15844727]
[126.41418457 186.67718506]
[116.53848267 175.38690186]
[119.18881226 190.15089417]
[118.15394592 205.11515808]
[113.49653625 219.37379456]
[105.49851990 232.06361389]
[94.64408112 242.41644287]
[81.59029388 249.80554199]
[67.12741089 253.78359985]
[52.13095856 254.10980225]
[37.50877380 250.76440430]
[24.14603996 243.94992065]
[12.85168743 234.07885742]
[4.30944300 221.74880981]
[-0.96357429 207.70619202]
[-2.64815307 192.80108643]
[-0.64231443 177.93580627]
[4.93251467 164.01023865]
[13.73885250 151.86740112]
[25.24359131 142.24238586]
[38.75027084 135.71784973]
[53.44124603 132.68878174]
[68.42716217 133.33853149]
[82.80083466 137.62776184]
[95.69212341 145.29684448]
[106.32144928 155.88255310]
[102.66274261 141.33560181]
[99.00403595 126.78865051]
[95.34532928 112.24169922]
[91.09248352 97.85721588]
[86.25267029 83.65946198]
[74.47650146 73.09384155]
[77.69347382 58.55078888]
[72.85365295 44.35303879]
[68.01383972 30.15528488]
[63.17402267 15.95753193]
[58.33420563 1.75977969]
[50.17753983 -10.82866001]
[39.19673920 -21.04736710]
[28.21593666 -31.26607323]
[17.23513412 -41.48477936]
[12.02528191 -42.67335129]
[8.20698452 -45.48870468]
[6.17080069 -49.11134720]
[5.91761780 -52.68669510]
[-4.41328478 -63.56201172]
[-14.74418736 -74.43732452]
[-30.68051147 -76.28479004]
[-39.04964828 -89.97190094]
[-33.43151474 -104.99908447]
[-18.13586044 -109.83876038]
[-4.89620209 -100.77835083]
[-3.86887360 -84.76822662]
[6.46202898 -73.89291382]
[16.79293251 -63.01759720]
[27.45384026 -52.46558380]
[38.43464279 -42.24687576]
[49.41544724 -32.02816772]
[60.39624786 -21.80946159]
[56.25949478 -36.22776031]
[55.62615967 -51.21438217]
[58.53169632 -65.93029022]
[64.81343079 -79.55158234]
[74.11968231 -91.31566620]
[85.92942810 -100.56391144]
[99.58147430 -106.77854156]
[114.31150055 -109.61161804]
[129.29483032 -108.90453339]
[143.69259644 -104.69687653]
[156.69871521 -97.22421265]
[167.58503723 -86.90490723]
[175.74206543 -74.31670380]
[180.71313477 -60.16437149]
[182.21990967 -45.24024200]
[180.17805481 -30.37986565]
[174.70187378 -16.41521645]
[166.09794617 -4.12812614]
[154.84800720 5.79349852]
[141.58186340 12.79418278]
[127.04225922 16.48198318]
[112.04320526 16.65043449]
[97.42443848 13.29010391]
[84.00442505 6.58912659]
[72.53195953 -3.08003664]
[77.37177277 11.11771584]
[82.21159363 25.31546783]
[87.05140686 39.51322174]
[91.89122772 53.71097183]
[103.32122040 63.26107788]
[100.45042419 78.81964874]
[105.29023743 93.01739502]
[107.97302246 94.60353088]
[110.12137604 97.22498322]
[111.34186554 100.67925262]
[111.32396698 104.61819458]
[109.89228821 108.58299255]
[113.55099487 123.12994385]
[117.20970154 137.67689514]
[120.86840057 152.22384644]
[127.82875824 165.51119995]
[137.70446777 176.80146790]
[152.61398315 182.09457397]
[155.16961670 196.76829529]
[165.04531860 208.05857849]
[179.95483398 213.35166931]
[182.51046753 228.02539062]
[192.38618469 239.31567383]
[202.26188660 250.60595703]
[212.13758850 261.89624023]
[224.92767334 253.99282837]
[238.84422302 248.30255127]
[253.50759888 244.98060608]
[268.51776123 244.11763000]
[283.46524048 245.73718262]
[297.94223022 249.79505920]
[311.55383301 256.18054199]
[323.92864990 264.71948242]
[334.72915649 275.17889404]
[343.66064453 287.27346802]
[350.47949219 300.67318726]
[354.99966431 315.01257324]
[357.09786987 329.90042114]
[356.71682739 344.93054199]
[353.86697388 359.69293213]
[348.62603760 373.78485107]
[341.13696289 386.82186890]
[331.60412598 398.44833374]
[320.28753662 408.34704590]
[307.49594116 416.24798584]
[293.57827759 421.93560791]
[278.91427612 425.25469971]
[263.90393066 426.11477661]
[248.95677185 424.49237061]
[234.48054504 420.43170166]
[220.87019348 414.04357910]
[208.49700928 405.50225830]
[197.69853210 395.04077148]
[188.76937866 382.94448853]
[181.95310974 369.54342651]
[177.43568420 355.20318604]
[175.34036255 340.31494141]
[175.72428894 325.28488159]
[178.57699585 310.52307129]
[183.82064819 296.43212891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 117]
[2 116]
[3 115]
[4 114]
[6 112]
[7 111]
[9 109]
[10 108]
[34 107]
[35 106]
[36 105]
[37 104]
[38 99]
[39 98]
[41 96]
[42 95]
[43 94]
[44 93]
[45 92]
[46 67]
[47 66]
[48 65]
[49 64]
[53 63]
[54 62]
[55 61]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
