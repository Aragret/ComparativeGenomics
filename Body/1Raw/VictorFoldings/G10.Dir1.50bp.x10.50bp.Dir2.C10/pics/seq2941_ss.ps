%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGCGAACUACUAUACUCAAUUGAUCCAAUAACUUGACCAACGGAACAAGUUACCCUAGGGAxxxxxxxxxxAUAGUGGAGGCCGGAGCAGGAACAGGUUGAACAGUCUACCCUCCCUUAGCAGGGAACUACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[102.74758911 267.87966919]
[102.74758911 252.87965393]
[102.74758911 237.87965393]
[102.74758911 222.87965393]
[102.74758911 207.87965393]
[102.74758911 192.87965393]
[102.74758911 177.87965393]
[102.74758911 162.87965393]
[102.74758911 147.87965393]
[102.74758911 132.87965393]
[83.54050446 125.41965485]
[73.98947906 109.14761353]
[76.39945984 92.18385315]
[64.24612427 83.39201355]
[48.84027481 85.69364166]
[36.64030838 76.60433197]
[34.54099655 61.90302277]
[22.38766479 53.11118317]
[10.05638123 44.57072067]
[-2.44765449 36.28524780]
[-14.95169067 27.99977303]
[-27.45572662 19.71429825]
[-39.95976257 11.42882442]
[-51.28178024 21.39110947]
[-64.78627777 28.07795906]
[-79.55003357 31.03893852]
[-94.56547546 30.07809067]
[-108.80942535 25.26691246]
[-121.31285858 16.93905449]
[-131.22677612 5.66719580]
[-137.87989807 -7.77633095]
[-140.82406616 -22.47246361]
[-139.86450195 -37.41823196]
[-135.07260132 -51.59522629]
[-147.57662964 -59.88069916]
[-160.08067322 -68.16617584]
[-178.45372009 -68.84548187]
[-185.71003723 -84.79510498]
[-198.62274170 -92.42807770]
[-211.76435852 -99.65977478]
[-224.90599060 -106.89147949]
[-238.04762268 -114.12318420]
[-251.18925476 -121.35488892]
[-264.33090210 -128.58659363]
[-277.47253418 -135.81829834]
[-295.83938599 -134.98796082]
[-304.37973022 -150.28851318]
[-317.66708374 -157.24887085]
[-334.50338745 -159.24261475]
[-337.24832153 -175.97288513]
[-321.93176270 -183.24192810]
[-310.70672607 -170.53620911]
[-297.41940308 -163.57585144]
[-285.74365234 -166.88333130]
[-274.59854126 -161.14245605]
[-270.24081421 -148.95991516]
[-257.09918213 -141.72822571]
[-243.95756531 -134.49652100]
[-230.81593323 -127.26481628]
[-217.67430115 -120.03311157]
[-204.53266907 -112.80140686]
[-191.39103699 -105.56970978]
[-187.86853027 -106.23244476]
[-183.84765625 -105.18260193]
[-180.15522766 -102.20407867]
[-177.68304443 -97.46662140]
[-165.77531433 -99.80506897]
[-155.13876343 -93.16918182]
[-151.79519653 -80.67021179]
[-139.29115295 -72.38473511]
[-126.78712463 -64.09925842]
[-115.59926605 -74.03814697]
[-102.20964813 -80.74746704]
[-87.52830505 -83.76450348]
[-72.55479431 -82.87770844]
[-58.31017303 -78.14154053]
[-45.76734161 -69.87313843]
[-35.78461075 -58.63113403]
[-29.04695511 -45.17785645]
[-26.01903152 -30.42768478]
[-26.91312599 -15.38487816]
[-31.67428780 -1.07521164]
[-19.17025185 7.21026278]
[-6.66621590 15.49573803]
[5.83782005 23.78121185]
[18.34185600 32.06668854]
[23.17343330 31.99540710]
[28.08828354 35.00075912]
[31.17950821 40.95784760]
[43.33283997 49.74969101]
[57.95275879 47.14323807]
[70.40321350 55.88628769]
[73.03797150 71.23867798]
[85.19129944 80.03051758]
[103.18393707 72.61225128]
[123.13758087 80.46218109]
[132.94866943 101.73374939]
[147.94155884 101.27182770]
[162.92179871 100.50216675]
[177.88308716 99.42509460]
[192.84436035 98.34802246]
[199.25518799 86.10653687]
[210.79483032 78.70355225]
[224.37780762 77.99089813]
[236.43495178 84.04832458]
[243.85115051 95.19068146]
[258.83139038 94.42102051]
[273.81164551 93.65135956]
[287.19662476 85.21615601]
[300.30413818 92.29021454]
[315.28439331 91.52056122]
[328.74530029 82.15383148]
[343.47048950 89.37190247]
[344.31195068 105.74945068]
[330.40405273 114.43865204]
[316.05404663 106.50080109]
[301.07379150 107.27046204]
[288.76028442 115.65061188]
[274.58129883 108.63159943]
[259.60104370 109.40126038]
[244.62081909 110.17092133]
[236.13728333 124.19161224]
[220.82350159 130.47650146]
[204.61492920 126.37641144]
[193.92143250 113.30930328]
[178.96014404 114.38637543]
[163.99887085 115.46344757]
[160.21682739 118.47099304]
[154.48963928 119.09336090]
[148.40348816 116.26470947]
[133.41059875 116.72663879]
[146.78955078 123.50923157]
[161.78656006 123.80876160]
[174.68521118 131.46543884]
[182.13009644 144.48748779]
[182.18450928 159.48739624]
[174.83430481 172.56311035]
[161.99153137 180.31317139]
[146.99708557 180.72149658]
[133.75158691 173.68185425]
[125.70065308 161.02552795]
[124.93896484 146.04339600]
[117.74758911 132.87965393]
[117.74758911 147.87965393]
[117.74758911 162.87965393]
[117.74758911 177.87965393]
[117.74758911 192.87965393]
[117.74758911 207.87965393]
[117.74758911 222.87965393]
[117.74758911 237.87965393]
[117.74758911 252.87965393]
[117.74758911 267.87966919]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[13 94]
[14 93]
[17 90]
[18 89]
[19 86]
[20 85]
[21 84]
[22 83]
[23 82]
[34 71]
[35 70]
[36 69]
[38 66]
[39 62]
[40 61]
[41 60]
[42 59]
[43 58]
[44 57]
[45 56]
[47 53]
[48 52]
[97 131]
[98 130]
[99 127]
[100 126]
[101 125]
[106 121]
[107 120]
[108 119]
[110 117]
[111 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
