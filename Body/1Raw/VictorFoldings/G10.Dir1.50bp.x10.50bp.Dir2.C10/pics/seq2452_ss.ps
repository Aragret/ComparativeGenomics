%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACUCCUCACACCCAAUUGGACCAAUCUAUCACCCUAUAGAAGAACUAAUGUUAGUAUAAGxxxxxxxxxxUCCUCCGACCCCCUAACAACCCCCCUCCUAAUACUAACUACCUGACUCCUACCCCUCACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[99.29043579 415.29791260]
[99.29043579 400.29791260]
[99.29043579 385.29791260]
[99.29043579 370.29791260]
[99.29043579 355.29791260]
[99.29043579 340.29791260]
[99.29043579 325.29791260]
[99.29043579 310.29791260]
[99.29043579 295.29791260]
[99.29043579 280.29791260]
[83.04827881 276.87536621]
[67.93885040 269.98806763]
[54.69167328 259.96557617]
[43.94702530 247.28886414]
[36.22497177 232.56729126]
[31.90020180 216.50929260]
[31.18384361 199.88825989]
[34.11317062 183.50535583]
[40.54965210 168.15084839]
[50.18552780 154.56600952]
[62.55849838 143.40733337]
[77.07392120 135.21475220]
[93.03337860 130.38563538]
[91.78650665 115.43755341]
[81.68785858 104.34623718]
[66.92179871 101.70736694]
[52.15574646 99.06850433]
[37.38969040 96.42964172]
[22.62363434 93.79077911]
[9.74752903 102.55683136]
[-5.18975973 99.67029572]
[-13.46749878 87.34087372]
[-24.51749039 94.07523346]
[-36.79521179 91.53034210]
[-43.79391861 81.61441803]
[-58.50188065 78.66893768]
[-73.20983887 75.72345734]
[-87.91780090 72.77797699]
[-102.62576294 69.83248901]
[-115.63732910 78.80326080]
[-131.16586304 75.86385345]
[-139.99856567 62.75817490]
[-136.89515686 47.26158142]
[-123.69681549 38.56793594]
[-108.23390198 41.83501816]
[-99.68028259 55.12453079]
[-84.97232056 58.07001114]
[-70.26435852 61.01549530]
[-55.55639648 63.96097565]
[-40.84843445 66.90645599]
[-24.58731461 60.38143921]
[-10.82863426 72.57482147]
[1.20715415 63.87565994]
[16.21962547 66.34149933]
[25.26249886 79.02471924]
[40.02855301 81.66358948]
[54.79460907 84.30245209]
[69.56066895 86.94131470]
[84.32672119 89.58017731]
[98.04677582 83.51716614]
[106.03668976 70.82223511]
[114.02660370 58.12730789]
[122.01652527 45.43237686]
[130.00643921 32.73744583]
[137.99635315 20.04251671]
[145.98626709 7.34758806]
[153.97618103 -5.34734154]
[142.49673462 -15.04105949]
[132.47814941 -26.23812294]
[124.11546326 -38.72057724]
[117.57145691 -52.24544525]
[112.97351074 -66.54946899]
[110.41111755 -81.35420227]
[109.93415833 -96.37148285]
[111.55191803 -111.30898285]
[115.23291016 -125.87594604]
[120.90547943 -139.78881836]
[128.45921326 -152.77679443]
[137.74707031 -164.58703613]
[148.58825684 -174.98966980]
[160.77174377 -183.78219604]
[174.06039429 -190.79348755]
[188.19551086 -195.88703918]
[202.90199280 -198.96371460]
[217.89352417 -199.96362305]
[232.87832642 -198.86732483]
[247.56469727 -195.69612122]
[261.66677856 -190.51176453]
[274.91006470 -183.41516113]
[287.03674316 -174.54444885]
[297.81079102 -164.07229614]
[307.02249146 -152.20256042]
[314.49255371 -139.16627502]
[320.07553101 -125.21720886]
[323.66275024 -110.62687683]
[325.18438721 -95.67927551]
[324.61087036 -80.66537476]
[321.95330811 -65.87742615]
[317.26345825 -51.60327148]
[310.63259888 -38.12076950]
[302.18981934 -25.69235992]
[292.09942627 -14.55996418]
[280.55786133 -4.94027758]
[267.78976440 2.97944951]
[254.04368591 9.04505730]
[239.58720398 13.13847733]
[224.70170593 15.18002987]
[209.67694092 15.12997532]
[194.80535889 12.98928738]
[180.37646484 8.79963684]
[166.67111206 2.64257455]
[158.68119812 15.33750439]
[150.69128418 28.03243446]
[142.70137024 40.72736359]
[134.71145630 53.42229462]
[126.72153473 66.11722565]
[118.73162079 78.81214905]
[110.74170685 91.50708008]
[113.42587280 95.70417786]
[114.48131561 100.71986389]
[113.67282104 105.92654419]
[111.00505829 110.63609314]
[106.73459625 114.19067383]
[107.98146820 129.13876343]
[121.40802765 130.57150269]
[134.36491394 134.35824585]
[146.44294739 140.37797546]
[157.26089478 148.43916321]
[166.47764587 158.28587341]
[173.80284119 169.60589600]
[179.00605774 182.04066467]
[181.92408752 195.19654846]
[182.46604919 208.65737915]
[180.61614990 221.99757385]
[176.43426514 234.79562378]
[170.05387878 246.64739990]
[161.67790222 257.17889404]
[151.57217407 266.05804443]
[140.05708313 273.00521851]
[127.49732971 277.80194092]
[114.29043579 280.29791260]
[114.29043579 295.29791260]
[114.29043579 310.29791260]
[114.29043579 325.29791260]
[114.29043579 340.29791260]
[114.29043579 355.29791260]
[114.29043579 370.29791260]
[114.29043579 385.29791260]
[114.29043579 400.29791260]
[114.29043579 415.29791260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[23 124]
[24 123]
[25 59]
[26 58]
[27 57]
[28 56]
[29 55]
[32 52]
[35 50]
[36 49]
[37 48]
[38 47]
[39 46]
[60 118]
[61 117]
[62 116]
[63 115]
[64 114]
[65 113]
[66 112]
[67 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
