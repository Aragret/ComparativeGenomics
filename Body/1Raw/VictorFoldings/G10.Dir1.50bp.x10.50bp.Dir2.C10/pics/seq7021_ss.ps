%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUACACGACACGUACUACGUUGUAGCCCACUUCCACUAUGUCCUAUCAAUAGGAGCUGUAxxxxxxxxxxCUGUCGCCUUAAUCCAAGCCUACGUUUUCACACUUCUAGUAAGCCUCUACCUGCACGACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-21.86254311 209.95776367]
[-29.72142982 200.56610107]
[-41.98379898 209.20521545]
[-54.24616623 217.84432983]
[-66.50853729 226.48344421]
[-78.77090454 235.12255859]
[-85.59619141 249.39582825]
[-100.45685577 250.40080261]
[-112.71922302 259.03991699]
[-124.98159027 267.67904663]
[-137.24395752 276.31814575]
[-149.50633240 284.95727539]
[-161.76869202 293.59637451]
[-174.03106689 302.23550415]
[-186.29342651 310.87460327]
[-188.02175903 315.01882935]
[-190.73078918 318.05728149]
[-193.93888855 319.81509399]
[-197.15789795 320.29672241]
[-199.95376587 319.67184448]
[-212.89183044 327.26174927]
[-225.82987976 334.85165405]
[-238.76792908 342.44155884]
[-249.37036133 355.67126465]
[-265.01809692 349.14553833]
[-263.07910156 332.30282593]
[-246.35784912 329.50350952]
[-233.41978455 321.91360474]
[-220.48173523 314.32369995]
[-207.54367065 306.73379517]
[-194.93254089 298.61224365]
[-182.67018127 289.97314453]
[-170.40780640 281.33401489]
[-158.14544678 272.69491577]
[-145.88307190 264.05578613]
[-133.62071228 255.41667175]
[-121.35833740 246.77755737]
[-109.09597015 238.13844299]
[-103.14776611 224.48310852]
[-87.41001892 222.86019897]
[-75.14765167 214.22106934]
[-62.88528061 205.58195496]
[-50.62291336 196.94284058]
[-38.36054611 188.30372620]
[-52.66968536 160.27566528]
[-61.36688614 130.03195190]
[-64.13243866 98.68428802]
[-60.86469650 67.38499451]
[-51.68377304 37.28459167]
[-36.92714310 9.48952293]
[-17.13724899 -14.97849464]
[-27.35072899 -25.96415901]
[-37.56420898 -36.94982529]
[-47.77768707 -47.93548965]
[-57.99116898 -58.92115402]
[-73.81697083 -63.21953201]
[-77.74519348 -79.14125061]
[-65.73482513 -90.30740356]
[-50.14109802 -85.23121643]
[-47.00550461 -69.13463593]
[-36.79202271 -58.14896774]
[-26.57854271 -47.16330338]
[-16.36506271 -36.17763901]
[-6.15158367 -25.19197464]
[0.17428491 -30.29203987]
[6.74480581 -35.07278824]
[13.54387569 -39.52249908]
[20.55483246 -43.63026810]
[27.76049232 -47.38603210]
[35.14319611 -50.78058243]
[42.68484879 -53.80559921]
[50.36697006 -56.45367050]
[58.17073441 -58.71830750]
[66.07701111 -60.59395981]
[74.06642914 -62.07602692]
[82.11940002 -63.16088104]
[90.21619415 -63.84585953]
[98.33696747 -64.12928772]
[106.46181488 -64.01046753]
[114.57083130 -63.48969269]
[122.64413452 -62.56824112]
[130.66194153 -61.24836349]
[138.60459900 -59.53330231]
[146.45265198 -57.42725754]
[154.18684387 -54.93539047]
[161.78825378 -52.06380844]
[169.23822021 -48.81954956]
[176.51850891 -45.21056366]
[183.61125183 -41.24569702]
[190.49908447 -36.93466949]
[197.16513062 -32.28804016]
[203.59304810 -27.31720161]
[209.76707458 -22.03433418]
[215.67208862 -16.45238686]
[221.29360962 -10.58503819]
[226.61785889 -4.44666815]
[231.63180542 1.94767892]
[236.32313538 8.58233166]
[240.68037415 15.44103050]
[244.69284058 22.50696564]
[248.35069275 29.76282120]
[251.64495850 37.19081116]
[254.56758118 44.77273560]
[257.11138916 52.49000931]
[259.27014160 60.32372284]
[261.03857422 68.25466919]
[262.41232300 76.26342010]
[263.38803101 84.33034515]
[263.96331787 92.43567657]
[264.13674927 100.55953979]
[263.90792847 108.68203735]
[263.27740479 116.78325653]
[262.24670410 124.84333801]
[276.95468140 127.78881836]
[291.66262817 130.73429871]
[305.75708008 123.07099915]
[320.47958374 129.44496155]
[324.53631592 144.96664429]
[314.81527710 157.72914124]
[298.77362061 157.94213867]
[288.71716309 145.44226074]
[274.00918579 142.49678040]
[259.30123901 139.55130005]
[255.90907288 151.31814575]
[251.64904785 162.79933167]
[246.54487610 173.93096924]
[240.62498474 184.65106201]
[233.92231750 194.89994812]
[226.47419739 204.62059021]
[218.32205200 213.75886536]
[209.51129150 222.26391602]
[200.09094238 230.08840942]
[190.11344910 237.18876648]
[179.63433838 243.52546692]
[168.71195984 249.06326294]
[157.40708923 253.77130127]
[145.78268433 257.62338257]
[133.90342712 260.59808350]
[121.83545685 262.67883301]
[109.64593506 263.85403442]
[97.40271759 264.11715698]
[85.17396545 263.46673584]
[73.02773285 261.90640259]
[61.03164291 259.44482422]
[49.25246811 256.09573364]
[37.75577164 251.87773132]
[26.60555267 246.81431580]
[15.86387730 240.93368530]
[5.59053755 234.26853943]
[-4.15728188 226.85601807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 44]
[3 43]
[4 42]
[5 41]
[6 40]
[8 38]
[9 37]
[10 36]
[11 35]
[12 34]
[13 33]
[14 32]
[15 31]
[20 30]
[21 29]
[22 28]
[23 27]
[51 64]
[52 63]
[53 62]
[54 61]
[55 60]
[113 123]
[114 122]
[115 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
