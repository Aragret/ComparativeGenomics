%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUUCGAAGAACCCGUAUACAUAAAAUCUAGACAAAAAAGGAAGGAAUCGAACCCCCCAAAxxxxxxxxxxUAUUUAUGUGCUCCGGGUCCAUCAUCCACAACCUUAACAAUGAACAAGAUAUUCGAAAAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[109.62316895 274.53381348]
[109.62316895 259.53381348]
[109.62316895 244.53382874]
[109.62316895 229.53382874]
[109.62316895 214.53382874]
[109.62316895 199.53382874]
[109.62316895 184.53382874]
[109.62316895 169.53382874]
[109.62316895 154.53382874]
[109.62316895 139.53382874]
[99.65370178 140.06036377]
[90.01209259 138.14976501]
[81.27555084 133.99339294]
[73.94808960 127.91474152]
[68.43154907 120.34528351]
[65.00381470 111.79459381]
[63.80544662 102.81627655]
[64.83523560 93.97228241]
[67.95485687 85.79776001]
[72.90182495 78.76866150]
[63.39347076 67.16732025]
[53.88510895 55.56598282]
[44.37675095 43.96464157]
[34.86839294 32.36330032]
[18.02943420 33.58870316]
[3.90532875 24.64492607]
[-2.06715274 9.20810604]
[2.27168012 -6.59315491]
[-7.47597218 -17.99417496]
[-17.22362328 -29.39519691]
[-26.97127533 -40.79621887]
[-36.71892929 -52.19723892]
[-46.46657944 -63.59825897]
[-56.21423340 -74.99928284]
[-69.65158081 -67.42653656]
[-84.29894257 -62.60776901]
[-99.59849548 -60.72459030]
[-114.96796417 -61.84686661]
[-129.82273865 -65.93009949]
[-143.59815979 -72.81721497]
[-155.77093506 -82.24458313]
[-165.87905884 -93.85211182]
[-173.53932190 -107.19702148]
[-178.46186829 -121.77070618]
[-180.46110535 -137.01814270]
[-179.46276855 -152.35899353]
[-175.50663757 -167.20976257]
[-168.74494934 -181.00588989]
[-159.43658447 -193.22332764]
[-169.41931152 -204.41908264]
[-184.96009827 -205.47819519]
[-194.92451477 -216.97448730]
[-193.81904602 -231.78373718]
[-203.80177307 -242.97949219]
[-219.42581177 -242.32881165]
[-231.78115845 -251.91418457]
[-235.03398132 -267.20971680]
[-227.64842224 -280.99331665]
[-213.11169434 -286.75677490]
[-198.28759766 -281.77877808]
[-190.17562866 -268.40979004]
[-192.60600281 -252.96221924]
[-182.62327576 -241.76646423]
[-167.78466797 -241.17378235]
[-157.50128174 -229.96189880]
[-158.22354126 -214.40180969]
[-148.24081421 -203.20605469]
[-135.72383118 -210.73335266]
[-122.02810669 -215.82090759]
[-107.62431335 -218.29223633]
[-93.00775146 -218.06080627]
[-78.68132019 -215.13307190]
[-65.13822174 -209.60824585]
[-52.84497833 -201.67500305]
[-42.22536469 -191.60501099]
[-33.64579773 -179.74360657]
[-27.40268707 -166.49798584]
[-23.71220779 -152.32321167]
[-22.70280647 -137.70657349]
[-24.41073227 -123.15084839]
[-28.77874374 -109.15700531]
[-35.65801239 -96.20694733]
[-44.81321335 -84.74693298]
[-35.06555939 -73.34590912]
[-25.31790733 -61.94488907]
[-15.57025528 -50.54386902]
[-5.82260323 -39.14284897]
[3.92504883 -27.74182701]
[13.67270088 -16.34080696]
[26.86288643 -18.62443733]
[39.55523300 -14.04013062]
[48.38261032 -3.68987060]
[50.94691086 9.78000069]
[46.46973419 22.85494041]
[55.97809219 34.45628357]
[65.48645020 46.05762482]
[74.99481201 57.65896606]
[84.50316620 69.26030731]
[103.39176941 64.16938019]
[122.89899445 70.23200226]
[136.69976807 86.44684601]
[139.81484985 108.38491821]
[154.80754089 107.91687012]
[169.80023193 107.44882965]
[184.79293823 106.98078918]
[190.13629150 92.74994659]
[200.52247620 81.65058899]
[214.36766052 75.37528992]
[229.56054688 74.88099670]
[243.78436279 80.24307251]
[254.87004089 90.64384460]
[261.12710571 104.49726868]
[261.60144043 119.69080353]
[256.22064209 133.90754700]
[245.80529785 144.97953796]
[231.94364929 151.21838379]
[216.74951172 151.67269897]
[202.53985596 146.27322388]
[191.48158264 135.84332275]
[185.26097107 121.97348785]
[170.26828003 122.44152832]
[155.27557373 122.90956879]
[140.28288269 123.37760925]
[153.66461182 130.15473938]
[167.04632568 136.93188477]
[180.42803955 143.70901489]
[195.32229614 145.48703003]
[208.31892395 152.97619629]
[217.32585144 164.97099304]
[220.89323425 179.54060364]
[218.44683838 194.33976746]
[210.38044739 206.98623657]
[197.99250793 215.44432068]
[183.27713013 218.35250854]
[168.60304260 215.24266052]
[156.33233643 206.61538696]
[148.44024658 193.85940552]
[146.19731140 179.02503967]
[139.00593567 165.86129761]
[131.81454468 152.69755554]
[124.62316895 139.53382874]
[124.62316895 154.53382874]
[124.62316895 169.53382874]
[124.62316895 184.53382874]
[124.62316895 199.53382874]
[124.62316895 214.53382874]
[124.62316895 229.53382874]
[124.62316895 244.53382874]
[124.62316895 259.53381348]
[124.62316895 274.53381348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[20 98]
[21 97]
[22 96]
[23 95]
[24 94]
[28 89]
[29 88]
[30 87]
[31 86]
[32 85]
[33 84]
[34 83]
[49 67]
[50 66]
[53 63]
[54 62]
[102 123]
[103 122]
[104 121]
[105 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
