%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUCGUAGUAACAGCCAUUCUCAUCCAAACCCCCUGAAGCUUCACCGGCGCAGUCAUUCUxxxxxxxxxxUAAUACCAACUAUCUCCCUAAUUGAAAACAAAAUACUCAAAUGGGCCUGUCCUUGUAGUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 291.80279541]
[92.50000000 276.80279541]
[92.50000000 261.80279541]
[92.50000000 246.80278015]
[92.50000000 231.80278015]
[92.50000000 216.80278015]
[92.50000000 201.80278015]
[92.50000000 186.80278015]
[92.50000000 171.80278015]
[92.50000000 156.80278015]
[78.05754089 152.92764282]
[65.10964203 145.44743347]
[54.53823090 134.87167358]
[47.06335068 121.92070770]
[43.19413757 107.47665405]
[43.19413757 92.52334595]
[47.06335068 78.07929230]
[54.53823090 65.12832642]
[65.10964203 54.55256653]
[78.05754089 47.07236481]
[92.50000000 43.19721603]
[92.50000000 28.19721603]
[92.50000000 13.19721508]
[92.50000000 -1.80278468]
[92.18794250 -16.79953766]
[91.56396484 -31.78655434]
[90.93998718 -46.77357101]
[90.31600952 -61.76058578]
[89.69203186 -76.74760437]
[74.69148254 -77.14778900]
[59.75320816 -78.57072449]
[44.94686508 -81.00976562]
[30.34148598 -84.45355225]
[16.00516701 -88.88601685]
[2.00475550 -94.28649902]
[-11.59447479 -100.62981415]
[-24.72911644 -107.88639069]
[-37.33792877 -116.02239990]
[-49.36212540 -124.99989319]
[-60.74564362 -134.77702332]
[-71.43540192 -145.30821228]
[-81.38156891 -156.54432678]
[-90.53775787 -168.43301392]
[-98.86128998 -180.91883850]
[-106.31335449 -193.94355774]
[-112.85919952 -207.44647217]
[-118.46830750 -221.36460876]
[-123.11453247 -235.63308716]
[-126.77620697 -250.18536377]
[-129.43624878 -264.95361328]
[-131.08227539 -279.86895752]
[-131.70660400 -294.86184692]
[-131.30632019 -309.86239624]
[-129.88328552 -324.80065918]
[-127.44413757 -339.60699463]
[-124.00025177 -354.21234131]
[-119.56769562 -368.54864502]
[-114.16712189 -382.54901123]
[-107.82370758 -396.14819336]
[-100.56704712 -409.28277588]
[-92.43095398 -421.89154053]
[-83.45337677 -433.91567993]
[-73.67617035 -445.29913330]
[-63.14492035 -455.98883057]
[-51.90872574 -465.93490601]
[-40.01997757 -475.09103394]
[-27.53410530 -483.41445923]
[-14.50932789 -490.86645508]
[-1.00637186 -497.41220093]
[12.91180515 -503.02120972]
[27.18031120 -507.66735840]
[41.73261642 -511.32891846]
[56.50087357 -513.98889160]
[71.41622162 -515.63482666]
[86.40912628 -516.25903320]
[101.40967560 -515.85864258]
[116.34793091 -514.43548584]
[131.15423584 -511.99624634]
[145.75956726 -508.55227661]
[160.09582520 -504.11962891]
[174.09617615 -498.71896362]
[187.69531250 -492.37545776]
[200.82986450 -485.11868286]
[213.43856812 -476.98251343]
[225.46264648 -468.00485229]
[236.84602356 -458.22756958]
[247.53564453 -447.69625854]
[257.48165894 -436.45999146]
[266.63769531 -424.57119751]
[274.96105957 -412.08526611]
[282.41293335 -399.06042480]
[288.95861816 -385.55743408]
[294.56753540 -371.63922119]
[299.21356201 -357.37066650]
[302.87503052 -342.81835938]
[305.53488159 -328.05007935]
[307.18072510 -313.13470459]
[307.80484009 -298.14181519]
[307.40435791 -283.14126587]
[305.98110962 -268.20300293]
[303.54177856 -253.39672852]
[300.09768677 -238.79141235]
[295.66494751 -224.45518494]
[290.26419067 -210.45487976]
[283.92059326 -196.85577393]
[276.66375732 -183.72128296]
[268.52749634 -171.11262512]
[259.54974365 -159.08862305]
[249.77238464 -147.70529175]
[239.24099731 -137.01574707]
[228.00466919 -127.06980896]
[216.11579895 -117.91385651]
[203.62980652 -109.59057617]
[190.60493469 -102.13877869]
[177.10189819 -95.59320068]
[163.18363953 -89.98437500]
[148.91506958 -85.33843231]
[134.36271667 -81.67705536]
[119.59442139 -79.01730347]
[104.67904663 -77.37158203]
[105.30302429 -62.38456345]
[105.92700195 -47.39754868]
[106.55097961 -32.41053009]
[107.17495728 -17.42351532]
[110.06895447 -13.55048943]
[110.51691437 -7.80326176]
[107.50000000 -1.80278468]
[107.50000000 13.19721508]
[107.50000000 28.19721603]
[107.50000000 43.19721603]
[121.94245911 47.07236481]
[134.89035034 54.55256653]
[145.46177673 65.12832642]
[152.93664551 78.07929230]
[156.80586243 92.52334595]
[156.80586243 107.47665405]
[152.93664551 121.92070770]
[145.46177673 134.87167358]
[134.89035034 145.44743347]
[121.94245911 152.92764282]
[107.50000000 156.80278015]
[107.50000000 171.80278015]
[107.50000000 186.80278015]
[107.50000000 201.80278015]
[107.50000000 216.80278015]
[107.50000000 231.80278015]
[107.50000000 246.80278015]
[107.50000000 261.80279541]
[107.50000000 276.80279541]
[107.50000000 291.80279541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[21 130]
[22 129]
[23 128]
[24 127]
[25 124]
[26 123]
[27 122]
[28 121]
[29 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
