%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUCUGCUUCCUAGUCCUGUAUGCCCUUUUCCUAACACUCACAACAAAACUAACUAAUACUAAxxxxxxxxxxCGCUCCGGGCCCAUAACACUUGGGGGUAGCUAAAGUGAACUGUAUCCGACAUCUGGUUCCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[100.29553223 482.81777954]
[100.29553223 467.81777954]
[100.29553223 452.81777954]
[100.29553223 437.81777954]
[100.29553223 422.81777954]
[100.29553223 407.81777954]
[100.29553223 392.81777954]
[100.29553223 377.81777954]
[100.29553223 362.81777954]
[100.29553223 347.81777954]
[85.69128418 344.51354980]
[72.18205261 338.03906250]
[60.44675827 328.71609497]
[51.07595062 317.00970459]
[44.54211044 303.50500488]
[41.17582321 288.87786865]
[41.14904785 273.86117554]
[44.46634293 259.20800781]
[50.96447754 245.65403748]
[60.32045364 233.88037109]
[72.06755829 224.47949219]
[85.61865997 217.92539978]
[100.29553223 214.54969788]
[100.29553223 199.54969788]
[100.29553223 184.54969788]
[99.53578949 169.56895447]
[90.55059052 157.68974304]
[96.85205841 143.17761230]
[95.33453369 128.25457764]
[78.32509613 118.71592712]
[71.36715698 100.49797821]
[77.68739319 82.04909515]
[68.87061310 69.91384125]
[60.05383682 57.77858353]
[51.23705673 45.64332962]
[38.16187668 53.02827072]
[24.33008766 58.87458801]
[9.92201996 63.10606003]
[-4.87448931 65.66751862]
[-19.86653709 66.52557373]
[-34.85867310 65.66903687]
[-49.65544128 63.10906982]
[-64.06393433 58.87905502]
[-77.89631653 53.03413391]
[-90.97224426 45.65051270]
[-103.12124634 36.82444763]
[-114.18494415 26.67100525]
[-124.01908875 15.32255554]
[-132.49548340 2.92705107]
[-139.50361633 -10.35390854]
[-144.95211792 -24.34717751]
[-148.76995850 -38.87032700]
[-150.90736389 -53.73401642]
[-151.33647156 -68.74446869]
[-150.05168152 -83.70598602]
[-147.06974792 -98.42352295]
[-142.42955017 -112.70520020]
[-136.19157410 -126.36483002]
[-128.43716431 -139.22433472]
[-119.26737976 -151.11604309]
[-108.80179596 -161.88494873]
[-97.17684937 -171.39065552]
[-84.54408264 -179.50921631]
[-71.06820679 -186.13479614]
[-56.92489243 -191.18103027]
[-42.29853439 -194.58212280]
[-27.37981415 -196.29373169]
[-12.36323166 -196.29353333]
[2.55544353 -194.58155823]
[17.18171501 -191.18009949]
[31.32490158 -186.13349915]
[44.80061340 -179.50758362]
[57.43317413 -171.38870239]
[69.05788422 -161.88270569]
[79.52319336 -151.11354065]
[88.69267273 -139.22158813]
[96.44676971 -126.36189270]
[102.68439484 -112.70210266]
[107.32423401 -98.42031097]
[110.30579376 -83.70269775]
[111.59020233 -68.74114990]
[111.16071320 -53.73070526]
[109.02293396 -38.86706924]
[105.20472717 -24.34401894]
[99.75586700 -10.35088634]
[92.74740601 2.92989588]
[84.27069855 15.32518578]
[74.43626404 26.67338562]
[63.37231064 36.82654953]
[72.18908691 48.96180344]
[81.00586700 61.09706116]
[89.82264709 73.23231506]
[95.24355316 71.76059723]
[100.84745789 71.37537384]
[106.41876221 72.09145355]
[111.74310303 73.88129425]
[116.61564636 76.67602539]
[120.84890747 80.36812592]
[124.28002930 84.81555176]
[138.63688660 80.47036743]
[152.99374390 76.12519073]
[167.35061646 71.78001404]
[181.70747375 67.43483734]
[184.52684021 52.39124298]
[194.02346802 40.38821411]
[208.01509094 34.18396378]
[223.28656006 35.20418167]
[236.32859802 43.21442795]
[244.14422607 56.37400818]
[244.93746948 71.65895081]
[238.52606201 85.55687714]
[226.38330078 94.87415314]
[211.29948425 97.46974182]
[196.74076843 92.74718475]
[186.05264282 81.79169464]
[171.69578552 86.13687897]
[157.33892822 90.48205566]
[142.98207092 94.82723236]
[128.62521362 99.17240906]
[123.83106995 115.87978363]
[110.25756836 126.73704529]
[111.77509308 141.66009521]
[120.86883545 154.60668945]
[114.45883179 168.05142212]
[126.03491974 158.51234436]
[140.75202942 161.41178894]
[147.84487915 174.62887573]
[142.12518311 188.49557495]
[127.77679443 192.86863708]
[115.29553223 184.54969788]
[115.29553223 199.54969788]
[115.29553223 214.54969788]
[129.97239685 217.92539978]
[143.52349854 224.47949219]
[155.27059937 233.88037109]
[164.62658691 245.65403748]
[171.12471008 259.20800781]
[174.44201660 273.86117554]
[174.41523743 288.87786865]
[171.04895020 303.50500488]
[164.51510620 317.00970459]
[155.14430237 328.71609497]
[143.40901184 338.03906250]
[129.89978027 344.51354980]
[115.29553223 347.81777954]
[115.29553223 362.81777954]
[115.29553223 377.81777954]
[115.29553223 392.81777954]
[115.29553223 407.81777954]
[115.29553223 422.81777954]
[115.29553223 437.81777954]
[115.29553223 452.81777954]
[115.29553223 467.81777954]
[115.29553223 482.81777954]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 154]
[2 153]
[3 152]
[4 151]
[5 150]
[6 149]
[7 148]
[8 147]
[9 146]
[10 145]
[23 132]
[24 131]
[25 130]
[26 124]
[28 122]
[29 121]
[32 92]
[33 91]
[34 90]
[35 89]
[99 119]
[100 118]
[101 117]
[102 116]
[103 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
