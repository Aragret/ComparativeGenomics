%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAGCAGCCACCAAUUAAGAAAGCGUUCAAGCUCAACACCCACUACCUAAAAAAUCCCAAAxxxxxxxxxxUCCAUCUGCCUACGACAAACAGACCUAAAAUCGCUCAUUGCAUACUCUUCAAUCAGCCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[119.36248779 336.91030884]
[119.05043030 321.91354370]
[118.73838043 306.91680908]
[118.42632294 291.92004395]
[118.11426544 276.92327881]
[117.80220795 261.92654419]
[117.49015045 246.92977905]
[117.17809296 231.93302917]
[116.86604309 216.93627930]
[114.99842834 202.05299377]
[111.59545135 187.44410706]
[108.19247437 172.83520508]
[104.78948975 158.22631836]
[100.17911530 152.38764954]
[101.47103119 143.27816772]
[98.37271118 128.60163879]
[84.31950378 123.97547913]
[74.44852448 112.95468140]
[71.39253235 98.47866821]
[75.96660614 84.40841675]
[86.95075989 74.49668884]
[83.85243988 59.82015991]
[80.75411987 45.14363480]
[77.65579987 30.46710968]
[74.07518005 26.49234390]
[72.57303619 21.98724174]
[72.99640656 17.84931374]
[74.85224915 14.77956963]
[72.67541504 -0.06163565]
[68.81963348 -5.56076765]
[68.42880249 -11.31216335]
[70.73009491 -15.56417179]
[69.17251587 -30.48308372]
[67.61493683 -45.40199661]
[52.61144257 -45.03414154]
[37.62615204 -45.85948944]
[22.75380898 -47.87282181]
[8.08844185 -51.06140518]
[-6.27723122 -55.40508270]
[-20.25238228 -60.87639236]
[-33.74865723 -67.44074249]
[-46.68072510 -75.05662537]
[-58.96682358 -83.67590332]
[-70.52927399 -93.24406433]
[-81.29498291 -103.70063019]
[-91.19586945 -114.97947693]
[-100.16934967 -127.00930786]
[-108.15868378 -139.71405029]
[-115.11335754 -153.01339722]
[-120.98941040 -166.82325745]
[-125.74967957 -181.05630493]
[-129.36407471 -195.62258911]
[-131.80975342 -210.42997742]
[-133.07122803 -225.38485718]
[-133.14054871 -240.39270020]
[-132.01725769 -255.35861206]
[-129.70846558 -270.18795776]
[-126.22878265 -284.78698730]
[-121.60018921 -299.06341553]
[-115.85195923 -312.92697144]
[-109.02042389 -326.28997803]
[-101.14878845 -339.06799316]
[-92.28681946 -351.18017578]
[-82.49053192 -362.55001831]
[-71.82187653 -373.10559082]
[-60.34830475 -382.78015137]
[-48.14234543 -391.51254272]
[-35.28118134 -399.24755859]
[-21.84611893 -405.93627930]
[-7.92210388 -411.53646851]
[6.40283203 -416.01266479]
[21.03812027 -419.33657837]
[35.89123154 -421.48718262]
[50.86825943 -422.45092773]
[65.87450409 -422.22167969]
[80.81510925 -420.80090332]
[95.59558868 -418.19757080]
[110.12252045 -414.42816162]
[124.30403900 -409.51647949]
[138.05049133 -403.49359131]
[151.27496338 -396.39758301]
[163.89385986 -388.27331543]
[175.82737732 -379.17214966]
[187.00007629 -369.15161133]
[197.34130859 -358.27508545]
[206.78572083 -346.61132812]
[215.27357483 -334.23410034]
[222.75122070 -321.22158813]
[229.17137146 -307.65612793]
[234.49343872 -293.62347412]
[238.68377686 -279.21231079]
[241.71589661 -264.51379395]
[243.57061768 -249.62084961]
[244.23623657 -234.62762451]
[243.70851135 -219.62889099]
[241.99079895 -204.71951294]
[239.09396362 -189.99374390]
[235.03630066 -175.54467773]
[229.84349060 -161.46366882]
[223.54833984 -147.83975220]
[216.19065857 -134.75904846]
[207.81697083 -122.30428314]
[198.48020935 -110.55417633]
[188.23941040 -99.58302307]
[177.15933228 -89.46018982]
[165.30999756 -80.24967957]
[152.76634216 -72.00972748]
[139.60768127 -64.79241943]
[125.91718292 -58.64339828]
[111.78142548 -53.60153198]
[97.28977203 -49.69869995]
[82.53384399 -46.95957565]
[84.09143066 -32.04066467]
[85.64900970 -17.12175179]
[87.51662445 -2.23847270]
[89.69345856 12.60273266]
[92.33232117 27.36878777]
[95.43064117 42.04531479]
[98.52896881 56.72183990]
[101.62728882 71.39836884]
[115.68049622 76.02452087]
[125.55147552 87.04531860]
[128.60746765 101.52133179]
[124.03339386 115.59158325]
[113.04924011 125.50331116]
[116.14756012 140.17984009]
[119.39838409 154.82333374]
[122.80136108 169.43223572]
[126.20433807 184.04112244]
[129.60731506 198.65002441]
[136.05938721 185.10856628]
[148.33924866 176.49433899]
[163.26829529 175.03707886]
[176.98217773 181.11401367]
[185.93112183 193.15213013]
[187.79872131 208.03541565]
[182.10153198 221.91136169]
[170.31425476 231.18823242]
[155.48800659 233.46473694]
[141.46052551 228.15159607]
[131.86279297 216.62422180]
[132.17485046 231.62097168]
[132.48690796 246.61772156]
[132.79896545 261.61447144]
[133.11102295 276.61123657]
[133.42308044 291.60800171]
[133.73513794 306.60473633]
[134.04718018 321.60150146]
[134.35923767 336.59823608]
[136.95024109 355.80596924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 130]
[11 129]
[12 128]
[13 127]
[15 126]
[16 125]
[21 120]
[22 119]
[23 118]
[24 117]
[28 116]
[29 115]
[32 114]
[33 113]
[34 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
