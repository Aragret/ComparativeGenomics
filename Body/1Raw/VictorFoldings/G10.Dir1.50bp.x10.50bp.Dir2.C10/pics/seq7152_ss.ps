%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUUUCACUAUCAUAUUCAUCGGCGUAAAUCUAACUUUCUUCCCACAACACUUUCUCGGCCxxxxxxxxxxGUCAUUAUUGGCUCAACUUUCCUCACUAUCUGCUUCAUCCGCCAACUAAUAUUUCACUUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 313.37582397]
[92.50000000 298.37582397]
[92.50000000 283.37582397]
[92.50000000 268.37582397]
[92.50000000 253.37582397]
[92.50000000 238.37582397]
[92.50000000 223.37582397]
[92.50000000 208.37582397]
[92.50000000 193.37582397]
[92.50000000 178.37582397]
[77.43047333 175.42967224]
[63.21934509 169.61466980]
[50.40711212 161.15197754]
[39.48107147 150.36346436]
[30.85677719 137.65945435]
[24.86224174 123.52311707]
[21.72546005 108.49211121]
[21.56573296 93.13813019]
[24.38913536 78.04512024]
[30.08828354 63.78713608]
[38.44641876 50.90645218]
[49.14565277 39.89297104]
[61.77905655 31.16556740]
[75.86613464 25.05617905]
[90.87110901 21.79716682]
[90.55905914 6.80041361]
[88.08808899 3.05130410]
[87.08213806 -0.89320040]
[87.41711426 -4.53595686]
[88.81651306 -7.47460508]
[90.89707184 -9.44402504]
[91.83270264 -24.41481590]
[92.76833344 -39.38560867]
[93.70395660 -54.35639954]
[78.83314514 -56.37050247]
[64.14643097 -59.45240402]
[49.72038269 -63.58603668]
[35.63021469 -68.74985504]
[21.94939041 -74.91692352]
[8.74923420 -82.05510712]
[-3.90143490 -90.12717438]
[-15.93666077 -99.09105682]
[-27.29369736 -108.90000153]
[-37.91333389 -119.50288391]
[-47.74020004 -130.84442139]
[-56.72306824 -142.86547852]
[-64.81510162 -155.50338745]
[-71.97411346 -168.69226074]
[-78.16278076 -182.36332703]
[-83.34883881 -196.44532776]
[-87.50524139 -210.86482239]
[-90.61032867 -225.54666138]
[-92.64790344 -240.41427612]
[-93.60735321 -255.39016724]
[-93.48366547 -270.39624023]
[-92.27749634 -285.35427856]
[-89.99512482 -300.18627930]
[-86.64844513 -314.81494141]
[-82.25492096 -329.16397095]
[-76.83744812 -343.15856934]
[-70.42427826 -356.72576904]
[-63.04883957 -369.79486084]
[-54.74958801 -382.29766846]
[-45.56978989 -394.16900635]
[-35.55730820 -405.34701538]
[-24.76434326 -415.77340698]
[-13.24716282 -425.39382935]
[-1.06581569 -434.15811157]
[11.71619129 -442.02053833]
[25.03221703 -448.94018555]
[38.81283951 -454.88088989]
[52.98620605 -459.81176758]
[67.47843170 -463.70703125]
[82.21395111 -466.54641724]
[97.11594391 -468.31512451]
[112.10671997 -469.00393677]
[127.10812378 -468.60922241]
[142.04193115 -467.13308716]
[156.83029175 -464.58316040]
[171.39611816 -460.97280884]
[185.66345215 -456.32083130]
[199.55792236 -450.65148926]
[213.00706482 -443.99429321]
[225.94079590 -436.38400269]
[238.29165649 -427.86029053]
[249.99526978 -418.46755981]
[260.99060059 -408.25482178]
[271.22036743 -397.27526855]
[280.63116455 -385.58621216]
[289.17401123 -373.24856567]
[296.80429077 -360.32662964]
[303.48226929 -346.88778687]
[309.17312622 -333.00210571]
[313.84716797 -318.74197388]
[317.48004150 -304.18176270]
[320.05282593 -289.39736938]
[321.55209351 -274.46585083]
[321.97000122 -259.46508789]
[321.30441284 -244.47326660]
[319.55874634 -229.56855774]
[316.74215698 -214.82865906]
[312.86929321 -200.33041382]
[307.96038818 -186.14944458]
[302.04098511 -172.35964966]
[295.14196777 -159.03292847]
[287.29931641 -146.23876953]
[278.55389404 -134.04388428]
[268.95129395 -122.51183319]
[258.54162598 -111.70275116]
[247.37911987 -101.67298126]
[235.52197266 -92.47483063]
[223.03202820 -84.15624237]
[209.97438049 -76.76059723]
[196.41711426 -70.32643890]
[182.43090820 -64.88732147]
[168.08869934 -60.47160339]
[153.46524048 -57.10230255]
[138.63677979 -54.79698563]
[123.68062592 -53.56767273]
[108.67475128 -53.42077255]
[107.73912048 -38.44997787]
[106.80349731 -23.47918701]
[105.86786652 -8.50839615]
[105.55580902 6.48835754]
[105.86786652 21.48511124]
[120.26541138 23.91890717]
[133.96594238 28.96948051]
[146.49821472 36.46311951]
[157.43121338 46.14208221]
[166.38888550 57.67346573]
[173.06314087 70.66065216]
[177.22441101 84.65695953]
[178.72959900 99.18097687]
[177.52690125 113.73316193]
[173.65769958 127.81301117]
[167.25506592 140.93623352]
[158.53923035 152.65147400]
[147.80996704 162.55578613]
[135.43629456 170.30853271]
[121.84379578 175.64303589]
[107.50000000 178.37582397]
[107.50000000 193.37582397]
[107.50000000 208.37582397]
[107.50000000 223.37582397]
[107.50000000 238.37582397]
[107.50000000 253.37582397]
[107.50000000 268.37582397]
[107.50000000 283.37582397]
[107.50000000 298.37582397]
[107.50000000 313.37582397]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[25 125]
[26 124]
[31 123]
[32 122]
[33 121]
[34 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
