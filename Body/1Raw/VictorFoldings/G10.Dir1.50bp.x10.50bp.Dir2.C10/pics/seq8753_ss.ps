%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAAUCCAAGCCUACGUUUUCACACUUCUAGUAAGCCUCUACCUGCACGACAACACAUAAUGAxxxxxxxxxxAUCCUACACUCCAACUCAUGAGACCCACAACAAAUAGCCCUUCUAAACGCUAAUCCAAGCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 306.22595215]
[92.50000000 291.22595215]
[92.50000000 276.22595215]
[92.50000000 261.22595215]
[92.50000000 246.22593689]
[92.50000000 231.22593689]
[92.50000000 216.22593689]
[92.50000000 201.22593689]
[92.50000000 186.22593689]
[92.50000000 171.22593689]
[77.85705566 168.11074829]
[64.18161774 162.01957703]
[52.07120132 153.21856689]
[42.05495453 142.09223938]
[34.57052612 129.12677002]
[29.94492912 114.88865662]
[28.38027573 100.00000000]
[29.94492912 85.11134338]
[34.57052612 70.87322998]
[42.05495453 57.90776062]
[52.07120132 46.78144073]
[64.18161774 37.98041916]
[77.85705566 31.88924408]
[92.50000000 28.77405739]
[92.50000000 13.77405739]
[92.50000000 -1.22594273]
[92.50000000 -16.22594261]
[92.50000000 -31.22594261]
[77.52462006 -32.16796112]
[62.63793564 -34.04843521]
[47.89870453 -36.85994339]
[33.36509705 -40.59138870]
[19.09446907 -45.22805023]
[5.14313841 -50.75162506]
[-8.43383217 -57.14031219]
[-21.58286095 -64.36890411]
[-34.25205612 -72.40886688]
[-46.39141464 -81.22846985]
[-57.95302963 -90.79291534]
[-68.89127350 -101.06444550]
[-79.16297150 -112.00252533]
[-88.72759247 -123.56398773]
[-97.54739380 -135.70321655]
[-105.58755493 -148.37228394]
[-112.81634521 -161.52119446]
[-119.20524597 -175.09806824]
[-124.72904205 -189.04930115]
[-129.36592102 -203.31987000]
[-133.09759521 -217.85340881]
[-135.90933228 -232.59260559]
[-137.79003906 -247.47924805]
[-138.73229980 -262.45462036]
[-138.73237610 -277.45959473]
[-137.79028320 -292.43496704]
[-135.90972900 -307.32165527]
[-133.09814453 -322.06088257]
[-129.36662292 -336.59445190]
[-124.72988129 -350.86505127]
[-119.20623779 -364.81637573]
[-112.81748199 -378.39331055]
[-105.58882141 -391.54229736]
[-97.54878998 -404.21145630]
[-88.72911835 -416.35076904]
[-79.16461945 -427.91232300]
[-68.89303589 -438.85052490]
[-57.95489883 -449.12216187]
[-46.39338303 -458.68670654]
[-34.25411606 -467.50643921]
[-21.58500671 -475.54653931]
[-8.43605232 -482.77526855]
[5.14085150 -489.16409302]
[19.09212303 -494.68780518]
[33.36270523 -499.32461548]
[47.89627457 -503.05621338]
[62.63547516 -505.86788940]
[77.52213287 -507.74853516]
[92.49751282 -508.69070435]
[107.50248718 -508.69070435]
[122.47786713 -507.74853516]
[137.36453247 -505.86788940]
[152.10372925 -503.05621338]
[166.63729858 -499.32461548]
[180.90788269 -494.68780518]
[194.85914612 -489.16409302]
[208.43605042 -482.77526855]
[221.58500671 -475.54653931]
[234.25411987 -467.50643921]
[246.39338684 -458.68670654]
[257.95489502 -449.12216187]
[268.89303589 -438.85052490]
[279.16461182 -427.91232300]
[288.72912598 -416.35076904]
[297.54879761 -404.21145630]
[305.58880615 -391.54229736]
[312.81747437 -378.39331055]
[319.20623779 -364.81637573]
[324.72988892 -350.86505127]
[329.36660767 -336.59445190]
[333.09814453 -322.06088257]
[335.90972900 -307.32165527]
[337.79028320 -292.43496704]
[338.73236084 -277.45959473]
[338.73229980 -262.45462036]
[337.79003906 -247.47924805]
[335.90933228 -232.59260559]
[333.09759521 -217.85340881]
[329.36593628 -203.31987000]
[324.72903442 -189.04930115]
[319.20526123 -175.09806824]
[312.81634521 -161.52119446]
[305.58755493 -148.37228394]
[297.54739380 -135.70321655]
[288.72760010 -123.56398773]
[279.16296387 -112.00252533]
[268.89126587 -101.06444550]
[257.95303345 -90.79291534]
[246.39141846 -81.22846985]
[234.25205994 -72.40886688]
[221.58285522 -64.36890411]
[208.43383789 -57.14031219]
[194.85685730 -50.75162506]
[180.90553284 -45.22805023]
[166.63490295 -40.59138870]
[152.10128784 -36.85994339]
[137.36206055 -34.04843521]
[122.47537994 -32.16796112]
[107.50000000 -31.22594261]
[107.50000000 -16.22594261]
[107.50000000 -1.22594273]
[107.50000000 13.77405739]
[107.50000000 28.77405739]
[122.14294434 31.88924408]
[135.81838989 37.98041916]
[147.92880249 46.78144073]
[157.94503784 57.90776062]
[165.42947388 70.87322998]
[170.05506897 85.11134338]
[171.61972046 100.00000000]
[170.05506897 114.88865662]
[165.42947388 129.12677002]
[157.94503784 142.09223938]
[147.92880249 153.21856689]
[135.81838989 162.01957703]
[122.14294434 168.11074829]
[107.50000000 171.22593689]
[107.50000000 186.22593689]
[107.50000000 201.22593689]
[107.50000000 216.22593689]
[107.50000000 231.22593689]
[107.50000000 246.22593689]
[107.50000000 261.22595215]
[107.50000000 276.22595215]
[107.50000000 291.22595215]
[107.50000000 306.22595215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 154]
[2 153]
[3 152]
[4 151]
[5 150]
[6 149]
[7 148]
[8 147]
[9 146]
[10 145]
[24 131]
[25 130]
[26 129]
[27 128]
[28 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
