%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAACAAUGAACAAGAUAUUCGAAAAAUAGGAGGACUACUCAAAACCAUACCUCUCACUUCxxxxxxxxxxCAUAUAACCUCCCCCAAAAUUCAGAAUAAUAACACACCCGACCACACCGCUAACAAUCAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[128.55946350 325.44070435]
[128.24740601 310.44396973]
[127.93534851 295.44720459]
[127.62329102 280.45043945]
[127.31123352 265.45370483]
[126.99917603 250.45693970]
[126.68711853 235.46018982]
[126.37506104 220.46343994]
[126.06301117 205.46669006]
[123.42414093 190.70062256]
[118.52259064 176.52406311]
[103.31761169 178.66392517]
[87.98645020 177.81192017]
[73.11220551 174.00044250]
[59.26059723 167.37448120]
[46.95845413 158.18603516]
[36.67366409 146.78456116]
[28.79739761 133.60369873]
[23.62921524 119.14479065]
[21.36568069 103.95772552]
[22.09288597 88.62014008]
[25.78317261 73.71536255]
[32.29618454 59.81029129]
[41.38420868 47.43376923]
[52.70159531 37.05653000]
[65.81790924 29.07324791]
[60.62249374 15.00172806]
[55.42707825 0.93020838]
[50.23166275 -13.14131069]
[45.03624725 -27.21282959]
[39.69473267 -41.22954178]
[34.20770264 -55.18993378]
[28.72067070 -69.15032196]
[11.62970352 -70.08142853]
[-3.30266023 -78.33432007]
[-13.12030411 -92.22039795]
[-15.90356445 -108.94142151]
[-11.14443207 -125.15330505]
[0.16152759 -137.63496399]
[-5.90148544 -151.35502625]
[-11.96449852 -165.07507324]
[-18.02751160 -178.79513550]
[-24.09052467 -192.51518250]
[-38.53079224 -188.36880493]
[-53.40116882 -186.22738647]
[-68.42462921 -186.13084412]
[-83.32130432 -188.08096313]
[-97.81365967 -192.04141235]
[-111.63173676 -197.93843079]
[-124.51808929 -205.66212463]
[-136.23266602 -215.06864929]
[-146.55722046 -225.98272705]
[-155.29943848 -238.20104980]
[-162.29641724 -251.49601746]
[-167.41784668 -265.61990356]
[-170.56829834 -280.30966187]
[-171.68907166 -295.29156494]
[-170.75930786 -310.28652954]
[-167.79632568 -325.01522827]
[-162.85530090 -339.20327759]
[-156.02830505 -352.58630371]
[-147.44252014 -364.91506958]
[-137.25788879 -375.95983887]
[-125.66413116 -385.51486206]
[-112.87725067 -393.40216064]
[-99.13545227 -399.47479248]
[-84.69474030 -403.61959839]
[-69.82412720 -405.75939941]
[-54.80065536 -405.85430908]
[-39.90419769 -403.90258789]
[-25.41226387 -399.94055176]
[-11.59483242 -394.04205322]
[1.29068685 -386.31695557]
[13.00424480 -376.90917969]
[23.32762527 -365.99398804]
[32.06850815 -353.77471924]
[39.06406021 -340.47900391]
[44.18395615 -326.35452271]
[47.33281326 -311.66445923]
[48.45197296 -296.68240356]
[47.52058411 -281.68753052]
[44.55599976 -266.95916748]
[39.61344910 -252.77168274]
[32.78500366 -239.38937378]
[24.19788170 -227.06155396]
[14.01204777 -216.01788330]
[2.41726279 -206.46411133]
[-10.37047100 -198.57820129]
[-4.30745840 -184.85813904]
[1.75555491 -171.13809204]
[7.81856823 -157.41802979]
[13.88158131 -143.69798279]
[26.92504120 -144.32939148]
[39.43156433 -140.46217346]
[49.89310837 -132.53976440]
[57.04041290 -121.49591827]
[59.99697876 -108.64472198]
[58.38652039 -95.52423096]
[52.38068390 -83.71240997]
[42.68106079 -74.63735199]
[48.16809082 -60.67696381]
[53.65512466 -46.71657562]
[59.06401825 -41.60878754]
[59.10776520 -32.40824509]
[64.30318451 -18.33672714]
[69.49859619 -4.26520729]
[74.69401550 9.80631256]
[79.88942719 23.87783241]
[94.29190063 21.47333527]
[108.89069366 21.76972961]
[123.18370056 24.75682259]
[136.67930603 30.33187294]
[148.91334534 38.30313110]
[159.46504211 48.39642334]
[167.97145081 60.26460266]
[174.14001465 73.49946594]
[177.75856018 87.64579773]
[178.70263672 102.21705627]
[176.93975830 116.71205139]
[172.53057861 130.63224792]
[165.62673950 143.49885559]
[156.46569824 154.86933899]
[145.36253357 164.35261536]
[132.69915771 171.62251282]
[137.60070801 185.79907227]
[141.21517944 171.24107361]
[149.76158142 158.91390991]
[162.12696838 150.42289734]
[176.70104980 146.87379456]
[191.58592224 148.72875977]
[204.84317017 155.74624634]
[214.74639893 167.01240540]
[220.00595093 181.06007385]
[219.93688965 196.05992126]
[214.54821777 210.05856323]
[204.54167175 221.23304749]
[191.22035217 228.12815857]
[176.31904602 229.84599304]
[161.77825928 226.16284180]
[149.49159241 217.55833435]
[141.05976868 205.15463257]
[141.37181091 220.15138245]
[141.68386841 235.14813232]
[141.99592590 250.14488220]
[142.30798340 265.14163208]
[142.62004089 280.13839722]
[142.93209839 295.13516235]
[143.24415588 310.13189697]
[143.55621338 325.12866211]
[146.14721680 344.33639526]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 125]
[11 124]
[26 108]
[27 107]
[28 106]
[29 105]
[30 104]
[31 102]
[32 101]
[33 100]
[39 92]
[40 91]
[41 90]
[42 89]
[43 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
