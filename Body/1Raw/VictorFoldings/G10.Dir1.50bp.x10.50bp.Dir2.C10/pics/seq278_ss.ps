%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCACCAAACCCCCCCUCCCCCGCUUCUGGCCACAGCACUUAAACACAUCUCUGCCAAACCxxxxxxxxxxGCUUUAAUUUAUUAAUGCAAACAGUACCUAACAAACCCACAGGUCCUAAACUACCAAACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-5.74474907 246.78253174]
[-15.00969791 258.57916260]
[-24.27464676 270.37582397]
[-33.53959656 282.17245483]
[-42.80454636 293.96908569]
[-51.94628143 305.86148071]
[-60.96380997 317.84829712]
[-69.98133850 329.83514404]
[-78.99887085 341.82196045]
[-88.01640320 353.80880737]
[-81.93001556 367.91027832]
[-83.72572327 383.16381836]
[-92.92049408 395.46633911]
[-107.04096985 401.50848389]
[-122.28882599 399.66497803]
[-134.56245422 390.43170166]
[-140.56031799 376.29235840]
[-138.66902161 361.05035400]
[-129.39730835 348.80572510]
[-115.23922729 342.85220337]
[-100.00323486 344.79125977]
[-90.98570251 332.80444336]
[-81.96817017 320.81759644]
[-72.95064545 308.83078003]
[-63.93311310 296.84393311]
[-62.41550827 289.56091309]
[-54.60118484 284.70413208]
[-45.33623505 272.90750122]
[-36.07128906 261.11087036]
[-26.80633736 249.31422424]
[-17.54138947 237.51757812]
[-41.09276581 213.22497559]
[-59.70869064 184.97174072]
[-72.73798370 153.74618530]
[-79.72487640 120.64057922]
[-80.42495728 86.81295776]
[-95.32685852 85.10027313]
[-110.22876740 83.38758087]
[-125.05072021 90.40481567]
[-138.38307190 80.85595703]
[-136.51062012 64.56405640]
[-121.35960388 58.28882599]
[-108.51607513 68.48567963]
[-93.61417389 70.19837189]
[-78.71227264 71.91105652]
[-76.92315674 62.24737549]
[-74.61189270 52.69511414]
[-71.78528595 43.28246307]
[-68.45169830 34.03720474]
[-64.62094879 24.98661995]
[-60.30435562 16.15742302]
[-55.51465607 7.57567358]
[-50.26598358 -0.73330420]
[-44.57382965 -8.74498653]
[-38.45499420 -16.43572998]
[-31.92753410 -23.78283501]
[-25.01071548 -30.76461792]
[-17.72495270 -37.36047363]
[-10.09174538 -43.55093765]
[-2.13362455 -49.31773758]
[6.12592411 -54.64385605]
[14.66252422 -59.51357269]
[23.45098114 -63.91251373]
[32.46535873 -67.82769775]
[41.67905045 -71.24757385]
[51.06486893 -74.16204071]
[60.59510803 -76.56250763]
[70.24163818 -78.44187927]
[79.97600555 -79.79461670]
[89.76946259 -80.61672211]
[99.59310913 -80.90576935]
[109.41796112 -80.66091156]
[119.21501923 -79.88287354]
[128.95536804 -78.57393646]
[138.61026001 -76.73797607]
[148.15119934 -74.38040924]
[157.55003357 -71.50818634]
[166.77900696 -68.12979126]
[175.81091309 -64.25519562]
[184.61906433 -59.89583206]
[193.17749023 -55.06456757]
[201.42977905 -67.59053040]
[202.56083679 -83.37125397]
[216.02392578 -89.74264526]
[224.27621460 -102.26860809]
[232.52850342 -114.79457092]
[240.78079224 -127.32053375]
[241.20625305 -143.71415710]
[255.74348450 -151.30368042]
[269.43783569 -142.28164673]
[268.20172119 -125.92915344]
[253.30674744 -119.06824493]
[245.05445862 -106.54228210]
[236.80216980 -94.01631927]
[228.54988098 -81.49035645]
[228.00907898 -66.60557556]
[213.95573425 -59.33824158]
[205.70344543 -46.81227875]
[215.51150513 -39.22700119]
[224.77693176 -30.98770905]
[233.45623779 -22.13310623]
[241.50863647 -12.70478821]
[248.89630127 -2.74704266]
[255.58453369 7.69335365]
[261.54190063 18.56735802]
[266.74044800 29.82388878]
[271.15573120 41.41006851]
[274.76699829 53.27147293]
[277.55734253 65.35238647]
[279.51358032 77.59605408]
[280.62658691 89.94496155]
[280.89108276 102.34110260]
[280.30584717 114.72624207]
[278.87365723 127.04221344]
[276.60119629 139.23115540]
[291.09680176 143.08831787]
[305.59237671 146.94546509]
[321.27578735 142.15351868]
[333.08123779 153.53611755]
[328.86428833 169.38380432]
[312.96298218 173.39385986]
[301.73522949 161.44107056]
[287.23962402 157.58390808]
[272.74401855 153.72674561]
[268.71853638 165.27722168]
[263.92175293 176.52925110]
[258.37554932 187.43142700]
[252.10528564 197.93388367]
[245.13966370 207.98863220]
[237.51049805 217.54968262]
[229.25268555 226.57333374]
[220.40396118 235.01832581]
[211.00480652 242.84606934]
[201.09815979 250.02075195]
[190.72932434 256.50958252]
[179.94570923 262.28292847]
[168.79660034 267.31436157]
[157.33297729 271.58087158]
[145.60725403 275.06295776]
[133.67301941 277.74475098]
[121.58484650 279.61392212]
[109.39799500 280.66195679]
[97.16817474 280.88406372]
[84.95130920 280.27923584]
[72.80323029 278.85021973]
[60.77949524 276.60354614]
[48.93505859 273.54953003]
[37.32407761 269.70205688]
[25.99963188 265.07879639]
[15.01348972 259.70083618]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 31]
[2 30]
[3 29]
[4 28]
[5 27]
[6 25]
[7 24]
[8 23]
[9 22]
[10 21]
[36 45]
[37 44]
[38 43]
[81 98]
[82 97]
[84 95]
[85 94]
[86 93]
[87 92]
[115 124]
[116 123]
[117 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
