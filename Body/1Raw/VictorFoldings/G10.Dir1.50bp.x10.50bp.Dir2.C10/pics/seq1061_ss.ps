%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAGCCUAGCCACACCCCCACGGGAAACAGCAGUGAUUAACCUUUAGCAAUAAACGAAAGUxxxxxxxxxxCUAUGGUAUAAUACGCCUCACACUCAUUCUCAACCCCCUGACAAAACACAUAGCCUACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[143.87153625 180.34078979]
[134.60658264 168.54415894]
[125.34163666 156.74751282]
[116.07669067 144.95088196]
[106.81174469 133.15423584]
[91.81498718 132.84217834]
[82.06733704 144.24319458]
[72.31968689 155.64422607]
[62.57203293 167.04524231]
[52.82437897 178.44625854]
[43.07672882 189.84729004]
[48.81439590 204.03663635]
[47.28919220 219.26596069]
[38.85158920 232.03567505]
[25.44049263 239.41137695]
[10.13767242 239.69819641]
[-3.54039598 232.83023071]
[-12.45059204 220.38568115]
[-14.54541779 205.22419739]
[-9.34349823 190.82980347]
[1.95980442 180.51020813]
[16.76707268 176.63679504]
[31.67570686 180.09963989]
[41.42335892 168.69860840]
[51.17100906 157.29759216]
[60.91866302 145.89657593]
[70.66631317 134.49554443]
[80.41397095 123.09452820]
[72.68868256 106.26200104]
[76.44508362 89.57569122]
[88.48581696 79.51750946]
[85.69349670 64.77970886]
[82.90116882 50.04190063]
[80.10884857 35.30409622]
[77.31652069 20.56628799]
[64.53991699 11.65584183]
[61.91804504 -3.33016729]
[70.49153137 -15.45579720]
[67.69921112 -30.19360352]
[57.47139359 -38.12112808]
[55.47735596 -50.50025558]
[62.25101852 -60.57124710]
[59.76589966 -75.36395264]
[57.28078079 -90.15666199]
[54.79566193 -104.94937134]
[51.39268494 -119.55825806]
[47.08509827 -133.92643738]
[42.77751541 -148.29463196]
[38.32069778 -162.61723328]
[33.71513367 -176.89268494]
[29.10956955 -191.16815186]
[21.51966095 -204.10620117]
[11.30618191 -215.09187317]
[1.09270215 -226.07752991]
[-9.12077808 -237.06320190]
[-24.94657898 -241.36157227]
[-28.87480736 -257.28329468]
[-16.86443710 -268.44946289]
[-1.27070963 -263.37326050]
[1.86488700 -247.27667236]
[12.07836723 -236.29101562]
[22.29184723 -225.30534363]
[32.50532532 -214.31968689]
[29.47035789 -229.00944519]
[30.43483162 -243.97839355]
[35.32984924 -258.15722656]
[43.80572128 -270.53298950]
[55.25695038 -280.22158813]
[68.86548615 -286.53094482]
[83.65916443 -289.01028442]
[98.58115387 -287.48248291]
[112.56546783 -282.05670166]
[124.61309052 -273.12057495]
[133.86337280 -261.31240845]
[139.65548706 -247.47583008]
[141.57566833 -232.59924316]
[139.48674011 -217.74540710]
[133.53791809 -203.97544861]
[124.15418243 -192.27308655]
[112.00588989 -183.47427368]
[97.96088409 -178.20759583]
[83.02251434 -176.84930420]
[68.25793457 -179.49641418]
[54.72190094 -185.95983887]
[43.38503265 -195.77371216]
[47.99059677 -181.49824524]
[52.59616089 -167.22279358]
[57.67592239 -161.78756714]
[57.14569855 -152.60221863]
[61.45328522 -138.23402405]
[65.76087189 -123.86584473]
[74.16852570 -136.28805542]
[88.85982513 -139.31555176]
[101.49372101 -131.22947693]
[104.89726257 -116.62071228]
[97.13808441 -103.78345490]
[82.62148285 -100.00611115]
[69.58837128 -107.43448639]
[72.07348633 -92.64177704]
[74.55860901 -77.84907532]
[77.04372406 -63.05636597]
[88.93161011 -50.18476486]
[82.43701172 -32.98592758]
[85.22933960 -18.24812126]
[97.64420319 -10.09908676]
[100.68595886 4.80736685]
[92.05432892 17.77396393]
[94.84664917 32.51176834]
[97.63897705 47.24957657]
[100.43130493 61.98738098]
[103.22362518 76.72518921]
[120.46787262 84.36138153]
[127.78971863 103.58498383]
[118.60838318 123.88928986]
[127.87332916 135.68592834]
[137.13827515 147.48255920]
[146.40322876 159.27920532]
[155.66818237 171.07585144]
[168.96441650 164.04377747]
[183.30265808 159.49905396]
[198.22200012 157.58776855]
[213.24284363 158.37136841]
[227.88232422 161.82464600]
[241.66986084 167.83660889]
[254.16223145 176.21398926]
[264.95785522 186.68750000]
[273.70968628 198.92045593]
[280.13641357 212.51960754]
[284.03143311 227.04780579]
[285.26953125 242.03802490]
[283.81094360 257.00839233]
[279.70248413 271.47769165]
[273.07629395 284.98077393]
[264.14532471 297.08358765]
[253.19671631 307.39706421]
[240.58239746 315.58966064]
[226.70787048 321.39801025]
[212.01913452 324.63543701]
[196.98838806 325.19787598]
[182.09878540 323.06716919]
[167.82899475 318.31188965]
[154.63771057 311.08489990]
[142.94897461 301.61843872]
[133.13854980 290.21691895]
[125.52178955 277.24676514]
[120.34354401 263.12493896]
[117.77026367 248.30543518]
[117.88468170 233.26460266]
[120.68311310 218.48594666]
[126.07559967 204.44454956]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 118]
[2 117]
[3 116]
[4 115]
[5 114]
[6 28]
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[31 111]
[32 110]
[33 109]
[34 108]
[35 107]
[38 104]
[39 103]
[42 101]
[43 100]
[44 99]
[45 98]
[46 91]
[47 90]
[48 89]
[49 87]
[50 86]
[51 85]
[52 63]
[53 62]
[54 61]
[55 60]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
