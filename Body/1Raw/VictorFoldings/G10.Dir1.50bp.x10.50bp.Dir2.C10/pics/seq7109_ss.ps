%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUAGACCAAACCUACGCCAAAAUCCAUUUCACUAUCAUAUUCAUCGGCGUAAAUCUAACxxxxxxxxxxGUCGCAUCCACCUUUAUUAUCAGUCUCUUCCCCACAACAAUAUUCAUGUGCCUAGACCAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[98.69554138 280.48379517]
[98.69554138 265.48379517]
[98.69554138 250.48379517]
[98.69554138 235.48379517]
[98.69554138 220.48379517]
[98.69554138 205.48379517]
[98.69554138 190.48379517]
[98.69554138 175.48379517]
[98.69554138 160.48379517]
[98.69554138 145.48379517]
[75.80870056 135.83322144]
[62.45819092 116.39814758]
[61.75492859 94.08941650]
[72.57434845 76.01930237]
[63.55682373 64.03247070]
[54.53929138 52.04563904]
[45.52176285 40.05880356]
[35.17897034 43.04241562]
[24.23470306 42.31351089]
[14.00524521 37.82096863]
[5.76774740 29.97442245]
[0.60115504 19.61033249]
[-0.75388318 7.90398026]
[2.00193739 -3.76351953]
[-12.64156437 -7.01434517]
[-27.28506470 -10.26517105]
[-41.92856598 -13.51599693]
[-56.57206726 -16.76682281]
[-71.21556854 -20.01764870]
[-86.19528198 -20.79749298]
[-101.09718323 -19.08480453]
[-115.99909210 -17.37211418]
[-127.05980682 -5.75144196]
[-143.02822876 -7.29717064]
[-151.65473938 -20.82354927]
[-146.32180786 -35.95429611]
[-131.12042236 -41.08240128]
[-117.71177673 -32.27401733]
[-102.80987549 -33.98670578]
[-87.90797424 -35.69939423]
[-101.39950562 -42.25520325]
[-111.90402222 -52.96291733]
[-118.20017242 -66.57756042]
[-119.55590820 -81.51616669]
[-115.81360626 -96.04183960]
[-107.40837097 -108.46569061]
[-95.31748199 -117.34320831]
[-80.94672394 -121.64221191]
[-65.96698761 -120.86286163]
[-52.11994171 -115.09576416]
[-41.01557922 -105.01146698]
[-33.94499207 -91.78245544]
[-31.73026848 -76.94685364]
[-34.62891769 -62.22959137]
[-42.30391312 -49.34182739]
[-53.86288834 -39.78201294]
[-67.96474457 -34.66114807]
[-53.32124329 -31.41032410]
[-38.67774200 -28.15949821]
[-24.03423882 -24.90867233]
[-9.39073849 -21.65784645]
[5.25276327 -18.40702057]
[17.86389160 -26.52856255]
[20.96221352 -41.20508957]
[24.06053543 -55.88161469]
[10.22320080 -61.79891205]
[-2.19367313 -70.30229187]
[-12.71281528 -81.06491089]
[-20.92989922 -93.67307281]
[-26.52907944 -107.64215851]
[-29.29513931 -122.43523407]
[-29.12176132 -137.48370361]
[-26.01560593 -152.20912170]
[-20.09606934 -166.04548645]
[-11.59067917 -178.46099854]
[-0.82636178 -188.97839355]
[11.78313160 -197.19343567]
[25.75312424 -202.79035950]
[40.54664993 -205.55401611]
[55.59508133 -205.37820435]
[70.31999969 -202.26966858]
[84.15541840 -196.34788513]
[96.56954193 -187.84048462]
[107.08519745 -177.07447815]
[115.29819489 -164.46365356]
[120.89285278 -150.49275208]
[123.65412903 -135.69877625]
[123.47587585 -120.65037537]
[120.36495972 -105.92595673]
[114.44094086 -92.09149933]
[105.93153381 -79.67875671]
[95.16381073 -69.16484070]
[82.55165863 -60.95388031]
[68.57985687 -55.36148453]
[53.78543472 -52.60260773]
[38.73706055 -52.78329086]
[35.63873672 -38.10676575]
[32.54041672 -23.43024063]
[47.71157837 -19.52137184]
[59.31676102 -9.56289196]
[65.18830109 4.15081692]
[64.42352295 18.67411804]
[57.50859451 31.04127502]
[66.52612305 43.02810669]
[75.54365540 55.01494217]
[84.56118774 67.00177002]
[96.01768494 62.48357773]
[108.74843597 61.97020721]
[121.34743500 65.79611969]
[132.33323669 73.80159760]
[140.32229614 85.32202911]
[144.20002747 99.23765564]
[143.26902771 114.08075714]
[157.39382935 119.12950897]
[171.51863098 124.17826843]
[185.64344788 129.22702026]
[197.29969788 119.22565460]
[212.39793396 116.40811920]
[226.87683105 121.53231049]
[236.84161377 133.21986389]
[239.61180115 148.32685852]
[234.44226074 162.78961182]
[222.72352600 172.71771240]
[207.60792542 175.44055176]
[193.16143799 170.22567749]
[183.27012634 158.47590637]
[180.59468079 143.35182190]
[166.46987915 138.30307007]
[152.34507751 133.25431824]
[138.22027588 128.20555115]
[132.08909607 132.52511597]
[142.06427002 143.72760010]
[152.03944397 154.93009949]
[164.38018799 163.45687866]
[164.44848633 178.45672607]
[152.18589783 187.09552002]
[138.08448792 181.98176575]
[134.20948792 167.49171448]
[127.01810455 154.32797241]
[119.82672119 141.16423035]
[113.69554138 145.48379517]
[113.69554138 160.48379517]
[113.69554138 175.48379517]
[113.69554138 190.48379517]
[113.69554138 205.48379517]
[113.69554138 220.48379517]
[113.69554138 235.48379517]
[113.69554138 250.48379517]
[113.69554138 265.48379517]
[113.69554138 280.48379517]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[14 106]
[15 105]
[16 104]
[17 103]
[24 62]
[25 61]
[26 60]
[27 59]
[28 58]
[29 57]
[30 40]
[31 39]
[32 38]
[63 98]
[64 97]
[65 96]
[113 130]
[114 129]
[115 128]
[116 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
