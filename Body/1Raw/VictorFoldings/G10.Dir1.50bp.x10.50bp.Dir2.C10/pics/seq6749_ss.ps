%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUACUACUAACAGACCGCAACCUCAACACCACCUUCUUCGACCCCGCCGGAGGAGGAGACCxxxxxxxxxxAUUUAGCUGUUCCCCAACCUUUUCCUCCGACCCCCUAACAACCCCCCUCCUAAUACUAACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[127.61956024 189.88185120]
[137.33267212 178.40789795]
[127.58501434 167.00688171]
[117.83736420 155.60585022]
[108.08971405 144.20483398]
[98.34206390 132.80381775]
[83.92984772 128.64593506]
[69.60724640 133.10273743]
[55.28464890 137.55955505]
[40.96205139 142.01637268]
[26.63945580 146.47319031]
[28.80772591 161.34750366]
[28.62232208 176.37786865]
[26.08781052 191.19416809]
[21.26660538 205.43153381]
[14.27743435 218.73934937]
[5.29241085 230.78990173]
[-5.46720123 241.28643799]
[-17.73643684 249.97047424]
[-31.21315193 256.62814331]
[-45.56547546 261.09552002]
[-60.43996429 263.26254272]
[-75.47032166 263.07589722]
[-90.28641510 260.54016113]
[-104.52337646 255.71778870]
[-117.83061218 248.72752380]
[-129.88043213 239.74150085]
[-140.37606812 228.98101807]
[-149.05909729 216.71107483]
[-155.71565247 203.23381042]
[-160.18183899 188.88111877]
[-162.34764099 174.00645447]
[-162.15975952 158.97610474]
[-159.62280273 144.16023254]
[-154.79925537 129.92366028]
[-147.80789185 116.61699677]
[-138.82087708 104.56792450]
[-128.05952454 94.07316589]
[-115.78886414 85.39116669]
[-102.31104279 78.73571777]
[-87.95798492 74.27072144]
[-73.08313751 72.10613251]
[-58.05281448 72.29525757]
[-43.23714066 74.83343506]
[-29.00097466 79.65816498]
[-15.69488811 86.65062714]
[-3.64655972 95.63863373]
[6.84731150 106.40084839]
[15.52830410 118.67222595]
[22.18264008 132.15058899]
[36.50523758 127.69377899]
[50.82783508 123.23696136]
[65.15042877 118.78014374]
[79.47303009 114.32333374]
[76.92195892 97.92832184]
[84.97422028 84.88701630]
[98.37297058 80.61618042]
[102.97853851 66.34072113]
[107.58409882 52.06525803]
[112.18966675 37.78979874]
[116.79522705 23.51433754]
[121.40079498 9.23887730]
[126.00636292 -5.03658390]
[130.61192322 -19.31204414]
[135.21748352 -33.58750534]
[139.82305908 -47.86296463]
[144.42861938 -62.13842773]
[133.08715820 -52.32154465]
[119.55048370 -45.85945129]
[104.78564453 -43.21378326]
[89.84740448 -44.57354355]
[75.80291748 -49.84158707]
[63.65548325 -58.64158249]
[54.27289581 -70.34487915]
[48.32542801 -84.11540985]
[46.23794556 -98.96944427]
[48.15958023 -113.84584808]
[53.95305252 -127.68187714]
[63.20449066 -139.48912048]
[75.25299072 -148.42408752]
[89.23783112 -153.84848022]
[104.15997314 -155.37481689]
[118.95340729 -152.89402771]
[132.56132507 -146.58335876]
[144.01161194 -136.89361572]
[152.48626709 -124.51702118]
[157.37989807 -110.33773041]
[158.34291077 -95.36867523]
[155.30831909 -80.68439484]
[165.52180481 -91.67005920]
[175.73527527 -102.65572357]
[178.87088013 -118.75231171]
[194.46459961 -123.82849884]
[206.47497559 -112.66234589]
[202.54675293 -96.74062347]
[186.72094727 -92.44224548]
[176.50746155 -81.45658112]
[166.29399109 -70.47091675]
[158.70407104 -57.53286362]
[154.09851074 -43.25740051]
[149.49295044 -28.98194122]
[144.88739014 -14.70648003]
[140.28181458 -0.43101928]
[135.67625427 13.84444141]
[131.07069397 28.11990166]
[126.46512604 42.39536285]
[121.85956573 56.67082214]
[117.25399780 70.94628143]
[112.64842987 85.22174072]
[121.97777557 103.41248322]
[109.74308014 123.05615997]
[119.49073792 134.45718384]
[129.23838806 145.85820007]
[138.98603821 157.25923157]
[148.73368835 168.66024780]
[161.57772827 160.84828186]
[175.50862122 155.19792175]
[190.16551208 151.85554504]
[205.16877747 150.90771484]
[220.12977600 152.37899780]
[234.66098022 156.23126221]
[248.38601685 162.36474609]
[260.94937134 170.62055969]
[272.02560425 180.78488159]
[281.32781982 192.59440613]
[288.61508179 205.74324036]
[293.69860840 219.89080811]
[296.44674683 234.67065430]
[296.78833008 249.69995117]
[294.71444702 264.58938599]
[290.27890015 278.95330811]
[283.59649658 292.41961670]
[274.84039307 304.63955688]
[264.23736572 315.29653931]
[252.06204224 324.11459351]
[238.62982178 330.86526489]
[224.28860474 335.37371826]
[209.40989685 337.52313232]
[194.37907410 337.25787354]
[179.58546448 334.58480835]
[165.41226196 329.57318115]
[152.22659302 322.35275269]
[140.36999512 313.11062622]
[130.14958191 302.08612061]
[121.83007812 289.56484985]
[115.62699127 275.87115479]
[111.70099640 261.35968018]
[110.15377808 246.40634155]
[111.02542114 231.39846802]
[114.29334259 216.72477722]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 115]
[3 114]
[4 113]
[5 112]
[6 111]
[7 54]
[8 53]
[9 52]
[10 51]
[11 50]
[57 109]
[58 108]
[59 107]
[60 106]
[61 105]
[62 104]
[63 103]
[64 102]
[65 101]
[66 100]
[67 99]
[89 98]
[90 97]
[91 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
