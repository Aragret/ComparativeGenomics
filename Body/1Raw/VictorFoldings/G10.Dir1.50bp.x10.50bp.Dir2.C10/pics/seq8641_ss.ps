%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACCGCUAACAUUACUGCAGGCCACCUACUCAUGCACCUAAUUGGAAGCGCCACCCUAGCAAxxxxxxxxxxGCAGGAAUACCUUUCCUCACAGGUUUCUACUCCAAAGACCACAUCAUCGAAACCGCAAACAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[82.73059082 257.97024536]
[82.73059082 242.97024536]
[82.73059082 227.97024536]
[82.73059082 212.97024536]
[82.73059082 197.97024536]
[82.73059082 182.97024536]
[82.73059082 167.97024536]
[82.73059082 152.97024536]
[82.73059082 137.97024536]
[82.73059082 122.97023773]
[86.54360199 96.28586578]
[76.31980896 85.30979919]
[66.09600830 74.33374023]
[55.87221146 63.35767365]
[29.68654442 46.29914474]
[14.85951996 44.02772903]
[0.03249480 41.75631332]
[-14.79452991 39.48489380]
[-29.10918617 55.27350998]
[-52.05618286 56.22666550]
[-70.06598663 39.43597794]
[-85.00363922 40.80219650]
[-99.94129181 42.16841125]
[-114.87894440 43.53462982]
[-129.63381958 54.50612640]
[-145.27648926 46.60709763]
[-160.18339539 48.27577209]
[-175.09028625 49.94445038]
[-189.99717712 51.61312866]
[-202.85095215 60.83760452]
[-216.35997009 54.56417847]
[-223.11277771 68.43511963]
[-236.30467224 76.43372345]
[-251.72615051 76.00765991]
[-264.45626831 67.29288483]
[-270.43292236 53.07025909]
[-267.74896240 37.87815857]
[-257.26083374 26.56433487]
[-242.31524658 22.73898506]
[-227.68132019 27.62276649]
[-218.02864075 39.65727997]
[-206.24110413 30.55216026]
[-191.66586304 36.70623398]
[-176.75895691 35.03755569]
[-161.85206604 33.36887741]
[-146.94517517 31.70020103]
[-139.12216187 22.42557716]
[-126.67509460 20.94379044]
[-116.24516296 28.59697533]
[-101.30751038 27.23075867]
[-86.36985779 25.86454201]
[-71.43220520 24.49832535]
[-66.36544037 10.37997246]
[-77.02565002 -0.17274915]
[-87.68585968 -10.72547054]
[-103.67143250 -12.08235836]
[-112.45720673 -25.50583458]
[-107.30348969 -40.69855499]
[-92.16378021 -46.00596619]
[-78.65195465 -37.35667801]
[-77.13314056 -21.38568115]
[-66.47293091 -10.83295918]
[-55.81272125 -0.28023779]
[-40.24139404 -3.26586556]
[-25.89046478 1.31591654]
[-16.02844620 11.63612938]
[-12.52311325 24.65786934]
[2.30391145 26.92928696]
[17.13093567 29.20070267]
[31.95796204 31.47212029]
[20.03499794 22.37030983]
[5.71977711 17.88985634]
[-5.68380737 8.14520359]
[-12.34158134 -5.29630041]
[-13.18269634 -20.27269936]
[-8.07186508 -34.37516022]
[2.16887593 -45.33541870]
[15.89238739 -51.39060211]
[30.89135170 -51.56678391]
[44.75331116 -45.83562851]
[55.24867630 -35.11894608]
[60.68935776 -21.14042664]
[60.20026016 -6.14840317]
[53.85857010 7.44778824]
[52.54352951 22.39003181]
[60.86127853 9.90744209]
[69.17902374 -2.57514906]
[77.49677277 -15.05774021]
[85.81452179 -27.54033089]
[84.08731079 -43.49013519]
[95.58145142 -54.68228531]
[111.47962952 -52.53112030]
[119.58612061 -38.68682861]
[113.68231964 -23.76956749]
[98.29711151 -19.22258377]
[89.97936249 -6.73999214]
[81.66161346 5.74259853]
[73.34387207 18.22518921]
[65.02612305 30.70778084]
[78.74387360 24.63956451]
[91.63551331 32.30804825]
[92.85031891 47.25877762]
[81.36580658 56.90792084]
[66.84827423 53.13387680]
[77.07207489 64.10993958]
[87.29586792 75.08600616]
[97.51966858 86.06206512]
[111.53243256 91.41392517]
[126.47008514 90.04770660]
[141.40773010 88.68148804]
[150.17732239 75.73435211]
[165.23153687 71.50299072]
[179.46226501 77.98532104]
[186.15016174 92.12059784]
[182.13743591 107.23456573]
[169.31875610 116.19087219]
[153.74671936 114.76062775]
[142.77395630 103.61914062]
[127.83630371 104.98535919]
[112.89865112 106.35157776]
[126.66267395 112.31410217]
[140.42669678 118.27662659]
[154.19071960 124.23915100]
[167.95474243 130.20167542]
[182.94258118 129.59779358]
[197.46284485 133.36105347]
[210.27061462 141.16877747]
[220.26785278 152.35160828]
[226.59741211 165.95074463]
[228.71664429 180.80027771]
[226.44384766 195.62709045]
[219.97387695 209.16000366]
[209.86145020 220.23875427]
[196.97355652 227.91352844]
[182.41513062 231.52630615]
[167.43434143 230.76734924]
[153.31556702 225.70173645]
[141.26930237 216.76376343]
[132.32830811 204.71972656]
[127.25916290 190.60223389]
[126.49612427 175.62519836]
[119.30474091 162.46145630]
[112.11335754 149.29771423]
[104.92197418 136.13397217]
[97.73059082 122.97023773]
[97.73059082 137.97024536]
[97.73059082 152.97024536]
[97.73059082 167.97024536]
[97.73059082 182.97024536]
[97.73059082 197.97024536]
[97.73059082 212.97024536]
[97.73059082 227.97024536]
[97.73059082 242.97024536]
[97.73059082 257.97024536]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 154]
[2 153]
[3 152]
[4 151]
[5 150]
[6 149]
[7 148]
[8 147]
[9 146]
[10 145]
[11 107]
[12 106]
[13 105]
[14 104]
[15 70]
[16 69]
[17 68]
[18 67]
[21 52]
[22 51]
[23 50]
[24 49]
[26 46]
[27 45]
[28 44]
[29 43]
[31 41]
[53 63]
[54 62]
[55 61]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
[108 120]
[109 119]
[110 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
