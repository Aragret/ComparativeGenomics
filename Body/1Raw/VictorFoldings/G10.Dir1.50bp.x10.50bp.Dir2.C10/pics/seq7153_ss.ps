%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCACUAUCAUAUUCAUCGGCGUAAAUCUAACUUUCUUCCCACAACACUUUCUCGGCCUAUxxxxxxxxxxCGACCCCCUAACAACCCCCCUCCUAAUACUAACUACCUGACUCCUACCCCUCACAAUCAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[319.75167847 210.03475952]
[306.81359863 202.44483948]
[293.87554932 194.85493469]
[280.93750000 187.26502991]
[267.99945068 179.67512512]
[255.06138611 172.08520508]
[241.60542297 165.45671082]
[227.70286560 159.82475281]
[213.80030823 154.19279480]
[199.89775085 148.56083679]
[185.99519348 142.92887878]
[172.09263611 137.29693604]
[164.01266479 149.90780640]
[153.75318909 160.81944275]
[141.66354370 169.66030884]
[128.15534973 176.12940979]
[113.68852997 180.00646973]
[98.75564575 181.15948486]
[83.86513519 179.54920959]
[69.52397156 175.23045349]
[56.22045135 168.35028076]
[44.40752792 159.14292908]
[34.48740005 147.92190552]
[26.79782677 135.06924438]
[21.60062408 121.02255249]
[19.07274055 106.26009369]
[19.30024910 91.28448486]
[22.27540016 76.60562897]
[6.57981348 78.59538269]
[-2.31121778 66.64553070]
[-16.21377373 61.01357651]
[-34.35308075 64.00447083]
[-44.63970566 49.82049179]
[-58.65641785 44.47898102]
[-72.67313385 39.13746643]
[-81.50360870 51.37205505]
[-93.20034790 60.90351105]
[-106.96585846 67.08196259]
[-121.86156464 69.48616028]
[-136.87187195 67.95217133]
[-150.97334290 62.58459091]
[-163.20452881 53.74939346]
[-172.73146057 42.04897308]
[-178.90460205 28.28108215]
[-181.30303955 13.38444138]
[-179.76325989 -1.62527108]
[-174.39024353 -15.72466946]
[-165.55030823 -27.95243454]
[-153.84622192 -37.47485352]
[-140.07594299 -43.64267349]
[-125.17838287 -46.03536606]
[-110.16926575 -44.48978806]
[-96.07193756 -39.11132050]
[-83.84758759 -30.26667976]
[-74.32968903 -18.55890465]
[-68.16718292 -4.78625298]
[-65.78025055 10.11223507]
[-67.33161926 25.12075424]
[-53.31490707 30.46226692]
[-39.29819489 35.80377960]
[-28.09316444 31.13959122]
[-16.34661102 35.52564240]
[-10.58181667 47.11101913]
[3.32073903 52.74297714]
[18.02192307 50.35039139]
[27.90735817 62.70307159]
[35.98734283 50.09218979]
[46.24681091 39.18055725]
[58.33645630 30.33968925]
[71.84465027 23.87059593]
[86.31147003 19.99353790]
[101.24435425 18.84051704]
[116.13486481 20.45079422]
[130.47602844 24.76954269]
[143.77954102 31.64971733]
[155.59246826 40.85706329]
[165.51260376 52.07809448]
[173.20217896 64.93075562]
[178.39938354 78.97744751]
[180.92726135 93.73990631]
[180.69975281 108.71551514]
[177.72459412 123.39437103]
[191.62715149 129.02633667]
[205.52970886 134.65827942]
[219.43226624 140.29023743]
[233.33482361 145.92219543]
[247.23738098 151.55415344]
[241.75579834 137.59162903]
[246.36531067 123.31743622]
[258.97775269 115.19793701]
[273.87957764 116.91134644]
[284.32009888 127.68146515]
[285.56967163 142.62931824]
[277.06222534 154.98339844]
[262.65130615 159.14715576]
[275.58935547 166.73706055]
[288.52740479 174.32696533]
[301.46545410 181.91688538]
[314.40353394 189.50679016]
[327.34158325 197.09669495]
[336.41842651 185.13227844]
[346.84664917 174.32542419]
[358.47988892 164.82781982]
[371.15478516 156.77282715]
[384.69345093 150.27349854]
[398.90579224 145.42108154]
[413.59228516 142.28370667]
[428.54678345 140.90541077]
[443.55929565 141.30554199]
[458.41912842 143.47848511]
[472.91766357 147.39373779]
[486.85134888 152.99633789]
[500.02456665 160.20761108]
[512.25238037 168.92636108]
[523.36315918 179.03015137]
[533.20092773 190.37716675]
[541.62756348 202.80810547]
[548.52478027 216.14845276]
[553.79571533 230.21093750]
[557.36645508 244.79814148]
[559.18676758 259.70529175]
[559.23114014 274.72308350]
[557.49902344 289.64071655]
[554.01458740 304.24877930]
[548.82690430 318.34216309]
[542.00866699 331.72308350]
[533.65570068 344.20361328]
[523.88519287 355.60858154]
[512.83428955 365.77789307]
[500.65823364 374.56878662]
[487.52789307 381.85781860]
[473.62756348 387.54269409]
[459.15246582 391.54360962]
[444.30572510 393.80435181]
[429.29580688 394.29324341]
[414.33343506 393.00338745]
[399.62866211 389.95288086]
[385.38787842 385.18460083]
[371.81103516 378.76541138]
[359.08871460 370.78549194]
[347.39953613 361.35684204]
[336.90759277 350.61181641]
[327.76019287 338.70129395]
[320.08569336 325.79241943]
[313.99188232 312.06646729]
[309.56427002 297.71612549]
[306.86508179 282.94281006]
[305.93212891 267.95394897]
[306.77856445 252.95996094]
[309.39245605 238.17131042]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 100]
[2 99]
[3 98]
[4 97]
[5 96]
[6 95]
[7 87]
[8 86]
[9 85]
[10 84]
[11 83]
[12 82]
[28 66]
[30 64]
[31 63]
[33 60]
[34 59]
[35 58]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
