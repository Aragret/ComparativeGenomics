%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACGAAAGGACAAGAGAAAUAAGGCCUACUUCACAAAGCGCCUUCCCCCGUAAAUGAUAUCxxxxxxxxxxAACAAUGACUAAUCAAACUAACCUCAAAACAAAUGAUAACCAUACACAACACUAAAGGACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-67.03176117 180.20248413]
[-73.21686554 165.78726196]
[-87.44364929 170.54107666]
[-101.67042542 175.29489136]
[-115.89720154 180.04870605]
[-130.12397766 184.80252075]
[-144.35076904 189.55633545]
[-158.57754517 194.31015015]
[-172.80432129 199.06396484]
[-187.03109741 203.81777954]
[-194.23466492 209.54145813]
[-201.60356140 208.51916504]
[-215.92616272 212.97598267]
[-210.19229126 225.28686523]
[-213.20690918 241.85009766]
[-226.90936279 257.06619263]
[-240.15194702 264.11132812]
[-253.39453125 271.15646362]
[-261.94384766 284.46884155]
[-276.81399536 283.61575317]
[-276.66448975 298.92053223]
[-283.65490723 312.53643799]
[-296.17889404 321.33462524]
[-311.35855103 323.29333496]
[-325.70568848 317.96246338]
[-335.92346191 306.56701660]
[-339.66387939 291.72558594]
[-336.06741333 276.84863281]
[-325.96051025 265.35473633]
[-311.66567993 259.88516235]
[-296.46777344 261.69671631]
[-283.85913086 270.37316895]
[-276.25701904 257.56469727]
[-260.43966675 257.91387939]
[-247.19708252 250.86874390]
[-233.95449829 243.82360840]
[-236.13143921 228.98173523]
[-238.30816650 214.14118958]
[-253.01612854 211.19570923]
[-267.72409058 208.25022888]
[-283.07806396 214.01109314]
[-295.57052612 203.38703918]
[-292.35028076 187.30717468]
[-276.73007202 182.31307983]
[-264.77862549 193.54226685]
[-250.07064819 196.48774719]
[-235.36268616 199.43322754]
[-220.38298035 198.65338135]
[-206.06037903 194.19656372]
[-191.78491211 189.59100342]
[-177.55813599 184.83718872]
[-163.33135986 180.08337402]
[-149.10458374 175.32955933]
[-134.87779236 170.57574463]
[-120.65101624 165.82192993]
[-106.42424011 161.06811523]
[-92.19746399 156.31430054]
[-77.97068024 151.56048584]
[-81.77826691 135.89857483]
[-84.21032715 119.96502686]
[-85.24845886 103.88039398]
[-84.88479614 87.76639557]
[-83.12209320 71.74497223]
[-79.97369385 55.93735886]
[-75.46342468 40.46316910]
[-69.62540436 25.43949699]
[-62.50382233 10.98003197]
[-54.15256119 -2.80581355]
[-44.63481522 -15.81371975]
[-34.02260971 -27.94525528]
[-22.39624023 -39.10861969]
[-9.84369278 -49.21933746]
[3.54005051 -58.20090485]
[17.65371323 -65.98535156]
[32.39049530 -72.51377869]
[47.63888550 -77.73677826]
[63.28349686 -81.61483002]
[79.20594025 -84.11859131]
[95.28573608 -85.22911072]
[111.40120697 -84.93798828]
[127.43040466 -83.24742889]
[143.25202942 -80.17022705]
[158.74636841 -75.72965240]
[173.79615784 -69.95932770]
[188.28753662 -62.90290833]
[202.11083984 -54.61378860]
[210.87704468 -66.78562164]
[219.64324951 -78.95745850]
[220.75030518 -95.31919861]
[235.59066772 -102.29742432]
[248.89785767 -92.71353912]
[246.98257446 -76.42662048]
[231.81509399 -70.19125366]
[223.04888916 -58.01941681]
[214.28268433 -45.84757996]
[222.69396973 -38.84609604]
[230.67721558 -31.36023712]
[238.20458984 -23.41611290]
[245.24983215 -15.04144192]
[251.78836060 -6.26543713]
[257.79733276 2.88128376]
[263.25585938 12.36681271]
[268.14480591 22.15805817]
[272.44720459 32.22085953]
[276.14797974 42.52011871]
[279.23425293 53.01990128]
[281.69525146 63.68357468]
[283.52239990 74.47394562]
[284.70928955 85.35336304]
[285.25183105 96.28387451]
[285.14807129 107.22735596]
[284.39843750 118.14562225]
[283.00549316 129.00057983]
[297.71347046 131.94607544]
[312.42141724 134.89155579]
[326.51586914 127.22824860]
[341.23837280 133.60221863]
[345.29507446 149.12390137]
[335.57406616 161.88638306]
[319.53240967 162.09939575]
[309.47595215 149.59951782]
[294.76797485 146.65403748]
[280.06002808 143.70854187]
[275.71783447 158.78169250]
[270.11630249 173.43356323]
[263.29559326 187.55912781]
[255.30451965 201.05717468]
[246.20040894 213.83094788]
[236.04850769 225.78892517]
[224.92155457 236.84536743]
[212.89929199 246.92106628]
[200.06790161 255.94378662]
[186.51933289 263.84887695]
[172.35067749 270.57968140]
[157.66351318 276.08795166]
[142.56306458 280.33422852]
[127.15757751 283.28805542]
[111.55744934 284.92828369]
[95.87449646 285.24316406]
[80.22110748 284.23040771]
[64.70947266 281.89730835]
[49.45075989 278.26055908]
[34.55432892 273.34622192]
[20.12694359 267.18954468]
[6.27199697 259.83462524]
[-6.91121006 251.33419800]
[-19.32819557 241.74917603]
[-30.88996887 231.14825439]
[-41.51366425 219.60740662]
[-51.12314987 207.20933533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 58]
[3 57]
[4 56]
[5 55]
[6 54]
[7 53]
[8 52]
[9 51]
[10 50]
[12 49]
[13 48]
[16 36]
[17 35]
[18 34]
[20 32]
[38 47]
[39 46]
[40 45]
[86 95]
[87 94]
[88 93]
[113 123]
[114 122]
[115 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
