%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCUUACCUCCCUCUCUCCUACUCCUGCUCGCAUCUGCUAUAGUGGAGGCCGGAGCAGGAAxxxxxxxxxxAAGUUUACCACAACCACCACCCCAUCAUACUCUUUCACCCACAGCACCAAUCCUACCUCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[273.47512817 400.39443970]
[265.01342773 396.09695435]
[257.28936768 408.95538330]
[249.56527710 421.81378174]
[241.84118652 434.67218018]
[234.11709595 447.53057861]
[226.39302063 460.38897705]
[218.66893005 473.24737549]
[210.94485474 486.10577393]
[203.22076416 498.96417236]
[195.49667358 511.82260132]
[192.52357483 528.51379395]
[175.66160583 530.27746582]
[169.29901123 514.56274414]
[182.63827515 504.09851074]
[190.36236572 491.24011230]
[198.08644104 478.38171387]
[205.81053162 465.52328491]
[213.53462219 452.66488647]
[221.25869751 439.80648804]
[228.98278809 426.94808960]
[236.70686340 414.08969116]
[244.43095398 401.23129272]
[252.15504456 388.37289429]
[227.48106384 368.58319092]
[206.84552002 344.60717773]
[190.94725037 317.25473022]
[180.32502747 287.45004272]
[175.33935547 256.20056152]
[176.16020203 224.56274414]
[182.76115417 193.60646057]
[194.92036438 164.37882996]
[181.98231506 156.78892517]
[169.04425049 149.19900513]
[156.10620117 141.60910034]
[143.16813660 134.01919556]
[130.23008728 126.42928314]
[117.29203033 118.83937836]
[104.35397339 111.24946594]
[91.26081848 103.93036652]
[78.01823425 96.88523102]
[62.20088196 97.23441315]
[54.59877014 84.42593384]
[41.35618591 77.38079834]
[28.11359787 70.33566284]
[14.87101269 63.29052734]
[1.62842739 56.24539566]
[-14.73318005 57.35437775]
[-23.64850426 43.59032822]
[-15.94622326 29.11252022]
[0.45021561 28.81448174]
[8.67356205 43.00280762]
[21.91614723 50.04794312]
[35.15873337 57.09307861]
[48.40131760 64.13821411]
[61.64390564 71.18334961]
[76.51406097 70.33024597]
[85.06336975 83.64263916]
[98.30595398 90.68777466]
[103.60852814 90.31979370]
[108.72590637 92.98383331]
[111.94387817 98.31141663]
[124.88193512 105.90132141]
[137.81999207 113.49122620]
[150.75805664 121.08113861]
[163.69610596 128.67105103]
[176.63415527 136.26095581]
[189.57221985 143.85086060]
[202.51026917 151.44076538]
[207.88897705 143.61088562]
[213.69128418 136.08967590]
[219.89956665 128.90005493]
[226.49487305 122.06387329]
[233.45712280 115.60195923]
[240.76512146 109.53397369]
[248.39660645 103.87837982]
[256.32833862 98.65238953]
[264.53613281 93.87190247]
[272.99502563 89.55146790]
[281.67926025 85.70423126]
[290.56237793 82.34188080]
[299.61730957 79.47465515]
[308.81652832 77.11127472]
[318.13198853 75.25891876]
[327.53530884 73.92321777]
[336.99792480 73.10821533]
[346.49093628 72.81639862]
[355.98550415 73.04863739]
[365.45269775 73.80421448]
[374.86370850 75.08081055]
[384.18988037 76.87452698]
[393.40280151 79.17990112]
[402.47442627 81.98989868]
[411.37713623 85.29594421]
[420.08386230 89.08797455]
[428.56808472 93.35442352]
[436.80395508 98.08229065]
[444.76644897 103.25717163]
[452.43127441 108.86330414]
[459.77511597 114.88361359]
[466.77566528 121.29975128]
[473.41156006 128.09217834]
[479.66262817 135.24020386]
[485.50985718 142.72204590]
[490.93542480 150.51495361]
[495.92285156 158.59515381]
[500.45693970 166.93804932]
[504.52392578 175.51823425]
[508.11141968 184.30960083]
[511.20846558 193.28533936]
[513.80572510 202.41815186]
[515.89526367 211.68020630]
[517.47070312 221.04331970]
[518.52728271 230.47895813]
[519.06182861 239.95840454]
[519.07269287 249.45280457]
[518.55987549 258.93322754]
[517.52490234 268.37084961]
[515.97094727 277.73690796]
[513.90283203 287.00286865]
[511.32675171 296.14056396]
[508.25061035 305.12216187]
[504.68383789 313.92028809]
[500.63720703 322.50820923]
[496.12313843 330.85977173]
[491.15533447 338.94952393]
[485.74893188 346.75286865]
[479.92041016 354.24603271]
[473.68753052 361.40621948]
[467.06927490 368.21166992]
[460.08581543 374.64160156]
[452.75839233 380.67651367]
[445.10934448 386.29800415]
[437.16195679 391.48895264]
[428.94046021 396.23361206]
[420.46984863 400.51751709]
[411.77597046 404.32763672]
[402.88522339 407.65237427]
[393.82476807 410.48165894]
[384.62213135 412.80682373]
[375.30538940 414.62084961]
[365.90286255 415.91818237]
[356.44317627 416.69494629]
[346.95516968 416.94873047]
[337.46774292 416.67880249]
[328.00973511 415.88598633]
[318.60995483 414.57272339]
[309.29702759 412.74298096]
[300.09930420 410.40240479]
[291.04479980 407.55807495]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 24]
[3 23]
[4 22]
[5 21]
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[11 15]
[32 69]
[33 68]
[34 67]
[35 66]
[36 65]
[37 64]
[38 63]
[39 62]
[40 59]
[41 58]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
