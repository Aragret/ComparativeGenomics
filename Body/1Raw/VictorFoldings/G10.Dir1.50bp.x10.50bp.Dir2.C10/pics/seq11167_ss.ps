%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAUCCCCCUCUACCUAAAACUCACAGCCCUCGCUGUCACUUUCCUAGGACUUCUAACAGCxxxxxxxxxxUACCAUAAAUACUUGACCACCUGUAGUACAUAAAAACCCAAUCCACAUCAAAACCCCCUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[62.24375916 239.38043213]
[54.77490616 237.13908386]
[47.43792725 234.49783325]
[40.25422668 231.46437073]
[33.34722900 244.77952576]
[26.44023132 258.09469604]
[19.53323174 271.40985107]
[12.62623405 284.72500610]
[5.71923542 298.04016113]
[6.99835968 314.38934326]
[-6.67220354 323.44735718]
[-21.22935104 315.89608765]
[-21.69793701 299.50366211]
[-7.59592009 291.13314819]
[-0.68892175 277.81799316]
[6.21807671 264.50283813]
[13.12507534 251.18768311]
[20.03207397 237.87252808]
[26.93907166 224.55737305]
[-4.20840979 199.96522522]
[-27.48525620 167.82292175]
[-41.13341904 130.55809021]
[-44.12208176 90.98528290]
[-59.02398300 89.27259827]
[-73.92588806 87.55990601]
[-88.82778931 85.84721375]
[-103.76209259 84.44491577]
[-118.72234344 83.35359955]
[-133.68258667 82.26229095]
[-143.72007751 93.94796753]
[-158.54057312 97.44172668]
[-172.41242981 91.60771942]
[-180.09704590 78.87648010]
[-195.05729675 77.78517151]
[-210.01754761 76.69385529]
[-224.97779846 75.60254669]
[-239.93804932 74.51123810]
[-254.45527649 82.13896942]
[-268.17327881 73.15298462]
[-266.98019409 56.79729462]
[-252.10331726 49.89723206]
[-238.84674072 59.55098724]
[-223.88648987 60.64229965]
[-208.92623901 61.73360825]
[-193.96598816 62.82492065]
[-179.00573730 63.91622925]
[-169.55488586 52.43497467]
[-154.98323059 48.67584991]
[-140.82666016 54.28340912]
[-132.59127808 67.30204010]
[-117.63103485 68.39335632]
[-102.67078400 69.48466492]
[-98.49265289 67.05181885]
[-92.73186493 67.26300049]
[-87.11509705 70.94531250]
[-72.21319580 72.65800476]
[-57.31129456 74.37068939]
[-42.40938950 76.08338165]
[-40.29185104 65.78544617]
[-37.43067551 55.66887665]
[-33.84103012 45.78728485]
[-29.54193687 36.19305801]
[-24.55618858 26.93704796]
[-18.91021347 18.06831741]
[-12.63393688 9.63387966]
[-5.76062727 1.67844057]
[1.67328179 -5.75583124]
[9.62838554 -12.62952900]
[18.06251717 -18.90621758]
[26.93097115 -24.55262566]
[36.18673706 -29.53882408]
[45.78075790 -33.83838272]
[55.66217041 -37.42851257]
[65.77860260 -40.29018402]
[76.07643890 -42.40822601]
[86.50107574 -43.77141190]
[96.99726868 -44.37251282]
[107.50937653 -44.20835114]
[117.98168182 -43.27978897]
[128.35867310 -41.59175491]
[138.58534241 -39.15319061]
[148.60748291 -35.97702408]
[158.37197876 -32.08009338]
[167.82707214 -27.48305130]
[176.92262268 -22.21026802]
[185.61044312 -16.28969002]
[193.84446716 -9.75270176]
[201.58105469 -2.63395381]
[208.77920532 5.02882051]
[215.40074158 13.19500351]
[227.84017944 4.81286049]
[240.27963257 -3.56928277]
[252.71907043 -11.95142555]
[256.00936890 -17.80646706]
[261.02584839 -20.64657593]
[265.85491943 -20.41088486]
[278.63226318 -28.26831055]
[283.73678589 -43.47763062]
[298.85925293 -48.83401108]
[312.39898682 -40.22849274]
[313.96948242 -24.26249313]
[302.36596680 -13.18376255]
[286.48968506 -15.49095345]
[273.71234131 -7.63352776]
[261.10119629 0.48801431]
[248.66177368 8.87015724]
[236.22233582 17.25230026]
[223.78288269 25.63444328]
[227.61674500 32.42480469]
[231.07844543 39.41222382]
[234.15792847 46.57631683]
[236.84619141 53.89620209]
[239.13539124 61.35052872]
[241.01887512 68.91755676]
[242.49111938 76.57522583]
[243.54785156 84.30120850]
[244.18598938 92.07296753]
[244.40367126 99.86783600]
[244.20027161 107.66310120]
[243.57635498 115.43601227]
[242.53375244 123.16390991]
[241.07553101 130.82426453]
[239.20590210 138.39472961]
[236.93034363 145.85322571]
[234.25549316 153.17802429]
[231.18913269 160.34774780]
[227.74021912 167.34149170]
[223.91880798 174.13885498]
[219.73602295 180.72003174]
[215.20410156 187.06581116]
[210.33621216 193.15771484]
[205.14659119 198.97795105]
[199.65034485 204.50956726]
[193.86351013 209.73641968]
[187.80296326 214.64326477]
[181.48637390 219.21582031]
[174.93215942 223.44071960]
[168.15945435 227.30564880]
[161.18797302 230.79936218]
[154.03807068 233.91163635]
[146.73059082 236.63342285]
[139.28683472 238.95677185]
[131.72851562 240.87490845]
[124.07766724 242.38224792]
[116.35661316 243.47439575]
[108.58786774 244.14814758]
[100.79406738 244.40155029]
[92.99796295 244.23387146]
[85.22226715 243.64559937]
[77.48966980 242.63844299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 19]
[5 18]
[6 17]
[7 16]
[8 15]
[9 14]
[23 58]
[24 57]
[25 56]
[26 55]
[27 52]
[28 51]
[29 50]
[33 46]
[34 45]
[35 44]
[36 43]
[37 42]
[90 108]
[91 107]
[92 106]
[93 105]
[96 104]
[97 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
