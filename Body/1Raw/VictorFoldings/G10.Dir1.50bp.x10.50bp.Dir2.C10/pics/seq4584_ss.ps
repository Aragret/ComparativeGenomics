%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAUCACACCCCAUCCUAAAGUAAGGUCAGCUAAAUAAGCUAUCGGGCCCAUACCCCGAAAxxxxxxxxxxAAUUAAAAAAACUAUUAAACCCAUAUAACCUCCCCCAAAAUUCAGAAUAAUAACACACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[15.22353077 255.69351196]
[7.49944592 268.55191040]
[-0.22463882 281.41030884]
[-0.69826430 297.22442627]
[-13.88465405 304.15036011]
[-21.60873985 317.00875854]
[-29.33282471 329.86715698]
[-37.05690765 342.72555542]
[-37.53053284 358.53967285]
[-50.71692276 365.46560669]
[-58.44100952 378.32400513]
[-61.41411209 395.01522827]
[-78.27607727 396.77890015]
[-84.63868713 381.06414795]
[-71.29941559 370.59991455]
[-63.57532883 357.74151611]
[-63.65417862 342.84710693]
[-49.91530991 335.00149536]
[-42.19122696 322.14306641]
[-34.46714020 309.28466797]
[-26.74305725 296.42626953]
[-26.82190895 281.53189087]
[-13.08304119 273.68624878]
[-5.35895634 260.82781982]
[2.36512876 247.96943665]
[-10.91479206 238.29472351]
[-23.24197578 227.43208313]
[-34.51053619 215.47483826]
[-44.62367630 202.52566528]
[-53.49452591 188.69583130]
[-61.04688644 174.10412598]
[-67.21588898 158.87586975]
[-71.94853973 143.14187622]
[-75.20417786 127.03730774]
[-76.95485687 110.70050049]
[-77.18551636 94.27176666]
[-75.89419556 77.89224243]
[-73.09197235 61.70262146]
[-87.58757019 57.84546280]
[-102.08316803 53.98830414]
[-116.57876587 50.13114166]
[-131.12376404 56.90038300]
[-145.42001343 49.62050629]
[-148.50067139 33.87601089]
[-138.00250244 21.74472427]
[-121.97881317 22.53273582]
[-112.72160339 35.63554764]
[-98.22600555 39.49270630]
[-83.73041534 43.34986496]
[-69.23481750 47.20702362]
[-47.01601410 0.93531120]
[-12.47202969 -37.03125000]
[-21.48955917 -49.01808167]
[-30.50708961 -61.00491714]
[-39.52462006 -72.99174500]
[-48.54214859 -84.97858429]
[-64.16620636 -85.62889099]
[-75.68199921 -96.20813751]
[-77.65213776 -111.72111511]
[-69.14636993 -124.84307861]
[-54.18086243 -129.37823486]
[-39.82187271 -123.18521881]
[-32.84927368 -109.18818665]
[-36.55531693 -93.99610901]
[-27.53778648 -82.00927734]
[-18.52025604 -70.02244568]
[-9.50272655 -58.03561401]
[-0.48519677 -46.04877853]
[7.01677036 -50.93587875]
[14.75591278 -55.43798447]
[22.71249008 -59.54360580]
[30.86620712 -63.24227142]
[39.19626617 -66.52455139]
[47.68141937 -69.38207245]
[56.30002594 -71.80754852]
[65.03009796 -73.79478455]
[73.84936523 -75.33871460]
[82.73533630 -76.43540955]
[91.66535187 -77.08205414]
[100.61662292 -77.27701569]
[109.56632233 -77.01979065]
[118.49161530 -76.31103516]
[127.36974335 -75.15255737]
[136.17805481 -73.54730988]
[144.89410400 -71.49938965]
[153.49562073 -69.01402283]
[161.96069336 -66.09754181]
[170.26771545 -62.75739288]
[178.39550781 -59.00209427]
[186.32333374 -54.84122086]
[194.03096008 -50.28538895]
[201.49874878 -45.34622192]
[208.70764160 -40.03631210]
[215.63925171 -34.36920547]
[222.27589417 -28.35936165]
[228.60064697 -22.02210808]
[234.59736633 -15.37360668]
[240.25077820 -8.43081760]
[245.54643250 -1.21145129]
[250.47084045 6.26607895]
[255.01142883 13.98269939]
[259.15664673 21.91872787]
[262.89587402 30.05391884]
[266.21960449 38.36752701]
[269.11935425 46.83834076]
[271.58773804 55.44475555]
[273.61843872 64.16481781]
[275.20626831 72.97628784]
[276.34722900 81.85668945]
[277.03833008 90.78337097]
[277.27789307 99.73355865]
[277.06524658 108.68442535]
[276.40097046 117.61314392]
[275.28671265 126.49693298]
[273.72537231 135.31314087]
[271.72088623 144.03926086]
[269.27841187 152.65306091]
[266.40411377 161.13255310]
[263.10540771 169.45611572]
[259.39062500 177.60250854]
[255.26930237 185.55096436]
[250.75190735 193.28118896]
[245.85000610 200.77349854]
[240.57606506 208.00874329]
[234.94355774 214.96849060]
[228.96685791 221.63499451]
[222.66117859 227.99122620]
[216.04263306 234.02099609]
[209.12809753 239.70890808]
[201.93519592 245.04046631]
[194.48228455 250.00205994]
[186.78837585 254.58103943]
[178.87309265 258.76571655]
[170.75663757 262.54544067]
[162.45968628 265.91055298]
[154.00341797 268.85244751]
[145.40940857 271.36367798]
[136.69956970 273.43777466]
[127.89611816 275.06948853]
[119.02150726 276.25466919]
[110.09838104 276.99023438]
[101.14949799 277.27435303]
[92.19768524 277.10632324]
[83.26576996 276.48651123]
[74.37654114 275.41653442]
[65.55266571 273.89910889]
[56.81666183 271.93814087]
[48.19080353 269.53857422]
[39.69710159 266.70657349]
[31.35721207 263.44934082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[3 23]
[5 21]
[6 20]
[7 19]
[8 18]
[10 16]
[11 15]
[38 50]
[39 49]
[40 48]
[41 47]
[52 68]
[53 67]
[54 66]
[55 65]
[56 64]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
