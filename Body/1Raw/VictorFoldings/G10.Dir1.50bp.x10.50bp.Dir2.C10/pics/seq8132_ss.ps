%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUCCCUCACCAAAGCCCAUAAAAAUAAAAAAUUAUAACAAACCCUGAGAACCAAAAUGAxxxxxxxxxxUGGGACAGACCUAGUUCAAUGAAUCUGAGGAGGCUACUCAGUAGACAGUCCCACCCUCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[136.79942322 331.73016357]
[136.48736572 316.73339844]
[136.17532349 301.73663330]
[135.86326599 286.73989868]
[135.55120850 271.74313354]
[135.23915100 256.74639893]
[134.92709351 241.74963379]
[134.61503601 226.75288391]
[134.30297852 211.75611877]
[129.99539185 197.38793945]
[122.00547791 184.69300842]
[114.01556396 171.99807739]
[106.02564240 159.30314636]
[98.03572845 146.60823059]
[90.04581451 133.91329956]
[76.87722778 126.73078156]
[61.87804031 126.88681793]
[46.87885284 127.04286194]
[31.87966537 127.19889832]
[27.74046898 141.71601868]
[19.68644905 154.46572876]
[8.37754726 164.41931152]
[-5.26408529 170.77651978]
[-20.12928772 173.02990723]
[-35.01206589 171.00529480]
[-48.70743179 164.87524414]
[-60.10897446 155.14433289]
[-68.29823303 142.60768127]
[-72.61868286 128.28599548]
[-87.61787415 128.44203186]
[-102.61706543 128.59806824]
[-117.61624908 128.75410461]
[-125.08691406 142.17367554]
[-138.27471924 150.04624939]
[-153.63220215 150.25415039]
[-167.02827454 142.74147034]
[-174.85948181 129.52905273]
[-175.01925659 114.17099762]
[-167.46461487 100.79852295]
[-154.22772217 93.00877380]
[-138.86923218 92.89714813]
[-125.52050781 100.49366760]
[-117.77228546 113.75491333]
[-102.77310181 113.59887695]
[-87.77391052 113.44284058]
[-72.77471924 113.28680420]
[-68.75315094 98.87832642]
[-60.82647324 86.17402649]
[-49.62983704 76.20803070]
[-36.06496048 69.79438019]
[-21.22752571 67.46059418]
[-6.31866121 69.40423584]
[7.45227289 75.47627258]
[18.96579742 85.19243622]
[27.28331757 97.77182770]
[31.72362900 112.19970703]
[46.72281647 112.04367065]
[61.72200394 111.88763428]
[76.72119141 111.73159790]
[70.83391571 99.10925293]
[72.10399628 83.73486328]
[81.62866974 69.73632050]
[79.76105499 54.85303879]
[77.89344025 39.96975708]
[63.10907745 36.62335968]
[50.36253357 28.41961479]
[41.19301987 16.34916115]
[36.70779800 1.86957014]
[37.44847870 -13.27068043]
[43.32562256 -27.24333191]
[53.62953949 -38.36111832]
[67.11597443 -45.28150940]
[82.15637970 -47.16883850]
[96.93455505 -43.79520416]
[109.66595459 -35.56798172]
[118.81320953 -23.48064995]
[123.27174377 -8.99281788]
[122.50315857 6.14604235]
[116.60027313 20.10783958]
[106.27588654 31.20661736]
[92.77671814 38.10214615]
[94.64433289 52.98542404]
[96.51194763 67.86870575]
[103.49214172 70.61222076]
[117.45252991 76.09925079]
[124.43272400 78.84276581]
[135.93452454 69.21424103]
[147.43634033 59.58571625]
[158.93814087 49.95718765]
[144.55674744 45.69389343]
[138.72622681 31.87343597]
[145.70822144 18.59745026]
[160.39944458 15.56960773]
[172.06181335 25.00301743]
[172.17135620 40.00202179]
[184.61079407 31.61987877]
[197.05023193 23.23773575]
[206.80680847 9.37247181]
[222.83110046 14.90947056]
[221.94645691 31.84032249]
[205.43237305 35.67717743]
[192.99293518 44.05931854]
[180.55349731 52.44146347]
[168.56666565 61.45899200]
[157.06486511 71.08751678]
[145.56306458 80.71604156]
[134.06124878 90.34457397]
[125.46021271 117.21785736]
[102.74074554 125.92337799]
[110.73065948 138.61830139]
[118.72057343 151.31323242]
[126.71049500 164.00816345]
[134.70040894 176.70309448]
[142.69032288 189.39802551]
[142.51309204 174.39907837]
[145.61576843 159.72346497]
[151.84857178 146.07971191]
[160.91059875 134.12648010]
[172.36436462 124.44085693]
[185.65690613 117.49043274]
[200.14648438 113.61074829]
[215.13360596 112.98911285]
[229.89471436 115.65553284]
[243.71717834 121.48128510]
[255.93370056 130.18510437]
[265.95449829 141.34681702]
[273.29577637 154.42755127]
[277.60314941 168.79580688]
[278.66864014 183.75790405]
[276.44082642 198.59155273]
[271.02722168 212.58058167]
[262.68927002 225.04966736]
[251.82940674 235.39683533]
[238.97196960 243.12252808]
[224.73767090 247.85379028]
[209.81370544 249.36219788]
[194.92056274 247.57493591]
[180.77725220 242.57829285]
[168.06655884 234.61347961]
[157.40211487 224.06503296]
[149.29972839 211.44407654]
[149.61178589 226.44082642]
[149.92384338 241.43757629]
[150.23590088 256.43432617]
[150.54795837 271.43109131]
[150.86001587 286.42782593]
[151.17207336 301.42459106]
[151.48413086 316.42135620]
[151.79618835 331.41809082]
[154.38717651 350.62582397]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 114]
[11 113]
[12 112]
[13 111]
[14 110]
[15 109]
[16 59]
[17 58]
[18 57]
[19 56]
[29 46]
[30 45]
[31 44]
[32 43]
[62 83]
[63 82]
[64 81]
[86 107]
[87 106]
[88 105]
[89 104]
[95 103]
[96 102]
[97 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
