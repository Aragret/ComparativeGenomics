%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUAACCUCCCUGUUCUUAUGAAUUCGAACAGCAUACCCCCGAUUCCGCUACGACCAACUCAxxxxxxxxxxGCCACUUAUCCAGUGAACCACUAUCACGAAAAAAACUCUACCUCUCUAUACUAAUCUCCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[161.61198425 76.21070862]
[148.62159729 83.71070862]
[135.63122559 91.21070862]
[122.64083862 98.71070862]
[109.65045929 106.21070862]
[99.09844208 116.87162018]
[91.73220062 129.93830872]
[84.36596680 143.00500488]
[76.99972534 156.07170105]
[69.63348389 169.13839722]
[70.34281158 185.52220154]
[56.36527252 194.09893799]
[42.07976151 186.04559326]
[42.18198776 169.64677429]
[56.56679153 161.77215576]
[63.93302917 148.70545959]
[71.29927063 135.63876343]
[78.66551208 122.57207489]
[86.03174591 109.50537872]
[76.50840759 97.91632843]
[62.26171875 102.61013031]
[48.01502609 107.30393219]
[33.76833344 111.99773407]
[19.52164268 116.69152832]
[5.27495003 121.38533020]
[2.22197366 136.43774414]
[-7.96020412 147.93638611]
[-22.53262901 152.78819275]
[-37.57538986 149.68804932]
[-49.04206085 139.46987915]
[-53.84816742 124.88231659]
[-50.70088577 109.84934235]
[-40.44682312 98.41475677]
[-25.84427071 93.65440369]
[-10.82123947 96.84878540]
[0.58114940 107.13864136]
[14.82784176 102.44483948]
[29.07453346 97.75103760]
[43.32122421 93.05723572]
[57.56791687 88.36343384]
[71.81461334 83.66963959]
[80.76829529 80.36820984]
[89.17671204 80.40010834]
[95.98968506 83.17398071]
[100.44647217 87.80323029]
[102.15045929 93.22032928]
[115.14083862 85.72032928]
[128.13122559 78.22032928]
[141.12159729 70.72032928]
[154.11198425 63.22032547]
[146.75479126 48.05347443]
[140.56922913 32.37255859]
[135.59089661 16.26793671]
[131.84843445 -0.16760503]
[129.36334229 -16.83937645]
[128.14991760 -33.65132523]
[128.21508789 -50.50659943]
[129.55845642 -67.30809784]
[132.17221069 -83.95903778]
[136.04129028 -100.36349487]
[141.14332581 -116.42697906]
[147.44891357 -132.05696106]
[154.92166138 -147.16343689]
[163.51850891 -161.65936279]
[173.18988037 -175.46127319]
[183.88002014 -188.48968506]
[195.52732849 -200.66957092]
[208.06466675 -211.93078613]
[221.41976929 -222.20849609]
[235.51568604 -231.44351196]
[250.27119446 -239.58268738]
[265.60125732 -246.57916260]
[281.41757202 -252.39266968]
[297.62893677 -256.98974609]
[314.14202881 -260.34399414]
[330.86169434 -262.43609619]
[347.69155884 -263.25402832]
[364.53472900 -262.79315186]
[381.29412842 -261.05618286]
[397.87322998 -258.05310059]
[414.17654419 -253.80131531]
[430.11016846 -248.32533264]
[445.58227539 -241.65673828]
[460.50381470 -233.83399963]
[468.40029907 -246.58724976]
[476.29678345 -259.34051514]
[484.19326782 -272.09375000]
[481.93466187 -287.97702026]
[493.04882812 -299.54660034]
[509.00994873 -297.92724609]
[517.57397461 -284.36123657]
[512.17138672 -269.25524902]
[496.94650269 -264.19729614]
[489.05001831 -251.44403076]
[481.15356445 -238.69076538]
[473.25708008 -225.93751526]
[484.37490845 -218.02081299]
[494.98526001 -209.43572998]
[505.04806519 -200.21467590]
[514.52520752 -190.39251709]
[523.38085938 -180.00639343]
[531.58160400 -169.09552002]
[539.09631348 -157.70117188]
[545.89660645 -145.86639404]
[551.95672607 -133.63594055]
[557.25384521 -121.05604553]
[561.76782227 -108.17424011]
[565.48162842 -95.03924561]
[568.38116455 -81.70069885]
[570.45550537 -68.20903778]
[571.69677734 -54.61526108]
[572.10021973 -40.97076035]
[571.66436768 -27.32712555]
[570.39074707 -13.73593330]
[568.28430176 -0.24857342]
[565.35284424 13.08396149]
[561.60754395 26.21126175]
[557.06243896 39.08369446]
[551.73480225 51.65258408]
[545.64471436 63.87040710]
[538.81518555 75.69096375]
[531.27203369 87.06955719]
[523.04370117 97.96316528]
[514.16137695 108.33058167]
[504.65859985 118.13259888]
[494.57122803 127.33216095]
[483.93746948 135.89447021]
[472.79745483 143.78712463]
[461.19332886 150.98030090]
[449.16894531 157.44676208]
[436.76974487 163.16206360]
[424.04260254 168.10458374]
[411.03564453 172.25561523]
[397.79803467 175.59944153]
[384.37979126 178.12341309]
[370.83166504 179.81796265]
[357.20486450 180.67668152]
[343.55093384 180.69630432]
[329.92147827 179.87673950]
[316.36798096 178.22105408]
[302.94177246 175.73550415]
[289.69354248 172.42947388]
[276.67343140 168.31544495]
[263.93063354 163.40893555]
[251.51335144 157.72851562]
[239.46853638 151.29560852]
[227.84173584 144.13455200]
[216.67689514 136.27238464]
[206.01625061 127.73883820]
[195.90011597 118.56613922]
[186.36676025 108.78896332]
[177.45220947 98.44427490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 50]
[2 49]
[3 48]
[4 47]
[5 46]
[6 19]
[7 18]
[8 17]
[9 16]
[10 15]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[84 96]
[85 95]
[86 94]
[87 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
