%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGCCUUUUACCACUCCAGCCUAGCCCCUACCCCCCAAUUAGGAGGGCACUGGCCCCCAACAGxxxxxxxxxxAGCCGCAGACCUCCUCAUUCUAACCUGAAUCGGAGGACAACCAGUAAGCUACCCUUUUACCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-6.41371918 188.31379700]
[-18.45900154 197.25309753]
[-30.50428391 206.19241333]
[-42.54956818 215.13171387]
[-54.59484863 224.07101440]
[-66.64012909 233.01031494]
[-73.53134918 250.05705261]
[-90.99974060 251.45104980]
[-102.86137390 260.63262939]
[-114.72301483 269.81423950]
[-119.63099670 277.58938599]
[-126.91937256 279.05877686]
[-138.96466064 287.99810791]
[-133.91941833 302.24719238]
[-133.29998779 317.35043335]
[-137.16143799 331.96484375]
[-145.16041565 344.79089355]
[-156.58566284 354.68811035]
[-170.42124939 360.77645874]
[-185.43692017 362.51455688]
[-200.29750061 359.74786377]
[-213.68159485 352.72235107]
[-224.39909363 342.06277466]
[-231.49700928 328.71694946]
[-234.34419250 313.87158203]
[-232.68748474 298.84671021]
[-226.67417908 284.97836304]
[-216.83900452 273.49963379]
[-204.05648804 265.43127441]
[-189.46322632 261.49069214]
[-174.35685730 262.02828979]
[-160.08062744 266.99624634]
[-147.90396118 275.95281982]
[-135.85867310 267.01351929]
[-123.90460205 257.95260620]
[-112.04296875 248.77101135]
[-100.18132782 239.58941650]
[-98.32670593 227.59864807]
[-88.46842957 219.85659790]
[-75.57943726 220.96504211]
[-63.53415298 212.02574158]
[-51.48887253 203.08642578]
[-39.44358826 194.14712524]
[-27.39830589 185.20782471]
[-15.35302448 176.26850891]
[-29.46789360 148.59291077]
[-37.04838181 118.46476746]
[-37.71189117 87.40469360]
[-31.42493439 56.98031616]
[-18.50481987 28.72718430]
[0.39635745 4.07127094]
[-9.82744026 -6.90479231]
[-18.01729584 -11.08420372]
[-20.14443207 -18.20845222]
[-30.14367867 -29.38946533]
[-40.14292526 -40.57048035]
[-50.14216995 -51.75149536]
[-65.88193512 -56.35494232]
[-69.50170135 -72.34960938]
[-57.27776337 -83.28154755]
[-41.78506088 -77.90492249]
[-38.96115494 -61.75074005]
[-28.96191025 -50.56972504]
[-18.96266365 -39.38871002]
[-8.96341801 -28.20769691]
[1.14862347 -17.12858963]
[11.37242126 -6.15252638]
[19.04171753 -12.11138821]
[27.11034584 -17.51725388]
[35.53850555 -22.34346008]
[44.28462601 -26.56620216]
[53.30556107 -30.16464996]
[62.55682373 -33.12105560]
[71.99277496 -35.42083359]
[81.56687164 -37.05264282]
[91.23188782 -38.00843048]
[100.94016266 -38.28348541]
[110.64379120 -37.87645340]
[120.29492188 -36.78933716]
[129.84594727 -35.02750015]
[139.24975586 -32.59963608]
[148.45996094 -29.51771545]
[157.43113708 -25.79694366]
[166.11903381 -21.45567131]
[174.48078918 -16.51531219]
[182.47517395 -11.00023746]
[190.06274414 -4.93764830]
[197.20606995 1.64255142]
[203.86991882 8.70790386]
[210.02142334 16.22355843]
[215.63024902 24.15244484]
[220.66871643 32.45545197]
[234.13578796 25.84954071]
[247.60285950 19.24362946]
[261.06991577 12.63771725]
[274.53698730 6.03180456]
[279.46151733 -5.93079662]
[290.86184692 -11.14206982]
[302.36834717 -7.29250240]
[315.96652222 -13.62412167]
[329.56469727 -19.95573997]
[343.16287231 -26.28735924]
[348.34048462 -41.21947479]
[362.59646606 -48.04169464]
[377.47299194 -42.70651627]
[384.14410400 -28.37920952]
[378.65194702 -13.55990696]
[364.25491333 -7.04064131]
[349.49450684 -12.68917561]
[335.89633179 -6.35755682]
[322.29812622 -0.02593757]
[308.69995117 6.30568123]
[299.45187378 21.19060516]
[281.14291382 19.49887276]
[267.67584229 26.10478401]
[254.20877075 32.71069717]
[240.74169922 39.31660843]
[227.27464294 45.92252350]
[230.96961975 55.61344910]
[233.92790222 65.55404663]
[236.13284302 75.68840027]
[237.57205200 85.95951080]
[238.23742676 96.30959320]
[238.12522888 106.68043518]
[237.23608398 117.01370239]
[235.57498169 127.25126648]
[233.15127563 137.33554077]
[229.97862244 147.20980835]
[226.07482910 156.81852722]
[221.46186829 166.10763550]
[216.16571045 175.02490234]
[210.21611023 183.52014160]
[203.64656067 191.54560852]
[196.49400330 199.05612183]
[188.79866028 206.00944519]
[180.60385132 212.36648560]
[171.95562744 218.09146118]
[162.90267944 223.15217590]
[153.49589539 227.52017212]
[143.78819275 231.17088318]
[133.83419800 234.08375549]
[123.68988037 236.24241638]
[113.41231537 237.63471985]
[103.05930328 238.25283813]
[92.68907928 238.09329224]
[82.35997772 237.15698242]
[72.13010406 235.44915771]
[62.05699921 232.97946167]
[52.19731903 229.76174927]
[42.60652542 225.81413269]
[33.33856964 221.15882874]
[24.44557571 215.82200623]
[15.97757530 209.83369446]
[7.98219442 203.22756958]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 45]
[2 44]
[3 43]
[4 42]
[5 41]
[6 40]
[8 37]
[9 36]
[10 35]
[12 34]
[13 33]
[51 67]
[52 66]
[54 65]
[55 64]
[56 63]
[57 62]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[99 112]
[100 111]
[101 110]
[102 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
