%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACUAAUCUCAUCAAUACAACCCCCGCCCAUCCUACCCAGCACACACACACCGCUGCUAACxxxxxxxxxxCUAGCAGAGACCAACCGAACCCCCUUCGACCUUGCCGAAGGGGAGUCCGAACUAGUCUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[7.11120796 198.51997375]
[-3.76761723 208.84718323]
[-14.64644241 219.17437744]
[-19.32810783 234.28704834]
[-33.88560486 237.43800354]
[-44.76443100 247.76521301]
[-55.64325333 258.09240723]
[-66.52207947 268.41961670]
[-77.40090179 278.74682617]
[-70.49652863 292.18209839]
[-67.65833282 307.01858521]
[-69.11639404 322.05355835]
[-74.75251770 336.06820679]
[-84.10980988 347.92645264]
[-96.42971802 356.66696167]
[-110.71351624 361.58120728]
[-125.80329132 362.27078247]
[-140.47576904 358.67984009]
[-153.54151917 351.09942627]
[-163.94137573 340.14407349]
[-170.83226013 326.70187378]
[-173.65554810 311.86254883]
[-172.18237305 296.82904053]
[-166.53218079 282.82003784]
[-157.16297913 270.97122192]
[-144.83428955 262.24307251]
[-130.54556274 257.34320068]
[-115.45510864 256.66876221]
[-100.78624725 260.27447510]
[-87.72811127 267.86801147]
[-76.84928131 257.54080200]
[-65.97045898 247.21359253]
[-55.09163284 236.88638306]
[-44.21281052 226.55918884]
[-40.30926895 212.18519592]
[-24.97364807 208.29556274]
[-14.09482193 197.96835327]
[-3.21599674 187.64114380]
[-10.51452637 178.23715210]
[-16.95891380 168.22848511]
[-22.49934769 157.69248962]
[-27.09300995 146.71060181]
[-30.70439911 135.36769104]
[-33.30559921 123.75143433]
[-34.87650681 111.95160675]
[-35.40498352 100.05941010]
[-34.88694382 88.16675568]
[-33.32638931 76.36555481]
[-30.73538399 64.74701691]
[-27.13395119 53.40094757]
[-22.54992676 42.41503143]
[-17.01873970 31.87417603]
[-10.58313847 21.85985184]
[-3.29286289 12.44945717]
[4.79574108 3.71572161]
[13.62015915 -4.27385235]
[23.11219025 -11.45751572]
[33.19847107 -17.77974701]
[43.80104446 -23.19168282]
[54.83797073 -27.65149498]
[66.22394562 -31.12471581]
[77.87096405 -33.58449936]
[89.68901825 -35.01184082]
[89.37696075 -50.00859451]
[89.06490326 -65.00534821]
[88.75284576 -80.00209808]
[88.44078827 -94.99885559]
[88.12873840 -109.99560547]
[74.07427216 -115.86007690]
[63.62489700 -126.93845367]
[58.59102631 -141.31134033]
[59.84481049 -156.48855591]
[67.16902161 -169.84056091]
[79.29469299 -179.05401611]
[94.12098694 -182.53265381]
[109.07915497 -179.67378235]
[121.57759857 -170.97270203]
[129.45089722 -157.93693542]
[131.33494568 -142.82501221]
[126.90332031 -128.25517273]
[116.92383575 -116.75170135]
[103.12548828 -110.30766296]
[103.43754578 -95.31091309]
[103.74960327 -80.31415558]
[104.06166077 -65.31740570]
[104.37371063 -50.32064819]
[104.68576813 -35.32389450]
[126.32655334 -32.82102966]
[147.28587341 -26.88009644]
[167.02120972 -17.65488052]
[185.02169800 -5.38417435]
[200.82141113 9.61439610]
[214.01135254 26.95259285]
[224.25013733 46.18161774]
[231.27268982 66.80372620]
[234.89727783 88.28511810]
[249.88996887 87.81707764]
[263.44198608 79.65294647]
[276.40451050 86.98934937]
[291.39718628 86.52130890]
[306.38421631 85.89733124]
[321.36392212 85.11748505]
[336.34362793 84.33763885]
[351.32336426 83.55779266]
[366.30307007 82.77794647]
[381.28277588 81.99810028]
[396.26248169 81.21826172]
[411.24221802 80.43841553]
[420.51239014 67.84484863]
[435.72085571 64.20662689]
[449.68661499 71.24160004]
[455.81552124 85.62808228]
[451.21362305 100.57320404]
[438.05386353 109.02033997]
[422.54980469 106.98101044]
[412.02206421 95.41812897]
[397.04232788 96.19797516]
[382.06262207 96.97782135]
[367.08291626 97.75765991]
[352.10321045 98.53750610]
[337.12347412 99.31735229]
[322.14376831 100.09719849]
[307.16406250 100.87704468]
[300.60537720 104.38835144]
[291.86523438 101.51399994]
[276.87252808 101.98204803]
[264.39288330 110.11270142]
[250.35801697 102.80977631]
[235.36531067 103.27781677]
[234.35993958 116.79045868]
[232.00907898 130.13496399]
[228.33627319 143.17768860]
[223.37831116 155.78802490]
[217.18484497 167.83972168]
[209.81787109 179.21205139]
[201.35118103 189.79115295]
[191.86956787 199.47108459]
[181.46795654 208.15490723]
[170.25053406 215.75567627]
[158.32962036 222.19725037]
[145.82458496 227.41514587]
[132.86067200 231.35710144]
[119.56768036 233.98365784]
[106.07874298 235.26847839]
[92.52893066 235.19873047]
[79.05393982 233.77510071]
[65.78869629 231.01182556]
[52.86604691 226.93661499]
[40.41540146 221.59025574]
[28.56143570 215.02627563]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 38]
[2 37]
[3 36]
[5 34]
[6 33]
[7 32]
[8 31]
[9 30]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[68 82]
[96 129]
[97 128]
[99 126]
[100 125]
[101 123]
[102 122]
[103 121]
[104 120]
[105 119]
[106 118]
[107 117]
[108 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
