%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUGCCCCAACUAAAUACUACCGUAUGGCCCACCAUAAUUACCCCCAUACUCCUUACACUAUUCxxxxxxxxxxACUAAAGGACGAACCUGAUCUCUUAUACUAGUAUCCUUAAUCAUUUUUAUUGCCACAACUAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[165.55178833 77.94087982]
[152.08473206 84.54679108]
[138.61766052 91.15270996]
[125.15058899 97.75862122]
[111.68351746 104.36453247]
[101.13079834 115.02474213]
[94.66170502 128.55805969]
[88.19260406 142.09138489]
[81.72350311 155.62471008]
[80.34764862 172.52273560]
[63.72912979 175.87847900]
[55.90405655 160.83837891]
[68.19018555 149.15560913]
[74.65928650 135.62228394]
[81.12837982 122.08896637]
[87.59748077 108.55564117]
[83.12783051 102.53300476]
[74.43432617 114.75687408]
[60.12234879 110.26606750]
[59.97090149 95.26683807]
[74.18852234 90.48771667]
[69.71887207 84.46508026]
[54.89184570 86.73649597]
[40.06481934 89.00791168]
[51.94349289 98.16744995]
[55.32184219 112.78205872]
[48.66815186 126.22558594]
[34.99915314 132.40283203]
[20.51226425 128.51309204]
[11.77573204 116.31993866]
[12.75063324 101.35165405]
[22.99468231 90.39488220]
[7.99545336 90.54689789]
[-7.00377655 90.69890594]
[-22.00300598 90.85091400]
[-37.00223541 91.00292206]
[-50.83752441 99.80728912]
[-65.25292969 91.98883820]
[-65.41912079 75.59053802]
[-51.16513062 67.48154449]
[-37.15424728 76.00369263]
[-22.15501595 75.85168457]
[-7.15578651 75.69967651]
[7.84344339 75.54766846]
[22.84267235 75.39565277]
[37.79340363 74.18088531]
[52.62042999 71.90946960]
[67.44745636 69.63805389]
[95.74076843 72.86362457]
[105.07760620 90.89746094]
[118.54467773 84.29154968]
[132.01174927 77.68563843]
[145.47880554 71.07972717]
[158.94587708 64.47381592]
[152.61836243 48.81276321]
[147.49996948 32.71622467]
[143.62030029 16.27739525]
[141.00177002 -0.40854385]
[139.65946960 -17.24499321]
[139.60116577 -34.13447952]
[140.82713318 -50.97922897]
[143.33023071 -67.68172455]
[147.09593201 -84.14529419]
[152.10240173 -100.27462006]
[158.32058716 -115.97634888]
[165.71447754 -131.15960693]
[174.24122620 -145.73649597]
[183.85140991 -159.62266541]
[194.48939514 -172.73774719]
[206.09353638 -185.00582886]
[218.59664917 -196.35595703]
[231.92630005 -206.72241211]
[246.00531006 -216.04525757]
[260.75213623 -224.27052307]
[276.08139038 -231.35064697]
[291.90432739 -237.24468994]
[308.12933350 -241.91854858]
[324.66244507 -245.34521484]
[341.40792847 -247.50489807]
[358.26889038 -248.38514709]
[375.14767456 -247.98089600]
[391.94659424 -246.29452515]
[408.56838989 -243.33584595]
[424.91683960 -239.12202454]
[440.89733887 -233.67750549]
[456.41735840 -227.03384399]
[471.38708496 -219.22955322]
[485.71984863 -210.30981445]
[494.53662109 -222.44506836]
[503.35339355 -234.58033752]
[502.27398682 -250.58703613]
[514.21228027 -261.30416870]
[530.01019287 -258.51049805]
[537.54895020 -244.34906006]
[531.04547119 -229.68330383]
[515.48864746 -225.76354980]
[506.67187500 -213.62829590]
[497.85510254 -201.49304199]
[508.33486938 -192.79673767]
[518.26147461 -183.47381592]
[527.59753418 -173.55935669]
[536.30786133 -163.09074402]
[544.35961914 -152.10736084]
[551.72247314 -140.65058899]
[558.36865234 -128.76359558]
[564.27319336 -116.49113464]
[569.41369629 -103.87943268]
[573.77087402 -90.97599792]
[577.32830811 -77.82942963]
[580.07250977 -64.48925018]
[581.99316406 -51.00571442]
[583.08306885 -37.42961502]
[583.33801270 -23.81208801]
[582.75708008 -10.20443726]
[581.34240723 3.34207678]
[579.09930420 16.77641869]
[576.03625488 30.04797935]
[572.16473389 43.10675812]
[567.49938965 55.90355301]
[562.05761719 68.39015198]
[555.86004639 80.51951599]
[548.92999268 92.24593353]
[541.29351807 103.52523041]
[532.97930908 114.31489563]
[524.01879883 124.57428741]
[514.44567871 134.26473999]
[504.29602051 143.34973145]
[493.60800171 151.79502869]
[482.42190552 159.56880188]
[470.77984619 166.64175415]
[458.72567749 172.98722839]
[446.30480957 178.58129883]
[433.56405640 183.40289307]
[420.55133057 187.43382263]
[407.31573486 190.65887451]
[393.90707397 193.06590271]
[380.37585449 194.64579773]
[366.77307129 195.39262390]
[353.14996338 195.30354309]
[339.55786133 194.37884521]
[326.04794312 192.62203979]
[312.67111206 190.03970337]
[299.47778320 186.64154053]
[286.51763916 182.44036865]
[273.83950806 177.45196533]
[261.49118042 171.69511414]
[249.51914978 165.19151306]
[237.96855164 157.96562195]
[226.88288879 150.04464722]
[216.30395508 141.45841980]
[206.27159119 132.23928833]
[196.82360840 122.42195129]
[187.99560547 112.04338837]
[179.82086182 101.14268494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 54]
[2 53]
[3 52]
[4 51]
[5 50]
[6 16]
[7 15]
[8 14]
[9 13]
[22 48]
[23 47]
[24 46]
[32 45]
[33 44]
[34 43]
[35 42]
[36 41]
[88 98]
[89 97]
[90 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
