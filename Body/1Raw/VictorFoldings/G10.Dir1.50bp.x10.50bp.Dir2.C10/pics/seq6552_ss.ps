%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGCCUCCGUAGACCUAACCAUCUUCUCCUUACACCUAGCAGGUGUCUCCUCUAUCUUAGGxxxxxxxxxxUGAAUCGGAGGACAACCAGUAAGCUACCCUUUUACCAUCAUUGGACAAGUAGCAUCCGUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[99.37508392 264.60067749]
[99.37508392 249.60067749]
[99.37508392 234.60067749]
[99.37508392 219.60067749]
[99.37508392 204.60067749]
[99.37508392 189.60067749]
[99.37508392 174.60067749]
[99.37508392 159.60067749]
[99.37508392 144.60067749]
[99.37508392 129.60067749]
[80.32402039 115.22749329]
[80.38893127 95.35797119]
[68.03736115 86.84687805]
[55.59791565 78.46473694]
[43.15847778 70.08258820]
[30.71903610 61.70044708]
[18.27959633 53.31830597]
[5.84015608 44.93616104]
[0.50269222 44.57413101]
[-3.71142077 42.38469315]
[-6.28736353 39.11877823]
[-7.09127188 35.62289429]
[-20.18442535 28.30378723]
[-34.20113754 22.96227455]
[-48.21785355 17.62076378]
[-62.23456573 12.27925014]
[-76.25128174 6.93773794]
[-83.81594086 18.25217056]
[-93.58818054 27.71596146]
[-105.12805939 34.90696716]
[-117.91691589 39.50526428]
[-131.38059998 41.30739212]
[-144.91534424 40.23535538]
[-157.91473389 36.33998108]
[-169.79698181 29.79853439]
[-180.03086853 20.90664101]
[-188.15956116 10.06493473]
[-193.82098389 -2.23899913]
[-196.76394653 -15.45254612]
[-196.85925293 -28.98288536]
[-194.10543823 -42.22358322]
[-207.76167297 -48.42898941]
[-221.41790771 -54.63439560]
[-235.07415771 -60.83980560]
[-248.73039246 -67.04521179]
[-262.38662720 -73.25061798]
[-279.30816650 -74.29848480]
[-282.98559570 -90.84880066]
[-268.10009766 -98.96409607]
[-256.18124390 -86.90686035]
[-242.52499390 -80.70145416]
[-228.86874390 -74.49604797]
[-215.21250916 -68.29064178]
[-201.55625916 -62.08523178]
[-187.90002441 -55.87982559]
[-177.65502930 -68.78182983]
[-164.44306946 -78.64107513]
[-149.13960266 -84.79767609]
[-132.76036072 -86.83733368]
[-116.39395905 -84.61917877]
[-101.12949371 -78.28551483]
[-87.98408508 -68.25267792]
[-77.83512878 -55.18368530]
[-71.36170197 -39.94442368]
[-68.99913788 -23.54626846]
[-70.90976715 -7.07897520]
[-56.89305115 -1.73746264]
[-42.87633896 3.60404992]
[-28.85962677 8.94556236]
[-14.84291363 14.28707504]
[-23.53995132 2.06571937]
[-27.00213051 -12.52925587]
[-24.72108269 -27.35480309]
[-17.03174400 -40.23401260]
[-5.06317711 -49.27577209]
[9.42721558 -53.15243530]
[24.31174088 -51.29477692]
[37.40483475 -43.97555923]
[46.78396988 -32.26950073]
[51.07197189 -17.89546204]
[49.63920593 -2.96404552]
[42.69605637 10.33229446]
[31.26201630 20.04119301]
[17.01600075 24.73704910]
[2.05046248 23.73051453]
[14.22229958 32.49671936]
[26.66173935 40.87886429]
[39.10118103 49.26100922]
[51.54061890 57.64315033]
[63.98006058 66.02529144]
[76.41950226 74.40744019]
[83.77158356 75.54434967]
[89.02804565 83.09559631]
[111.29854584 77.83327484]
[129.56675720 98.45176697]
[144.55946350 97.98372650]
[155.34722900 86.74709320]
[170.55860901 86.48600769]
[181.20454407 96.83973694]
[196.19723511 96.37169647]
[210.34341431 54.26538086]
[224.66601562 49.80856323]
[238.98861694 45.35174942]
[247.69274902 31.87519264]
[263.66979980 30.42130280]
[274.66351318 42.10537720]
[272.24047852 57.96439743]
[258.25942993 65.83267212]
[243.44543457 59.67434692]
[229.12283325 64.13116455]
[214.80023193 68.58797455]
[214.95626831 76.08635712]
[228.09986877 83.31445312]
[215.26832581 91.08310699]
[215.42434692 98.58148193]
[229.91993713 102.43864441]
[244.41554260 106.29580688]
[260.09893799 101.50385284]
[271.90438843 112.88644409]
[267.68746948 128.73414612]
[251.78614807 132.74418640]
[240.55838013 120.79139709]
[226.06278992 116.93424225]
[211.56718445 113.07707977]
[196.66528320 111.36439514]
[181.67259216 111.83243561]
[171.69320679 122.83004761]
[156.49514771 123.51828766]
[145.02749634 112.97641754]
[130.03480530 113.44446564]
[143.41651917 120.22159576]
[158.34568787 121.67764282]
[170.21334839 130.85145569]
[175.38343811 144.93229675]
[172.27191162 159.60603333]
[161.83209229 170.37683105]
[147.26260376 173.94471741]
[133.02728271 169.21650696]
[123.48764038 157.64088440]
[121.56646729 142.76441956]
[114.37508392 129.60067749]
[114.37508392 144.60067749]
[114.37508392 159.60067749]
[114.37508392 174.60067749]
[114.37508392 189.60067749]
[114.37508392 204.60067749]
[114.37508392 219.60067749]
[114.37508392 234.60067749]
[114.37508392 249.60067749]
[114.37508392 264.60067749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 93]
[13 91]
[14 90]
[15 89]
[16 88]
[17 87]
[18 86]
[22 85]
[23 70]
[24 69]
[25 68]
[26 67]
[27 66]
[41 55]
[42 54]
[43 53]
[44 52]
[45 51]
[46 50]
[95 130]
[96 129]
[99 126]
[100 125]
[101 111]
[102 110]
[103 109]
[115 124]
[116 123]
[117 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
