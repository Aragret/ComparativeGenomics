%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACCCCCUUAUUUCUAGGACUAUGAGAAUCGAACCCAUCCCUGAGAAUCCAAAAUUCUCCGxxxxxxxxxxAUCGUUGUAUUUCAACUACAAGAACACCAAUGACCCCAAUACGCAAAACUAACCCCCUAAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-21.59102440 193.33522034]
[-33.92230988 201.87568665]
[-46.25359344 210.41613770]
[-55.89540482 221.90681458]
[-62.16481018 235.53378296]
[-68.43421936 249.16076660]
[-74.70362091 262.78775024]
[-80.97303009 276.41473389]
[-78.92195129 292.68508911]
[-92.14872742 302.37966919]
[-107.04678345 295.52545166]
[-108.29027557 279.17352295]
[-94.60000610 270.14532471]
[-88.33060455 256.51834106]
[-82.06119537 242.89135742]
[-75.79179382 229.26438904]
[-69.52238464 215.63740540]
[-74.57510376 210.09483337]
[-85.66039276 220.20010376]
[-95.76548767 209.11465454]
[-84.68053436 199.00970459]
[-89.73325348 193.46713257]
[-103.88056946 198.45245361]
[-118.02788544 203.43777466]
[-132.17520142 208.42309570]
[-135.62818909 223.45907593]
[-146.67803955 234.22496033]
[-161.79879761 237.28540039]
[-176.16546631 231.66383362]
[-185.19372559 219.15406799]
[-186.00265503 203.74792480]
[-178.33415222 190.36145020]
[-164.63520813 183.26623535]
[-149.27708435 184.72630310]
[-137.16052246 194.27578735]
[-123.01320648 189.29046631]
[-108.86589050 184.30514526]
[-94.71857452 179.31982422]
[-84.59477997 177.76194763]
[-75.24846649 178.72831726]
[-67.24900818 181.80737305]
[-61.02520370 186.46955872]
[-56.84298325 192.10833740]
[-54.79405212 198.08485413]
[-42.46276855 189.54440308]
[-30.13148308 181.00393677]
[-43.94989395 152.67134094]
[-51.68038177 122.11115265]
[-52.99600983 90.61584473]
[-47.84113693 59.51741791]
[-36.43377304 30.13107491]
[-19.25635910 3.69962549]
[2.96463966 -18.65909195]
[-5.95151138 -30.72152328]
[-14.86766243 -42.78395462]
[-23.78381348 -54.84638596]
[-32.69996262 -66.90882111]
[-41.61611557 -78.97125244]
[-57.20461655 -82.76309967]
[-63.82833481 -97.37493896]
[-56.40612030 -111.59781647]
[-40.63165665 -114.52115631]
[-28.60576820 -103.90242767]
[-29.55368423 -87.88739777]
[-20.63753319 -75.82496643]
[-11.72138119 -63.76253891]
[-2.80523062 -51.70010757]
[6.11092043 -39.63767624]
[15.02707100 -27.57524300]
[24.27556419 -33.27284622]
[33.90435028 -38.30114365]
[43.86507034 -42.63488770]
[54.10770416 -46.25231171]
[64.58081055 -49.13525009]
[75.23179626 -51.26922226]
[86.00716400 -52.64351273]
[96.85280609 -53.25122070]
[107.71425629 -53.08929443]
[118.53696442 -52.15854263]
[129.26657104 -50.46364594]
[139.84921265 -48.01311493]
[150.23171997 -44.81925201]
[160.36196899 -40.89809799]
[170.18907166 -36.26934814]
[179.66368103 -30.95624924]
[188.07708740 -43.37456512]
[196.49050903 -55.79287720]
[204.90391541 -68.21118927]
[203.29930115 -84.17379761]
[214.87910461 -95.27730560]
[230.76028442 -93.00405121]
[238.76016235 -79.09787750]
[232.74191284 -64.22642517]
[217.32221985 -59.79778290]
[208.90881348 -47.37946701]
[200.49540710 -34.96115494]
[192.08200073 -22.54283905]
[199.25071716 -16.81239891]
[206.06364441 -10.66320610]
[212.49635315 -4.11730576]
[218.52577209 2.80183744]
[224.13031006 10.06941891]
[229.28984070 17.65938568]
[233.98591614 25.54453087]
[238.20166016 33.69658279]
[241.92198181 42.08632278]
[245.13352966 50.68367386]
[247.82479858 59.45781708]
[249.98614502 68.37729645]
[251.60983276 77.41013336]
[252.69000244 86.52395630]
[253.22282410 95.68608093]
[253.20634460 104.86367798]
[252.64067078 114.02383423]
[251.52778625 123.13372040]
[249.87171936 132.16067505]
[247.67837524 141.07234192]
[244.95564270 149.83677673]
[241.71325684 158.42254639]
[237.96286011 166.79887390]
[233.71789551 174.93576050]
[228.99356079 182.80400085]
[223.80682373 190.37539673]
[218.17623901 197.62283325]
[212.12202454 204.52029419]
[205.66587830 211.04307556]
[198.83093262 217.16777039]
[191.64169312 222.87245178]
[184.12394714 228.13665771]
[176.30461121 232.94151306]
[168.21174622 237.26980591]
[159.87435913 241.10600281]
[151.32232666 244.43635559]
[142.58631897 247.24893188]
[133.69763184 249.53364563]
[124.68815613 251.28230286]
[115.59017944 252.48864746]
[106.43630981 253.14834595]
[97.25936890 253.25903320]
[88.09224701 252.82031250]
[78.96781921 251.83375549]
[69.91878510 250.30290222]
[60.97759247 248.23324585]
[52.17628098 245.63218689]
[43.54641342 242.50906372]
[35.11891937 238.87507629]
[26.92401505 234.74324036]
[18.99107552 230.12838745]
[11.34853745 225.04702759]
[4.02380037 219.51741028]
[-2.95687914 213.55934143]
[-9.56847572 207.19416809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 46]
[2 45]
[3 44]
[4 17]
[5 16]
[6 15]
[7 14]
[8 13]
[22 38]
[23 37]
[24 36]
[25 35]
[53 69]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[85 97]
[86 96]
[87 95]
[88 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
