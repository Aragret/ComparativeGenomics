%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUACUAGCAUUUACCAUCUCACUUCUAGGAAUACUAGUAUAUCGCUCACACCUCAUAUCCxxxxxxxxxxCCCUCAUUUACAUAAAUAUUAUACUAGCAUUUACCAUCUCACUUCUAGGAAUACUAGUAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[79.71898651 458.24310303]
[82.30998993 439.03540039]
[82.62204742 424.03863525]
[82.93409729 409.04187012]
[83.24615479 394.04513550]
[83.55821228 379.04837036]
[83.87026978 364.05163574]
[84.18232727 349.05487061]
[84.49438477 334.05810547]
[84.80643463 319.06137085]
[70.66680145 315.71087646]
[57.53330994 309.47842407]
[45.98638153 300.63665771]
[36.53689194 289.57351685]
[29.60359955 276.77539062]
[25.49456215 262.80557251]
[24.39346886 248.27957153]
[26.35142136 233.83795166]
[31.28457260 220.11805725]
[38.97771072 207.72595215]
[49.09364700 197.20956421]
[61.18799591 189.03457642]
[74.72869873 183.56367493]
[89.11941528 181.04052734]
[89.74339294 166.05351257]
[75.30452728 162.11599731]
[62.10358429 155.06474304]
[50.80231857 145.25320435]
[41.96723175 133.17320251]
[36.04120636 119.43031311]
[33.32130814 104.71340942]
[33.94387817 89.76023865]
[37.87770462 75.32035828]
[44.92559433 62.11762619]
[54.73425674 50.81385803]
[66.81199646 41.97568893]
[80.55338287 36.04616165]
[95.26958466 33.32251358]
[95.89356232 18.33549500]
[96.20561981 3.33874226]
[96.20561981 -11.66125774]
[96.20561981 -26.66125870]
[88.46832275 -40.46142960]
[96.20561981 -53.18870163]
[96.20561981 -68.18870544]
[96.20561981 -83.18870544]
[96.20561981 -98.18870544]
[96.20561981 -113.18870544]
[96.20561981 -128.18870544]
[96.20561981 -143.18870544]
[96.20561981 -158.18870544]
[81.30381012 -160.07000732]
[66.75531006 -163.80422974]
[52.78957367 -169.33245850]
[39.62685394 -176.56752014]
[27.47474670 -185.39529419]
[16.52491188 -195.67655945]
[6.95004177 -207.24916077]
[-1.09885335 -219.93057251]
[-7.49483061 -233.52082825]
[-12.13701630 -247.80554199]
[-14.95219707 -262.55944824]
[-15.89597225 -277.54986572]
[-14.95345879 -292.54037476]
[-12.13951969 -307.29452515]
[-7.49853659 -321.57965088]
[-1.10370326 -335.17041016]
[6.94412422 -347.85250854]
[16.51802063 -359.42593384]
[27.46698952 -369.70809937]
[39.61835098 -378.53689575]
[52.78046417 -385.77307129]
[66.74574280 -391.30245972]
[81.29392242 -395.03790283]
[96.19557190 -396.92047119]
[111.21566772 -396.92047119]
[126.11731720 -395.03790283]
[140.66551208 -391.30245972]
[154.63078308 -385.77307129]
[167.79289246 -378.53689575]
[179.94425964 -369.70809937]
[190.89321899 -359.42593384]
[200.46711731 -347.85250854]
[208.51495361 -335.17041016]
[214.90977478 -321.57965088]
[219.55076599 -307.29452515]
[222.36470032 -292.54037476]
[223.30722046 -277.54986572]
[222.36343384 -262.55944824]
[219.54826355 -247.80554199]
[214.90608215 -233.52082825]
[208.51010132 -219.93057251]
[200.46119690 -207.24916077]
[190.88633728 -195.67655945]
[179.93649292 -185.39529419]
[167.78439331 -176.56752014]
[154.62167358 -169.33245850]
[140.65592957 -163.80422974]
[126.10742950 -160.07000732]
[111.20561981 -158.18870544]
[111.20561981 -143.18870544]
[111.20561981 -128.18870544]
[111.20561981 -113.18870544]
[111.20561981 -98.18870544]
[111.20561981 -83.18870544]
[111.20561981 -68.18870544]
[111.20561981 -53.18870163]
[118.94292450 -40.46142960]
[111.20561981 -26.66125870]
[111.20561981 -11.66125774]
[111.20561981 3.33874226]
[113.93599701 7.32880163]
[114.14450073 13.08968925]
[110.88058472 18.95947266]
[110.25660706 33.94649124]
[124.69547272 37.88399887]
[137.89640808 44.93525696]
[149.19767761 54.74679947]
[158.03277588 66.82678986]
[163.95878601 80.56968689]
[166.67869568 95.28659058]
[166.05612183 110.23976135]
[162.12229919 124.67964172]
[155.07440186 137.88237000]
[145.26574707 149.18614197]
[133.18800354 158.02430725]
[119.44661713 163.95384216]
[104.73041534 166.67749023]
[104.10643768 181.66450500]
[119.07990265 185.70085144]
[132.78091431 192.95091248]
[144.52998352 203.05166626]
[153.74520874 215.49874878]
[159.97106934 229.67175293]
[162.90097046 244.86502075]
[162.39231873 260.32290649]
[158.47346497 275.27725220]
[151.34217834 288.98562622]
[141.35557556 300.76815796]
[129.01235962 310.04125977]
[114.92781830 316.34652710]
[99.80319214 319.37341309]
[99.49113464 334.37017822]
[99.17907715 349.36691284]
[98.86701965 364.36367798]
[98.55496979 379.36044312]
[98.24291229 394.35717773]
[97.93085480 409.35394287]
[97.61879730 424.35067749]
[97.30673981 439.34744263]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[24 129]
[25 128]
[38 115]
[39 114]
[40 111]
[41 110]
[42 109]
[44 107]
[45 106]
[46 105]
[47 104]
[48 103]
[49 102]
[50 101]
[51 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
