%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCAAAUAAAGUAUAGGCGAUAGAAAUUGAAACCUGGCGCAAUAGAUAUAGUACCGCAAGxxxxxxxxxxACUCCUCAAUAGCCAUCGCUGUAGUAUAUCCAAAGACAACCAUCAUUCCCCCUAAAUAAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[90.39737701 269.81604004]
[90.08531952 254.81929016]
[89.77326202 239.82254028]
[89.46120453 224.82579041]
[89.14914703 209.82902527]
[88.83708954 194.83227539]
[88.52503967 179.83552551]
[88.21298218 164.83877563]
[87.90092468 149.84201050]
[73.99836731 144.21006775]
[63.33674240 154.76135254]
[52.67511368 165.31263733]
[58.09810257 179.54327393]
[57.25764084 194.74899292]
[50.29935074 208.29528809]
[38.42879486 217.83518982]
[23.70261574 221.71585083]
[8.67221642 219.26493835]
[-4.05829573 210.90705872]
[-12.28328323 198.09030151]
[-14.57771683 183.03521729]
[-10.54407215 168.35020447]
[-0.88120258 156.57952881]
[12.73674107 149.76252747]
[27.95036697 149.08029175]
[42.12382507 154.65101624]
[52.78544998 144.09973145]
[63.44707870 133.54843140]
[53.13223648 113.06741333]
[53.24282455 90.58283234]
[63.34936523 70.99897766]
[80.88601685 58.40388489]
[101.78862000 55.21747208]
[104.88694000 40.54094696]
[107.98526001 25.86442184]
[106.27282715 19.37018585]
[107.89825439 13.83942699]
[111.52983093 10.64768982]
[115.23599243 -3.88724613]
[118.94214630 -18.42218208]
[117.56271362 -22.69519424]
[117.64723206 -26.76507378]
[118.94331360 -30.18590164]
[121.07699585 -32.64382172]
[123.60811615 -33.98575592]
[128.50965881 -48.16231537]
[133.41120911 -62.33887100]
[120.39739990 -72.61475372]
[111.68106079 -86.69068909]
[108.29222870 -102.87020111]
[110.62007141 -119.21028137]
[118.36828613 -133.75466919]
[130.59271240 -144.76811218]
[145.81632996 -150.94335938]
[162.20771790 -151.55635071]
[166.51530457 -165.92453003]
[170.82289124 -180.29270935]
[175.13047791 -194.66090393]
[179.43806458 -209.02908325]
[183.74563599 -223.39726257]
[180.29727173 -238.83810425]
[191.36358643 -248.80734253]
[195.67117310 -263.17553711]
[199.97875977 -277.54370117]
[188.79711914 -267.54516602]
[175.70178223 -260.22994995]
[161.32498169 -255.95121765]
[146.36077881 -254.91554260]
[131.53161621 -257.17288208]
[117.55338287 -262.61431885]
[105.10092926 -270.97714233]
[94.77542877 -281.85757446]
[87.07535553 -294.73037720]
[82.37245941 -308.97406006]
[80.89377594 -323.90100098]
[82.71070099 -338.79055786]
[87.73550415 -352.92388916]
[95.72561646 -365.61868286]
[106.29528809 -376.26208496]
[118.93424988 -384.34027100]
[133.03231812 -389.46319580]
[147.90888977 -391.38357544]
[162.84574890 -390.00866699]
[177.12178040 -385.40490723]
[190.04779053 -377.79449463]
[200.99974060 -367.54486084]
[209.44889832 -355.15084839]
[214.98736572 -341.21078491]
[217.34774780 -326.39767456]
[216.41610718 -311.42663574]
[212.23820496 -297.02236938]
[223.32952881 -307.12103271]
[234.42083740 -317.21966553]
[238.88362122 -332.99990845]
[254.84533691 -336.76229858]
[265.88595581 -324.63641357]
[260.64782715 -309.09634399]
[244.51948547 -306.12835693]
[233.42817688 -296.02969360]
[222.33685303 -285.93106079]
[214.34693909 -273.23611450]
[210.03935242 -258.86795044]
[205.73178101 -244.49975586]
[209.48825073 -230.08663940]
[198.11383057 -219.08967590]
[193.80624390 -204.72149658]
[189.49865723 -190.35331726]
[185.19107056 -175.98512268]
[180.88348389 -161.61694336]
[176.57589722 -147.24876404]
[187.82669067 -139.72544861]
[196.50149536 -129.31463623]
[201.88479614 -116.86013794]
[203.52838135 -103.37491608]
[201.28858948 -89.95870209]
[195.33885193 -77.70835114]
[186.15631104 -67.62810516]
[174.48356628 -60.54732132]
[161.26858521 -57.05220795]
[147.58776855 -57.43732071]
[142.68621826 -43.26076508]
[137.78466797 -29.08420563]
[133.47708130 -14.71602058]
[129.77091980 -0.18108481]
[126.06476593 14.35385132]
[122.66178894 28.96274376]
[119.56346130 43.63927078]
[116.46514130 58.31579590]
[124.93027496 62.31229401]
[132.44558716 68.02116394]
[138.66624451 75.22025299]
[143.29872131 83.61831665]
[146.11457825 92.86679840]
[146.96145630 102.57420349]
[145.77114868 112.32270813]
[142.56373596 121.68614960]
[137.44821167 130.24861145]
[130.61897278 137.62290955]
[122.34859467 143.46810913]
[112.97703552 147.50511169]
[102.89767456 149.52996826]
[103.20973206 164.52671814]
[103.52178955 179.52346802]
[103.83384705 194.52021790]
[104.14590454 209.51698303]
[104.45796204 224.51373291]
[104.77001190 239.51048279]
[105.08206940 254.50723267]
[105.39412689 269.50399780]
[107.98512268 288.71170044]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 28]
[11 27]
[12 26]
[33 128]
[34 127]
[35 126]
[38 125]
[39 124]
[40 123]
[45 122]
[46 121]
[47 120]
[55 110]
[56 109]
[57 108]
[58 107]
[59 106]
[60 105]
[62 103]
[63 102]
[64 101]
[91 100]
[92 99]
[93 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
