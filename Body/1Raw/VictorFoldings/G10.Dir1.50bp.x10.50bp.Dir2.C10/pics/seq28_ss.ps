%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCCUAUUAACCACUCACGGGAGCUCUCCAUGCAUUUGGUAUUUUCGUCUGGGGGGUAUGxxxxxxxxxxUCGCUUCCCCACCCUUACUAACAUUAACGAAAAUAACCCCACCCUACUAAACCCCAUUAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 271.13009644]
[92.50000000 256.13009644]
[92.50000000 241.13009644]
[92.50000000 226.13009644]
[92.50000000 211.13009644]
[92.50000000 196.13009644]
[92.50000000 181.13009644]
[92.50000000 166.13009644]
[92.50000000 151.13009644]
[92.50000000 136.13009644]
[84.03897858 133.26979065]
[76.51301575 128.46041870]
[64.81339264 137.84757996]
[53.11376953 147.23474121]
[57.39891052 161.81918335]
[55.77166748 176.93276978]
[48.48018265 190.27078247]
[36.63636017 199.79928589]
[22.04629135 204.06523132]
[6.93485785 202.41810608]
[-6.39355659 195.10908508]
[-15.90646648 183.25274658]
[-20.15322113 168.65707397]
[-18.48622131 153.54782104]
[-11.15967274 140.22903442]
[0.70917940 130.73171997]
[15.31042099 126.50417328]
[30.41746902 128.19105530]
[43.72660828 135.53511047]
[55.42623138 126.14794922]
[67.12585449 116.76078796]
[65.12536621 112.05792236]
[63.79384613 107.12375641]
[48.79465866 106.96772003]
[38.75701141 118.95853424]
[23.35122681 121.64103699]
[9.85144711 113.74864197]
[4.63185406 99.00788879]
[10.15698051 84.37890625]
[23.81802940 76.76906586]
[39.16467285 79.77148438]
[48.95069504 91.96852875]
[63.94988251 92.12456512]
[81.32866669 68.17211151]
[110.71601868 64.68994141]
[117.89852905 51.52135849]
[124.10393524 37.86511612]
[129.29934692 23.79359818]
[134.49476624 9.72207832]
[139.24858093 -4.50470114]
[143.55616760 -18.87288475]
[147.86375427 -33.24106979]
[152.17134094 -47.60925293]
[156.47892761 -61.97743607]
[160.78651428 -76.34561920]
[165.09408569 -90.71380615]
[169.40167236 -105.08199310]
[173.70925903 -119.45017242]
[173.17903137 -128.63552856]
[178.25880432 -134.07075500]
[181.05111694 -148.80856323]
[181.98675537 -163.77934265]
[182.76660156 -178.75906372]
[183.39057922 -193.74607849]
[184.01455688 -208.73309326]
[184.63853455 -223.72010803]
[170.33004761 -228.56199646]
[157.96604919 -237.24003601]
[148.54885864 -249.05076599]
[142.84187317 -263.03671265]
[141.30772400 -278.06411743]
[144.07080078 -292.91479492]
[150.90708923 -306.38482666]
[161.26240540 -317.38226318]
[174.29731750 -325.01562500]
[188.95510864 -328.66607666]
[204.04754639 -328.03771973]
[218.35116577 -323.18145752]
[230.70642090 -314.49099731]
[240.11175537 -302.67083740]
[245.80468750 -288.67913818]
[247.32373047 -273.65020752]
[244.54574585 -258.80233765]
[237.69592285 -245.33917236]
[227.32955933 -234.35212708]
[214.28700256 -226.73185730]
[199.62554932 -223.09613037]
[199.00157166 -208.10911560]
[198.37759399 -193.12210083]
[197.75361633 -178.13508606]
[200.63639832 -171.27685547]
[196.95755005 -162.84371948]
[196.02191162 -147.87292480]
[205.50265503 -159.49685669]
[219.03648376 -165.96487427]
[234.03628540 -166.04057312]
[247.63471985 -159.70947266]
[257.23226929 -148.18182373]
[260.99432373 -133.66123962]
[258.20166016 -118.92350006]
[249.38818359 -106.78584290]
[236.23866272 -99.56851959]
[221.26673889 -98.65118408]
[207.33444214 -104.20919800]
[197.10510254 -115.18009186]
[192.53425598 -129.46517944]
[188.07743835 -115.14258575]
[183.76986694 -100.77440643]
[179.46228027 -86.40621948]
[175.15469360 -72.03804016]
[170.84710693 -57.66985321]
[166.53952026 -43.30167007]
[162.23193359 -28.93348503]
[157.92434692 -14.56530094]
[153.61676025 -0.19711642]
[155.00747681 3.10945535]
[154.82585144 7.26501751]
[152.68582153 11.50443363]
[148.56628418 14.91749382]
[143.37088013 28.98901367]
[138.17546082 43.06053162]
[151.96014404 37.14595032]
[166.37121582 41.30782318]
[174.88031006 53.66077423]
[173.63270569 68.60880280]
[163.19360352 79.38030243]
[148.29202271 81.09568024]
[135.67849731 72.97784424]
[131.06710815 58.70386505]
[123.88460541 71.87245178]
[129.06474304 77.26512909]
[133.05134583 83.59140778]
[135.68070984 90.59149933]
[136.84487915 97.97794342]
[136.49601746 105.44742584]
[134.64846802 112.69320679]
[131.37808228 119.41774750]
[126.81919098 125.34490967]
[121.15897369 130.23129272]
[114.62986755 133.87625122]
[107.50000000 136.13009644]
[107.50000000 151.13009644]
[107.50000000 166.13009644]
[107.50000000 181.13009644]
[107.50000000 196.13009644]
[107.50000000 211.13009644]
[107.50000000 226.13009644]
[107.50000000 241.13009644]
[107.50000000 256.13009644]
[107.50000000 271.13009644]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 31]
[13 30]
[14 29]
[33 43]
[34 42]
[45 130]
[46 129]
[47 121]
[48 120]
[49 119]
[50 115]
[51 114]
[52 113]
[53 112]
[54 111]
[55 110]
[56 109]
[57 108]
[58 107]
[60 106]
[61 93]
[62 92]
[63 90]
[64 89]
[65 88]
[66 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
