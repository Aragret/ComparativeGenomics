%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAUCAUAGCAGGCAGUUGAGGUGGAUUAAACCAAACCCAGCUACGCAAAAUCUUAGCAUAxxxxxxxxxxUCCGUCCCUAACAAACUAGGAGGCGUCCUUGCCCUAUUACUAUCCAUCCUCAUCCUAGCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[94.68508911 394.32064819]
[94.68508911 379.32064819]
[94.68508911 364.32064819]
[94.68508911 349.32064819]
[94.68508911 334.32064819]
[94.68508911 319.32064819]
[94.68508911 304.32064819]
[94.68508911 289.32064819]
[94.68508911 274.32064819]
[94.68508911 259.32064819]
[79.70902252 255.07315063]
[66.51704407 246.78176880]
[56.17603683 235.10740662]
[49.52498627 220.98498535]
[47.10696411 205.54850769]
[49.12476730 190.04000854]
[55.42395401 175.70967102]
[65.50460815 163.71498108]
[78.56103516 155.02726746]
[93.54613495 150.35307312]
[93.23407745 135.35632324]
[92.92201996 120.35956573]
[79.55630493 106.83116913]
[82.10430145 87.98527527]
[73.33809662 75.81343842]
[64.57188416 63.64160538]
[55.80567932 51.46976852]
[27.43715096 49.76881409]
[12.43822193 22.57513618]
[-2.46368098 20.86244774]
[-17.05704117 26.97345161]
[-28.81764030 17.83356094]
[-43.71954346 16.12087250]
[-58.62144470 14.40818214]
[-75.30220032 22.13685417]
[-89.00457764 11.21693039]
[-103.93888092 9.81462669]
[-117.16138458 18.90005493]
[-132.46617126 14.08930683]
[-138.11270142 -0.92722201]
[-129.76945496 -14.63013649]
[-113.83666229 -16.50773430]
[-102.53658295 -5.11968088]
[-87.60227203 -3.71737742]
[-78.05078125 -11.20579243]
[-65.55938721 -10.11767006]
[-56.90875626 -0.49372002]
[-42.00685120 1.21896970]
[-27.10494995 2.93165946]
[-13.57747269 -3.30184913]
[-0.75099123 5.96054459]
[14.15091133 7.67323446]
[23.89856339 -3.72778654]
[19.89082336 -18.18247414]
[15.88308239 -32.63716507]
[0.84486073 -31.82110405]
[-14.01713085 -34.25734329]
[-28.00777054 -39.83193588]
[-40.47269058 -48.28414536]
[-50.82888412 -59.21864700]
[-58.59197235 -72.12401581]
[-63.39886093 -86.39664459]
[-65.02472687 -101.36897278]
[-63.39352036 -116.34072113]
[-58.58153915 -130.61163330]
[-50.81384659 -143.51423645]
[-40.45375443 -154.44503784]
[-27.98582077 -162.89280701]
[-13.99319458 -168.46240234]
[0.86966592 -170.89334106]
[15.90759563 -170.07191467]
[30.41724396 -166.03654480]
[43.71996689 -158.97598267]
[55.19357681 -149.22045898]
[64.30142975 -137.22624207]
[70.61753082 -123.55433655]
[73.84646606 -108.84420013]
[73.83721161 -93.78385925]
[70.59020996 -79.07770538]
[64.25731659 -65.41356659]
[55.13474274 -53.43055344]
[43.64915848 -43.68912125]
[30.33777046 -36.64490509]
[34.34551239 -22.19021606]
[38.35325241 -7.73552656]
[47.52947235 -7.97414398]
[56.25952148 -5.73995209]
[63.90254593 -1.29119110]
[69.92340851 4.95502520]
[73.92990875 12.46030426]
[75.69774628 20.61064148]
[75.18153381 28.76633644]
[72.51165771 36.31211853]
[67.97751617 42.70355988]
[76.74372101 54.87539673]
[85.50993347 67.04723358]
[94.27613831 79.21907043]
[109.32341003 80.56591797]
[119.79065704 91.45954132]
[134.77037048 90.67969513]
[149.75009155 89.89984894]
[164.59129333 87.72301483]
[179.16400146 84.16825104]
[193.73669434 80.61348724]
[208.30940247 77.05872345]
[219.78340149 65.34210205]
[235.59783936 69.68209076]
[239.48417664 85.61408234]
[227.44448853 96.74861145]
[211.86416626 91.63143158]
[197.29145813 95.18619537]
[182.71875000 98.74095154]
[168.14605713 102.29571533]
[181.51939392 109.08938599]
[189.22441101 121.95922089]
[188.89654541 136.95564270]
[180.63639832 149.47642517]
[166.97892761 155.67910767]
[152.11541748 153.66017151]
[140.60729980 144.03919983]
[135.98626709 129.76873779]
[139.67044067 115.22821808]
[150.52993774 104.87956238]
[135.55021667 105.65940857]
[120.57050323 106.43925476]
[117.78447723 112.17875671]
[113.44036865 116.85128784]
[107.91877747 120.04750824]
[108.23083496 135.04426575]
[108.54289246 150.04101562]
[122.58037567 153.62019348]
[135.19648743 160.71546936]
[145.52894592 170.83465576]
[152.87341309 183.27912903]
[156.73155212 197.19207764]
[156.84478760 211.61743164]
[153.21166992 225.56568909]
[146.08752441 238.08166504]
[135.96650696 248.30996704]
[123.54734039 255.55342102]
[109.68508911 259.32064819]
[109.68508911 274.32064819]
[109.68508911 289.32064819]
[109.68508911 304.32064819]
[109.68508911 319.32064819]
[109.68508911 334.32064819]
[109.68508911 349.32064819]
[109.68508911 364.32064819]
[109.68508911 379.32064819]
[109.68508911 394.32064819]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[20 130]
[21 129]
[22 128]
[24 97]
[25 96]
[26 95]
[27 94]
[29 52]
[30 51]
[32 49]
[33 48]
[34 47]
[36 44]
[37 43]
[53 85]
[54 84]
[55 83]
[99 125]
[100 124]
[101 123]
[102 113]
[103 112]
[104 111]
[105 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
