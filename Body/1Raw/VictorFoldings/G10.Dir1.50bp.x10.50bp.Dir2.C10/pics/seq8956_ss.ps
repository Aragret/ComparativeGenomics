%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAAGCACAUACCAAGGCCACCACACACCACCUGUCCAAAAAGGCCUUCGAUACGGGAUAAxxxxxxxxxxCUAGGCGGCUAUGGUAUAAUACGCCUCACACUCAUUCUCAACCCCCUGACAAAACACAUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[93.66956329 394.98336792]
[93.66956329 379.98336792]
[93.66956329 364.98336792]
[93.66956329 349.98336792]
[93.66956329 334.98336792]
[93.66956329 319.98336792]
[93.66956329 304.98336792]
[93.66956329 289.98336792]
[93.66956329 274.98336792]
[93.66956329 259.98336792]
[78.62908936 256.38635254]
[64.87176514 249.30397034]
[53.19254684 239.14082336]
[44.26742172 226.47964478]
[38.61427689 212.04791260]
[36.56286240 196.67601013]
[38.23554611 181.24955750]
[43.54003525 166.65824890]
[52.17444611 153.74464417]
[63.64449692 143.25544739]
[77.29177856 135.79841614]
[92.33158875 131.80703735]
[92.01953125 116.81027985]
[81.80605316 105.82461548]
[66.87174225 104.42230988]
[51.93743515 103.02000427]
[37.00312805 101.61769867]
[22.06881905 100.21540070]
[13.52630711 115.04757690]
[-0.57632691 124.64973450]
[-17.39832306 127.14568329]
[-33.57630539 122.08486938]
[-45.89674759 110.52279663]
[-51.93428040 94.80132294]
[-66.91399384 94.02147675]
[-81.89370728 93.24163818]
[-94.72682953 102.86923218]
[-110.21847534 98.69931030]
[-116.48479462 83.93066406]
[-108.71879578 69.89253998]
[-92.87789154 67.35379028]
[-81.11386871 78.26191711]
[-66.13414764 79.04176331]
[-51.15443802 79.82160950]
[-45.83261108 67.89648438]
[-36.73839951 58.48033524]
[-24.94796181 52.71891022]
[-11.86730194 51.32358932]
[0.93537992 54.48365402]
[11.91770267 61.84092331]
[19.74891281 72.53022766]
[23.47112274 85.28108978]
[38.40542984 86.68339539]
[53.33973694 88.08570099]
[68.27404785 89.48799896]
[83.20835114 90.89030457]
[69.91905975 83.93367767]
[63.66879654 70.29790497]
[67.07319641 55.68934631]
[78.70757294 46.22143936]
[93.70313263 45.85634995]
[105.78446960 54.74686432]
[109.89574432 69.17244720]
[104.31563568 83.09718323]
[114.75544739 72.32637024]
[125.19525909 61.55556488]
[129.24420166 46.26123428]
[143.65802002 42.50743103]
[135.39648438 30.42007637]
[129.66679382 16.95226669]
[126.68950653 2.62742043]
[126.57825470 -11.99815083]
[129.33538818 -26.35684776]
[134.85202026 -39.89181137]
[142.91223145 -52.07851791]
[153.20159912 -62.44510651]
[165.31942749 -70.59064484]
[178.79437256 -76.20066071]
[193.10273743 -79.05922699]
[207.68887329 -79.05732727]
[221.98674011 -76.19699860]
[235.44181824 -70.59115601]
[247.53273010 -62.45914841]
[258.19436646 -73.01043701]
[268.85598755 -83.56172943]
[279.51760864 -94.11302185]
[290.17922974 -104.66430664]
[284.40283203 -118.72494507]
[284.45190430 -133.92579651]
[290.31896973 -147.94885254]
[301.10934448 -158.65568542]
[315.17758179 -164.41358948]
[330.37835693 -164.34452820]
[344.39367676 -158.45903015]
[355.08630371 -147.65458679]
[360.82568359 -133.57879639]
[360.73663330 -118.37811279]
[354.83270264 -104.37054443]
[344.01419067 -93.69213867]
[329.93087769 -87.97126770]
[314.73031616 -88.08032227]
[300.73052979 -94.00268555]
[290.06890869 -83.45139313]
[279.40728760 -72.90010071]
[268.74566650 -62.34881210]
[258.08401489 -51.79751968]
[266.46826172 -38.89207077]
[272.00247192 -24.52572441]
[274.44494629 -9.31955719]
[273.68762207 6.06853151]
[269.76095581 20.97228432]
[262.83267212 34.74593353]
[253.20063782 46.79216766]
[241.27995300 56.58806610]
[227.58520508 63.70775604]
[212.70814514 67.84096527]
[197.29217529 68.80651093]
[182.00450134 66.56027985]
[167.50726318 61.19720078]
[154.42883301 52.94724274]
[151.12661743 67.47117615]
[135.96606445 71.99537659]
[125.52625275 82.76618195]
[115.08644104 93.53699493]
[116.79662323 102.02079010]
[113.93092346 110.46369934]
[107.01628113 116.49822235]
[107.32833862 131.49497986]
[121.58287048 134.53485107]
[134.79081726 140.68002319]
[146.28562927 149.61662292]
[155.48803711 160.89004517]
[161.93524170 173.92802429]
[165.30419922 188.06967163]
[165.42779541 202.59902954]
[162.30314636 216.78125000]
[156.09156799 229.89979553]
[147.11024475 241.29266357]
[135.81604004 250.38574219]
[122.78227234 256.72177124]
[108.66956329 259.98336792]
[108.66956329 274.98336792]
[108.66956329 289.98336792]
[108.66956329 304.98336792]
[108.66956329 319.98336792]
[108.66956329 334.98336792]
[108.66956329 349.98336792]
[108.66956329 364.98336792]
[108.66956329 379.98336792]
[108.66956329 394.98336792]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[22 128]
[23 127]
[24 56]
[25 55]
[26 54]
[27 53]
[28 52]
[34 44]
[35 43]
[36 42]
[64 124]
[65 123]
[66 122]
[68 120]
[83 106]
[84 105]
[85 104]
[86 103]
[87 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
