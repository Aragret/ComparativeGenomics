%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCCCACUACUAGGCCUCCUCCUAGCAGCAGCAGGCAAAUCAGCCCAAUUAGGUCUCCACxxxxxxxxxxCCAAUGAUAUGAAAAACCAUCGUUGUAUUUCAACUACAAGAACACCAAUGACCCCAAUACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 292.35992432]
[92.50000000 277.35992432]
[92.50000000 262.35992432]
[92.50000000 247.35992432]
[92.50000000 232.35992432]
[92.50000000 217.35992432]
[92.50000000 202.35992432]
[92.50000000 187.35992432]
[92.50000000 172.35992432]
[92.50000000 157.35992432]
[85.33316803 155.95796204]
[78.40007019 153.66426086]
[71.81119537 150.51536560]
[65.67153931 146.56143188]
[60.07894516 141.86549377]
[55.12254333 136.50238037]
[50.88131332 130.55755615]
[37.22507095 136.76296997]
[27.86204529 149.51617432]
[13.07405949 147.73721313]
[-0.58218205 153.94261169]
[-14.23842335 160.14802551]
[-27.89466476 166.35342407]
[-41.55090714 172.55883789]
[-46.86657333 187.44236755]
[-61.18512344 194.13224792]
[-76.01161194 188.65953064]
[-82.54975128 174.27104187]
[-76.92057037 159.50325012]
[-62.46377182 153.11759949]
[-47.75631332 158.90260315]
[-34.10007095 152.69718933]
[-20.44383049 146.49177551]
[-6.78758907 140.28637695]
[6.86865187 134.08096313]
[15.25489140 121.77161407]
[31.01966286 123.10672760]
[44.67590332 116.90132141]
[43.16312027 110.76937103]
[42.32783508 104.50904846]
[42.18000412 98.19497681]
[42.72138977 91.90242004]
[43.94553757 85.70639038]
[45.83785629 79.68073273]
[32.59527206 72.63559723]
[19.35268593 65.59046936]
[4.31302500 70.44681549]
[-9.71731758 63.17185593]
[-14.41438866 48.08169174]
[-6.99149847 34.12904739]
[8.14748287 29.59178352]
[22.02086639 37.16177368]
[26.39782143 52.34788132]
[39.64040756 59.39301682]
[52.88299179 66.43814850]
[75.97699738 47.37580872]
[105.50822449 42.41467667]
[133.56346130 52.88414001]
[143.77693176 41.89847183]
[153.99041748 30.91280937]
[157.57377625 22.43865013]
[164.53248596 19.80765152]
[174.97229004 9.03684235]
[185.41210938 -1.73396587]
[189.45068359 -19.66911888]
[206.45918274 -23.87757683]
[216.67265320 -34.86324310]
[207.87950134 -47.07276154]
[201.63941956 -60.75883865]
[198.19050598 -75.39469147]
[197.66351318 -90.41737366]
[200.07681274 -105.24944305]
[205.33581543 -119.32115936]
[213.23663330 -132.09234619]
[223.47401428 -143.07313538]
[235.65313721 -151.84278870]
[249.30480957 -158.06576538]
[263.90359497 -161.50459290]
[278.88793945 -162.02893066]
[293.68188477 -159.62051392]
[307.71719360 -154.37374878]
[320.45501709 -146.49201965]
[330.66851807 -157.47769165]
[340.88198853 -168.46334839]
[351.09545898 -179.44902039]
[361.30895996 -190.43467712]
[371.52243042 -201.42034912]
[381.73590088 -212.40600586]
[377.14669800 -227.06324768]
[380.51660156 -242.04788208]
[390.93914795 -253.32911682]
[405.61071777 -257.87237549]
[420.58471680 -254.45549011]
[431.83322144 -243.99765015]
[436.33044434 -229.31192017]
[432.86666870 -214.34870911]
[422.37359619 -203.13304138]
[407.67385864 -198.68185425]
[392.72155762 -202.19253540]
[382.50808716 -191.20686340]
[372.29461670 -180.22120667]
[362.08111572 -169.23553467]
[351.86764526 -158.24987793]
[341.65417480 -147.26420593]
[331.44070435 -136.27854919]
[340.22824097 -124.14788055]
[346.48223877 -110.53151703]
[349.96060181 -95.95198059]
[350.52783203 -80.96919250]
[348.16021729 -66.15892029]
[342.94696045 -52.09067154]
[335.08663940 -39.30579758]
[324.87973022 -28.29664803]
[312.71722412 -19.48761368]
[299.06539917 -13.21877956]
[284.44821167 -9.73278046]
[269.42700195 -9.16541767]
[254.57902527 -11.54036999]
[240.47521973 -16.76820755]
[227.65832520 -24.64976120]
[217.44483948 -13.66409683]
[217.56069946 -1.52762711]
[209.08514404 7.71271229]
[196.18290710 8.70584679]
[185.74310303 19.47665596]
[175.30328369 30.24746323]
[164.97608948 41.12628937]
[154.76260376 52.11195374]
[144.54911804 63.09761810]
[150.37110901 71.55422974]
[154.60643005 80.90686798]
[157.12168884 90.86092377]
[157.83764648 101.10285187]
[156.73176575 111.31004333]
[153.83886719 121.16098022]
[149.25007629 130.34535217]
[143.10993958 138.57386780]
[135.61186218 145.58734131]
[126.99204254 151.16482544]
[117.52198792 155.13066101]
[107.50000000 157.35992432]
[107.50000000 172.35992432]
[107.50000000 187.35992432]
[107.50000000 202.35992432]
[107.50000000 217.35992432]
[107.50000000 232.35992432]
[107.50000000 247.35992432]
[107.50000000 262.35992432]
[107.50000000 277.35992432]
[107.50000000 292.35992432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[17 38]
[18 37]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[44 55]
[45 54]
[46 53]
[58 129]
[59 128]
[60 127]
[62 126]
[63 125]
[64 124]
[66 121]
[67 120]
[82 105]
[83 104]
[84 103]
[85 102]
[86 101]
[87 100]
[88 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
