%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCGUACUACACGACACGUACUACGUUGUAGCCCACUUCCACUAUGUCCUAUCAAUAGGAGCxxxxxxxxxxGGAGGACAACCAGUAAGCUACCCUUUUACCAUCAUUGGACAAGUAGCAUCCGUACUAUACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 254.91821289]
[92.50000000 239.91821289]
[92.50000000 224.91821289]
[92.50000000 209.91821289]
[92.50000000 194.91821289]
[92.50000000 179.91821289]
[92.50000000 164.91821289]
[92.50000000 149.91821289]
[92.50000000 134.91821289]
[92.50000000 119.91821289]
[78.59744263 114.28626251]
[68.15763092 125.05706787]
[57.71781921 135.82788086]
[62.00110626 150.57742310]
[58.32018661 165.48870850]
[47.66521072 176.55067444]
[32.90231323 180.78770447]
[18.00263977 177.06005859]
[6.97412777 166.37046814]
[2.78339052 151.59436035]
[6.55771589 136.70643616]
[17.28182983 125.71149445]
[32.07099915 121.56709290]
[46.94701004 125.38806152]
[57.38682175 114.61725616]
[67.82663727 103.84645081]
[69.07350922 88.89836121]
[60.56241989 76.54679108]
[52.05133057 64.19521332]
[43.54024124 51.84364319]
[30.98084831 48.72666168]
[24.15330696 38.20983505]
[26.27827072 26.26028061]
[18.02598190 13.73431778]
[9.77369213 1.20835614]
[1.52140319 -11.31760597]
[-6.73088598 -23.84356689]
[-12.55138302 -27.19458580]
[-15.33915520 -32.24034119]
[-15.05324268 -37.06669998]
[-22.77732849 -49.92510223]
[-37.72937012 -44.67838669]
[-53.43592072 -42.62332153]
[-69.22364807 -43.84574890]
[-84.41619110 -48.29105377]
[-98.36316681 -55.76659393]
[-110.46798706 -65.95005035]
[-120.21338654 -78.40335083]
[-127.18352509 -92.59145355]
[-131.08174133 -107.90540314]
[-131.74316406 -123.68841553]
[-129.14167786 -139.26408386]
[-123.39098358 -153.96531677]
[-114.73959351 -167.16299438]
[-103.56010437 -178.29280090]
[-111.81239319 -190.81875610]
[-120.06468201 -203.34471130]
[-128.31697083 -215.87068176]
[-136.56925964 -228.39663696]
[-151.46421814 -235.25755310]
[-152.70033264 -251.61004639]
[-139.00599670 -260.63208008]
[-124.46876526 -253.04255676]
[-124.04329681 -236.64892578]
[-115.79100800 -224.12297058]
[-107.53871918 -211.59700012]
[-99.28643036 -199.07104492]
[-91.03414154 -186.54508972]
[-77.90941620 -191.97444153]
[-64.00091553 -194.87475586]
[-49.79148865 -195.14372253]
[-35.77473831 -192.77040100]
[-22.43785667 -187.83566284]
[-10.24471760 -180.50944519]
[0.38027558 -171.04489136]
[9.06695843 -159.76962280]
[15.51229763 -147.07435608]
[19.49096680 -133.39938354]
[20.86321831 -119.21934509]
[19.57979774 -105.02667236]
[15.68370628 -91.31457520]
[9.30875778 -78.55982971]
[0.67499232 -67.20623779]
[-9.91892529 -57.64918900]
[-2.19484019 -44.79078674]
[5.79507589 -32.09585571]
[14.04736519 -19.56989479]
[22.29965401 -7.04393291]
[30.55194283 5.48202896]
[38.80423355 18.00799179]
[54.88044357 24.97616386]
[55.89181137 43.33255386]
[64.40290070 55.68412399]
[72.91399384 68.03569794]
[81.42507935 80.38726807]
[104.38449860 74.38798523]
[122.21096039 88.62026215]
[137.19067383 87.84041595]
[152.17039490 87.06057739]
[167.15010071 86.28073120]
[182.12982178 85.50088501]
[186.61274719 82.58147430]
[191.29655457 81.79770660]
[195.31842041 82.85900116]
[198.06245422 85.16934967]
[213.06164551 85.32538605]
[224.30749512 74.54724121]
[239.51658630 74.91915131]
[249.72259521 85.70677185]
[264.72180176 85.86280823]
[279.72097778 86.01884460]
[293.73416138 77.50045776]
[307.98596191 85.61327362]
[307.81536865 102.01153564]
[293.39785767 109.82611084]
[279.56494141 101.01803589]
[264.56576538 100.86199951]
[249.56655884 100.70596313]
[239.13833618 111.27893066]
[223.92480469 111.33435059]
[212.90560913 100.32457733]
[197.90641785 100.16854095]
[182.90966797 100.48059845]
[167.92994690 101.26044464]
[152.95024109 102.04029083]
[137.97052002 102.82012939]
[122.99080658 103.59997559]
[136.51062012 110.09725952]
[150.03044128 116.59453583]
[164.87162781 118.77146149]
[176.98229980 127.62197113]
[183.56393433 141.10092163]
[183.09567261 156.09361267]
[175.68571472 169.13555908]
[163.04632568 177.21305847]
[148.09820557 178.45957947]
[134.29554749 172.58706665]
[124.82781982 160.95254517]
[121.88276672 146.24569702]
[114.69138336 133.08195496]
[107.50000000 119.91821289]
[107.50000000 134.91821289]
[107.50000000 149.91821289]
[107.50000000 164.91821289]
[107.50000000 179.91821289]
[107.50000000 194.91821289]
[107.50000000 209.91821289]
[107.50000000 224.91821289]
[107.50000000 239.91821289]
[107.50000000 254.91821289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 26]
[12 25]
[13 24]
[27 95]
[28 94]
[29 93]
[30 92]
[33 90]
[34 89]
[35 88]
[36 87]
[37 86]
[40 85]
[41 84]
[55 68]
[56 67]
[57 66]
[58 65]
[59 64]
[97 127]
[98 126]
[99 125]
[100 124]
[101 123]
[105 122]
[106 121]
[109 118]
[110 117]
[111 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
