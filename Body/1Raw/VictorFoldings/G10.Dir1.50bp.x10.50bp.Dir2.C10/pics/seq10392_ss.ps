%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUUACCCCCCACUAUUAACCUACUGGGAGAACUCUCUGUGCUAGUAACCACGUUCUCCUxxxxxxxxxxAUCCUACCUCCAUCGCUAACCCCACUAAAACACUCACCAAGACCUCAACCCCUGACCCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[16.15120888 298.80398560]
[5.63628864 294.03384399]
[-4.60839844 288.70803833]
[-5.08202362 304.52215576]
[-18.26841354 311.44805908]
[-25.99249840 324.30645752]
[-33.71658325 337.16488647]
[-41.44067001 350.02328491]
[-49.16475296 362.88168335]
[-56.88883972 375.74008179]
[-54.41661835 391.59152222]
[-65.37404633 403.30963135]
[-81.35551453 401.90530396]
[-90.10141754 388.45581055]
[-84.90264130 373.27844238]
[-69.74723816 368.01599121]
[-62.02315521 355.15759277]
[-54.29907227 342.29919434]
[-46.57498550 329.44079590]
[-38.85090256 316.58239746]
[-31.12681580 303.72399902]
[-31.20566940 288.82958984]
[-17.46680069 280.98394775]
[-37.27858353 266.45788574]
[-55.31071091 249.77391052]
[-71.32941437 231.14826965]
[-85.12703705 210.82246399]
[-96.52471161 189.05996704]
[-105.37466431 166.14291382]
[-111.56218719 142.36839294]
[-115.00704956 118.04461670]
[-115.66459656 93.48691559]
[-113.52630615 69.01364899]
[-108.61990356 44.94208527]
[-101.00898743 21.58428192]
[-90.79222870 -0.75695527]
[-78.10207367 -21.79199791]
[-90.18206024 -30.68434715]
[-102.26204681 -39.57669830]
[-114.34204102 -48.46904755]
[-126.42202759 -57.36139679]
[-138.50201416 -66.25374603]
[-150.58200073 -75.14609528]
[-151.31568909 -60.16404724]
[-163.36071777 -51.22439575]
[-177.91313171 -54.86129379]
[-184.33630371 -68.41647339]
[-177.93542480 -81.98218536]
[-163.38964844 -85.64312744]
[-174.48095703 -95.74177551]
[-185.57228088 -105.84042358]
[-200.74009705 -102.56674194]
[-214.92170715 -108.86448669]
[-222.66398621 -122.31203461]
[-220.98988342 -137.73854065]
[-210.54312134 -149.21218872]
[-195.34068298 -152.32113647]
[-181.22822571 -145.86991882]
[-173.63227844 -132.33917236]
[-175.47361755 -116.93173981]
[-164.38230896 -106.83309174]
[-153.29100037 -96.73444366]
[-141.68965149 -87.22608185]
[-129.60966492 -78.33373260]
[-117.52967834 -69.44138336]
[-105.44968414 -60.54903412]
[-93.36969757 -51.65668488]
[-81.28971100 -42.76433563]
[-69.20972443 -33.87198639]
[-61.80598068 -42.73213959]
[-53.93886566 -51.18354797]
[-45.63090897 -59.20200348]
[-36.90590286 -66.76454163]
[-27.78883171 -73.84951019]
[-18.30580711 -80.43662262]
[-8.48398590 -86.50700378]
[1.64850724 -92.04328156]
[12.06265354 -97.02959442]
[22.72863007 -101.45166779]
[33.61589050 -105.29682922]
[44.69326019 -108.55407715]
[55.92901611 -111.21408081]
[67.29097748 -113.26921844]
[78.74660492 -114.71360779]
[90.26310730 -115.54310608]
[101.80748749 -115.75534821]
[113.34668732 -115.34972382]
[124.84767151 -114.32739258]
[136.27749634 -112.69128418]
[147.60343933 -110.44607544]
[158.79304504 -107.59821320]
[169.81428528 -104.15583038]
[180.63560486 -100.12880707]
[191.22599792 -95.52866364]
[201.55514526 -90.36856842]
[211.59346008 -84.66331482]
[221.31219482 -78.42922974]
[230.68353271 -71.68416595]
[239.68061829 -64.44744873]
[248.27769470 -56.73979187]
[256.45016479 -48.58327103]
[264.17456055 -40.00124741]
[271.42883301 -31.01829529]
[278.19216919 -21.66014099]
[284.44522095 -11.95358181]
[290.17004395 -1.92641652]
[295.35028076 8.39264011]
[299.97106934 18.97403717]
[304.01922607 29.78746986]
[307.48309326 40.80197525]
[310.35278320 51.98600769]
[312.62008667 63.30754089]
[314.27850342 74.73415375]
[315.32327271 86.23311615]
[315.75140381 97.77150726]
[315.56170654 109.31628418]
[314.75466919 120.83437347]
[313.33264160 132.29280090]
[311.29968262 143.65875244]
[308.66159058 154.89967346]
[305.42596436 165.98338318]
[301.60205078 176.87812805]
[297.20080566 187.55270386]
[292.23483276 197.97656250]
[286.71835327 208.11984253]
[280.66714478 217.95349121]
[274.09854126 227.44935608]
[267.03137207 236.58023071]
[259.48587036 245.31997681]
[251.48364258 253.64356995]
[243.04760742 261.52716064]
[234.20191956 268.94818115]
[224.97190857 275.88537598]
[215.38400269 282.31887817]
[205.46568298 288.23025513]
[195.24531555 293.60260010]
[184.75221252 298.42053223]
[174.01638794 302.67019653]
[163.06860352 306.33950806]
[151.94020081 309.41790771]
[140.66305542 311.89657593]
[129.26947021 313.76843262]
[117.79205322 315.02810669]
[106.26368713 315.67199707]
[94.71738434 315.69824219]
[83.18621063 315.10681152]
[71.70319366 313.89935303]
[60.30120087 312.07934570]
[49.01290131 309.65197754]
[37.87061310 306.62423706]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 23]
[5 21]
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[37 69]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[49 62]
[50 61]
[51 60]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
