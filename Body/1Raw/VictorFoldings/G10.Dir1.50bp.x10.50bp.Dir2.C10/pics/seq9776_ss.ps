%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACACAACCACCCACAGCCUAAUUAUUAGCAUCAUCCCUCUACUAUUUUUUAACCAAAUCxxxxxxxxxxACCCCCAUGCCUCAGGAUACUCCUCAAUAGCCAUCGCUGUAGUAUAUCCAAAGACAACCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[141.18888855 606.31823730]
[141.18888855 591.31823730]
[141.18888855 576.31823730]
[141.18888855 561.31823730]
[141.18888855 546.31823730]
[141.18888855 531.31823730]
[141.18888855 516.31823730]
[141.18888855 501.31826782]
[141.18888855 486.31826782]
[141.18888855 471.31826782]
[123.08505249 466.77011108]
[106.89099884 457.46365356]
[93.83088684 444.09524536]
[84.89387512 427.66860962]
[80.75926971 409.41940308]
[81.74483490 390.72232056]
[87.78240967 372.98745728]
[98.42257690 357.55410767]
[112.86811829 345.58947754]
[130.03373718 338.00042725]
[127.54861450 323.20773315]
[117.85590363 315.90301514]
[115.69535065 303.55187988]
[122.77121735 292.71740723]
[120.59438324 277.87619019]
[118.41754913 263.03497314]
[116.24070740 248.19377136]
[114.06387329 233.35256958]
[98.75043488 228.89173889]
[86.86180115 218.17185974]
[80.80188751 203.29251099]
[81.82560730 187.20095825]
[89.77928162 173.10838318]
[103.12130737 163.84909058]
[100.63618469 149.05638123]
[98.15106964 134.26367188]
[95.66594696 119.47096252]
[74.16845703 105.81440735]
[79.71472931 73.96064758]
[73.08622742 60.50468445]
[66.45772552 47.04872131]
[59.82923126 33.59275436]
[45.57394791 38.33624268]
[30.80552101 41.09438324]
[15.79907799 41.81579590]
[0.83418030 40.48704529]
[-13.81038666 37.13287735]
[-27.86180305 31.81578636]
[-41.05829620 24.63482094]
[-53.15402985 15.72376156]
[-63.92366409 5.24861288]
[-73.16657257 -6.59547806]
[-80.71055603 -19.58786392]
[-86.41507721 -33.48650360]
[-90.17386627 -48.03247070]
[-91.91690063 -62.95479202]
[-91.61170959 -77.97546387]
[-89.26397705 -92.81466675]
[-84.91744232 -107.19595337]
[-78.65306854 -120.85140228]
[-70.58757019 -133.52662659]
[-60.87119293 -144.98550415]
[-49.68495178 -155.01455688]
[-37.23723984 -163.42694092]
[-23.75994682 -170.06594849]
[-9.50415134 -174.80789185]
[5.26457357 -177.56442261]
[20.27109337 -178.28422546]
[35.23584747 -176.95384216]
[49.88005066 -173.59809875]
[63.93089294 -168.27947998]
[77.12660980 -161.09709167]
[89.22138214 -152.18472290]
[99.98987579 -141.70840454]
[109.23149872 -129.86331177]
[116.77407837 -116.87010956]
[122.47709656 -102.97085571]
[126.23431396 -88.42447662]
[127.97573853 -73.50197601]
[127.66891479 -58.48133469]
[125.31958008 -43.64238739]
[120.97148132 -29.26157188]
[114.70563507 -15.60679531]
[106.63876343 -2.93243885]
[96.92114258 8.52538395]
[85.73381805 18.55321884]
[73.28519440 26.96425629]
[79.91369629 40.42022324]
[86.54219055 53.87618637]
[93.17069244 67.33215332]
[100.41848755 69.26073456]
[111.00666809 58.63573456]
[114.91408539 73.11788940]
[122.16188812 75.04647064]
[134.60131836 66.66432953]
[147.04077148 58.28218460]
[159.48020935 49.90004349]
[169.23678589 36.03477859]
[185.26107788 41.57177734]
[184.37643433 58.50262833]
[167.86235046 62.33948135]
[155.42291260 70.72162628]
[142.98347473 79.10376740]
[130.54402161 87.48590851]
[125.17484283 108.20385742]
[110.45865631 116.98584747]
[112.94377136 131.77854919]
[115.42889404 146.57125854]
[117.91400909 161.36396790]
[131.65982056 164.79376221]
[143.01855469 173.18795776]
[150.28750610 185.24703979]
[152.39285278 199.12532043]
[149.04812622 212.71336365]
[140.79269409 223.95870972]
[128.90507507 231.17573547]
[131.08190918 246.01693726]
[133.25875854 260.85815430]
[135.43559265 275.69934082]
[137.61242676 290.54055786]
[149.37055969 304.67300415]
[142.34132385 320.72259521]
[144.82644653 335.51531982]
[156.53187561 335.88055420]
[167.99934387 338.23760986]
[178.89254761 342.51605225]
[188.89224243 348.58901978]
[197.70562744 356.27713013]
[205.07492065 365.35372925]
[210.78486633 375.55157471]
[214.66905212 386.57067871]
[216.61471558 398.08718872]
[216.56608582 409.76287842]
[214.52593994 421.25506592]
[210.55546570 432.22668457]
[204.77246094 442.35614014]
[197.34782410 451.34680176]
[188.50050354 458.93569946]
[178.49105835 464.90103149]
[167.61393738 469.06890869]
[156.18888855 471.31826782]
[156.18888855 486.31826782]
[156.18888855 501.31826782]
[156.18888855 516.31823730]
[156.18888855 531.31823730]
[156.18888855 546.31823730]
[156.18888855 561.31823730]
[156.18888855 576.31823730]
[156.18888855 591.31823730]
[156.18888855 606.31823730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[20 123]
[21 122]
[24 120]
[25 119]
[26 118]
[27 117]
[28 116]
[34 109]
[35 108]
[36 107]
[37 106]
[39 90]
[40 89]
[41 88]
[42 87]
[94 104]
[95 103]
[96 102]
[97 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
