%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUCAUCCAAACCCCCUGAAGCUUCACCGGCGCAGUCAUUCUCAUAAUCGCCCACGGGCUUACAxxxxxxxxxxCAACCCAAAAAGGCAUAAUUAAACUUUACUUCCUCUCUUUCUUCUUCCCACUCAUCCUAACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[101.34587860 128.15617371]
[101.94982147 113.16834259]
[94.23426056 126.03186035]
[86.51869965 138.89538574]
[78.80313110 151.75889587]
[71.08757019 164.62242126]
[75.65103912 181.48236084]
[66.80708313 196.15231323]
[50.42441559 199.83988953]
[42.96778107 212.85520935]
[45.76713943 228.65214539]
[35.05428314 240.59426880]
[19.04719734 239.52059937]
[10.02514935 226.25477600]
[14.90908146 210.97319031]
[29.95245934 205.39857483]
[37.40909576 192.38325500]
[32.32035828 180.51011658]
[35.05711746 167.68626404]
[44.83590317 158.66036987]
[58.22405243 156.90684509]
[65.93961334 144.04333496]
[73.65518188 131.17980957]
[81.37074280 118.31629944]
[89.08630371 105.45278168]
[85.83663177 104.90708160]
[82.58891296 103.59635162]
[79.48816681 101.51778412]
[65.61565399 95.81221771]
[51.74314880 90.10664368]
[37.87063980 84.40107727]
[33.46607208 85.16331482]
[29.46442223 84.51576996]
[26.26739120 82.76695251]
[24.13128853 80.32587433]
[23.14660645 77.64443207]
[9.77470207 70.84795380]
[-3.59720230 64.05146790]
[-17.16705132 57.65935135]
[-30.92261887 51.67734909]
[-44.67818832 45.69535065]
[-42.01102829 60.45632172]
[-51.73334503 71.87895203]
[-66.73083496 71.60475159]
[-76.02910614 59.83435822]
[-72.82415771 45.18074799]
[-59.46146774 38.36669540]
[-72.55073547 31.04065132]
[-85.64001465 23.71460533]
[-101.40814972 26.67187119]
[-113.45685577 16.07903099]
[-112.54338837 0.06200464]
[-99.36849213 -9.09231567]
[-84.03881073 -4.36151838]
[-78.31396484 10.62533283]
[-65.22469330 17.95137787]
[-52.13542175 25.27742386]
[-38.69618607 31.93978119]
[-24.94061852 37.92177963]
[-11.18505001 43.90378189]
[-7.74371147 42.92119217]
[-3.65003872 43.59191895]
[0.29719776 46.20634079]
[3.19927979 50.67956543]
[16.57118416 57.47604752]
[29.94308853 64.27252960]
[43.57621002 70.52856445]
[57.44871902 76.23413849]
[71.32122803 81.93970490]
[85.19373322 87.64527893]
[75.75485992 75.98733521]
[66.31598663 64.32939148]
[53.47349930 56.57886887]
[43.37503052 45.48738861]
[36.85950470 31.97636032]
[34.46818542 17.16819954]
[36.39973450 2.29308295]
[42.49369049 -11.41325569]
[52.24379730 -22.81217575]
[64.84008026 -30.95672035]
[79.23611450 -35.17029190]
[94.23596954 -35.10285187]
[108.59352875 -30.76000023]
[121.11606598 -22.50251579]
[130.76329041 -11.01638412]
[136.73374939 2.74419808]
[138.53144836 17.63608360]
[136.00708008 32.42214203]
[129.37031555 45.87403488]
[119.16853333 56.87748337]
[113.32095337 70.69072723]
[107.47337341 84.50397491]
[119.22753143 75.18518829]
[130.98168945 65.86640930]
[142.73583984 56.54762268]
[139.82745361 41.52098465]
[144.24653625 26.86730385]
[154.97761536 15.95388985]
[169.55476379 11.28856468]
[184.62826538 13.94338608]
[196.73434448 23.30829430]
[203.09109497 37.23130417]
[202.23780823 52.51300812]
[194.37054443 65.64178467]
[181.29714966 73.60073090]
[166.02178955 74.56095123]
[152.05462646 68.30178070]
[140.30047607 77.62056732]
[128.54631042 86.93934631]
[116.79215240 96.25813293]
[131.57505798 93.71537781]
[143.99775696 85.30842590]
[157.37493896 78.52233887]
[171.49624634 73.46382904]
[186.13963318 70.21244812]
[201.07479858 68.81932068]
[216.06687927 69.30635071]
[230.88014221 71.66588593]
[245.28161621 75.86082458]
[259.04483032 81.82519531]
[271.95336914 89.46520233]
[283.80422974 98.66069794]
[294.41104126 109.26708984]
[303.60702515 121.11757660]
[311.24752808 134.02581787]
[317.21246338 147.78880310]
[321.40795898 162.19010925]
[323.76809692 177.00326538]
[324.25570679 191.99534607]
[322.86318970 206.93055725]
[319.61239624 221.57406616]
[314.55444336 235.69558716]
[307.76889038 249.07304382]
[299.36242676 261.49606323]
[289.46728516 272.76928711]
[278.23901367 282.71545410]
[265.85424805 291.17816162]
[252.50769043 298.02429199]
[238.40925598 303.14620972]
[223.78063965 306.46337891]
[208.85188293 307.92361450]
[193.85775757 307.50396729]
[179.03404236 305.21102905]
[164.61386108 301.08087158]
[150.82395935 295.17840576]
[137.88122559 287.59649658]
[125.98916626 278.45434570]
[115.33479309 267.89572144]
[106.08564758 256.08670044]
[98.38719940 243.21292114]
[92.36048889 229.47688293]
[88.10029602 215.09457397]
[85.67362213 200.29217529]
[85.11861420 185.30244446]
[86.44401550 170.36111450]
[89.62896729 155.70314026]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 25]
[3 24]
[4 23]
[5 22]
[6 21]
[9 17]
[10 16]
[28 70]
[29 69]
[30 68]
[31 67]
[36 66]
[37 65]
[38 64]
[39 60]
[40 59]
[41 58]
[47 57]
[48 56]
[49 55]
[92 110]
[93 109]
[94 108]
[95 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
