%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCCAACAGGCAUCACCCCGCUAAAUCCCCUAGAAGUCCCACUCCUAAACACAUCCGUAUxxxxxxxxxxCAUCGCUACCUCCCUGACAAGCGCCUAUAGCACUCGAAUAAUUCUUCUCACCCUAACAGGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[153.06559753 67.20903015]
[140.38237000 58.79618073]
[131.36483765 70.78301239]
[122.34730530 82.76984406]
[113.32978058 94.75667572]
[111.44657898 108.61110687]
[98.65705872 114.26084900]
[89.63952637 126.24768066]
[87.52634430 141.92712402]
[73.69205475 147.44635010]
[64.67453003 159.43318176]
[55.65699768 171.42001343]
[58.11707687 187.03166199]
[48.75009537 199.76097107]
[33.11330795 202.05586243]
[20.48375130 192.55480957]
[18.35431290 176.89463806]
[27.98835182 164.36624146]
[43.67016602 162.40248108]
[52.68769455 150.41564941]
[61.70522308 138.42881775]
[63.17341232 123.60675812]
[77.65269470 117.23015594]
[86.67021942 105.24332428]
[88.55342102 91.38889313]
[101.34294128 85.73915100]
[110.36047363 73.75231934]
[119.37800598 61.76548386]
[128.39553833 49.77865219]
[117.10662842 40.20379639]
[106.39123535 29.99133682]
[96.28532410 19.17556381]
[86.82279968 7.79278612]
[78.03541565 -4.11877918]
[69.95264435 -16.51914406]
[62.60161972 -29.36667633]
[56.00699997 -42.61825180]
[50.19090271 -56.22938156]
[45.17284012 -70.15437317]
[40.96964264 -84.34648895]
[37.59540558 -98.75807953]
[35.06144333 -113.34078217]
[33.37624359 -128.04563904]
[32.54545593 -142.82328796]
[32.57184982 -157.62414551]
[33.45532227 -172.39849854]
[35.19290161 -187.09678650]
[37.77873611 -201.66967773]
[41.20413208 -216.06823730]
[45.45758438 -230.24417114]
[50.52480316 -244.14987183]
[56.38876343 -257.73867798]
[63.02977371 -270.96499634]
[70.42552948 -283.78442383]
[78.55119324 -296.15393066]
[87.37948608 -308.03204346]
[96.88076019 -319.37884521]
[107.02311707 -330.15634155]
[117.77249908 -340.32827759]
[129.09281921 -349.86056519]
[140.94607544 -358.72122192]
[153.29248047 -366.88049316]
[166.09056091 -374.31103516]
[179.29737854 -380.98791504]
[192.86859131 -386.88870239]
[206.75863647 -391.99362183]
[220.92089844 -396.28558350]
[235.30783081 -399.75012207]
[249.87112427 -402.37570190]
[264.56192017 -404.15344238]
[279.33090210 -405.07748413]
[294.12850952 -405.14465332]
[308.90502930 -404.35476685]
[323.61090088 -402.71051025]
[338.19674683 -400.21740723]
[352.61364746 -396.88381958]
[366.81317139 -392.72097778]
[380.74768066 -387.74282837]
[394.37042236 -381.96612549]
[407.63565063 -375.41027832]
[420.49884033 -368.09725952]
[432.91687012 -360.05166626]
[444.84802246 -351.30050659]
[456.25228882 -341.87316895]
[466.46575928 -352.85885620]
[476.67926025 -363.84451294]
[486.89273071 -374.83016968]
[481.28262329 -389.02487183]
[482.39550781 -404.24734497]
[490.01040649 -417.47521973]
[502.61538696 -426.08203125]
[517.70770264 -428.35888672]
[532.29083252 -423.85375977]
[543.46917725 -413.46112061]
[549.02337646 -399.24444580]
[547.85052490 -384.02645874]
[540.18359375 -370.82870483]
[527.54479980 -362.27160645]
[512.44366455 -360.05416870]
[497.87838745 -364.61669922]
[487.66491699 -353.63101196]
[477.45144653 -342.64535522]
[467.23794556 -331.65969849]
[477.74948120 -320.66186523]
[487.58761597 -309.05755615]
[496.71746826 -296.88796997]
[505.10656738 -284.19625854]
[512.72515869 -271.02743530]
[519.54620361 -257.42825317]
[525.54553223 -243.44692993]
[530.70172119 -229.13308716]
[534.99658203 -214.53750610]
[538.41479492 -199.71195984]
[540.94421387 -184.70907593]
[542.57586670 -169.58207703]
[543.30395508 -154.38461304]
[543.12585449 -139.17065430]
[542.04223633 -123.99414062]
[540.05682373 -108.90895081]
[537.17675781 -93.96860504]
[533.41223145 -79.22612762]
[528.77648926 -64.73382568]
[523.28607178 -50.54313278]
[516.96038818 -36.70440292]
[509.82192993 -23.26675224]
[501.89593506 -10.27786636]
[493.21054077 2.21615767]
[483.79656982 14.17097759]
[473.68740845 25.54416275]
[462.91891479 36.29534912]
[451.52926636 46.38637161]
[439.55889893 55.78142166]
[427.05026245 64.44714355]
[414.04776001 72.35276794]
[400.59747314 79.47024536]
[386.74716187 85.77429962]
[372.54592896 91.24254608]
[358.04418945 95.85556793]
[343.29339600 99.59698486]
[328.34585571 102.45349884]
[313.25463867 104.41496277]
[298.07324219 105.47440338]
[282.85559082 105.62804413]
[267.65567017 104.87532806]
[252.52740479 103.21890259]
[237.52445984 100.66462708]
[222.70010376 97.22156525]
[208.10691833 92.90190125]
[193.79670715 87.72096252]
[179.82023621 81.69711304]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 29]
[3 28]
[4 27]
[5 26]
[7 24]
[8 23]
[10 21]
[11 20]
[12 19]
[84 103]
[85 102]
[86 101]
[87 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
