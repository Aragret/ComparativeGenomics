%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAACCAUCAGCCUACUCAUUCAACCAAUAGCCCUGGCCGUACGCCUAACCGCUAACAUUAxxxxxxxxxxUCAACCCCGACAUCAUUACCGGGUUUUCCUCUUGUAAAUAUAGUUUAACCAAAACAUCAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[126.25598907 356.27523804]
[126.25598907 341.27523804]
[126.25598907 326.27523804]
[126.25598907 311.27523804]
[126.25598907 296.27523804]
[126.25598907 281.27523804]
[126.25598907 266.27523804]
[126.25598907 251.27525330]
[126.25598907 236.27525330]
[126.25598907 221.27525330]
[124.07914734 206.43405151]
[119.77156830 192.06585693]
[115.46398163 177.69767761]
[111.15639496 163.32949829]
[100.09008026 153.36024475]
[103.53844452 137.91941833]
[99.23086548 123.55122375]
[77.47702026 114.99128723]
[71.44932556 89.13520050]
[91.37110901 67.07160950]
[80.58410645 77.55381775]
[68.05792236 85.87313080]
[54.21997070 91.74742889]
[39.54210281 94.97801208]
[24.52452087 95.45628357]
[9.67871857 93.16741943]
[-4.48992300 88.19082642]
[-17.49934959 80.69735718]
[-28.90723038 70.94350433]
[-38.32600403 59.26255798]
[-45.43603134 46.05326080]
[-49.99646378 31.76617241]
[-51.85338211 16.88831329]
[-50.94499588 1.92655778]
[-47.30370331 -12.60962963]
[-41.05494690 -26.22554779]
[-53.31731415 -34.86466599]
[-65.57968140 -43.50378036]
[-78.10564423 -51.75606918]
[-90.88300323 -59.61349487]
[-103.66036224 -67.47092438]
[-120.14756012 -60.05571365]
[-137.64341736 -63.93870926]
[-149.24148560 -77.39550781]
[-150.47827148 -94.96076202]
[-163.57142639 -102.27986145]
[-176.66458130 -109.59896851]
[-192.43115234 -106.63334656]
[-204.48545837 -117.21979523]
[-203.58049011 -133.23730469]
[-190.41044617 -142.39860535]
[-175.07826233 -137.67593384]
[-169.34547424 -122.69212341]
[-156.25231934 -115.37301636]
[-143.15916443 -108.05390930]
[-132.94920349 -114.75446320]
[-120.78387451 -116.46307373]
[-108.98484802 -112.79121399]
[-99.83064270 -104.38317108]
[-95.11658478 -92.80397034]
[-95.80293274 -80.24827576]
[-83.02557373 -72.39085388]
[-70.24822235 -64.53342438]
[-66.69522858 -65.02710724]
[-62.72610474 -63.78301620]
[-59.17954254 -60.62480927]
[-56.94056702 -55.76614761]
[-44.67819977 -47.12703323]
[-32.41582870 -38.48791504]
[-21.69758224 -48.95497894]
[-9.23512936 -57.27645493]
[4.54791117 -63.16772461]
[19.18270874 -66.42679596]
[34.17116165 -66.94125366]
[49.00286484 -64.69210815]
[63.17247391 -59.75450134]
[76.19693756 -52.29521942]
[87.63194275 -42.56702423]
[97.08711243 -30.90011597]
[104.23928070 -17.69090843]
[108.84358978 -3.38856983]
[110.74182892 11.52025700]
[109.86790466 26.52800560]
[106.25010681 41.12347794]
[100.01022339 54.80923843]
[114.95831299 53.56236649]
[125.61994171 43.01107407]
[136.28157043 32.45978546]
[146.94319153 21.90849304]
[142.96768188 7.07303429]
[146.95800781 -7.75844622]
[157.84080505 -18.59635353]
[172.68865967 -22.52534485]
[187.50755310 -18.48854256]
[198.31129456 -7.57182503]
[202.19372559 7.28826571]
[198.11050415 22.09443855]
[187.15997314 32.86391068]
[172.28778076 36.69974518]
[157.49447632 32.57012177]
[146.83285522 43.12141037]
[136.17123413 53.67269897]
[125.50960541 64.22399139]
[131.85673523 77.81494141]
[146.79104614 76.41263580]
[161.72534180 75.01033783]
[174.74174500 66.01678467]
[188.13661194 72.53036499]
[199.43669128 61.14231491]
[215.36949158 63.01990891]
[223.71273804 76.72282410]
[218.06619263 91.73935699]
[202.76141357 96.55010223]
[189.53892517 87.46467590]
[177.59072876 96.35792542]
[163.12765503 89.94464111]
[148.19334412 91.34694672]
[133.25903320 92.74925232]
[126.84793091 110.42804718]
[113.59904480 119.24364471]
[117.90663147 133.61183167]
[129.28105164 144.60877991]
[125.52458191 159.02191162]
[129.83216858 173.39009094]
[134.13975525 187.75827026]
[138.44732666 202.12646484]
[142.83633423 187.78292847]
[152.29757690 176.14314270]
[165.44183350 168.91619873]
[180.33905029 167.16328430]
[194.80181885 171.14176941]
[206.70649719 180.26748657]
[214.30505371 193.20046997]
[216.48176575 208.04168701]
[212.91700745 222.61195374]
[204.13421631 234.77183533]
[191.42301941 242.73583984]
[176.64984131 245.33457947]
[161.98391724 242.18646240]
[149.57870483 233.75373840]
[141.25598145 221.27525330]
[141.25598145 236.27525330]
[141.25598145 251.27525330]
[141.25598145 266.27523804]
[141.25598145 281.27523804]
[141.25598145 296.27523804]
[141.25598145 311.27523804]
[141.25598145 326.27523804]
[141.25598145 341.27523804]
[141.25598145 356.27523804]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 126]
[12 125]
[13 124]
[14 123]
[16 121]
[17 120]
[20 85]
[36 69]
[37 68]
[38 67]
[39 63]
[40 62]
[41 61]
[45 55]
[46 54]
[47 53]
[86 103]
[87 102]
[88 101]
[89 100]
[104 118]
[105 117]
[106 116]
[108 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
