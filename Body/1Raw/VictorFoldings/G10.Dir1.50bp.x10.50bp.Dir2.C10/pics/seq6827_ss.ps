%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACCUAUUCUGAUUUUUCGGUCACCCUGAAGUUUAUAUUCUUAUCCUACCAGGCUUCGGAxxxxxxxxxxUAUCAAUAGGAGCUGUAUUUGCCAUCAUAGGAGGCUUCAUUCACUGAUUUCCCCUAUUCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[75.27892303 250.27926636]
[74.96686554 235.28251648]
[74.65480804 220.28575134]
[74.34275055 205.28900146]
[74.03069305 190.29225159]
[73.71863556 175.29550171]
[73.40658569 160.29873657]
[73.09452820 145.30198669]
[72.78247070 130.30523682]
[65.46336365 117.21208191]
[52.85223770 109.09053802]
[37.06060028 108.12369537]
[30.54950333 94.72762299]
[17.93837547 86.60607910]
[5.32724667 78.48453522]
[-7.28388166 70.36299133]
[-19.89500999 62.24145126]
[-26.57332993 61.52902603]
[-31.16271973 58.04064560]
[-32.85202408 53.51054764]
[-45.11439133 44.87143326]
[-57.37675858 36.23231888]
[-69.63912964 27.59320068]
[-81.35355377 37.83522797]
[-95.16387939 44.98580170]
[-110.27209473 48.63640976]
[-125.80628967 48.58064651]
[-140.87100220 44.82587433]
[-154.59881592 37.59257126]
[-166.20031738 27.30138397]
[-175.00946045 14.54865837]
[-180.52188110 0.07189927]
[-182.42367554 -15.29288960]
[-180.60934448 -30.65948105]
[-175.18757629 -45.14253998]
[-187.62702942 -53.52468491]
[-196.55509949 -55.74756622]
[-200.23556519 -62.21284485]
[-212.49794006 -70.85195923]
[-224.76029968 -79.49108124]
[-237.02267456 -88.13019562]
[-240.78536987 -81.96871948]
[-247.58595276 -77.14730835]
[-256.84542847 -74.91291809]
[-267.52404785 -76.25375366]
[-280.76663208 -83.29888916]
[-294.00921631 -90.34402466]
[-310.37081909 -89.23504639]
[-319.28616333 -102.99909210]
[-311.58386230 -117.47689819]
[-295.18743896 -117.77494049]
[-286.96408081 -103.58660889]
[-273.72149658 -96.54148102]
[-260.47891235 -89.49634552]
[-250.97056580 -101.09768677]
[-260.47891235 -112.69902802]
[-269.98727417 -124.30036926]
[-284.70391846 -132.71798706]
[-280.68923950 -149.18974304]
[-263.74984741 -149.89178467]
[-258.38592529 -133.80873108]
[-248.87757874 -122.20738220]
[-239.36921692 -110.60604095]
[-228.38356018 -100.39256287]
[-216.12118530 -91.75344849]
[-203.85882568 -83.11433411]
[-191.59645081 -74.47521210]
[-179.24487305 -65.96412659]
[-166.80543518 -57.58198166]
[-156.21429443 -67.46298218]
[-143.67645264 -74.73120117]
[-129.82427979 -79.01614380]
[-115.35738373 -80.09786987]
[-101.00713348 -77.91834259]
[-87.49979401 -72.58444214]
[-75.51972961 -64.36280060]
[-65.67470551 -53.66645050]
[-58.46512222 -41.03406143]
[-54.25851059 -27.10284424]
[-53.27083588 -12.57638073]
[-55.55540848 1.81089509]
[-61.00001144 15.33083344]
[-48.73764420 23.96994972]
[-36.47527695 32.60906601]
[-24.21290779 41.24818039]
[-11.77346706 49.63032532]
[0.83766067 57.75186539]
[13.44878864 65.87340546]
[26.05991745 73.99494934]
[38.67104340 82.11649323]
[53.56064987 82.50242615]
[60.97377777 96.47940826]
[73.58490753 104.60095215]
[62.26354599 94.76089478]
[56.29378891 81.00000763]
[56.84339142 66.01007843]
[63.80484390 52.72330856]
[75.81640625 43.73874664]
[90.52848053 40.81386948]
[105.06321716 44.52082062]
[116.57727051 54.13423538]
[131.22076416 50.88340759]
[145.86427307 47.63258362]
[153.62322998 42.68785858]
[160.84614563 44.46980286]
[175.55410767 41.52431870]
[187.50556946 30.29513741]
[203.12577820 35.28922653]
[206.34600830 51.36909485]
[193.85354614 61.99315262]
[178.49958801 56.23228073]
[163.79162598 59.17776108]
[149.11509705 62.27608490]
[134.47158813 65.52690887]
[119.82809448 68.77773285]
[119.28244019 76.25785828]
[117.64546967 98.69823456]
[131.66218567 104.03974915]
[145.67889404 109.38125610]
[160.84817505 104.15894318]
[174.31121826 112.88397217]
[175.74032593 128.86325073]
[164.03921509 139.83883667]
[148.18397522 137.39120483]
[140.33738708 123.39797211]
[126.32067108 118.05645752]
[112.30396271 112.71494293]
[106.17277527 117.03450775]
[115.91274261 128.44209290]
[125.65270996 139.84968567]
[135.39266968 151.25726318]
[148.76550293 158.05192566]
[152.87632751 172.47763062]
[145.09388733 185.30079651]
[130.39956665 188.31356812]
[118.19889069 179.58753967]
[116.30145264 164.70745850]
[108.83776855 151.69618225]
[101.37409210 138.68490601]
[93.91040802 125.67362213]
[87.77922058 129.99317932]
[88.09127808 144.98992920]
[88.40333557 159.98667908]
[88.71539307 174.98344421]
[89.02745056 189.98019409]
[89.33950806 204.97694397]
[89.65155792 219.97369385]
[89.96361542 234.97045898]
[90.27567291 249.96720886]
[92.86666870 269.17492676]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 93]
[11 92]
[13 90]
[14 89]
[15 88]
[16 87]
[17 86]
[20 85]
[21 84]
[22 83]
[23 82]
[35 69]
[36 68]
[38 67]
[39 66]
[40 65]
[41 64]
[45 54]
[46 53]
[47 52]
[55 63]
[56 62]
[57 61]
[101 115]
[102 114]
[103 113]
[105 112]
[106 111]
[117 127]
[118 126]
[119 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
