%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGCCUUACCCCCCACUAUUAACCUACUGGGAGAACUCUCUGUGCUAGUAACCACGUUCUCCxxxxxxxxxxCUCCAACUCAUGAGACCCACAACAAAUAGCCCUUCUAAACGCUAAUCCAAGCCUCACCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[33.99122238 279.90997314]
[22.63453484 275.32638550]
[11.59380913 270.02676392]
[0.91413319 264.03277588]
[-0.21692570 279.81347656]
[-13.68000984 286.18487549]
[-21.93229866 298.71084595]
[-30.18458748 311.23681641]
[-38.43687820 323.76275635]
[-46.68916702 336.28872681]
[-54.94145584 348.81469727]
[-53.13077164 364.75524902]
[-64.56616974 376.00741577]
[-80.47538757 373.93948364]
[-88.65424347 360.13781738]
[-82.82860565 345.18984985]
[-67.46741486 340.56240845]
[-59.21512985 328.03643799]
[-50.96283722 315.51046753]
[-42.71054840 302.98452759]
[-34.45825958 290.45855713]
[-26.20597076 277.93258667]
[-25.66517067 263.04782104]
[-11.61182880 255.78047180]
[-28.50766945 242.16375732]
[-43.75578690 226.72422791]
[-57.16066742 209.65983582]
[-68.55043793 191.18939209]
[-77.77906036 171.54971313]
[-84.72820282 150.99263000]
[-89.30875397 129.78172302]
[-91.46199799 108.18894958]
[-91.16032410 86.49118042]
[-88.40758514 64.96662140]
[-83.23908997 43.89125824]
[-75.72111511 23.53532028]
[-65.95003510 4.15981054]
[-54.05115128 -13.98683739]
[-65.75077820 -23.37399864]
[-77.45040131 -32.76116180]
[-89.15002441 -42.14832306]
[-100.84964752 -51.53548431]
[-112.54927063 -60.92264557]
[-124.24889374 -70.30980682]
[-125.60517883 -55.37125015]
[-138.01164246 -46.94038773]
[-152.40017700 -51.17950058]
[-158.25392151 -64.99013519]
[-151.29426575 -78.27783966]
[-136.60879517 -81.33052826]
[-147.27041626 -91.88182068]
[-157.93203735 -102.43311310]
[-173.22290039 -99.79322052]
[-187.13026428 -106.67544556]
[-194.30645752 -120.43341827]
[-191.99208069 -135.77693176]
[-181.07707214 -146.80607605]
[-165.75846863 -149.27993774]
[-151.92658997 -142.24725342]
[-144.90007019 -128.41224670]
[-147.38075256 -113.09474182]
[-136.71913147 -102.54344940]
[-126.05749512 -91.99215698]
[-114.86173248 -82.00942993]
[-103.16210938 -72.62226868]
[-91.46248627 -63.23510742]
[-79.76286316 -53.84794617]
[-68.06324005 -44.46078491]
[-56.36361313 -35.07362366]
[-44.66399002 -25.68646049]
[-35.91831970 -35.09613800]
[-26.56187820 -43.89873886]
[-16.63670921 -52.05471039]
[-6.18741465 -59.52739334]
[4.73905134 -66.28321838]
[16.09358788 -72.29181671]
[27.82517242 -77.52619934]
[39.88108444 -81.96282959]
[52.20715332 -85.58178711]
[64.74798584 -88.36679840]
[77.44722748 -90.30535889]
[90.24781799 -91.38874054]
[103.09223175 -91.61209106]
[115.92274475 -90.97440338]
[128.68171692 -89.47853851]
[141.31179810 -87.13121796]
[153.75622559 -83.94299316]
[165.95910645 -79.92819214]
[177.86558533 -75.10485077]
[189.42214966 -69.49464417]
[200.57688904 -63.12279129]
[211.27967834 -56.01791382]
[221.48240662 -48.21194839]
[231.13923645 -39.73996735]
[240.20675659 -30.64003944]
[248.64425659 -20.95305824]
[256.41378784 -10.72255707]
[263.48043823 0.00549581]
[269.81246948 11.18288994]
[275.38143921 22.75939941]
[280.16229248 34.68300247]
[284.13354492 46.90011597]
[287.27734375 59.35584641]
[289.57962036 71.99421692]
[291.02996826 84.75843048]
[291.62191772 97.59114075]
[291.35275269 110.43467712]
[306.28704834 111.83697510]
[321.22137451 113.23928070]
[336.15567017 114.64158630]
[344.97943115 102.07030487]
[358.91339111 95.60968781]
[374.20947266 96.99760437]
[386.75302124 105.86071014]
[393.16992188 119.81488037]
[391.73406982 135.10650635]
[382.83169556 147.62222290]
[368.85748291 153.99536133]
[353.57043457 152.51158142]
[341.08267212 143.57002258]
[334.75335693 129.57589722]
[319.81906128 128.17358398]
[304.88476562 126.77128601]
[289.95043945 125.36898041]
[287.94216919 137.44998169]
[285.16632080 149.37802124]
[281.63427734 161.10441589]
[277.36041260 172.58125305]
[272.36224365 183.76165771]
[266.66012573 194.60000610]
[260.27737427 205.05198669]
[253.24005127 215.07495117]
[245.57690430 224.62794495]
[237.31921387 233.67195129]
[228.50071716 242.17004395]
[219.15742493 250.08752441]
[209.32748413 257.39205933]
[199.05107117 264.05377197]
[188.37011719 270.04553223]
[177.32826233 275.34280396]
[165.97061157 279.92398071]
[154.34352112 283.77032471]
[142.49450684 286.86618042]
[130.47193909 289.19888306]
[118.32492828 290.75888062]
[106.10307312 291.53982544]
[93.85629272 291.53854370]
[81.63460541 290.75500488]
[69.48792267 289.19241333]
[57.46585083 286.85717773]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 24]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[38 70]
[39 69]
[40 68]
[41 67]
[42 66]
[43 65]
[44 64]
[50 63]
[51 62]
[52 61]
[107 124]
[108 123]
[109 122]
[110 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
