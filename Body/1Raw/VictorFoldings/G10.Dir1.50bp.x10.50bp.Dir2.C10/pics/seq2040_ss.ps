%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAAAAUUAUAACCAAGCAUAAUAUAGCAAGGACUAACCCCUAUACCUUCUGCAUAAUGAAxxxxxxxxxxAGACUACGUACAUAACCUAAACCUACUCCAAUGCUAAAACUAAUCGUCCCAACAAUUAUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[95.77161407 291.89282227]
[95.77161407 276.89282227]
[95.77161407 261.89282227]
[95.77161407 246.89280701]
[95.77161407 231.89280701]
[95.77161407 216.89280701]
[95.77161407 201.89280701]
[95.77161407 186.89280701]
[95.77161407 171.89280701]
[95.77161407 156.89280701]
[89.15032196 153.37023926]
[82.10497284 166.61271667]
[68.86261749 159.56713867]
[75.90773773 146.32510376]
[69.28644562 142.80253601]
[56.84700394 151.18467712]
[44.40756607 159.56683350]
[31.96812439 167.94897461]
[19.52868462 176.33111572]
[19.11457825 191.84266663]
[9.63542366 204.12782288]
[-5.26385260 208.46270752]
[-19.85417366 203.18045044]
[-28.52526283 190.31221008]
[-27.94291115 174.80606079]
[-18.33104324 162.62445068]
[-3.38561869 158.45146179]
[11.14654160 163.89167786]
[23.58598137 155.50953674]
[36.02542114 147.12738037]
[48.46486282 138.74523926]
[60.90430069 130.36309814]
[62.87201309 88.03496552]
[91.92928314 72.65074921]
[91.61723328 57.65399551]
[91.30517578 42.65724182]
[90.99311829 27.66048622]
[90.68106079 12.66373253]
[80.77401733 -2.82272363]
[89.74685669 -17.87224579]
[89.12287903 -32.85926437]
[88.49890137 -47.84627914]
[73.50893402 -48.64981842]
[58.66322708 -50.87462234]
[44.09622574 -54.50054550]
[29.93985939 -59.49474335]
[16.32233047 -65.81198883]
[3.36696219 -73.39508057]
[-8.80891514 -82.17532349]
[-20.09503174 -92.07321930]
[-30.38917732 -102.99912262]
[-39.59812546 -114.85408020]
[-47.63847351 -127.53073120]
[-54.43740845 -140.91427612]
[-59.93335342 -154.88349915]
[-64.07653809 -169.31190491]
[-66.82943726 -184.06881714]
[-68.16712952 -199.02058411]
[-68.07748413 -214.03179932]
[-66.56131744 -228.96652222]
[-63.63237381 -243.68949890]
[-59.31716156 -258.06738281]
[-53.65477371 -271.96997070]
[-46.69647980 -285.27136230]
[-38.50530624 -297.85110474]
[-29.15542984 -309.59521484]
[-18.73152924 -320.39739990]
[-7.32800436 -330.15979004]
[4.95186806 -338.79400635]
[17.99687767 -346.22183228]
[31.68888474 -352.37597656]
[45.90388870 -357.20074463]
[60.51315308 -360.65243530]
[75.38436890 -362.69976807]
[90.38286591 -363.32424927]
[105.37280273 -362.52014160]
[120.21842957 -360.29479980]
[134.78529358 -356.66836548]
[148.94148254 -351.67364502]
[162.55877686 -345.35589600]
[175.51387024 -337.77233887]
[187.68942261 -328.99163818]
[198.97518921 -319.09332275]
[209.26893616 -308.16705322]
[218.47744751 -296.31176758]
[226.51733398 -283.63482666]
[233.31578064 -270.25103760]
[238.81121826 -256.28158569]
[242.95387268 -241.85304260]
[245.70623779 -227.09603882]
[247.04338074 -212.14422607]
[246.95318604 -197.13301086]
[245.43647766 -182.19833374]
[242.50700378 -167.47546387]
[238.19126892 -153.09773254]
[232.52836609 -139.19534302]
[225.56959534 -125.89421082]
[217.37796021 -113.31478882]
[208.02764893 -101.57099915]
[197.60336304 -90.76920319]
[186.19947815 -81.00722504]
[173.91929626 -72.37346649]
[160.87400818 -64.94612885]
[147.18177795 -58.79246140]
[132.96659851 -53.96820831]
[118.35720825 -50.51705551]
[103.48591614 -48.47025681]
[104.10989380 -33.48323822]
[104.73387146 -18.49622345]
[113.44166565 -10.04154682]
[114.04759979 2.48250294]
[105.67781830 12.35167694]
[105.98986816 27.34843063]
[106.30192566 42.34518433]
[106.61398315 57.34193802]
[106.92604065 72.33869171]
[127.28569794 77.27347565]
[142.42028809 97.30168915]
[141.74349976 126.60585022]
[155.52587891 132.52581787]
[170.89927673 127.93904114]
[183.98771667 137.21655273]
[184.75086975 153.24145508]
[172.60331726 163.72079468]
[156.86361694 160.61572266]
[149.60592651 146.30819702]
[135.82354736 140.38822937]
[129.56056213 144.51437378]
[138.81755066 156.31726074]
[148.07455444 168.12014771]
[157.33154297 179.92301941]
[170.62986755 186.86238098]
[174.46592712 201.36357117]
[166.33834839 213.97080994]
[151.54687500 216.46328735]
[139.73658752 207.21572876]
[138.60874939 192.25787354]
[131.41735840 179.09414673]
[124.22598267 165.93040466]
[117.03459930 152.76666260]
[110.77161407 156.89280701]
[110.77161407 171.89280701]
[110.77161407 186.89280701]
[110.77161407 201.89280701]
[110.77161407 216.89280701]
[110.77161407 231.89280701]
[110.77161407 246.89280701]
[110.77161407 261.89282227]
[110.77161407 276.89282227]
[110.77161407 291.89282227]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[34 116]
[35 115]
[36 114]
[37 113]
[38 112]
[40 109]
[41 108]
[42 107]
[119 127]
[120 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
