%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCUUCUAAACGCUAAUCCAAGCCUCACCCCACUACUAGGCCUCCUCCUAGCAGCAGCAGGxxxxxxxxxxAGGUCAACCUCGCUUCCCCACCCUUACUAACAUUAACGAAAAUAACCCCACCCUACUAAACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[15.98822021 188.54083252]
[10.63966942 183.13957214]
[-0.94937915 192.66291809]
[-12.53842735 202.18624878]
[-24.12747574 211.70959473]
[-29.87720490 226.44903564]
[-44.62266541 228.55157471]
[-56.21171188 238.07492065]
[-67.80075836 247.59825134]
[-79.38980865 257.12158203]
[-90.97885895 266.64492798]
[-85.05229187 280.53924561]
[-83.28164673 295.54064941]
[-85.81047058 310.43298340]
[-92.43375397 324.00903320]
[-102.61457062 335.16821289]
[-115.52762604 343.00592041]
[-130.12609863 346.88681030]
[-145.22656250 346.49621582]
[-159.60490417 341.86587524]
[-172.09550476 333.37109375]
[-181.68583679 321.70050049]
[-187.59844971 307.80023193]
[-189.35401917 292.79708862]
[-186.81024170 277.90728760]
[-180.17332458 264.33792114]
[-169.98129272 253.18894958]
[-157.06037903 245.36421204]
[-142.45800781 241.49800110]
[-127.35794067 241.90374756]
[-112.98426819 246.54855347]
[-100.50219727 255.05587769]
[-88.91314697 245.53254700]
[-77.32409668 236.00920105]
[-65.73505402 226.48587036]
[-54.14600372 216.96252441]
[-49.22520065 202.90425110]
[-33.65081406 200.12054443]
[-22.06176567 190.59719849]
[-10.47271633 181.07386780]
[1.11633170 171.55052185]
[-12.97569275 146.19470215]
[-20.68613434 118.22951508]
[-21.57945633 89.23460388]
[-15.60520267 60.84779358]
[-3.10083389 34.67254639]
[-15.25416660 25.88070488]
[-27.40749931 17.08886147]
[-39.56083298 8.29701900]
[-51.71416473 -0.49482352]
[-67.27709198 2.25670981]
[-80.17929840 -6.87064505]
[-82.76613617 -22.46179008]
[-73.50288391 -35.26677704]
[-57.88525772 -37.68863297]
[-45.17892456 -28.29051208]
[-42.92232513 -12.64815617]
[-30.76899147 -3.85631394]
[-18.61565781 4.93552828]
[-6.46232462 13.72737122]
[5.69100857 22.51921272]
[22.69587135 5.54614925]
[42.69613647 -7.76699495]
[64.91682434 -16.90435791]
[88.49691772 -21.51188087]
[112.52274323 -21.41103363]
[114.97566986 -36.20911407]
[117.42859650 -51.00719070]
[119.72946930 -65.82967377]
[121.87805176 -80.67499542]
[124.02663422 -95.52031708]
[110.54736328 -102.41873169]
[100.04014587 -113.32180786]
[93.64472961 -127.04687500]
[92.05482483 -142.10511780]
[95.44290924 -156.86315918]
[103.44146729 -169.72013855]
[115.18286133 -179.28143311]
[129.39347839 -184.50990295]
[144.53187561 -184.83839417]
[158.95593262 -180.23129272]
[171.10102844 -171.18833923]
[179.64978027 -158.69042969]
[183.67486572 -144.09326172]
[182.73966980 -128.98020935]
[176.94564819 -114.99063873]
[166.92129517 -103.64202881]
[153.75396729 -96.16539764]
[138.87194824 -93.37174225]
[136.72337341 -78.52642059]
[134.57479858 -63.68109512]
[136.74267578 -56.56684875]
[132.22668457 -48.55426407]
[129.77374268 -33.75618362]
[127.32082367 -18.95810509]
[134.67271423 -17.02675247]
[141.89013672 -14.64150333]
[148.94508362 -11.81161213]
[155.81019592 -8.54805470]
[162.45884705 -4.86348724]
[168.86523438 -0.77220190]
[175.00454712 3.70993376]
[180.85293579 8.56553555]
[186.38772583 13.77577019]
[191.58747864 19.32043076]
[196.43199158 25.17800903]
[200.90248108 31.32579041]
[204.98162842 37.73992538]
[208.65359497 44.39554214]
[211.90412903 51.26682281]
[214.72065735 58.32711792]
[217.09222412 65.54904175]
[219.00964355 72.90458679]
[220.46548462 80.36522675]
[221.45408630 87.90201569]
[221.97163391 95.48572540]
[222.01609802 103.08695221]
[221.58732605 110.67620087]
[220.68696594 118.22403717]
[219.31851196 125.70119476]
[217.48727417 133.07867432]
[215.20036316 140.32785034]
[212.46662903 147.42060852]
[209.29670715 154.32945251]
[205.70285034 161.02757263]
[201.69903564 167.48899841]
[197.30076599 173.68865967]
[192.52511597 179.60250854]
[187.39060974 185.20762634]
[181.91714478 190.48226929]
[176.12596130 195.40596008]
[170.03952026 199.95960999]
[163.68142700 204.12556458]
[157.07633972 207.88766479]
[150.24987793 211.23132324]
[143.22853088 214.14355469]
[136.03950500 216.61308289]
[128.71070862 218.63032532]
[121.27055359 220.18743896]
[113.74790192 221.27841187]
[106.17192078 221.89900208]
[98.57200623 222.04678345]
[90.97763062 221.72122192]
[83.41825104 220.92353821]
[75.92317963 219.65686035]
[68.52149200 217.92608643]
[61.24189758 215.73793030]
[54.11262894 213.10087585]
[47.16133499 210.02514648]
[40.41497803 206.52268982]
[33.89972687 202.60707092]
[27.64084625 198.29348755]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 41]
[3 40]
[4 39]
[5 38]
[7 36]
[8 35]
[9 34]
[10 33]
[11 32]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[66 95]
[67 94]
[68 93]
[69 91]
[70 90]
[71 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
