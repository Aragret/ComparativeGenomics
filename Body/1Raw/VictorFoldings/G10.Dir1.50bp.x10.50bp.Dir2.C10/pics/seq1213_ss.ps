%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCACCCCCUCCCCAAUAAAGCUAAAACUCACCUGAGUUGUAAAAAACUCCAGUUGACACAxxxxxxxxxxCAUAUCCCUCUAGAGGAGCCUGUUCUGUAAUCGAUAAACCCCGAUCAACCUCACCACCUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[17.91496468 266.15969849]
[10.73245621 279.32827759]
[3.54994774 292.49685669]
[-3.63256121 305.66546631]
[-10.81507015 318.83404541]
[-17.99757957 332.00262451]
[-25.18008804 345.17120361]
[-32.36259842 358.33978271]
[-39.54510498 371.50836182]
[-46.72761536 384.67694092]
[-49.00381470 401.47738647]
[-65.77781677 403.94097900]
[-72.78862762 388.50451660]
[-59.89619827 377.49444580]
[-52.71368790 364.32586670]
[-45.53117752 351.15728760]
[-38.34867096 337.98867798]
[-31.16616058 324.82009888]
[-23.98365211 311.65151978]
[-16.80114365 298.48294067]
[-9.61863518 285.31436157]
[-2.43612599 272.14578247]
[4.74638271 258.97720337]
[-11.47449303 248.05552673]
[-26.45427704 235.48548889]
[-40.02619171 221.40702820]
[-52.03913498 205.97689819]
[-62.35935974 189.36688232]
[-70.87197113 171.76190186]
[-77.48219299 153.35797119]
[-82.11642456 134.35997009]
[-84.72308350 114.97943878]
[-85.27313232 95.43212891]
[-83.76046753 75.93568420]
[-80.20191193 56.70714951]
[-74.63709259 37.96061325]
[-67.12796783 19.90478897]
[-57.75813293 2.74069929]
[-70.19757080 -5.64144421]
[-82.63701630 -14.02358723]
[-98.40512085 -15.31874275]
[-104.63611603 -28.84737587]
[-117.07556152 -37.22951889]
[-129.51499939 -45.61166382]
[-142.04095459 -53.86395264]
[-154.65208435 -61.98549271]
[-167.26321411 -70.10703278]
[-179.87434387 -78.22857666]
[-195.26564026 -74.63920593]
[-208.64270020 -83.05525970]
[-212.06913757 -98.48364258]
[-203.51213074 -111.77097321]
[-188.04838562 -115.03410339]
[-174.85226440 -106.33708954]
[-171.75280762 -90.83970642]
[-159.14167786 -82.71816254]
[-146.53054810 -74.59661865]
[-133.91941833 -66.47508240]
[-126.54528046 -65.49137115]
[-121.13285828 -58.05110168]
[-108.69341278 -49.66896057]
[-96.25397491 -41.28681564]
[-81.37561798 -40.59120941]
[-74.25486755 -26.46302795]
[-61.81542969 -18.08088493]
[-49.37599182 -9.69874096]
[-40.87291718 -20.42350960]
[-31.60154533 -30.49150658]
[-21.61244202 -39.84782410]
[-10.96008396 -48.44143677]
[0.29743245 -56.22547150]
[12.09871006 -63.15748215]
[24.37938690 -69.19965363]
[37.07248688 -74.31903839]
[50.10878372 -78.48772430]
[63.41717529 -81.68296051]
[76.92508698 -83.88732910]
[90.55884552 -85.08880615]
[104.24409485 -85.28083801]
[117.90619659 -84.46237946]
[131.47064209 -82.63789368]
[144.86344910 -79.81732941]
[158.01158142 -76.01606750]
[170.84332275 -71.25485229]
[183.28869629 -65.55963135]
[195.27983093 -58.96148300]
[206.75132751 -51.49638367]
[217.64060974 -43.20504761]
[227.62333679 -54.40081406]
[237.60606384 -65.59658051]
[238.12788391 -81.63114166]
[251.07516479 -91.10466003]
[266.51586914 -86.74984741]
[272.60519409 -71.90735626]
[264.67196655 -57.96306992]
[248.80183411 -55.61385345]
[238.81910706 -44.41808701]
[228.83638000 -33.22232056]
[238.85102844 -22.74930954]
[248.01681519 -11.52588177]
[256.27770996 0.37934801]
[263.58322144 12.89359856]
[269.88870239 25.94036674]
[275.15557861 39.43989182]
[279.35165405 53.30964279]
[282.45126343 67.46482849]
[284.43548584 81.81892395]
[285.29217529 96.28415680]
[285.01611328 110.77210999]
[283.60897827 125.19421387]
[298.37503052 127.83307648]
[313.14108276 130.47193909]
[327.90713501 133.11080933]
[339.00033569 122.26088715]
[354.35717773 120.03685760]
[368.07269287 127.29388428]
[374.87295532 141.24150085]
[372.14312744 156.51657104]
[360.93289185 167.24551392]
[345.55279541 169.30282593]
[331.91680908 161.89743042]
[325.26828003 147.87686157]
[310.50219727 145.23799133]
[295.73614502 142.59913635]
[280.97009277 139.96026611]
[277.88232422 152.00840759]
[273.99343872 163.82229614]
[269.32089233 175.34875488]
[263.88577271 186.53585815]
[257.71252441 197.33322144]
[250.82899475 207.69221497]
[243.26615906 217.56617737]
[235.05807495 226.91065979]
[226.24172974 235.68354797]
[216.85679626 243.84536743]
[206.94558716 251.35931396]
[196.55270386 258.19158936]
[185.72496033 264.31137085]
[174.51113892 269.69116211]
[162.96174622 274.30667114]
[151.12876892 278.13717651]
[139.06552124 281.16534424]
[126.82633209 283.37762451]
[114.46632385 284.76397705]
[102.04116821 285.31820679]
[89.60681152 285.03778076]
[77.21926117 283.92401123]
[64.93431854 281.98187256]
[52.80730057 279.22012329]
[40.89282608 275.65118408]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[4 20]
[5 19]
[6 18]
[7 17]
[8 16]
[9 15]
[10 14]
[38 66]
[39 65]
[40 64]
[42 62]
[43 61]
[44 60]
[45 58]
[46 57]
[47 56]
[48 55]
[88 98]
[89 97]
[90 96]
[110 125]
[111 124]
[112 123]
[113 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
