%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAGCCCCGGCAGGUUUGAAGCUGCUUCUUCGAAUUUGCAAUUCAAUAUGAAAAUCACCUCGxxxxxxxxxxAAACAAUGUUCAACCAGUAACUACUACUAAUCAACGCCCAUAAUCAUACAAAGCCCCCGCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[95.39236450 240.91961670]
[95.08438873 225.92277527]
[94.77641296 210.92593384]
[94.46843719 195.92909241]
[94.16045380 180.93225098]
[93.85247803 165.93542480]
[93.54450226 150.93858337]
[93.23652649 135.94174194]
[92.92854309 120.94490814]
[79.78691864 113.71320343]
[66.95326233 121.47834015]
[54.11960602 129.24346924]
[41.28595352 137.00860596]
[41.39678192 147.78436279]
[37.02702332 157.54615784]
[29.03840828 164.53483582]
[18.93787956 167.52209473]
[8.59357929 166.02610779]
[-0.11062943 160.38780212]
[-13.39797115 167.34815979]
[-26.68531227 174.30851746]
[-39.97265244 181.26887512]
[-48.60686874 194.52635193]
[-63.47126770 193.57823181]
[-71.78512573 207.71371460]
[-88.17932129 207.31089783]
[-95.78891754 192.78414917]
[-86.78581238 179.07736206]
[-70.43162537 180.29089355]
[-62.74780655 167.53126526]
[-46.93301010 167.98153687]
[-33.64566803 161.02117920]
[-20.35832787 154.06082153]
[-7.07098579 147.10046387]
[-2.71970463 128.16539001]
[14.36783695 118.29930115]
[33.52081680 124.17495728]
[46.35447311 116.40982056]
[59.18812561 108.64468384]
[72.02178192 100.87954712]
[70.63775635 85.94353485]
[56.59577942 80.66879272]
[42.55380249 75.39405060]
[28.51182556 70.11931610]
[14.46984863 64.84457397]
[-2.48385787 64.93492126]
[-7.26392889 48.66878128]
[7.04326725 39.57260132]
[19.74459076 50.80259323]
[33.78656769 56.07733536]
[47.82854462 61.35207748]
[61.87052155 66.62681580]
[75.91249847 71.90155792]
[89.78660583 73.79113007]
[99.33634186 80.76410675]
[103.08926392 90.10495758]
[112.25119781 78.22813416]
[121.41313171 66.35131073]
[130.57507324 54.47448349]
[139.73699951 42.59766006]
[128.77610779 32.34078598]
[118.83982849 21.08844376]
[110.01816559 8.94254112]
[102.39099884 -3.98692560]
[96.02741241 -17.58286095]
[90.98502350 -31.72213745]
[87.30951691 -46.27670288]
[85.03416443 -61.11474609]
[84.17957306 -76.10189056]
[84.75349426 -91.10240173]
[86.75071716 -105.98043060]
[90.15316010 -120.60124207]
[94.93000793 -134.83242798]
[101.03800201 -148.54508972]
[108.42182159 -161.61505127]
[117.01460266 -173.92395020]
[126.73852539 -185.36029053]
[137.50552368 -195.82054138]
[149.21807861 -205.20993042]
[161.77012634 -213.44343567]
[175.04800415 -220.44650269]
[188.93142700 -226.15571594]
[203.29470825 -230.51933289]
[218.00772095 -233.49787903]
[232.93725586 -235.06434631]
[247.94808960 -235.20457458]
[262.90426636 -233.91726685]
[277.67037964 -231.21411133]
[292.11267090 -227.11955261]
[306.10031128 -221.67071533]
[319.50671387 -214.91691589]
[332.21035767 -206.91931152]
[344.09628296 -197.75036621]
[355.05682373 -187.49308777]
[364.99267578 -176.24038696]
[373.81390381 -164.09416199]
[381.44058228 -151.16441345]
[387.80368042 -137.56825256]
[392.84555054 -123.42878723]
[396.52053833 -108.87409210]
[398.79534912 -94.03596497]
[399.64938354 -79.04878998]
[399.07492065 -64.04830170]
[397.07717896 -49.17034149]
[393.67419434 -34.54965210]
[388.89682007 -20.31864738]
[382.78833008 -6.60620546]
[375.40402222 6.46348763]
[366.81079102 18.77206802]
[357.08645630 30.20806694]
[346.31909180 40.66791153]
[334.60617065 50.05687714]
[322.05383301 58.28993225]
[308.77569580 65.29251862]
[294.89205933 71.00121307]
[280.52862549 75.36431885]
[265.81549072 78.34232330]
[250.88591003 79.90824890]
[235.87507629 80.04792023]
[220.91893005 78.76007843]
[206.15293884 76.05637360]
[191.71080017 71.96129608]
[177.72334290 66.51194000]
[164.31721497 59.75765228]
[151.61383057 51.75959778]
[142.45188904 63.63642120]
[133.28996277 75.51324463]
[124.12802124 87.39006805]
[114.96608734 99.26689148]
[126.00702667 89.11319733]
[140.15560913 84.13143921]
[155.12248230 85.12770081]
[168.48593140 91.94078064]
[178.08367920 103.46828461]
[182.36274719 117.84498596]
[180.63075256 132.74465942]
[173.16795349 145.75643921]
[161.18185425 154.77494812]
[146.61189270 158.34094238]
[131.81558228 155.87742615]
[119.18703461 147.78300476]
[110.76963043 135.36738586]
[107.92538452 120.63693237]
[108.23336029 135.63377380]
[108.54134369 150.63059998]
[108.84931946 165.62744141]
[109.15729523 180.62428284]
[109.46527100 195.62112427]
[109.77325439 210.61795044]
[110.08123016 225.61479187]
[110.38920593 240.61163330]
[112.97498322 259.82006836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 151]
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 40]
[11 39]
[12 38]
[13 37]
[19 34]
[20 33]
[21 32]
[22 31]
[24 29]
[41 53]
[42 52]
[43 51]
[44 50]
[45 49]
[56 129]
[57 128]
[58 127]
[59 126]
[60 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
