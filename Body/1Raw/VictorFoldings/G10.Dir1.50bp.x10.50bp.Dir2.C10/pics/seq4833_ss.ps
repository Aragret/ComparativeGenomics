%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAUAAUCCUUCUAAUAGCUAUCCUCUUCAACAAUAUACUCUCCGGACAAUGAACCAUAACxxxxxxxxxxGCUACUUCCCCUAUCAUAGAAGAGCUUAUCACCUUUCAUGAUCACGCCCUCAUAAUCAUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[99.60256958 273.31817627]
[99.60256958 258.31817627]
[99.60256958 243.31816101]
[99.60256958 228.31816101]
[99.60256958 213.31816101]
[99.60256958 198.31816101]
[99.60256958 183.31816101]
[99.60256958 168.31816101]
[99.60256958 153.31816101]
[99.60256958 138.31816101]
[89.50326538 135.51988220]
[80.87629700 130.21287537]
[74.29929352 122.97789764]
[70.14847565 114.51409149]
[68.57951355 105.57442474]
[69.52794647 96.90009308]
[72.72806549 89.15943146]
[77.74796295 82.89649200]
[68.73043823 70.90966034]
[59.71290588 58.92282486]
[50.69537735 46.93599319]
[41.67784500 34.94915771]
[32.66031647 22.96232605]
[23.39536667 11.16568661]
[13.88700771 -0.43565494]
[4.37864971 -12.03699589]
[-5.12970877 -23.63833809]
[-17.60411453 -15.28700733]
[-30.82631302 -8.17863369]
[-44.67285156 -2.37958646]
[-59.01443863 2.05598807]
[-73.71717834 5.08667517]
[-88.64378357 6.68417788]
[-103.65488434 6.83358002]
[-118.61032867 5.53348684]
[-133.37046814 2.79603720]
[-147.79750061 -1.35320938]
[-161.75671387 -6.87551165]
[-175.11778259 -13.71930790]
[-187.75593567 -21.82069778]
[-199.55319214 -31.10404015]
[-210.39936829 -41.48265457]
[-220.19323730 -52.85964203]
[-228.84332275 -65.12876892]
[-236.26887512 -78.17547607]
[-242.40055847 -91.87796021]
[-247.18112183 -106.10827637]
[-250.56591797 -120.73355103]
[-252.52336121 -135.61723328]
[-253.03515625 -150.62034607]
[-252.09654236 -165.60281372]
[-249.71627808 -180.42475891]
[-245.91658020 -194.94776917]
[-240.73292542 -209.03625488]
[-234.21372986 -222.55865479]
[-226.41984558 -235.38873291]
[-217.42405701 -247.40669250]
[-207.31034851 -258.50030518]
[-196.17315674 -268.56600952]
[-184.11645508 -277.50982666]
[-171.25283813 -285.24822998]
[-157.70240784 -291.70895386]
[-143.59165955 -296.83172607]
[-129.05238342 -300.56866455]
[-114.22030640 -302.88488770]
[-99.23391724 -303.75878906]
[-84.23314667 -303.18218994]
[-69.35805511 -301.16049194]
[-54.74753952 -297.71258545]
[-40.53800583 -292.87060547]
[-26.86213112 -286.67980957]
[-13.84761047 -279.19796753]
[-1.61595523 -270.49496460]
[9.71862602 -260.65206909]
[20.05030251 -249.76115417]
[29.28260994 -237.92393494]
[37.32934189 -225.25090027]
[44.11537170 -211.86041260]
[49.57733917 -197.87747192]
[53.66423798 -183.43266296]
[56.33791733 -168.66082764]
[57.57341003 -153.69990540]
[57.35918045 -138.68959045]
[55.69723129 -123.77002716]
[52.60307312 -109.08051300]
[48.10560226 -94.75821686]
[42.24681091 -80.93685150]
[35.08140182 -67.74547577]
[26.67627525 -55.30725479]
[17.10991096 -43.73832321]
[6.47163248 -33.14669418]
[15.97999096 -21.54535484]
[25.48834991 -9.94401360]
[34.99670792 1.65732777]
[39.63770294 3.01257205]
[43.45073318 7.33600664]
[44.64714813 13.94479656]
[53.66467667 25.93162918]
[62.68220901 37.91846085]
[71.69973755 49.90529251]
[80.71726990 61.89212799]
[89.73479462 73.87895966]
[119.81740570 73.37213898]
[138.18750000 103.18656158]
[153.12181091 104.58886719]
[166.35186768 93.19135284]
[183.39939880 94.82402802]
[193.80767822 107.99694824]
[208.76791382 109.08825684]
[223.72816467 110.17956543]
[238.68841553 111.27087402]
[249.45445251 99.92951202]
[264.99755859 98.21316528]
[277.97875977 106.93225098]
[282.26873779 121.96987152]
[275.84188843 136.22573853]
[261.73275757 142.96864319]
[246.60328674 139.01481628]
[237.59710693 126.23112488]
[222.63685608 125.13981628]
[207.67660522 124.04850769]
[192.71635437 122.95719147]
[184.20956421 132.68504333]
[171.45817566 135.76345825]
[159.08766174 130.84429932]
[151.71951294 119.52317047]
[136.78520203 118.12086487]
[131.23954773 123.17019653]
[143.67333984 131.56071472]
[156.10711670 139.95124817]
[170.76126099 143.15376282]
[180.77037048 154.32595825]
[182.34913635 169.24264526]
[174.90048218 182.26254272]
[161.24140930 188.46170044]
[146.53756714 185.49568176]
[136.34976196 174.48620605]
[134.53099060 159.59631348]
[127.33961487 146.43258667]
[120.14823151 133.26884460]
[114.60256958 138.31816101]
[114.60256958 153.31816101]
[114.60256958 168.31816101]
[114.60256958 183.31816101]
[114.60256958 198.31816101]
[114.60256958 213.31816101]
[114.60256958 228.31816101]
[114.60256958 243.31816101]
[114.60256958 258.31817627]
[114.60256958 273.31817627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[18 102]
[19 101]
[20 100]
[21 99]
[22 98]
[23 97]
[24 94]
[25 93]
[26 92]
[27 91]
[104 127]
[105 126]
[108 122]
[109 121]
[110 120]
[111 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
