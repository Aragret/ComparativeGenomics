%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAAUAAGCUAUCGGGCCCAUACCCCGAAAAUGUUGGUUAUACCCUUCCCGUACUAAUUAAxxxxxxxxxxCUACUCAACUUAAACUCCAGCACCACGACCCUACUACUAUCUCGCACCUGAAACAAGCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[96.41510773 298.95544434]
[96.41510773 283.95544434]
[96.41510773 268.95544434]
[96.41510773 253.95544434]
[96.41510773 238.95544434]
[96.41510773 223.95544434]
[96.41510773 208.95544434]
[96.41510773 193.95544434]
[96.41510773 178.95544434]
[96.41510773 163.95544434]
[90.23932648 159.69990540]
[83.04794312 172.86364746]
[75.85655975 186.02737427]
[72.35585785 200.61315918]
[58.34918213 205.98094177]
[45.99726486 197.47035217]
[46.02416229 182.47036743]
[58.40782166 174.00398254]
[68.14778900 162.59640503]
[77.88774872 151.18881226]
[71.71196747 146.93327332]
[57.69525146 152.27478027]
[43.67853928 157.61628723]
[29.66182518 162.95780945]
[15.64511299 168.29931641]
[10.68941307 183.13087463]
[-2.66736937 191.26292419]
[-18.11857224 188.85577393]
[-28.36860847 177.04600525]
[-28.57772446 161.40982056]
[-18.64718246 149.33015442]
[-3.26588082 146.51065063]
[10.30360031 154.28260803]
[24.32031250 148.94108582]
[38.33702469 143.59957886]
[52.35374069 138.25807190]
[66.37045288 132.91654968]
[58.68362045 112.34692383]
[61.54865646 92.44931030]
[72.55094147 77.88477325]
[87.56679535 71.26065063]
[85.08168030 56.46794128]
[82.59656525 41.67523193]
[80.11144257 26.88252449]
[77.62632751 12.08981800]
[75.14120483 -2.70288897]
[60.13830948 -2.01702809]
[45.16212845 -3.14461064]
[30.43106842 -6.06919289]
[16.15994453 -10.74812603]
[2.55687666 -17.11317825]
[-10.17976570 -25.07152557]
[-21.86424255 -34.50711441]
[-32.32616043 -45.28234482]
[-41.41295624 -57.24008560]
[-48.99211502 -70.20595551]
[-54.95310974 -83.99086761]
[-59.20901489 -98.39380646]
[-61.69776154 -113.20473480]
[-62.38306427 -128.20765686]
[-61.25492096 -143.18379211]
[-58.32978821 -157.91474915]
[-53.65032196 -172.18568420]
[-47.28475952 -185.78852844]
[-39.32593536 -198.52487183]
[-29.88990974 -210.20898438]
[-19.11428642 -220.67050171]
[-7.15620852 -229.75685120]
[5.80994225 -237.33552551]
[19.59508133 -243.29600525]
[33.99817657 -247.55137634]
[48.80919647 -250.03956604]
[63.81214523 -250.72430420]
[78.78823853 -249.59561157]
[93.51908112 -246.66992188]
[107.78985596 -241.98991394]
[121.39244843 -235.62385559]
[134.12849426 -227.66455078]
[145.81227112 -218.22808838]
[156.27337646 -207.45207214]
[165.35928345 -195.49365234]
[172.93746948 -182.52722168]
[178.89743042 -168.74186707]
[183.15226746 -154.33860779]
[185.63990784 -139.52749634]
[186.32408142 -124.52452087]
[185.19482422 -109.54846954]
[182.26858521 -94.81773376]
[177.58804321 -80.54713440]
[171.22146606 -66.94477844]
[163.26168823 -54.20903015]
[153.82479858 -42.52561188]
[143.04838562 -32.06490326]
[131.08963013 -22.97944832]
[118.12291718 -15.40174484]
[104.33732605 -9.44229603]
[89.93391418 -5.18800735]
[92.41902924 9.60470009]
[94.90415192 24.39740753]
[97.38926697 39.19011307]
[99.87438965 53.98282242]
[102.35950470 68.77552795]
[135.98524475 84.48931122]
[136.54824829 129.64237976]
[151.36601257 131.97349548]
[166.26791382 133.68617249]
[181.22816467 134.77749634]
[196.18841553 135.86880493]
[203.34111023 122.42414093]
[215.34783936 113.05621338]
[230.12838745 109.38806152]
[245.12193298 112.05522919]
[257.73074341 120.59559631]
[265.77026367 133.52951050]
[267.84759521 148.61607361]
[263.60284424 163.24147034]
[253.77143860 174.87173462]
[240.05670166 181.49188232]
[224.83483887 181.95491028]
[210.74308777 176.18060303]
[200.22294617 165.16938782]
[195.09710693 150.82904053]
[180.13685608 149.73773193]
[165.17660522 148.64642334]
[162.94465637 150.44247437]
[159.84417725 151.43289185]
[156.18951416 151.27368164]
[152.41664124 149.74511719]
[149.03491211 146.79124451]
[134.21714783 144.46014404]
[128.51664734 149.33396912]
[140.40286255 158.48371887]
[155.09451294 161.50944519]
[163.85856628 173.68284607]
[162.06694031 188.57546997]
[150.66577148 198.32292175]
[135.67567444 197.77787781]
[125.01251984 187.22813416]
[124.30700684 172.24536133]
[117.11562347 159.08161926]
[111.41510773 163.95544434]
[111.41510773 178.95544434]
[111.41510773 193.95544434]
[111.41510773 208.95544434]
[111.41510773 223.95544434]
[111.41510773 238.95544434]
[111.41510773 253.95544434]
[111.41510773 268.95544434]
[111.41510773 283.95544434]
[111.41510773 298.95544434]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[21 37]
[22 36]
[23 35]
[24 34]
[25 33]
[41 102]
[42 101]
[43 100]
[44 99]
[45 98]
[46 97]
[104 130]
[105 129]
[106 124]
[107 123]
[108 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
