%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCAUACCCCGAACCAACCAAACCCCAAAGACACCCCCCACAGUUUAUGUAGCUUACCUCxxxxxxxxxxUCCCUAAUUCCCCCCAUCCUUACCACCCUCGUUAACCCUAACAAAAAAAACUCAUACCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[91.29783630 113.80027008]
[78.35977936 121.39017487]
[65.42172241 128.98008728]
[52.48366547 136.56999207]
[39.54561234 144.15989685]
[26.60755539 151.74980164]
[15.83674622 162.18962097]
[7.84682989 174.88455200]
[-0.14308617 187.57948303]
[-8.13300228 200.27441406]
[-4.38371754 215.62753296]
[-12.66016197 229.09141541]
[-28.05206680 232.67816162]
[-41.42768860 224.25984192]
[-44.85150909 208.83087158]
[-36.29223633 195.54499817]
[-20.82793236 192.28450012]
[-12.83801556 179.58956909]
[-4.84809971 166.89463806]
[3.14181662 154.19970703]
[-10.27092075 160.91523743]
[-24.91724586 164.15332031]
[-39.91092682 163.71801758]
[-54.34471893 159.63566589]
[-67.34525299 152.15327454]
[-78.12588501 141.72360229]
[-86.03428650 128.97773743]
[-90.59194183 114.68691254]
[-91.52306366 99.71583557]
[-88.77131653 84.97039795]
[-82.50320435 71.34282684]
[-73.09800720 59.65769958]
[-61.12480927 50.62207413]
[-47.30809784 44.78268051]
[-32.48390579 42.49285507]
[-17.54922104 43.89115143]
[-3.40772390 48.89295959]
[9.08490276 57.19562531]
[19.17274857 68.29676819]
[26.24541092 81.52467346]
[29.87493134 96.07893372]
[29.84169579 111.07889557]
[26.14771080 125.61693573]
[19.01764679 138.81175232]
[31.95570183 131.22184753]
[44.89375687 123.63193512]
[57.83181381 116.04203033]
[70.76986694 108.45211792]
[83.70792389 100.86221313]
[85.11022949 85.92790222]
[73.81122589 76.06217957]
[62.51222229 66.19645691]
[46.47309494 65.84146881]
[36.86540985 52.99343491]
[41.05936050 37.50827026]
[55.83770370 31.26486588]
[69.86376190 39.05262756]
[72.37794495 54.89745331]
[83.67694855 64.76317596]
[94.97595215 74.62889862]
[89.79002380 60.55388260]
[84.60409546 46.47886276]
[79.41815948 32.40384674]
[70.99195862 19.99420929]
[64.14875793 6.64615107]
[58.99157715 -7.43942404]
[55.59802246 -22.05050850]
[54.01917648 -36.96718597]
[54.27880859 -51.96493912]
[56.37300110 -66.81803131]
[60.27024460 -81.30290222]
[65.91187286 -95.20153809]
[73.21296692 -108.30474091]
[82.06365204 -120.41529083]
[92.33069611 -131.35090637]
[103.85957336 -140.94700623]
[116.47676086 -149.05912781]
[129.99235535 -155.56520081]
[144.20291138 -160.36727905]
[158.89456177 -163.39308167]
[173.84616089 -164.59709167]
[188.83267212 -163.96116638]
[203.62852478 -161.49488831]
[218.01103210 -157.23536682]
[231.76371765 -151.24673462]
[244.67956543 -143.61909485]
[256.56420898 -134.46728516]
[267.23870850 -123.92903900]
[276.54244995 -112.16297150]
[284.33538818 -99.34618378]
[290.50024414 -85.67158508]
[294.94418335 -71.34498596]
[297.60034180 -56.58203506]
[298.42877197 -41.60492706]
[297.41696167 -26.63909149]
[294.58013916 -11.90978336]
[289.96102905 2.36129951]
[283.62915039 15.95935917]
[275.67977905 28.67972565]
[266.23260498 40.33094025]
[255.42979431 50.73763657]
[243.43395996 59.74317932]
[230.42562866 67.21202087]
[216.60063171 73.03174591]
[202.16702271 77.11476135]
[187.34205627 79.39961243]
[172.34887695 79.85190582]
[157.42144775 78.46611786]
[143.40832520 83.81707764]
[129.39521790 89.16803741]
[115.38211060 94.51899719]
[130.24516296 96.54132843]
[145.10820007 98.56366730]
[159.97125244 100.58599854]
[174.93598938 93.87863922]
[188.06680298 103.70278931]
[185.85581970 119.95220947]
[170.57752991 125.91088867]
[157.94891357 115.44905090]
[143.08587646 113.42671204]
[128.22282410 111.40438080]
[113.35977936 109.38204193]
[125.43376923 118.28253174]
[140.14295959 121.22189331]
[153.95481873 127.07275391]
[166.29956055 135.59373474]
[176.66793823 146.43333435]
[184.63220215 159.14436340]
[189.86381531 173.20246887]
[192.14694214 188.02769470]
[191.38740540 203.00845337]
[187.61653137 217.52673340]
[180.98989868 230.98362732]
[171.78085327 242.82395935]
[160.36932373 252.55929565]
[147.22604370 259.78802490]
[132.89324951 264.21191406]
[117.96220398 265.64849854]
[103.04885864 264.03848267]
[88.76844025 259.44830322]
[75.71006775 252.06732178]
[64.41244507 242.20001221]
[55.34163666 230.25344849]
[48.87184143 216.72045898]
[45.26995850 202.15933228]
[44.68458176 187.17076111]
[47.13985443 172.37307739]
[52.53449631 158.37672424]
[60.64595413 145.75910950]
[71.13960266 135.04074097]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 49]
[2 48]
[3 47]
[4 46]
[5 45]
[6 44]
[7 20]
[8 19]
[9 18]
[10 17]
[50 60]
[51 59]
[52 58]
[111 122]
[112 121]
[113 120]
[114 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
