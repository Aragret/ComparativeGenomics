%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGAACCCUCCAUAAACCUGGAGUGACUAUAUGGAUGCCCCCCACCCUACCACACAUUCGAAxxxxxxxxxxACAUUCGAAGAACCCGUAUACAUAAAAUCUAGACAAAAAAGGAAGGAAUCGAACCCCCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[235.02362061 50.16573334]
[221.24124146 56.08569336]
[207.45886230 62.00565720]
[198.81835938 74.13788605]
[183.08477783 72.47509003]
[169.30239868 78.39505768]
[155.52000427 84.31501770]
[141.73762512 90.23497772]
[127.95524597 96.15494537]
[114.17286682 102.07490540]
[105.65314484 113.16120148]
[91.74709320 111.70747375]
[82.12078094 124.26313782]
[67.37300873 122.17691040]
[53.59062576 128.09687805]
[40.42204285 135.27937317]
[27.98260117 143.66152954]
[15.54316139 152.04367065]
[3.10372090 160.42581177]
[-9.33571911 168.80795288]
[-12.11210632 184.36645508]
[-25.12443542 193.33612061]
[-40.65272141 190.39540100]
[-49.48431015 177.28897095]
[-46.37957382 161.79263306]
[-33.18050003 153.10011292]
[-17.71786308 156.36851501]
[-5.27842236 147.98637390]
[7.16101789 139.60423279]
[19.60045815 131.22207642]
[32.03989792 122.83994293]
[17.14129448 121.09879303]
[5.45559597 111.69430542]
[0.56899577 97.51258087]
[3.98112869 82.90583038]
[14.64485455 72.35665894]
[29.28761292 69.10248566]
[43.41572571 74.14196777]
[52.69345856 85.92855835]
[54.27359009 100.84510040]
[47.67066193 114.31449127]
[61.45304108 108.39452362]
[70.09355164 96.26229858]
[85.82713318 97.92509460]
[94.34685516 86.83879852]
[108.25290680 88.29252625]
[122.03528595 82.37255859]
[135.81767273 76.45259857]
[149.60005188 70.53263855]
[163.38243103 64.61267090]
[177.16481018 58.69271088]
[186.79112244 46.13704681]
[201.53889465 48.22327805]
[215.32128906 42.30331421]
[229.10366821 36.38335037]
[222.27943420 10.19312668]
[220.61064148 -16.81620026]
[224.15789795 -43.63962555]
[232.78775024 -69.27935028]
[246.17771912 -92.78189087]
[263.82830811 -113.27355194]
[285.08166504 -129.99287415]
[309.14617920 -142.31898499]
[335.12576294 -149.79458618]
[362.05343628 -152.14295959]
[362.98904419 -167.11375427]
[363.92468262 -182.08454895]
[364.86032104 -197.05534363]
[365.79595947 -212.02612305]
[366.73156738 -226.99691772]
[353.21322632 -234.00936890]
[343.72091675 -245.91801453]
[339.89920044 -260.65960693]
[342.41024780 -275.68008423]
[350.81900024 -288.37704468]
[363.66857910 -296.55065918]
[378.73272705 -298.78482056]
[393.40148926 -294.69244385]
[405.13339233 -284.98254395]
[411.89584351 -271.33743286]
[412.51718140 -256.12118530]
[406.88980103 -241.97015381]
[395.98861694 -231.33604431]
[381.70236206 -226.06129456]
[380.76672363 -211.09049988]
[379.83111572 -196.11970520]
[378.89547729 -181.14892578]
[377.95983887 -166.17813110]
[377.02423096 -151.20733643]
[386.12335205 -149.84651184]
[395.11380005 -147.89144897]
[403.95675659 -145.35057068]
[412.61410522 -142.23478699]
[421.04849243 -138.55751038]
[429.22360229 -134.33456421]
[437.10412598 -129.58415222]
[444.65612793 -124.32669830]
[451.84698486 -118.58486176]
[458.64569092 -112.38337708]
[465.02291870 -105.74895477]
[470.95117188 -98.71017456]
[476.40484619 -91.29737091]
[481.36044312 -83.54248047]
[485.79653931 -75.47891235]
[489.69403076 -67.14143372]
[493.03604126 -58.56595993]
[495.80816650 -49.78945923]
[497.99841309 -40.84975433]
[499.59735107 -31.78538513]
[500.59799194 -22.63541985]
[500.99606323 -13.43930244]
[500.78976440 -4.23667622]
[499.98001099 4.93278408]
[498.57022095 14.02954674]
[496.56646729 23.01438904]
[493.97735596 31.84857368]
[490.81402588 40.49400330]
[487.09008789 48.91340256]
[482.82156372 57.07046127]
[478.02685547 64.93000031]
[472.72659302 72.45812225]
[466.94357300 79.62236023]
[460.70275879 86.39180756]
[454.03100586 92.73726654]
[446.95706177 98.63135529]
[439.51141357 104.04864502]
[431.72613525 108.96575928]
[423.63479614 113.36148071]
[415.27221680 117.21682739]
[406.67446899 120.51516724]
[397.87863159 123.24224091]
[388.92254639 125.38626862]
[379.84490967 126.93798828]
[370.68478394 127.89067841]
[361.48165894 128.24020386]
[352.27523804 127.98502350]
[343.10519409 127.12622070]
[334.01107788 125.66746521]
[325.03210449 123.61502838]
[316.20693970 120.97771454]
[307.57369995 117.76688385]
[299.16955566 113.99633789]
[291.03079224 109.68231964]
[283.19250488 104.84339905]
[275.68847656 99.50040436]
[268.55108643 93.67636108]
[261.81112671 87.39634705]
[255.49766541 80.68742371]
[249.63795471 73.57848358]
[244.25724792 66.10016632]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 55]
[2 54]
[3 53]
[5 51]
[6 50]
[7 49]
[8 48]
[9 47]
[10 46]
[12 44]
[14 42]
[15 41]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[65 89]
[66 88]
[67 87]
[68 86]
[69 85]
[70 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
