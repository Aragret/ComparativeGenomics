%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACAAGCAUCAAGCACGCAGCAAUGCAGCUCAAAACGCUUAGCCUAGCCACACCCCCACGGxxxxxxxxxxAUUCAAGCACUGCUUAUUACAAUUUUACUGGGUCUCUAUUUUACCCUCCUACAAGCCUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-42.48337555 133.08224487]
[-57.24943161 135.72111511]
[-72.01548767 138.35997009]
[-86.78153992 140.99884033]
[-101.54759979 143.63771057]
[-113.77136230 153.68211365]
[-127.66131592 148.30451965]
[-139.88507080 158.34893799]
[-153.77502441 152.97134399]
[-168.54107666 155.61021423]
[-176.49902344 160.22789001]
[-183.64155579 158.14703369]
[-198.28504944 161.39785767]
[-212.69726562 165.55574036]
[-227.10948181 169.71363831]
[-241.52169800 173.87152100]
[-245.30967712 190.97552490]
[-257.14929199 203.76705933]
[-273.74038696 208.81222534]
[-290.52435303 204.81826782]
[-302.93658447 192.96325684]
[-317.16336060 197.71707153]
[-331.39013672 202.47088623]
[-337.86636353 213.67413330]
[-349.86361694 217.31893921]
[-360.75588989 211.96492004]
[-375.07849121 216.42173767]
[-389.40109253 220.87855530]
[-400.12191772 233.28805542]
[-416.17626953 229.94294739]
[-421.04879761 214.28439331]
[-409.72708130 202.42056274]
[-393.85791016 206.55595398]
[-379.53530884 202.09913635]
[-365.21270752 197.64231873]
[-354.06137085 184.12759399]
[-336.14395142 188.24411011]
[-321.91717529 183.49029541]
[-307.69039917 178.73648071]
[-306.49819946 166.08822632]
[-300.56930542 154.79924011]
[-290.76086426 146.57823181]
[-278.52020264 142.68472290]
[-265.67135620 143.73626709]
[-254.14308167 149.61071777]
[-245.67958069 159.45930481]
[-231.26736450 155.30142212]
[-216.85514832 151.14352417]
[-202.44293213 146.98564148]
[-214.77700806 138.44921875]
[-217.65151978 123.72721863]
[-209.43446350 111.17812347]
[-194.79107666 107.92673492]
[-182.03523254 115.81903076]
[-178.40910339 130.37414551]
[-185.97265625 143.32926941]
[-171.17994690 140.84416199]
[-156.41389465 138.20529175]
[-145.24629211 128.34962463]
[-130.30017090 133.53846741]
[-119.13258362 123.68280792]
[-104.18646240 128.87164307]
[-89.42041016 126.23278046]
[-74.65435028 123.59391785]
[-59.88829422 120.95505524]
[-45.12224197 118.31619263]
[-46.26973343 101.05483246]
[-45.37131119 83.77872467]
[-42.43953705 66.72950745]
[-37.51542282 50.14565277]
[-30.66784096 34.25912476]
[-21.99257278 19.29213333]
[-11.61095810 5.45402479]
[0.33178902 -7.06164217]
[13.66862392 -18.07980728]
[28.21299934 -27.44635773]
[43.76148224 -35.03028107]
[60.09658813 -40.72549438]
[76.98983002 -44.45234299]
[94.20492554 -46.15869522]
[111.50107574 -45.82068634]
[128.63636780 -43.44304276]
[145.37110901 -39.05901718]
[161.47122192 -32.72993851]
[176.71153259 -24.54432678]
[185.22261047 -36.89589691]
[193.73370361 -49.24747086]
[202.24479675 -61.59904480]
[206.25323486 -78.07231903]
[223.19236755 -78.78079224]
[228.56237793 -62.69977188]
[214.59637451 -53.08795166]
[206.08528137 -40.73638153]
[197.57418823 -28.38480759]
[189.06309509 -16.03323555]
[197.05192566 -9.43889618]
[204.55400085 -2.29569006]
[211.53170776 5.36055708]
[217.95005798 13.49144745]
[223.77685547 22.05620193]
[228.98287964 31.01186562]
[233.54202271 40.31352615]
[237.43141174 49.91452789]
[240.63154602 59.76672363]
[243.12637329 69.82070160]
[244.90338135 80.02603149]
[245.95365906 90.33154297]
[246.27192688 100.68553925]
[245.85661316 111.03610229]
[244.70979309 121.33131409]
[259.41775513 124.27679443]
[274.12570190 127.22228241]
[288.83367920 130.16775513]
[299.48629761 119.00868225]
[314.48626709 115.40252686]
[329.04714966 120.50000763]
[338.52261353 132.67453003]
[339.88906860 148.04125977]
[332.71051025 161.69673157]
[319.27755737 169.28350830]
[303.87661743 168.38070679]
[291.42211914 159.27639771]
[285.88818359 144.87571716]
[271.18023682 141.93023682]
[256.47225952 138.98475647]
[241.76429749 136.03927612]
[237.33364868 150.35292053]
[231.46192932 164.13819885]
[224.21075439 177.25047302]
[215.65621948 189.55215454]
[205.88807678 200.91413879]
[195.00885010 211.21720886]
[183.13265991 220.35325623]
[170.38415527 228.22642517]
[156.89709473 234.75410461]
[142.81300354 239.86776733]
[128.27967834 243.51379395]
[113.44960022 245.65388489]
[98.47840118 246.26562500]
[83.52316284 245.34255981]
[68.74081421 242.89440918]
[54.28647995 238.94682312]
[40.31182480 233.54125977]
[26.96348572 226.73442078]
[14.38153076 218.59774780]
[2.69798422 209.21659851]
[-7.96455622 198.68942261]
[-17.49420738 187.12667847]
[-25.79097176 174.64970398]
[-32.76779175 161.38941956]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 66]
[2 65]
[3 64]
[4 63]
[5 62]
[7 60]
[9 58]
[10 57]
[12 56]
[13 49]
[14 48]
[15 47]
[16 46]
[21 39]
[22 38]
[23 37]
[26 35]
[27 34]
[28 33]
[85 95]
[86 94]
[87 93]
[88 92]
[110 126]
[111 125]
[112 124]
[113 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
