%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUAGGCCUACUAACCAACACACUAACCAUAUACCAAUGAUGGCGCGAUGUAACACGAGAAAxxxxxxxxxxCCAACAUACUCGGAUUCUACCCUAGCAUCACACACCGCACAAUCCCCUAUCUAGGCCUUCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[120.35833740 278.22976685]
[120.35833740 263.22976685]
[120.35833740 248.22978210]
[120.35833740 233.22978210]
[120.35833740 218.22978210]
[120.35833740 203.22978210]
[120.35833740 188.22978210]
[120.35833740 173.22978210]
[120.35833740 158.22978210]
[120.35833740 143.22978210]
[113.31063843 140.66462708]
[92.16755676 132.96917725]
[82.52574158 144.45983887]
[72.88392639 155.95050049]
[72.84414673 171.99351501]
[60.18736649 181.85177612]
[44.62278748 177.96289062]
[38.09022141 163.31007385]
[45.60089493 149.13371277]
[61.39326096 146.30868530]
[71.03507233 134.81802368]
[80.67688751 123.32735443]
[80.02001953 114.91454315]
[81.99727631 107.68522644]
[66.99806976 107.83922577]
[51.99885941 107.99322510]
[38.27884674 115.87179565]
[25.47281075 108.26556396]
[10.47360229 108.41956329]
[5.72443628 122.79747009]
[-3.43789077 134.85278320]
[-16.01951790 143.27781677]
[-30.65568542 147.15872192]
[-45.75876999 146.07449341]
[-59.69050217 140.14274597]
[-70.93967438 130.00692749]
[-78.28605652 116.76647949]
[-80.93276978 101.85763550]
[-78.59272003 86.89759064]
[-71.51973724 73.50910950]
[-60.48104477 63.14445496]
[-46.67403793 56.92792130]
[-31.59639740 55.53382874]
[-16.88363457 59.11339569]
[-4.13167763 67.27834320]
[5.27623558 79.14299011]
[10.31960487 93.42035675]
[25.31881523 93.26635742]
[37.96598053 85.39880371]
[51.84486008 92.99401093]
[66.84407043 92.84001923]
[81.84327698 92.68601990]
[110.94755554 77.59923553]
[126.19309998 115.21413422]
[132.18139648 101.46130371]
[138.16969299 87.70847321]
[136.58500671 71.96683502]
[148.75997925 63.38665009]
[154.74827576 49.63381958]
[160.73657227 35.88098907]
[151.12916565 25.35312843]
[147.39485168 11.01805305]
[150.89714050 -3.95218277]
[161.33601379 -15.99259853]
[176.70292664 -21.99260712]
[178.24021912 -36.91362381]
[179.77751160 -51.83464050]
[181.31480408 -66.75565338]
[167.26770020 -72.28572083]
[155.23420715 -81.40149689]
[146.10725403 -93.42653656]
[140.56414795 -107.46849060]
[139.01622009 -122.48536682]
[141.57833862 -137.36280823]
[148.06036377 -150.99679565]
[157.98130798 -162.37562561]
[170.60494995 -170.65489197]
[184.99453735 -175.22021484]
[200.08227539 -175.73283386]
[214.74855042 -172.15470886]
[227.90501404 -164.75134277]
[238.57539368 -154.07212830]
[245.96786499 -140.90951538]
[249.53384399 -126.24028778]
[249.00872803 -111.15298462]
[244.43148804 -96.76718140]
[236.14176941 -84.15039825]
[224.75473022 -74.23889160]
[211.11537170 -67.76815796]
[196.23582458 -65.21836090]
[194.69853210 -50.29734802]
[193.16123962 -35.37633133]
[191.62394714 -20.45531464]
[204.21238708 -12.29864883]
[217.20275879 -19.79864883]
[230.19314575 -27.29864883]
[238.27578735 -40.89943314]
[253.16658020 -40.56237030]
[266.15695190 -48.06237030]
[279.14733887 -55.56237030]
[289.84127808 -68.71822357]
[305.44335938 -62.08412552]
[303.38760376 -45.25527191]
[286.64733887 -42.57199097]
[273.65695190 -35.07199097]
[260.66659546 -27.57198906]
[253.51309204 -14.50765514]
[237.69314575 -14.30826759]
[224.70275879 -6.80826759]
[211.71238708 0.69173223]
[210.14936829 23.88765717]
[194.96035767 39.68845367]
[174.48939514 41.86928558]
[168.50109863 55.62211609]
[162.51280212 69.37494659]
[164.52580261 84.13289642]
[151.92251587 93.69676971]
[145.93421936 107.44960022]
[139.94592285 121.20243073]
[147.31919861 108.13970184]
[157.65548706 97.26950073]
[170.33061218 89.24822235]
[184.57922363 84.56023407]
[199.54089355 83.48860931]
[214.31217957 86.09806824]
[228.00109863 92.23104095]
[239.78106689 101.51717377]
[248.94075012 113.39573669]
[254.92703247 127.14944458]
[257.37844849 141.94778442]
[256.14694214 156.89714050]
[251.30688477 171.09481812]
[243.15057373 183.68347168]
[232.17050171 193.90296936]
[219.02969360 201.13616943]
[204.52166748 204.94633484]
[189.52249146 205.10334778]
[174.93788147 201.59776306]
[161.64852905 194.64125061]
[150.45690918 184.65386963]
[142.03883362 172.23870850]
[136.90261841 158.14547729]
[135.35833740 143.22978210]
[135.35833740 158.22978210]
[135.35833740 173.22978210]
[135.35833740 188.22978210]
[135.35833740 203.22978210]
[135.35833740 218.22978210]
[135.35833740 233.22978210]
[135.35833740 248.22978210]
[135.35833740 263.22976685]
[135.35833740 278.22976685]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[12 22]
[13 21]
[14 20]
[24 52]
[25 51]
[26 50]
[28 48]
[29 47]
[54 119]
[55 118]
[56 117]
[58 115]
[59 114]
[60 113]
[65 93]
[66 92]
[67 91]
[68 90]
[94 110]
[95 109]
[96 108]
[98 106]
[99 105]
[100 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
