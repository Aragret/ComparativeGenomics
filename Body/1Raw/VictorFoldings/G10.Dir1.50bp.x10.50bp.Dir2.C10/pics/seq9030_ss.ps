%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGCCUAGCCCCUACCCCCCAAUUAGGAGGGCACUGGCCCCCAACAGGCAUCACCCCGCUAxxxxxxxxxxUAUGGUAUAAUACGCCUCACACUCAUUCUCAACCCCCUGACAAAACACAUAGCCUACCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-0.62458771 252.55012512]
[-9.39079475 264.72195435]
[-18.15700150 276.89379883]
[-26.92321014 289.06564331]
[-35.68941498 301.23748779]
[-44.45562363 313.40930176]
[-52.96671295 325.76089478]
[-61.21900177 338.28686523]
[-69.47129059 350.81280518]
[-77.72357941 363.33877563]
[-73.07714844 378.27011108]
[-79.16310120 392.67480469]
[-93.10783386 399.75140381]
[-108.32707977 396.15853882]
[-117.63477325 383.59268188]
[-116.63610077 367.98703003]
[-105.80261230 356.71008301]
[-90.24954224 355.08648682]
[-81.99725342 342.56051636]
[-73.74496460 330.03454590]
[-65.49267578 317.50860596]
[-65.57756805 312.67453003]
[-62.58231735 307.74911499]
[-56.62746048 304.64309692]
[-47.86125183 292.47128296]
[-39.09504700 280.29943848]
[-30.32883835 268.12759399]
[-21.56263161 255.95576477]
[-12.79642487 243.78392029]
[-36.77605438 221.19885254]
[-56.31164551 194.67585754]
[-70.76846313 165.07673645]
[-79.67678833 133.36317444]
[-82.74717712 100.56559753]
[-79.87985992 67.74964905]
[-94.52336121 64.49881744]
[-103.64579773 65.69590759]
[-109.43619537 61.02504349]
[-124.00889587 57.47028351]
[-138.58160400 53.91551971]
[-153.15429688 50.36075974]
[-168.73461914 55.47794342]
[-180.77432251 44.34341431]
[-176.88798523 28.41141891]
[-161.07354736 24.07143211]
[-149.59953308 35.78805542]
[-135.02684021 39.34281921]
[-120.45413208 42.89757919]
[-105.88143158 46.45234299]
[-91.27253723 49.85531998]
[-76.62903595 53.10614395]
[-69.40066528 31.44152451]
[-59.52653122 10.84767723]
[-47.16084671 -8.35375404]
[-32.49674606 -25.86287308]
[-15.76325798 -41.40621948]
[-24.78078651 -53.39305115]
[-40.40070343 -57.05334473]
[-47.14737701 -71.60881805]
[-39.84533310 -85.89376831]
[-24.09607887 -88.94999695]
[-11.98109245 -78.43302917]
[-12.79395485 -62.41057968]
[-3.77642488 -50.42374802]
[3.74526691 -55.34437943]
[11.49980354 -59.88922882]
[19.46842575 -64.04729462]
[27.63185692 -67.80852509]
[35.97035217 -71.16382599]
[44.46373749 -74.10506439]
[53.09146500 -76.62513733]
[61.83266830 -78.71794891]
[70.66619873 -80.37843323]
[79.57068634 -81.60256958]
[88.52459717 -82.38740540]
[97.50627136 -82.73103333]
[106.49397278 -82.63262939]
[115.46596527 -82.09243011]
[124.40054321 -81.11174011]
[133.27610779 -79.69293976]
[142.07115173 -77.83944702]
[150.76445007 -75.55574799]
[159.33493042 -72.84738159]
[167.76188660 -69.72087860]
[176.02491760 -66.18382263]
[184.10403442 -62.24475861]
[191.97970581 -57.91321564]
[199.63287354 -53.19967270]
[207.04502869 -48.11553574]
[214.19824219 -42.67309952]
[221.07519531 -36.88552856]
[227.65925598 -30.76682663]
[233.93452454 -24.33179474]
[239.88577271 -17.59599876]
[245.49865723 -10.57573128]
[250.75955200 -3.28797698]
[255.65576172 4.24963570]
[260.17544556 12.01887226]
[264.30764771 20.00094032]
[268.04235840 28.17652893]
[271.37060547 36.52585983]
[274.28427124 45.02873993]
[276.77636719 53.66459656]
[278.84078979 62.41254425]
[280.47262573 71.25141144]
[281.66787720 80.15982819]
[282.42367554 89.11623383]
[282.73815918 98.09897614]
[282.61059570 107.08631134]
[282.04132080 116.05650330]
[281.03164673 124.98785400]
[279.58404541 133.85876465]
[277.70205688 142.64776611]
[275.39016724 151.33360291]
[272.65402222 159.89524841]
[269.50021362 168.31201172]
[265.93637085 176.56353760]
[261.97109985 184.62983704]
[257.61404419 192.49142456]
[252.87570190 200.12925720]
[247.76754761 207.52488708]
[242.30194092 214.66040039]
[236.49209595 221.51853943]
[230.35208130 228.08273315]
[223.89672852 234.33708191]
[217.14166260 240.26646423]
[210.10322571 245.85653687]
[202.79844666 251.09378052]
[195.24499512 255.96551514]
[187.46113586 260.45996094]
[179.46569824 264.56625366]
[171.27804565 268.27444458]
[162.91796875 271.57559204]
[154.40567017 274.46166992]
[145.76177979 276.92572021]
[137.00718689 278.96179199]
[128.16307068 280.56491089]
[119.25082397 281.73126221]
[110.29200745 282.45800781]
[101.30830383 282.74337769]
[92.32142639 282.58666992]
[83.35312653 281.98828125]
[74.42509460 280.94964600]
[65.55892944 279.47329712]
[56.77608109 277.56277466]
[48.09779358 275.22274780]
[39.54505920 272.45883179]
[31.13856697 269.27774048]
[22.89865303 265.68716431]
[14.84525204 261.69577026]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[3 27]
[4 26]
[5 25]
[6 24]
[7 21]
[8 20]
[9 19]
[10 18]
[35 51]
[36 50]
[38 49]
[39 48]
[40 47]
[41 46]
[56 64]
[57 63]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
