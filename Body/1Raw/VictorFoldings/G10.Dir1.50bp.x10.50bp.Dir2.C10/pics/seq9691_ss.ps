%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUACUAGUCUCAAUCUCCAACACAUAUGGCCUAGACUACGUACAUAACCUAAACCUACUCCAxxxxxxxxxxGUAACCACGUUCUCCUGAUCAAAUAUCACUCUCCUACUUACAGGACUCAACAUACUAGUCACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 258.23681641]
[92.50000000 243.23681641]
[92.50000000 228.23681641]
[92.50000000 213.23681641]
[92.50000000 198.23681641]
[92.50000000 183.23681641]
[92.50000000 168.23681641]
[92.50000000 153.23681641]
[92.50000000 138.23681641]
[92.50000000 123.23680878]
[86.53086853 118.69594574]
[84.63488007 133.57563782]
[70.80065155 139.37341309]
[58.86258698 130.29141235]
[60.75889969 115.41176605]
[74.59260559 109.61421204]
[68.62347412 105.07334137]
[54.16745758 109.07629395]
[39.71144104 113.07924652]
[25.25542641 117.08219910]
[10.79941177 121.08515167]
[8.68653107 132.44902039]
[2.49042368 142.14552307]
[-6.85024261 148.77748108]
[-17.94714546 151.40661621]
[-29.16860199 149.68605042]
[-38.87948608 143.90562439]
[-45.67948532 134.94387817]
[-60.34961700 138.07232666]
[-75.01974487 141.20079041]
[-82.19163513 155.09677124]
[-96.63764954 161.08396912]
[-111.53682709 156.33543396]
[-119.85422516 143.09327698]
[-117.66262817 127.61003113]
[-105.99684143 117.19641113]
[-90.36508942 116.76942444]
[-78.14820862 126.53066254]
[-63.47807693 123.40219879]
[-48.80794525 120.27374268]
[-42.28068542 102.82141876]
[-26.46349525 92.69316864]
[-7.58394289 94.08899689]
[6.79646015 106.62913513]
[21.25247574 102.62618256]
[35.70849228 98.62322998]
[50.16450500 94.62027740]
[64.62052155 90.61733246]
[71.81524658 77.45541382]
[67.38025665 63.12604141]
[62.94527435 48.79666901]
[58.51029205 34.46729660]
[43.62256241 36.55336761]
[28.59300041 36.22412872]
[13.81090450 33.48810577]
[-0.34083179 28.41617203]
[-13.49564457 21.13969803]
[-25.31279182 11.84716415]
[-35.48618317 0.77926975]
[-43.75230026 -11.77730083]
[-49.89703369 -25.49730110]
[-53.76121902 -40.02535248]
[-55.24476624 -54.98514175]
[-54.30924225 -69.98917389]
[-50.97888565 -84.64880371]
[-45.33995819 -98.58432770]
[-37.53852081 -111.43476105]
[-27.77664948 -122.86726379]
[-16.30720139 -132.58569336]
[-3.42726374 -140.33833313]
[10.52954388 -145.92436218]
[25.20170593 -149.19908142]
[40.20917892 -150.07768250]
[55.16323090 -148.53739929]
[69.67652130 -144.61813354]
[83.37311554 -138.42140198]
[95.89823914 -130.10771179]
[106.92745972 -119.89241028]
[116.17510223 -108.04010010]
[123.40162659 -94.85778046]
[128.41984558 -80.68690491]
[131.09977722 -65.89453888]
[131.37199402 -50.86383438]
[129.22946167 -35.98412704]
[124.72767639 -21.64083290]
[117.98323822 -8.20548058]
[109.17083740 3.97392249]
[98.51875305 14.58190060]
[86.30288696 23.34368134]
[72.83966827 30.03231430]
[77.27465057 44.36168671]
[81.70963287 58.69105911]
[86.14461517 73.02043152]
[101.43270111 73.09355927]
[112.92756653 80.30377197]
[118.05680847 91.00097656]
[132.66140747 87.57960510]
[147.26600647 84.15824127]
[161.87060547 80.73687744]
[176.47520447 77.31550598]
[176.78559875 62.23722839]
[180.83685303 47.71007919]
[188.37429810 34.64723969]
[198.92411804 23.86985779]
[211.82315063 16.05540657]
[226.26055908 11.69510841]
[241.32878113 11.06305599]
[256.08062744 14.19898129]
[269.58877563 20.90575790]
[281.00408936 30.76178932]
[289.60900879 43.14752197]
[294.86257935 57.28437042]
[296.43463135 72.28369141]
[294.22628784 87.20260620]
[288.37637329 101.10330200]
[279.25262451 113.11196899]
[267.42855835 122.47373199]
[253.64747620 128.60009766]
[238.77565002 131.10597229]
[223.74792480 129.83383179]
[209.50895691 124.86362457]
[196.95384216 116.50779724]
[186.87179565 105.29160309]
[179.89656067 91.92010498]
[165.29196167 95.34146881]
[150.68737793 98.76284027]
[136.08277893 102.18420410]
[121.47817993 105.60556793]
[135.93521118 109.60485840]
[150.39224243 113.60414124]
[165.16369629 110.99569702]
[179.94657898 113.53862000]
[192.99736023 120.93299866]
[202.77684021 132.30673218]
[208.13160706 146.31838989]
[208.43009949 161.31541443]
[203.63713074 175.52905273]
[194.31797791 187.28292847]
[181.57176208 195.19076538]
[166.90177917 198.31990051]
[152.03822327 196.30130005]
[138.73411560 189.37303162]
[128.55857849 178.35223389]
[122.71170044 164.53868103]
[121.88276672 149.56428528]
[114.69138336 136.40054321]
[107.50000000 123.23680878]
[107.50000000 138.23681641]
[107.50000000 153.23681641]
[107.50000000 168.23681641]
[107.50000000 183.23681641]
[107.50000000 198.23681641]
[107.50000000 213.23681641]
[107.50000000 228.23681641]
[107.50000000 243.23681641]
[107.50000000 258.23681641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[3 154]
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[9 148]
[10 147]
[17 48]
[18 47]
[19 46]
[20 45]
[21 44]
[28 40]
[29 39]
[30 38]
[49 93]
[50 92]
[51 91]
[52 90]
[96 128]
[97 127]
[98 126]
[99 125]
[100 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
