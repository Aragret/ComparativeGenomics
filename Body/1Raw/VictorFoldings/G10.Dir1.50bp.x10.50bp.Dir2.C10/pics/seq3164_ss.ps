%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACACCCACCCAAGAACAGGGUUUGUUAAGAUGGCAGAGCCCGGUAAUCGCAUAAAACUUAAxxxxxxxxxxAUAUUACUACCACUGACAUGACUUUCCAAAAAACACAUAAUUUGAAUCAACACAACCACCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[100.83155823 292.07843018]
[100.83155823 277.07843018]
[100.83155823 262.07843018]
[100.83155823 247.07841492]
[100.83155823 232.07841492]
[100.83155823 217.07841492]
[100.83155823 202.07841492]
[100.83155823 187.07841492]
[100.83155823 172.07841492]
[100.83155823 157.07841492]
[87.43212891 150.33636475]
[75.38684845 159.27568054]
[68.91612244 173.71313477]
[54.08480835 175.08480835]
[42.03952408 184.02410889]
[29.99424362 192.96340942]
[17.94895935 201.90270996]
[20.37679863 217.01443481]
[15.49278259 231.51979065]
[4.41922331 242.08552551]
[-10.29925537 246.28373718]
[-25.28045654 243.14968872]
[-37.08181000 233.40357971]
[-42.99144745 219.28498840]
[-41.65138245 204.03825378]
[-33.36954880 191.16697693]
[-20.04905128 183.62887573]
[-4.75084543 183.15614319]
[9.00965595 189.85743713]
[21.05493736 180.91813660]
[33.10021973 171.97882080]
[45.14550400 163.03952026]
[50.75466919 149.24145508]
[66.44754028 147.23039246]
[78.49282074 138.29109192]
[62.62405014 113.14279938]
[67.23498535 86.80800629]
[86.02970123 72.30094910]
[82.71306610 57.67221069]
[79.39642334 43.04347229]
[75.78398895 28.48496056]
[71.87723541 14.00265217]
[67.97048187 -0.47965765]
[56.90596390 -11.78836727]
[61.06140900 -26.09156799]
[57.15465546 -40.57387924]
[53.24790192 -55.05618668]
[39.23742294 -57.13704300]
[27.12063599 -64.38822937]
[18.71713066 -75.68219757]
[15.27408791 -89.28728485]
[17.28126526 -103.13315582]
[24.40162659 -115.12586975]
[35.52740479 -123.46453094]
[31.91496849 -138.02304077]
[28.30253029 -152.58155823]
[24.69009209 -167.14007568]
[21.07765579 -181.69857788]
[6.01566792 -181.40829468]
[-8.73317337 -184.47740173]
[-22.42907333 -190.75195312]
[-34.38505173 -199.91723633]
[-44.00139618 -211.51351929]
[-50.79576492 -224.95912170]
[-54.42734528 -239.57963562]
[-54.71398544 -254.64169312]
[-51.64130402 -269.38977051]
[-45.36343002 -283.08416748]
[-36.19525146 -295.03793335]
[-24.59664726 -304.65145874]
[-11.14939499 -311.44256592]
[3.47199583 -315.07061768]
[18.53412247 -315.35360718]
[33.28147507 -312.27734375]
[46.97433090 -305.99615479]
[58.92586517 -296.82507324]
[68.53659058 -285.22415161]
[75.32444000 -271.77523804]
[78.94893646 -257.15298462]
[79.22827911 -242.09077454]
[76.14845276 -227.34417725]
[69.86393738 -213.65283203]
[60.68997192 -201.70352173]
[49.08670807 -192.09561157]
[35.63616943 -185.31101990]
[39.24860382 -170.75250244]
[42.86104202 -156.19400024]
[46.47348022 -141.63548279]
[50.08591843 -127.07696533]
[65.76362610 -124.12803650]
[78.64099884 -114.61405945]
[86.11981201 -100.39179993]
[86.66378021 -84.27414703]
[80.11389923 -69.47380829]
[67.73020935 -58.96294022]
[71.63696289 -44.48062897]
[75.54371643 -29.99831963]
[86.32880402 -19.72548294]
[82.45279694 -4.38640976]
[86.35954285 10.09589958]
[90.26629639 24.57820892]
[93.93659973 27.71708107]
[95.63832092 33.21706009]
[94.02516174 39.72683334]
[97.34180450 54.35557175]
[100.65843964 68.98430634]
[122.96054077 73.15994263]
[139.00236511 93.03507996]
[138.33508301 121.42866516]
[153.31582642 122.18840027]
[168.29656982 122.94813538]
[183.27732849 123.70787811]
[191.55313110 110.76930237]
[205.19685364 103.71632385]
[220.53839111 104.44615936]
[233.45095825 112.76247406]
[240.46113586 126.42823792]
[239.68321228 141.76741028]
[231.32646179 154.65385437]
[217.63879395 161.62115479]
[202.30213928 160.79516602]
[189.44195557 152.39805603]
[182.51759338 138.68862915]
[167.53683472 137.92889404]
[152.55609131 137.16914368]
[137.57534790 136.40940857]
[132.13940430 141.57666016]
[144.92199707 149.42555237]
[157.70460510 157.27442932]
[170.48721313 165.12332153]
[185.43132019 166.41696167]
[198.25529480 174.19808960]
[206.30413818 186.85572815]
[207.91148376 201.76936340]
[202.74455261 215.85136414]
[191.87307739 226.18630981]
[177.54780579 230.63452148]
[162.73454285 228.27507019]
[150.50010681 219.59643555]
[143.37742615 206.39540100]
[142.84165955 191.40238953]
[135.65026855 178.23864746]
[128.45889282 165.07490540]
[121.26750946 151.91116333]
[115.83155823 157.07841492]
[115.83155823 172.07841492]
[115.83155823 187.07841492]
[115.83155823 202.07841492]
[115.83155823 217.07841492]
[115.83155823 232.07841492]
[115.83155823 247.07841492]
[115.83155823 262.07843018]
[115.83155823 277.07843018]
[115.83155823 292.07843018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 154]
[2 153]
[3 152]
[4 151]
[5 150]
[6 149]
[7 148]
[8 147]
[9 146]
[10 145]
[11 35]
[12 34]
[14 32]
[15 31]
[16 30]
[17 29]
[38 106]
[39 105]
[40 104]
[41 101]
[42 100]
[43 99]
[45 97]
[46 96]
[47 95]
[54 89]
[55 88]
[56 87]
[57 86]
[58 85]
[109 126]
[110 125]
[111 124]
[112 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
