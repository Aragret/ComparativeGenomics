%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUAAAUCCCCUAGAAGUCCCACUCCUAAACACAUCCGUAUUACUCGCAUCAGGAGUAUCAxxxxxxxxxxUAAAAGUAAUAACCAUGCACACUACUAUAACCACCCUAACCCUGACUUCCCUAAUUCCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 298.95401001]
[92.50000000 283.95401001]
[92.50000000 268.95401001]
[92.50000000 253.95402527]
[92.50000000 238.95402527]
[92.50000000 223.95402527]
[92.50000000 208.95402527]
[92.50000000 193.95402527]
[92.50000000 178.95402527]
[92.50000000 163.95402527]
[78.40219879 160.66218567]
[65.39608765 154.30410767]
[54.13908768 145.20114136]
[45.20019150 133.81341553]
[39.03122711 120.71654510]
[35.94402313 106.57252502]
[36.09461975 92.09629059]
[39.47540665 78.01956177]
[45.91549683 65.05385590]
[55.08936691 53.85456467]
[66.53330994 44.98775482]
[79.66887665 38.90162277]
[93.83210754 35.90379333]
[94.14416504 20.90704155]
[94.45622253 5.91028786]
[94.76827240 -9.08646584]
[95.08032990 -24.08321953]
[95.39238739 -39.07997513]
[80.44199371 -40.36239624]
[65.60596466 -42.60987091]
[50.94652557 -45.81296921]
[36.52517319 -49.95825577]
[22.40238380 -55.02834702]
[8.63740253 -61.00196838]
[-4.71203852 -67.85407257]
[-17.58994675 -75.55591583]
[-29.94230461 -84.07519531]
[-41.71730804 -93.37618256]
[-52.86555862 -103.41985321]
[-63.34030533 -114.16408539]
[-73.09761047 -125.56381989]
[-82.09654236 -137.57124329]
[-90.29936218 -150.13597107]
[-97.67166901 -163.20533752]
[-104.18252563 -176.72448730]
[-109.80464172 -190.63674927]
[-114.51441956 -204.88374329]
[-118.29211426 -219.40571594]
[-121.12187958 -234.14176941]
[-122.99183655 -249.03010559]
[-123.89415741 -264.00823975]
[-123.82505035 -279.01336670]
[-122.78479767 -293.98257446]
[-120.77777863 -308.85302734]
[-117.81239319 -323.56240845]
[-113.90110016 -338.04898071]
[-109.06028748 -352.25198364]
[-103.31026459 -366.11184692]
[-96.67514801 -379.57046509]
[-89.18276978 -392.57135010]
[-80.86456299 -405.05999756]
[-71.75540924 -416.98400879]
[-61.89350891 -428.29339600]
[-51.32024002 -438.94070435]
[-40.07994461 -448.88125610]
[-28.21977043 -458.07336426]
[-15.78946304 -466.47851562]
[-2.84115767 -474.06140137]
[10.57083321 -480.79025269]
[24.39025688 -486.63684082]
[38.55914688 -491.57662964]
[53.01807404 -495.58889771]
[67.70639038 -498.65682983]
[82.56249237 -500.76754761]
[97.52407074 -501.91220093]
[112.52835846 -502.08599854]
[127.51242828 -501.28817749]
[142.41343689 -499.52215576]
[157.16886902 -496.79525757]
[171.71685791 -493.11898804]
[185.99636841 -488.50869751]
[199.94750977 -482.98379517]
[213.51174927 -476.56741333]
[226.63223267 -469.28646851]
[239.25389099 -461.17150879]
[251.32379150 -452.25656128]
[262.79132080 -442.57904053]
[273.60836792 -432.17950439]
[283.72958374 -421.10159302]
[293.11248779 -409.39175415]
[301.71774292 -397.09912109]
[309.50924683 -384.27526855]
[316.45431519 -370.97396851]
[322.52383423 -357.25100708]
[327.69232178 -343.16390991]
[331.93811035 -328.77185059]
[335.24340820 -314.13510132]
[337.59432983 -299.31512451]
[338.98104858 -284.37402344]
[339.39770508 -269.37451172]
[338.84255981 -254.37950134]
[337.31793213 -239.45185852]
[334.83026123 -224.65420532]
[331.38995361 -210.04862976]
[327.01144409 -195.69636536]
[321.71307373 -181.65760803]
[315.51712036 -167.99127197]
[308.44952393 -154.75466919]
[300.53991699 -142.00329590]
[291.82153320 -129.79066467]
[282.33090210 -118.16797638]
[272.10781860 -107.18399811]
[261.19519043 -96.88479614]
[249.63879395 -87.31356812]
[237.48707581 -78.51045990]
[224.79101562 -70.51239777]
[211.60388184 -63.35291672]
[197.98095703 -57.06206131]
[183.97940063 -51.66621017]
[169.65792847 -47.18799591]
[155.07661438 -43.64620590]
[140.29661560 -41.05569077]
[125.37994385 -39.42731857]
[110.38914490 -38.76791763]
[110.07708740 -23.77116394]
[109.76502991 -8.77440929]
[109.45297241 6.22234392]
[109.14091492 21.21909714]
[108.82885742 36.21585083]
[123.77392578 40.15715027]
[137.34928894 47.54623413]
[148.77279663 57.95739365]
[157.38630676 70.79079437]
[162.69357300 85.30705261]
[164.38879395 100.66983795]
[162.37432861 115.99402618]
[156.76623535 130.39672852]
[147.88758850 143.04817200]
[136.24996948 153.21942139]
[122.52382660 160.32449341]
[107.50000000 163.95402527]
[107.50000000 178.95402527]
[107.50000000 193.95402527]
[107.50000000 208.95402527]
[107.50000000 223.95402527]
[107.50000000 238.95402527]
[107.50000000 253.95402527]
[107.50000000 268.95401001]
[107.50000000 283.95401001]
[107.50000000 298.95401001]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[23 129]
[24 128]
[25 127]
[26 126]
[27 125]
[28 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
