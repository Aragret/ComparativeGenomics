%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAACAACAUACCCAUGGCCAACCUCCUACUCCUCAUUGUACCCAUUCUAAUCGCAAUGGCxxxxxxxxxxUUCUACCUACGCCUAAUCUACUCCACCUCAAUCACACUACUCCCCAUAUCUAACAACGUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 306.22595215]
[92.50000000 291.22595215]
[92.50000000 276.22595215]
[92.50000000 261.22595215]
[92.50000000 246.22593689]
[92.50000000 231.22593689]
[92.50000000 216.22593689]
[92.50000000 201.22593689]
[92.50000000 186.22593689]
[92.50000000 171.22593689]
[77.85705566 168.11074829]
[64.18161774 162.01957703]
[52.07120132 153.21856689]
[42.05495453 142.09223938]
[34.57052612 129.12677002]
[29.94492912 114.88865662]
[28.38027573 100.00000000]
[29.94492912 85.11134338]
[34.57052612 70.87322998]
[42.05495453 57.90776062]
[52.07120132 46.78144073]
[64.18161774 37.98041916]
[77.85705566 31.88924408]
[92.50000000 28.77405739]
[92.50000000 13.77405739]
[92.50000000 -1.22594273]
[92.50000000 -16.22594261]
[77.52563477 -17.18716621]
[62.64361572 -19.10582924]
[47.91510391 -21.97404671]
[33.40062714 -25.78003311]
[19.15981865 -30.50815010]
[5.25120354 -36.13896561]
[-8.26806545 -42.64934540]
[-21.34243584 -50.01253128]
[-33.91817856 -58.19827271]
[-45.94361877 -67.17292786]
[-57.36934280 -76.89962006]
[-68.14839935 -87.33837891]
[-78.23648834 -98.44630432]
[-87.59216309 -110.17775726]
[-96.17697906 -122.48452759]
[-103.95565033 -135.31605530]
[-110.89622498 -148.61958313]
[-116.97016907 -162.34048462]
[-122.15253448 -176.42234802]
[-126.42201233 -190.80729675]
[-129.76107788 -205.43626404]
[-132.15599060 -220.24909973]
[-133.59692383 -235.18493652]
[-134.07794189 -250.18241882]
[-133.59709167 -265.17990112]
[-132.15632629 -280.11575317]
[-129.76156616 -294.92861938]
[-126.42267609 -309.55761719]
[-122.15335083 -323.94262695]
[-116.97113800 -338.02453613]
[-110.89734650 -351.74548340]
[-103.95692444 -365.04910278]
[-96.17839050 -377.88070679]
[-87.59371948 -390.18759155]
[-78.23817444 -401.91912842]
[-68.15019989 -413.02719116]
[-57.37126541 -423.46606445]
[-45.94564819 -433.19287109]
[-33.92030716 -442.16766357]
[-21.34465408 -450.35354614]
[-8.27036667 -457.71685791]
[5.24883032 -464.22738647]
[19.15738297 -469.85836792]
[33.39813614 -474.58663940]
[47.91257477 -478.39279175]
[62.64105225 -481.26116943]
[77.52304840 -483.17999268]
[92.49740601 -484.14138794]
[107.50259399 -484.14138794]
[122.47695160 -483.17999268]
[137.35894775 -481.26116943]
[152.08741760 -478.39279175]
[166.60186768 -474.58663940]
[180.84262085 -469.85836792]
[194.75117493 -464.22738647]
[208.27037048 -457.71685791]
[221.34465027 -450.35354614]
[233.92030334 -442.16766357]
[245.94564819 -433.19287109]
[257.37127686 -423.46606445]
[268.15020752 -413.02719116]
[278.23815918 -401.91912842]
[287.59371948 -390.18759155]
[296.17840576 -377.88070679]
[303.95693970 -365.04910278]
[310.89733887 -351.74548340]
[316.97113037 -338.02453613]
[322.15335083 -323.94262695]
[326.42266846 -309.55761719]
[329.76156616 -294.92861938]
[332.15631104 -280.11575317]
[333.59707642 -265.17990112]
[334.07794189 -250.18241882]
[333.59692383 -235.18493652]
[332.15600586 -220.24909973]
[329.76107788 -205.43626404]
[326.42202759 -190.80729675]
[322.15252686 -176.42234802]
[316.97015381 -162.34048462]
[310.89620972 -148.61958313]
[303.95565796 -135.31605530]
[296.17697144 -122.48452759]
[287.59216309 -110.17775726]
[278.23648071 -98.44630432]
[268.14840698 -87.33837891]
[257.36935425 -76.89962006]
[245.94361877 -67.17292786]
[233.91818237 -58.19827271]
[221.34243774 -50.01253128]
[208.26806641 -42.64934540]
[194.74879456 -36.13896561]
[180.84017944 -30.50815010]
[166.59938049 -25.78003311]
[152.08489990 -21.97404671]
[137.35638428 -19.10582924]
[122.47436523 -17.18716621]
[107.50000000 -16.22594261]
[107.50000000 -1.22594273]
[107.50000000 13.77405739]
[107.50000000 28.77405739]
[122.14294434 31.88924408]
[135.81838989 37.98041916]
[147.92880249 46.78144073]
[157.94503784 57.90776062]
[165.42947388 70.87322998]
[170.05506897 85.11134338]
[171.61972046 100.00000000]
[170.05506897 114.88865662]
[165.42947388 129.12677002]
[157.94503784 142.09223938]
[147.92880249 153.21856689]
[135.81838989 162.01957703]
[122.14294434 168.11074829]
[107.50000000 171.22593689]
[107.50000000 186.22593689]
[107.50000000 201.22593689]
[107.50000000 216.22593689]
[107.50000000 231.22593689]
[107.50000000 246.22593689]
[107.50000000 261.22595215]
[107.50000000 276.22595215]
[107.50000000 291.22595215]
[107.50000000 306.22595215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[24 127]
[25 126]
[26 125]
[27 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
