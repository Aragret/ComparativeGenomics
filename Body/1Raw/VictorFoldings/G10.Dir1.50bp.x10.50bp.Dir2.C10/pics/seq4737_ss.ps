%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAGGCCUAGAAAUAAACAUGCUAGCUUUUAUUCCAGUUCUAACCAAAAAAAUAAACCCUCGxxxxxxxxxxCUCACUUCUAGGAAUACUAGUAUAUCGCUCACACCUCAUAUCCUCCCUACUAUGCCUAGAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[112.32389832 303.56146240]
[112.01592255 288.56463623]
[111.70794678 273.56781006]
[111.39997101 258.57095337]
[111.09198761 243.57412720]
[110.78401184 228.57728577]
[110.47603607 213.58044434]
[110.16806030 198.58361816]
[109.86007690 183.58677673]
[107.86402130 168.72016907]
[104.20531464 154.17321777]
[100.54661560 139.62626648]
[96.88790894 125.07931519]
[93.22920227 110.53235626]
[84.94372559 98.02832031]
[72.97346497 88.98880005]
[61.00320816 79.94928741]
[49.03295135 70.90976715]
[37.06269073 61.87024307]
[25.09243393 52.83072662]
[13.12217522 43.79120636]
[2.99431777 54.87096024]
[-8.12657356 64.95362854]
[-20.14276505 73.95060730]
[-32.94865417 81.78282928]
[-46.43170547 88.38145447]
[-60.47341919 93.68849945]
[-74.95039368 97.65732574]
[-89.73541260 100.25304413]
[-104.69853210 101.45285797]
[-119.70825195 101.24620819]
[-134.63267517 99.63492584]
[-149.34062195 96.63315582]
[-163.70285034 92.26729584]
[-177.59315491 86.57569885]
[-190.88943481 79.60839081]
[-203.47485352 71.42659760]
[-215.23880005 62.10222626]
[-226.07789612 51.71722031]
[-235.89689636 40.36285019]
[-244.60949707 28.13889503]
[-252.13912964 15.15278244]
[-258.41961670 1.51863933]
[-263.39578247 -12.64371490]
[-267.02389526 -27.20981979]
[-269.27203369 -42.05166245]
[-270.12048340 -57.03881073]
[-269.56176758 -72.03955078]
[-267.60076904 -86.92206573]
[-264.25479126 -101.55554199]
[-259.55319214 -115.81140137]
[-253.53729248 -129.56434631]
[-246.25996399 -142.69351196]
[-237.78517151 -155.08351135]
[-228.18737793 -166.62547302]
[-217.55093384 -177.21795654]
[-205.96934509 -186.76788330]
[-193.54434204 -195.19129944]
[-180.38516235 -202.41421509]
[-166.60743713 -208.37312317]
[-152.33222961 -213.01565552]
[-137.68501282 -216.30102539]
[-122.79451752 -218.20036316]
[-107.79159546 -218.69697571]
[-92.80808258 -217.78648376]
[-77.97567749 -215.47689819]
[-63.42472076 -211.78852844]
[-49.28308868 -206.75376892]
[-35.67506790 -200.41688538]
[-22.72024345 -192.83354187]
[-10.53246689 -184.07040405]
[0.78115362 -174.20448303]
[11.12119007 -163.32247925]
[20.39677238 -151.52001953]
[28.52638626 -138.90083313]
[35.43858337 -125.57581329]
[41.07262039 -111.66207123]
[45.37898254 -97.28189087]
[48.31982422 -82.56163788]
[49.86930466 -67.63067627]
[50.01380157 -52.62022400]
[48.75204849 -37.66220093]
[46.09513092 -22.88805962]
[42.06640244 -8.42763805]
[36.70126343 5.59198284]
[30.04686737 19.04759598]
[22.16169548 31.82094765]
[34.13195419 40.86046600]
[46.10221100 49.89998627]
[58.07247162 58.93950653]
[70.04273224 67.97902679]
[82.01298523 77.01854706]
[93.98324585 86.05806732]
[88.74166107 72.00367737]
[94.27760315 58.06261063]
[107.73285675 51.43267059]
[122.16044617 55.53690720]
[130.11137390 68.25629425]
[127.48055267 83.02378845]
[115.62432098 92.21548462]
[130.56033325 90.83145905]
[143.58772278 81.85384369]
[156.97462463 88.38381195]
[171.91062927 86.99978638]
[186.84664917 85.61576080]
[201.78265381 84.23173523]
[207.05967712 69.90987396]
[218.03410339 59.30210114]
[232.52694702 54.51460648]
[247.66065979 56.49795151]
[260.43041992 64.85833740]
[268.30078125 77.93579865]
[269.70907593 93.13381195]
[264.37570190 107.43478394]
[253.35958862 117.99925232]
[238.84800720 122.72963715]
[223.72221375 120.68671417]
[210.98548889 112.27610779]
[203.16668701 99.16774750]
[188.23066711 100.55177307]
[173.29466248 101.93579865]
[158.35864258 103.31982422]
[146.39956665 112.19844055]
[131.94436646 105.76747131]
[117.00834656 107.15149689]
[112.20561218 107.66844940]
[107.77615356 106.87364960]
[111.43486023 121.42060852]
[115.09356689 135.96755981]
[118.75227356 150.51451111]
[122.41098022 165.06146240]
[128.20153809 151.22422791]
[139.67802429 141.56553650]
[154.30082703 138.22277832]
[168.83404541 141.93566895]
[180.06164551 151.88258362]
[185.49906921 165.86236572]
[183.94308472 180.78143311]
[175.73800659 193.33837891]
[162.69953918 200.75445557]
[147.71295166 201.38858032]
[134.09461975 195.10041809]
[124.85691833 183.27879333]
[125.16489410 198.27563477]
[125.47287750 213.27247620]
[125.78085327 228.26930237]
[126.08882904 243.26614380]
[126.39680481 258.26300049]
[126.70478821 273.25982666]
[127.01276398 288.25665283]
[127.32073975 303.25350952]
[129.90650940 322.46191406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 151]
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 131]
[11 130]
[12 129]
[13 128]
[14 127]
[15 93]
[16 92]
[17 91]
[18 90]
[19 89]
[20 88]
[21 87]
[100 125]
[101 124]
[103 122]
[104 121]
[105 120]
[106 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
