%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCCAACACAGGCAUGCUCAUAAGGAAAGGUUAAAAAAAGUAAAAGGAACUCGGCAAAUCxxxxxxxxxxCAGCCCUAUACUCCCUCUACAUAUUUACCACAACACAAUGGGGCUCACUCACCCACCACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[95.15792847 227.81251526]
[94.84587860 212.81576538]
[94.53382111 197.81901550]
[94.22176361 182.82226562]
[93.90970612 167.82550049]
[93.59764862 152.82875061]
[93.28559113 137.83200073]
[92.97354126 122.83524323]
[92.66148376 107.83849335]
[89.86915588 93.10068512]
[77.83094025 82.83462524]
[80.68108368 68.21525574]
[75.48567200 54.14373398]
[70.29025269 40.07221603]
[65.09484100 26.00069618]
[50.73351288 30.34671402]
[36.13798141 33.82608032]
[21.36049461 36.42634583]
[6.45394897 38.13819885]
[-8.52829075 38.95551300]
[-23.53259277 38.87535858]
[-38.50524521 37.89802551]
[-53.39265060 36.02701569]
[-68.14151764 33.26902008]
[-82.69904327 29.63391685]
[-97.01311493 25.13471794]
[-111.03249359 19.78752708]
[-124.70700073 13.61148739]
[-137.98767090 6.62870836]
[-150.82698059 -1.13581467]
[-163.17895508 -9.65428543]
[-174.99937439 -18.89621162]
[-186.24592590 -28.82850647]
[-196.87835693 -39.41561890]
[-206.85859680 -50.61964417]
[-216.15093994 -62.40047836]
[-224.72209167 -74.71595001]
[-232.54138184 -87.52196503]
[-239.58084106 -100.77268982]
[-245.81523132 -114.42069244]
[-251.22225952 -128.41709900]
[-255.78256226 -142.71182251]
[-259.47982788 -157.25369263]
[-262.30078125 -171.99064636]
[-264.23538208 -186.86991882]
[-265.27664185 -201.83825684]
[-265.42089844 -216.84208679]
[-264.66760254 -231.82768250]
[-263.01943970 -246.74139404]
[-260.48229980 -261.52984619]
[-257.06530762 -276.14010620]
[-252.78068542 -290.51986694]
[-247.64375305 -304.61764526]
[-241.67291260 -318.38299561]
[-234.88952637 -331.76660156]
[-227.31787109 -344.72061157]
[-218.98507690 -357.19857788]
[-209.92095947 -369.15588379]
[-200.15797424 -380.54971313]
[-189.73104858 -391.33929443]
[-178.67753601 -401.48599243]
[-167.03698730 -410.95346069]
[-154.85107422 -419.70782471]
[-142.16342163 -427.71777344]
[-129.01945496 -434.95458984]
[-115.46621704 -441.39239502]
[-101.55223083 -447.00814819]
[-87.32730103 -451.78170776]
[-72.84235382 -455.69601440]
[-58.14924240 -458.73706055]
[-43.30056381 -460.89395142]
[-28.34946632 -462.15896606]
[-13.34947777 -462.52758789]
[1.64570630 -461.99847412]
[16.58240700 -460.57351685]
[31.40715599 -458.25784302]
[46.06688309 -455.05972290]
[60.50910950 -450.99063110]
[74.68213654 -446.06509399]
[88.53523254 -440.30078125]
[102.01879120 -433.71829224]
[115.08456421 -426.34124756]
[127.68576813 -418.19598389]
[139.77729797 -409.31170654]
[151.31585693 -399.72018433]
[162.26016235 -389.45578003]
[172.57101440 -378.55526733]
[182.21151733 -367.05758667]
[191.14715576 -355.00396729]
[199.34593201 -342.43753052]
[206.77851868 -329.40325928]
[213.41828918 -315.94781494]
[219.24148560 -302.11935425]
[224.22724915 -287.96740723]
[228.35774231 -273.54263306]
[231.61817932 -258.89663696]
[233.99690247 -244.08186340]
[235.48536682 -229.15135193]
[236.07824707 -214.15855408]
[235.77345276 -199.15713501]
[234.57203674 -184.20080566]
[232.47833252 -169.34307861]
[229.49981689 -154.63716125]
[225.64715576 -140.13569641]
[220.93412781 -125.89059448]
[215.37762451 -111.95285034]
[208.99752808 -98.37235260]
[201.81668091 -85.19771576]
[193.86079407 -72.47611237]
[185.15832520 -60.25307083]
[175.74044800 -48.57235718]
[165.64086914 -37.47577667]
[154.89575195 -27.00305748]
[143.54354858 -17.19168663]
[131.62489319 -8.07678986]
[119.18247223 0.30900642]
[106.26081085 7.93568230]
[92.90617371 14.77593613]
[79.16635895 20.80528069]
[84.36177063 34.87680054]
[89.55718994 48.94831848]
[94.75260162 63.01984024]
[106.41920471 72.27941132]
[103.94067383 87.90526581]
[107.11245728 73.24444580]
[115.02574158 60.50160599]
[126.76045990 51.15835571]
[140.95222473 46.30102158]
[155.95098877 46.49436951]
[170.01283264 51.71590805]
[181.50280762 61.35854340]
[189.08499146 74.30113220]
[191.87779236 89.03884125]
[189.55651855 103.85814667]
[182.39103699 117.03600311]
[171.21449280 127.04024506]
[157.32637024 132.70767212]
[142.34141541 133.37936401]
[128.00192261 128.97718811]
[115.97513580 120.01301575]
[107.65823364 107.52643585]
[107.97029114 122.52318573]
[108.28234863 137.51994324]
[108.59440613 152.51669312]
[108.90646362 167.51344299]
[109.21851349 182.51020813]
[109.53057098 197.50695801]
[109.84262848 212.50370789]
[110.15468597 227.50045776]
[112.74568176 246.70819092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 124]
[12 122]
[13 121]
[14 120]
[15 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
