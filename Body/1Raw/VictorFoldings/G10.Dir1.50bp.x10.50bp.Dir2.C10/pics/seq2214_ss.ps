%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUCAACUUUAAAUUUGCCCACAGAACCCUCUAAAUCCCCUUGUAAAUUUAACUGUUAGUCxxxxxxxxxxACAGCACCAAAUCUCCACCUCCAUCAUCACCUCAACCCAAAAAGGCAUAAUUAAACUUUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 308.57287598]
[92.50000000 293.57287598]
[92.50000000 278.57287598]
[92.50000000 263.57287598]
[92.50000000 248.57289124]
[92.50000000 233.57289124]
[92.50000000 218.57289124]
[92.50000000 203.57289124]
[92.50000000 188.57289124]
[92.50000000 173.57289124]
[78.22488403 170.67576599]
[64.79451752 165.03686523]
[52.72990036 156.87492371]
[42.49907303 146.50659180]
[34.49893188 134.33407593]
[29.03982925 120.82962799]
[26.33354568 106.51710510]
[26.48506927 91.95176697]
[29.48851967 77.69864655]
[35.22738647 64.31067657]
[43.47903061 52.30724335]
[53.92333984 42.15399170]
[66.15514374 34.24481201]
[79.69992065 28.88652802]
[94.03221130 26.28701019]
[94.34426880 11.29025745]
[94.65632629 -3.70649672]
[94.96838379 -18.70325089]
[80.01799011 -19.98567390]
[65.18196106 -22.23314857]
[50.52252197 -25.43624687]
[36.10116577 -29.58153343]
[21.97838020 -34.65162277]
[8.21339893 -40.62524796]
[-5.13604259 -47.47735214]
[-18.01395035 -55.17919540]
[-30.36631012 -63.69847488]
[-42.14131165 -72.99945831]
[-53.28956223 -83.04312897]
[-63.76430893 -93.78736877]
[-73.52161407 -105.18710327]
[-82.52054596 -117.19451904]
[-90.72336578 -129.75926208]
[-98.09567261 -142.82861328]
[-104.60653687 -156.34776306]
[-110.22864532 -170.26002502]
[-114.93842316 -184.50701904]
[-118.71611786 -199.02899170]
[-121.54588318 -213.76506042]
[-123.41584015 -228.65338135]
[-124.31816101 -243.63151550]
[-124.24905396 -258.63665771]
[-123.20880127 -273.60583496]
[-121.20178223 -288.47631836]
[-118.23639679 -303.18566895]
[-114.32510376 -317.67224121]
[-109.48429108 -331.87524414]
[-103.73426819 -345.73513794]
[-97.09915161 -359.19375610]
[-89.60678101 -372.19464111]
[-81.28856659 -384.68328857]
[-72.17941284 -396.60729980]
[-62.31751633 -407.91668701]
[-51.74424362 -418.56396484]
[-40.50395203 -428.50451660]
[-28.64377594 -437.69665527]
[-16.21346664 -446.10177612]
[-3.26516151 -453.68469238]
[10.14682961 -460.41354370]
[23.96625137 -466.26010132]
[38.13514328 -471.19989014]
[52.59407043 -475.21215820]
[67.28238678 -478.28009033]
[82.13848877 -480.39080811]
[97.10006714 -481.53546143]
[112.10435486 -481.70925903]
[127.08842468 -480.91146851]
[141.98942566 -479.14541626]
[156.74487305 -476.41854858]
[171.29286194 -472.74224854]
[185.57235718 -468.13198853]
[199.52349854 -462.60705566]
[213.08775330 -456.19067383]
[226.20822144 -448.90972900]
[238.82987976 -440.79476929]
[250.89979553 -431.87982178]
[262.36730957 -422.20230103]
[273.18438721 -411.80276489]
[283.30557251 -400.72485352]
[292.68847656 -389.01504517]
[301.29373169 -376.72241211]
[309.08523560 -363.89855957]
[316.03030396 -350.59722900]
[322.09982300 -336.87426758]
[327.26831055 -322.78720093]
[331.51412964 -308.39511108]
[334.81942749 -293.75839233]
[337.17034912 -278.93838501]
[338.55703735 -263.99731445]
[338.97369385 -248.99780273]
[338.41854858 -234.00277710]
[336.89395142 -219.07513428]
[334.40628052 -204.27748108]
[330.96594238 -189.67190552]
[326.58743286 -175.31964111]
[321.28909302 -161.28088379]
[315.09310913 -147.61454773]
[308.02551270 -134.37794495]
[300.11590576 -121.62657166]
[291.39752197 -109.41394043]
[281.90689087 -97.79125214]
[271.68380737 -86.80727386]
[260.77120972 -76.50807190]
[249.21478271 -66.93684387]
[237.06307983 -58.13373566]
[224.36701965 -50.13566971]
[211.17987061 -42.97619629]
[197.55694580 -36.68533707]
[183.55538940 -31.28948784]
[169.23391724 -26.81127357]
[154.65260315 -23.26948166]
[139.87261963 -20.67896652]
[124.95594025 -19.05059433]
[109.96513367 -18.39119339]
[109.65308380 -3.39444041]
[109.34102631 11.60231304]
[109.02896881 26.59906769]
[124.01992798 30.05529213]
[137.97145081 36.53829575]
[150.27980042 45.76753616]
[160.41235352 57.34362411]
[167.93063354 70.76562500]
[172.50927734 85.45270538]
[173.95016479 100.76930237]
[172.19094849 116.05261230]
[167.30773926 130.64126587]
[159.51187134 143.90394592]
[149.14068604 155.26673889]
[136.64299011 164.23791504]
[122.55961609 170.42927551]
[107.50000000 173.57289124]
[107.50000000 188.57289124]
[107.50000000 203.57289124]
[107.50000000 218.57289124]
[107.50000000 233.57289124]
[107.50000000 248.57289124]
[107.50000000 263.57287598]
[107.50000000 278.57287598]
[107.50000000 293.57287598]
[107.50000000 308.57287598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[25 127]
[26 126]
[27 125]
[28 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
