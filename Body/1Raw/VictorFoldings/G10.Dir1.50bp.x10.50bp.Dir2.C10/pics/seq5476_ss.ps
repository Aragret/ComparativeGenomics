%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACCCUUAAUUCCAUCCACCCUCCUCUCCCUAGGAGGCCUGCCCCCGCUAACCGGCUUUUxxxxxxxxxxGAUCAAACAACCCCCUAGGAAUCACCUCCCAUUCCGAUAAAAUCACCUUCCACCCUUACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[155.14366150 137.88516235]
[141.48741150 131.67976379]
[127.83117676 125.47435760]
[114.17493439 119.26894379]
[100.51869202 113.06353760]
[85.55844879 111.97222900]
[71.14623260 116.13011932]
[56.73401260 120.28800201]
[42.32179642 124.44589233]
[27.90958214 128.60377502]
[13.49736500 132.76167297]
[-0.91485071 136.91955566]
[-0.45664030 146.43907166]
[-3.00795388 156.09689331]
[-8.59306526 164.92703247]
[-16.92388153 171.96807861]
[-27.40713501 176.36416626]
[-39.18409729 177.46138000]
[-51.20044327 174.88922119]
[-63.09282303 184.03096008]
[-71.96555328 198.47778320]
[-88.30401611 193.95109558]
[-88.47715759 176.99803162]
[-72.23455811 172.13858032]
[-60.34217834 162.99684143]
[-62.64495850 155.85911560]
[-76.92049408 160.46443176]
[-81.52558899 146.18882751]
[-67.25052643 141.58364868]
[-69.55330658 134.44592285]
[-84.54600525 133.97787476]
[-99.53869629 133.50984192]
[-114.53139496 133.04179382]
[-129.52409363 132.57374573]
[-144.51678467 132.10571289]
[-155.86230469 143.10820007]
[-171.66323853 142.78208923]
[-182.54515076 131.32087708]
[-182.05201721 115.52428436]
[-170.47639465 104.76415253]
[-154.68589783 105.42427063]
[-144.04875183 117.11301422]
[-129.05604553 117.58105469]
[-114.06335449 118.04909515]
[-99.07065582 118.51713562]
[-84.07795715 118.98518372]
[-69.08526611 119.45322418]
[-46.26240921 102.80065155]
[-20.67527962 105.36165619]
[-5.07273817 122.50733948]
[9.33947754 118.34944916]
[23.75169373 114.19156647]
[38.16390991 110.03367615]
[52.57612610 105.87578583]
[66.98834229 101.71790314]
[81.40055847 97.56001282]
[86.59597015 83.48849487]
[78.34368134 70.96253204]
[70.09139252 58.43656921]
[55.19643021 51.57566071]
[53.96031189 35.22316742]
[67.65465546 26.20113182]
[82.19188690 33.79065323]
[82.61735535 50.18428040]
[90.86964417 62.71024323]
[99.12193298 75.23620605]
[113.61753082 71.37904358]
[114.55316162 56.40825272]
[115.48879242 41.43746185]
[101.69324493 35.10916519]
[91.11813354 24.22195053]
[85.19364929 10.24822617]
[84.72103119 -4.92217445]
[89.76420593 -19.23758125]
[99.64111328 -30.76195335]
[113.01598358 -37.93671417]
[128.07998657 -39.79153061]
[142.79582214 -36.07556534]
[155.17330933 -27.29136086]
[163.53849792 -14.62691498]
[166.76004028 0.20501147]
[164.40228271 15.19852257]
[156.78405762 28.32586861]
[144.93569946 37.81168365]
[130.45957947 42.37308884]
[129.52395630 57.34388351]
[128.58831787 72.31467438]
[126.04484558 82.22018433]
[121.16793060 90.32687378]
[114.51386261 96.16576385]
[106.72409821 99.40729523]
[120.38034058 105.61270905]
[134.03659058 111.81811523]
[147.69282532 118.02352142]
[161.34906006 124.22892761]
[165.67375183 123.16316986]
[169.84350586 123.52504730]
[173.42614746 125.10991669]
[187.83836365 120.95203400]
[202.25057983 116.79414368]
[216.66279602 112.63625336]
[231.07501221 108.47837067]
[236.23173523 93.84321594]
[249.02503967 85.06191254]
[264.53561401 85.51105499]
[276.79931641 95.01793671]
[281.10055542 109.92696381]
[275.78536987 124.50531769]
[262.89755249 133.14732361]
[247.39276123 132.52993774]
[235.23289490 122.89058685]
[220.82067871 127.04846954]
[206.40846252 131.20635986]
[191.99624634 135.36424255]
[177.58403015 139.52214050]
[192.01232910 143.62385559]
[205.58255005 150.01519775]
[217.93409729 158.52633667]
[228.73876953 168.93109131]
[237.70945740 180.95301819]
[244.60781860 194.27264404]
[249.25053406 208.53607178]
[251.51425171 223.36427307]
[251.33880615 238.36325073]
[248.72886658 253.13444519]
[243.75376892 267.28536987]
[236.54573059 280.43997192]
[227.29627991 292.24877930]
[216.25117493 302.39794922]
[203.70391846 310.61782837]
[189.98791504 316.69000244]
[175.46762085 320.45309448]
[160.52886963 321.80715942]
[145.56858826 320.71618652]
[130.98432922 317.20913696]
[117.16360474 311.37924194]
[104.47365570 303.38143921]
[93.25168610 293.42816162]
[83.79588318 281.78393555]
[76.35749817 268.75817871]
[71.13418579 254.69700623]
[68.26473999 239.97401428]
[67.82540131 224.98045349]
[69.82785034 210.11471558]
[74.21887970 195.77180481]
[80.88180542 182.33285522]
[89.63957977 170.15495300]
[100.25949860 159.56169128]
[112.45937347 150.83454895]
[125.91503143 144.20541382]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 95]
[2 94]
[3 93]
[4 92]
[5 91]
[6 56]
[7 55]
[8 54]
[9 53]
[10 52]
[11 51]
[12 50]
[19 25]
[20 24]
[30 47]
[31 46]
[32 45]
[33 44]
[34 43]
[35 42]
[57 66]
[58 65]
[59 64]
[67 87]
[68 86]
[69 85]
[98 115]
[99 114]
[100 113]
[101 112]
[102 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
