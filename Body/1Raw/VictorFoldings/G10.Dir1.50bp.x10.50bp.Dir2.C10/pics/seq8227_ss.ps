%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUACCCGCCGCAGUACUGAUCAUUCUAUUUCCCCCUCUAUUGAUCCCCACCUCCAAAUAxxxxxxxxxxCAUCAACUGCAACUCCAAAGCCACCCCUCACCCACUAGGAUACCAACAAACCUACCCACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[168.89857483 176.03895569]
[158.45877075 165.26815796]
[148.01895142 154.49734497]
[137.24813843 144.05752563]
[126.15682983 133.95887756]
[115.06551361 123.86022949]
[103.97419739 113.76158142]
[90.35649872 110.59142303]
[85.92715454 97.32973480]
[74.83583832 87.23108673]
[63.74452209 77.13243103]
[50.82837296 84.94608307]
[36.24852753 88.79971313]
[21.18876076 88.38927460]
[6.86931753 83.75658417]
[-5.55195045 75.28521729]
[-15.07320786 63.66877747]
[-20.92943954 49.85409927]
[-22.65391159 34.96410370]
[-20.11536026 20.20649338]
[-13.52793884 6.77581215]
[-24.61925316 -3.32283711]
[-35.71057129 -13.42148685]
[-46.80188370 -23.52013588]
[-57.89319992 -33.61878586]
[-64.36119843 -35.42779541]
[-68.30922699 -39.62831497]
[-69.22466278 -44.37567902]
[-79.88629150 -54.92697144]
[-90.54792023 -65.47826385]
[-101.20954132 -76.02954865]
[-112.98291016 -66.70510101]
[-125.79438782 -58.86780167]
[-139.45715332 -52.63193512]
[-153.77197266 -48.08843994]
[-168.53009033 -45.30357742]
[-183.51628113 -44.31795502]
[-198.51200867 -45.14595032]
[-213.29858398 -47.77548218]
[-227.66038513 -52.16821289]
[-241.38796997 -58.26007462]
[-254.28114319 -65.96223450]
[-266.15191650 -75.16237640]
[-276.82711792 -85.72632599]
[-286.15112305 -97.50003815]
[-293.98794556 -110.31181335]
[-300.22329712 -123.97481537]
[-304.76626587 -138.28981018]
[-307.55056763 -153.04801941]
[-308.53564453 -168.03425598]
[-307.70709229 -183.02993774]
[-305.07699585 -197.81642151]
[-300.68374634 -212.17805481]
[-294.59136963 -225.90541077]
[-286.88870239 -238.79830933]
[-277.68814087 -250.66871643]
[-267.12377930 -261.34353638]
[-255.34971619 -270.66711426]
[-242.53765869 -278.50344849]
[-228.87442017 -284.73828125]
[-214.55924988 -289.28073120]
[-199.80093384 -292.06448364]
[-184.81466675 -293.04898071]
[-169.81900024 -292.21987915]
[-155.03262329 -289.58923340]
[-140.67115784 -285.19543457]
[-126.94402313 -279.10253906]
[-114.05142212 -271.39941406]
[-102.18135834 -262.19839478]
[-91.50692749 -251.63363647]
[-82.18379974 -239.85922241]
[-74.34793854 -227.04685974]
[-68.11360168 -213.38339233]
[-63.57171631 -199.06806946]
[-60.78850555 -184.30964661]
[-59.80456543 -169.32333374]
[-60.63424301 -154.32771301]
[-63.26543427 -139.54142761]
[-67.65977478 -125.18011475]
[-73.75317383 -111.45321655]
[-81.45678711 -98.56089783]
[-90.65825653 -86.69117737]
[-79.99662781 -76.13988495]
[-69.33499908 -65.58860016]
[-58.67337418 -55.03730774]
[-47.79455185 -44.71010208]
[-36.70323563 -34.61145020]
[-25.61191940 -24.51280212]
[-14.52060413 -14.41415215]
[-3.42928910 -4.31550312]
[9.32673454 -12.12966824]
[23.78239250 -16.03674507]
[38.76839447 -15.71184540]
[53.07004929 -11.17275238]
[65.52573395 -2.77917838]
[75.12122345 8.79572868]
[81.07230377 22.61936569]
[82.88883209 37.57480621]
[80.41510773 52.45106125]
[73.84317017 66.04112244]
[84.93448639 76.13977051]
[96.02580261 86.23841858]
[109.64350128 89.40857697]
[114.07284546 102.67026520]
[125.16416168 112.76891327]
[136.25547791 122.86756897]
[147.34680176 132.96621704]
[152.57521057 134.09899902]
[156.42698669 136.87681580]
[158.50169373 140.48199463]
[158.78976440 144.05752563]
[169.22956848 154.82833862]
[179.66938782 165.59915161]
[191.96516418 156.95274353]
[205.46220398 150.33638000]
[219.82815552 145.91299438]
[234.70919800 143.79151917]
[249.73892212 144.02420044]
[264.54718018 146.60531616]
[278.76928711 151.47126770]
[292.05505371 158.50227356]
[304.07730103 167.52516174]
[314.53994751 178.31773376]
[323.18533325 190.61422729]
[329.80056763 204.11181641]
[334.22277832 218.47811890]
[336.34301758 233.35934448]
[336.10910034 248.38905334]
[333.52676392 263.19708252]
[328.65963745 277.41882324]
[321.62753296 290.70401001]
[312.60366821 302.72549438]
[301.81021118 313.18722534]
[289.51303101 321.83160400]
[276.01489258 328.44573975]
[261.64822388 332.86676025]
[246.76679993 334.98577881]
[231.73713684 334.75061035]
[216.92930603 332.16705322]
[202.70797729 327.29873657]
[189.42337036 320.26556396]
[177.40263367 311.24069214]
[166.94177246 300.44638062]
[158.29841614 288.14846802]
[151.68539429 274.64978027]
[147.26556396 260.28274536]
[145.14778137 245.40116882]
[145.38417053 230.37152100]
[147.96894836 215.56390381]
[152.83843994 201.34298706]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 113]
[2 112]
[3 111]
[4 107]
[5 106]
[6 105]
[7 104]
[9 102]
[10 101]
[11 100]
[21 90]
[22 89]
[23 88]
[24 87]
[25 86]
[28 85]
[29 84]
[30 83]
[31 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
