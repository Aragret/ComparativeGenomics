%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAGACCAAUGGGACUUAAACCCACAAACACUUAGUUAACAGCUAAGCACCCUAAUCAACUxxxxxxxxxxCCACUCCAUAACGCUCCUCAUACUAGGCCUACUAACCAACACACUAACCAUAUACCAAUGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[144.64990234 301.95828247]
[144.33784485 286.96151733]
[144.02578735 271.96475220]
[143.71374512 256.96801758]
[143.40168762 241.97125244]
[143.08963013 226.97450256]
[142.77757263 211.97775269]
[142.46551514 196.98098755]
[142.15345764 181.98423767]
[137.54789734 167.70877075]
[129.03680420 155.35720825]
[120.52571106 143.00563049]
[112.01461792 130.65405273]
[105.98765564 134.16932678]
[99.03063202 136.44258118]
[91.41078949 137.24334717]
[83.44982910 136.40065002]
[75.51031494 133.81535339]
[67.97943878 129.46945190]
[54.73685455 136.51458740]
[41.49427032 143.55972290]
[28.25168419 150.60485840]
[25.18118668 165.93801880]
[12.94083977 175.66981506]
[-2.68983912 175.20518494]
[-14.33052254 164.76351929]
[-16.48483467 149.27503967]
[-8.13557529 136.05294800]
[6.77499008 131.34030151]
[21.20654869 137.36225891]
[34.44913483 130.31712341]
[47.69171906 123.27199554]
[60.93430710 116.22686005]
[60.70028305 108.73051453]
[45.70758820 109.19855499]
[30.71488571 109.66636658]
[30.24730682 94.67365265]
[45.23954773 94.20585632]
[60.23224258 93.73781586]
[59.99822235 86.24147034]
[46.34197998 80.03606415]
[32.68573761 73.83065796]
[19.02949715 67.62524414]
[5.37325668 61.41984177]
[-8.28298473 55.21443176]
[-23.74846840 59.48038864]
[-36.64106750 49.93259048]
[-37.07067871 33.89529037]
[-24.70774841 23.67093277]
[-9.03605270 27.10277176]
[-2.07757735 41.55819321]
[11.57866383 47.76359940]
[25.23490524 53.96900558]
[38.89114761 60.17441177]
[52.54738617 66.37982178]
[66.20362854 72.58522797]
[75.55410004 67.24809265]
[85.35921478 64.69435883]
[94.85947418 64.80065918]
[103.38760376 67.25024414]
[108.28915405 53.07368469]
[113.19071198 38.89712524]
[118.09226227 24.72056770]
[104.77833557 17.74941063]
[92.65216827 8.87169552]
[81.98467255 -1.71424532]
[73.01415253 -13.77191925]
[65.94102478 -27.03195381]
[60.92329788 -41.19811249]
[58.07307053 -55.95391846]
[57.45402145 -70.96972656]
[59.07997513 -85.91007233]
[62.91461182 -100.44118500]
[68.87226105 -114.23843384]
[76.81982422 -126.99358368]
[86.57975769 -138.42167664]
[97.93402100 -148.26741028]
[110.62894440 -156.31082153]
[124.38092804 -162.37222290]
[138.88275146 -166.31620789]
[153.81042480 -168.05464172]
[168.83045959 -167.54870605]
[183.60731506 -164.80970764]
[197.81086731 -159.89881897]
[211.12380981 -152.92576599]
[223.24870300 -144.04632568]
[233.91468811 -133.45887756]
[242.88349915 -121.39991760]
[249.95472717 -108.13887787]
[254.97044373 -93.97200012]
[257.81857300 -79.21578979]
[258.43548584 -64.19989777]
[256.80740356 -49.25978088]
[252.97068787 -34.72921753]
[247.01107788 -20.93281555]
[239.06169128 -8.17879772]
[229.30014038 3.24790740]
[217.94447327 13.09202385]
[205.24839783 21.13363075]
[191.49555969 27.19307327]
[176.99317932 31.13498497]
[162.06526184 32.87129974]
[147.04528809 32.36322784]
[132.26881409 29.62211800]
[127.36726379 43.79867554]
[122.46571350 57.97523499]
[117.56416321 72.15179443]
[132.62388611 95.56104279]
[124.36619568 122.14296722]
[132.87728882 134.49453735]
[141.38838196 146.84611511]
[149.89945984 159.19769287]
[149.19215393 144.21437073]
[151.55677795 129.40193176]
[156.89389038 115.38353729]
[164.97891235 102.74897003]
[175.47172546 92.02978516]
[187.93087769 83.67695618]
[201.83216858 78.04190063]
[216.59077454 75.36168671]
[231.58576965 75.74907684]
[246.18629456 79.18777466]
[259.77807617 85.53311157]
[271.78930664 94.51812744]
[281.71463013 105.76480865]
[289.13650513 118.79998779]
[293.74264526 133.07525635]
[295.33929443 147.99005127]
[293.85925293 162.91685486]
[289.36480713 177.22767639]
[282.04504395 190.32046509]
[272.20788574 201.64436340]
[260.26724243 210.72297668]
[246.72546387 217.17433167]
[232.15226746 220.72702026]
[217.16075134 221.23158264]
[202.38165283 218.66679382]
[188.43673706 213.14053345]
[175.91270447 204.88533020]
[165.33644104 194.24847412]
[157.15020752 181.67218018]
[157.46226501 196.66893005]
[157.77432251 211.66569519]
[158.08638000 226.66244507]
[158.39843750 241.65919495]
[158.71049500 256.65594482]
[159.02255249 271.65270996]
[159.33460999 286.64944458]
[159.64666748 301.64620972]
[162.23765564 320.85394287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 112]
[11 111]
[12 110]
[13 109]
[19 33]
[20 32]
[21 31]
[22 30]
[40 56]
[41 55]
[42 54]
[43 53]
[44 52]
[45 51]
[60 107]
[61 106]
[62 105]
[63 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
