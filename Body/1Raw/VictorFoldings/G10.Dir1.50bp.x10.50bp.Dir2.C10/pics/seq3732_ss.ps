%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGCCGUUUACUCAAUCCUCUGAUCAGGGUGAGCAUCAAACUCAAACUACGCCCUGAUCGGxxxxxxxxxxCACUAGGAUACCAACAAACCUACCCACCCUUAACAGUACAUAGUACAUAAAGCCAUUUACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[183.79364014 211.70143127]
[187.48121643 204.39944458]
[192.01684570 197.58956909]
[181.13801575 187.26237488]
[170.25920105 176.93516541]
[155.70170593 173.78421021]
[151.02003479 158.67153931]
[140.14120483 148.34434509]
[129.26239014 138.01713562]
[114.70488739 134.86616516]
[110.02322388 119.75350952]
[99.14439392 109.42630768]
[93.93627167 108.36415863]
[89.71671295 104.42968750]
[88.03916931 98.43600464]
[77.59934998 87.66519165]
[67.15953827 76.89438629]
[56.71973038 66.12357330]
[41.35345840 71.37921143]
[25.28911972 69.43016052]
[11.72318077 60.71514130]
[3.33281136 47.01407623]
[1.74760914 31.08477402]
[7.23331642 16.10788345]
[-3.42830968 5.55659246]
[-14.08993626 -4.99469757]
[-24.75156212 -15.54598808]
[-35.41318893 -26.09727859]
[-47.49317551 -34.98962784]
[-60.73576355 -42.03476334]
[-73.97834778 -49.07989883]
[-87.22093201 -56.12503433]
[-100.46351624 -63.17016602]
[-113.70610809 -70.21530151]
[-126.94869232 -77.26043701]
[-140.19126892 -84.30557251]
[-153.43386841 -91.35070801]
[-166.67645264 -98.39584351]
[-180.39649963 -104.45885468]
[-194.52130127 -109.50761414]
[-208.64610291 -114.55636597]
[-222.77090454 -119.60512543]
[-236.17576599 -111.55255890]
[-251.61239624 -114.05146027]
[-261.79208374 -125.92192078]
[-261.90832520 -141.55906677]
[-251.90618896 -153.57952881]
[-236.50840759 -156.30760193]
[-222.98533630 -148.45516968]
[-217.72215271 -133.72993469]
[-203.59735107 -128.68116760]
[-189.47254944 -123.63241577]
[-175.34774780 -118.58365631]
[-181.40539551 -132.30607605]
[-177.39366150 -146.75965881]
[-165.12989807 -155.39678955]
[-150.16969299 -154.30476379]
[-139.29019165 -143.97827148]
[-137.41989136 -129.09532166]
[-145.40606689 -116.39804840]
[-159.63131714 -111.63842773]
[-146.38873291 -104.59329224]
[-133.14614868 -97.54815674]
[-119.90355682 -90.50302124]
[-106.66097260 -83.45788574]
[-93.41838074 -76.41275024]
[-80.17579651 -69.36761475]
[-66.93321228 -62.32248306]
[-53.69062805 -55.27734756]
[-40.44804001 -48.23221207]
[-47.55575562 -61.44131851]
[-49.17380905 -76.35379028]
[-45.06461716 -90.77996826]
[-35.83155441 -102.60157776]
[-22.83035088 -110.08280945]
[-7.97003889 -112.12514496]
[6.56737185 -108.42870331]
[18.64728546 -99.53624725]
[26.49594879 -86.75350952]
[28.96090508 -71.95742798]
[25.68021584 -57.32058716]
[17.13559723 -44.99218369]
[4.58169842 -36.78245926]
[-10.13813305 -33.89688110]
[-24.86189842 -36.75890350]
[-14.20027161 -26.20761490]
[-3.53864574 -15.65632343]
[7.12298059 -5.10503340]
[17.78460693 5.44625664]
[30.64397049 0.15120144]
[44.59422302 0.16932091]
[57.51995850 5.53101730]
[67.44848633 15.45388699]
[72.85085297 28.45672035]
[72.87725067 42.58054733]
[67.49053955 55.68376541]
[77.93035126 66.45457458]
[88.37016296 77.22537994]
[98.80997467 87.99618530]
[109.47160339 98.54747772]
[120.35042572 108.87468719]
[135.68605042 112.76431274]
[139.58958435 127.13830566]
[150.46841431 137.46551514]
[161.34724426 147.79272461]
[176.68286133 151.68234253]
[180.58639526 166.05633545]
[191.46522522 176.38354492]
[202.34405518 186.71075439]
[223.23240662 174.70903015]
[246.96881104 170.71594238]
[270.59335327 175.21475220]
[291.16522217 187.63069153]
[306.12869263 206.40435791]
[313.63070679 229.18762207]
[312.75021362 253.13719177]
[326.97698975 257.89102173]
[341.20379639 262.64483643]
[355.43057251 267.39865112]
[372.36941528 266.68374634]
[377.74554443 282.76272583]
[363.78320312 292.37985229]
[350.67675781 281.62542725]
[336.44995117 276.87161255]
[322.22317505 272.11779785]
[307.99639893 267.36398315]
[304.15838623 274.53591919]
[299.48889160 281.19863892]
[294.05471802 287.25619507]
[287.93353271 292.62133789]
[281.21304321 297.21667480]
[273.98950195 300.97586060]
[266.36645508 303.84448242]
[258.45324707 305.78097534]
[250.36346436 306.75711060]
[242.21324158 306.75845337]
[234.11962891 305.78454590]
[226.19892883 303.84896851]
[218.56500244 300.97912598]
[211.32766724 297.21582031]
[204.59104919 292.61270142]
[198.45216370 287.23559570]
[192.99943542 281.16137695]
[188.31152344 274.47702026]
[184.45610046 267.27828979]
[181.48892212 259.66839600]
[179.45298767 251.75645447]
[178.37794495 243.65603638]
[178.27967834 235.48339844]
[179.15998840 227.35595703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 109]
[4 108]
[5 107]
[7 105]
[8 104]
[9 103]
[11 101]
[12 100]
[15 99]
[16 98]
[17 97]
[18 96]
[24 89]
[25 88]
[26 87]
[27 86]
[28 85]
[29 70]
[30 69]
[31 68]
[32 67]
[33 66]
[34 65]
[35 64]
[36 63]
[37 62]
[38 61]
[39 53]
[40 52]
[41 51]
[42 50]
[116 126]
[117 125]
[118 124]
[119 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
