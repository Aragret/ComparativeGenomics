%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAGCCAUGGCCAUCCCCUUAUGAGCGGGCACAGUGAUUAUAGGCUUUCGCUCUAAGAUUAxxxxxxxxxxACUCACCAAGACCUCAACCCCUGACCCCCAUGCCUCAGGAUACUCCUCAAUAGCCAUCGCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[88.64727783 266.72915649]
[88.64727783 251.72914124]
[88.64727783 236.72914124]
[88.64727783 221.72914124]
[88.64727783 206.72914124]
[88.64727783 191.72914124]
[88.64727783 176.72914124]
[88.64727783 161.72914124]
[88.64727783 146.72914124]
[88.64727783 131.72914124]
[74.29843140 107.20436096]
[84.70060730 87.61278534]
[77.51809692 74.44419861]
[64.11749268 66.03383636]
[64.81585693 51.15561295]
[57.63335037 37.98703003]
[50.45084381 24.81844711]
[43.26833344 11.64986420]
[36.08582306 -1.51871824]
[32.35889435 6.26567173]
[26.17609215 13.07304573]
[12.78980637 19.84115982]
[-0.59647810 26.60927582]
[-5.28841257 41.70103836]
[-19.31627846 48.98077011]
[-34.35758972 44.12953949]
[-41.48860931 30.02549171]
[-36.47862244 15.03631020]
[-22.29996872 8.05480957]
[-7.36459303 13.22299004]
[6.02169180 6.45487547]
[19.40797615 -0.31323946]
[5.41716528 -5.72223139]
[4.09024000 -20.66342545]
[16.90885735 -28.45335770]
[29.56014824 -20.39266586]
[27.07503128 -35.18537521]
[24.58991241 -49.97808075]
[14.52923393 -58.11666870]
[12.79315948 -70.53459930]
[19.77486801 -80.46249390]
[17.59803200 -95.30369568]
[15.42119408 -110.14490509]
[1.83790410 -117.41129303]
[-4.78474283 -131.12237549]
[-2.09572530 -145.92890930]
[8.66751575 -156.19003296]
[6.49067879 -171.03123474]
[-3.39850903 -179.37736511]
[-4.87586832 -191.82872009]
[2.31086731 -201.60922241]
[0.44325408 -216.49249268]
[-1.42435908 -231.37577820]
[-3.44669342 -246.23883057]
[-5.62353039 -261.08001709]
[-7.80036736 -275.92123413]
[-22.83195877 -276.59036255]
[-37.46521378 -280.09240723]
[-51.17115021 -286.30078125]
[-63.45430374 -294.99105835]
[-73.87064362 -305.84906006]
[-82.04364014 -318.48229980]
[-87.67782593 -332.43408203]
[-90.56954193 -347.20007324]
[-90.61424255 -362.24649048]
[-87.81032562 -377.02938843]
[-82.25914001 -391.01443481]
[-74.16136932 -403.69601440]
[-63.80972672 -414.61572266]
[-51.57843018 -423.37881470]
[-37.90962982 -429.66851807]
[-23.29744339 -433.25744629]
[-8.27009392 -434.01589966]
[6.62919140 -431.91641235]
[20.86181259 -427.03494263]
[33.91326904 -419.54788208]
[45.31175613 -409.72592163]
[54.64522934 -397.92410278]
[61.57628632 -384.56906128]
[65.85437775 -370.14358521]
[67.32485199 -355.16912842]
[65.93454742 -340.18701172]
[61.73372650 -325.73886108]
[54.87424850 -312.34692383]
[45.60407639 -300.49530029]
[34.25832367 -290.61248779]
[21.24712753 -283.05566406]
[7.04083824 -278.09808350]
[9.21767521 -263.25686646]
[11.39451218 -248.41566467]
[15.50359631 -242.21395874]
[13.45892048 -233.24339294]
[15.32653427 -218.36010742]
[17.19414711 -203.47683716]
[28.53630638 -190.12185669]
[21.33188438 -173.20806885]
[23.50872040 -158.36686707]
[36.76531219 -151.62886047]
[43.59309006 -138.21821594]
[41.18684006 -123.18280792]
[30.26239967 -112.32173920]
[32.43923569 -97.48053741]
[34.61607361 -82.63932800]
[46.23361206 -69.52320099]
[39.38261795 -52.46319962]
[41.86773682 -37.67049408]
[44.35285568 -22.87778473]
[49.25440598 -8.70122719]
[56.43691635 4.46735525]
[63.61942291 17.63593864]
[70.80193329 30.80451965]
[77.98444366 43.97310257]
[90.87130737 51.44156265]
[90.68668365 67.26169586]
[97.86919403 80.43027496]
[118.02604675 80.31409454]
[133.69194031 100.69025421]
[147.70864868 106.03176880]
[161.72535706 111.37327576]
[175.74208069 116.71479034]
[192.69601440 116.70513153]
[197.39862061 132.99383545]
[183.04829407 142.02182007]
[170.40055847 130.73150635]
[156.38385010 125.38999176]
[142.36714172 120.04847717]
[128.35041809 114.70696259]
[122.17463684 118.96250916]
[131.91459656 130.37010193]
[141.65457153 141.77769470]
[151.39453125 153.18527222]
[164.55278015 160.38670349]
[168.33711243 174.90148926]
[160.37002563 187.61076355]
[145.65682983 190.52996826]
[133.44102478 181.82513428]
[131.39721680 166.96481323]
[124.20583344 153.80107117]
[117.01445007 140.63734436]
[109.82306671 127.47360229]
[103.64727783 131.72914124]
[103.64727783 146.72914124]
[103.64727783 161.72914124]
[103.64727783 176.72914124]
[103.64727783 191.72914124]
[103.64727783 206.72914124]
[103.64727783 221.72914124]
[103.64727783 236.72914124]
[103.64727783 251.72914124]
[103.64727783 266.72915649]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 115]
[13 114]
[15 112]
[16 111]
[17 110]
[18 109]
[19 108]
[21 32]
[22 31]
[23 30]
[36 107]
[37 106]
[38 105]
[41 103]
[42 102]
[43 101]
[47 97]
[48 96]
[51 94]
[52 93]
[53 92]
[54 90]
[55 89]
[56 88]
[117 127]
[118 126]
[119 125]
[120 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
