%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACCCACAAACACUUAGUUAACAGCUAAGCACCCUAAUCAACUGGCUUCAAUCUACUUCUCxxxxxxxxxxCUCGCUGUCACUUUCCUAGGACUUCUAACAGCCCUAGACCUCAACUACCUAACCAACAAACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[90.62298584 467.52914429]
[90.62298584 452.52914429]
[90.62298584 437.52914429]
[90.62298584 422.52914429]
[90.62298584 407.52914429]
[90.62298584 392.52914429]
[90.62298584 377.52914429]
[90.62298584 362.52914429]
[90.62298584 347.52914429]
[90.62298584 332.52914429]
[75.92742157 329.62835693]
[62.07577133 323.91436768]
[49.60111237 315.60504150]
[38.98393631 305.01821899]
[30.63361740 292.55938721]
[24.87264824 278.70642090]
[21.92417336 263.99096680]
[21.90334892 248.97827148]
[24.81284904 234.24528503]
[30.54268837 220.35862732]
[38.87437820 207.85273743]
[49.48926544 197.20928955]
[61.98069763 188.83868408]
[75.86963654 183.06417847]
[90.62298584 180.10943604]
[90.62298584 165.10943604]
[90.62298584 150.10943604]
[90.62298584 135.10943604]
[90.62298584 120.10943604]
[79.62564087 106.99415588]
[81.40061188 90.47913361]
[71.99674988 78.79293060]
[62.59289551 67.10671997]
[53.18903732 55.42050934]
[43.78518295 43.73430252]
[31.90835762 34.57236481]
[18.09477615 28.72557831]
[4.16405916 23.16364098]
[-9.76665688 17.60170364]
[-23.69737244 12.03976631]
[-34.28214645 22.94989967]
[-48.23831177 28.97434044]
[-63.43765640 29.19440651]
[-77.56238556 23.57653809]
[-88.45858765 12.97742081]
[-94.46466064 -0.98665738]
[-94.66473389 -16.18627548]
[-89.02828979 -30.30360413]
[-78.41484833 -41.18585205]
[-64.44287872 -47.17355347]
[-49.24301147 -47.35363007]
[-35.13311005 -41.69861984]
[-24.26483536 -31.07087326]
[-18.29551697 -17.09104156]
[-18.13543510 -1.89094973]
[-4.20471954 3.67098761]
[9.72599697 9.23292446]
[23.65671349 14.79486179]
[28.37226105 13.73995590]
[33.79663467 15.68006897]
[38.03753281 20.88174057]
[29.45903015 8.57689190]
[24.14470100 -5.45015001]
[22.41625595 -20.35023308]
[24.37832832 -35.22135544]
[29.91214371 -49.16326523]
[38.68269730 -61.33197021]
[50.15905762 -70.99081421]
[63.64647293 -77.55507660]
[78.32846832 -80.62738800]
[93.31623840 -80.02175140]
[107.70246887 -75.77484131]
[120.61627197 -68.14373779]
[131.27587891 -57.59041214]
[139.03601074 -44.75373077]
[143.42687988 -30.41077614]
[144.18266296 -15.42982864]
[141.25764465 -0.71778566]
[134.82885742 12.83473396]
[125.28550720 24.40730476]
[113.20529938 33.29936218]
[99.31954193 38.97261047]
[84.46883392 41.08360672]
[69.55217743 39.50455856]
[55.47138977 34.33044434]
[64.87524414 46.01665497]
[74.27910614 57.70286179]
[83.68296051 69.38906860]
[93.08682251 81.07527924]
[86.73680115 67.48567963]
[90.03405762 52.85256195]
[101.59874725 43.29965210]
[116.59122467 42.82468796]
[128.73738098 51.62643433]
[132.95425415 66.02149963]
[127.47715759 79.98578644]
[114.59690857 87.67572784]
[128.93696594 83.27542877]
[143.27703857 78.87512970]
[157.61709595 74.47483063]
[171.95715332 70.07453156]
[174.20318604 54.97757339]
[182.78422546 42.35503006]
[195.99649048 34.71311569]
[211.21667480 33.56913757]
[225.42280579 39.15023422]
[235.79425049 50.34827042]
[240.27172852 64.93987274]
[237.96626282 80.02787018]
[229.33558655 92.61651611]
[216.09332275 100.20634460]
[200.86875916 101.29037476]
[186.68470764 95.65338135]
[176.35745239 84.41458893]
[162.01739502 88.81488800]
[147.67733765 93.21518707]
[133.33726501 97.61549377]
[118.99720764 102.01579285]
[133.86874390 103.97480011]
[142.45283508 116.27574921]
[139.16079712 130.91003418]
[126.13590240 138.34994507]
[111.85808563 133.75169373]
[105.62298584 120.10943604]
[105.62298584 135.10943604]
[105.62298584 150.10943604]
[105.62298584 165.10943604]
[105.62298584 180.10943604]
[120.37633514 183.06417847]
[134.26527405 188.83868408]
[146.75669861 197.20928955]
[157.37158203 207.85273743]
[165.70327759 220.35862732]
[171.43312073 234.24528503]
[174.34262085 248.97827148]
[174.32179260 263.99096680]
[171.37332153 278.70642090]
[165.61235046 292.55938721]
[157.26203918 305.01821899]
[146.64485168 315.60504150]
[134.17019653 323.91436768]
[120.31855011 329.62835693]
[105.62298584 332.52914429]
[105.62298584 347.52914429]
[105.62298584 362.52914429]
[105.62298584 377.52914429]
[105.62298584 392.52914429]
[105.62298584 407.52914429]
[105.62298584 422.52914429]
[105.62298584 437.52914429]
[105.62298584 452.52914429]
[105.62298584 467.52914429]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[25 128]
[26 127]
[27 126]
[28 125]
[29 124]
[31 89]
[32 88]
[33 87]
[34 86]
[35 85]
[36 61]
[37 58]
[38 57]
[39 56]
[40 55]
[97 118]
[98 117]
[99 116]
[100 115]
[101 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
