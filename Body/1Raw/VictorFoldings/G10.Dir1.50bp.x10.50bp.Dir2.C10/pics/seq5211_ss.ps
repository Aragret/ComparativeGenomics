%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAAACCAAACCCAGCUACGCAAAAUCUUAGCAUACUCCUCAAUUACCCACAUAGGAUGAAUxxxxxxxxxxCAUCAUAGGAGGCUUCAUUCACUGAUUUCCCCUAUUCUCAGGCUACACCCUAGACCAAACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[121.55767822 450.62838745]
[121.55767822 435.62838745]
[121.55767822 420.62838745]
[121.55767822 405.62838745]
[121.55767822 390.62838745]
[121.55767822 375.62838745]
[121.55767822 360.62838745]
[121.55767822 345.62838745]
[121.55767822 330.62838745]
[121.55767822 315.62838745]
[104.96303558 312.18389893]
[89.50684357 305.21545410]
[75.92784882 295.05328369]
[64.87570953 282.18023682]
[56.87990570 267.20895386]
[52.32437134 250.85276794]
[51.42906952 233.89155579]
[54.23936462 217.13467407]
[60.62374115 201.38229370]
[70.27993774 187.38722229]
[82.74928284 175.81887817]
[97.43844604 167.23132324]
[113.64771271 162.03666687]
[112.11042023 147.11564636]
[110.57312775 132.19462585]
[98.98482513 133.21115112]
[87.96770477 130.26272583]
[78.81001282 123.85497284]
[72.52715302 114.88809204]
[69.74983978 104.53305817]
[70.66316986 94.07976532]
[75.00208282 84.77660370]
[82.10182190 77.68135834]
[76.11352539 63.92853165]
[70.12522888 50.17570496]
[57.07287216 46.70500565]
[48.54240417 36.48677063]
[47.48999405 23.41309166]
[54.07742310 12.29742336]
[48.37276077 -1.57545722]
[42.66809845 -15.44833755]
[38.43190384 -18.70562172]
[36.13982010 -22.85917091]
[35.80413818 -27.00126076]
[37.06848526 -30.35516167]
[32.22866821 -44.55291367]
[27.38885117 -58.75066757]
[22.54903603 -72.94841766]
[17.70921898 -87.14617157]
[15.14979172 -72.36614227]
[6.11276960 -60.39399719]
[-8.13044834 -55.68966293]
[-22.52031898 -59.92423630]
[-31.94520569 -71.59349060]
[-33.05715942 -86.55222321]
[-25.46277618 -99.48526764]
[-11.85508060 -93.17411804]
[-20.77123070 -105.23654938]
[-36.35973358 -109.02839661]
[-42.98345184 -123.64023590]
[-35.56123734 -137.86311340]
[-19.78677559 -140.78645325]
[-7.76088476 -130.16772461]
[-8.70879936 -114.15269470]
[0.20735116 -102.09026337]
[14.45404339 -106.78406525]
[14.45404339 -121.78406525]
[14.45404339 -136.78407288]
[14.45404339 -151.78407288]
[0.39685592 -157.56886292]
[-10.37301731 -168.29632568]
[-16.21324730 -182.33056641]
[-16.23324394 -197.53149414]
[-10.42995644 -211.58105469]
[0.31165618 -222.33680725]
[14.35357571 -228.15856934]
[29.55451012 -228.15856934]
[43.59643173 -222.33680725]
[54.33804321 -211.58105469]
[60.14133072 -197.53149414]
[60.12133408 -182.33056641]
[54.28110504 -168.29632568]
[43.51123047 -157.56886292]
[29.45404243 -151.78407288]
[29.45404243 -136.78407288]
[29.45404243 -121.78406525]
[29.45404243 -106.78406525]
[31.90697098 -91.98598480]
[36.74678802 -77.78823853]
[41.58660507 -63.59048080]
[46.42642212 -49.39273071]
[51.26623535 -35.19497681]
[56.54097748 -21.15300179]
[62.24563980 -7.28012037]
[67.95030212 6.59276009]
[83.71409607 12.37255859]
[90.58274841 28.06182671]
[83.87805176 44.18740845]
[89.86634827 57.94023514]
[95.85464478 71.69306183]
[113.68305969 72.88928986]
[128.33827209 84.86398315]
[133.63345337 104.13227844]
[148.56947327 102.74825287]
[163.50547791 101.36422729]
[178.44149780 99.98020172]
[183.71852112 85.65833282]
[194.69293213 75.05056763]
[209.18579102 70.26306915]
[224.31948853 72.24641418]
[237.08924866 80.60679626]
[244.95960999 93.68426514]
[246.36791992 108.88227081]
[241.03454590 123.18324280]
[230.01843262 133.74771118]
[215.50683594 138.47810364]
[200.38105774 136.43518066]
[187.64431763 128.02456665]
[179.82551575 114.91621399]
[164.88951111 116.30023956]
[149.95349121 117.68426514]
[135.01748657 119.06829071]
[125.49414825 130.65733337]
[127.03144073 145.57835388]
[128.56872559 160.49937439]
[141.71792603 161.55348206]
[154.49757385 164.80979919]
[166.54165649 170.17388916]
[177.50541687 177.49093628]
[187.07527161 186.55027771]
[194.97770691 197.09141541]
[200.98713684 208.81153870]
[204.93235779 221.37419128]
[206.70135498 234.41894531]
[206.24459839 247.57177734]
[203.57629395 260.45574951]
[198.77406311 272.70178223]
[191.97662354 283.95928955]
[183.37977600 293.90625000]
[173.23078918 302.25827026]
[161.82128906 308.77685547]
[149.47886658 313.27618408]
[136.55767822 315.62838745]
[136.55767822 330.62838745]
[136.55767822 345.62838745]
[136.55767822 360.62838745]
[136.55767822 375.62838745]
[136.55767822 390.62838745]
[136.55767822 405.62838745]
[136.55767822 420.62838745]
[136.55767822 435.62838745]
[136.55767822 450.62838745]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[23 125]
[24 124]
[25 123]
[33 100]
[34 99]
[35 98]
[39 95]
[40 94]
[41 93]
[45 92]
[46 91]
[47 90]
[48 89]
[49 88]
[57 65]
[58 64]
[66 87]
[67 86]
[68 85]
[69 84]
[103 122]
[104 121]
[105 120]
[106 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
