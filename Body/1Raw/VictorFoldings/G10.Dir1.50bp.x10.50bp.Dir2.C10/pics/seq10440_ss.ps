%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUAUACUCCCUCUACAUAUUUACCACAACACAAUGGGGCUCACUCACCCACCACAUUAAxxxxxxxxxxUACAACCGUAUCGGCGAUAUCGGUUUCAUCCUCGCCUUAGCAUGAUUUAUCCUACACUCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[118.72848511 418.22021484]
[118.72848511 403.22021484]
[118.72848511 388.22021484]
[118.72848511 373.22021484]
[118.72848511 358.22021484]
[118.72848511 343.22021484]
[118.72848511 328.22021484]
[118.72848511 313.22021484]
[118.72848511 298.22021484]
[118.72848511 283.22021484]
[104.03292084 280.31942749]
[90.18126678 274.60543823]
[77.70661163 266.29611206]
[67.08943176 255.70927429]
[58.73911285 243.25047302]
[52.97814560 229.39749146]
[50.02967072 214.68205261]
[50.00884628 199.66934204]
[52.91834641 184.93637085]
[58.64818573 171.04971313]
[66.97987366 158.54382324]
[77.59475708 147.90037537]
[90.08619690 139.52975464]
[103.97512817 133.75524902]
[118.72848511 130.80050659]
[90.44255066 131.05030823]
[73.67231750 111.98752594]
[76.81194305 89.70998383]
[65.51293945 79.84426117]
[53.77528381 88.54406738]
[40.48497772 94.59791565]
[26.22929955 97.74108124]
[11.63762283 97.83739471]
[-2.64639306 94.88515472]
[-15.99319267 89.01707458]
[-27.81506729 80.49431610]
[-37.59203720 69.69487762]
[-44.89471817 57.09683609]
[-49.40319061 43.25717163]
[-50.92099762 28.78713417]
[-49.38371277 14.32526970]
[-44.86167526 0.50922483]
[-37.55676651 -12.05236149]
[-48.64808273 -22.15101051]
[-59.73939896 -32.24966049]
[-70.83071136 -42.34830856]
[-86.24393463 -45.91806030]
[-90.44566345 -60.20773315]
[-101.53697968 -70.30638123]
[-115.67255402 -64.54891968]
[-130.90579224 -65.50338745]
[-144.21214294 -72.98027802]
[-152.94960022 -85.49504852]
[-155.38336182 -100.56288147]
[-151.03018188 -115.19204712]
[-140.75437927 -126.47792053]
[-126.59625244 -132.17967224]
[-111.36688232 -131.16522217]
[-98.09008026 -123.63599396]
[-89.40196991 -111.08691406]
[-87.02757263 -96.00961304]
[-91.43833160 -81.39769745]
[-80.34701538 -71.29904938]
[-65.72711945 -68.45162201]
[-60.73206329 -53.43962479]
[-49.64075089 -43.34097672]
[-38.54943466 -33.24232483]
[-27.45811844 -23.14367676]
[-14.84984970 -32.02893829]
[-0.57998967 -37.90277100]
[14.64343643 -40.47040176]
[30.06435013 -39.60118866]
[44.91617584 -35.33524704]
[58.45993805 -27.88163567]
[70.02104187 -17.60809135]
[79.02286530 -5.02289724]
[85.01551819 9.25026703]
[87.69833374 24.50322914]
[86.93494415 39.97846985]
[82.76021576 54.90672684]
[75.37866211 68.54524994]
[86.67766571 78.41097260]
[107.03256989 70.10798645]
[130.62205505 80.98112488]
[141.28367615 70.42984009]
[151.94531250 59.87854767]
[162.60693359 49.32725525]
[173.26855469 38.77596664]
[183.81985474 28.11433983]
[194.25965881 17.34353256]
[204.69947815 6.57272339]
[215.13928223 -4.19808531]
[221.82153320 -19.77961349]
[238.64395142 -17.67191315]
[241.27552795 -0.92344666]
[225.91009521 6.24172735]
[215.47027588 17.01253510]
[205.03047180 27.78334427]
[194.59065247 38.55415344]
[192.17807007 45.59155655]
[183.81985474 49.43759155]
[173.15821838 59.98888397]
[162.49659729 70.54017639]
[151.83497620 81.09146118]
[141.17333984 91.64275360]
[146.22210693 105.76755524]
[161.15640259 107.16986084]
[176.09071350 108.57216644]
[191.02502441 109.97446442]
[195.03175354 107.94773102]
[199.06530762 107.39874268]
[202.64599609 108.14745331]
[205.40565491 109.87323761]
[207.12463379 112.16505432]
[221.89068604 114.80391693]
[237.12149048 108.72487640]
[249.83226013 119.08673859]
[246.94725037 135.23011780]
[231.43431091 140.54809570]
[219.25181580 129.56997681]
[204.48576355 126.93110657]
[189.62272644 124.90877533]
[174.68841553 123.50646973]
[159.75410461 122.10417175]
[144.81979370 120.70186615]
[133.72848511 130.80050659]
[148.48182678 133.75524902]
[162.37077332 139.52975464]
[174.86219788 147.90037537]
[185.47708130 158.54382324]
[193.80877686 171.04971313]
[199.53862000 184.93637085]
[202.44812012 199.66934204]
[202.42729187 214.68205261]
[199.47882080 229.39749146]
[193.71784973 243.25047302]
[185.36753845 255.70927429]
[174.75035095 266.29611206]
[162.27569580 274.60543823]
[148.42404175 280.31942749]
[133.72848511 283.22021484]
[133.72848511 298.22021484]
[133.72848511 313.22021484]
[133.72848511 328.22021484]
[133.72848511 343.22021484]
[133.72848511 358.22021484]
[133.72848511 373.22021484]
[133.72848511 388.22021484]
[133.72848511 403.22021484]
[133.72848511 418.22021484]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[25 126]
[28 82]
[29 81]
[43 68]
[44 67]
[45 66]
[46 65]
[48 63]
[49 62]
[84 105]
[85 104]
[86 103]
[87 102]
[88 101]
[89 99]
[90 98]
[91 97]
[92 96]
[106 125]
[107 124]
[108 123]
[109 122]
[114 121]
[115 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
