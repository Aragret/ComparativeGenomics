%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUUAUCUCCACACUAGCAGAGACCAACCGAACCCCCUUCGACCUUGCCGAAGGGGAGUCCGxxxxxxxxxxGUAAACCGGAGAUGAAAACCUUUUUCCAAGGACAAAUCAGAGAAAAAGUCUUUAACUCCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 252.77171326]
[92.50000000 237.77171326]
[92.50000000 222.77171326]
[92.50000000 207.77171326]
[92.50000000 192.77171326]
[92.50000000 177.77171326]
[92.50000000 162.77171326]
[92.50000000 147.77171326]
[92.50000000 132.77171326]
[92.50000000 117.77170563]
[85.81392670 104.34426117]
[73.84366608 95.30474091]
[61.87340927 86.26522064]
[49.90314865 77.22570038]
[37.93289185 68.18618011]
[25.96263313 59.14665985]
[13.99237442 50.10714340]
[2.02211571 41.06762314]
[-9.94814301 32.02810287]
[-24.58048058 40.45203400]
[-41.29722595 42.24527359]
[-57.24750900 37.15988541]
[-69.73451233 26.11610603]
[-83.16195679 32.80218124]
[-89.60311890 47.49541092]
[-105.14317322 51.48118210]
[-117.86111450 41.70195007]
[-118.00083923 25.65950394]
[-105.45515442 15.66023731]
[-89.84803772 19.37473106]
[-76.42058563 12.68865585]
[-77.79677582 5.07724857]
[-77.69444275 -2.65689325]
[-76.11737061 -10.22922802]
[-73.12356567 -17.36116791]
[-68.82318115 -23.79032516]
[-78.46498871 -35.28099060]
[-89.23367310 -45.72300339]
[-101.01580811 -55.00638580]
[-116.64406586 -57.46974564]
[-121.85247040 -71.42401886]
[-133.63461304 -80.70740509]
[-145.51142883 -89.86933899]
[-157.48168945 -98.90885925]
[-169.45195007 -107.94837952]
[-181.42221069 -116.98789978]
[-193.39247131 -126.02742004]
[-205.36273193 -135.06694031]
[-217.33299255 -144.10646057]
[-229.30323792 -153.14598083]
[-244.50210571 -149.46783447]
[-258.48629761 -156.46611023]
[-264.65295410 -170.83644104]
[-260.09033203 -185.79359436]
[-246.95277405 -194.27526855]
[-231.44343567 -192.27665710]
[-220.88534546 -180.74145508]
[-220.26371765 -165.11624146]
[-208.29347229 -156.07672119]
[-196.32321167 -147.03720093]
[-184.35295105 -137.99768066]
[-172.38269043 -128.95816040]
[-160.41242981 -119.91864014]
[-148.44216919 -110.87911987]
[-136.47190857 -101.83959961]
[-129.19389343 -100.30902863]
[-124.35122681 -92.48954010]
[-112.56909180 -83.20615387]
[-97.78356934 -81.40680695]
[-91.73242188 -66.78852081]
[-79.95028687 -57.50513840]
[-83.39783478 -72.10357666]
[-79.21453857 -86.50843811]
[-68.48372650 -96.98935699]
[-53.98431015 -100.83213043]
[-39.47114563 -97.04161835]
[-28.70264244 -86.59943390]
[-24.46747589 -72.20973206]
[-27.86240959 -57.59896851]
[-38.00827026 -46.55082703]
[-52.27762985 -41.92639542]
[-66.97432709 -44.92280579]
[-57.33251190 -33.43214035]
[-41.12022781 -38.54721451]
[-24.19126129 -36.53125000]
[-9.55047989 -27.70185852]
[0.18686070 -13.58959198]
[3.26224804 3.32726073]
[-0.90862304 20.05784416]
[11.06163502 29.09736443]
[23.03189468 38.13688278]
[35.00215149 47.17640305]
[46.97241211 56.21592331]
[58.94266891 65.25543976]
[70.91292572 74.29496002]
[82.88318634 83.33448029]
[94.85344696 92.37400055]
[97.02380371 84.81691742]
[104.45886230 78.71817780]
[115.97164917 76.98283386]
[128.97581482 81.66847229]
[143.97502136 81.82246399]
[158.97422791 81.97646332]
[173.97344971 82.13046265]
[188.97265625 82.28445435]
[203.97186279 82.43845367]
[218.97106934 82.59245300]
[224.57167053 68.48579407]
[234.89285278 57.35755539]
[248.53875732 50.71274185]
[263.66390991 49.45000458]
[278.22271729 53.74011993]
[290.24627686 63.00288773]
[298.10842896 75.98558807]
[300.74597168 90.93242645]
[297.80212402 105.82196045]
[289.67504883 118.64050293]
[277.46383667 127.65445709]
[262.82000732 131.64474487]
[247.72398376 130.07173157]
[234.21737671 123.14813995]
[224.12686157 111.81033325]
[218.81707764 97.59165955]
[203.81787109 97.43766022]
[188.81864929 97.28366852]
[173.81944275 97.12966919]
[158.82023621 96.97566986]
[143.82102966 96.82167816]
[128.82182312 96.66767883]
[123.49136353 101.94368744]
[136.58058167 109.26983643]
[149.66979980 116.59598541]
[164.32360840 119.79996490]
[174.46427917 130.85287476]
[176.39723206 145.72781372]
[169.41822815 159.00538635]
[156.06996155 165.84814453]
[141.21557617 163.76309204]
[130.26699829 153.50985718]
[127.21321869 138.82318115]
[120.02183533 125.65943909]
[112.83045197 112.49570465]
[107.50000000 117.77170563]
[107.50000000 132.77171326]
[107.50000000 147.77171326]
[107.50000000 162.77171326]
[107.50000000 177.77171326]
[107.50000000 192.77171326]
[107.50000000 207.77171326]
[107.50000000 222.77171326]
[107.50000000 237.77171326]
[107.50000000 252.77171326]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 97]
[12 96]
[13 95]
[14 94]
[15 93]
[16 92]
[17 91]
[18 90]
[19 89]
[23 31]
[24 30]
[36 83]
[37 82]
[38 71]
[39 70]
[41 68]
[42 67]
[43 65]
[44 64]
[45 63]
[46 62]
[47 61]
[48 60]
[49 59]
[50 58]
[101 129]
[102 128]
[103 127]
[104 126]
[105 125]
[106 124]
[107 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
