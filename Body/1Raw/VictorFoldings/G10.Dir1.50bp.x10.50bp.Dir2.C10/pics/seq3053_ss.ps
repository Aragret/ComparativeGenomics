%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCAAAUUCCUCCCUGUACGAAAGGACAAGAGAAAUAAGGCCUACUUCACAAAGCGCCUUCxxxxxxxxxxCCCUAGGCUCACUAAACAUUCUACUACUCACUCUCACUGCCCAAGAACUAUCAAACUCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[106.90621185 291.73300171]
[106.90621185 276.73300171]
[106.90621185 261.73300171]
[106.90621185 246.73301697]
[106.90621185 231.73301697]
[106.90621185 216.73301697]
[106.90621185 201.73301697]
[106.90621185 186.73301697]
[106.90621185 171.73301697]
[106.90621185 156.73301697]
[104.72937012 141.89181519]
[100.42179108 127.52362823]
[81.84400177 123.88579559]
[68.57619476 108.21099091]
[67.93777466 86.07679749]
[53.71099091 90.83061218]
[39.48421478 95.58442688]
[28.84752655 107.29644775]
[14.32420731 103.99153137]
[0.09742827 108.74534607]
[-14.12935066 113.49916077]
[-20.60556030 124.70240021]
[-32.60282135 128.34721375]
[-43.49510193 122.99319458]
[-57.81769943 127.45001221]
[-72.14029694 131.90682983]
[-83.01833344 143.39503479]
[-97.46975708 139.78868103]
[-108.19058990 152.19819641]
[-124.24494171 148.85308838]
[-129.11747742 133.19451904]
[-117.79574585 121.33069611]
[-101.92657471 125.46608734]
[-92.07298279 114.29666901]
[-76.59711456 117.58422852]
[-62.27451324 113.12741089]
[-47.95191956 108.67060089]
[-36.80059052 95.15586853]
[-18.88316536 99.27238464]
[-4.65638638 94.51856995]
[9.57039261 89.76475525]
[19.18948555 78.39275360]
[34.73040009 81.35765076]
[48.95717621 76.60383606]
[63.18395615 71.85002136]
[66.89012146 57.31508255]
[56.67663956 46.32941818]
[46.46315765 35.34375381]
[36.24967957 24.35808945]
[26.03619766 13.37242508]
[15.70899391 2.49359965]
[5.26918125 -8.27720928]
[-9.83432865 -5.13276339]
[-24.23203278 -10.67439270]
[-33.32967758 -23.13378525]
[-34.22423553 -38.53519058]
[-26.63025665 -51.96407700]
[-12.97095299 -59.13534164]
[2.39504099 -57.76065063]
[14.56449318 -48.27866745]
[19.65417671 -33.71506119]
[16.03998947 -18.71702194]
[26.47980309 -7.94621277]
[33.43849945 -5.31521368]
[37.02186203 3.15894508]
[47.23534393 14.14460945]
[57.44882202 25.13027382]
[67.66230011 36.11594009]
[77.87578583 47.10160446]
[74.17942047 32.56417465]
[64.04436493 21.50611687]
[58.45594025 7.58600330]
[58.13104248 -7.41047764]
[63.11134720 -21.55956078]
[72.75797272 -33.04618835]
[85.83344269 -40.39683914]
[100.66042328 -42.66856766]
[115.33688354 -39.56995010]
[127.98011780 -31.49847984]
[136.96824646 -19.48958015]
[141.14823914 -5.08376122]
[139.98390198 9.87098122]
[133.62458801 23.45623589]
[122.88607788 33.92927170]
[109.14756775 39.94620514]
[99.89057159 51.74908829]
[113.67295074 45.82912445]
[127.45533752 39.90916061]
[124.32318115 25.18924713]
[124.12323761 10.14111519]
[126.86317444 -4.65682316]
[132.43768311 -18.63577461]
[140.63249207 -31.25842667]
[151.13261414 -42.03960037]
[163.53445435 -50.56488800]
[177.36131287 -56.50661087]
[192.08174133 -59.63637924]
[207.12989807 -59.83389282]
[221.92739868 -57.09156036]
[235.90544128 -51.51478958]
[248.52676392 -43.31793976]
[259.30624390 -32.81607056]
[267.82952881 -20.41285133]
[273.76901245 -6.58502483]
[276.89639282 8.13590240]
[277.09146118 23.18409729]
[274.34674072 37.98114777]
[268.76770020 51.95829391]
[260.56881714 64.57829285]
[250.06520081 75.35606384]
[237.66059875 83.87734222]
[223.83181763 89.81458282]
[209.11038208 92.93959045]
[194.06216431 93.13223267]
[179.26554871 90.38510895]
[165.28930664 84.80381012]
[152.67063904 76.60287476]
[141.89456177 66.09751892]
[133.37528992 53.69154358]
[119.59291840 59.61150360]
[105.81053162 65.53147125]
[123.01314545 76.21212006]
[130.61744690 93.79005432]
[127.04447174 111.48946381]
[114.78997040 123.21604156]
[119.09755707 137.58422852]
[123.48655701 123.24069977]
[132.94779968 111.60090637]
[146.09205627 104.37396240]
[160.98927307 102.62104797]
[175.45204163 106.59953308]
[187.35671997 115.72525787]
[194.95527649 128.65823364]
[197.13198853 143.49946594]
[193.56723022 158.06971741]
[184.78443909 170.22959900]
[172.07324219 178.19360352]
[157.30007935 180.79234314]
[142.63414001 177.64422607]
[130.22894287 169.21150208]
[121.90621185 156.73301697]
[121.90621185 171.73301697]
[121.90621185 186.73301697]
[121.90621185 201.73301697]
[121.90621185 216.73301697]
[121.90621185 231.73301697]
[121.90621185 246.73301697]
[121.90621185 261.73300171]
[121.90621185 276.73300171]
[121.90621185 291.73300171]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 126]
[12 125]
[15 45]
[16 44]
[17 43]
[19 41]
[20 40]
[21 39]
[24 37]
[25 36]
[26 35]
[28 33]
[46 69]
[47 68]
[48 67]
[49 66]
[50 65]
[51 63]
[52 62]
[86 121]
[87 120]
[88 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
