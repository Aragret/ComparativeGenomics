%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACCAAACCCCCCCUCCCCCGCUUCUGGCCACAGCACUUAAACACAUCUCUGCCAAACCCxxxxxxxxxxUUACACUUAGGAGAUUUCAACUUAACUUGACCGCUCUGAGCUAAACCUAGCCCCAAACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-0.28968021 245.78887939]
[-9.30720997 257.77572632]
[-18.32473946 269.76254272]
[-27.34226990 281.74938965]
[-36.35979843 293.73620605]
[-45.25214767 305.81619263]
[-54.01835632 317.98803711]
[-62.78456497 330.15988159]
[-71.55077362 342.33172607]
[-80.31697845 354.50354004]
[-74.56449890 368.81832886]
[-77.48679352 383.96636963]
[-88.15136719 395.11404419]
[-103.15519714 398.70413208]
[-117.71060944 393.59106445]
[-127.17302704 381.40637207]
[-128.52302551 366.03820801]
[-121.32983398 352.39044189]
[-107.88876343 344.81805420]
[-92.48881531 345.73733521]
[-83.72261047 333.56549072]
[-74.95639801 321.39367676]
[-66.19019318 309.22183228]
[-57.42398453 297.04998779]
[-56.05822372 289.73696899]
[-48.34663391 284.71868896]
[-39.32910156 272.73184204]
[-30.31157303 260.74502563]
[-21.29404259 248.75819397]
[-12.27651310 236.77134705]
[-35.26538467 214.08634949]
[-53.74821854 187.60083008]
[-67.10929871 158.19709778]
[-74.90353394 126.85466003]
[-76.87127686 94.61763763]
[-91.83152771 93.52632904]
[-106.79177094 92.43501282]
[-121.30899811 100.06274414]
[-135.02702332 91.07675934]
[-133.83390808 74.72107697]
[-118.95704651 67.82101440]
[-105.70046234 77.47476959]
[-90.74021912 78.56607819]
[-75.77996826 79.65738678]
[-74.58280182 71.13369751]
[-72.97257233 62.67831039]
[-70.95307922 54.31122589]
[-68.52909851 46.05224228]
[-65.70638275 37.92090225]
[-62.49158859 29.93644524]
[-58.89233780 22.11775970]
[-54.91714096 14.48334599]
[-50.57540131 7.05126905]
[-45.87739944 -0.16088748]
[-40.83423996 -7.13605928]
[-35.45786285 -13.85774326]
[-29.76098824 -20.31003380]
[-23.75709343 -26.47766685]
[-17.46038437 -32.34605026]
[-10.88575840 -37.90129471]
[-4.04877234 -43.13026047]
[3.03439689 -48.02057266]
[10.34699059 -52.56066513]
[17.87170792 -56.73979187]
[25.59074402 -60.54806519]
[33.48583221 -63.97647476]
[41.53829956 -67.01690674]
[49.72908783 -69.66217804]
[58.03882217 -71.90601349]
[66.44783783 -73.74311829]
[74.93623352 -75.16913605]
[83.48393250 -76.18069458]
[92.07071686 -76.77540588]
[100.67625427 -76.95185852]
[109.28019714 -76.70964050]
[117.86217499 -76.04931641]
[126.40189362 -74.97245026]
[134.87915039 -73.48159027]
[143.27388000 -71.58027649]
[151.56620789 -69.27298737]
[159.73654175 -66.56519318]
[167.76553345 -63.46329880]
[175.63420105 -59.97464371]
[183.32389832 -56.10748291]
[190.81645203 -51.87096786]
[198.09413147 -47.27511597]
[205.13970947 -42.33080673]
[211.93653870 -37.04973984]
[218.46850586 -31.44440269]
[224.72018433 -25.52806473]
[230.67675781 -19.31472397]
[236.32415771 -12.81907749]
[241.64900208 -6.05649710]
[246.63868713 0.95701724]
[251.28143311 8.20487118]
[255.56623840 15.66991615]
[259.48297119 23.33448982]
[273.26535034 17.41452599]
[287.04772949 11.49456310]
[300.83010864 5.57460022]
[306.45425415 -9.19511414]
[320.90890503 -15.58568192]
[335.61831665 -9.80569172]
[341.85571289 4.71569109]
[335.92053223 19.36318779]
[321.33401489 25.44669724]
[306.75009155 19.35698128]
[292.96768188 25.27694511]
[279.18530273 31.19690895]
[265.40292358 37.11687088]
[273.27227783 64.09547424]
[276.77130127 91.97966766]
[275.81173706 120.06615448]
[290.62948608 122.39726257]
[305.44726562 124.72836304]
[322.03359985 121.21699524]
[329.99929810 136.18309021]
[317.82321167 147.98051453]
[303.11614990 139.54612732]
[288.29840088 137.21501160]
[273.48062134 134.88391113]
[270.90786743 145.85765076]
[267.64166260 156.64533997]
[263.69528198 167.20320129]
[259.08477783 177.48840332]
[253.82881165 187.45921326]
[247.94873047 197.07518005]
[241.46838379 206.29728699]
[234.41406250 215.08811951]
[226.81439209 223.41201782]
[218.70021057 231.23519897]
[210.10443115 238.52592468]
[201.06192017 245.25462341]
[191.60939026 251.39398193]
[181.78517151 256.91909790]
[171.62911987 261.80755615]
[161.18246460 266.03952026]
[150.48757935 269.59783936]
[139.58784485 272.46801758]
[128.52749634 274.63848877]
[117.35140228 276.10040283]
[106.10491180 276.84780884]
[94.83364868 276.87771606]
[83.58335114 276.19000244]
[72.39965820 274.78741455]
[61.32794571 272.67568970]
[50.41313553 269.86337280]
[39.69951248 266.36187744]
[29.23054504 262.18539429]
[19.04870415 257.35089111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 30]
[2 29]
[3 28]
[4 27]
[5 26]
[6 24]
[7 23]
[8 22]
[9 21]
[10 20]
[35 44]
[36 43]
[37 42]
[97 110]
[98 109]
[99 108]
[100 107]
[113 121]
[114 120]
[115 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
