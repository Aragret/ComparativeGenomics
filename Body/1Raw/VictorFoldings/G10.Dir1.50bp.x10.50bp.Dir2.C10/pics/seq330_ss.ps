%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCCUCCCCCGCUUCUGGCCACAGCACUUAAACACAUCUCUGCCAAACCCCAAAAACAAAxxxxxxxxxxUUUGGCGGUAUGCACUUUUAACAGUCACCCCCCAACUAACACAUUAUUUUCCCCUCCCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[154.74394226 178.37408447]
[144.08232117 167.82278442]
[133.42068481 157.27149963]
[122.75906372 146.72021484]
[112.09743500 136.16891479]
[97.21415710 138.03652954]
[89.49007416 150.89492798]
[81.76599121 163.75334167]
[74.04190063 176.61174011]
[66.31781769 189.47013855]
[68.79003906 205.32156372]
[57.83261108 217.03968811]
[41.85113907 215.63536072]
[33.10523987 202.18586731]
[38.30401611 187.00851440]
[53.45941544 181.74604797]
[61.18349838 168.88764954]
[68.90758514 156.02925110]
[76.63166809 143.17085266]
[84.35575867 130.31243896]
[74.97105408 121.37615204]
[69.88523102 109.95757294]
[69.54908752 97.92093658]
[73.66698456 87.09480286]
[81.29191589 78.99443054]
[74.66341400 65.53846741]
[68.03491211 52.08250046]
[54.37867355 45.87709427]
[39.88307571 49.73425293]
[28.65530777 61.68704224]
[12.75400162 57.67699432]
[8.53705978 41.82929993]
[20.34251022 30.44670868]
[36.02591705 35.23865509]
[50.52151489 31.38149643]
[39.89176178 20.79809761]
[47.48164749 7.86002874]
[61.90637589 11.97441292]
[58.20021439 -2.56052327]
[54.49405289 -17.09545898]
[50.78789520 -31.63039589]
[47.08173370 -46.16533279]
[30.45822906 -55.14633179]
[25.69394493 -73.10180664]
[35.34262466 -88.60343170]
[31.03503990 -102.97161865]
[26.72745514 -117.33979797]
[15.73174763 -124.16242981]
[12.46305656 -136.26757812]
[18.15434074 -146.98748779]
[14.14660072 -161.44218445]
[10.13885975 -175.89686584]
[6.13111973 -190.35156250]
[2.12337947 -204.80624390]
[-1.88436079 -219.26094055]
[-5.89210081 -233.71562195]
[-9.89984131 -248.17031860]
[-24.97836685 -247.87219238]
[-39.65712357 -251.33410645]
[-53.01339340 -258.33847046]
[-64.20758820 -268.44491577]
[-72.53603363 -281.01821899]
[-77.47519684 -295.26797485]
[-78.71459961 -310.29843140]
[-76.17632294 -325.16476440]
[-70.01993561 -338.93249512]
[-60.63242722 -350.73611450]
[-48.60390472 -359.83364868]
[-34.69049454 -365.65325928]
[-19.76680374 -367.82910156]
[-4.77094698 -366.22439575]
[9.35442257 -360.94000244]
[21.72137260 -352.30810547]
[31.55250549 -340.87133789]
[38.22982788 -327.34863281]
[41.33360291 -312.58999634]
[40.66871643 -297.52316284]
[36.27696609 -283.09530640]
[28.43442535 -270.21331787]
[17.63407898 -259.68701172]
[4.55484724 -252.17805481]
[8.56258774 -237.72335815]
[12.57032776 -223.26867676]
[16.57806778 -208.81399536]
[20.58580780 -194.35929871]
[24.59354782 -179.90461731]
[28.60128784 -165.44992065]
[32.60902786 -150.99523926]
[45.76922607 -139.42764282]
[41.09563828 -121.64738464]
[45.40322495 -107.27920532]
[49.71080780 -92.91101837]
[60.75881195 -89.77539062]
[68.98532867 -81.59052277]
[72.24389648 -70.32750702]
[69.60484314 -58.78002548]
[61.61666870 -49.87149429]
[65.32283020 -35.33655548]
[69.02899170 -20.80162048]
[72.73515320 -6.26668453]
[76.44131470 8.26825142]
[81.49088287 45.45400238]
[88.11937714 58.90996933]
[94.74787903 72.36593628]
[113.23145294 73.49463654]
[127.92704010 86.26904297]
[132.00474548 106.28344727]
[122.64872742 125.50729370]
[133.31034851 136.05857849]
[143.97198486 146.60987854]
[154.63360596 157.16116333]
[165.29522705 167.71244812]
[177.37315369 158.76681519]
[190.67510986 151.76980591]
[204.88931274 146.88545227]
[219.68254089 144.22822571]
[234.70802307 143.86042786]
[249.61354065 145.79067993]
[264.04968262 149.97373962]
[277.67807007 156.31155396]
[290.17919922 164.65553284]
[301.26004028 174.81010437]
[310.66085815 186.53721619]
[318.16125488 199.56198120]
[323.58544922 213.57907104]
[326.80624390 228.25990295]
[327.74816895 243.26034546]
[326.38912964 258.22875977]
[322.76098633 272.81427002]
[316.94879150 286.67495728]
[309.08880615 299.48593140]
[299.36526489 310.94686890]
[288.00610352 320.78912354]
[275.27758789 328.78195190]
[261.47808838 334.73800659]
[246.93112183 338.51766968]
[231.97764587 340.03234863]
[216.96821594 339.24652100]
[202.25468445 336.17858887]
[188.18193054 330.90054321]
[175.07984924 323.53601074]
[163.25556946 314.25772095]
[152.98628235 303.28311157]
[144.51271057 290.86944580]
[138.03347778 277.30773926]
[133.70046997 262.91586304]
[131.61526489 248.03123474]
[131.82673645 233.00273132]
[134.32994080 218.18266296]
[139.06617737 203.91842651]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 112]
[2 111]
[3 110]
[4 109]
[5 108]
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[25 104]
[26 103]
[27 102]
[28 35]
[29 34]
[38 101]
[39 100]
[40 99]
[41 98]
[42 97]
[45 92]
[46 91]
[47 90]
[50 88]
[51 87]
[52 86]
[53 85]
[54 84]
[55 83]
[56 82]
[57 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
