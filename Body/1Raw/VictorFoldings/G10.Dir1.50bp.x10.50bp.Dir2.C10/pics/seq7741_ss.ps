%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACCGACUACGGCGGACUAAUCUUCAACUCCUACAUACUUCCCCCAUUAUUCCUAGAACCxxxxxxxxxxCAUUACUAAACCCACACUCAACAGAAACAAAGCAUACAUCAUUAUUCUCGCACGGACUACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[126.40802765 258.77539062]
[126.40802765 243.77539062]
[126.40802765 228.77539062]
[126.40802765 213.77539062]
[126.40802765 198.77539062]
[126.40802765 183.77539062]
[126.40802765 168.77539062]
[126.40802765 153.77539062]
[126.40802765 138.77539062]
[126.40802765 123.77539825]
[119.39967346 121.10463715]
[105.38295746 115.76313019]
[98.37460327 113.09236908]
[88.39187622 124.28813934]
[78.40914917 135.48390198]
[75.60910034 151.64224243]
[60.12435150 157.04173279]
[47.88428497 146.12785339]
[51.48043060 130.12786865]
[67.21338654 125.50117493]
[77.19611359 114.30541229]
[87.17884064 103.10964203]
[92.81079102 89.20709229]
[93.43476868 74.22006989]
[93.90281677 59.22737503]
[94.21486664 44.23062134]
[86.76634216 30.27247238]
[94.76673889 17.70891953]
[95.07879639 2.71216631]
[95.39085388 -12.28458786]
[95.70291138 -27.28134155]
[80.75740051 -28.62763405]
[65.94039154 -31.00183296]
[51.32248306 -34.39262009]
[36.97333908 -38.78384018]
[22.96134567 -44.15456390]
[9.35327244 -50.47919846]
[-3.78603077 -57.72760391]
[-16.39394760 -65.86523438]
[-28.41039658 -74.85331726]
[-39.77811432 -84.64901733]
[-50.44292450 -95.20565033]
[-60.35400391 -106.47290802]
[-69.46412659 -118.39710236]
[-77.72987366 -130.92140198]
[-85.11185455 -143.98612976]
[-91.57489014 -157.52902222]
[-97.08818817 -171.48553467]
[-101.62546539 -185.78915405]
[-105.16510010 -200.37173462]
[-107.69023132 -215.16377258]
[-109.18882751 -230.09477234]
[-109.65373230 -245.09359741]
[-109.08274078 -260.08874512]
[-107.47857666 -275.00878906]
[-104.84887695 -289.78259277]
[-101.20617676 -304.33975220]
[-96.56784058 -318.61093140]
[-90.95596313 -332.52810669]
[-84.39729309 -346.02493286]
[-76.92308044 -359.03710938]
[-68.56895447 -371.50265503]
[-59.37471390 -383.36209106]
[-49.38418198 -394.55895996]
[-38.64496613 -405.03988647]
[-27.20824623 -414.75494385]
[-15.12852097 -423.65780640]
[-2.46335840 -431.70605469]
[10.72688770 -438.86132812]
[24.37935638 -445.08956909]
[38.42898941 -450.36102295]
[52.80883408 -454.65063477]
[67.45036316 -457.93795776]
[82.28379822 -460.20727539]
[97.23844910 -461.44781494]
[112.24305725 -461.65365601]
[127.22612000 -460.82382202]
[142.11622620 -458.96228027]
[156.84242249 -456.07785034]
[171.33453369 -452.18432617]
[185.52348328 -447.30026245]
[199.34167480 -441.44888306]
[212.72323608 -434.65814209]
[225.60441589 -426.96035767]
[237.92382812 -418.39221191]
[249.62274170 -408.99456787]
[260.64544678 -398.81219482]
[270.93936157 -387.89358521]
[280.45547485 -376.29083252]
[289.14840698 -364.05917358]
[296.97677612 -351.25692749]
[303.90322876 -337.94509888]
[309.89477539 -324.18710327]
[314.92285156 -310.04852295]
[318.96353149 -295.59677124]
[321.99749756 -280.90066528]
[324.01037598 -266.03024292]
[324.99249268 -251.05639648]
[324.93920898 -236.05047607]
[323.85076904 -221.08398438]
[321.73239136 -206.22824097]
[318.59411621 -191.55404663]
[314.45092773 -177.13133240]
[309.32257080 -163.02882385]
[303.23345947 -149.31373596]
[296.21264648 -136.05143738]
[288.29357910 -123.30509186]
[279.51400757 -111.13547516]
[269.91574097 -99.60057068]
[259.54455566 -88.75535583]
[248.44982910 -78.65149689]
[236.68446350 -69.33715820]
[224.30451965 -60.85672379]
[211.36900330 -53.25060272]
[197.93954468 -46.55504608]
[184.08015442 -40.80196381]
[169.85688782 -36.01876450]
[155.33749390 -32.22824860]
[140.59118652 -29.44848061]
[125.68823242 -27.69270325]
[110.69966125 -26.96928406]
[110.38760376 -11.97253132]
[110.07554626 3.02422237]
[109.76349640 18.02097702]
[117.23434448 30.90645790]
[109.21162415 44.54267883]
[108.89956665 59.53943253]
[111.92440033 66.33619690]
[108.42179108 74.84404755]
[107.79781342 89.83106995]
[110.65618134 75.10592651]
[119.44010162 62.94686890]
[132.52174377 55.60721207]
[147.47682190 54.44713974]
[161.53384399 59.68163681]
[172.08778381 70.34064484]
[177.18276978 84.44883728]
[175.87460327 99.39168549]
[168.40571594 112.39997864]
[156.16023254 121.06302643]
[141.40803528 123.77539825]
[141.40803528 138.77539062]
[141.40803528 153.77539062]
[141.40803528 168.77539062]
[141.40803528 183.77539062]
[141.40803528 198.77539062]
[141.40803528 213.77539062]
[141.40803528 228.77539062]
[141.40803528 243.77539062]
[141.40803528 258.77539062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[13 22]
[14 21]
[15 20]
[23 130]
[24 129]
[25 127]
[26 126]
[28 124]
[29 123]
[30 122]
[31 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
