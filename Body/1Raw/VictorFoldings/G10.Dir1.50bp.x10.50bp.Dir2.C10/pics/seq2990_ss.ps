%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAAUCCUAUUCUAGAGUCCAUAUCAACAAUAGGGUUUACGACCUCGAUGUUGGAUCAGGACxxxxxxxxxxCUACCCUUUUACCAUCAUUGGACAAGUAGCAUCCGUACUAUACUUCACAACAAUCCUAAUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[127.47007751 495.35556030]
[127.47007751 480.35556030]
[127.47007751 465.35556030]
[127.47007751 450.35556030]
[127.47007751 435.35556030]
[127.47007751 420.35556030]
[127.47007751 405.35556030]
[127.47007751 390.35556030]
[127.47007751 375.35556030]
[127.47007751 360.35556030]
[112.81569672 357.26605225]
[99.11863708 351.19470215]
[86.97857666 342.40463257]
[76.92760468 331.27810669]
[69.40685272 318.29983521]
[64.74716949 304.03591919]
[63.15454102 289.10903931]
[64.70099640 274.17144775]
[69.32136536 259.87628174]
[76.81599426 246.84916687]
[86.85940552 235.66073608]
[99.01440430 226.80168152]
[112.75110626 220.66117859]
[127.47007751 217.50987244]
[114.70894623 198.48171997]
[131.65179443 178.44976807]
[124.82822418 165.09167480]
[118.00464630 151.73356628]
[111.18107605 138.37547302]
[104.35749817 125.01737213]
[90.35684204 125.25254822]
[77.50769806 117.77536011]
[69.95657349 103.97554016]
[70.65003204 87.39455414]
[56.83644867 81.54776764]
[43.02286530 75.70098114]
[29.20928383 69.85418701]
[15.39570045 64.00740051]
[3.12815762 73.14275360]
[-11.96523285 74.89955902]
[-25.81937790 68.90547943]
[-34.75332260 56.86219788]
[-36.44815445 42.06378174]
[-50.26173782 36.21699142]
[-64.07532501 30.37020493]
[-79.42417145 35.03844070]
[-92.56162262 25.83046341]
[-93.40975189 9.80984497]
[-81.31794739 -0.73376781]
[-65.56200409 2.28778243]
[-58.22853470 16.55662155]
[-44.41495132 22.40340996]
[-30.60136795 28.25019836]
[-18.79757881 19.16525650]
[-3.93234110 17.19530869]
[10.01522446 22.96867943]
[19.26101303 35.02737808]
[21.24248886 50.19382095]
[35.05607224 56.04060745]
[48.86965561 61.88739777]
[62.68323517 67.73418427]
[76.49681854 73.58097076]
[89.56351471 66.21472931]
[91.71209717 51.36941147]
[93.86067200 36.52408600]
[91.73591614 30.15792656]
[92.99973297 24.53737068]
[96.41432953 21.11834526]
[99.17057037 6.37374783]
[85.49681091 0.01143428]
[73.83539581 -9.55215836]
[64.91938019 -21.71585655]
[59.30923462 -35.71503830]
[57.35761261 -50.66970062]
[59.18719482 -65.63978577]
[64.68297577 -79.68425751]
[73.49948120 -91.92027283]
[85.08249664 -101.57866669]
[98.70391083 -108.05229187]
[113.50746918 -110.93422699]
[128.56260681 -110.04330444]
[142.92294312 -105.43552399]
[155.68576050 -97.40054321]
[166.04881287 -86.44343567]
[173.36064148 -73.25299072]
[177.16163635 -58.65835571]
[177.21284485 -43.57696915]
[173.51106262 -28.95685959]
[166.28897095 -15.71705723]
[156.00057983 -4.68982887]
[143.29261780 3.43164515]
[128.96389771 8.13684273]
[113.91516876 9.12999058]
[111.15892029 23.87458801]
[108.70599365 38.67266464]
[106.55741882 53.51799011]
[104.40883636 68.36331177]
[122.97756958 81.08793640]
[127.53507233 101.51686096]
[117.71559906 118.19379425]
[124.53917694 131.55189514]
[131.36274719 144.90998840]
[138.18632507 158.26809692]
[145.00990295 171.62619019]
[157.68141174 179.65318298]
[172.67430115 180.11511230]
[187.66719055 180.57704163]
[202.66007996 181.03897095]
[217.65295410 181.50090027]
[224.64997864 167.93606567]
[236.84478760 158.75732422]
[251.81611633 155.78712463]
[266.59136963 159.61518860]
[278.23696899 169.48146057]
[284.44061279 183.42697144]
[283.97058105 198.68286133]
[276.92019653 212.22003174]
[264.68933105 221.35067749]
[249.70642090 224.26190186]
[234.94635010 220.37567139]
[223.33970642 210.46362305]
[217.19104004 196.49377441]
[202.19815063 196.03184509]
[187.20526123 195.56993103]
[172.21237183 195.10800171]
[157.21949768 194.64607239]
[156.04406738 205.29666138]
[150.46580505 213.41296387]
[142.47007751 217.50987244]
[157.18904114 220.66117859]
[170.92575073 226.80168152]
[183.08074951 235.66073608]
[193.12416077 246.84916687]
[200.61878967 259.87628174]
[205.23915100 274.17144775]
[206.78561401 289.10903931]
[205.19297791 304.03591919]
[200.53329468 318.29983521]
[193.01254272 331.27810669]
[182.96157837 342.40463257]
[170.82151794 351.19470215]
[157.12445068 357.26605225]
[142.47007751 360.35556030]
[142.47007751 375.35556030]
[142.47007751 390.35556030]
[142.47007751 405.35556030]
[142.47007751 420.35556030]
[142.47007751 435.35556030]
[142.47007751 450.35556030]
[142.47007751 465.35556030]
[142.47007751 480.35556030]
[142.47007751 495.35556030]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[24 129]
[26 104]
[27 103]
[28 102]
[29 101]
[30 100]
[34 62]
[35 61]
[36 60]
[37 59]
[38 58]
[43 53]
[44 52]
[45 51]
[63 97]
[64 96]
[65 95]
[68 94]
[69 93]
[105 126]
[106 125]
[107 124]
[108 123]
[109 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
