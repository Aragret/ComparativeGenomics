%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUCCCACUAAUAGCUUUUUGAUGACUUCUAGCAAGCCUCGCUAACCUCGCCUUACCCCCCxxxxxxxxxxUAGCAAUAAUCCCCAUCCUCCAUAUAUCCAAACAACAAAGCAUAAUAUUUCGCCCACUAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[99.35506439 398.32235718]
[99.35506439 383.32235718]
[99.35506439 368.32235718]
[99.35506439 353.32235718]
[99.35506439 338.32235718]
[99.35506439 323.32235718]
[99.35506439 308.32235718]
[99.35506439 293.32235718]
[99.35506439 278.32235718]
[99.35506439 263.32235718]
[83.25695801 258.49642944]
[69.39710236 248.96008301]
[59.11492157 235.62164307]
[53.40813065 219.75753784]
[52.83596039 202.89009094]
[57.46435928 186.64146423]
[66.85859680 172.57768250]
[80.12409210 162.05763245]
[95.99156189 156.10183716]
[95.05593109 141.13104248]
[94.12030029 126.16025543]
[93.18467712 111.18946075]
[91.62709045 96.27055359]
[89.45025635 81.42934418]
[87.27342224 66.58814240]
[85.09658051 51.74693680]
[82.91974640 36.90573120]
[80.58863831 22.08797073]
[78.10352325 7.29526424]
[75.61840820 -7.49744320]
[60.67432785 -6.12382936]
[45.66938782 -5.87083483]
[30.68750191 -6.73987484]
[15.81244946 -8.72608852]
[1.12742233 -11.81836891]
[-13.28545380 -15.99942303]
[-27.34557724 -21.24586678]
[-40.97431564 -27.52836037]
[-54.09544754 -34.81176758]
[-66.63559723 -43.05535889]
[-78.52463531 -52.21303177]
[-89.69607544 -62.23357391]
[-100.08743286 -73.06094360]
[-109.64060211 -84.63458252]
[-118.30215454 -96.88977814]
[-126.02364349 -109.75798035]
[-132.76190186 -123.16723633]
[-138.47923279 -137.04255676]
[-143.14366150 -151.30632019]
[-146.72912598 -165.87878418]
[-149.21554565 -180.67845154]
[-150.58901978 -195.62254333]
[-150.84188843 -210.62748718]
[-149.97271729 -225.60935974]
[-147.98637390 -240.48439026]
[-144.89396667 -255.16938782]
[-140.71278381 -269.58224487]
[-135.46621704 -283.64230347]
[-129.18359375 -297.27099609]
[-121.90007782 -310.39205933]
[-113.65637207 -322.93212891]
[-104.49859619 -334.82110596]
[-94.47795868 -345.99246216]
[-83.65049744 -356.38369751]
[-72.07677460 -365.93676758]
[-59.82150269 -374.59820557]
[-46.95322800 -382.31961060]
[-33.54391098 -389.05773926]
[-19.66854668 -394.77493286]
[-5.40473270 -399.43927002]
[9.16776371 -403.02456665]
[23.96744537 -405.51086426]
[38.91154480 -406.88421631]
[53.91648865 -407.13696289]
[68.89836121 -406.26763916]
[83.77337646 -404.28115845]
[98.45835114 -401.18862915]
[112.87115479 -397.00732422]
[126.93118286 -391.76062012]
[140.55981445 -385.47790527]
[153.68081665 -378.19424438]
[166.22082520 -369.95043945]
[178.10969543 -360.79257202]
[189.28096008 -350.77182007]
[199.67213440 -339.94427490]
[209.22509766 -328.37045288]
[217.88642883 -316.11511230]
[225.60769653 -303.24676514]
[232.34571838 -289.83740234]
[238.06280518 -275.96197510]
[242.72698975 -261.69812012]
[246.31217957 -247.12561035]
[248.79833984 -232.32589722]
[250.17155457 -217.38179016]
[250.42414856 -202.37684631]
[249.55471802 -187.39497375]
[247.56811523 -172.51997375]
[244.47544861 -157.83503723]
[240.29400635 -143.42227173]
[235.04719543 -129.36228943]
[228.76434326 -115.73371124]
[221.48059082 -102.61277008]
[213.23666382 -90.07283783]
[204.07867432 -78.18403625]
[194.05783081 -67.01287079]
[183.23019409 -56.62179565]
[171.65629578 -47.06893539]
[159.40087891 -38.40770721]
[146.53247070 -30.68655396]
[133.12303162 -23.94865417]
[119.24756622 -18.23168945]
[104.98367310 -13.56763077]
[90.41110992 -9.98256111]
[92.89623260 4.81014585]
[95.38134766 19.60285378]
[99.61856079 25.71772575]
[97.76094818 34.72889328]
[99.93778992 49.57009888]
[102.11462402 64.41130066]
[104.29146576 79.25251007]
[106.46829987 94.09371185]
[108.82114410 96.14263153]
[110.45874786 99.11464691]
[111.02985382 102.73815918]
[110.29174805 106.61283875]
[108.15546417 110.25383759]
[109.09109497 125.22462463]
[110.02672577 140.19541931]
[110.96234894 155.16621399]
[123.99619293 157.81353760]
[135.99517822 163.52622986]
[146.25090027 171.96141052]
[154.15922546 182.61563110]
[159.25585938 194.85491943]
[161.24366760 207.95249939]
[160.00993347 221.13195801]
[155.63275146 233.61328125]
[148.37612915 244.65898132]
[138.67402649 253.61767578]
[127.10447693 259.96258545]
[114.35506439 263.32235718]
[114.35506439 278.32235718]
[114.35506439 293.32235718]
[114.35506439 308.32235718]
[114.35506439 323.32235718]
[114.35506439 338.32235718]
[114.35506439 353.32235718]
[114.35506439 368.32235718]
[114.35506439 383.32235718]
[114.35506439 398.32235718]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[19 129]
[20 128]
[21 127]
[22 126]
[23 121]
[24 120]
[25 119]
[26 118]
[27 117]
[28 115]
[29 114]
[30 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
