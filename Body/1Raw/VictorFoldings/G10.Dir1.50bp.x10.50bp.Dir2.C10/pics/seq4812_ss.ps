%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUUUCCUCACGCAAGCAACCGCAUCCAUAAUCCUUCUAAUAGCUAUCCUCUUCAACAAUAxxxxxxxxxxCAUCUUCUCCUUACACCUAGCAGGUGUCUCCUCUAUCUUAGGGGCCAUCAAUUUCAUCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[96.77079010 460.42370605]
[96.77079010 445.42370605]
[96.77079010 430.42370605]
[96.77079010 415.42370605]
[96.77079010 400.42370605]
[96.77079010 385.42370605]
[96.77079010 370.42370605]
[96.77079010 355.42370605]
[96.77079010 340.42370605]
[96.77079010 325.42370605]
[81.69228363 322.49966431]
[67.46392822 316.70245361]
[54.62771988 308.25094604]
[43.67300797 297.46517944]
[35.01781082 284.75421143]
[28.99291420 270.60061646]
[25.82918358 255.54214478]
[25.64874268 240.15136719]
[28.46025848 225.01376343]
[34.15853500 210.70558167]
[42.52845001 197.77183533]
[53.25308990 186.70558167]
[65.92572784 177.92906189]
[80.06525421 171.77767944]
[95.13445282 168.48709106]
[94.82239532 153.49034119]
[81.70137787 92.73946381]
[72.43643188 80.94281769]
[59.77848053 89.01394653]
[46.39036179 95.80548859]
[32.40101624 101.25205231]
[17.94517326 105.30117035]
[3.16205239 107.91385651]
[-11.80597305 109.06494141]
[-26.81474876 108.74333954]
[-41.71973038 106.95215607]
[-56.37736893 103.70862579]
[-70.64649963 99.04400635]
[-84.38970184 93.00320435]
[-97.47460938 85.64440918]
[-109.77521515 77.03849030]
[-121.17304993 67.26832581]
[-131.55834961 56.42800522]
[-140.83108521 44.62194061]
[-148.90194702 31.96382713]
[-155.69322205 18.57557297]
[-161.13951111 4.58611965]
[-165.18833923 -9.86980438]
[-167.80072021 -24.65297890]
[-168.95150757 -39.62102890]
[-168.62960815 -54.62979889]
[-166.83813477 -69.53474426]
[-163.59431458 -84.19231415]
[-158.92939758 -98.46134949]
[-152.88833618 -112.20442963]
[-145.52926636 -125.28919220]
[-136.92311096 -137.58963013]
[-127.15270996 -148.98727417]
[-116.31218719 -159.37234497]
[-104.50593567 -168.64483643]
[-91.84765625 -176.71545410]
[-78.45926666 -183.50646973]
[-64.46970367 -188.95246887]
[-50.01370239 -193.00102234]
[-35.23047638 -195.61311340]
[-20.26240349 -196.76359558]
[-5.25364065 -196.44139099]
[9.65126801 -194.64961243]
[24.30877686 -191.40550232]
[38.57772064 -186.74031067]
[52.32067871 -180.69895935]
[65.40529633 -173.33964539]
[77.70555878 -164.73323059]
[89.10300446 -154.96260071]
[99.48786163 -144.12187195]
[108.76012421 -132.31542969]
[116.83049011 -119.65699768]
[123.62123108 -106.26847076]
[129.06695557 -92.27880096]
[133.11520386 -77.82271576]
[135.72700500 -63.03943634]
[136.87718201 -48.07134247]
[136.55468750 -33.06258392]
[134.76260376 -18.15771294]
[131.51820374 -3.50026917]
[126.85272217 10.76858139]
[120.81110382 24.51141930]
[113.45152283 37.59589005]
[104.84486389 49.89597702]
[95.07401276 61.29322815]
[84.23307037 71.67787170]
[93.49802399 83.47451019]
[108.26407623 86.11337280]
[121.04143524 78.25595093]
[133.81878662 70.39852142]
[146.59614563 62.54109955]
[159.37350464 54.68367386]
[172.15086365 46.82624817]
[182.47576904 33.37884140]
[198.25585938 39.57763672]
[196.66767883 56.45703125]
[180.00828552 59.60360336]
[167.23092651 67.46102905]
[154.45356750 75.31845856]
[141.67622375 83.17588043]
[128.89886475 91.03330994]
[116.12150574 98.89073181]
[119.37248230 113.53488159]
[122.62315369 128.17773438]
[137.52505493 129.89042664]
[152.42695618 131.60311890]
[167.32885742 133.31581116]
[178.55735779 122.43210602]
[194.15840149 121.36381531]
[206.76567078 130.61535645]
[210.42639160 145.81842041]
[203.41207886 159.79458618]
[189.03468323 165.94474792]
[174.08276367 161.36497498]
[165.61616516 148.21771240]
[150.71426392 146.50502014]
[135.81236267 144.79232788]
[120.91046143 143.07963562]
[109.81914520 153.17828369]
[110.13120270 168.17503357]
[124.59131622 170.63569641]
[138.34434509 175.72315979]
[150.91767883 183.26097107]
[161.87950134 192.98847961]
[170.85369873 204.56988525]
[177.53271484 217.60578918]
[181.68811035 231.64698792]
[183.17839050 246.20999146]
[181.95381165 260.79357910]
[178.05802917 274.89617920]
[171.62652588 288.03295898]
[162.88194275 299.75262451]
[152.12638855 309.65289307]
[139.73092651 317.39428711]
[126.12280273 322.71173096]
[111.77079010 325.42370605]
[111.77079010 340.42370605]
[111.77079010 355.42370605]
[111.77079010 370.42370605]
[111.77079010 385.42370605]
[111.77079010 400.42370605]
[111.77079010 415.42370605]
[111.77079010 430.42370605]
[111.77079010 445.42370605]
[111.77079010 460.42370605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[25 125]
[26 124]
[27 92]
[28 91]
[93 107]
[94 106]
[95 105]
[96 104]
[97 103]
[98 102]
[109 123]
[110 122]
[111 121]
[112 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
