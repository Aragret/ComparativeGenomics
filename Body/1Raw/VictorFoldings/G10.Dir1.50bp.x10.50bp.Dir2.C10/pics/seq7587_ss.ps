%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACAAAACUAACUAAUACUAACAUCUCAGACGCUCAGGAAAUAGAAACCGUCUGAACUAUxxxxxxxxxxCCAUCGCUGUAGUAUAUCCAAAGACAACCAUCAUUCCCCCUAAAUAAAUUAAAAAAACUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[151.87054443 476.05807495]
[151.87054443 461.05807495]
[151.87054443 446.05807495]
[151.87054443 431.05807495]
[151.87054443 416.05807495]
[151.87054443 401.05807495]
[151.87054443 386.05807495]
[151.87054443 371.05807495]
[151.87054443 356.05807495]
[151.87054443 341.05807495]
[136.39044189 337.68569946]
[122.02880859 330.98028564]
[109.49378204 321.26922607]
[99.40415192 309.02816772]
[92.25881195 294.85772705]
[88.41210175 279.45407104]
[88.05623627 263.57464600]
[91.21166992 248.00097656]
[97.72600555 233.50021362]
[107.28128815 220.78727722]
[119.40956879 210.48970032]
[133.51579285 203.11657715]
[148.90702820 199.03343201]
[148.28305054 184.04641724]
[143.23429871 169.92161560]
[134.21676636 157.93478394]
[125.19924164 145.94795227]
[116.18170929 133.96112061]
[107.16418457 121.97428894]
[98.14665222 109.98745728]
[91.12345123 105.91821289]
[89.06929779 97.65614319]
[80.30309296 85.48430634]
[65.95960236 78.80786133]
[64.80008698 63.95846176]
[53.70877075 53.85980988]
[40.77071381 46.26990128]
[27.83265877 38.67999649]
[14.89460373 31.09008598]
[1.95654750 23.50017738]
[-10.98150826 15.91026974]
[-23.91956520 8.32036114]
[-35.58298874 18.00232124]
[-49.85549164 23.10833931]
[-65.01360321 23.02183914]
[-79.22690582 17.75326347]
[-90.77907562 7.93882322]
[-98.27512360 -5.23634338]
[-100.80987549 -20.18127060]
[-98.07724762 -35.09128571]
[-90.40721130 -48.16593170]
[-78.72595978 -57.82637787]
[-64.44406891 -62.90608597]
[-49.28614426 -62.79164886]
[-35.08257675 -57.49689102]
[-23.54851723 -47.66117859]
[-16.07675743 -34.47222137]
[-13.56955242 -19.52264786]
[-16.32965660 -4.61769438]
[-3.39160013 2.97221375]
[9.54645538 10.56212234]
[22.48451233 18.15203094]
[35.42256927 25.74193954]
[48.36062241 33.33184814]
[61.29867935 40.92175674]
[54.19451141 27.71074486]
[51.02197266 13.05008316]
[52.02865219 -1.91609907]
[57.13598251 -16.01982689]
[65.94538879 -28.16043663]
[77.76937866 -37.39046097]
[91.68518829 -42.98958206]
[106.60682678 -44.52083969]
[121.36978912 -41.86473465]
[134.82196045 -35.22854996]
[145.91354370 -25.13018036]
[153.77890015 -12.35771084]
[157.80424500 2.09208441]
[157.67543030 17.09153175]
[153.40249634 31.47006035]
[145.31892395 44.10555649]
[134.05555725 54.01194000]
[120.49138641 60.41610336]
[105.68497467 62.81826019]
[90.79183960 61.03094864]
[76.97192383 55.19225311]
[90.68839264 60.99808502]
[92.47492981 76.71810150]
[101.24113464 88.88993835]
[110.13348389 100.96992493]
[119.15101624 112.95675659]
[128.16854858 124.94358826]
[137.18608093 136.93041992]
[146.20359802 148.91725159]
[155.22113037 160.90408325]
[153.94839478 145.95819092]
[155.65312195 131.05537415]
[160.26812744 116.78295898]
[167.61155701 103.70343018]
[177.39399719 92.33224487]
[189.22991943 83.11753082]
[202.65287781 76.42244720]
[217.13388062 72.51083374]
[232.10221863 71.53685760]
[246.96801758 73.53890228]
[261.14538574 78.43806458]
[274.07565308 86.04126740]
[285.24917603 96.04886627]
[294.22564697 108.06647491]
[300.65130615 121.62048340]
[304.27291870 136.17671204]
[304.94772339 151.16152954]
[302.64916992 165.98437500]
[297.46780396 180.06108093]
[289.60787964 192.83688354]
[279.37908936 203.80830383]
[267.18460083 212.54296875]
[253.50495911 218.69660950]
[238.87928772 222.02676392]
[223.88398743 222.40214539]
[209.11001587 219.80798340]
[195.13960266 214.34651184]
[182.52333069 206.23297119]
[171.75839233 195.78709412]
[163.27008057 183.42243958]
[163.89405823 198.40945435]
[177.90774536 200.72850037]
[191.18550110 205.75993347]
[203.20805359 213.30480957]
[213.50564575 223.06591797]
[221.67640686 234.65951538]
[227.40200806 247.63038635]
[230.46008301 261.46972656]
[230.73287964 275.63507080]
[228.21171570 289.57168579]
[222.99737549 302.73410034]
[215.29595947 314.60760498]
[205.41076660 324.72827148]
[193.73040771 332.70120239]
[180.71348572 338.21585083]
[166.87054443 341.05807495]
[166.87054443 356.05807495]
[166.87054443 371.05807495]
[166.87054443 386.05807495]
[166.87054443 401.05807495]
[166.87054443 416.05807495]
[166.87054443 431.05807495]
[166.87054443 446.05807495]
[166.87054443 461.05807495]
[166.87054443 476.05807495]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[23 126]
[24 125]
[25 95]
[26 94]
[27 93]
[28 92]
[29 91]
[30 90]
[32 89]
[33 88]
[35 86]
[36 65]
[37 64]
[38 63]
[39 62]
[40 61]
[41 60]
[42 59]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
