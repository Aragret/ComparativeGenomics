%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUAUAUACCGCCAUCUUCAGCAAACCCUGAUGAAGGCUACAAAGUAAGCGCAAGUACCCxxxxxxxxxxAACUCAACGGCUACAUAGAAAAAUCCACCCCUUACGAGUGCGGCUUCGACCCUAUAUCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[112.21444702 395.29241943]
[112.21444702 380.29241943]
[112.21444702 365.29241943]
[112.21444702 350.29241943]
[112.21444702 335.29241943]
[112.21444702 320.29241943]
[112.21444702 305.29241943]
[112.21444702 290.29241943]
[112.21444702 275.29241943]
[112.21444702 260.29241943]
[96.17224884 255.92398071]
[81.97260284 247.24931335]
[70.74538422 234.94993591]
[63.38640594 219.99615479]
[60.48589706 203.57046509]
[62.28120804 186.97410583]
[68.63738251 171.52394104]
[79.05727386 158.44796753]
[92.72043610 148.78773499]
[108.54772186 143.31535339]
[107.61209106 128.34455872]
[101.96258545 123.41169739]
[92.09667969 134.71054077]
[80.79800415 124.84443665]
[90.66358185 113.54597473]
[85.01408386 108.61311340]
[70.05383301 109.70442200]
[55.09358597 110.79573059]
[40.13333511 111.88704681]
[25.17308807 112.97835541]
[11.97240639 121.69916534]
[-1.28405702 114.90833282]
[-16.24430656 115.99964142]
[-27.77885437 127.15014648]
[-43.66914749 124.94149780]
[-51.72551346 111.06797791]
[-45.76779556 96.17216492]
[-30.36624527 91.68085480]
[-17.33561707 101.03939056]
[-2.37536764 99.94808197]
[9.75525665 91.30532837]
[24.08177757 98.01810455]
[39.04202652 96.92679596]
[54.00227356 95.83548737]
[68.96252441 94.74417114]
[83.92277527 93.65286255]
[87.62892914 79.11792755]
[75.01780701 70.99638367]
[62.40667725 62.87484360]
[46.00951004 62.61993027]
[38.26917648 48.16242981]
[47.14826965 34.37498093]
[63.51273727 35.44092560]
[70.52822113 50.26371384]
[83.13934326 58.38525772]
[95.75047302 66.50679779]
[110.54318237 64.02168274]
[119.80812836 52.22504044]
[129.07307434 40.42839813]
[138.33802795 28.63175964]
[147.47976685 16.73937988]
[156.49729919 4.75254774]
[165.51481628 -7.23428488]
[154.58094788 -17.52571297]
[144.84559631 -28.95751572]
[136.42694092 -41.39092255]
[129.42720032 -54.67499924]
[123.93132019 -68.64849091]
[120.00601959 -83.14177704]
[117.69895935 -97.97891235]
[117.03813171 -112.97979736]
[118.03157043 -127.96232605]
[120.66721344 -142.74462891]
[124.91306305 -157.14727783]
[130.71757507 -170.99540710]
[138.01029968 -184.12092590]
[146.70268250 -196.36451721]
[156.68925476 -207.57754517]
[167.84873962 -217.62388611]
[180.04570007 -226.38159180]
[193.13206482 -233.74435425]
[206.94897461 -239.62278748]
[221.32872009 -243.94554138]
[236.09672546 -246.66014099]
[251.07373047 -247.73364258]
[266.07794189 -247.15299988]
[280.92718506 -244.92526245]
[295.44125366 -241.07748413]
[309.44390869 -235.65635681]
[322.76519775 -228.72769165]
[335.24343872 -220.37561035]
[346.72708130 -210.70149231]
[357.07681274 -199.82278442]
[366.16693115 -187.87150574]
[373.88711548 -174.99278259]
[380.14367676 -161.34291077]
[384.86062622 -147.08760071]
[387.98071289 -132.39991760]
[389.46606445 -117.45812988]
[389.29864502 -102.44363403]
[387.48049927 -87.53868103]
[384.03369141 -72.92421722]
[379.00006104 -58.77762985]
[372.44073486 -45.27066040]
[364.43530273 -32.56726837]
[355.08093262 -20.82165527]
[344.49124146 -10.17640877]
[332.79470825 -0.76075000]
[320.13336182 7.31102419]
[306.66088867 13.94092941]
[292.54083252 19.04848480]
[277.94461060 22.57168770]
[263.04937744 24.46777344]
[248.03594971 24.71372032]
[233.08659363 23.30654716]
[218.38278198 20.26333427]
[204.10301208 15.62102222]
[190.42059326 9.43596554]
[177.50166321 1.78324497]
[168.48413086 13.77007771]
[159.46659851 25.75691032]
[157.94898987 33.03993988]
[150.13467407 37.89670944]
[140.86972046 49.69334793]
[131.60476685 61.48999023]
[122.33982086 73.28662872]
[122.58288574 127.40892792]
[123.51850891 142.37971497]
[136.76889038 144.79289246]
[149.12896729 150.12219238]
[159.96641541 158.09092712]
[168.72764587 168.28744507]
[174.96623230 180.18644714]
[178.36552429 193.17601013]
[178.75482178 206.58908081]
[176.11787415 219.73773193]
[170.59355164 231.94839478]
[162.46853638 242.59645081]
[152.16244507 251.13812256]
[140.20614624 257.13824463]
[127.21444702 260.29241943]
[127.21444702 275.29241943]
[127.21444702 290.29241943]
[127.21444702 305.29241943]
[127.21444702 320.29241943]
[127.21444702 335.29241943]
[127.21444702 350.29241943]
[127.21444702 365.29241943]
[127.21444702 380.29241943]
[127.21444702 395.29241943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[20 128]
[21 127]
[26 46]
[27 45]
[28 44]
[29 43]
[30 42]
[32 40]
[33 39]
[47 56]
[48 55]
[49 54]
[57 126]
[58 125]
[59 124]
[60 123]
[61 121]
[62 120]
[63 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
