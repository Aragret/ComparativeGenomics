%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCACCUUCUUCGACCCCGCCGGAGGAGGAGACCCCAUUCUAUACCAACACCUAUUCUGAxxxxxxxxxxUCGCCUUACCCCCCACUAUUAACCUACUGGGAGAACUCUCUGUGCUAGUAACCACGUUCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[103.89296722 292.32107544]
[103.89296722 277.32107544]
[103.89296722 262.32107544]
[103.89296722 247.32107544]
[103.89296722 232.32107544]
[103.89296722 217.32107544]
[103.89296722 202.32107544]
[103.89296722 187.32107544]
[103.89296722 172.32107544]
[103.89296722 157.32107544]
[102.18028259 142.41917419]
[98.77730560 127.81027222]
[91.43240356 126.48589325]
[84.70336151 123.25766754]
[79.07386017 118.35764313]
[65.54966736 124.84580994]
[52.02548218 131.33396912]
[38.50128937 137.82214355]
[24.97710037 144.31030273]
[11.45291138 150.79846191]
[-2.07127905 157.28663635]
[-15.59546852 163.77479553]
[-29.11965942 170.26296997]
[-32.82533264 185.45513916]
[-45.45991516 194.66932678]
[-61.05773544 193.55488586]
[-72.25398254 182.63801575]
[-73.76213837 167.07333374]
[-64.87008667 154.20999146]
[-49.77638626 150.12168884]
[-35.60782242 156.73876953]
[-22.08363342 150.25061035]
[-8.55944443 143.76243591]
[4.96474600 137.27427673]
[18.48893547 130.78611755]
[32.01312637 124.29795074]
[45.53731537 117.80978394]
[59.06150436 111.32161713]
[72.58569336 104.83345032]
[72.09777069 92.78816223]
[76.83457184 81.25232697]
[86.25217438 72.45719910]
[98.87218475 68.25473022]
[112.50884247 69.73588562]
[113.75571442 54.78779602]
[115.00259399 39.83971024]
[116.24946594 24.89162254]
[101.49129486 22.13710976]
[87.08751678 17.90365028]
[73.18593597 12.23468494]
[59.92921448 5.18838787]
[47.45338058 -3.16293597]
[35.88645935 -12.73358727]
[25.34714890 -23.42535591]
[15.94359493 -35.12852478]
[7.77229548 -47.72300339]
[0.91710186 -61.07954788]
[-4.55164099 -75.06110382]
[-8.57781410 -89.52419281]
[-11.12010384 -104.32040405]
[-12.15242004 -119.29789734]
[-11.66417122 -134.30297852]
[-9.66036606 -149.18168640]
[-6.16156816 -163.78132629]
[-1.20368075 -177.95207214]
[5.16242075 -191.54853821]
[12.87140942 -204.43118286]
[21.84417725 -216.46781921]
[31.98865128 -227.53491211]
[43.20072937 -237.51890564]
[55.36536026 -246.31736755]
[68.35771179 -253.83998108]
[82.04447174 -260.00958252]
[96.28517151 -264.76281738]
[110.93369293 -268.05093384]
[125.83972168 -269.84020996]
[140.85028076 -270.11227417]
[155.81135559 -268.86431885]
[170.56939697 -266.10916138]
[184.97299194 -261.87506104]
[198.87432861 -256.20547485]
[212.13073730 -249.15859985]
[224.60620117 -240.80673218]
[236.17269897 -231.23556519]
[246.71154785 -220.54333496]
[256.11459351 -208.83975220]
[264.28533936 -196.24490356]
[271.13992310 -182.88806152]
[276.60806274 -168.90626526]
[280.63360596 -154.44300842]
[283.17523193 -139.64668274]
[284.20687866 -124.66914368]
[283.71798706 -109.66407776]
[281.71353149 -94.78546143]
[278.21408081 -80.18598175]
[273.25558472 -66.01544189]
[266.88888550 -52.41925812]
[259.17932129 -39.53695297]
[250.20602417 -27.50072098]
[240.06105042 -16.43406868]
[228.84854126 -6.45056057]
[216.68351746 2.34735608]
[203.69084167 9.86940098]
[190.00381470 16.03838539]
[175.76289368 20.79100418]
[161.11422729 24.07848930]
[146.20812988 25.86710548]
[131.19755554 26.13849831]
[129.95068359 41.08658600]
[128.70379639 56.03467178]
[127.45693207 70.98275757]
[136.22312927 83.15459442]
[150.79583740 86.70935822]
[166.03651428 82.46289062]
[176.56761169 92.99594116]
[191.14031982 96.55070496]
[205.54133606 89.48033905]
[219.98594666 96.46122742]
[223.39347839 112.13822174]
[213.14996338 124.48528290]
[197.11334229 124.03079224]
[187.58555603 111.12340546]
[173.01284790 107.56864166]
[158.81451416 112.06937408]
[147.24107361 101.28205872]
[132.66838074 97.72729492]
[126.58621216 114.51870728]
[113.38619232 124.40729523]
[116.78917694 139.01618958]
[122.85044861 125.29537201]
[134.51345825 115.86274719]
[149.19842529 112.80472565]
[163.65719604 116.79772186]
[174.69161987 126.95851135]
[179.86096191 141.03962708]
[178.02183533 155.92645264]
[169.58103943 168.32615662]
[156.40557861 175.49604797]
[141.40975952 175.85020447]
[127.91051483 169.31030273]
[118.89296722 157.32107544]
[118.89296722 172.32107544]
[118.89296722 187.32107544]
[118.89296722 202.32107544]
[118.89296722 217.32107544]
[118.89296722 232.32107544]
[118.89296722 247.32107544]
[118.89296722 262.32107544]
[118.89296722 277.32107544]
[118.89296722 292.32107544]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 129]
[12 128]
[15 39]
[16 38]
[17 37]
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[44 111]
[45 110]
[46 109]
[47 108]
[112 126]
[113 125]
[115 123]
[116 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
