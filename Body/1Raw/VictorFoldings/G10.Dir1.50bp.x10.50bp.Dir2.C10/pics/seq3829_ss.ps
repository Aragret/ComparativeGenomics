%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUCAUUCUACUAUCAACAUUACUAAUAAGUGGCUCCUUUAACCUCUCCACCCUUAUCACAAxxxxxxxxxxUCGCUUCAUUCAUUGCCCCCACAAUCCUAGGCCUACCCGCCGCAGUACUGAUCAUUCUAUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[96.03113556 260.79556274]
[95.72315979 245.79873657]
[95.41518402 230.80189514]
[95.10720825 215.80506897]
[94.79922485 200.80822754]
[94.49124908 185.81138611]
[94.18327332 170.81454468]
[93.87529755 155.81771851]
[93.56731415 140.82087708]
[79.41999817 135.83555603]
[69.77818298 147.32621765]
[60.13637161 158.81687927]
[64.81516266 173.51765442]
[60.78131104 188.40830994]
[49.32201767 198.73730469]
[34.09389114 201.20867920]
[19.95617676 195.03384399]
[11.42016411 182.18316650]
[11.20966721 166.75723267]
[19.39185333 153.67842102]
[33.35581589 147.12013245]
[48.64570618 149.17506409]
[58.28752136 137.68440247]
[67.92933655 126.19374084]
[60.62440109 98.81819153]
[72.52053070 74.66173553]
[96.08132172 64.85420990]
[97.61861420 49.93318939]
[91.33638000 35.41271973]
[100.33731079 23.54542923]
[101.87460327 8.62441254]
[103.41189575 -6.29660416]
[104.94918823 -21.21762085]
[91.67279816 -14.23639393]
[77.85375214 -20.07025337]
[73.59658813 -34.45345688]
[82.01416779 -46.86894989]
[96.95151520 -48.23846817]
[107.48618317 -37.56120682]
[110.54457855 -52.24610519]
[113.60297394 -66.93099976]
[116.66136932 -81.61589813]
[119.71976471 -96.30079651]
[105.32061768 -100.53292084]
[91.30870819 -105.90998077]
[77.77491760 -112.39710999]
[64.80701447 -119.95221710]
[52.48909378 -128.52632141]
[40.90105438 -138.06381226]
[30.11804771 -148.50282288]
[20.21000290 -159.77566528]
[11.24118137 -171.80923462]
[3.26974988 -184.52546692]
[-3.65259409 -197.84190369]
[-9.48095512 -211.67218018]
[-14.17753410 -225.92658997]
[-17.71187019 -240.51271057]
[-20.06104279 -255.33592224]
[-21.20981598 -270.30010986]
[-21.15073967 -285.30819702]
[-19.88419724 -300.26287842]
[-17.41840172 -315.06713867]
[-13.76934624 -329.62496948]
[-8.96069622 -343.84197998]
[-3.02363682 -357.62594604]
[4.00332594 -370.88745117]
[12.07461929 -383.54055786]
[21.13789558 -395.50314331]
[31.13437843 -406.69763184]
[41.99923325 -417.05142212]
[53.66199875 -426.49737549]
[66.04703522 -434.97424316]
[79.07401276 -442.42703247]
[92.65845490 -448.80743408]
[106.71225739 -454.07400513]
[121.14427948 -458.19265747]
[135.86091614 -461.13662720]
[150.76672363 -462.88687134]
[165.76501465 -463.43197632]
[180.75856018 -462.76846313]
[195.65008545 -460.90063477]
[210.34301758 -457.84054565]
[224.74206543 -453.60809326]
[238.75386047 -448.23074341]
[252.28750610 -441.74331665]
[265.25524902 -434.18792725]
[277.57296753 -425.61355591]
[289.16079712 -416.07580566]
[299.94357300 -405.63653564]
[309.85137939 -394.36349487]
[318.81994629 -382.32974243]
[326.79107666 -369.61331177]
[333.71313477 -356.29672241]
[339.54119873 -342.46633911]
[344.23745728 -328.21179199]
[347.77148438 -313.62561035]
[350.12033081 -298.80233765]
[351.26876831 -283.83813477]
[351.20935059 -268.83004761]
[349.94247437 -253.87539673]
[347.47634888 -239.07119751]
[343.82699585 -224.51344299]
[339.01800537 -210.29653931]
[333.08065796 -196.51271057]
[326.05340576 -183.25132751]
[317.98184204 -170.59841919]
[308.91827393 -158.63604736]
[298.92156982 -147.44177246]
[288.05648804 -137.08821106]
[276.39349365 -127.64250183]
[264.00827026 -119.16590881]
[250.98114014 -111.71340942]
[237.39654541 -105.33332825]
[223.34263611 -100.06705475]
[208.91052246 -95.94873047]
[194.19383240 -93.00507355]
[179.28797913 -91.25517273]
[164.28965759 -90.71038055]
[149.29614258 -91.37422180]
[134.40466309 -93.24240112]
[131.34626770 -78.55750275]
[128.28787231 -63.87260437]
[125.22947693 -49.18770599]
[122.17108154 -34.50281143]
[119.87020874 -19.68032837]
[118.33291626 -4.75931168]
[116.79562378 10.16170502]
[115.25833130 25.08272171]
[121.65052032 38.53594208]
[112.53963470 51.47048187]
[111.00234222 66.39150238]
[118.26953888 69.13436890]
[124.85890961 73.45031738]
[130.42985535 79.17285156]
[134.68249512 86.06179047]
[137.37355042 93.81320190]
[138.32989502 102.07270813]
[137.45883179 110.45166779]
[134.75483704 118.54549408]
[130.30195618 125.95314789]
[124.27193451 132.29698181]
[116.91795349 137.24191284]
[108.56415558 140.51289368]
[108.87213135 155.50973511]
[109.18010712 170.50657654]
[109.48809052 185.50340271]
[109.79606628 200.50024414]
[110.10404205 215.49708557]
[110.41201782 230.49392700]
[110.72000122 245.49076843]
[111.02797699 260.48760986]
[113.61375427 279.69601440]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 151]
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 24]
[11 23]
[12 22]
[27 131]
[28 130]
[30 128]
[31 127]
[32 126]
[33 125]
[39 124]
[40 123]
[41 122]
[42 121]
[43 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
