%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACAUUAACAACAUAAAACCCUCAUUCACACGAGAAAACACCCUCAUGUUCAUACACCUAUxxxxxxxxxxCGCCUUCUUCAAAGCCAUACUAUUUAUGUGCUCCGGGUCCAUCAUCCACAACCUUAACAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[139.92930603 301.08303833]
[139.30532837 286.09600830]
[138.68135071 271.10900879]
[138.05737305 256.12197876]
[137.43339539 241.13496399]
[136.80941772 226.14794922]
[136.18544006 211.16093445]
[135.56146240 196.17391968]
[131.85530090 181.63897705]
[125.22680664 168.18301392]
[118.59830475 154.72705078]
[111.96981049 141.27108765]
[97.14202881 142.87669373]
[82.65852356 139.31732178]
[70.26399231 131.02174377]
[61.45149994 118.98925018]
[57.28260040 104.66928864]
[58.25948715 89.78685760]
[64.26448822 76.13471985]
[74.57422638 65.35741425]
[67.94573212 51.90145111]
[61.31723022 38.44548416]
[54.68873215 24.98951912]
[48.06023407 11.53355408]
[41.43173599 -1.92241156]
[34.80323410 -15.37837696]
[20.66025543 -11.48920441]
[6.04641151 -10.27928066]
[-8.53538609 -11.78871155]
[-22.58361053 -15.96404839]
[-35.61537552 -22.66017532]
[-47.18302155 -31.64535904]
[-56.88949966 -42.60926056]
[-64.40201569 -55.17365646]
[-69.46340179 -68.90549469]
[-71.90095520 -83.33180237]
[-71.63233185 -97.95599365]
[-68.66828156 -112.27495575]
[-63.11228561 -125.79636383]
[-55.15690613 -138.05558777]
[-45.07712555 -148.63169861]
[-33.22084045 -157.16186523]
[-39.56797028 -170.75280762]
[-45.91510010 -184.34376526]
[-52.26222610 -197.93470764]
[-61.89075470 -209.43650818]
[-74.15312195 -218.07563782]
[-86.41548920 -226.71475220]
[-98.67785645 -235.35386658]
[-114.20514679 -232.40785217]
[-127.22052002 -241.37309265]
[-130.00221252 -256.93066406]
[-120.89986420 -269.85052490]
[-105.31376648 -272.46755981]
[-92.49085236 -263.22912598]
[-90.03874207 -247.61622620]
[-77.77637482 -238.97711182]
[-65.51400757 -230.33799744]
[-53.25163651 -221.69888306]
[-59.22318268 -235.45899963]
[-61.92520905 -250.21362305]
[-61.21747208 -265.19692993]
[-57.13670349 -279.63116455]
[-49.89472198 -292.76712036]
[-39.86742401 -303.92300415]
[-27.57528496 -312.51968384]
[-13.65633965 -318.11102295]
[1.16694057 -320.40676880]
[16.12514114 -319.28771973]
[30.44184685 -314.81201172]
[43.37393570 -307.21194458]
[54.25016022 -296.88198853]
[62.50598145 -284.35836792]
[67.71287537 -270.29110718]
[69.60057068 -255.41035461]
[68.07109070 -240.48852539]
[63.20382309 -226.30017090]
[55.25140381 -213.58171082]
[44.62660980 -202.99333191]
[31.88093185 -195.08462524]
[17.67594147 -190.26609802]
[2.74895883 -188.78785706]
[-12.12521839 -190.72662354]
[-26.17453575 -195.98178101]
[-38.67127609 -204.28184509]
[-32.32414627 -190.69088745]
[-25.97701836 -177.09994507]
[-19.62988853 -163.50898743]
[-4.73052359 -167.23997498]
[10.61431122 -168.00794983]
[25.82091522 -165.78187561]
[40.31049347 -160.64468384]
[53.53119278 -152.79011536]
[64.97911835 -142.51545715]
[74.21752167 -130.21023560]
[80.89350128 -116.34156036]
[84.75144196 -101.43626404]
[85.64283752 -86.06096649]
[83.53196716 -70.80051422]
[78.49736786 -56.23573303]
[70.72886658 -42.92133331]
[60.52046967 -31.36476135]
[48.25920105 -22.00687599]
[54.88769913 -8.55091000]
[61.51619720 4.90505505]
[68.14469910 18.36102104]
[74.77319336 31.81698608]
[81.40169525 45.27295303]
[88.03018951 58.72891617]
[102.85797119 57.12331009]
[117.34147644 60.68267822]
[129.73600769 68.97825623]
[138.54850769 81.01074982]
[142.71740723 95.33071136]
[141.74050903 110.21314240]
[135.73551941 123.86528015]
[125.42577362 134.64257812]
[132.05427551 148.09855652]
[138.68276978 161.55451965]
[145.31126404 175.01048279]
[146.64691162 160.07006836]
[152.06323242 146.08209229]
[161.13755798 134.13819885]
[173.16171265 125.17048645]
[187.19731140 119.87882233]
[202.14903259 118.67615509]
[216.84999084 121.65634918]
[230.15293884 128.58682251]
[241.01969910 138.92672729]
[248.60221863 151.86912537]
[252.30874634 166.40396118]
[251.85002136 181.39694214]
[247.26185608 195.67800903]
[238.90229797 208.13264465]
[227.42373657 217.78886414]
[213.72198486 223.89311218]
[198.86631775 225.96900940]
[184.01611328 223.85453796]
[170.33026123 217.71470642]
[158.87683105 208.02868652]
[150.54847717 195.54994202]
[151.17245483 210.53695679]
[151.79643250 225.52397156]
[152.42041016 240.51098633]
[153.04438782 255.49800110]
[153.66836548 270.48501587]
[154.29234314 285.47204590]
[154.91632080 300.45904541]
[161.61631775 316.03295898]
[148.50578308 326.78237915]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 120]
[10 119]
[11 118]
[12 117]
[20 109]
[21 108]
[22 107]
[23 106]
[24 105]
[25 104]
[26 103]
[42 88]
[43 87]
[44 86]
[45 85]
[46 59]
[47 58]
[48 57]
[49 56]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
