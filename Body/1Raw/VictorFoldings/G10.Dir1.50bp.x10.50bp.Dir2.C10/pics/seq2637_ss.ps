%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUUACCCUCACUGUCAACCCAACACAGGCAUGCUCAUAAGGAAAGGUUAAAAAAAGUAAAxxxxxxxxxxUACUAUGCCUAGAAGGAAUAAUACUAUCGCUGUUCAUUAUAGCUACUCUCAUAACCCUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 249.54542542]
[92.50000000 234.54542542]
[92.50000000 219.54542542]
[92.50000000 204.54542542]
[92.50000000 189.54542542]
[92.50000000 174.54542542]
[92.50000000 159.54542542]
[92.50000000 144.54542542]
[92.50000000 129.54542542]
[92.50000000 114.54542542]
[86.72372437 100.70220947]
[76.06210327 90.15091705]
[65.40047455 79.59962463]
[54.73884964 69.04833221]
[36.84667587 64.82340240]
[32.81537628 47.77205276]
[21.93655205 37.44484711]
[11.05772686 27.11764336]
[-1.87464821 26.66208267]
[-10.72725487 17.78231239]
[-11.11635399 5.65152788]
[-21.77798080 -4.89976263]
[-18.98316956 9.83757210]
[-22.31392479 24.46310043]
[-31.21459961 36.53695679]
[-44.20036316 44.04494858]
[-59.10489655 45.73457718]
[-73.44179535 41.32397079]
[-84.81933594 31.54892349]
[-91.33948517 18.04012871]
[-91.91455078 3.05115533]
[-86.44859314 -10.91749763]
[-75.85344696 -21.53554535]
[-61.89662933 -27.03165817]
[-46.90645218 -26.48896408]
[-33.38473511 -19.99885750]
[-40.83964539 -33.01516724]
[-48.29455566 -46.03147888]
[-55.74946594 -59.04778671]
[-63.20437622 -72.06409454]
[-70.65928650 -85.08040619]
[-71.03018188 -70.08499146]
[-75.05049896 -55.63379669]
[-82.47697449 -42.60124207]
[-92.86023712 -31.77590942]
[-105.57201385 -23.81282616]
[-119.84313202 -19.19382668]
[-134.81007385 -18.19840240]
[-149.56718445 -20.88678169]
[-163.22155762 -27.09629822]
[-174.94697571 -36.45121765]
[-184.03395081 -48.38549423]
[-189.93264771 -62.17699432]
[-192.28613281 -76.99121094]
[-190.95199585 -91.93176270]
[-186.01098633 -106.09461975]
[-177.76205444 -118.62279510]
[-166.70436096 -128.75822449]
[-153.50695801 -135.88764954]
[-138.96841431 -139.57965088]
[-123.96844482 -139.61085510]
[-109.41468048 -135.97935486]
[-96.18773651 -128.90489197]
[-85.08796692 -118.81553650]
[-76.78787994 -106.32355499]
[-77.41185760 -121.31056976]
[-78.03583527 -136.29759216]
[-78.65981293 -151.28460693]
[-92.69530487 -157.28190613]
[-102.73225403 -168.78070068]
[-106.77780914 -183.49790955]
[-104.02872467 -198.51141357]
[-95.03083038 -210.84027100]
[-81.57067108 -218.03657532]
[-66.32076263 -218.67149353]
[-52.30899429 -212.61897278]
[-42.31740952 -201.08073425]
[-38.32984161 -186.34771729]
[-41.13802719 -171.34515381]
[-50.18439865 -159.05181885]
[-63.67279434 -151.90858459]
[-63.04881668 -136.92156982]
[-62.42483902 -121.93454742]
[-61.80086517 -106.94753265]
[-57.64297485 -92.53531647]
[-50.18806458 -79.51900482]
[-42.73315430 -66.50269318]
[-35.27824402 -53.48638916]
[-27.82333565 -40.47007751]
[-20.36842537 -27.45376778]
[-11.22669029 -15.56138897]
[-0.56506395 -5.01009846]
[16.60377121 -1.51281226]
[21.38493156 16.23881912]
[32.26375580 26.56602287]
[43.14258194 36.89322662]
[55.27960205 36.90362549]
[64.43127441 45.47484589]
[65.29013824 58.38670731]
[75.95176697 68.93799591]
[86.61338806 79.48928833]
[97.27501678 90.04058075]
[106.51860046 81.75995636]
[123.17089844 83.55379486]
[138.17008972 83.39775848]
[153.16928101 83.24172211]
[168.16845703 83.08568573]
[175.08308411 69.43113708]
[187.55798340 60.56347656]
[202.72651672 58.52041245]
[217.10307312 63.77143860]
[227.38401794 75.10990143]
[231.20687866 89.93030548]
[227.69316101 104.82702637]
[217.65032959 116.37692261]
[203.38612366 121.92589569]
[188.17837524 120.19883728]
[175.52168274 111.59261322]
[168.32449341 98.08487701]
[153.32531738 98.24091339]
[138.32612610 98.39694977]
[123.32693481 98.55298615]
[136.56477356 105.60704041]
[149.80259705 112.66110229]
[163.04043579 119.71516418]
[178.01504517 120.58769226]
[191.58421326 126.98124695]
[201.79057312 137.97352600]
[207.16181946 151.97886658]
[206.92314148 166.97697449]
[201.10897827 180.80430603]
[190.55801392 191.46626282]
[176.79226685 197.42480469]
[161.79748535 197.82041931]
[147.73669434 192.59600830]
[136.63821411 182.50523376]
[130.10302734 169.00370789]
[129.07414246 154.03663635]
[121.88276672 140.87289429]
[114.69138336 127.70915985]
[107.50000000 114.54542542]
[107.50000000 129.54542542]
[107.50000000 144.54542542]
[107.50000000 159.54542542]
[107.50000000 174.54542542]
[107.50000000 189.54542542]
[107.50000000 204.54542542]
[107.50000000 219.54542542]
[107.50000000 234.54542542]
[107.50000000 249.54542542]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 102]
[12 101]
[13 100]
[14 99]
[16 96]
[17 95]
[18 94]
[21 92]
[22 91]
[36 90]
[37 89]
[38 88]
[39 87]
[40 86]
[41 85]
[65 84]
[66 83]
[67 82]
[68 81]
[104 122]
[105 121]
[106 120]
[107 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
