%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCUGCUUCAUCCGCCAACUAAUAUUUCACUUUACAUCCAAACAUCACUUUGGCUUCGAAGxxxxxxxxxxCAUACAAAGCCCCCGCACCAAUAGGAUCCUCCCGAAUCAACCCUGACCCCUCUCCUUCAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[42.86764145 76.65514374]
[29.77448845 69.33604431]
[13.95329380 69.35609436]
[6.61929274 56.39223099]
[-9.20190144 56.41228104]
[-16.53590202 43.44841766]
[-29.62905693 36.12931442]
[-42.72220993 28.81020737]
[-55.81536484 21.49110222]
[-68.90852356 14.17199707]
[-82.00167084 6.85289145]
[-100.37222290 7.56203318]
[-108.81278992 -7.79233789]
[-122.05537415 -14.83747292]
[-136.18017578 -19.88622856]
[-150.88813782 -22.83171272]
[-165.59609985 -25.77719498]
[-180.30406189 -28.72267723]
[-189.74430847 -18.62907028]
[-202.84042358 -14.56646252]
[-216.12405396 -17.49835205]
[-226.13253784 -26.55051231]
[-230.31156921 -39.26789093]
[-244.95507812 -42.51871490]
[-259.59857178 -45.76954269]
[-274.24206543 -49.02036667]
[-288.88558960 -52.27119446]
[-294.86361694 -38.46323776]
[-303.34701538 -26.03631020]
[-314.02908325 -15.43964005]
[-326.52374268 -7.05628633]
[-340.37924194 -1.18930387]
[-355.09472656 1.94921994]
[-370.13830566 2.24582958]
[-384.96609497 -0.31019753]
[-399.04208374 -5.62646246]
[-411.85745239 -13.51078510]
[-422.94894409 -23.67815208]
[-431.91558838 -35.76102066]
[-438.43325806 -49.32260132]
[-442.26635742 -63.87265396]
[-443.27627563 -78.88520050]
[-441.42654419 -93.81755066]
[-436.78402710 -108.12989807]
[-429.51651001 -121.30487823]
[-419.88677979 -132.86621094]
[-408.24285889 -142.39596558]
[-395.00573730 -149.54963684]
[-380.65393066 -154.06864929]
[-365.70617676 -155.78961182]
[-350.70291138 -154.65034485]
[-336.18643188 -150.69200134]
[-322.68151855 -144.05770874]
[-310.67639160 -134.98724365]
[-300.60498047 -123.80854797]
[-292.83139038 -110.92569733]
[-287.63662720 -96.80439758]
[-285.20849609 -81.95513153]
[-285.63473511 -66.91469574]
[-270.99124146 -63.66386795]
[-256.34774780 -60.41304398]
[-241.70423889 -57.16221619]
[-227.06074524 -53.91139221]
[-215.14862061 -65.16335297]
[-198.71525574 -67.14090729]
[-184.18559265 -58.87227249]
[-177.35858154 -43.43063736]
[-162.65061951 -40.48515701]
[-147.94265747 -37.53967285]
[-133.23469543 -34.59419250]
[-143.83631897 -45.20577621]
[-149.66867065 -59.02545929]
[-149.87535095 -74.02403259]
[-144.42604065 -87.99919128]
[-134.12086487 -98.89888763]
[-120.47298431 -105.12266541]
[-105.48638916 -105.75666046]
[-91.36162567 -100.70778656]
[-80.17270660 -90.71738434]
[-73.56255341 -77.25240326]
[-72.50176239 -62.28995514]
[-77.14609528 -48.02706146]
[-86.81360626 -36.55800629]
[-100.08476257 -29.56684303]
[-115.01024628 -28.08005905]
[-101.76765442 -21.03492355]
[-90.06909180 -24.26770782]
[-78.96003723 -18.45325279]
[-74.68257141 -6.24026299]
[-61.58941269 1.07884264]
[-48.49626160 8.39794827]
[-35.40310669 15.71705341]
[-22.30995178 23.03615952]
[-9.21679688 30.35526466]
[5.66788721 29.81170464]
[13.93839836 43.29907608]
[28.82308197 42.75551605]
[37.09359360 56.24288559]
[50.18674850 63.56199265]
[69.01820374 45.08955765]
[94.33239746 35.87212372]
[121.75139618 37.99678421]
[146.32670593 51.54473877]
[163.43223572 74.49472046]
[178.07572937 71.24389648]
[192.71923828 67.99306488]
[206.87155151 58.65774536]
[219.75979614 69.67270660]
[212.74311829 85.10652161]
[195.97006226 82.63656616]
[181.32655334 85.88739777]
[166.68305969 89.13822174]
[166.21524048 96.62361908]
[181.18601990 97.55949402]
[180.24989319 112.53025055]
[165.27961731 111.59440613]
[164.81179810 119.07980347]
[178.93659973 124.12856293]
[193.06140137 129.17732239]
[209.08886719 125.70563507]
[219.90727234 138.03016663]
[214.38758850 153.47247314]
[198.20797729 156.14685059]
[188.01264954 143.30212402]
[173.88784790 138.25335693]
[159.76304626 133.20460510]
[155.30087280 139.76271057]
[150.12690735 145.73593140]
[144.31634521 151.04800415]
[137.95240784 155.63214111]
[131.12522888 159.43194580]
[123.93048096 162.40203857]
[116.46813202 164.50860596]
[108.84098053 165.72979736]
[101.15330505 166.05586243]
[93.50938416 165.48930359]
[86.01210785 164.04464722]
[78.76159668 161.74819946]
[71.85386658 158.63758850]
[65.37952423 154.76118469]
[59.42262650 150.17733765]
[54.05956268 144.95353699]
[49.35807800 139.16535950]
[45.37643814 132.89547729]
[42.16269684 126.23241425]
[39.75412369 119.26931000]
[38.17680740 112.10262299]
[37.44535065 104.83080292]
[37.56280518 97.55293274]
[38.52069092 90.36737823]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 99]
[2 98]
[4 96]
[6 94]
[7 93]
[8 92]
[9 91]
[10 90]
[11 89]
[13 86]
[14 85]
[15 70]
[16 69]
[17 68]
[18 67]
[23 63]
[24 62]
[25 61]
[26 60]
[27 59]
[104 112]
[105 111]
[106 110]
[117 126]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
