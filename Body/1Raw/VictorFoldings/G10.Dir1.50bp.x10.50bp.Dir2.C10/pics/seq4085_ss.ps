%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUACACAAACAUUAUUAUAAUAAACACCCUCACCACUACAAUCUUCCUAGGAACAACAUAUxxxxxxxxxxACCCCCUAGGAAUCACCUCCCAUUCCGAUAAAAUCACCUUCCACCCUUACUACACAAUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[126.13848877 89.36704254]
[114.24610901 98.50878143]
[108.72971344 111.35638428]
[94.89562225 113.38359833]
[83.00324249 122.52533722]
[71.11086273 131.66706848]
[59.21848297 140.80880737]
[47.32610321 149.95053101]
[41.10046768 164.49536133]
[26.29447556 166.11766052]
[14.40209579 175.25939941]
[29.38029289 176.06784058]
[41.62984467 184.72512817]
[47.39151764 198.57443237]
[44.89712906 213.36557007]
[34.91217422 224.55935669]
[20.50090790 228.72053528]
[6.08596659 224.57211304]
[-3.90889025 213.38717651]
[-6.41636801 198.59823608]
[-0.66645324 184.74320984]
[-14.05273819 191.51133728]
[-27.43902206 198.27944946]
[-40.82530594 205.04756165]
[-49.34204483 219.06173706]
[-65.72873688 218.42265320]
[-73.12815857 203.78775024]
[-63.92841721 190.21214294]
[-47.59342194 191.66127014]
[-34.20713806 184.89315796]
[-20.82085228 178.12504578]
[-7.43456793 171.35693359]
[5.26036167 163.36701965]
[17.15274048 154.22528076]
[22.52775574 140.33433533]
[38.18437195 138.05815125]
[50.07675171 128.91642761]
[61.96913147 119.77468872]
[73.86151123 110.63295746]
[85.75389099 101.49121857]
[91.27028656 88.64361572]
[105.10437775 86.61640167]
[116.99675751 77.47466278]
[104.20413208 54.01977158]
[96.30113220 28.50303268]
[93.59803772 1.93176115]
[96.19985199 -24.64544296]
[104.00228882 -50.18006897]
[116.69591522 -73.66506958]
[133.77841187 -94.17456818]
[154.57450867 -110.90036011]
[178.26260376 -123.18376923]
[203.90725708 -130.54158020]
[202.03964233 -145.42486572]
[200.17202759 -160.30813599]
[198.30441284 -175.19142151]
[196.43679810 -190.07470703]
[194.56918335 -204.95797729]
[192.70156860 -219.84126282]
[190.83395386 -234.72453308]
[175.86048889 -236.47338867]
[161.74089050 -241.75546265]
[149.29605103 -250.26368713]
[139.24952698 -261.50338745]
[132.18537903 -274.82107544]
[128.51432800 -289.44253540]
[128.44979858 -304.51763916]
[131.99552917 -319.16998291]
[138.94540405 -332.54769897]
[148.89532471 -343.87298584]
[161.26686096 -352.48742676]
[175.34071350 -357.89019775]
[190.29867554 -359.76718140]
[205.27108765 -358.00924683]
[219.38748169 -352.71862793]
[231.82714844 -344.20288086]
[241.86686707 -332.95709229]
[248.92292786 -319.63510132]
[252.58511353 -305.01141357]
[252.64051819 -289.93627930]
[249.08589172 -275.28607178]
[242.12791443 -261.91259766]
[232.17112732 -250.59333801]
[219.79437256 -241.98638916]
[205.71723938 -236.59214783]
[207.58485413 -221.70887756]
[209.45246887 -206.82559204]
[211.32008362 -191.94230652]
[213.18769836 -177.05903625]
[215.05531311 -162.17575073]
[216.92291260 -147.29248047]
[218.79052734 -132.40919495]
[227.89364624 -132.73178101]
[236.99794006 -132.43655396]
[246.06150818 -131.52487183]
[255.04266357 -130.00086975]
[263.90008545 -127.87152863]
[272.59301758 -125.14661407]
[281.08148193 -121.83864594]
[289.32641602 -117.96279144]
[297.28985596 -113.53685760]
[304.93518066 -108.58117676]
[312.22717285 -103.11852264]
[319.13229370 -97.17398834]
[325.61877441 -90.77490234]
[331.65670776 -83.95067596]
[337.21835327 -76.73267365]
[342.27804565 -69.15409088]
[346.81250000 -61.24975586]
[350.80084229 -53.05602646]
[354.22470093 -44.61057663]
[357.06826782 -35.95223999]
[359.31848145 -27.12084007]
[360.96490479 -18.15698814]
[361.99996948 -9.10191822]
[362.41885376 0.00272367]
[362.21963501 9.11505604]
[361.40316772 18.19316101]
[359.97320557 27.19527626]
[357.93624878 36.07998657]
[355.30166626 44.80641556]
[352.08157349 53.33440781]
[348.29067993 61.62472916]
[343.94647217 69.63922882]
[339.06884766 77.34102631]
[333.68023682 84.69466400]
[327.80541992 91.66631317]
[321.47137451 98.22386932]
[314.70721436 104.33715820]
[307.54403687 109.97801971]
[300.01480103 115.12049103]
[292.15408325 119.74089050]
[283.99804688 123.81793213]
[275.58416748 127.33283234]
[266.95117188 130.26939392]
[258.13876343 132.61407471]
[249.18745422 134.35607910]
[240.13841248 135.48733521]
[231.03326416 136.00260925]
[221.91389465 135.89952087]
[212.82226562 135.17848206]
[203.80017090 133.84280396]
[194.88914490 131.89859009]
[186.13017273 129.35475159]
[177.56355286 126.22296143]
[169.22869873 122.51759338]
[161.16398621 118.25566101]
[153.40650940 113.45674133]
[145.99198914 108.14288330]
[138.95452881 102.33851624]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 43]
[2 42]
[4 40]
[5 39]
[6 38]
[7 37]
[8 36]
[10 34]
[11 33]
[21 32]
[22 31]
[23 30]
[24 29]
[53 92]
[54 91]
[55 90]
[56 89]
[57 88]
[58 87]
[59 86]
[60 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
