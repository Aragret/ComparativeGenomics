%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUCCACUCCAUAACGCUCCUCAUACUAGGCCUACUAACCAACACACUAACCAUAUACCAAxxxxxxxxxxCCCUCACCAUUGGCAGCCUAGCAUUAGCAGGAAUACCUUUCCUCACAGGUUUCUACUCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 248.29740906]
[92.50000000 233.29740906]
[92.50000000 218.29740906]
[92.50000000 203.29740906]
[92.50000000 188.29740906]
[92.50000000 173.29740906]
[92.50000000 158.29740906]
[92.50000000 143.29740906]
[92.50000000 128.29740906]
[92.50000000 113.29740906]
[88.34210968 98.88519287]
[80.35219574 86.19026184]
[72.36228180 73.49533081]
[64.37236023 60.80039978]
[47.90519714 52.62651825]
[47.84737015 35.10520172]
[39.59508133 22.57923889]
[35.50682831 20.72244644]
[32.55437851 17.91992950]
[30.89752197 14.65853405]
[30.51657104 11.42606449]
[31.22837448 8.65105629]
[24.04586601 -4.51752615]
[10.64525604 -12.92789173]
[11.34362507 -27.80611610]
[4.16111612 -40.97469711]
[-3.02139282 -54.14328003]
[-6.14773750 -39.47269821]
[-16.60350227 -28.71737480]
[-31.17994499 -25.17798042]
[-45.40373993 -29.94071007]
[-54.90979004 -41.54394531]
[-56.78080750 -56.42679596]
[-50.44260025 -70.02191162]
[-37.84028244 -78.15711975]
[-22.84134674 -78.33583069]
[-10.04823399 -70.50260925]
[-14.65379810 -84.77806854]
[-19.25936317 -99.05352783]
[-23.86492729 -113.32898712]
[-38.57534790 -110.31789398]
[-53.52773666 -108.94337463]
[-68.54058075 -109.22211456]
[-83.43164062 -111.15072632]
[-98.02014923 -114.70580292]
[-112.12902069 -119.84418488]
[-125.58698273 -126.50349426]
[-138.23066711 -134.60290527]
[-149.90660095 -144.04408264]
[-160.47302246 -154.71243286]
[-169.80169678 -166.47845459]
[-177.77937317 -179.19929504]
[-184.30918884 -192.72056580]
[-189.31190491 -206.87809753]
[-192.72679138 -221.50006104]
[-194.51237488 -236.40895081]
[-194.64698792 -251.42378235]
[-193.12901306 -266.36227417]
[-189.97685242 -281.04312134]
[-185.22879028 -295.28808594]
[-178.94244385 -308.92425537]
[-171.19415283 -321.78610229]
[-162.07794189 -333.71749878]
[-151.70448303 -344.57357788]
[-140.19972229 -354.22259521]
[-127.70328522 -362.54739380]
[-114.36688995 -369.44696045]
[-100.35241699 -374.83746338]
[-85.82999420 -378.65356445]
[-70.97591400 -380.84884644]
[-55.97047806 -381.39672852]
[-40.99584961 -380.29052734]
[-26.23380470 -377.54367065]
[-11.86353874 -373.18951416]
[1.94050515 -367.28091431]
[15.01075745 -359.88958740]
[27.18855858 -351.10525513]
[38.32608032 -341.03457642]
[48.28812408 -329.79977417]
[56.95376205 -317.53723145]
[64.21779633 -304.39581299]
[69.99205017 -290.53503418]
[74.20642853 -276.12313843]
[76.80977631 -261.33511353]
[77.77049255 -246.35044861]
[77.07691193 -231.35105896]
[74.73744965 -216.51898193]
[70.78050232 -202.03431702]
[65.25411987 -188.07286072]
[58.22537231 -174.80409241]
[49.77959061 -162.38911438]
[40.01929474 -150.97859192]
[29.06296539 -140.71107483]
[17.04360390 -131.71118164]
[4.10711432 -124.08815765]
[-9.58946705 -117.93455505]
[-4.98390198 -103.65908813]
[-0.37833771 -89.38362885]
[4.22722673 -75.10816956]
[10.14719009 -61.32579041]
[17.32969856 -48.15720749]
[24.51220703 -34.98862457]
[37.39907455 -27.52016449]
[37.21444702 -11.70003510]
[44.39695740 1.46854758]
[52.12104034 14.32695007]
[60.37332916 26.85291290]
[72.19152832 29.61650276]
[79.16007233 40.04043579]
[77.06729126 52.81048584]
[85.05721283 65.50541687]
[93.04712677 78.20034790]
[101.03704071 90.89527130]
[114.96442413 79.38037872]
[138.01083374 82.63056183]
[151.91339111 88.26251984]
[165.81594849 93.89447784]
[179.71850586 99.52643585]
[192.81358337 91.20185089]
[208.29866028 92.19780731]
[220.21942139 102.13134766]
[223.99208069 117.18280792]
[218.16596985 131.56460571]
[204.98136902 139.74664307]
[189.50801086 138.58276367]
[177.69570923 128.52049255]
[174.08654785 113.42899323]
[160.18399048 107.79703522]
[146.28143311 102.16507721]
[132.37887573 96.53311920]
[126.15915680 100.72418976]
[135.65969849 112.33193970]
[145.16023254 123.93968964]
[157.58537292 132.34300232]
[157.57260132 147.34300232]
[145.13317871 155.72515869]
[131.22581482 150.10505676]
[128.10249329 135.43380737]
[120.91110229 122.27007294]
[113.71971893 109.10633850]
[107.50000000 113.29740906]
[107.50000000 128.29740906]
[107.50000000 143.29740906]
[107.50000000 158.29740906]
[107.50000000 173.29740906]
[107.50000000 188.29740906]
[107.50000000 203.29740906]
[107.50000000 218.29740906]
[107.50000000 233.29740906]
[107.50000000 248.29740906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 113]
[12 112]
[13 111]
[14 110]
[16 107]
[17 106]
[22 105]
[23 104]
[25 102]
[26 101]
[27 100]
[37 99]
[38 98]
[39 97]
[40 96]
[115 130]
[116 129]
[117 128]
[118 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
