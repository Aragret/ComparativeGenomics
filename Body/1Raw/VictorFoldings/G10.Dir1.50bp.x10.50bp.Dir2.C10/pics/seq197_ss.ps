%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAUAAUAACAAUUGAAUGUCUGCACAGCCACUUUCCACACAGACAUCAUAACAAAAAAUUxxxxxxxxxxACCCAGCUACGCAAAAUCUUAGCAUACUCCUCAAUUACCCACAUAGGAUGAAUAAUAGCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[97.25725555 280.87017822]
[97.25725555 265.87017822]
[97.25725555 250.87016296]
[97.25725555 235.87016296]
[97.25725555 220.87016296]
[97.25725555 205.87016296]
[97.25725555 190.87016296]
[97.25725555 175.87016296]
[97.25725555 160.87016296]
[97.25725555 145.87016296]
[85.99666595 142.80406189]
[76.09349060 137.08265686]
[68.14440918 129.18742371]
[62.59275055 119.72559357]
[59.70449448 109.38442993]
[59.55725479 98.88184357]
[62.04246521 88.91673279]
[66.88021088 80.12244415]
[73.64522552 73.02659607]
[81.80181122 68.01966095]
[77.19624329 53.74419785]
[72.59068298 39.46873856]
[67.98511505 25.19327545]
[63.37955475 10.91781521]
[58.77399063 -3.35764503]
[47.27218628 -12.98617077]
[32.40913773 -15.00850582]
[17.54609108 -17.03083992]
[2.68304491 -19.05317497]
[-12.18000221 -21.07551003]
[-27.04304886 -23.09784317]
[-41.90609741 -25.12017822]
[-48.68970108 -11.58277035]
[-59.50308990 -0.98327070]
[-73.17330170 5.52856588]
[-88.21749878 7.24638414]
[-103.00379181 3.98384809]
[-115.92828369 -3.90514660]
[-125.58901978 -15.56486130]
[-130.93806458 -29.73053741]
[-131.39521790 -44.86558533]
[-126.91086578 -59.32827377]
[-117.97145081 -71.54979706]
[-105.54665375 -80.20445251]
[-90.98421478 -84.35344696]
[-75.86376953 -83.54673767]
[-61.82546234 -77.87181854]
[-50.39206696 -67.94426727]
[-42.80379486 -54.84095383]
[-39.88376236 -39.98322678]
[-25.02071381 -37.96089172]
[-10.15766716 -35.93855667]
[4.70537949 -33.91622162]
[19.56842613 -31.89388657]
[34.43147278 -29.87155342]
[49.29452133 -27.84921837]
[55.23080826 -48.39954758]
[72.91214752 -56.22375870]
[76.61830902 -70.75869751]
[65.86225891 -60.30367279]
[53.08257294 -52.45003891]
[38.89620209 -47.57695770]
[23.98803711 -45.91967773]
[9.07779884 -47.55821228]
[-5.11468410 -52.41345978]
[-17.90423775 -60.25101852]
[-28.67341423 -70.69251251]
[-36.90230942 -83.23385620]
[-42.19365311 -97.26958466]
[-44.29199219 -112.12209320]
[-43.09602737 -127.07434082]
[-38.66349411 -141.40446472]
[-31.20838165 -154.42066956]
[-21.09060669 -165.49453735]
[-8.79862690 -174.09146118]
[5.07413340 -179.79641724]
[19.85793495 -182.33398438]
[34.83905792 -181.58163452]
[49.29424667 -177.57569885]
[62.52565002 -170.50959778]
[73.89448547 -160.72442627]
[82.85190582 -148.69259644]
[88.96546173 -134.99499512]
[91.94000244 -120.29288483]
[91.63194275 -105.29605103]
[88.05686188 -90.73046875]
[98.71849060 -101.28176117]
[109.38011169 -111.83305359]
[120.04174042 -122.38433838]
[116.06622314 -137.21980286]
[120.05655670 -152.05128479]
[130.93936157 -162.88919067]
[145.78720093 -166.81817627]
[160.60610962 -162.78137207]
[171.40985107 -151.86465454]
[175.29228210 -137.00456238]
[171.20904541 -122.19839478]
[160.25851440 -111.42892456]
[145.38633728 -107.59309387]
[130.59303284 -111.72271729]
[119.93140411 -101.17142487]
[109.26977539 -90.62013245]
[98.60815430 -80.06884766]
[91.15324402 -67.05253601]
[87.44708252 -52.51759720]
[94.58300781 -46.05297852]
[98.42871094 -36.83848953]
[97.97635651 -26.50746155]
[93.01097870 -17.03256035]
[84.20691681 -10.34926987]
[73.04944611 -7.96320963]
[77.65501404 6.31225109]
[82.26058197 20.58771133]
[86.86614227 34.86317062]
[91.47171021 49.13863373]
[96.07727051 63.41409302]
[121.42650604 66.40313721]
[140.60527039 86.15746307]
[143.22914124 115.58320618]
[157.01152039 121.50317383]
[172.38490295 116.91639709]
[185.47334290 126.19391632]
[186.23651123 142.21881104]
[174.08895874 152.69815063]
[158.34925842 149.59307861]
[151.09155273 135.28555298]
[137.30917358 129.36558533]
[131.04620361 133.49172974]
[140.30319214 145.29461670]
[149.56018066 157.09750366]
[158.81718445 168.90037537]
[172.11550903 175.83973694]
[175.95156860 190.34092712]
[167.82397461 202.94816589]
[153.03251648 205.44064331]
[141.22222900 196.19308472]
[140.09439087 181.23524475]
[132.90299988 168.07150269]
[125.71161652 154.90776062]
[118.52023315 141.74401855]
[112.25725555 145.87016296]
[112.25725555 160.87016296]
[112.25725555 175.87016296]
[112.25725555 190.87016296]
[112.25725555 205.87016296]
[112.25725555 220.87016296]
[112.25725555 235.87016296]
[112.25725555 250.87016296]
[112.25725555 265.87017822]
[112.25725555 280.87017822]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[20 116]
[21 115]
[22 114]
[23 113]
[24 112]
[25 111]
[26 56]
[27 55]
[28 54]
[29 53]
[30 52]
[31 51]
[32 50]
[58 105]
[59 104]
[86 103]
[87 102]
[88 101]
[89 100]
[119 127]
[120 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
