%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUAAUCAUAAUAGCUAUAGCAAUAAAACUAGGAAUAGCCCCCUUUCACUUCUGAGUCCCAxxxxxxxxxxCCCUGACAAAACACAUAGCCUACCCCUUCCUUGUACUAUCCCUAUGAGGCAUAAUUAUAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[88.36300659 465.92248535]
[88.36300659 450.92248535]
[88.36300659 435.92248535]
[88.36300659 420.92248535]
[88.36300659 405.92248535]
[88.36300659 390.92248535]
[88.36300659 375.92248535]
[88.36300659 360.92248535]
[88.36300659 345.92248535]
[88.36300659 330.92248535]
[74.78532410 327.71044922]
[62.26691818 321.53149414]
[51.44721985 312.69723511]
[42.87976837 301.65505981]
[37.00391388 288.96551514]
[34.12225342 275.27368164]
[34.38507843 261.27645874]
[37.78253174 247.68716431]
[44.14492035 235.19908142]
[53.15120316 224.45013428]
[64.34517670 215.99029541]
[77.15859222 210.25344849]
[90.93998718 207.53512573]
[91.56396484 192.54811096]
[92.18794250 177.56109619]
[92.50000000 162.56434631]
[92.50000000 147.56434631]
[92.50000000 132.56434631]
[92.50000000 117.56434631]
[82.32884216 107.24475861]
[82.32884216 92.75524139]
[92.50000000 82.43565369]
[92.50000000 67.43565369]
[92.50000000 52.43565369]
[81.60544586 41.30252838]
[81.81912994 26.09039497]
[92.50000000 15.77271461]
[92.50000000 0.77271420]
[84.76270294 -13.02745819]
[92.50000000 -25.75473022]
[92.50000000 -40.75473022]
[92.50000000 -55.75473022]
[92.50000000 -70.75473022]
[92.50000000 -85.75473022]
[77.56001282 -87.22560883]
[62.83613205 -90.15379333]
[48.47017670 -94.51109314]
[34.60049057 -100.25553131]
[21.36065483 -107.33180237]
[8.87817764 -115.67173767]
[-2.72672391 -125.19503021]
[-13.34228611 -135.80995178]
[-22.86627197 -147.41427612]
[-31.20695877 -159.89625549]
[-38.28401947 -173.13566589]
[-44.02929306 -187.00500488]
[-48.38745117 -201.37071228]
[-51.31652451 -216.09440613]
[-52.78829575 -231.03430176]
[-52.78859711 -246.04652405]
[-51.31742096 -260.98648071]
[-48.38893890 -275.71029663]
[-44.03135300 -290.07617188]
[-38.28663254 -303.94573975]
[-31.21010399 -317.18545532]
[-22.86991692 -329.66775513]
[-13.34639454 -341.27246094]
[-2.73125720 -351.88781738]
[8.87326336 -361.41156006]
[21.35540771 -369.75201416]
[34.59495926 -376.82879639]
[48.46441650 -382.57379150]
[62.83020020 -386.93167114]
[77.55395508 -389.86044312]
[92.49388885 -391.33190918]
[107.50611115 -391.33190918]
[122.44604492 -389.86044312]
[137.16979980 -386.93167114]
[151.53558350 -382.57379150]
[165.40504456 -376.82879639]
[178.64459229 -369.75201416]
[191.12673950 -361.41156006]
[202.73126221 -351.88781738]
[213.34638977 -341.27246094]
[222.86991882 -329.66775513]
[231.21009827 -317.18545532]
[238.28663635 -303.94573975]
[244.03135681 -290.07617188]
[248.38894653 -275.71029663]
[251.31741333 -260.98648071]
[252.78858948 -246.04652405]
[252.78829956 -231.03430176]
[251.31652832 -216.09440613]
[248.38745117 -201.37071228]
[244.02929688 -187.00500488]
[238.28401184 -173.13566589]
[231.20695496 -159.89625549]
[222.86627197 -147.41427612]
[213.34228516 -135.80995178]
[202.72673035 -125.19503021]
[191.12182617 -115.67173767]
[178.63934326 -107.33180237]
[165.39950562 -100.25553131]
[151.52983093 -94.51109314]
[137.16386414 -90.15379333]
[122.43998718 -87.22560883]
[107.50000000 -85.75473022]
[107.50000000 -70.75473022]
[107.50000000 -55.75473022]
[107.50000000 -40.75473022]
[107.50000000 -25.75473022]
[115.23729706 -13.02745819]
[107.50000000 0.77271420]
[107.50000000 15.77271461]
[118.18087006 26.09039497]
[118.39455414 41.30252838]
[107.50000000 52.43565369]
[107.50000000 67.43565369]
[107.50000000 82.43565369]
[117.67115784 92.75524139]
[117.67115784 107.24475861]
[107.50000000 117.56434631]
[107.50000000 132.56434631]
[107.50000000 147.56434631]
[107.50000000 162.56434631]
[110.51691437 168.56481934]
[110.06895447 174.31205750]
[107.17495728 178.18507385]
[106.55097961 193.17208862]
[105.92700195 208.15910339]
[121.35087585 212.84281921]
[135.04507446 221.32559204]
[146.09353638 233.03353882]
[153.75885010 247.17723083]
[157.53144836 262.80493164]
[157.16349792 278.86663818]
[152.68518066 294.28469849]
[144.40229797 308.02593994]
[132.87535095 319.17114258]
[118.88167572 326.97628784]
[103.36300659 330.92248535]
[103.36300659 345.92248535]
[103.36300659 360.92248535]
[103.36300659 375.92248535]
[103.36300659 390.92248535]
[103.36300659 405.92248535]
[103.36300659 420.92248535]
[103.36300659 435.92248535]
[103.36300659 450.92248535]
[103.36300659 465.92248535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[23 130]
[24 129]
[25 128]
[26 125]
[27 124]
[28 123]
[29 122]
[32 119]
[33 118]
[34 117]
[37 114]
[38 113]
[40 111]
[41 110]
[42 109]
[43 108]
[44 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
