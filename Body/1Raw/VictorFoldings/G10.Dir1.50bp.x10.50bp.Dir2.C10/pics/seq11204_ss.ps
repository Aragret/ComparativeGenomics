%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCAACAAACUUAAAAUAAAAUCCCCACUAUGCACAUUUUAUUUCUCCAACAUACUCGGAUxxxxxxxxxxCCUAACCAACAAACUUAAAAUAAAAUCCCCACUAUGCACAUUUUAUUUCUCCAACAUACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 301.42300415]
[92.50000000 286.42300415]
[92.50000000 271.42300415]
[92.50000000 256.42300415]
[92.50000000 241.42298889]
[92.50000000 226.42298889]
[92.50000000 211.42298889]
[92.50000000 196.42298889]
[92.50000000 181.42298889]
[92.50000000 166.42298889]
[77.90982819 163.08952332]
[64.42700195 156.59352112]
[52.72736740 147.26057434]
[43.39741898 135.55856323]
[36.90484238 122.07408142]
[33.57509613 107.48306274]
[33.57509613 92.51693726]
[36.90484238 77.92591858]
[43.39741898 64.44142914]
[52.72736740 52.73941803]
[64.42700195 43.40648651]
[77.90982819 36.91047287]
[92.50000000 33.57700729]
[92.50000000 18.57700539]
[92.50000000 3.57700539]
[92.50000000 -11.42299461]
[92.50000000 -26.42299461]
[92.50000000 -41.42299271]
[92.50000000 -56.42299271]
[92.50000000 -71.42299652]
[92.50000000 -86.42299652]
[77.78102875 -89.57430267]
[64.04432678 -95.71479797]
[51.88933182 -104.57386017]
[41.84592056 -115.76228333]
[34.35128784 -128.78939819]
[29.73092079 -143.08454895]
[28.18446350 -158.02215576]
[29.77709579 -172.94903564]
[34.43677902 -187.21296692]
[41.95753098 -200.19122314]
[52.00850296 -211.31774902]
[64.14855957 -220.10781860]
[77.84561920 -226.17916870]
[92.50000000 -229.26866150]
[92.50000000 -244.26866150]
[92.50000000 -259.26867676]
[92.50000000 -274.26867676]
[92.50000000 -289.26867676]
[92.50000000 -304.26867676]
[92.50000000 -319.26867676]
[92.50000000 -334.26867676]
[92.50000000 -349.26867676]
[77.61594391 -351.31286621]
[63.14889526 -355.36480713]
[49.36835861 -361.34896851]
[36.53105545 -369.15396118]
[24.87614441 -378.63427734]
[14.62074184 -389.61337280]
[5.95590353 -401.88668823]
[-0.95695090 -415.22558594]
[-5.98903894 -429.38156128]
[-9.04661560 -444.09091187]
[-10.07272053 -459.07962036]
[-9.04823780 -474.06842041]
[-5.99225330 -488.77810669]
[-0.96169770 -502.93463135]
[5.94971275 -516.27429199]
[14.61322308 -528.54852295]
[24.86743546 -539.52874756]
[36.52132416 -549.01031494]
[49.35778046 -556.81665039]
[63.13766861 -562.80236816]
[77.60427856 -566.85583496]
[92.48811340 -568.90167236]
[107.51188660 -568.90167236]
[122.39572144 -566.85583496]
[136.86233521 -562.80236816]
[150.64222717 -556.81665039]
[163.47868347 -549.01031494]
[175.13256836 -539.52874756]
[185.38677979 -528.54852295]
[194.05029297 -516.27429199]
[200.96170044 -502.93463135]
[205.99224854 -488.77810669]
[209.04823303 -474.06842041]
[210.07272339 -459.07962036]
[209.04661560 -444.09091187]
[205.98904419 -429.38156128]
[200.95695496 -415.22558594]
[194.04409790 -401.88668823]
[185.37925720 -389.61337280]
[175.12385559 -378.63427734]
[163.46894836 -369.15396118]
[150.63163757 -361.34896851]
[136.85110474 -355.36480713]
[122.38405609 -351.31286621]
[107.50000000 -349.26867676]
[107.50000000 -334.26867676]
[107.50000000 -319.26867676]
[107.50000000 -304.26867676]
[107.50000000 -289.26867676]
[107.50000000 -274.26867676]
[107.50000000 -259.26867676]
[107.50000000 -244.26866150]
[107.50000000 -229.26866150]
[122.15438080 -226.17916870]
[135.85144043 -220.10781860]
[147.99150085 -211.31774902]
[158.04246521 -200.19122314]
[165.56321716 -187.21296692]
[170.22290039 -172.94903564]
[171.81553650 -158.02215576]
[170.26907349 -143.08454895]
[165.64871216 -128.78939819]
[158.15408325 -115.76228333]
[148.11067200 -104.57386017]
[135.95567322 -95.71479797]
[122.21897125 -89.57430267]
[107.50000000 -86.42299652]
[107.50000000 -71.42299652]
[107.50000000 -56.42299271]
[107.50000000 -41.42299271]
[107.50000000 -26.42299461]
[107.50000000 -11.42299461]
[107.50000000 3.57700539]
[107.50000000 18.57700539]
[107.50000000 33.57700729]
[122.09017181 36.91047287]
[135.57299805 43.40648651]
[147.27262878 52.73941803]
[156.60258484 64.44142914]
[163.09515381 77.92591858]
[166.42491150 92.51693726]
[166.42491150 107.48306274]
[163.09515381 122.07408142]
[156.60258484 135.55856323]
[147.27262878 147.26057434]
[135.57299805 156.59352112]
[122.09017181 163.08952332]
[107.50000000 166.42298889]
[107.50000000 181.42298889]
[107.50000000 196.42298889]
[107.50000000 211.42298889]
[107.50000000 226.42298889]
[107.50000000 241.42298889]
[107.50000000 256.42300415]
[107.50000000 271.42300415]
[107.50000000 286.42300415]
[107.50000000 301.42300415]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[23 128]
[24 127]
[25 126]
[26 125]
[27 124]
[28 123]
[29 122]
[30 121]
[31 120]
[45 106]
[46 105]
[47 104]
[48 103]
[49 102]
[50 101]
[51 100]
[52 99]
[53 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
