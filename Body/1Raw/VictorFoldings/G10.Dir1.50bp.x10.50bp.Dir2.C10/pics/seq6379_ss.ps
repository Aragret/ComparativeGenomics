%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAAUACCCAUCAUAAUCGGAGGCUUUGGCAACUGACUAGUUCCCCUAAUAAUCGGUGCCCCxxxxxxxxxxCAAACUAGGAGGCGUCCUUGCCCUAUUACUAUCCAUCCUCAUCCUAGCAAUAAUCCCCAUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[107.43981171 503.13876343]
[107.43981171 488.13876343]
[107.43981171 473.13876343]
[107.43981171 458.13876343]
[107.43981171 443.13876343]
[107.43981171 428.13876343]
[107.43981171 413.13876343]
[107.43981171 398.13876343]
[107.43981171 383.13876343]
[107.43981171 368.13876343]
[92.70999908 365.40509033]
[78.72962952 360.00982666]
[65.97534943 352.13534546]
[54.88230133 342.04855347]
[45.82927322 330.09191895]
[39.12574768 316.67175293]
[35.00133514 302.24447632]
[33.59791183 287.30096436]
[34.96473312 272.35009766]
[39.05670929 257.90112305]
[45.73588943 244.44656372]
[54.77611542 232.44528198]
[65.87067413 222.30686951]
[78.64270782 214.37773132]
[92.65802002 208.92910767]
[107.43981171 206.14796448]
[99.70251465 193.42070007]
[107.43981171 179.62052917]
[107.43981171 164.62052917]
[107.43981171 149.62052917]
[99.70251465 136.89324951]
[107.43981171 123.09307861]
[83.75813293 114.01447296]
[83.28381348 91.74636078]
[73.64200592 80.25569153]
[64.00019073 68.76502228]
[52.91505432 58.65958786]
[40.58377075 50.11912918]
[28.25248718 41.57867050]
[15.92120266 33.03821182]
[0.17094050 31.54161453]
[-5.88662672 17.93444252]
[-14.78269863 15.59869957]
[-18.38096428 9.08988476]
[-30.53429794 0.29804182]
[-43.06977081 8.82081985]
[-57.76498413 12.53921795]
[-72.84542084 11.00422287]
[-86.49004364 4.40119123]
[-97.05120087 -6.47252798]
[-103.25357819 -20.30388069]
[-104.34821320 -35.42266464]
[-100.20291901 -50.00320816]
[-91.31826019 -62.28484726]
[-78.76709747 -70.78450775]
[-64.06505585 -74.47582245]
[-48.98747635 -72.91303253]
[-35.35504150 -66.28487396]
[-24.81394196 -55.39170837]
[-18.63706398 -41.54894638]
[-17.57029533 -26.42817307]
[-21.74245453 -11.85529137]
[-9.58912182 -3.06344867]
[2.65383220 5.60315895]
[17.52207947 6.48888540]
[24.46166229 20.70692825]
[36.79294586 29.24738693]
[49.12422943 37.78784561]
[61.45551300 46.32830429]
[56.11142731 32.31257248]
[56.81851578 17.32924843]
[63.45877075 3.87908053]
[74.92391205 -5.79306889]
[89.30039215 -10.07289600]
[104.18873596 -8.24608898]
[117.10404968 -0.61754501]
[125.89073944 11.53951454]
[129.08229065 26.19605064]
[126.14601135 40.90585327]
[117.57199097 53.21382523]
[104.79124451 61.06573868]
[89.93691254 63.15109634]
[75.49085236 59.12321091]
[85.13266754 70.61387634]
[94.77448273 82.10454559]
[105.88483429 80.34629822]
[117.05406189 85.49410248]
[124.05783081 96.85966492]
[137.61973572 90.45069122]
[151.18162537 84.04171753]
[164.74351501 77.63273621]
[177.33195496 69.47607422]
[188.72303772 59.71679688]
[200.11410522 49.95752335]
[211.50518799 40.19824982]
[216.44223022 24.55990982]
[232.51023865 21.28101158]
[243.17980957 33.73460388]
[237.47502136 49.10950089]
[221.26445007 51.58932495]
[209.87338257 61.34859848]
[198.48231506 71.10787201]
[187.09123230 80.86714935]
[202.00447083 79.25611877]
[216.31747437 83.74366760]
[227.64135742 93.58082581]
[234.08615112 107.12573242]
[234.57620239 122.11772919]
[229.02972412 136.05461121]
[218.37243652 146.61027527]
[204.38305664 152.02296448]
[189.39645386 151.38929749]
[175.91390991 144.81501770]
[166.18569946 133.39739990]
[161.83547974 119.04206848]
[163.58932495 104.14495850]
[171.15249634 91.19463348]
[157.59060669 97.60360718]
[144.02870178 104.01258850]
[130.46681213 110.42156219]
[122.43981171 123.09307861]
[130.17710876 136.89324951]
[122.43981171 149.62052917]
[122.43981171 164.62052917]
[122.43981171 179.62052917]
[130.17710876 193.42070007]
[122.43981171 206.14796448]
[137.22160339 208.92910767]
[151.23690796 214.37773132]
[164.00894165 222.30686951]
[175.10350037 232.44528198]
[184.14373779 244.44656372]
[190.82292175 257.90112305]
[194.91488647 272.35009766]
[196.28170776 287.30096436]
[194.87829590 302.24447632]
[190.75387573 316.67175293]
[184.05035400 330.09191895]
[174.99731445 342.04855347]
[163.90428162 352.13534546]
[151.14999390 360.00982666]
[137.16961670 365.40509033]
[122.43981171 368.13876343]
[122.43981171 383.13876343]
[122.43981171 398.13876343]
[122.43981171 413.13876343]
[122.43981171 428.13876343]
[122.43981171 443.13876343]
[122.43981171 458.13876343]
[122.43981171 473.13876343]
[122.43981171 488.13876343]
[122.43981171 503.13876343]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[26 127]
[28 125]
[29 124]
[30 123]
[32 121]
[34 85]
[35 84]
[36 83]
[37 69]
[38 68]
[39 67]
[40 66]
[42 64]
[44 63]
[45 62]
[88 120]
[89 119]
[90 118]
[91 117]
[92 103]
[93 102]
[94 101]
[95 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
