%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCUGAUCUCUUAUACUAGUAUCCUUAAUCAUUUUUAUUGCCACAACUAACCUCCUCGGAxxxxxxxxxxAAGUCCCACUCCUAAACACAUCCGUAUUACUCGCAUCAGGAGUAUCAAUCACCUGAGCUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 242.69361877]
[92.50000000 227.69361877]
[92.50000000 212.69361877]
[92.50000000 197.69361877]
[92.50000000 182.69361877]
[92.50000000 167.69361877]
[92.50000000 152.69361877]
[92.50000000 137.69361877]
[92.50000000 122.69362640]
[92.50000000 107.69362640]
[89.86113739 92.92756653]
[84.37410736 78.96717834]
[78.59783173 65.12396240]
[72.82155609 51.28074265]
[67.04528809 37.43752670]
[61.26901627 23.59430695]
[55.49274063 9.75109005]
[41.30628586 14.63954735]
[26.83834839 18.61839867]
[12.14718246 21.67162323]
[-2.70805335 23.78692627]
[-17.66754150 24.95578957]
[-32.67104340 25.17350578]
[-47.65814972 24.43920135]
[-62.56850815 22.75582886]
[-77.34207916 20.13017082]
[-91.91938019 16.57279778]
[-106.24170685 12.09803391]
[-120.25138855 6.72389889]
[-133.89201355 0.47203124]
[-147.10865784 -6.63239431]
[-159.84809875 -14.56077003]
[-172.05903625 -23.28117180]
[-183.69232178 -32.75848389]
[-194.70108032 -42.95454788]
[-205.04100037 -53.82830429]
[-214.67044067 -65.33596802]
[-223.55064392 -77.43119812]
[-231.64582825 -90.06529999]
[-238.92340088 -103.18739319]
[-245.35406494 -116.74464417]
[-250.91194153 -130.68246460]
[-255.57461548 -144.94471741]
[-259.32333374 -159.47398376]
[-262.14300537 -174.21174622]
[-264.02227783 -189.09869385]
[-264.95355225 -204.07484436]
[-264.93313599 -219.07991028]
[-263.96105957 -234.05348206]
[-262.04122925 -248.93524170]
[-259.18142700 -263.66528320]
[-255.39315796 -278.18429565]
[-250.69163513 -292.43377686]
[-245.09582520 -306.35641479]
[-238.62825012 -319.89608765]
[-231.31495667 -332.99832153]
[-223.18537903 -345.61032104]
[-214.27227783 -357.68130493]
[-204.61151123 -369.16268921]
[-194.24201965 -380.00823975]
[-183.20552063 -390.17428589]
[-171.54647827 -399.61987305]
[-159.31182861 -408.30697632]
[-146.55082703 -416.20062256]
[-133.31488037 -423.26901245]
[-119.65727997 -429.48370361]
[-105.63301086 -434.81967163]
[-91.29854584 -439.25540161]
[-76.71161652 -442.77304077]
[-61.93094635 -445.35845947]
[-47.01605606 -447.00122070]
[-32.02700806 -447.69470215]
[-17.02415085 -447.43609619]
[-2.06790304 -446.22650146]
[12.78151512 -444.07073975]
[27.46430969 -440.97750854]
[41.92135620 -436.95925903]
[56.09444427 -432.03216553]
[69.92649841 -426.21609497]
[83.36182404 -419.53445435]
[96.34632111 -412.01409912]
[108.82771301 -403.68539429]
[120.75572968 -394.58181763]
[132.08233643 -384.74005127]
[142.76194763 -374.19973755]
[152.75154114 -363.00329590]
[162.01089478 -351.19580078]
[170.50273132 -338.82479858]
[178.19284058 -325.94012451]
[185.05027771 -312.59365845]
[191.04740906 -298.83914185]
[196.16011047 -284.73196411]
[200.36778259 -270.32888794]
[203.65347290 -255.68797302]
[206.00396729 -240.86813354]
[207.40979004 -225.92904663]
[207.86528015 -210.93087769]
[207.36860657 -195.93402100]
[205.92178345 -180.99885559]
[203.53060913 -166.18551636]
[200.20472717 -151.55366516]
[195.95753479 -137.16221619]
[190.80612183 -123.06911469]
[184.77125549 -109.33110809]
[177.87719727 -96.00352478]
[170.15173340 -83.14001465]
[161.62597656 -70.79238892]
[152.33424377 -59.01036453]
[142.31394958 -47.84138107]
[131.60543823 -37.33041000]
[120.25184631 -27.51977921]
[108.29888153 -18.44899368]
[95.79467773 -10.15457535]
[82.78958130 -2.66992569]
[69.33596039 3.97481775]
[75.11223602 17.81803513]
[80.88850403 31.66125298]
[86.66477966 45.50447083]
[92.44104767 59.34768677]
[98.21732330 73.19090271]
[102.27364349 75.82183075]
[104.68449402 81.05815887]
[103.93265533 87.73215485]
[106.99595642 73.04827881]
[114.58233643 60.10815048]
[125.89946747 50.26322937]
[139.76541138 44.54171371]
[154.73199463 43.54115295]
[169.23614502 47.36605072]
[181.76303101 55.61692810]
[191.00436401 67.43207550]
[195.99499512 81.57752228]
[196.21368408 96.57592773]
[191.63761902 110.86086273]
[182.74468994 122.94042969]
[170.46368408 131.55303955]
[156.07722473 135.79917908]
[141.08781433 135.23541260]
[127.06095886 129.92060852]
[115.46160126 120.40983582]
[107.50000000 107.69362640]
[107.50000000 122.69362640]
[107.50000000 137.69361877]
[107.50000000 152.69361877]
[107.50000000 167.69361877]
[107.50000000 182.69361877]
[107.50000000 197.69361877]
[107.50000000 212.69361877]
[107.50000000 227.69361877]
[107.50000000 242.69361877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 123]
[12 120]
[13 119]
[14 118]
[15 117]
[16 116]
[17 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
