%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCCCAGUCCUAGCUGCUGGCAUCACUAUACUACUAACAGACCGCAACCUCAACACCACCUxxxxxxxxxxGCUUAUCACCUUUCAUGAUCACGCCCUCAUAAUCAUUUUCCUUAUCUGCUUCCUAGUCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[101.39093018 436.33834839]
[101.39093018 421.33834839]
[101.39093018 406.33834839]
[101.39093018 391.33834839]
[101.39093018 376.33834839]
[101.39093018 361.33834839]
[101.39093018 346.33834839]
[101.39093018 331.33834839]
[101.39093018 316.33834839]
[101.39093018 301.33834839]
[86.92607117 297.50204468]
[73.93721008 290.04641724]
[63.31274414 279.47451782]
[55.78113556 266.50271606]
[51.86098862 252.01226807]
[51.82532120 236.98936462]
[55.68257523 222.45805359]
[63.17561340 209.41040039]
[73.79887390 198.73884583]
[86.83245850 191.17504883]
[101.39093018 187.23979187]
[101.39093018 172.23979187]
[101.39093018 157.23979187]
[93.65363312 144.51252747]
[101.39093018 130.71235657]
[79.75223541 120.16803741]
[73.61911011 98.70092010]
[84.58503723 81.28333282]
[79.09799957 67.32294464]
[73.61096954 53.36255264]
[67.69100952 39.58017349]
[61.34387970 25.98922157]
[54.99674988 12.39827061]
[48.64962006 -1.19268048]
[34.48253250 3.77443576]
[19.89127350 7.30626345]
[5.02086401 9.36770058]
[-9.98090553 9.93825912]
[-24.96493530 9.01226902]
[-39.78230286 6.59893322]
[-54.28574753 2.72223663]
[-68.33111572 -2.57929087]
[-81.77882385 -9.25295925]
[-94.49520874 -17.23244095]
[-106.35388947 -26.43842888]
[-117.23701477 -36.77942657]
[-127.03640747 -48.15266418]
[-135.65467834 -60.44509888]
[-143.00617981 -73.53456116]
[-149.01783752 -87.29096222]
[-153.62991333 -101.57757568]
[-156.79655457 -116.25241852]
[-158.48631287 -131.16963196]
[-158.68237305 -146.18096924]
[-157.38278198 -161.13723755]
[-154.60047913 -175.88977051]
[-150.36309814 -190.29196167]
[-144.71276855 -204.20068359]
[-137.70562744 -217.47767639]
[-129.41133118 -229.99099731]
[-119.91230774 -241.61628723]
[-109.30297089 -252.23799133]
[-97.68876648 -261.75054932]
[-85.18511200 -270.05941772]
[-71.91629028 -277.08203125]
[-58.01417160 -282.74856567]
[-43.61692047 -287.00271606]
[-28.86763573 -289.80221558]
[-13.91290092 -291.11923218]
[1.09865236 -290.94064331]
[16.01782799 -289.26828003]
[30.69634819 -286.11874390]
[44.98832703 -281.52331543]
[58.75172424 -275.52767944]
[71.84974670 -268.19143677]
[84.15221405 -259.58749390]
[95.53685760 -249.80136108]
[105.89053345 -238.93029785]
[115.11032867 -227.08235168]
[123.10462189 -214.37525940]
[129.79396057 -200.93534851]
[135.11184692 -186.89616394]
[139.00543213 -172.39724731]
[141.43603516 -157.58270264]
[142.37948608 -142.59976196]
[141.82640076 -127.59733582]
[139.78230286 -112.72453308]
[136.26747131 -98.12917328]
[131.31686401 -83.95630646]
[124.97968292 -70.34680176]
[117.31890106 -57.43590927]
[108.41066742 -45.35195923]
[98.34350586 -34.21504211]
[87.21748352 -24.13584518]
[75.14316559 -15.21454620]
[62.24057007 -7.53981018]
[68.58769989 6.05114079]
[74.93482971 19.64209175]
[81.28195953 33.23304367]
[84.52053070 34.77547836]
[87.15056610 37.99799347]
[88.37467957 42.58645248]
[87.57135773 47.87552261]
[93.05839539 61.83591080]
[98.54542542 75.79630280]
[110.02725983 76.15072632]
[120.76602936 81.97834778]
[128.16531372 92.60588074]
[130.12306213 106.14694214]
[144.94081116 108.47805023]
[159.75857544 110.80915070]
[174.57632446 113.14025879]
[184.75553894 101.54770660]
[199.59251404 97.32069397]
[214.35284424 101.80805206]
[224.32653809 113.57787323]
[226.33105469 128.87446594]
[219.72674561 142.81672668]
[206.62101746 150.95573425]
[191.19586182 150.69436646]
[178.37339783 142.11601257]
[172.24522400 127.95801544]
[157.42747498 125.62690735]
[142.60971069 123.29580688]
[127.79195404 120.96469879]
[116.39093018 130.71235657]
[124.12822723 144.51252747]
[116.39093018 157.23979187]
[116.39093018 172.23979187]
[116.39093018 187.23979187]
[130.94940186 191.17504883]
[143.98298645 198.73884583]
[154.60624695 209.41040039]
[162.09928894 222.45805359]
[165.95654297 236.98936462]
[165.92086792 252.01226807]
[162.00073242 266.50271606]
[154.46911621 279.47451782]
[143.84465027 290.04641724]
[130.85578918 297.50204468]
[116.39093018 301.33834839]
[116.39093018 316.33834839]
[116.39093018 331.33834839]
[116.39093018 346.33834839]
[116.39093018 361.33834839]
[116.39093018 376.33834839]
[116.39093018 391.33834839]
[116.39093018 406.33834839]
[116.39093018 421.33834839]
[116.39093018 436.33834839]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[21 130]
[22 129]
[23 128]
[25 126]
[28 105]
[29 104]
[30 103]
[31 99]
[32 98]
[33 97]
[34 96]
[109 125]
[110 124]
[111 123]
[112 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
