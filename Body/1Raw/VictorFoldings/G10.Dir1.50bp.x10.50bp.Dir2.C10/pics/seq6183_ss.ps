%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAUGAAAAUCACCUCGGAGCUGGUAAAAAGAGGCCUAACCCCUGUCUUUAGAUUUACAGUCxxxxxxxxxxCCGAAUUGGUAUAUAGUUUAAACAAAACGAAUGAUUUCGACUCAUUAAAUUAUGAUAAUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[146.70458984 418.19241333]
[146.70458984 403.19241333]
[146.70458984 388.19241333]
[146.70458984 373.19241333]
[146.70458984 358.19241333]
[146.70458984 343.19241333]
[146.70458984 328.19241333]
[146.70458984 313.19241333]
[146.70458984 298.19241333]
[146.70458984 283.19241333]
[144.70854187 268.32580566]
[140.45568848 253.94132996]
[135.90840149 239.64720154]
[131.36111450 225.35307312]
[126.81381989 211.05894470]
[121.68351746 196.96354675]
[115.97885132 183.09066772]
[110.27419281 169.21778870]
[104.56952667 155.34490967]
[98.86486816 141.47203064]
[93.16020203 127.59915161]
[75.44762421 95.88737488]
[64.25932312 85.89627838]
[52.76865768 76.25446320]
[40.98651886 66.97107697]
[29.20438385 57.68769073]
[17.42224693 48.40430450]
[4.66898918 40.50782013]
[-4.48928976 39.65828323]
[-9.10349464 33.82550430]
[-22.53094482 27.13942909]
[-35.95839310 20.45335388]
[-45.09729767 19.41595840]
[-49.59077454 13.48966980]
[-62.87811661 6.52931404]
[-76.16545868 -0.43104225]
[-89.45279694 -7.39139843]
[-103.01469421 -13.80037403]
[-116.82827759 -19.64716148]
[-130.64186096 -25.49394989]
[-144.45544434 -31.34073830]
[-158.49742126 -36.61547852]
[-172.74411011 -41.30928040]
[-187.65823364 -35.39754868]
[-201.50683594 -43.49667740]
[-203.66644287 -59.39370728]
[-192.48040771 -70.89379883]
[-176.52969360 -69.17506409]
[-168.05030823 -55.55597305]
[-153.80361938 -50.86217117]
[-151.20399475 -52.05925369]
[-147.95954895 -52.26600266]
[-144.45735168 -51.22611618]
[-141.17181396 -48.83261871]
[-138.60865784 -45.15431976]
[-124.79507446 -39.30753326]
[-110.98149109 -33.46074677]
[-97.16790771 -27.61395645]
[-94.47883606 -28.59372711]
[-91.22836304 -28.53360176]
[-87.82328033 -27.20989609]
[-84.74519348 -24.55492210]
[-82.49243927 -20.67873955]
[-69.20510101 -13.71838379]
[-55.91775894 -6.75802755]
[-42.63041687 0.20232871]
[-29.27231789 7.02590418]
[-15.84486866 13.71197987]
[-2.41741920 20.39805412]
[11.07796478 26.94592476]
[4.06362915 13.68700027]
[3.88759732 -1.31196690]
[10.58882236 -14.73186207]
[22.68439484 -23.60300255]
[37.49769211 -25.96229744]
[51.75068283 -21.28766251]
[62.28933334 -10.61354160]
[66.78154755 3.69799161]
[64.23325348 18.47994614]
[55.20835114 30.46122932]
[41.70396423 36.99050903]
[26.70563126 36.62216568]
[38.48777008 45.90555191]
[50.26990509 55.18893814]
[62.05204391 64.47232056]
[65.63549805 64.39453125]
[69.43056488 66.08777618]
[72.58621979 69.63002014]
[74.25041962 74.70797729]
[85.43872070 84.69907379]
[78.10334015 71.61502838]
[81.43532562 56.98978424]
[93.71436310 48.37437820]
[108.60076141 50.21697235]
[118.40863800 61.56622696]
[118.07416534 76.56250000]
[107.76818085 87.46405792]
[121.05551910 80.50370789]
[134.34286499 73.54335022]
[147.63020325 66.58299255]
[153.76832581 51.76061249]
[169.22326660 47.45661545]
[182.13931274 56.97266388]
[182.60838318 73.00885773]
[170.27064514 83.26360321]
[154.59056091 79.87033081]
[141.30322266 86.83068848]
[128.01588440 93.79104614]
[114.72853851 100.75140381]
[129.26274109 104.46040344]
[132.35485840 119.13823700]
[120.55220032 128.39550781]
[107.03308105 121.89448547]
[112.73774719 135.76736450]
[118.44240570 149.64024353]
[124.14707184 163.51312256]
[129.85173035 177.38601685]
[135.55639648 191.25889587]
[139.20819092 193.85968018]
[141.56782532 197.16961670]
[142.57170105 200.68229675]
[142.33164978 203.92445374]
[141.10795593 206.51165771]
[145.65524292 220.80578613]
[150.20252991 235.09991455]
[154.74981689 249.39404297]
[159.44042969 254.19412231]
[160.75689697 259.80258179]
[159.17730713 264.36920166]
[164.09263611 250.19741821]
[174.26539612 239.17402649]
[187.99772644 233.13888550]
[202.99766541 233.09922791]
[216.76171875 239.06172180]
[226.99259949 250.03117371]
[231.98277283 264.17678833]
[230.89935303 279.13760376]
[223.92318726 292.41665649]
[212.21858215 301.79760742]
[197.73908997 305.71478271]
[182.90136719 303.51440430]
[170.18183899 295.56369019]
[161.70458984 283.19241333]
[161.70458984 298.19241333]
[161.70458984 313.19241333]
[161.70458984 328.19241333]
[161.70458984 343.19241333]
[161.70458984 358.19241333]
[161.70458984 373.19241333]
[161.70458984 388.19241333]
[161.70458984 403.19241333]
[161.70458984 418.19241333]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 129]
[12 126]
[13 125]
[14 124]
[15 123]
[16 118]
[17 117]
[18 116]
[19 115]
[20 114]
[21 113]
[22 90]
[23 89]
[24 85]
[25 84]
[26 83]
[27 82]
[28 70]
[30 69]
[31 68]
[32 67]
[34 66]
[35 65]
[36 64]
[37 63]
[38 58]
[39 57]
[40 56]
[41 55]
[42 50]
[43 49]
[97 109]
[98 108]
[99 107]
[100 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
