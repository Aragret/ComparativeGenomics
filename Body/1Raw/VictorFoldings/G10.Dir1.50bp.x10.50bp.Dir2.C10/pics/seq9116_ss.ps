%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAAAUAAUUCAAGCACUGCUUAUUACAAUUUUACUGGGUCUCUAUUUUACCCUCCUACAAxxxxxxxxxxCCCUAUCUAUUACUCUCAUCGCUACCUCCCUGACAAGCGCCUAUAGCACUCGAAUAAUUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[96.22540283 279.30395508]
[96.22540283 264.30395508]
[96.22540283 249.30393982]
[96.22540283 234.30393982]
[96.22540283 219.30393982]
[96.22540283 204.30393982]
[96.22540283 189.30393982]
[96.22540283 174.30393982]
[96.22540283 159.30393982]
[96.22540283 144.30393982]
[81.47394562 135.10354614]
[72.94801331 122.08162689]
[59.56172562 128.84974670]
[46.17544174 135.61785889]
[32.78915405 142.38597107]
[19.62057304 149.56848145]
[6.68251705 157.15838623]
[-6.25553894 164.74829102]
[-9.90463161 170.38670349]
[-15.08849621 172.90838623]
[-19.89346695 172.37193298]
[-33.13605118 179.41706848]
[-46.37863922 186.46220398]
[-59.62122345 193.50733948]
[-70.76480865 206.28453064]
[-86.12752533 199.11352539]
[-83.48957825 182.36605835]
[-66.66635895 180.26475525]
[-53.42377472 173.21961975]
[-40.18118668 166.17448425]
[-26.93860245 159.12934875]
[-13.84544754 151.81024170]
[-0.90739137 144.22033691]
[12.03066444 136.63043213]
[13.26358128 133.26184082]
[16.22611046 130.34205627]
[20.68003464 128.69435120]
[26.02103996 128.99969482]
[39.40732574 122.23157501]
[52.79360962 115.46345520]
[66.17989349 108.69534302]
[66.83458710 89.07004547]
[77.97629547 72.90083313]
[96.08197784 65.30046844]
[89.81949615 50.77146530]
[98.83654785 38.91642761]
[100.39413452 23.99751472]
[101.95171356 9.07860184]
[87.25871277 5.99318886]
[72.96083832 1.41335809]
[59.20965958 -4.61234140]
[46.15093994 -12.02003384]
[33.92311478 -20.73119354]
[22.65580368 -30.65347672]
[12.46844482 -41.68170547]
[3.46903300 -53.69896698]
[-4.24703455 -66.57788086]
[-10.59796333 -80.18190765]
[-15.51642895 -94.36685944]
[-18.95029449 -108.98235321]
[-20.86315727 -123.87345123]
[-21.23473930 -138.88232422]
[-20.06110573 -153.84983826]
[-17.35469437 -168.61734009]
[-13.14419365 -183.02830505]
[-7.47424030 -196.92994690]
[-0.40493742 -210.17491150]
[7.98877621 -222.62278748]
[17.61792183 -234.14161682]
[28.38042641 -244.60931396]
[40.16220093 -253.91488647]
[52.83835220 -261.95971680]
[66.27450562 -268.65850830]
[80.32823181 -273.94024658]
[94.85054779 -277.74896240]
[109.68751526 -280.04428101]
[124.68185425 -280.80184937]
[139.67460632 -280.01364136]
[154.50685120 -277.68801880]
[169.02136230 -273.84963989]
[183.06425476 -268.53918457]
[196.48669434 -261.81295776]
[209.14637756 -253.74223328]
[220.90911865 -244.41259766]
[231.65020752 -233.92294312]
[241.25579834 -222.38446045]
[249.62405396 -209.91944885]
[256.66629028 -196.66007996]
[262.30783081 -182.74687195]
[266.48886108 -168.32734680]
[269.16510010 -153.55433655]
[270.30813599 -138.58444214]
[269.90588379 -123.57637787]
[267.96261597 -108.68921661]
[264.49887085 -94.08076477]
[259.55145264 -79.90589905]
[253.17272949 -66.31487274]
[245.43035889 -53.45175552]
[236.40640259 -41.45290756]
[226.19653320 -30.44552040]
[214.90898132 -20.54628181]
[202.66337585 -11.86012650]
[189.58953857 -4.47913313]
[175.82608032 1.51845479]
[161.51887512 6.06905985]
[146.81961060 9.12444305]
[131.88407898 10.65221596]
[116.87062836 10.63618279]
[115.31304169 25.55509567]
[113.75546265 40.47400665]
[120.12935638 53.93590927]
[111.00088501 66.85804749]
[124.40903473 71.78746796]
[135.48136902 82.20823669]
[141.96919250 96.97111511]
[142.19729614 114.01698303]
[155.97967529 119.93695068]
[171.71325684 118.27415466]
[180.35375977 130.40638733]
[194.13613892 136.32633972]
[209.50953674 131.73957825]
[222.59796143 141.01708984]
[223.36112976 157.04197693]
[211.21357727 167.52131653]
[195.47387695 164.41625977]
[188.21618652 150.10871887]
[174.43379211 144.18876648]
[159.68601990 146.27499390]
[150.05970764 133.71932983]
[136.27732849 127.79936218]
[130.01434326 131.92550659]
[139.27134705 143.72839355]
[148.52833557 155.53128052]
[160.99588013 163.87156677]
[160.94308472 178.87147522]
[148.41716003 187.12379456]
[134.61398315 181.25245667]
[131.87115479 166.50527954]
[124.67976379 153.34153748]
[117.48838043 140.17779541]
[111.22540283 144.30393982]
[111.22540283 159.30393982]
[111.22540283 174.30393982]
[111.22540283 189.30393982]
[111.22540283 204.30393982]
[111.22540283 219.30393982]
[111.22540283 234.30393982]
[111.22540283 249.30393982]
[111.22540283 264.30395508]
[111.22540283 279.30395508]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 41]
[13 40]
[14 39]
[15 38]
[16 34]
[17 33]
[18 32]
[21 31]
[22 30]
[23 29]
[24 28]
[44 112]
[46 110]
[47 109]
[48 108]
[116 130]
[117 129]
[119 127]
[120 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
