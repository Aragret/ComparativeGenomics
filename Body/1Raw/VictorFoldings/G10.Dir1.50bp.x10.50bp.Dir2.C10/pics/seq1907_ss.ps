%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCACUCCACCUUACUACCAGACAACCUUAGCCAAACCAUUUACCCAAAUAAAGUAUAGGCxxxxxxxxxxACCCUAGCCAUCAUUCUACUAUCAACAUUACUAAUAAGUGGCUCCUUUAACCUCUCCACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[95.15830231 227.83016968]
[94.84624481 212.83341980]
[94.53418732 197.83665466]
[94.22212982 182.83990479]
[93.91007233 167.84315491]
[93.59801483 152.84640503]
[93.28596497 137.84963989]
[92.97390747 122.85289001]
[92.66184998 107.85614014]
[89.56352997 93.17961121]
[83.78725433 79.33639526]
[78.01097870 65.49317932]
[72.23471069 51.64995956]
[66.45843506 37.80674362]
[60.68216324 23.96352577]
[46.50816345 28.88678932]
[32.06038284 32.93679047]
[17.39257050 36.09846115]
[2.55929375 38.36003876]
[-12.38426876 39.71311188]
[-27.38252449 40.15264893]
[-42.37967682 39.67700958]
[-57.31993866 38.28796768]
[-72.14772797 35.99068832]
[-86.80788422 32.79371643]
[-101.24588013 28.70895004]
[-115.40798950 23.75158119]
[-129.24153137 17.94005013]
[-142.69505310 11.29598045]
[-155.71849060 3.84408569]
[-168.26341248 -4.38791132]
[-180.28315735 -13.36938763]
[-191.73297119 -23.06693077]
[-202.57029724 -33.44446564]
[-212.75482178 -44.46338272]
[-222.24862671 -56.08269882]
[-231.01640320 -68.25918579]
[-239.02555847 -80.94754028]
[-246.24627686 -94.10056305]
[-252.65170288 -107.66932678]
[-258.21801758 -121.60335541]
[-262.92446899 -135.85081482]
[-266.75360107 -150.35868835]
[-269.69116211 -165.07302856]
[-271.72619629 -179.93908691]
[-272.85116577 -194.90155029]
[-273.06182861 -209.90475464]
[-272.35748291 -224.89291382]
[-270.74069214 -239.81024170]
[-268.21749878 -254.60127258]
[-264.79724121 -269.21093750]
[-260.49270630 -283.58496094]
[-255.31988525 -297.66979980]
[-249.29800415 -311.41305542]
[-242.44947815 -324.76367188]
[-234.79977417 -337.67193604]
[-226.37738037 -350.08981323]
[-217.21359253 -361.97113037]
[-207.34251404 -373.27169800]
[-196.80085754 -383.94946289]
[-185.62786865 -393.96469116]
[-173.86508179 -403.28015137]
[-161.55625916 -411.86117554]
[-148.74720764 -419.67581177]
[-135.48554993 -426.69506836]
[-121.82065582 -432.89276123]
[-107.80333710 -438.24584961]
[-93.48574066 -442.73443604]
[-78.92114258 -446.34179688]
[-64.16370392 -449.05453491]
[-49.26834106 -450.86257935]
[-34.29045486 -451.75915527]
[-19.28577232 -451.74093628]
[-4.31010866 -450.80801392]
[10.58082581 -448.96386719]
[25.33163452 -446.21533203]
[39.88744354 -442.57263184]
[54.19410324 -438.04931641]
[68.19839478 -432.66223145]
[81.84821320 -426.43139648]
[95.09278870 -419.38000488]
[107.88285065 -411.53430176]
[120.17080688 -402.92343140]
[131.91096497 -393.57946777]
[143.05963135 -383.53713989]
[153.57533264 -372.83383179]
[163.41896057 -361.50936890]
[172.55389404 -349.60583496]
[180.94615173 -337.16757202]
[188.56449890 -324.24078369]
[195.38061523 -310.87359619]
[201.36914062 -297.11575317]
[206.50778198 -283.01840210]
[210.77742004 -268.63400269]
[214.16220093 -254.01606750]
[216.64950562 -239.21896362]
[218.23010254 -224.29774475]
[218.89810181 -209.30793762]
[218.65100098 -194.30526733]
[217.48974609 -179.34558105]
[215.41864014 -164.48451233]
[212.44540405 -149.77734375]
[208.58106995 -135.27880859]
[203.84005737 -121.04280853]
[198.23995972 -107.12232208]
[191.80163574 -93.56913757]
[184.54902649 -80.43367004]
[176.50910950 -67.76478577]
[167.71180725 -55.60961151]
[158.18983459 -44.01336670]
[147.97860718 -33.01919174]
[137.11613464 -22.66798210]
[125.64281464 -12.99825001]
[113.60132599 -4.04596376]
[101.03646851 4.15557098]
[87.99497986 11.57584476]
[74.52538300 18.18725395]
[80.30165863 32.03047180]
[86.07792664 45.87368774]
[91.85420227 59.71690750]
[97.63047028 73.56012726]
[103.40674591 87.40334320]
[105.77349854 72.59123230]
[112.52381134 59.19596863]
[123.02098083 48.48104477]
[136.27484131 41.45715332]
[151.03523254 38.78681946]
[165.90989685 40.72192001]
[179.49575806 47.07992935]
[190.51135254 57.26113129]
[197.91761780 70.30518341]
[201.01596069 84.98169708]
[199.51414490 99.90632629]
[193.55381775 113.67130280]
[183.69718933 124.97824097]
[170.87397766 132.76062012]
[156.29374695 136.28436279]
[141.33177185 135.21710205]
[127.39932251 129.65950012]
[115.81059265 120.13577271]
[107.65859985 107.54408264]
[107.97065735 122.54084015]
[108.28271484 137.53759766]
[108.59477234 152.53434753]
[108.90682983 167.53109741]
[109.21888733 182.52784729]
[109.53093719 197.52461243]
[109.84299469 212.52136230]
[110.15505219 227.51811218]
[112.74604797 246.72583008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 122]
[11 121]
[12 120]
[13 119]
[14 118]
[15 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
