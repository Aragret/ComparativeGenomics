%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACCUACUCAUGCACCUAAUUGGAAGCGCCACCCUAGCAAUAUCAACCAUUAACCUUCCCUxxxxxxxxxxGCCUGAACGCAGGCACAUACUUCCUAUUCUACACCCUAGUAGGCUCCCUUCCCCUACUCAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[200.05055237 560.66320801]
[200.05055237 545.66320801]
[200.05055237 530.66320801]
[200.05055237 515.66320801]
[200.05055237 500.66323853]
[200.05055237 485.66323853]
[200.05055237 470.66323853]
[200.05055237 455.66323853]
[200.05055237 440.66323853]
[200.05055237 425.66323853]
[196.37002563 421.27783203]
[195.11485291 415.02700806]
[197.17341614 408.30593872]
[192.33360291 394.10818481]
[187.49378967 379.91043091]
[182.65396118 365.71267700]
[177.81414795 351.51492310]
[172.97433472 337.31716919]
[158.03092957 338.00424194]
[143.48472595 334.44909668]
[130.51658630 326.93154907]
[120.18179321 316.05346680]
[113.32409668 302.69052124]
[110.50685120 287.92181396]
[111.96678925 272.94259644]
[117.59408569 258.96765137]
[126.94062805 247.13278198]
[139.25566101 238.40237427]
[134.41583252 224.20462036]
[129.57601929 210.00686646]
[118.14602661 200.45675659]
[121.01682281 184.89819336]
[116.17700958 170.70043945]
[111.33718872 156.50268555]
[106.49737549 142.30493164]
[101.65755463 128.10717773]
[81.46263123 121.19261932]
[71.92221832 102.09741974]
[57.20669174 99.18994904]
[45.13800049 109.13382721]
[29.50159454 108.94197845]
[17.68050575 98.70499420]
[15.25629234 83.25645447]
[23.37359238 69.89070129]
[38.19966507 64.91862488]
[52.73409653 70.68788910]
[60.11416626 84.47442627]
[74.82968903 87.38189697]
[78.50963593 81.80863953]
[83.39870453 77.25888824]
[89.22180939 73.98862457]
[82.88346100 87.58366394]
[74.05916595 99.71346283]
[63.07550430 109.92909241]
[50.33896255 117.85250854]
[36.32089615 123.19046783]
[21.54009247 125.74542236]
[6.54356146 125.42282867]
[-8.11369801 122.23461151]
[-21.88924789 116.29876709]
[-34.27327728 107.83496857]
[-44.80747223 97.15644836]
[-53.10198212 84.65840912]
[-58.84983826 70.80336761]
[-61.83832550 56.10408401]
[-61.95684814 41.10455322]
[-59.20101166 26.35988045]
[-53.67280960 12.41574192]
[-45.57682800 -0.21181186]
[-35.21269226 -11.05545807]
[-22.96395493 -19.71389008]
[-9.28392506 -25.86667633]
[5.32112455 -29.28610992]
[20.31068420 -29.84564400]
[35.13001633 -27.52457237]
[49.23068619 -22.40879250]
[62.09084320 -14.68763351]
[73.23455811 -4.64683867]
[82.24942780 7.34199667]
[88.80181885 20.83518600]
[92.64923859 35.33337021]
[93.64917755 50.30429840]
[100.74558258 37.08911514]
[107.84198761 23.87392998]
[114.93839264 10.65874767]
[122.03479004 -2.55643511]
[120.98922729 -18.92221642]
[134.78771973 -27.78413200]
[149.23558044 -20.02580070]
[149.47006226 -3.62833023]
[135.24996948 4.53996849]
[128.15357971 17.75515175]
[121.05716705 30.97033501]
[113.96076965 44.18551636]
[106.86436462 57.40069962]
[104.10812378 72.14529419]
[116.49293518 77.18017578]
[125.15929413 87.35994720]
[128.15332031 100.38950348]
[124.79998016 113.33124542]
[115.85530853 123.26736450]
[120.69512939 137.46511841]
[125.53494263 151.66287231]
[130.37475586 165.86062622]
[135.21456909 180.05838013]
[146.99075317 190.62399292]
[143.77377319 205.16705322]
[148.61358643 219.36480713]
[153.45339966 233.56254578]
[168.53680420 232.95323181]
[183.16596985 236.61512756]
[196.15742493 244.24317932]
[206.46263123 255.21182251]
[213.25263977 268.62628174]
[215.98481750 283.39553833]
[214.44613647 298.32113647]
[208.76980591 312.19430542]
[199.42375183 323.89401245]
[187.17208862 332.47735596]
[192.01190186 346.67510986]
[196.85171509 360.87286377]
[201.69152832 375.07061768]
[206.53135681 389.26837158]
[211.37117004 403.46612549]
[214.64260864 388.82720947]
[222.17698669 375.85671997]
[233.27255249 365.76275635]
[246.89587402 359.48541260]
[261.77810669 357.60937500]
[276.53311157 360.30938721]
[289.78662109 367.33395386]
[300.30419922 378.02880859]
[307.10629272 391.39785767]
[309.55935669 406.19592285]
[307.43487549 421.04470825]
[300.93072510 434.56121826]
[290.65274048 445.48654175]
[277.55816650 452.80313110]
[262.86663818 455.82946777]
[247.94648743 454.28372192]
[234.18739319 448.30984497]
[222.87083435 438.46426392]
[215.05055237 425.66323853]
[215.05055237 440.66323853]
[215.05055237 455.66323853]
[215.05055237 470.66323853]
[215.05055237 485.66323853]
[215.05055237 500.66323853]
[215.05055237 515.66320801]
[215.05055237 530.66320801]
[215.05055237 545.66320801]
[215.05055237 560.66320801]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[13 124]
[14 123]
[15 122]
[16 121]
[17 120]
[18 119]
[28 109]
[29 108]
[30 107]
[32 105]
[33 104]
[34 103]
[35 102]
[36 101]
[38 48]
[39 47]
[51 96]
[82 95]
[83 94]
[84 93]
[85 92]
[86 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
