%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAUGCCUAGAAGGAAUAAUACUAUCGCUGUUCAUUAUAGCUACUCUCAUAACCCUCAACAxxxxxxxxxxCAUUGUCGCAUCCACCUUUAUUAUCAGUCUCUUCCCCACAACAAUAUUCAUGUGCCUAGACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 298.95401001]
[92.50000000 283.95401001]
[92.50000000 268.95401001]
[92.50000000 253.95402527]
[92.50000000 238.95402527]
[92.50000000 223.95402527]
[92.50000000 208.95402527]
[92.50000000 193.95402527]
[92.50000000 178.95402527]
[92.50000000 163.95402527]
[78.40219879 160.66218567]
[65.39608765 154.30410767]
[54.13908768 145.20114136]
[45.20019150 133.81341553]
[39.03122711 120.71654510]
[35.94402313 106.57252502]
[36.09461975 92.09629059]
[39.47540665 78.01956177]
[45.91549683 65.05385590]
[55.08936691 53.85456467]
[66.53330994 44.98775482]
[79.66887665 38.90162277]
[93.83210754 35.90379333]
[94.14416504 20.90704155]
[94.45622253 5.91028786]
[94.76827240 -9.08646584]
[95.08032990 -24.08321953]
[80.12848663 -25.34607124]
[65.28683472 -27.55468750]
[50.61514664 -30.70017624]
[36.17249680 -34.76987076]
[22.01704407 -39.74738312]
[8.20578480 -45.61267471]
[-5.20566750 -52.34212112]
[-18.16330910 -59.90863037]
[-30.61496162 -68.28173828]
[-42.51049042 -77.42771149]
[-53.80199051 -87.30974579]
[-64.44400024 -97.88803101]
[-74.39366150 -109.11997986]
[-83.61092377 -120.96036530]
[-92.05865479 -133.36151123]
[-99.70284271 -146.27348328]
[-106.51271820 -159.64427185]
[-112.46084595 -173.42005920]
[-117.52328491 -187.54536438]
[-121.67964172 -201.96331787]
[-124.91318512 -216.61584473]
[-127.21089935 -231.44395447]
[-128.56352234 -246.38795471]
[-128.96560669 -261.38763428]
[-128.41554260 -276.38265991]
[-126.91555023 -291.31256104]
[-124.47165680 -306.11727905]
[-121.09370422 -320.73721313]
[-116.79529572 -335.11343384]
[-111.59374237 -349.18811035]
[-105.50998688 -362.90454102]
[-98.56852722 -376.20751953]
[-90.79731750 -389.04342651]
[-82.22763824 -401.36062622]
[-72.89401245 -413.10949707]
[-62.83401871 -424.24273682]
[-52.08815765 -434.71548462]
[-40.69971085 -444.48565674]
[-28.71452522 -453.51382446]
[-16.18086624 -461.76367188]
[-3.14920282 -469.20196533]
[10.32799053 -475.79876709]
[24.19644737 -481.52749634]
[38.40032196 -486.36511230]
[52.88241959 -490.29211426]
[67.58442688 -493.29269409]
[82.44714355 -495.35476685]
[97.41072083 -496.47003174]
[112.41490936 -496.63400269]
[127.39929199 -495.84603882]
[142.30352783 -494.10925293]
[157.06759644 -491.43069458]
[171.63206482 -487.82113647]
[185.93826294 -483.29510498]
[199.92860413 -477.87081909]
[213.54675293 -471.57012939]
[226.73785400 -464.41839600]
[239.44882202 -456.44445801]
[251.62844849 -447.68035889]
[263.22769165 -438.16143799]
[274.19985962 -427.92602539]
[284.50076294 -417.01528931]
[294.08892822 -405.47320557]
[302.92575073 -393.34625244]
[310.97561646 -380.68322754]
[318.20617676 -367.53515625]
[324.58822632 -353.95495605]
[330.09613037 -339.99731445]
[334.70770264 -325.71844482]
[338.40435791 -311.17587280]
[341.17123413 -296.42807007]
[342.99716187 -281.53451538]
[343.87478638 -266.55511475]
[343.80059814 -251.55021667]
[342.77490234 -236.58023071]
[340.80178833 -221.70542908]
[337.88925171 -206.98573303]
[334.04898071 -192.48039246]
[329.29644775 -178.24783325]
[323.65081787 -164.34533691]
[317.13476562 -150.82890320]
[309.77459717 -137.75296021]
[301.59988403 -125.17016602]
[292.64361572 -113.13117218]
[282.94177246 -101.68445587]
[272.53350830 -90.87612152]
[261.46066284 -80.74967957]
[249.76785278 -71.34591675]
[237.50216675 -62.70268631]
[224.71298218 -54.85480118]
[211.45179749 -47.83385849]
[197.77203369 -41.66813278]
[183.72872925 -36.38244629]
[169.37847900 -31.99808693]
[154.77903748 -28.53270721]
[139.98919678 -26.00026131]
[125.06851959 -24.41094780]
[110.07708740 -23.77116394]
[109.76502991 -8.77440929]
[109.45297241 6.22234392]
[109.14091492 21.21909714]
[108.82885742 36.21585083]
[123.77392578 40.15715027]
[137.34928894 47.54623413]
[148.77279663 57.95739365]
[157.38630676 70.79079437]
[162.69357300 85.30705261]
[164.38879395 100.66983795]
[162.37432861 115.99402618]
[156.76623535 130.39672852]
[147.88758850 143.04817200]
[136.24996948 153.21942139]
[122.52382660 160.32449341]
[107.50000000 163.95402527]
[107.50000000 178.95402527]
[107.50000000 193.95402527]
[107.50000000 208.95402527]
[107.50000000 223.95402527]
[107.50000000 238.95402527]
[107.50000000 253.95402527]
[107.50000000 268.95401001]
[107.50000000 283.95401001]
[107.50000000 298.95401001]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[23 129]
[24 128]
[25 127]
[26 126]
[27 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
