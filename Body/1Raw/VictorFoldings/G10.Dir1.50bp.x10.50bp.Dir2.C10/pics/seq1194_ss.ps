%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUAACCCAAGUCAAUAGAAGCCGGCGUAAAGAGUGUUUUAGAUCACCCCCUCCCCAAUAAxxxxxxxxxxUCAUCUUCACAAUUCUAAUUCUACUGACUAUCCUAGAAAUCGCUGUCGCCUUAAUCCAAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[172.74812317 402.04907227]
[172.74812317 387.04907227]
[172.74812317 372.04907227]
[172.74812317 357.04907227]
[172.74812317 342.04907227]
[172.74812317 327.04907227]
[172.74812317 312.04907227]
[172.74812317 297.04907227]
[172.74812317 282.04907227]
[172.74812317 267.04907227]
[169.34515381 252.44017029]
[162.71664429 238.98420715]
[146.95109558 240.26177979]
[131.86167908 235.39228821]
[119.75835419 225.09019470]
[112.50579071 210.90402222]
[111.23613739 194.98353577]
[116.17234039 179.75402832]
[126.58972168 167.54689026]
[119.68272400 154.23173523]
[112.77572632 140.91658020]
[105.86872101 127.60141754]
[98.96172333 114.28626251]
[87.28496552 106.59569550]
[87.72312164 92.62073517]
[80.81611633 79.30558014]
[73.90911865 65.99042511]
[67.00212097 52.67526627]
[60.09512329 39.36011124]
[44.18333435 42.63207626]
[28.00561523 41.32027817]
[12.85482502 35.53735733]
[-0.06042201 25.75295830]
[-9.71218300 12.75559521]
[-15.33499336 -2.41088772]
[-16.48657608 -18.53114510]
[-13.08261681 -34.31572342]
[-5.40288210 -48.50420380]
[5.93174934 -59.96584702]
[-1.52316093 -72.98215485]
[-8.97807121 -85.99846649]
[-16.43298149 -99.01477814]
[-27.20379066 -109.45458984]
[-40.44637680 -116.49972534]
[-53.68896103 -123.54486084]
[-67.57765961 -116.62504578]
[-82.87561035 -119.22357178]
[-93.70043945 -130.34124756]
[-95.88977814 -145.70309448]
[-88.60179138 -159.40217590]
[-74.63883972 -166.17091370]
[-59.36997986 -163.40658569]
[-48.66639328 -152.17213440]
[-46.64382553 -136.78744507]
[-33.40124130 -129.74230957]
[-20.15865517 -122.69717407]
[-27.72959709 -135.64633179]
[-32.39826584 -149.90129089]
[-33.95450211 -164.82034302]
[-32.32825851 -179.73191833]
[-27.59273338 -193.96479797]
[-19.96109581 -206.87828064]
[-9.77688122 -217.89108276]
[2.50147390 -226.50746155]
[16.32126617 -232.33955383]
[31.06040382 -235.12484741]
[46.05541229 -234.73793030]
[60.63130188 -231.19625854]
[74.13194275 -224.65922546]
[85.94960785 -215.42112732]
[95.55233765 -203.89776611]
[102.50787354 -190.60791016]
[106.50309753 -176.14974976]
[107.35818481 -161.17414856]
[105.03463745 -146.35519409]
[99.63705444 -132.35998535]
[91.40839386 -119.81848907]
[80.71907043 -109.29525757]
[68.05026245 -101.26398468]
[53.97224426 -96.08621216]
[39.11873245 -93.99499512]
[24.15834999 -95.08447266]
[9.76453114 -99.30561066]
[-3.41667199 -106.46968842]
[4.03823805 -93.45337677]
[11.49314880 -80.43706512]
[18.94805908 -67.42075348]
[32.28731537 -71.10370636]
[46.13091278 -71.46405029]
[59.66312408 -68.47576904]
[72.08540344 -62.31027985]
[82.66352844 -53.32666016]
[90.77098083 -42.05069733]
[95.92606354 -29.14413071]
[97.82052612 -15.36581993]
[96.33796692 -1.52712476]
[91.56099701 11.55587482]
[83.76663971 23.11050034]
[73.41027832 32.45311356]
[80.31727600 45.76826859]
[87.22427368 59.08342361]
[94.13127899 72.39858246]
[101.03827667 85.71373749]
[112.71503448 93.40430450]
[112.27687836 107.37926483]
[119.18388367 120.69441986]
[126.09088135 134.00958252]
[132.99787903 147.32473755]
[139.90487671 160.63989258]
[154.08689880 159.00550842]
[167.94343567 162.31365967]
[179.80767822 170.14533997]
[188.25970459 181.53871155]
[192.29635620 195.10716248]
[191.45028687 209.20806885]
[185.84400940 222.14160156]
[176.17260742 232.35569763]
[182.80111694 245.81166077]
[184.10287476 230.86825562]
[189.15864563 216.74597168]
[197.63664246 204.37165833]
[208.98042297 194.55744934]
[222.44549561 187.94747925]
[237.14813232 184.97554016]
[252.12339783 185.83671570]
[266.38842773 190.47444153]
[279.00704956 198.58438110]
[289.15100098 209.63426208]
[296.15463257 222.89884949]
[299.55819702 237.50759888]
[299.13839722 252.50172424]
[294.92269897 266.89715576]
[287.18786621 279.74908447]
[276.44149780 290.21405029]
[263.38888550 297.60519409]
[248.88667297 301.43746948]
[233.88668823 301.45935059]
[219.37338257 297.66940308]
[206.29925537 290.31637573]
[195.52239990 279.88281250]
[187.74812317 267.04907227]
[187.74812317 282.04907227]
[187.74812317 297.04907227]
[187.74812317 312.04907227]
[187.74812317 327.04907227]
[187.74812317 342.04907227]
[187.74812317 357.04907227]
[187.74812317 372.04907227]
[187.74812317 387.04907227]
[187.74812317 402.04907227]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 118]
[12 117]
[19 109]
[20 108]
[21 107]
[22 106]
[23 105]
[25 103]
[26 102]
[27 101]
[28 100]
[29 99]
[39 87]
[40 86]
[41 85]
[42 84]
[43 56]
[44 55]
[45 54]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
