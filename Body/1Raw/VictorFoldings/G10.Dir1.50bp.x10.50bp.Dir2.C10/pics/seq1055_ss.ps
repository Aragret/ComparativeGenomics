%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAACGCUUAGCCUAGCCACACCCCCACGGGAAACAGCAGUGAUUAACCUUUAGCAAUAAAxxxxxxxxxxCCACUUUAAUUAAGCUAAGCCCUUACUAGACCAAUGGGACUUAAACCCACAAACACUUAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 247.70277405]
[92.50000000 232.70277405]
[92.50000000 217.70277405]
[92.50000000 202.70277405]
[92.50000000 187.70277405]
[92.50000000 172.70277405]
[92.50000000 157.70277405]
[92.50000000 142.70277405]
[92.50000000 127.70277405]
[92.50000000 112.70277405]
[87.01296997 98.74238586]
[76.79949188 87.75672150]
[61.24003220 87.02115631]
[51.03860474 75.73463440]
[51.83574295 60.90560150]
[41.62226105 49.91993713]
[31.40878296 38.93427277]
[21.19530296 27.94860840]
[10.98182297 16.96294403]
[0.76834303 5.97727966]
[-9.44513702 -5.00838518]
[-27.18453217 0.88918763]
[-46.01517105 -3.24058652]
[-60.51236343 -16.81794167]
[-66.19218445 -36.45979309]
[-81.15243530 -35.36848450]
[-88.17979431 -20.43547249]
[-101.69084930 -11.12166214]
[-117.96014404 -9.88066959]
[-132.55894470 -16.95575714]
[-141.56080627 -30.33926010]
[-156.49511719 -28.93695641]
[-171.42942810 -27.53465271]
[-184.48229980 -17.60720062]
[-199.49949646 -24.19627380]
[-201.03260803 -40.52360153]
[-187.50450134 -49.79302597]
[-172.83172607 -42.46895981]
[-157.89741516 -43.87126541]
[-142.96311951 -45.27356720]
[-138.08270264 -58.06579208]
[-128.10937500 -67.54271698]
[-114.95874023 -71.80514526]
[-101.19095612 -69.96308899]
[-89.51242828 -62.32090378]
[-82.24374390 -50.32873154]
[-67.28349304 -51.42004395]
[-59.29357910 -64.11497498]
[-64.78060913 -78.07536316]
[-70.26763916 -92.03575134]
[-75.75467682 -105.99613953]
[-90.56515503 -103.32482147]
[-105.61219788 -103.59451294]
[-120.31743622 -106.79485321]
[-134.11563110 -112.80282593]
[-146.47644043 -121.38750458]
[-156.92472839 -132.21891785]
[-165.05889893 -144.88073730]
[-170.56628418 -158.88626099]
[-173.23521423 -173.69717407]
[-172.96308899 -188.74417114]
[-169.76036072 -203.44889832]
[-163.75015259 -217.24612427]
[-155.16348267 -229.60554504]
[-144.33036804 -240.05207825]
[-131.66723633 -248.18418884]
[-117.66082001 -253.68931580]
[-102.84947968 -256.35583496]
[-87.80252838 -256.08129883]
[-73.09832001 -252.87619019]
[-59.30206299 -246.86373901]
[-46.94403839 -238.27505493]
[-36.49925613 -227.44026184]
[-28.36918831 -214.77581787]
[-22.86633110 -200.76850891]
[-20.20220184 -185.95672607]
[-20.47920036 -170.90982056]
[-23.68667984 -156.20614624]
[-29.70135498 -142.41085815]
[-38.29203415 -130.05421448]
[-49.12852097 -119.61119080]
[-61.79428482 -111.48316956]
[-56.30725098 -97.52278137]
[-50.82022095 -83.56239319]
[-45.33319092 -69.60200500]
[-34.35496140 -72.94252014]
[-23.02446365 -72.93365479]
[-12.32827950 -69.66050720]
[-3.17323804 -63.48873901]
[3.69042730 -55.02581406]
[7.73034143 -45.06199646]
[8.67270470 -34.49696350]
[6.51939011 -24.25866699]
[1.54052794 -15.22186470]
[11.75400734 -4.23620033]
[21.96748734 6.74946451]
[32.18096924 17.73512840]
[42.39444733 28.72079468]
[52.60792542 39.70645905]
[62.82140732 50.69212341]
[77.66913605 50.97597122]
[88.18354797 61.97150040]
[87.78515625 77.54324341]
[97.99863434 88.52890778]
[94.30226898 73.99147797]
[91.86484528 59.19083405]
[96.21845245 44.83652878]
[106.46688843 33.88346481]
[120.50045776 28.58638954]
[135.43026733 30.03573036]
[148.18295288 37.93313217]
[156.13331604 50.65287781]
[157.64471436 65.57653809]
[152.40634155 79.63153076]
[137.54466248 81.66387939]
[151.56137085 87.00539398]
[165.57807922 92.34690857]
[179.59480286 97.68841553]
[193.16427612 89.91647339]
[208.54557800 92.73596954]
[218.47612000 104.81563568]
[218.26699829 120.45182037]
[208.01696777 132.26159668]
[192.56576538 134.66874695]
[179.20898438 126.53668976]
[174.25328064 111.70513153]
[160.23657227 106.36361694]
[146.21986389 101.02210999]
[132.20314026 95.68059540]
[126.02735901 99.93614197]
[135.76731873 111.34372711]
[145.50729370 122.75131989]
[159.12211609 129.04705811]
[163.49229431 143.39633179]
[155.69810486 156.21235657]
[140.94683838 158.93272400]
[129.09387207 149.73995972]
[128.05854797 134.77470398]
[120.86717224 121.61096954]
[113.67578888 108.44722748]
[107.50000000 112.70277405]
[107.50000000 127.70277405]
[107.50000000 142.70277405]
[107.50000000 157.70277405]
[107.50000000 172.70277405]
[107.50000000 187.70277405]
[107.50000000 202.70277405]
[107.50000000 217.70277405]
[107.50000000 232.70277405]
[107.50000000 247.70277405]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 104]
[12 103]
[15 100]
[16 99]
[17 98]
[18 97]
[19 96]
[20 95]
[21 94]
[25 47]
[26 46]
[31 40]
[32 39]
[33 38]
[48 85]
[49 84]
[50 83]
[51 82]
[115 129]
[116 128]
[117 127]
[118 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
