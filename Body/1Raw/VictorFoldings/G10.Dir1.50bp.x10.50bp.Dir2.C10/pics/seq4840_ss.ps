%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUUCUAAUAGCUAUCCUCUUCAACAAUAUACUCUCCGGACAAUGAACCAUAACCAAUACUAxxxxxxxxxxCAAUCCCCCUCUACCUAAAACUCACAGCCCUCGCUGUCACUUUCCUAGGACUUCUAACAGCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 248.77682495]
[92.50000000 233.77682495]
[92.50000000 218.77682495]
[92.50000000 203.77682495]
[92.50000000 188.77682495]
[92.50000000 173.77682495]
[92.50000000 158.77682495]
[92.50000000 143.77682495]
[92.50000000 128.77682495]
[92.50000000 113.77682495]
[86.45203400 127.50351715]
[73.26705170 134.65586853]
[58.46275330 132.24075317]
[48.23450089 121.26884460]
[46.86265182 106.33170319]
[54.92129898 93.68029785]
[69.03803253 88.60902405]
[83.30623627 93.24088287]
[72.11794281 83.24978638]
[60.92964554 73.25868988]
[50.00717926 83.55340576]
[38.24015427 92.87105560]
[25.71569443 101.14265442]
[12.52652645 108.30696106]
[-1.22970068 114.31092834]
[-15.45113850 119.11011505]
[-30.03249359 122.66897583]
[-44.86581039 124.96117401]
[-59.84126663 125.96972656]
[-74.84798431 125.68717194]
[-89.77486420 124.11560822]
[-104.51137543 121.26666260]
[-118.94843292 117.16143036]
[-132.97912598 111.83031464]
[-146.49960327 105.31276703]
[-159.40972900 97.65705872]
[-171.61395264 88.91986084]
[-183.02188110 79.16586304]
[-193.54908752 68.46728516]
[-203.11759949 56.90333939]
[-211.65660095 44.55963898]
[-219.10285950 31.52757263]
[-225.40122986 17.90362740]
[-230.50511169 3.78867483]
[-234.37669373 -10.71278381]
[-236.98730469 -25.49338150]
[-238.31764221 -40.44368744]
[-238.35784912 -55.45301437]
[-237.10762024 -70.41023254]
[-234.57620239 -85.20459747]
[-230.78236389 -99.72659302]
[-225.75418091 -113.86868286]
[-219.52886963 -127.52616882]
[-212.15252686 -140.59793091]
[-203.67977905 -152.98719788]
[-194.17333984 -164.60223389]
[-183.70359802 -175.35705566]
[-172.34808350 -185.17202759]
[-160.19084167 -193.97447205]
[-147.32189941 -201.69921875]
[-133.83654785 -208.28910828]
[-119.83460236 -213.69531250]
[-105.41974640 -217.87782288]
[-90.69869995 -220.80566406]
[-75.78045654 -222.45716858]
[-60.77546692 -222.82009888]
[-45.79482651 -221.89178467]
[-30.94944382 -219.67907715]
[-16.34923172 -216.19837952]
[-2.10229087 -211.47543335]
[11.68590069 -205.54524231]
[24.91325760 -198.45169067]
[37.48184586 -190.24729919]
[49.29861450 -180.99282837]
[60.27607346 -170.75675964]
[70.33294678 -159.61491394]
[79.39476776 -147.64976501]
[87.39446259 -134.94990540]
[94.27278900 -121.60936737]
[99.97882843 -107.72691345]
[104.47032928 -93.40532684]
[107.71403503 -78.75064087]
[109.68594360 -63.87136078]
[110.37144470 -48.87764359]
[109.76546478 -33.88050461]
[107.87248993 -18.99097252]
[104.70653534 -4.31929350]
[100.29104614 10.02591038]
[94.65870667 23.93843079]
[87.85121918 37.31526184]
[79.91899109 50.05736160]
[70.92074585 62.07039642]
[82.10903931 72.06149292]
[93.29733276 82.05258942]
[121.27412415 82.21311188]
[136.21014404 80.82908630]
[151.14614868 79.44506073]
[166.08216858 78.06103516]
[180.98661804 76.37063599]
[195.85321045 74.37458038]
[210.71980286 72.37852478]
[218.15097046 58.88467026]
[231.94163513 52.42937851]
[246.71434021 55.29839325]
[256.84371948 66.18571472]
[271.71032715 64.18965912]
[286.57690430 62.19360352]
[301.44351196 60.19754791]
[316.31011963 58.20148849]
[328.95721436 47.76198959]
[344.22494507 53.74766922]
[346.40716553 70.00096893]
[333.25903320 79.80189514]
[318.30618286 73.06809235]
[303.43957520 75.06414795]
[288.57296753 77.06020355]
[273.70635986 79.05625916]
[258.83978271 81.05231476]
[251.94093323 94.22592163]
[238.44818115 100.88998413]
[223.44317627 98.30093384]
[212.71586609 87.24512482]
[197.84927368 89.24118042]
[182.98266602 91.23723602]
[179.39294434 94.47190094]
[173.71493530 95.44565582]
[167.46618652 92.99704742]
[152.53018188 94.38107300]
[137.59416199 95.76509857]
[122.65814972 97.14912415]
[136.42927551 103.09523010]
[151.39871216 102.13826752]
[165.14997864 108.13014221]
[174.64128113 119.74545288]
[177.77310181 134.41487122]
[173.85270691 148.89347839]
[163.74726868 159.97862244]
[149.69213867 165.21821594]
[134.79634094 163.45327759]
[122.35482788 155.07418823]
[115.11970520 141.93444824]
[114.69138336 126.94055939]
[107.50000000 113.77682495]
[107.50000000 128.77682495]
[107.50000000 143.77682495]
[107.50000000 158.77682495]
[107.50000000 173.77682495]
[107.50000000 188.77682495]
[107.50000000 203.77682495]
[107.50000000 218.77682495]
[107.50000000 233.77682495]
[107.50000000 248.77682495]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[18 94]
[19 93]
[20 92]
[95 130]
[96 129]
[97 128]
[98 127]
[99 124]
[100 123]
[101 122]
[105 118]
[106 117]
[107 116]
[108 115]
[109 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
