%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACCGAACCCCCUUCGACCUUGCCGAAGGGGAGUCCGAACUAGUCUCAGGCUUCAACAUCxxxxxxxxxxUCCUCACUCUCUCAAUCUUAUCCAUCAUAGCAGGCAGUUGAGGUGGAUUAAACCAAACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[111.94327545 318.22521973]
[111.94327545 303.22521973]
[111.94327545 288.22521973]
[111.94327545 273.22521973]
[111.94327545 258.22521973]
[111.94327545 243.22520447]
[111.94327545 228.22520447]
[111.94327545 213.22520447]
[111.94327545 198.22520447]
[111.94327545 183.22520447]
[110.23058319 168.32330322]
[106.82760620 153.71441650]
[103.27284241 139.14170837]
[99.56668091 124.60677338]
[95.86051941 110.07183838]
[93.41837311 110.73511505]
[90.68177795 110.84035492]
[76.35917664 115.29716492]
[62.08371735 119.90273285]
[47.85693741 124.65654755]
[33.63015747 129.41035461]
[19.40337944 134.16416931]
[5.17659998 138.91798401]
[-9.05017948 143.67179871]
[-23.27695847 148.42561340]
[-37.50373840 153.17942810]
[-43.07211685 167.79200745]
[-56.75561905 175.36140442]
[-72.09331512 172.31358337]
[-81.84320831 160.08764648]
[-81.40170288 144.45629883]
[-70.97726440 132.80018616]
[-55.49198532 130.62297058]
[-42.25755310 138.95265198]
[-28.03077316 134.19883728]
[-13.80399418 129.44502258]
[0.42278489 124.69120789]
[14.64956379 119.93739319]
[28.87634277 115.18357849]
[43.10312271 110.42976379]
[57.32990265 105.67594910]
[62.71199036 100.53992462]
[71.90235901 100.97457123]
[86.22496033 96.51775360]
[97.10378265 86.19055176]
[102.29920197 72.11902618]
[98.74376678 54.08187866]
[112.59986115 43.35768127]
[117.50141144 29.18112373]
[122.40296173 15.00456619]
[127.30451965 0.82800812]
[127.15684509 -8.37145042]
[132.45831299 -13.59065914]
[137.65373230 -27.66217804]
[142.84913635 -41.73369980]
[148.04455566 -55.80521774]
[147.13137817 -61.07643127]
[148.25976562 -65.68936157]
[150.82218933 -68.96589661]
[154.02798462 -70.57537079]
[160.09098816 -84.29542542]
[166.15400696 -98.01548004]
[153.32336426 -105.82762909]
[141.62222290 -115.24771881]
[131.25079346 -126.11457062]
[122.38654327 -138.24223328]
[115.18116760 -151.42318726]
[109.75794220 -165.43188477]
[106.20967865 -180.02862549]
[104.59709167 -194.96363831]
[104.94776154 -209.98136902]
[107.25569916 -224.82482910]
[111.48141479 -239.24003601]
[117.55258942 -252.98034668]
[125.36534882 -265.81060791]
[134.78599548 -277.51132202]
[145.65335083 -287.88223267]
[157.78143311 -296.74588013]
[170.96272278 -303.95065308]
[184.97167969 -309.37319946]
[199.56858826 -312.92077637]
[214.50367737 -314.53265381]
[229.52139282 -314.18124390]
[244.36474609 -311.87261963]
[258.77975464 -307.64620972]
[272.51977539 -301.57437134]
[285.34967041 -293.76101685]
[297.04992676 -284.33981323]
[307.42031860 -273.47195435]
[316.28338623 -261.34344482]
[323.48751831 -248.16181946]
[328.90942383 -234.15260315]
[332.45629883 -219.55552673]
[334.06744385 -204.62036133]
[333.71536255 -189.60266113]
[331.40600586 -174.75942993]
[327.17892456 -160.34461975]
[321.10641479 -146.60488892]
[313.29244995 -133.77536011]
[303.87069702 -122.07556152]
[293.00234985 -111.70568848]
[280.87341309 -102.84317780]
[267.69143677 -95.63967896]
[253.68196106 -90.21846008]
[239.08471680 -86.67227936]
[224.14947510 -85.06182098]
[209.13180542 -85.41463470]
[194.28866577 -87.72469330]
[179.87405396 -91.95246887]
[173.81105042 -78.23241425]
[167.74803162 -64.51235962]
[162.11607361 -50.60980225]
[156.92065430 -36.53828430]
[151.72525024 -22.46676254]
[146.52983093 -8.39524364]
[141.48107910 5.72955894]
[136.57952881 19.90611649]
[131.67797852 34.08267593]
[126.77642059 48.25923157]
[131.78796387 59.31327057]
[127.77057648 71.19096375]
[116.37071991 77.31444550]
[111.17530060 91.38596344]
[110.39545441 106.36567688]
[114.10161591 120.90061188]
[117.80777740 135.43554688]
[122.99219513 143.03645325]
[121.43650055 150.31143188]
[124.83947754 164.92033386]
[130.90075684 151.19950867]
[142.56375122 141.76689148]
[157.24873352 138.70886230]
[171.70750427 142.70185852]
[182.74191284 152.86265564]
[187.91127014 166.94377136]
[186.07214355 181.83059692]
[177.63133240 194.23030090]
[164.45588684 201.40019226]
[149.46006775 201.75434875]
[135.96081543 195.21444702]
[126.94327545 183.22520447]
[126.94327545 198.22520447]
[126.94327545 213.22520447]
[126.94327545 228.22520447]
[126.94327545 243.22520447]
[126.94327545 258.22521973]
[126.94327545 273.22521973]
[126.94327545 288.22521973]
[126.94327545 303.22521973]
[126.94327545 318.22521973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 129]
[12 128]
[13 126]
[14 125]
[15 124]
[17 44]
[18 43]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[45 123]
[46 122]
[48 119]
[49 118]
[50 117]
[51 116]
[53 115]
[54 114]
[55 113]
[56 112]
[60 111]
[61 110]
[62 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
