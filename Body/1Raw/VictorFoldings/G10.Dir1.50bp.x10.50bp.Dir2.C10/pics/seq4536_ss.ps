%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUUCUAGGACUAUGAGAAUCGAACCCAUCCCUGAGAAUCCAAAAUUCUCCGUGCCACCUAUxxxxxxxxxxUCCAAACAACAAUCCCCCUCUACCUAAAACUCACAGCCCUCGCUGUCACUUUCCUAGGACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[78.51109314 143.07078552]
[84.40019989 129.27519226]
[90.28930664 115.47959900]
[78.50716400 124.76298523]
[66.72502899 134.04637146]
[54.94289398 143.32975769]
[48.89174652 157.94804382]
[34.10622787 159.74739075]
[22.32409096 169.03077698]
[10.54195309 178.31416321]
[-1.24018383 187.59754944]
[-13.02232075 196.88093567]
[-24.41339493 206.64021301]
[-35.39419556 216.85891724]
[-46.37500000 227.07762146]
[-43.53822708 242.24192810]
[-49.37138748 256.52401733]
[-62.01313782 265.36648560]
[-77.42955017 265.94778442]
[-90.70129395 258.08239746]
[-97.59340668 244.28015137]
[-95.90663910 228.94526672]
[-86.17923737 216.97108459]
[-71.51518250 212.17849731]
[-56.59370804 216.09681702]
[-45.61290359 205.87811279]
[-34.63210297 195.65940857]
[-34.42756271 192.80473328]
[-33.04450226 189.86254883]
[-30.44499207 187.29559326]
[-26.76403046 185.57104492]
[-22.30570602 185.09880066]
[-10.52356911 175.81541443]
[1.25856781 166.53202820]
[13.04070473 157.24864197]
[24.82284164 147.96525574]
[30.03125000 134.01098633]
[45.65950775 131.54762268]
[57.44164658 122.26423645]
[69.22378540 112.98085022]
[81.00592041 103.69746399]
[84.12972260 101.99445343]
[87.38148499 100.72983551]
[74.39110565 93.22983551]
[61.40072250 85.72983551]
[48.41034317 78.22983551]
[35.41996002 70.72983551]
[22.42957878 63.22983170]
[6.62339640 65.97649384]
[-5.28293037 55.22386932]
[-4.15588665 39.22045135]
[9.13995647 30.24269676]
[24.40516472 35.17756653]
[29.92957878 50.23945236]
[42.91996002 57.73945236]
[55.91034317 65.23944855]
[68.90071869 72.73944855]
[81.89110565 80.23944855]
[94.88148499 87.73944855]
[87.07704163 74.92966461]
[74.78389740 66.33440399]
[63.52814102 56.41936493]
[53.45075607 45.30872726]
[44.67795181 33.14164352]
[37.31961060 20.07049942]
[31.46788406 6.25900698]
[27.19606590 -8.11985207]
[24.55765915 -22.88598824]
[23.58570671 -37.85446548]
[24.29238319 -52.83781052]
[26.66883659 -67.64836121]
[30.68530464 -82.10063171]
[36.29148102 -96.01360321]
[43.41715240 -109.21302795]
[51.97307205 -121.53358459]
[61.85208511 -132.82096863]
[72.93045807 -142.93382263]
[85.06943512 -151.74546814]
[98.11699677 -159.14555359]
[111.90971375 -165.04139709]
[126.27484131 -169.35914612]
[141.03247070 -172.04473877]
[155.99777222 -173.06452942]
[170.98329163 -172.40574646]
[185.80136108 -170.07664490]
[200.26638794 -166.10639954]
[214.19721985 -160.54472351]
[227.41934204 -153.46127319]
[239.76719666 -144.94477844]
[251.08610535 -135.10189819]
[261.23431396 -124.05590820]
[270.08471680 -111.94515228]
[277.52645874 -98.92131805]
[283.46636963 -85.14751434]
[287.83001709 -70.79625702]
[290.56274414 -56.04728699]
[291.63037109 -41.08532715]
[291.01950073 -26.09777260]
[288.73776245 -11.27233124]
[284.81378174 3.20531511]
[279.29666138 17.15384102]
[272.25549316 30.39854813]
[263.77853394 42.77355194]
[253.97186279 54.12386322]
[242.95837402 64.30731964]
[230.87596130 73.19638824]
[217.87597656 80.67973328]
[204.12123108 86.66362762]
[189.78399658 91.07312012]
[175.04383850 93.85299683]
[160.08537292 94.96843719]
[145.09594727 94.40547180]
[130.25839233 92.17012024]
[115.77755737 96.08235931]
[130.36131287 99.59152222]
[144.94505310 103.10069275]
[159.52880859 106.60986328]
[174.11254883 110.11902618]
[189.67680359 104.95314026]
[201.75126648 116.04995728]
[197.91476440 131.99403381]
[182.11398315 136.38345337]
[170.60339355 124.70277405]
[156.01963806 121.19361115]
[141.43589783 117.68444061]
[126.85214233 114.17527771]
[112.26839447 110.66610718]
[123.38445282 120.73751068]
[134.50050354 130.80891418]
[148.73930359 135.52664185]
[161.62710571 143.20156860]
[172.55845642 153.47315979]
[181.01982117 165.85885620]
[186.61367798 179.77677917]
[189.07725525 194.57308960]
[188.29481506 209.55267334]
[184.30308533 224.01177979]
[177.28962708 237.27117920]
[167.58390808 248.70791626]
[155.64190674 257.78472900]
[142.02462769 264.07516479]
[127.37181091 267.28375244]
[112.37182617 267.25973511]
[97.72937012 264.00421143]
[84.13231659 257.67016602]
[72.21944427 248.55516052]
[62.55041885 237.08738708]
[55.57946777 223.80558777]
[51.63409042 209.33375549]
[50.89963150 194.35174561]
[53.41059875 179.56341553]
[59.04902649 165.66348267]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 41]
[4 40]
[5 39]
[6 38]
[8 36]
[9 35]
[10 34]
[11 33]
[12 32]
[13 27]
[14 26]
[15 25]
[43 59]
[44 58]
[45 57]
[46 56]
[47 55]
[48 54]
[114 127]
[115 126]
[116 125]
[117 124]
[118 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
