%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUAGUCUCAGGCUUCAACAUCGAAUACGCCGCAGGCCCCUUCGCCCUAUUCUUCAUAGCCxxxxxxxxxxCCCAAUUAGGUCUCCACCCCUGACUCCCCUCAGCCAUAGAAGGCCCCACCCCAGUCUCAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-70.19536591 177.03855896]
[-84.09792328 182.67051697]
[-98.00047302 188.30247498]
[-107.88591003 200.65515137]
[-122.58709717 198.26257324]
[-136.36947632 204.18252563]
[-150.02571106 210.38793945]
[-163.68196106 216.59335327]
[-177.33819580 222.79875183]
[-186.70123291 235.55195618]
[-201.48921204 233.77299500]
[-215.14544678 239.97839355]
[-221.71574402 246.41914368]
[-229.15095520 246.16755676]
[-242.93333435 252.08752441]
[-245.48039246 255.78535461]
[-248.75860596 258.19873047]
[-252.26062012 259.25598145]
[-255.50968933 259.06231689]
[-258.11618042 257.87341309]
[-272.34298706 262.62722778]
[-286.56976318 267.38104248]
[-300.64126587 272.57647705]
[-314.54382324 278.20843506]
[-328.44638062 283.84039307]
[-334.37658691 298.48989868]
[-348.96102905 304.57836914]
[-363.54702759 298.49362183]
[-369.48095703 283.84561157]
[-363.24234009 269.32476807]
[-348.53240967 263.54602051]
[-334.07833862 269.93783569]
[-320.17578125 264.30587769]
[-306.27322388 258.67391968]
[-304.56451416 255.51991272]
[-301.20962524 253.06097412]
[-296.56372070 252.07707214]
[-291.32357788 253.15428162]
[-277.09680176 248.40046692]
[-262.86999512 243.64665222]
[-248.85330200 238.30513000]
[-235.07090759 232.38517761]
[-221.35086060 226.32215881]
[-207.69462585 220.11674500]
[-199.30838013 207.80740356]
[-183.54360962 209.14251709]
[-169.88735962 202.93710327]
[-156.23112488 196.73170471]
[-142.57489014 190.52629089]
[-140.07180786 186.38984680]
[-134.91325378 183.81678772]
[-128.21905518 184.36001587]
[-119.32801819 172.41017151]
[-103.63243103 174.39991760]
[-89.72987366 168.76795959]
[-75.82732391 163.13600159]
[-80.28729248 148.96829224]
[-83.60765076 134.49104309]
[-85.76741028 119.79577637]
[-86.75290680 104.97537231]
[-86.55792236 90.12351990]
[-85.18367767 75.33410645]
[-82.63887787 60.70059967]
[-78.93959045 46.31550980]
[-74.10921478 32.26976776]
[-68.17826843 18.65215302]
[-61.18425369 5.54874849]
[-53.17137527 -6.95762014]
[-44.19028091 -18.78789902]
[-34.29774857 -29.86730576]
[-23.55630493 -40.12580872]
[-12.03384781 -49.49855804]
[0.19678684 -57.92631531]
[13.05828762 -65.35580444]
[26.46935654 -71.74005890]
[40.34522247 -77.03872681]
[54.59817123 -81.21830750]
[69.13810730 -84.25239563]
[83.87313080 -86.12180328]
[98.71008301 -86.81472015]
[113.55519867 -86.32675171]
[128.31462097 -84.66099548]
[142.89508057 -81.82798004]
[157.20437622 -77.84561157]
[171.15208435 -72.73905945]
[184.65003967 -66.54060364]
[197.61291504 -59.28942871]
[209.95875549 -51.03136826]
[221.60954285 -41.81862259]
[231.82302856 -52.80428696]
[242.03649902 -63.78995132]
[245.17210388 -79.88653564]
[260.76583862 -84.96272278]
[272.77618408 -73.79656982]
[268.84796143 -57.87485123]
[253.02217102 -53.57647324]
[242.80868530 -42.59080887]
[232.59519958 -31.60514259]
[240.74031067 -22.85588074]
[248.30920410 -13.60362720]
[255.27088928 -3.88626075]
[261.59686279 6.25643396]
[267.26123047 16.78293037]
[272.24081421 27.65013313]
[276.51519775 38.81354523]
[280.06692505 50.22747040]
[282.88140869 61.84516907]
[284.94714355 73.61907959]
[286.25567627 85.50099945]
[286.80166626 97.44228363]
[286.58282471 109.39403534]
[285.60009766 121.30732727]
[283.85751343 133.13337708]
[298.50100708 136.38420105]
[313.14450073 139.63502502]
[326.33987427 130.93688965]
[341.80389404 134.19871521]
[350.36206055 147.48530579]
[346.93692017 162.91398621]
[333.56057739 171.33117676]
[318.16897583 167.74311829]
[309.89367676 154.27853394]
[295.25018311 151.02770996]
[280.60668945 147.77688599]
[275.72262573 163.42678833]
[269.48538208 178.58824158]
[261.94290161 193.14448547]
[253.15333557 206.98344421]
[243.18434143 219.99851990]
[232.11270142 232.08950806]
[220.02365112 243.16326904]
[207.01033020 253.13455200]
[193.17291260 261.92654419]
[178.61799622 269.47155762]
[163.45762634 275.71148682]
[147.80859375 280.59829712]
[131.79136658 284.09429932]
[115.52933502 286.17260742]
[99.14771271 286.81723022]
[82.77265167 286.02316284]
[66.53025055 283.79656982]
[50.54560471 280.15457153]
[34.94179916 275.12518311]
[19.83900642 268.74719238]
[5.35352468 261.06970215]
[-8.40309048 252.15180969]
[-21.32490158 242.06221008]
[-33.31239700 230.87860107]
[-44.27326202 218.68710327]
[-54.12309265 205.58160400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 56]
[2 55]
[3 54]
[5 52]
[6 49]
[7 48]
[8 47]
[9 46]
[11 44]
[12 43]
[14 42]
[15 41]
[20 40]
[21 39]
[22 38]
[23 34]
[24 33]
[25 32]
[89 98]
[90 97]
[91 96]
[113 124]
[114 123]
[115 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
