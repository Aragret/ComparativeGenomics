%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACUAUCAAACUCCUGAGCCAACAACUUAAUAUGACUAGCUUACACAAUAGCUUUUAUAGUxxxxxxxxxxCAUCAAAACCCCCUCCCCAUGCUUACAAGCAAGUACAGCAAUCAACCCUCAACUAUCACACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[88.10681152 102.31096649]
[74.81947327 95.35060883]
[61.53212738 88.39025116]
[48.24478531 81.42989349]
[34.95744705 74.46953583]
[21.67010307 67.50918579]
[8.38276291 60.54882812]
[-4.90457869 53.58847046]
[-18.19191933 46.62811661]
[-31.47926140 39.66775894]
[-39.45215225 52.38237000]
[-48.38636398 64.44090271]
[-58.22815704 75.77083588]
[-68.91834259 86.30403137]
[-80.39263916 95.97713470]
[-92.58201599 104.73197937]
[-105.41318512 112.51590729]
[-118.80896759 119.28209686]
[-132.68879700 124.98986816]
[-146.96919250 129.60488892]
[-161.56428528 133.09939575]
[-176.38629150 135.45237732]
[-191.34606934 136.64968872]
[-206.35363770 136.68412781]
[-221.31874084 135.55546570]
[-236.15138245 133.27052307]
[-250.76235962 129.84301758]
[-265.06378174 125.29357910]
[-278.96966553 119.64956665]
[-292.39636230 112.94490814]
[-305.26309204 105.21994781]
[-317.49252319 96.52112579]
[-329.01107788 86.90077209]
[-339.74948120 76.41674805]
[-349.64318848 65.13208771]
[-358.63262939 53.11468124]
[-366.66378784 40.43679047]
[-373.68832397 27.17466545]
[-379.66403198 13.40806866]
[-384.55496216 -0.78020626]
[-388.33169556 -15.30482769]
[-390.97152710 -30.07844162]
[-392.45855713 -45.01219940]
[-392.78384399 -60.01628113]
[-391.94543457 -75.00045013]
[-389.94842529 -89.87459564]
[-386.80474854 -104.54925537]
[-382.53332520 -118.93617249]
[-377.15991211 -132.94882202]
[-370.71673584 -146.50294495]
[-363.24261475 -159.51699829]
[-354.78244019 -171.91271973]
[-345.38714600 -183.61557007]
[-335.11322021 -194.55516052]
[-324.02243042 -204.66569519]
[-312.18151855 -213.88636780]
[-299.66165161 -222.16174316]
[-286.53817749 -229.44201660]
[-272.88998413 -235.68342590]
[-258.79916382 -240.84841919]
[-244.35046387 -244.90594482]
[-229.63079834 -247.83160400]
[-214.72866821 -249.60780334]
[-199.73370361 -250.22384644]
[-184.73609924 -249.67602539]
[-169.82604980 -247.96765137]
[-155.09321594 -245.10897827]
[-140.62620544 -241.11723328]
[-126.51203918 -236.01638794]
[-112.83559418 -229.83712769]
[-99.67912292 -222.61663818]
[-87.12175751 -214.39831543]
[-75.23900604 -205.23159790]
[-64.10234833 -195.17163086]
[-53.77875137 -184.27888489]
[-44.33031082 -172.61889648]
[-35.81385040 -160.26179504]
[-28.28058624 -147.28187561]
[-21.77582741 -133.75721741]
[-16.33869362 -119.76914978]
[-12.00188637 -105.40180969]
[-8.79148674 -90.74160767]
[-6.72680283 -75.87670135]
[-5.82025242 -60.89649963]
[-6.07728767 -45.89109039]
[-7.49636269 -30.95072556]
[-10.06894302 -16.16525459]
[-13.77955532 -1.62360144]
[-18.60588455 12.58677673]
[-24.51890564 26.38041687]
[-11.23156357 33.34077454]
[2.05577731 40.30112839]
[15.34311867 47.26148605]
[28.63046074 54.22184372]
[41.91780090 61.18219757]
[55.20514297 68.14255524]
[68.49248505 75.10291290]
[81.77982330 82.06326294]
[95.06716919 89.02362061]
[101.87157440 88.17086792]
[108.00305176 91.16787720]
[122.82553864 88.86699677]
[137.64802551 86.56612396]
[152.47050476 84.26525116]
[167.26858521 81.81232452]
[182.04069519 79.20759583]
[196.81280518 76.60287476]
[205.67134094 63.51463318]
[221.20564270 60.60584641]
[234.19949341 69.60224915]
[236.94387817 85.16643524]
[227.81059265 98.06444550]
[212.21826172 100.64412689]
[199.41754150 91.37499237]
[184.64541626 93.97971344]
[169.87330627 96.58443451]
[163.79470825 100.86963654]
[154.77137756 99.08773041]
[139.94889832 101.38860321]
[125.12641144 103.68948364]
[110.30393219 105.99035645]
[124.16532898 111.72285461]
[136.75933838 119.87091064]
[147.66946411 130.16505432]
[156.53486633 142.26483154]
[163.06236267 155.77008057]
[167.03605652 170.23416138]
[168.32455444 185.17872620]
[166.88523865 200.10951233]
[162.76570129 214.53273010]
[156.10217285 227.97138977]
[147.11506653 239.98103333]
[136.10156250 250.16450500]
[123.42591858 258.18496704]
[109.50734711 263.77722168]
[94.80615234 266.75631714]
[79.80853271 267.02368164]
[65.01049805 264.57052612]
[50.90143585 259.47793579]
[37.94796371 251.91435242]
[26.57848358 242.12992859]
[17.16900253 230.44825745]
[10.03070927 217.25564575]
[5.39968252 202.98843384]
[3.42907953 188.11843872]
[4.18407106 173.13745117]
[7.63968897 158.54092407]
[13.68164921 144.81158447]
[22.11013031 132.40348816]
[32.64638901 121.72701263]
[44.94197083 113.13523102]
[58.59023285 106.91229248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 99]
[2 98]
[3 97]
[4 96]
[5 95]
[6 94]
[7 93]
[8 92]
[9 91]
[10 90]
[101 121]
[102 120]
[103 119]
[104 118]
[105 116]
[106 115]
[107 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
