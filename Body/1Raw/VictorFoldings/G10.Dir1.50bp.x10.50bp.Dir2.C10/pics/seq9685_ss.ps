%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAGCCCUACUAGUCUCAAUCUCCAACACAUAUGGCCUAGACUACGUACAUAACCUAAACCUxxxxxxxxxxCGCCUUAGCAUGAUUUAUCCUACACUCCAACUCAUGAGACCCACAACAAAUAGCCCUUCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[113.56311035 252.94157410]
[113.56311035 237.94157410]
[113.56311035 222.94157410]
[113.56311035 207.94157410]
[113.56311035 192.94157410]
[113.56311035 177.94157410]
[113.56311035 162.94157410]
[113.56311035 147.94157410]
[113.56311035 132.94157410]
[113.56311035 117.94158173]
[99.36535645 113.10176086]
[90.20342255 124.97858429]
[81.04148865 136.85540771]
[81.66038513 152.88652039]
[69.41900635 163.25610352]
[53.70789337 160.00950623]
[46.57926559 145.63723755]
[53.50159454 131.16445923]
[69.16466522 127.69347382]
[78.32659912 115.81665039]
[87.48853302 103.93982697]
[90.84779358 89.32082367]
[87.78939819 74.63592529]
[84.73100281 59.95102692]
[81.67260742 45.26612854]
[78.61421204 30.58123016]
[75.55581665 15.89633274]
[60.68727875 17.92395210]
[45.71351624 18.90945053]
[30.70748520 18.84802628]
[15.74229336 17.73997879]
[0.89085072 15.59070587]
[-13.77448845 12.41068077]
[-28.18227386 8.21539497]
[-42.26231384 3.02528811]
[-55.94601059 -3.13435435]
[-69.16669464 -10.23352337]
[-81.85996246 -18.23763084]
[-93.96396637 -27.10768127]
[-105.41973877 -36.80046463]
[-116.17147064 -47.26874924]
[-126.16677094 -58.46154404]
[-135.35694885 -70.32431030]
[-143.69723511 -82.79926300]
[-151.14700317 -95.82561493]
[-157.66993713 -109.33990479]
[-163.23426819 -123.27629089]
[-167.81288147 -137.56687927]
[-171.38348389 -152.14204407]
[-173.92866516 -166.93078613]
[-175.43603516 -181.86103821]
[-175.89825439 -196.86007690]
[-175.31304932 -211.85482788]
[-173.68328857 -226.77221680]
[-171.01690674 -241.53958130]
[-167.32690430 -256.08499146]
[-162.63124084 -270.33755493]
[-156.95280457 -284.22784424]
[-150.31927490 -297.68817139]
[-142.76293945 -310.65298462]
[-134.32061768 -323.05911255]
[-125.03346252 -334.84613037]
[-114.94670868 -345.95657349]
[-104.10948944 -356.33633423]
[-92.57461548 -365.93484497]
[-80.39827728 -374.70532227]
[-67.63979340 -382.60507202]
[-54.36133575 -389.59558105]
[-40.62758636 -395.64279175]
[-26.50545692 -400.71728516]
[-12.06375122 -404.79425049]
[2.62717342 -407.85391235]
[17.49574280 -409.88131714]
[32.46951675 -410.86660767]
[47.47554779 -410.80496216]
[62.44072342 -409.69668579]
[77.29213715 -407.54721069]
[91.95742798 -404.36697388]
[106.36515808 -400.17147827]
[120.44512177 -394.98117065]
[134.12872314 -388.82135010]
[147.34931946 -381.72198486]
[160.04246521 -373.71768188]
[172.14634705 -364.84747314]
[183.60197449 -355.15451050]
[194.35354614 -344.68609619]
[204.34869385 -333.49313354]
[213.53871155 -321.63024902]
[221.87881470 -309.15518188]
[229.32838440 -296.12872314]
[235.85113525 -282.61434937]
[241.41526794 -268.67785645]
[245.99368286 -254.38720703]
[249.56407166 -239.81199646]
[252.10903931 -225.02320862]
[253.61619568 -210.09294128]
[254.07818604 -195.09390259]
[253.49278259 -180.09916687]
[251.86280823 -165.18179321]
[249.19621277 -150.41445923]
[245.50599670 -135.86912537]
[240.81013489 -121.61662292]
[235.13150024 -107.72641754]
[228.49777222 -94.26616669]
[220.94125366 -81.30146027]
[212.49876404 -68.89544678]
[203.21142578 -57.10857773]
[193.12451172 -45.99827576]
[182.28715515 -35.61866760]
[170.75213623 -26.02032471]
[158.57566833 -17.25000954]
[145.81707764 -9.35044765]
[132.53851318 -2.36012864]
[118.80467987 3.68689275]
[104.68247986 8.76115513]
[90.24071503 12.83793736]
[93.29911041 27.52283478]
[96.35750580 42.20773315]
[99.41590118 56.89263153]
[102.47429657 71.57752991]
[105.53269196 86.26242828]
[103.09918976 71.46114349]
[104.47573853 56.52443695]
[109.57341003 42.41721344]
[118.06291199 30.05079269]
[129.39581299 20.22402954]
[142.84002686 13.57172871]
[157.52706909 10.52362442]
[172.50816345 11.27662086]
[186.81552124 15.78207588]
[199.52493286 23.74893951]
[209.81536865 34.66255951]
[217.02206421 47.81792068]
[220.67947388 62.36520004]
[220.55133057 77.36465454]
[216.64591980 91.84732819]
[209.21553040 104.87764740]
[198.74015808 115.61386871]
[185.89649963 123.36244202]
[171.51423645 127.62280273]
[156.52247620 128.11975098]
[141.88964844 124.82117462]
[128.56311035 117.94158173]
[128.56311035 132.94157410]
[128.56311035 147.94157410]
[128.56311035 162.94157410]
[128.56311035 177.94157410]
[128.56311035 192.94157410]
[128.56311035 207.94157410]
[128.56311035 222.94157410]
[128.56311035 237.94157410]
[128.56311035 252.94157410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 21]
[12 20]
[13 19]
[22 121]
[23 120]
[24 119]
[25 118]
[26 117]
[27 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
