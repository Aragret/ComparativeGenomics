%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUUGGCCAUAAUAUGAUUUAUCUCCACACUAGCAGAGACCAACCGAACCCCCUUCGACCxxxxxxxxxxCACAGAACUAAUCAUAUUUUAUAUCUUCUUCGAAACCACACUUAUCCCCACCUUGGCUAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[212.12307739 508.26699829]
[212.12307739 493.26699829]
[212.12307739 478.26699829]
[212.12307739 463.26699829]
[212.12307739 448.26699829]
[212.12307739 433.26699829]
[212.12307739 418.26699829]
[212.12307739 403.26699829]
[212.12307739 388.26699829]
[212.12307739 373.26699829]
[193.61059570 362.35690308]
[185.21618652 342.43710327]
[190.39764404 321.31903076]
[207.25610352 307.38342285]
[205.07926941 292.54223633]
[202.90243530 277.70101929]
[190.83731079 269.04260254]
[188.41825867 254.02252197]
[197.58181763 241.42620850]
[195.40498352 226.58500671]
[189.48501587 212.80262756]
[180.22007751 201.00598145]
[170.95512390 189.20935059]
[161.69017029 177.41270447]
[152.42521667 165.61605835]
[143.16027832 153.81942749]
[133.89532471 142.02278137]
[124.63037109 130.22615051]
[115.36542511 118.42950439]
[103.76408386 108.92114258]
[95.59834290 127.55606079]
[69.72076416 134.79893494]
[54.81885910 133.08624268]
[39.91695786 131.37355042]
[25.01505470 129.66085815]
[15.93168736 142.04585266]
[1.86631119 148.21519470]
[-13.39755821 146.50936890]
[-25.75401688 137.38722229]
[-31.87924004 123.30258179]
[-30.12557220 108.04412842]
[-20.96474075 95.71632385]
[-6.86096621 89.63528442]
[8.39190960 91.43676758]
[20.69093895 100.63619995]
[26.72774506 114.75896454]
[41.62964630 116.47165680]
[56.53154755 118.18434143]
[71.43344879 119.89703369]
[75.29549408 113.46783447]
[60.67955780 110.09523010]
[59.37054443 95.15245819]
[73.17746735 89.28996277]
[83.01957703 100.60942841]
[86.88162231 94.18022919]
[78.37052917 81.82865143]
[69.85944366 69.47708130]
[61.34835052 57.12551117]
[45.89421844 52.81862259]
[39.75886917 37.99509048]
[47.64882278 24.02626038]
[63.51158142 21.62782478]
[75.17858887 32.63965607]
[73.69992065 48.61442184]
[82.21101379 60.96599197]
[90.72210693 73.31756592]
[99.23319244 85.66913605]
[110.53219604 95.53485870]
[102.59712982 82.80557251]
[98.31723785 68.42911530]
[97.99827576 53.43251038]
[101.66301727 38.88707733]
[109.04966736 25.83190918]
[119.63054657 15.19964314]
[132.64976501 7.74982309]
[147.17727661 4.01464701]
[162.17524719 4.26094866]
[176.57228088 8.47113228]
[189.33985901 16.34443092]
[199.56591797 27.31839561]
[206.51989746 40.60906982]
[209.70506287 55.26699448]
[208.89384460 70.24504089]
[204.14419556 84.47321320]
[195.79542542 96.93508148]
[184.44396973 106.74039459]
[170.90071106 113.18868256]
[156.13319397 115.81929779]
[141.19633484 114.44431305]
[127.16206360 109.16455841]
[136.42701721 120.96119690]
[145.69197083 132.75782776]
[154.95690918 144.55447388]
[164.22186279 156.35112000]
[173.48681641 168.14775085]
[182.75175476 179.94439697]
[192.01670837 191.74102783]
[201.28166199 203.53767395]
[199.51316833 188.64228821]
[201.16206360 173.73320007]
[206.14279175 159.58425903]
[214.19677734 146.92988586]
[224.90600586 136.42691040]
[237.71459961 128.62051392]
[251.95771790 123.91587067]
[266.89605713 122.55718994]
[281.75424194 124.61499023]
[295.76101685 129.98246765]
[308.18939209 138.38101196]
[318.39425659 149.37469482]
[325.84588623 162.39288330]
[330.15750122 176.75985718]
[331.10534668 191.72987366]
[328.64019775 206.52592468]
[322.89001465 220.38000488]
[314.15325928 232.57298279]
[302.88342285 242.47201538]
[289.66546631 249.56324768]
[275.18548584 253.47862244]
[260.19506836 254.01492310]
[245.47232056 251.14427185]
[231.78141785 245.01571655]
[219.83300781 235.94732666]
[210.24618530 224.40817261]
[212.42301941 239.24937439]
[224.81791687 248.68359375]
[226.81411743 263.76568604]
[217.74363708 275.52420044]
[219.92047119 290.36538696]
[222.09732056 305.20660400]
[230.90586853 307.07128906]
[238.92597961 311.12109375]
[245.62709045 317.07717896]
[250.56869507 324.53488159]
[253.42935181 332.99130249]
[254.02752686 341.87924194]
[252.33309937 350.60516357]
[248.46870422 358.58883667]
[242.70097351 365.30197144]
[235.42205811 370.30322266]
[227.12307739 373.26699829]
[227.12307739 388.26699829]
[227.12307739 403.26699829]
[227.12307739 418.26699829]
[227.12307739 433.26699829]
[227.12307739 448.26699829]
[227.12307739 463.26699829]
[227.12307739 478.26699829]
[227.12307739 493.26699829]
[227.12307739 508.26699829]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[14 130]
[15 129]
[16 128]
[19 125]
[20 124]
[21 98]
[22 97]
[23 96]
[24 95]
[25 94]
[26 93]
[27 92]
[28 91]
[29 90]
[30 68]
[32 49]
[33 48]
[34 47]
[35 46]
[55 67]
[56 66]
[57 65]
[58 64]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
