%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAAUAAUAACAAUUGAAUGUCUGCACAGCCACUUUCCACACAGACAUCAUAACAAAAAAUxxxxxxxxxxAUUUAGCUGUUCCCCAACCUUUUCCUCCGACCCCCUAACAACCCCCCUCCUAAUACUAACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[280.39569092 379.56076050]
[273.48867798 366.24560547]
[266.58169556 352.93045044]
[259.67468262 339.61529541]
[252.76770020 326.30014038]
[245.86070251 312.98498535]
[238.00326538 300.20764160]
[229.23706055 288.03579712]
[220.47085571 275.86395264]
[211.70465088 263.69213867]
[202.93844604 251.52029419]
[188.63160706 257.39132690]
[173.32911682 259.68426514]
[157.91246033 258.26281738]
[143.27075195 253.20480347]
[130.24935913 244.79785156]
[119.60118866 233.52311707]
[111.94306183 220.02769470]
[107.72005463 205.08747864]
[107.17960358 189.56257629]
[110.35701752 174.34780884]
[117.07318878 160.32109070]
[126.94470978 148.29278564]
[117.92717743 136.30595398]
[108.90964508 124.31912994]
[86.43292999 122.06210327]
[74.27704620 103.02183533]
[59.51099396 100.38297272]
[44.74493790 97.74411011]
[29.97888184 95.10524750]
[15.21282578 92.46637726]
[0.44677004 89.82751465]
[-14.31928539 87.18865204]
[-21.66015434 100.43215179]
[-32.90510559 110.57265472]
[-46.83436584 116.51020050]
[-61.93700027 117.60071564]
[-76.57478333 113.72591400]
[-89.15991211 105.30610657]
[-98.32726288 93.25461578]
[-103.08241272 78.87868500]
[-102.90956879 63.73772049]
[-97.82746887 49.47409439]
[-88.38739777 37.63502121]
[-75.61333466 29.50470924]
[-60.89090729 25.96507835]
[-45.81710815 27.40008163]
[-32.02701950 33.65406036]
[-21.01649475 44.04862595]
[-13.97986698 57.45625687]
[-11.68042088 72.42259979]
[3.08563423 75.06146240]
[17.85169029 77.70032501]
[32.61774445 80.33918762]
[47.38380051 82.97805023]
[62.14985657 85.61692047]
[76.91590881 88.25578308]
[79.81914520 83.76624298]
[83.58233643 79.96847534]
[88.04512787 77.02429962]
[93.01734924 75.05918121]
[93.32940674 60.06242752]
[93.64146423 45.06567383]
[93.95352173 30.06892014]
[81.62367249 17.70315170]
[82.01174927 0.58200955]
[94.39250946 -10.75706673]
[94.39250946 -25.75706673]
[94.39250946 -40.75706863]
[94.39250946 -55.75706863]
[81.05138397 -63.36692047]
[73.31641388 -76.63590240]
[73.26827240 -91.99472046]
[80.91990662 -105.31192780]
[94.21306610 -113.00526428]
[109.57195282 -113.00526428]
[122.86511230 -105.31192780]
[130.51675415 -91.99472046]
[130.46861267 -76.63590240]
[122.73363495 -63.36692047]
[109.39250946 -55.75706863]
[109.39250946 -40.75706863]
[109.39250946 -25.75706673]
[109.39250946 -10.75706673]
[119.71348572 -2.98055267]
[123.71146393 9.51306820]
[119.70533752 22.20869446]
[108.95027161 30.38097763]
[108.63821411 45.37773132]
[108.32616425 60.37448502]
[108.01410675 75.37123871]
[118.33693695 81.70906067]
[124.64881134 92.04777527]
[125.56909180 104.12593079]
[120.89647675 115.30159760]
[129.91401672 127.28842926]
[138.93153381 139.27526855]
[152.27500916 133.41145325]
[166.58399963 130.67906189]
[181.13420105 131.21299744]
[195.18989563 134.98286438]
[208.04109192 141.79476929]
[219.03942871 151.30123901]
[227.63087463 163.01893616]
[233.38363647 176.35327148]
[236.00988770 190.62852478]
[235.38008118 205.12213135]
[231.52946472 219.10125732]
[224.65599060 231.85978699]
[215.11027527 242.75408936]
[223.87648010 254.92591858]
[232.64268494 267.09774780]
[241.40890503 279.26959229]
[250.17510986 291.44143677]
[252.97319031 276.70471191]
[264.47766113 267.07937622]
[279.47686768 266.92578125]
[291.17602539 276.31347656]
[294.27532959 290.98980713]
[287.37072754 304.30621338]
[273.59008789 310.23022461]
[259.17584229 306.07800293]
[266.08285522 319.39315796]
[272.98983765 332.70831299]
[279.89685059 346.02346802]
[286.80383301 359.33862305]
[293.71084595 372.65377808]
[308.36322021 369.10815430]
[323.43832397 369.17279053]
[338.05975342 372.84396362]
[351.37741089 379.90820312]
[362.61703491 389.95480347]
[371.12515259 402.39968872]
[376.40713501 416.51934814]
[378.15585327 431.49282837]
[376.26971436 446.44961548]
[370.85830688 460.52017212]
[362.23626709 472.88641357]
[350.90484619 482.82937622]
[337.52288818 489.77105713]
[322.86837769 493.30780029]
[307.79330444 493.23400879]
[293.17410278 489.55398560]
[279.86074829 482.48165894]
[268.62722778 472.42822266]
[260.12664795 459.97817993]
[254.85322571 445.85534668]
[253.11357117 430.88079834]
[255.00878906 415.92514038]
[260.42874146 401.85791016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 127]
[2 126]
[3 125]
[4 124]
[5 123]
[6 122]
[7 114]
[8 113]
[9 112]
[10 111]
[11 110]
[23 97]
[24 96]
[25 95]
[27 57]
[28 56]
[29 55]
[30 54]
[31 53]
[32 52]
[33 51]
[61 91]
[62 90]
[63 89]
[64 88]
[67 84]
[68 83]
[69 82]
[70 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
