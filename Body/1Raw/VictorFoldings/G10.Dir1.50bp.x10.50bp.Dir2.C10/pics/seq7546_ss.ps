%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUUUUCCUAACACUCACAACAAAACUAACUAAUACUAACAUCUCAGACGCUCAGGAAAUxxxxxxxxxxUGAAUCAUCCGCUACCUUCACGCCAAUGGCGCCUCAAUAUUCUUUAUCUGCCUCUUCCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[107.09722900 294.63595581]
[107.09722900 279.63595581]
[107.09722900 264.63595581]
[107.09722900 249.63597107]
[107.09722900 234.63597107]
[107.09722900 219.63597107]
[107.09722900 204.63597107]
[107.09722900 189.63597107]
[107.09722900 174.63597107]
[107.09722900 159.63597107]
[82.31560516 155.65605164]
[62.00342178 142.13801575]
[49.50477600 122.00238800]
[46.58428955 99.18897247]
[31.76652908 96.85787201]
[16.94877243 94.52676392]
[2.13101363 92.19566345]
[-12.68674469 89.86456299]
[-27.50450325 87.53345490]
[-31.83694649 101.91899109]
[-38.08793259 115.58058167]
[-46.14101028 128.26370239]
[-55.84615326 139.73210144]
[-67.02256012 149.77209473]
[-79.46202850 158.19667053]
[-92.93280792 164.84887695]
[-107.18394470 169.60479736]
[-121.94996643 172.37580872]
[-136.95578003 173.11030579]
[-151.92182922 171.79458618]
[-166.56930542 168.45318604]
[-180.62535095 163.14834595]
[-193.82810974 155.97888184]
[-205.93159485 147.07836914]
[-216.71035767 136.61262512]
[-225.96357727 124.77658844]
[-233.51889038 111.79078674]
[-239.23551941 97.89712524]
[-243.00698853 83.35443115]
[-244.76303101 68.43363953]
[-244.47093201 53.41270828]
[-242.13613892 38.57146454]
[-237.80213928 24.18639565]
[-231.54966736 10.52548790]
[-223.49522400 -2.15676761]
[-213.78883362 -13.62410641]
[-202.61134338 -23.66289902]
[-190.17095947 -32.08613205]
[-176.69946289 -38.73687744]
[-162.44781494 -43.49124527]
[-147.68148804 -46.26066208]
[-132.67559814 -46.99353027]
[-117.70969391 -45.67620087]
[-103.06257629 -42.33321762]
[-89.00710297 -37.02685547]
[-75.80513000 -29.85596466]
[-63.70259857 -20.95414162]
[-52.92496872 -10.48721790]
[-43.67302704 1.34981382]
[-36.11912918 14.33643627]
[-30.40399551 28.23071671]
[-26.63409996 42.77381134]
[-24.87967300 57.69479752]
[-25.17339897 72.71569824]
[-10.35564041 75.04679871]
[4.46211767 77.37790680]
[19.27987480 79.70900726]
[34.09763336 82.04011536]
[48.91539001 84.37121582]
[51.57179642 76.62129974]
[55.40439224 69.31945801]
[60.33805084 62.64422989]
[66.27053070 56.76161575]
[73.07458496 51.82097626]
[80.60065460 47.95123291]
[88.68014526 45.25757980]
[97.12920380 43.81864929]
[105.75289917 43.68432999]
[114.34970856 44.87421799]
[122.71624756 47.37677002]
[130.65205383 51.14920044]
[139.41825867 38.97736359]
[148.18446350 26.80552864]
[156.95068359 14.63369083]
[149.61688232 1.24794805]
[148.82577515 -13.99465466]
[154.73446655 -28.06768608]
[166.16975403 -38.17693710]
[180.86116028 -42.31520844]
[195.89169312 -39.66084290]
[208.27703857 -30.74086380]
[215.55807495 -17.32634544]
[216.28913879 -2.08074594]
[210.32508850 11.96890831]
[198.85006714 22.03304863]
[184.14248657 26.11343384]
[169.12251282 23.39989853]
[160.35630798 35.57173538]
[151.59010315 47.74357224]
[142.82389832 59.91540909]
[151.59010315 72.08724213]
[165.91268921 67.63043213]
[180.23529053 63.17361450]
[194.55789185 58.71679688]
[207.88522339 48.23737335]
[221.64448547 58.14287949]
[215.93502808 74.10654449]
[199.01470947 73.03939819]
[184.69210815 77.49620819]
[170.36950684 81.95302582]
[156.04692078 86.40984344]
[158.18696594 96.93782806]
[158.34616089 107.79015350]
[156.47842407 118.59358978]
[152.60806274 128.96911621]
[166.51062012 134.60107422]
[180.47100830 140.08810425]
[194.48773193 145.42962646]
[208.50444031 150.77113342]
[223.67372131 145.54882812]
[237.13676453 154.27384949]
[238.56587219 170.25312805]
[226.86476135 181.22871399]
[211.00950623 178.78108215]
[203.16293335 164.78784180]
[189.14620972 159.44633484]
[175.12950134 154.10482788]
[167.71119690 154.66548157]
[160.87866211 148.50363159]
[146.97610474 142.87167358]
[140.75639343 147.06274414]
[150.25692749 158.67050171]
[159.75746155 170.27824402]
[172.18260193 178.68156433]
[172.16984558 193.68156433]
[159.73040771 202.06370544]
[145.82304382 196.44361877]
[142.69972229 181.77236938]
[135.50833130 168.60862732]
[128.31695557 155.44488525]
[122.09722900 159.63597107]
[122.09722900 174.63597107]
[122.09722900 189.63597107]
[122.09722900 204.63597107]
[122.09722900 219.63597107]
[122.09722900 234.63597107]
[122.09722900 249.63597107]
[122.09722900 264.63595581]
[122.09722900 279.63595581]
[122.09722900 294.63595581]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[14 69]
[15 68]
[16 67]
[17 66]
[18 65]
[19 64]
[81 100]
[82 99]
[83 98]
[84 97]
[101 111]
[102 110]
[103 109]
[104 108]
[115 130]
[116 129]
[117 127]
[118 126]
[119 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
