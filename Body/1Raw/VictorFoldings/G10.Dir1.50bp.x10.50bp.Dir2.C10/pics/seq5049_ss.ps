%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUGCUUCUUCUCACAUGACAAAAACUAGCCCCCAUCUCAAUCAUAUACCAAAUCUCUCCCxxxxxxxxxxUUCUCCCGCCGCCGGGAAAAAAGGCGGGAGAAGCCCCGGCAGGUUUGAAGCUGCUUCUUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[80.54817200 529.94757080]
[80.54817200 514.94757080]
[80.54817200 499.94757080]
[80.54817200 484.94757080]
[80.54817200 469.94757080]
[80.54817200 454.94757080]
[80.54817200 439.94757080]
[80.54817200 424.94757080]
[80.54817200 409.94757080]
[80.54817200 394.94757080]
[63.74913788 388.74081421]
[50.55316162 376.58340454]
[42.96480560 360.28741455]
[42.15001678 342.29608154]
[48.25704575 325.31765747]
[60.39028168 311.91760254]
[76.74150085 304.13110352]
[75.49462891 289.18301392]
[74.24774933 274.23492432]
[73.00087738 259.28683472]
[64.65194702 271.74859619]
[51.25196457 278.48956299]
[36.26948166 277.76483154]
[23.58266640 269.76205444]
[16.47546005 256.55267334]
[16.78754425 241.55592346]
[24.43813515 228.65365601]
[37.44689941 221.18559265]
[52.44655991 221.08480835]
[65.55450439 228.37739563]
[73.37773895 241.17559814]
[75.24535370 226.29231262]
[77.11296844 211.40904236]
[71.02051544 197.81744385]
[80.41583252 185.08801270]
[82.28344727 170.20472717]
[79.98072815 163.13061523]
[84.34785461 155.03245544]
[86.52469635 140.19125366]
[88.70153046 125.35005188]
[78.22319794 119.42476654]
[70.80596924 109.19808960]
[68.18633270 96.23074341]
[71.31659698 82.76414490]
[57.53421783 76.84418488]
[41.32142258 79.30938721]
[31.29281616 66.33406067]
[37.76497269 51.26610565]
[54.07989120 49.60614395]
[63.45418167 63.06180191]
[77.23656464 68.98176575]
[90.82751465 62.63463593]
[79.58354950 72.56304169]
[66.55039978 79.98847961]
[52.27639008 84.59853363]
[37.36204529 86.19925690]
[22.43483734 84.72330475]
[8.12277412 80.23278046]
[-4.97201395 72.91659546]
[-16.29860878 63.08256149]
[-25.38048363 51.14440536]
[-31.83555031 37.60438538]
[-35.39223480 23.03215218]
[-35.90090179 8.04077911]
[-33.34015274 -6.73902273]
[-27.81771660 -20.68544579]
[-19.56593704 -33.21174240]
[-8.93197536 -43.79091644]
[3.63678026 -51.97787857]
[17.61154366 -57.42819595]
[32.40437698 -59.91256714]
[47.39292145 -59.32646561]
[61.94659042 -55.69455338]
[75.45308685 -49.16962814]
[87.34416199 -40.02620697]
[97.11956024 -28.64896393]
[104.36800385 -15.51655865]
[108.78453827 -1.18148983]
[110.18335724 13.75314426]
[108.50561523 28.65902138]
[103.81945801 42.91445541]
[115.32126617 33.28593063]
[126.82306671 23.65740204]
[138.32487488 14.02887630]
[149.82667542 4.40035057]
[161.32847595 -5.22817612]
[172.83027649 -14.85670185]
[184.33209229 -24.48522758]
[195.83389282 -34.11375427]
[207.33569336 -43.74227905]
[203.53659058 -58.52502441]
[206.53611755 -73.49050140]
[215.73873901 -85.66731262]
[229.31724548 -92.63773346]
[244.57563782 -93.01778412]
[258.48431396 -86.73200226]
[268.28173828 -75.02845001]
[272.02261353 -60.23085403]
[268.96417236 -45.27730560]
[259.71368408 -33.13683319]
[246.10781860 -26.21994019]
[230.84805298 -25.89997864]
[216.96421814 -32.24047852]
[205.46241760 -22.61195183]
[193.96061707 -12.98342514]
[182.45880127 -3.35489869]
[170.95700073 6.27362776]
[159.45520020 15.90215397]
[147.95339966 25.53067970]
[136.45159912 35.15920639]
[124.94979095 44.78773117]
[113.44799042 54.41625977]
[105.19570160 66.94222260]
[121.49248505 75.85951996]
[130.03491211 91.62866974]
[128.69869995 108.86870575]
[118.60499573 122.10938263]
[103.54273224 127.52688599]
[101.36589813 142.36808777]
[99.18906403 157.20928955]
[97.16672516 172.07234192]
[95.29911041 186.95562744]
[101.25798035 201.61177063]
[91.99624634 213.27664185]
[90.12863159 228.15992737]
[88.26101685 243.04321289]
[87.94896698 258.03994751]
[89.19583893 272.98803711]
[90.44271088 287.93612671]
[91.68959045 302.88421631]
[103.68196869 305.49438477]
[114.56684113 311.13302612]
[123.59538269 319.40377808]
[130.14869690 329.72946167]
[133.78024292 341.39236450]
[134.24624634 353.58419800]
[131.52201843 365.46206665]
[125.80323029 376.20669556]
[117.49176788 385.07907104]
[107.16757202 391.47116089]
[95.54817200 394.94757080]
[95.54817200 409.94757080]
[95.54817200 424.94757080]
[95.54817200 439.94757080]
[95.54817200 454.94757080]
[95.54817200 469.94757080]
[95.54817200 484.94757080]
[95.54817200 499.94757080]
[95.54817200 514.94757080]
[95.54817200 529.94757080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[17 130]
[18 129]
[19 128]
[20 127]
[31 126]
[32 125]
[33 124]
[35 122]
[36 121]
[38 120]
[39 119]
[40 118]
[44 51]
[45 50]
[52 113]
[81 112]
[82 111]
[83 110]
[84 109]
[85 108]
[86 107]
[87 106]
[88 105]
[89 104]
[90 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
