%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCCAACACAUAUGGCCUAGACUACGUACAUAACCUAAACCUACUCCAAUGCUAAAACUAAxxxxxxxxxxCAUCCGCUACCUUCACGCCAAUGGCGCCUCAAUAUUCUUUAUCUGCCUCUUCCUACACAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 303.76593018]
[92.50000000 288.76593018]
[92.50000000 273.76593018]
[92.50000000 258.76593018]
[92.50000000 243.76591492]
[92.50000000 228.76591492]
[92.50000000 213.76591492]
[92.50000000 198.76591492]
[92.50000000 183.76591492]
[92.50000000 168.76591492]
[77.45497894 165.39666748]
[63.52992630 158.77870178]
[51.41659927 149.24078369]
[41.71675110 137.25674438]
[34.91223526 123.42189026]
[31.34108543 108.42350769]
[31.18070412 93.00667572]
[34.43906021 77.93724823]
[40.95428467 63.96383286]
[50.40272141 51.78058243]
[62.31500244 41.99273300]
[76.09936523 35.08650589]
[91.07103729 31.40498734]
[90.75897980 16.40823364]
[90.44692230 1.41148067]
[87.30582428 -4.52493477]
[87.63413239 -10.28023815]
[90.44692230 -14.21263218]
[90.75897980 -29.20938492]
[91.07103729 -44.20613861]
[76.12380219 -45.53022766]
[61.30006027 -47.86038589]
[46.66744614 -51.18597794]
[32.29272842 -55.49183273]
[18.24149132 -60.75830078]
[4.57784986 -66.96134949]
[-8.63585091 -74.07268524]
[-21.33931923 -82.05985260]
[-33.47459030 -90.88640594]
[-44.98629761 -100.51208496]
[-55.82191086 -110.89295197]
[-65.93199158 -121.98164368]
[-75.27040863 -133.72758484]
[-83.79455566 -146.07714844]
[-91.46553040 -158.97401428]
[-98.24834442 -172.35931396]
[-104.11203766 -186.17199707]
[-109.02986145 -200.34901428]
[-112.97937012 -214.82569885]
[-115.94255066 -229.53598022]
[-117.90587616 -244.41275024]
[-118.86039734 -259.38812256]
[-118.80174255 -274.39376831]
[-117.73020172 -289.36123657]
[-115.65064240 -304.22219849]
[-112.57257080 -318.90887451]
[-108.51001740 -333.35424805]
[-103.48152924 -347.49240112]
[-97.51004791 -361.25881958]
[-90.62281036 -374.59069824]
[-82.85125732 -387.42718506]
[-74.23084259 -399.70974731]
[-64.80089569 -411.38232422]
[-54.60444260 -422.39166260]
[-43.68801498 -432.68753052]
[-32.10141754 -442.22290039]
[-19.89752197 -450.95434570]
[-7.13200808 -458.84194946]
[6.13687611 -465.84979248]
[19.84858704 -471.94586182]
[33.94056320 -477.10232544]
[48.34849930 -481.29568481]
[63.00666046 -484.50680542]
[77.84816742 -486.72100830]
[92.80529022 -487.92822266]
[107.80979156 -488.12292480]
[122.79320526 -487.30422974]
[137.68716431 -485.47586060]
[152.42370605 -482.64617920]
[166.93560791 -478.82809448]
[181.15663147 -474.03900146]
[195.02191162 -468.30081177]
[208.46817017 -461.63961792]
[221.43405151 -454.08590698]
[233.86039734 -445.67407227]
[245.69052124 -436.44253540]
[256.87042236 -426.43341064]
[267.34912109 -415.69238281]
[277.07876587 -404.26840210]
[286.01498413 -392.21368408]
[294.11700439 -379.58312988]
[301.34786987 -366.43447876]
[307.67453003 -352.82763672]
[313.06820679 -338.82470703]
[317.50421143 -324.48962402]
[320.96234131 -309.88778687]
[323.42681885 -295.08575439]
[324.88635254 -280.15115356]
[325.33435059 -265.15206909]
[324.76873779 -250.15698242]
[323.19210815 -235.23428345]
[320.61163330 -220.45205688]
[317.03909302 -205.87776184]
[312.49078369 -191.57791138]
[306.98748779 -177.61773682]
[300.55426025 -164.06092834]
[293.22052002 -150.96936035]
[285.01968384 -138.40277100]
[275.98919678 -126.41847992]
[266.17025757 -115.07118225]
[255.60765076 -104.41264343]
[244.34959412 -94.49150848]
[232.44743347 -85.35303497]
[219.95549011 -77.03893280]
[206.93077087 -69.58712006]
[193.43269348 -63.03161240]
[179.52284241 -57.40231705]
[165.26467896 -52.72491837]
[150.72329712 -49.02075958]
[135.96499634 -46.30673981]
[121.05715942 -44.59524536]
[106.06778717 -43.89408112]
[105.75572968 -28.89732933]
[105.44367218 -13.90057564]
[105.44367218 1.09942448]
[105.75572968 16.09617805]
[106.06778717 31.09293175]
[120.32305145 33.87908173]
[133.68225098 39.58056641]
[145.55638123 47.94600296]
[155.42187500 58.60654449]
[162.84376526 71.09216309]
[167.49482727 84.85235596]
[169.16996765 99.28042603]
[167.79534912 113.74021912]
[163.43156433 127.59419250]
[156.27101135 140.23150635]
[146.62944031 151.09498596]
[134.93191528 159.70564270]
[121.69421387 165.68380737]
[107.50000000 168.76591492]
[107.50000000 183.76591492]
[107.50000000 198.76591492]
[107.50000000 213.76591492]
[107.50000000 228.76591492]
[107.50000000 243.76591492]
[107.50000000 258.76593018]
[107.50000000 273.76593018]
[107.50000000 288.76593018]
[107.50000000 303.76593018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[23 127]
[24 126]
[25 125]
[28 124]
[29 123]
[30 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
