%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACAUUCUCCUCCGCAUAAGCCUGCGUCAGAUUAAAACACUGAACUGACAAUUAACAGCCCxxxxxxxxxxCCUUACCCCCCACUAUUAACCUACUGGGAGAACUCUCUGUGCUAGUAACCACGUUCUCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[177.06535339 359.98971558]
[177.06535339 344.98971558]
[177.06535339 329.98971558]
[177.06535339 314.98971558]
[177.06535339 299.98971558]
[177.06535339 284.98971558]
[177.06535339 269.98971558]
[177.06535339 254.98973083]
[177.06535339 239.98973083]
[177.06535339 224.98973083]
[173.96702576 210.31320190]
[167.90402222 196.59315491]
[161.84100342 182.87309265]
[155.07289124 169.48681641]
[147.61798096 156.47050476]
[140.16307068 143.45419312]
[132.70816040 130.43788147]
[125.25325012 117.42156982]
[117.79833984 104.40526581]
[110.63304901 113.66680145]
[99.90590668 116.29628754]
[90.48031616 111.94848633]
[76.57775879 117.58043671]
[62.67520142 123.21239471]
[48.77264404 128.84436035]
[42.84244537 143.49386597]
[28.25800133 149.58233643]
[13.67200375 143.49758911]
[7.73806524 128.84959412]
[13.97668839 114.32874298]
[28.68660736 108.55000305]
[43.14068985 114.94179535]
[57.04324341 109.30983734]
[70.94580078 103.67788696]
[84.84835815 98.04592896]
[93.44799805 84.52349854]
[110.97318268 85.31066895]
[108.48806763 70.51795959]
[106.00295258 55.72525406]
[91.02957916 56.79433060]
[76.02238464 56.43524170]
[61.11728287 54.65123749]
[46.44925690 51.45847321]
[32.15114594 46.88586426]
[18.35243416 40.97482681]
[5.17809534 33.77888870]
[-7.25256348 25.36322021]
[-18.82696342 15.80403614]
[-29.44028473 5.18790817]
[-38.99641037 -6.38901949]
[-47.40879059 -18.82190323]
[-54.60124588 -31.99814415]
[-60.50863647 -45.79841614]
[-65.07746124 -60.09773636]
[-68.26634216 -74.76660919]
[-70.04640961 -89.67218018]
[-70.40152740 -104.67946625]
[-69.32849884 -119.65255737]
[-66.83702087 -134.45584106]
[-62.94966888 -148.95526123]
[-57.70164490 -163.01951599]
[-51.14048004 -176.52120972]
[-43.32558823 -189.33808899]
[-34.32775116 -201.35406494]
[-24.22845459 -212.46031189]
[-13.11915970 -222.55627441]
[-1.10047722 -231.55049133]
[11.71874809 -239.36152649]
[25.22241974 -245.91862488]
[39.28824234 -251.16241455]
[53.78883362 -255.04541016]
[68.59287262 -257.53244019]
[83.56627655 -258.60095215]
[98.57345581 -258.24133301]
[113.47850037 -256.45678711]
[128.14640808 -253.26347351]
[142.44435120 -248.69035339]
[156.24284363 -242.77880859]
[169.41693115 -235.58239746]
[181.84727478 -227.16627502]
[193.42132568 -217.60665894]
[204.03425598 -206.99014282]
[213.58996582 -195.41287231]
[222.00189209 -182.97967529]
[229.19386292 -169.80317688]
[235.10075378 -156.00268555]
[239.66905212 -141.70320129]
[242.85740662 -127.03421783]
[244.63693237 -112.12857819]
[244.99150085 -97.12127686]
[243.91792297 -82.14823151]
[241.42590332 -67.34503174]
[237.53802490 -52.84575272]
[232.28948975 -38.78170013]
[225.72782898 -25.28023911]
[217.91247559 -12.46364975]
[208.91419983 -0.44800186]
[198.81449890 10.65788746]
[187.70483398 20.75343704]
[175.68582153 29.74722099]
[162.86631775 37.55778503]
[149.36241150 44.11439514]
[135.29638672 49.35767365]
[120.79565430 53.24013519]
[123.28077698 68.03284454]
[125.76589203 82.82555389]
[130.81465149 96.95035553]
[138.26956177 109.96665955]
[145.72447205 122.98297119]
[153.17938232 135.99928284]
[160.63429260 149.01559448]
[168.08920288 162.03190613]
[174.81604004 148.62483215]
[189.44668579 145.31660461]
[201.28730774 154.52526855]
[201.68338013 169.52003479]
[190.34541321 179.34094238]
[175.56106567 176.81008911]
[181.62406921 190.53013611]
[187.68708801 204.25018311]
[189.64306641 189.37826538]
[195.63658142 175.62771606]
[205.19990540 164.07164001]
[217.58668518 155.61187744]
[231.83027649 150.90864563]
[246.81906128 150.32899475]
[261.38333130 153.91815186]
[274.38647461 161.39601135]
[284.81369019 172.17900085]
[291.85128784 185.42561340]
[294.94995117 200.10205078]
[293.86795044 215.06297302]
[288.68969727 229.14082336]
[279.81927490 241.23692322]
[267.94897461 250.40730286]
[254.00514221 255.93629456]
[239.07598877 257.39242554]
[224.32658386 254.66201782]
[210.90798950 247.95820618]
[199.86740112 237.80412292]
[192.06535339 224.98973083]
[192.06535339 239.98973083]
[192.06535339 254.98973083]
[192.06535339 269.98971558]
[192.06535339 284.98971558]
[192.06535339 299.98971558]
[192.06535339 314.98971558]
[192.06535339 329.98971558]
[192.06535339 344.98971558]
[192.06535339 359.98971558]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 120]
[12 119]
[13 118]
[14 112]
[15 111]
[16 110]
[17 109]
[18 108]
[19 107]
[22 35]
[23 34]
[24 33]
[25 32]
[37 106]
[38 105]
[39 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
