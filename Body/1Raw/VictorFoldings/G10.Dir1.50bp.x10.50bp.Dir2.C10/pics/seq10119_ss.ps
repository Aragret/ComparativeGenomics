%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACUCACUCUCACUGCCCAAGAACUAUCAAACUCCUGAGCCAACAACUUAAUAUGACUAGCUxxxxxxxxxxCUUGCCGCAGUACUCUUAAAACUAGGCGGCUAUGGUAUAAUACGCCUCACACUCAUUCUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 326.67654419]
[92.50000000 311.67654419]
[92.50000000 296.67654419]
[92.50000000 281.67654419]
[92.50000000 266.67654419]
[92.50000000 251.67654419]
[92.50000000 236.67654419]
[92.50000000 221.67654419]
[92.50000000 206.67654419]
[92.50000000 191.67654419]
[74.78173065 188.45832825]
[58.03005219 181.84962463]
[42.88703156 172.10371399]
[29.93307877 159.59416199]
[19.66470909 144.80043030]
[12.47549629 128.28956604]
[8.64099312 110.69438171]
[8.30817032 92.68929291]
[11.48978710 74.96442413]
[18.06389427 58.19913101]
[27.77851486 43.03601837]
[16.79771233 32.81731415]
[5.81690979 22.59860611]
[-5.16389275 12.37989902]
[-16.14469528 2.16119146]
[-34.15933990 -1.51349032]
[-38.70975113 -18.43502235]
[-49.89804840 -28.42612076]
[-61.08634567 -38.41721725]
[-72.27464294 -48.40831375]
[-83.53160858 -38.46763611]
[-95.88529968 -29.92815781]
[-109.16229248 -22.90976334]
[-123.17619324 -17.51098061]
[-137.73027039 -13.80759907]
[-152.62022400 -11.85160828]
[-167.63699341 -11.67046738]
[-182.56979370 -13.26671886]
[-197.20896912 -16.61795425]
[-211.34902954 -21.67712784]
[-224.79144287 -28.37321663]
[-237.34753418 -36.61221695]
[-248.84100342 -46.27846909]
[-259.11053467 -57.23627090]
[-268.01190186 -69.33179474]
[-275.42019653 -82.39523315]
[-281.23141479 -96.24319458]
[-285.36395264 -110.68128967]
[-287.75982666 -125.50681305]
[-288.38534546 -140.51164246]
[-287.23178101 -155.48515320]
[-284.31533813 -170.21710205]
[-279.67691040 -184.50070190]
[-273.38162231 -198.13543701]
[-265.51788330 -210.92988586]
[-256.19604492 -222.70443726]
[-245.54701233 -233.29377747]
[-233.72026062 -242.54928589]
[-220.88182068 -250.34100342]
[-207.21192932 -256.55953979]
[-192.90248108 -261.11761475]
[-178.15437317 -263.95126343]
[-163.17462158 -265.02062988]
[-148.17353821 -264.31079102]
[-133.36170959 -261.83163452]
[-118.94707489 -257.61801147]
[-105.13198853 -251.72906494]
[-92.11038971 -244.24746704]
[-80.06508636 -235.27822876]
[-69.16517639 -224.94729614]
[-59.56367493 -213.39967346]
[-51.39537430 -200.79748535]
[-44.77494049 -187.31764221]
[-39.79531479 -173.14938354]
[-36.52640915 -158.49159241]
[-35.01410675 -143.55006409]
[-35.27964401 -128.53454590]
[-37.31929016 -113.65583038]
[-41.10440826 -99.12278748]
[-46.58186722 -85.13945007]
[-53.67477036 -71.90211487]
[-62.28354263 -59.59661102]
[-51.09524918 -49.60551453]
[-39.90695190 -39.61441803]
[-28.71865463 -29.62331963]
[-16.58882332 -29.98303413]
[-7.18060446 -21.69709587]
[-5.92598820 -8.81961155]
[5.05481434 1.39909613]
[16.03561592 11.61780357]
[27.01641846 21.83650970]
[37.99722290 32.05521774]
[50.92789841 22.20046997]
[65.39160156 14.77619648]
[80.93647766 10.01433468]
[97.07689667 8.06364441]
[113.30863953 8.98506737]
[129.12461853 12.74981689]
[144.03073120 19.24028206]
[157.56132507 28.25369835]
[169.29368591 39.50848770]
[178.86129761 52.65304184]
[185.96525574 67.27672577]
[190.38365173 82.92269135]
[191.97842407 99.10216522]
[206.93971252 100.17922974]
[221.90098572 101.25630188]
[236.86227417 102.33337402]
[251.82354736 103.41043854]
[258.60278320 89.80491638]
[270.07589722 79.83312225]
[284.49325562 75.01569366]
[299.65637207 76.08724213]
[313.25299072 82.88437653]
[323.20965576 94.37057495]
[328.00811768 108.79428101]
[326.91662598 123.95597839]
[320.10162354 137.54362488]
[308.60232544 147.48518372]
[294.17233276 152.26467896]
[279.01208496 151.15322876]
[265.43341064 144.32035828]
[255.50698853 132.80799866]
[250.74649048 118.37171936]
[235.78520203 117.29465485]
[220.82392883 116.21758270]
[205.86264038 115.14051056]
[190.90136719 114.06344604]
[189.29060364 122.09133911]
[186.97230530 129.94419861]
[183.96487427 137.55978394]
[180.29212952 144.87774658]
[175.98316956 151.84010315]
[171.07212830 158.39170837]
[165.59793091 164.48062134]
[159.60394287 170.05860901]
[153.13766479 175.08146667]
[146.25035095 179.50938416]
[138.99655151 183.30729675]
[131.43376160 186.44511414]
[123.62188721 188.89794922]
[115.62284088 190.64637756]
[107.50000000 191.67654419]
[107.50000000 206.67654419]
[107.50000000 221.67654419]
[107.50000000 236.67654419]
[107.50000000 251.67654419]
[107.50000000 266.67654419]
[107.50000000 281.67654419]
[107.50000000 296.67654419]
[107.50000000 311.67654419]
[107.50000000 326.67654419]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[21 92]
[22 91]
[23 90]
[24 89]
[25 88]
[27 85]
[28 84]
[29 83]
[30 82]
[105 128]
[106 127]
[107 126]
[108 125]
[109 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
