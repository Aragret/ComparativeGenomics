%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAAAACAGAUGCAAUUCCCGGACGUCUAAACCAAACCACUUUCACCGCUACACGACCGGGxxxxxxxxxxAAAACUAAUCGUCCCAACAAUUAUAUUACUACCACUGACAUGACUUUCCAAAAAACACAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[138.37295532 366.85430908]
[137.74897766 351.86730957]
[137.12500000 336.88027954]
[136.50102234 321.89328003]
[135.87704468 306.90625000]
[135.25306702 291.91925049]
[134.62908936 276.93222046]
[134.00511169 261.94522095]
[131.67401123 247.12744141]
[127.66626740 232.67276001]
[123.65853119 218.21807861]
[119.65078735 203.76338196]
[115.64305115 189.30870056]
[102.59376526 182.21984863]
[98.32343292 167.61782837]
[105.84734344 153.97860718]
[101.83960724 139.52391052]
[98.14241791 136.40841675]
[96.40229034 130.91267395]
[97.97924042 124.38421631]
[94.57626343 109.77532196]
[91.02149963 95.20262146]
[87.31533813 80.66768646]
[81.53907013 66.82447052]
[73.81497955 53.96606445]
[66.09089661 41.10766220]
[54.99958420 31.00901222]
[41.47539139 24.52084732]
[27.95120239 18.03268242]
[14.42701244 11.54451752]
[0.90282267 5.05635262]
[-14.88631248 6.06321430]
[-23.01465607 -6.41794300]
[-36.53884506 -12.90610790]
[-50.06303787 -19.39427376]
[-59.43295670 -7.59798717]
[-71.19319916 1.81713092]
[-84.75387573 8.37882328]
[-99.43478394 11.75795746]
[-114.49954987 11.78503799]
[-129.19252014 8.45870686]
[-142.77668762 1.94581091]
[-154.57070923 -7.42696571]
[-163.98297119 -19.18948936]
[-170.54138184 -32.75175476]
[-173.91696167 -47.43348312]
[-173.94038391 -62.49825287]
[-170.61050415 -77.19041443]
[-164.09431458 -90.77301025]
[-154.71867371 -102.56475830]
[-142.95387268 -111.97417450]
[-129.39001465 -118.52929688]
[-114.70747375 -121.90131378]
[-99.64270020 -121.92109680]
[-84.95134735 -118.58764648]
[-71.37032318 -112.06816101]
[-59.58085251 -102.68967438]
[-50.17428589 -90.92259216]
[-43.62245178 -77.35714722]
[-40.25399017 -62.67378235]
[-40.23786163 -47.60900879]
[-43.57487106 -32.91846466]
[-30.05068207 -26.43029785]
[-16.52649117 -19.94213295]
[-1.70469689 -21.41307068]
[7.39098787 -8.46783733]
[20.91517830 -1.97967207]
[34.43936920 4.50849295]
[47.96355820 10.99665833]
[61.48774719 17.48482323]
[53.42735291 4.83452511]
[48.11758041 -9.19424152]
[45.78181458 -24.01126480]
[46.51832962 -38.99317169]
[50.29613876 -53.50965118]
[56.95630264 -66.94997406]
[66.21862030 -78.74868011]
[77.69340515 -88.40938568]
[90.89790344 -95.52565002]
[105.27658081 -99.79808044]
[120.22450256 -101.04692078]
[135.11279297 -99.21965027]
[149.31506348 -94.39312744]
[162.23382568 -86.77041626]
[173.32554626 -76.67221832]
[182.12359619 -64.52337646]
[188.25782776 -50.83501053]
[191.47015381 -36.18301773]
[191.62542725 -21.18382072]
[188.71711731 -6.46846151]
[182.86759949 7.34396172]
[174.32295227 19.67234039]
[163.44265747 29.99800110]
[150.68447876 37.88652802]
[136.58515930 43.00603867]
[121.73789215 45.14114761]
[106.76732635 44.20202637]
[92.30327606 40.22818756]
[78.94930267 33.38357925]
[86.67338562 46.24198151]
[94.39746857 59.10038376]
[95.10643005 44.11714554]
[101.39840698 30.50057411]
[112.34951782 20.25005150]
[126.35175323 14.87071228]
[141.34910583 15.15243149]
[155.13945007 21.05384064]
[165.69786072 31.70841026]
[171.47401428 45.55167770]
[171.61976624 60.55096817]
[166.11372375 74.50386810]
[155.76434326 85.36160278]
[142.09129333 91.52988434]
[127.10224915 92.10298920]
[112.99811554 86.99677277]
[101.85027313 76.96152496]
[105.55643463 91.49645996]
[110.47100830 97.95641327]
[109.18515778 106.37234497]
[112.58813477 120.98123932]
[116.29429626 135.51617432]
[120.30203247 149.97085571]
[133.77510071 157.78842163]
[137.63360596 172.50462341]
[130.09773254 185.30094910]
[134.10548401 199.75564575]
[138.11322021 214.21032715]
[142.12095642 228.66502380]
[146.12869263 243.11970520]
[151.61396790 229.15863037]
[162.87449646 219.24900818]
[177.41954041 215.58276367]
[192.03190613 218.97082520]
[203.47944641 228.66381836]
[209.23007202 242.51770020]
[208.01181030 257.46813965]
[200.09411621 270.20825195]
[187.22831726 277.92001343]
[172.26020813 278.89767456]
[158.50061035 272.92495728]
[148.99212646 261.32122803]
[149.61610413 276.30825806]
[150.24008179 291.29525757]
[150.86405945 306.28228760]
[151.48803711 321.26928711]
[152.11201477 336.25631714]
[152.73599243 351.24331665]
[153.35997009 366.23034668]
[160.05996704 381.80426025]
[146.94943237 392.55368042]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 129]
[10 128]
[11 127]
[12 126]
[13 125]
[16 122]
[17 121]
[20 120]
[21 119]
[22 117]
[23 116]
[24 101]
[25 100]
[26 99]
[27 70]
[28 69]
[29 68]
[30 67]
[31 66]
[33 64]
[34 63]
[35 62]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
