%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCAAACCCCCCCUCCCCCGCUUCUGGCCACAGCACUUAAACACAUCUCUGCCAAACCCCAxxxxxxxxxxCCCCAAAAUUCAGAAUAAUAACACACCCGACCACACCGCUAACAAUCAAUACUAAACCCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-21.99888611 285.32357788]
[-30.66549492 297.56652832]
[-39.33209991 309.80947876]
[-47.99871063 322.05242920]
[-56.66531754 334.29537964]
[-65.20577240 346.62667847]
[-73.61918640 359.04498291]
[-82.03259277 371.46331787]
[-90.44600677 383.88162231]
[-98.85941315 396.29992676]
[-93.45577240 410.84573364]
[-97.66635895 425.78060913]
[-109.87210846 435.36181641]
[-125.37966919 435.90515137]
[-138.22605896 427.20172119]
[-143.47158813 412.59814453]
[-139.09924316 397.70983887]
[-126.79027557 388.26159668]
[-111.27773285 387.88653564]
[-102.86431885 375.46820068]
[-94.45091248 363.04989624]
[-86.03749847 350.63159180]
[-77.62409210 338.21325684]
[-76.46897125 330.86630249]
[-68.90827179 325.62878418]
[-60.24166107 313.38583374]
[-51.57505417 301.14288330]
[-42.90844727 288.89993286]
[-34.24184036 276.65698242]
[-63.62328339 249.85319519]
[-87.74752045 218.23463440]
[-105.83943176 182.81718445]
[-117.31772614 144.73884583]
[-121.81360626 105.22303772]
[-136.81282043 105.06903839]
[-151.81202698 104.91503906]
[-165.82405090 113.43534088]
[-180.07696533 105.32445526]
[-179.90859985 88.92617035]
[-165.49215698 81.10963440]
[-151.65803528 89.91583252]
[-136.65882874 90.06982422]
[-121.65961456 90.22382355]
[-120.94942474 79.75376892]
[-119.74495697 69.32899475]
[-118.04891968 58.97284317]
[-115.86508942 48.70846558]
[-113.19835663 38.55883026]
[-110.05469513 28.54664421]
[-106.44113159 18.69430161]
[-102.36574554 9.02384281]
[-97.83766174 -0.44309825]
[-92.86701202 -9.68534374]
[-87.46489716 -18.68221664]
[-81.64342499 -27.41359329]
[-75.41560364 -35.85993958]
[-68.79537201 -44.00236130]
[-61.79753494 -51.82264328]
[-54.43775177 -59.30329132]
[-46.73248291 -66.42757416]
[-38.69896698 -73.17954254]
[-30.35517502 -79.54410553]
[-21.71977234 -85.50701904]
[-12.81207752 -91.05494690]
[-3.65201735 -96.17547607]
[5.73991728 -100.85714722]
[15.34271622 -105.08950043]
[25.13489723 -108.86305237]
[35.09455490 -112.16936493]
[45.19940948 -115.00105286]
[55.42685318 -117.35176849]
[65.75401306 -119.21626282]
[76.15778351 -120.59035492]
[86.61488342 -121.47098541]
[97.10192871 -121.85617065]
[107.59545898 -121.74504852]
[118.07199860 -121.13787842]
[128.50810242 -120.03601074]
[138.88044739 -118.44190979]
[149.16580200 -116.35914612]
[159.34117126 -113.79238129]
[169.38380432 -110.74735260]
[179.27120972 -107.23086548]
[188.98129272 -103.25080109]
[198.49230957 -98.81605530]
[207.78300476 -93.93654633]
[216.83256531 -88.62319183]
[225.62078857 -82.88787842]
[234.12797546 -76.74343872]
[242.33512878 -70.20361328]
[250.22386169 -63.28303528]
[257.77655029 -55.99718475]
[264.97625732 -48.36236572]
[271.80691528 -40.39564896]
[278.25323486 -32.11486435]
[284.30081177 -23.53853035]
[289.93609619 -14.68583584]
[295.14645386 -5.57658339]
[299.92028809 3.76884794]
[304.24688721 13.32955265]
[308.11657715 23.08414459]
[311.52069092 33.01079941]
[314.45162964 43.08731079]
[316.90283203 53.29114151]
[318.86880493 63.59946060]
[320.34518433 73.98921204]
[321.32861328 84.43714142]
[321.81692505 94.91989136]
[321.80902100 105.41400909]
[321.30493164 115.89601135]
[320.30575562 126.34246063]
[318.81378174 136.72996521]
[316.83227539 147.03532410]
[314.36572266 157.23544312]
[311.41961670 167.30754089]
[308.00054932 177.22904968]
[304.11618042 186.97781372]
[299.77520752 196.53199768]
[294.98730469 205.87022400]
[289.76321411 214.97161865]
[284.11462402 223.81582642]
[278.05416870 232.38304138]
[271.59539795 240.65411377]
[264.75274658 248.61054993]
[257.54153442 256.23452759]
[249.97789001 263.50900269]
[242.07875061 270.41769409]
[233.86177063 276.94512939]
[225.34533691 283.07678223]
[216.54849243 288.79885864]
[207.49093628 294.09857178]
[198.19291687 298.96408081]
[188.67523193 303.38452148]
[178.95916748 307.34997559]
[169.06648254 310.85156250]
[159.01928711 313.88146973]
[148.84005737 316.43292236]
[138.55157471 318.50018311]
[128.17684937 320.07867432]
[117.73908997 321.16482544]
[107.26165009 321.75622559]
[96.76796722 321.85156250]
[86.28150940 321.45059204]
[75.82574463 320.55422974]
[65.42405701 319.16445923]
[55.09971619 317.28442383]
[44.87582016 314.91830444]
[34.77524185 312.07141113]
[24.82057190 308.75012207]
[15.03408146 304.96182251]
[5.43766499 300.71502686]
[-3.94721174 296.01922607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[3 27]
[4 26]
[5 25]
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[34 43]
[35 42]
[36 41]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
