%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAUUUACAGUAGGAAUAGACGUAGACACACGAGCAUAUUUCACCUCCGCUACCAUAAUCAxxxxxxxxxxAGCUAACUUAGCAUUAACCUUUUAAGUUAAAGAUUAAGAGAACCAACACCUCUUUACAGUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[110.00292206 459.98190308]
[110.00292206 444.98190308]
[110.00292206 429.98190308]
[110.00292206 414.98190308]
[110.00292206 399.98190308]
[110.00292206 384.98190308]
[110.00292206 369.98190308]
[110.00292206 354.98190308]
[110.00292206 339.98190308]
[110.00292206 324.98190308]
[92.91401672 320.04116821]
[78.12052155 310.13244629]
[67.02685547 296.18429565]
[60.68986893 279.50939941]
[59.71817780 261.68084717]
[64.21369934 244.38395691]
[73.76108551 229.25679016]
[87.46606445 217.73507690]
[104.03920746 210.91598511]
[102.48162842 195.99707031]
[93.46456909 184.14202881]
[99.72705078 169.61303711]
[98.16947174 154.69412231]
[87.29283905 153.83909607]
[76.68671417 150.81965637]
[66.78194427 145.71037292]
[57.99021530 138.67158508]
[50.68699265 129.94464111]
[45.19559860 119.84383392]
[41.77309036 108.74514008]
[26.83878326 110.14744568]
[11.90447521 111.54974365]
[2.01712775 123.87921906]
[-13.70144558 125.52299500]
[-25.92569542 115.50584412]
[-27.40318871 99.77076721]
[-17.25735664 87.65310669]
[-1.50754154 86.34205627]
[10.50217152 96.61544037]
[25.43647957 95.21313477]
[40.37078857 93.81082916]
[43.77376556 79.20194244]
[30.99640846 71.34451294]
[18.21904945 63.48708725]
[5.67895365 72.12802887]
[-9.29277134 74.91502380]
[-24.10218430 71.36520386]
[-36.18346024 62.09360123]
[-43.44345093 48.70657730]
[-44.62431717 33.52351379]
[-39.52146530 19.17496681]
[-29.01899529 8.14690971]
[-14.93652534 2.35002112]
[0.28607294 2.78864646]
[14.01139164 9.38679123]
[23.86143684 21.00128555]
[28.12962914 35.61985016]
[26.07647514 50.70972824]
[38.85383224 58.56715775]
[51.63119125 66.42458344]
[63.77668762 54.63978577]
[78.57853699 46.94336700]
[94.73008728 43.85997009]
[110.84873962 45.51375961]
[125.59420013 51.62919998]
[134.36041260 39.45736313]
[143.12661743 27.28552628]
[151.89282227 15.11368942]
[160.65902710 2.94185257]
[147.31997681 9.80257797]
[132.33331299 10.43504906]
[118.46363831 4.72259617]
[108.26948547 -6.28100634]
[103.63137054 -20.54592514]
[105.40489197 -35.44071198]
[113.26287079 -48.21772385]
[125.75576782 -56.51998901]
[140.57901001 -58.81599045]
[154.99813843 -54.68218231]
[166.35328674 -44.88113022]
[172.54975891 -31.22083092]
[172.44517517 -16.22418404]
[179.35217285 -29.53933907]
[186.25917053 -42.85449600]
[193.16616821 -56.16965103]
[195.09236145 -73.01382446]
[211.81147766 -75.82583618]
[219.14190674 -60.53854752]
[206.48132324 -49.26265335]
[199.57432556 -35.94749451]
[192.66732788 -22.63234138]
[185.76033020 -9.31718445]
[191.03596497 -3.98637176]
[206.86289978 12.00606728]
[220.24919128 5.23795271]
[233.63548279 -1.53016186]
[247.02175903 -8.29827690]
[260.40805054 -15.06639099]
[263.79687500 -30.33236313]
[276.23703003 -39.80741119]
[291.85464478 -39.01770782]
[303.27560425 -28.33612633]
[305.10720825 -12.80618286]
[296.48468018 0.23935831]
[281.47930908 4.64079094]
[267.17614746 -1.68010652]
[253.78987122 5.08800840]
[240.40359497 11.85612297]
[227.01730347 18.62423706]
[213.63102722 25.39235306]
[187.34761047 25.62582397]
[172.83087158 11.70806026]
[164.06466675 23.87989616]
[155.29844666 36.05173492]
[146.53224182 48.22357178]
[137.76603699 60.39540863]
[147.92901611 73.58774567]
[153.65367126 89.22590637]
[154.40989685 105.86177063]
[150.12767029 121.95481873]
[141.20352173 136.01481628]
[128.46385193 146.73977661]
[113.08838654 153.13653564]
[114.64596558 168.05545044]
[123.77442932 180.97758484]
[117.40054321 194.43948364]
[118.95812225 209.35839844]
[131.25743103 211.02139282]
[142.91894531 215.24809265]
[153.41500854 221.84396362]
[162.27146912 230.50730896]
[169.08895874 240.84315491]
[173.56101990 252.38119507]
[175.48780823 264.59719849]
[174.78504944 276.93685913]
[171.48771667 288.84094238]
[165.74832153 299.77053833]
[157.82980347 309.23165894]
[148.09355164 316.79733276]
[136.98291016 322.12701416]
[125.00292206 324.98190308]
[125.00292206 339.98190308]
[125.00292206 354.98190308]
[125.00292206 369.98190308]
[125.00292206 384.98190308]
[125.00292206 399.98190308]
[125.00292206 414.98190308]
[125.00292206 429.98190308]
[125.00292206 444.98190308]
[125.00292206 459.98190308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[19 127]
[20 126]
[22 124]
[23 123]
[30 41]
[31 40]
[32 39]
[42 60]
[43 59]
[44 58]
[65 116]
[66 115]
[67 114]
[68 113]
[69 112]
[82 92]
[83 91]
[84 90]
[85 89]
[94 110]
[95 109]
[96 108]
[97 107]
[98 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
