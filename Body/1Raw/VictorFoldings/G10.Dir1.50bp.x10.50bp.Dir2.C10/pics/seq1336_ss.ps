%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAUAGCUAAGACCCAAACUGGGAUUAGAUACCCCACUAUGCUUAGCCCUAAACCUCAACAxxxxxxxxxxAGACCAAGAGCCUUCAAAGCCCUCAGUAAGUUGCAAUACUUAAUUUCUGUAACAGCUAAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[96.47245026 270.94537354]
[96.47245026 255.94538879]
[96.47245026 240.94538879]
[96.47245026 225.94538879]
[96.47245026 210.94538879]
[96.47245026 195.94538879]
[96.47245026 180.94538879]
[96.47245026 165.94538879]
[96.47245026 150.94538879]
[96.47245026 135.94538879]
[75.20545197 121.68494415]
[70.25824738 98.93529510]
[55.93564606 103.39210510]
[41.61304855 107.84892273]
[27.29045296 112.30574036]
[13.38789654 117.93769836]
[0.00161125 124.70581055]
[-13.38467407 131.47392273]
[-26.77095795 138.24203491]
[-31.55276680 150.26652527]
[-42.89407730 155.61383057]
[-54.44803619 151.89720154]
[-67.97222900 158.38536072]
[-81.49641418 164.87351990]
[-95.02060699 171.36169434]
[-106.68605804 183.66427612]
[-121.73717499 175.86041260]
[-118.40484619 159.23716736]
[-101.50877380 157.83750916]
[-87.98458099 151.34933472]
[-74.46039581 144.86117554]
[-60.93620300 138.37300110]
[-51.86421967 123.38304138]
[-33.53907394 124.85575867]
[-20.15278816 118.08763885]
[-6.76650333 111.31952667]
[6.61978149 104.55141449]
[-7.76990366 100.31620789]
[-17.04865074 88.53041840]
[-17.78814697 73.54865265]
[-9.71516514 60.90638733]
[4.18749094 55.27467728]
[18.78306580 58.73432922]
[28.67878532 70.00707245]
[30.21837616 84.92785645]
[22.83363724 97.98313904]
[37.15623474 93.52632904]
[51.47883224 89.06951141]
[65.80142975 84.61269379]
[74.56763458 72.44085693]
[74.25557709 57.44410324]
[73.94351959 42.44734955]
[73.63146973 27.45059776]
[58.71236038 25.67117500]
[44.18611145 21.83265686]
[30.33547783 16.00975990]
[17.43006897 8.31582928]
[5.72109175 -1.09936965]
[-4.56353617 -12.05256844]
[-13.22362041 -24.33055878]
[-20.09059143 -37.69434738]
[-25.03078079 -51.88380432]
[-27.94802475 -66.62272644]
[-28.78554153 -81.62421417]
[-27.52702522 -96.59626770]
[-24.19697571 -111.24743652]
[-18.86021233 -125.29254913]
[-11.62061691 -138.45820618]
[-2.61910987 -150.48812866]
[7.96909094 -161.14814758]
[19.93788338 -170.23077393]
[33.05429077 -177.55920410]
[47.06299973 -182.99079895]
[61.69132996 -186.41983032]
[76.65452576 -187.77952576]
[91.66133881 -187.04344177]
[106.41964722 -184.22590637]
[120.64217377 -179.38175964]
[134.05207825 -172.60528564]
[146.38833618 -164.02841187]
[157.41081238 -153.81806946]
[166.90495300 -142.17300415]
[174.68595886 -129.31990051]
[180.60235596 -115.50895691]
[184.53898621 -101.00898743]
[186.41923523 -86.10224915]
[186.20648193 -71.07891083]
[183.90487671 -56.23139191]
[179.55921936 -41.84871292]
[173.25410461 -28.21083450]
[165.11227417 -15.58322525]
[155.29217529 -4.21168232]
[143.98500061 5.68244314]
[131.41081238 13.90655899]
[117.81439209 20.30058098]
[103.46039581 24.74004555]
[88.62821960 27.13854027]
[88.94027710 42.13529587]
[89.25233459 57.13204956]
[89.56439209 72.12879944]
[104.16826630 68.92821503]
[119.27201080 73.28678131]
[131.02784729 84.85051727]
[136.09278870 101.35089111]
[150.95584106 103.37322998]
[165.81887817 105.39556122]
[180.75318909 106.79786682]
[195.73291016 107.57771301]
[210.71261597 108.35755920]
[225.69233704 109.13740540]
[240.67204285 109.91724396]
[252.24400330 99.15317535]
[268.03472900 99.80792236]
[278.67584229 111.49304199]
[277.85418701 127.27595520]
[266.05722046 137.79293823]
[250.28387451 136.80445862]
[239.89221191 124.89696503]
[224.91249084 124.11711884]
[209.93276978 123.33727264]
[194.95306396 122.55742645]
[179.97334290 121.77758026]
[177.77925110 123.61966705]
[174.70004272 124.67438507]
[171.04286194 124.59123993]
[167.23901367 123.14148712]
[163.79655457 120.25861359]
[148.93350220 118.23627472]
[134.07044983 116.21394348]
[128.42095947 121.14680481]
[140.49494934 130.04728699]
[152.56893921 138.94778442]
[165.97207642 145.68246460]
[170.71755981 159.91201782]
[164.03976440 173.34358215]
[149.83045959 178.14935303]
[136.37069702 171.52856445]
[131.50471497 157.33999634]
[124.31333160 144.17626953]
[117.12194824 131.01252747]
[111.47245026 135.94538879]
[111.47245026 150.94538879]
[111.47245026 165.94538879]
[111.47245026 180.94538879]
[111.47245026 195.94538879]
[111.47245026 210.94538879]
[111.47245026 225.94538879]
[111.47245026 240.94538879]
[111.47245026 255.94538879]
[111.47245026 270.94537354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 49]
[13 48]
[14 47]
[15 46]
[16 37]
[17 36]
[18 35]
[19 34]
[22 32]
[23 31]
[24 30]
[25 29]
[50 100]
[51 99]
[52 98]
[53 97]
[104 129]
[105 128]
[106 127]
[107 122]
[108 121]
[109 120]
[110 119]
[111 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
