%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGAUCACCCCCUCCCCAAUAAAGCUAAAACUCACCUGAGUUGUAAAAAACUCCAGUUGACACAxxxxxxxxxxGUCUACAAGACGCUACUUCCCCUAUCAUAGAAGAGCUUAUCACCUUUCAUGAUCACGCCCUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[97.49538422 124.35820007]
[89.95154572 137.32318115]
[82.40770721 150.28814697]
[74.86386871 163.25311279]
[67.32003021 176.21809387]
[59.77619171 189.18305969]
[52.23235321 202.14802551]
[44.68851089 215.11300659]
[37.14467239 228.07797241]
[29.60083389 241.04295349]
[32.29408264 256.85830688]
[21.50130081 268.72824097]
[5.50178337 267.54714966]
[-3.43100786 254.22105408]
[1.55540013 238.97261047]
[16.63586235 233.49909973]
[24.17970085 220.53413391]
[31.72354126 207.56916809]
[39.26737976 194.60418701]
[46.81121826 181.63922119]
[54.35506058 168.67425537]
[61.89889908 155.70927429]
[69.44273376 142.74430847]
[76.98657990 129.77932739]
[84.53041840 116.81436157]
[71.69433594 124.57548523]
[58.85825729 132.33660889]
[49.37524796 143.95867920]
[35.78823853 150.31423950]
[20.78920174 150.14407349]
[7.34988070 143.48190308]
[-1.86701226 131.64767456]
[-5.03534651 116.98609924]
[-1.52738428 102.40206146]
[7.96184683 90.78507233]
[21.55225754 84.43678284]
[36.55120087 84.61498260]
[49.98735428 91.28469086]
[64.88272095 93.05332947]
[79.77808380 94.82196808]
[67.55410004 86.12862396]
[55.33012390 77.43527222]
[39.59971619 75.74266815]
[33.71205902 62.06112289]
[21.48807716 53.36777496]
[9.26409626 44.67442703]
[-3.04735565 36.10540390]
[-15.44501400 27.66158676]
[-27.84267235 19.21776772]
[-40.24032974 10.77394772]
[-55.71900558 13.96551228]
[-68.87474823 5.20754337]
[-71.90248108 -10.30401230]
[-63.00591278 -23.36642265]
[-47.46321487 -26.22999382]
[-34.49559402 -17.19581604]
[-31.79651070 -1.62370992]
[-19.39885330 6.82010889]
[-7.00119448 15.26392841]
[5.39646339 23.70774651]
[12.73840237 24.88058472]
[17.95744324 32.45044708]
[30.18142509 41.14379501]
[42.40540695 49.83714294]
[57.26147079 50.90793991]
[64.02346802 65.21129608]
[76.24745178 73.90464020]
[88.47143555 82.59799194]
[95.71258545 80.64461517]
[89.15284729 67.15499115]
[82.59310913 53.66537476]
[76.03337097 40.17575836]
[66.18817139 28.85886002]
[65.56528473 13.87179947]
[74.43744659 1.77697527]
[88.91979218 -2.12963676]
[102.67092133 3.86255598]
[109.66961670 17.12974548]
[106.85156250 31.86223221]
[107.96600342 46.82077408]
[109.08045197 61.77931976]
[110.19489288 76.73786163]
[117.43605042 74.78448486]
[123.62953949 61.12283325]
[129.82302856 47.46118546]
[136.01652527 33.79953384]
[137.04962158 16.87709236]
[153.59672546 13.18522263]
[161.72500610 28.06364250]
[149.67817688 39.99302292]
[143.48468018 53.65467453]
[137.29118347 67.31632233]
[131.09770203 80.97797394]
[141.65042114 91.63818359]
[155.37413025 85.58345795]
[169.09785461 79.52873230]
[175.73385620 73.16441345]
[183.16159058 73.49350739]
[197.00520325 67.71816254]
[210.84880066 61.94281769]
[224.69241333 56.16747665]
[226.57896423 40.92488480]
[235.84686279 28.67736816]
[250.00308228 22.71944046]
[265.23968506 24.65375710]
[277.45809937 33.95999527]
[283.37161255 48.13482666]
[281.38955688 63.36528778]
[272.04504395 75.55446625]
[257.85174561 81.42353058]
[242.62757874 79.39373016]
[230.46775818 70.01107788]
[216.62414551 75.78642273]
[202.78054810 81.56176758]
[188.93693542 87.33711243]
[175.15257263 93.25244904]
[161.42886353 99.30717468]
[147.70515442 105.36190033]
[162.65162659 106.62787628]
[177.59811401 107.89385223]
[192.57148743 108.78707123]
[207.22682190 111.98416138]
[221.21177673 117.40826416]
[234.19017029 124.92897797]
[245.85000610 134.36552429]
[255.91098022 145.49102783]
[264.13122559 158.03805542]
[270.31311035 171.70495605]
[274.30804443 186.16317749]
[276.01998901 201.06517029]
[275.40780640 216.05267334]
[272.48614502 230.76538086]
[267.32531738 244.84962463]
[260.04937744 257.96679688]
[250.83319092 269.80160522]
[239.89836121 280.06948853]
[227.50773621 288.52362061]
[213.95919800 294.96078491]
[199.57844543 299.22619629]
[184.71118164 301.21737671]
[169.71484375 300.88638306]
[154.94990540 298.24124146]
[140.77134705 293.34548950]
[127.51998901 286.31686401]
[115.51441956 277.32431030]
[105.04324341 266.58398438]
[96.35817719 254.35411072]
[89.66801453 240.92869568]
[85.13359070 226.63047791]
[82.86391449 211.80319214]
[82.91353607 196.80326843]
[85.28127289 181.99133301]
[89.91020966 167.72341919]
[96.68618011 154.34729004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[3 23]
[4 22]
[5 21]
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[40 68]
[41 67]
[42 66]
[44 64]
[45 63]
[46 62]
[47 60]
[48 59]
[49 58]
[50 57]
[83 93]
[84 92]
[85 91]
[86 90]
[94 118]
[95 117]
[96 116]
[98 115]
[99 114]
[100 113]
[101 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
