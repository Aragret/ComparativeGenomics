%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCUAUAGCACCCCCUCUACCCCCUCUAGAGCCCACUGUAAAGCUAACUUAGCAUUAACCxxxxxxxxxxACCCAGCUCUCCCUAAGCUUCAAACUAGACUACUUCUCCAUAAUAUUCAUCCCUGUAGCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-26.96483612 253.66229248]
[-36.94756317 264.85806274]
[-46.93029022 276.05383301]
[-56.91301346 287.24957275]
[-66.89574432 298.44534302]
[-76.40409851 310.04669189]
[-85.42163086 322.03353882]
[-94.43916321 334.02035522]
[-103.45668793 346.00720215]
[-112.47422028 357.99401855]
[-106.38783264 372.09548950]
[-108.18354034 387.34906006]
[-117.37831116 399.65155029]
[-131.49879456 405.69372559]
[-146.74664307 403.85018921]
[-159.02027893 394.61691284]
[-165.01814270 380.47756958]
[-163.12684631 365.23556519]
[-153.85513306 352.99093628]
[-139.69705200 347.03741455]
[-124.46105194 348.97650146]
[-115.44351959 336.98965454]
[-106.42599487 325.00283813]
[-97.40846252 313.01599121]
[-88.39093018 301.02917480]
[-88.69248199 298.18023682]
[-87.84646606 295.03726196]
[-85.73384094 292.05084229]
[-82.40594482 289.70645142]
[-78.09150696 288.46261597]
[-68.10877991 277.26684570]
[-58.12605286 266.07110596]
[-48.14332962 254.87532043]
[-38.16060257 243.67956543]
[-52.75716019 228.05239868]
[-65.59567261 210.95152283]
[-76.52838898 192.57373047]
[-85.42948151 173.13053894]
[-92.19651794 152.84570312]
[-96.75160980 131.95266724]
[-99.04233551 110.69190979]
[-99.04233551 89.30809021]
[-96.75160980 68.04733276]
[-92.19651794 47.15430450]
[-85.42948151 26.86946297]
[-76.52838898 7.42626476]
[-65.59567261 -10.95152664]
[-52.75716019 -28.05240440]
[-38.16060257 -43.67956161]
[-48.14332962 -54.87532425]
[-58.12605286 -66.07109070]
[-73.08528137 -71.22203827]
[-75.78047180 -85.87076569]
[-85.76319885 -97.06652832]
[-95.74591827 -108.26229095]
[-105.72864532 -119.45806122]
[-120.78272247 -127.25621033]
[-117.45671082 -143.88070679]
[-100.56117249 -145.28680420]
[-94.53288269 -129.44078064]
[-84.55015564 -118.24501801]
[-74.56742859 -107.04925537]
[-64.58470154 -95.85348511]
[-50.33951187 -91.50334167]
[-46.93029022 -76.05381775]
[-36.94756317 -64.85805511]
[-26.96483612 -53.66228485]
[-15.18907738 -62.67650223]
[-2.77572775 -70.79027557]
[10.20650387 -77.95869446]
[23.68575859 -84.14207458]
[37.58742523 -89.30620575]
[51.83455658 -93.42248535]
[66.34829712 -96.46813965]
[81.04830170 -98.42630768]
[95.85320282 -99.28615570]
[110.68106079 -99.04291534]
[125.44979858 -97.69793701]
[140.07766724 -95.25866699]
[154.48370361 -91.73860931]
[168.58815002 -87.15724182]
[182.31295776 -81.53992462]
[195.58215332 -74.91775513]
[208.32228088 -67.32738495]
[220.46281433 -58.81082535]
[229.97117615 -70.41216278]
[239.47953796 -82.01350403]
[248.98789978 -93.61484528]
[245.91702271 -108.94794464]
[253.46583557 -122.64280701]
[268.07003784 -128.23315430]
[282.83392334 -123.07937622]
[290.78646851 -109.61494446]
[288.17272949 -94.19734955]
[276.22680664 -84.10630035]
[260.58923340 -84.10649109]
[251.08087158 -72.50514984]
[241.57250977 -60.90380478]
[232.06416321 -49.30246353]
[240.58728027 -41.30599976]
[248.62710571 -32.82376862]
[256.15597534 -23.88492966]
[263.14807129 -14.52021122]
[269.57928467 -4.76180840]
[275.42752075 5.35673332]
[280.67272949 15.80062962]
[285.29681396 26.53397751]
[289.28390503 37.51987839]
[292.62033081 48.72056961]
[295.29455566 60.09754181]
[297.29742432 71.61168671]
[298.62203979 83.22341919]
[299.26385498 94.89282990]
[299.22067261 106.57978821]
[298.49261475 118.24413300]
[297.08221436 129.84576416]
[294.99429321 141.34478760]
[292.23605347 152.70169067]
[288.81695557 163.87741089]
[284.74877930 174.83354187]
[280.04547119 185.53242493]
[274.72323608 195.93727112]
[268.80035400 206.01229858]
[262.29718018 215.72291565]
[255.23608398 225.03569031]
[247.64134216 233.91864014]
[239.53904724 242.34121704]
[230.95706177 250.27447510]
[221.92488098 257.69113159]
[212.47355652 264.56567383]
[202.63558960 270.87451172]
[192.44479370 276.59594727]
[181.93620300 281.71029663]
[171.14593506 286.19995117]
[160.11109924 290.04953003]
[148.86961365 293.24578857]
[137.46012878 295.77770996]
[125.92185974 297.63659668]
[114.29448700 298.81607056]
[102.61797333 299.31210327]
[90.93245697 299.12295532]
[79.27811432 298.24926758]
[67.69500732 296.69406128]
[56.22295761 294.46267700]
[44.90139771 291.56280518]
[33.76925278 288.00439453]
[22.86478424 283.79968262]
[12.22548580 278.96313477]
[1.88792789 273.51135254]
[-8.11235046 267.46310425]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[4 31]
[5 30]
[6 25]
[7 24]
[8 23]
[9 22]
[10 21]
[49 67]
[50 66]
[51 65]
[53 63]
[54 62]
[55 61]
[56 60]
[85 99]
[86 98]
[87 97]
[88 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
