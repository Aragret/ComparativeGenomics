%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAGUCCUAGCUGCUGGCAUCACUAUACUACUAACAGACCGCAACCUCAACACCACCUUCUxxxxxxxxxxCACCCUCACACGAUUCUUUACCUUUCACUUCAUCUUGCCCUUCAUUAUUGCAGCCCUAGCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[95.93894196 268.63360596]
[95.62688446 253.63687134]
[95.31482697 238.64010620]
[95.00277710 223.64335632]
[94.69071960 208.64660645]
[94.37866211 193.64985657]
[94.06660461 178.65309143]
[93.75454712 163.65634155]
[93.44248962 148.65959167]
[79.26593781 143.75804138]
[69.75757599 155.35937500]
[60.24921799 166.96072388]
[50.74085999 178.56205750]
[41.23250198 190.16340637]
[39.10703659 206.42422485]
[23.86030197 212.46319580]
[11.17682838 202.06793213]
[14.10428715 185.93218994]
[29.63115883 180.65504456]
[39.13951874 169.05371094]
[48.64787674 157.45236206]
[58.15623474 145.85102844]
[67.66459656 134.24967957]
[63.03306198 93.67500305]
[88.67860413 74.49365997]
[86.50177002 59.65245056]
[84.32492828 44.81124496]
[82.14809418 29.97004128]
[67.18404388 31.09526062]
[52.17789841 31.16212463]
[37.20441437 30.17029762]
[22.33819199 28.12472343]
[7.65329504 25.03559303]
[-6.77711678 20.91829491]
[-20.88115120 15.79334068]
[-34.58853912 9.68626499]
[-47.83099747 2.62749267]
[-60.54254532 -5.34780979]
[-72.65985870 -14.19991016]
[-84.12256622 -23.88470650]
[-94.87355804 -34.35394669]
[-104.85928345 -45.55547714]
[-114.02998352 -57.43349457]
[-122.33996582 -69.92881012]
[-129.74784851 -82.97918701]
[-136.21670532 -96.51959991]
[-141.71432495 -110.48258972]
[-146.21330261 -124.79859924]
[-149.69122314 -139.39630127]
[-152.13078308 -154.20297241]
[-153.51982117 -169.14485168]
[-153.85139465 -184.14747620]
[-153.12387085 -199.13612366]
[-151.34088135 -214.03611755]
[-148.51127625 -228.77322388]
[-144.64920044 -243.27403259]
[-139.77384949 -257.46627808]
[-133.90953064 -271.27926636]
[-127.08547974 -284.64419556]
[-119.33566284 -297.49444580]
[-110.69869995 -309.76605225]
[-101.21762848 -321.39782715]
[-90.93967438 -332.33181763]
[-79.91604614 -342.51361084]
[-68.20166016 -351.89242554]
[-55.85488510 -360.42153931]
[-42.93722534 -368.05850220]
[-29.51303673 -374.76522827]
[-15.64920235 -380.50830078]
[-1.41478884 -385.25912476]
[13.11928654 -388.99404907]
[27.88061714 -391.69442749]
[42.79565811 -393.34683228]
[57.79010773 -393.94302368]
[72.78926086 -393.48004150]
[87.71839142 -391.96014404]
[102.50312042 -389.39099121]
[117.06979370 -385.78530884]
[131.34584045 -381.16110229]
[145.26013184 -375.54138184]
[158.74336243 -368.95413208]
[171.72834778 -361.43222046]
[184.15039062 -353.01309204]
[195.94761658 -343.73870850]
[207.06123352 -333.65524292]
[217.43589783 -322.81292725]
[227.01989746 -311.26583862]
[235.76551819 -299.07144165]
[243.62915039 -286.29049683]
[250.57165527 -272.98672485]
[256.55841064 -259.22637939]
[261.55963135 -245.07797241]
[265.55035400 -230.61204529]
[268.51071167 -215.90065002]
[270.42599487 -201.01708984]
[271.28659058 -186.03549194]
[271.08828735 -171.03050232]
[269.83203125 -156.07688904]
[267.52407837 -141.24913025]
[264.17593384 -126.62111664]
[259.80426025 -112.26570892]
[254.43089294 -98.25444031]
[248.08255005 -84.65710449]
[240.79087830 -71.54145050]
[232.59219360 -58.97282028]
[223.52734375 -47.01382065]
[213.64151001 -35.72404480]
[202.98393250 -25.15972710]
[191.60768127 -15.37350464]
[179.56947327 -6.41413164]
[166.92926025 1.67375672]
[153.75001526 8.84986591]
[140.09741211 15.07844543]
[126.03945160 20.32846451]
[111.64617920 24.57376671]
[96.98929596 27.79320335]
[99.16613770 42.63441086]
[101.34297180 57.47561646]
[103.51981354 72.31681824]
[118.49549103 73.02705383]
[133.00016785 82.18010712]
[142.29426575 99.13163757]
[142.32928467 120.66035461]
[155.10664368 128.51777649]
[171.50556946 128.43151855]
[179.54499817 142.72485352]
[170.95465088 156.69404602]
[154.57156372 155.96876526]
[147.24922180 141.29513550]
[134.47186279 133.43771362]
[127.96370697 137.16517639]
[135.41862488 150.18147278]
[142.87353516 163.19778442]
[150.32844543 176.21409607]
[157.78315735 189.23052979]
[144.76661682 196.68502808]
[137.31213379 183.66900635]
[129.85722351 170.65269470]
[122.40231323 157.63638306]
[114.94740295 144.62008667]
[108.43924713 148.34753418]
[108.75130463 163.34428406]
[109.06336212 178.34104919]
[109.37541199 193.33779907]
[109.68746948 208.33454895]
[109.99952698 223.33129883]
[110.31158447 238.32806396]
[110.62364197 253.32481384]
[110.93569946 268.32156372]
[113.52669525 287.52929688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
[25 119]
[26 118]
[27 117]
[28 116]
[123 130]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
