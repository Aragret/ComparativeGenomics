%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGAGAAGCCUUCGCUUCGAAGCGAAAAGUCCUAAUAGUAGAAGAACCCUCCAUAAACCUGGxxxxxxxxxxAACACACCCGACCACACCGCUAACAAUCAAUACUAAACCCCCAUAAAUAGGAGAAGGCUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[85.84989166 289.36715698]
[88.44088745 270.15942383]
[88.75294495 255.16268921]
[89.06500244 240.16592407]
[89.37705994 225.16917419]
[89.68910980 210.17242432]
[90.00116730 195.17567444]
[90.31322479 180.17890930]
[90.62528229 165.18215942]
[90.93733978 150.18540955]
[91.24939728 135.18865967]
[78.15369415 123.99826813]
[72.97138214 109.48642731]
[62.09255981 119.81362915]
[51.21373367 130.14083862]
[40.33490753 140.46803284]
[29.45608330 150.79524231]
[25.32256317 166.66490173]
[9.44257164 170.75854492]
[-1.84791899 158.86497498]
[3.06578088 143.21928406]
[19.12887764 139.91641235]
[30.00770378 129.58921814]
[40.88652802 119.26200867]
[51.76535416 108.93480682]
[62.64418030 98.60759735]
[66.19894409 84.03489685]
[61.29738998 69.85833740]
[55.66543198 55.95578003]
[49.31830215 42.36483002]
[42.97117233 28.77388000]
[36.62404633 15.18292904]
[22.48813248 20.23371887]
[7.94136810 23.93859482]
[-6.88841105 26.26499367]
[-21.87087631 27.19247055]
[-36.87435913 26.71287918]
[-51.76700211 24.83042908]
[-66.41793060 21.56166649]
[-80.69837952 16.93531799]
[-94.48286438 10.99203968]
[-107.65023041 3.78406382]
[-120.08476257 -4.62526512]
[-131.67718506 -14.16204357]
[-142.32563782 -24.74246025]
[-151.93650818 -36.27353287]
[-160.42533875 -48.65392303]
[-167.71755981 -61.77482605]
[-173.74903870 -75.52093506]
[-178.46681213 -89.77145386]
[-181.82939148 -104.40113068]
[-183.80725098 -119.28140259]
[-184.38298035 -134.28150940]
[-183.55152893 -149.26960754]
[-181.32022095 -164.11398315]
[-177.70863342 -178.68420410]
[-172.74853516 -192.85218811]
[-166.48350525 -206.49343872]
[-158.96861267 -219.48808289]
[-150.26988220 -231.72190857]
[-140.46376038 -243.08741760]
[-129.63644409 -253.48469543]
[-117.88307190 -262.82241821]
[-105.30693817 -271.01846313]
[-92.01856232 -278.00085449]
[-78.13473511 -283.70819092]
[-63.77746582 -288.09033203]
[-49.07292557 -291.10879517]
[-34.15034485 -292.73699951]
[-19.14086723 -292.96066284]
[-4.17639780 -291.77783203]
[10.61155224 -289.19885254]
[25.09302139 -285.24645996]
[39.14074707 -279.95535278]
[52.63126755 -273.37200928]
[65.44602966 -265.55432129]
[77.47241974 -256.57098389]
[88.60473633 -246.50091553]
[98.74515533 -235.43264771]
[107.80455017 -223.46345520]
[115.70331573 -210.69850159]
[122.37202454 -197.24998474]
[127.75208282 -183.23606873]
[131.79620361 -168.77995300]
[134.46884155 -154.00863647]
[135.74650574 -139.05197144]
[135.61799622 -124.04137421]
[134.08441162 -109.10877228]
[131.15922546 -94.38539886]
[126.86817932 -80.00064087]
[121.24895477 -66.08090973]
[114.35093689 -52.74855042]
[106.23476410 -40.12071609]
[96.97174835 -28.30839348]
[86.64329529 -17.41538429]
[75.34018707 -7.53742456]
[63.16174316 1.23867917]
[50.21499634 8.83579922]
[56.56212616 22.42675018]
[62.90925598 36.01770020]
[69.25638580 49.60865402]
[77.07440186 36.80714417]
[91.92940521 34.72653961]
[102.96358490 44.88758469]
[102.11184692 59.86338425]
[89.99674988 68.70783997]
[75.47394562 64.95678711]
[80.37549591 79.13334656]
[92.08258057 70.88936615]
[107.02797699 69.09793091]
[121.72062683 74.87232208]
[132.40136719 87.47673035]
[135.99804688 104.35372925]
[150.12284851 109.40248108]
[164.24765015 114.45124054]
[175.07598877 103.69438934]
[189.50201416 98.70915985]
[204.66143799 100.48536682]
[217.54432678 108.67034912]
[225.59278870 121.63896942]
[227.20878601 136.81629944]
[222.07147217 151.18885803]
[211.20085144 161.90298462]
[196.75531006 166.83137512]
[181.60299683 164.99548340]
[168.75244141 156.75982666]
[160.75511169 143.75961304]
[159.19889832 128.57604980]
[145.07409668 123.52728271]
[130.94929504 118.47853088]
[124.77350616 122.73407745]
[134.74868774 133.93656921]
[144.72386169 145.13905334]
[156.84143066 153.98013306]
[156.63905334 168.97875977]
[144.28735352 177.48968506]
[130.19999695 172.33735657]
[126.25387573 157.86616516]
[119.33790588 144.55566406]
[112.42193604 131.24516296]
[106.24614716 135.50071716]
[105.93408966 150.49746704]
[105.62203217 165.49421692]
[105.30998230 180.49096680]
[104.99792480 195.48773193]
[104.68586731 210.48448181]
[104.37380981 225.48123169]
[104.06175232 240.47798157]
[103.74969482 255.47474670]
[103.43764496 270.47149658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[11 141]
[13 26]
[14 25]
[15 24]
[16 23]
[17 22]
[27 108]
[28 107]
[29 101]
[30 100]
[31 99]
[32 98]
[113 130]
[114 129]
[115 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
