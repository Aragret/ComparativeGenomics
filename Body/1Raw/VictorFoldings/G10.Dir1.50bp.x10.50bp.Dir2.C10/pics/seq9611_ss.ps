%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAGAAGGAAUAAUACUAUCGCUGUUCAUUAUAGCUACUCUCAUAACCCUCAACACCCACUCxxxxxxxxxxCAAAACCAUACCUCUCACUUCAACCUCCCUCACCAUUGGCAGCCUAGCAUUAGCAGGAAUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 311.02532959]
[92.50000000 296.02532959]
[92.50000000 281.02532959]
[92.50000000 266.02532959]
[92.50000000 251.02532959]
[92.50000000 236.02532959]
[92.50000000 221.02532959]
[92.50000000 206.02532959]
[92.50000000 191.02532959]
[92.50000000 176.02532959]
[77.81385040 173.10180664]
[63.98011780 167.36964417]
[51.53031158 159.04904175]
[40.94276810 148.45971680]
[32.62427521 136.00849915]
[26.89444160 122.17379761]
[23.97340775 107.48715210]
[23.97340775 92.51284790]
[26.89444160 77.82620239]
[32.62427521 63.99150085]
[40.94276810 51.54028702]
[51.53031158 40.95095825]
[63.98011780 32.63036346]
[77.81385040 26.89818764]
[92.50000000 23.97467422]
[92.50000000 8.97467422]
[92.50000000 -6.02532578]
[83.92769623 -15.71652126]
[84.27127075 -28.24861336]
[92.79801178 -36.88324356]
[93.10598755 -51.88008118]
[93.41396332 -66.87692261]
[93.72194672 -81.87375641]
[94.02992249 -96.87059784]
[79.08781433 -98.26028442]
[64.28494263 -100.72454834]
[49.69846725 -104.25054169]
[35.40444946 -108.81987000]
[21.47740364 -114.40871429]
[7.98994541 -120.98793793]
[-4.98760939 -128.52323914]
[-17.38759995 -136.97534180]
[-29.14538002 -146.30017090]
[-40.19964600 -156.44911194]
[-50.49277115 -167.36924744]
[-59.97108459 -179.00364685]
[-68.58517456 -191.29165649]
[-76.29013062 -204.16920471]
[-83.04577637 -217.56916809]
[-88.81690216 -231.42167664]
[-93.57341003 -245.65451050]
[-97.29050446 -260.19345093]
[-99.94880676 -274.96270752]
[-101.53446198 -289.88528442]
[-102.03919220 -304.88339233]
[-101.46037292 -319.87881470]
[-99.80101776 -334.79339600]
[-97.06978607 -349.54934692]
[-93.28090668 -364.06973267]
[-88.45414734 -378.27890015]
[-82.61465454 -392.10272217]
[-75.79289246 -405.46914673]
[-68.02441406 -418.30847168]
[-59.34972382 -430.55380249]
[-49.81404495 -442.14123535]
[-39.46710205 -453.01037598]
[-28.36282921 -463.10458374]
[-16.55912781 -472.37121582]
[-4.11753178 -480.76193237]
[8.89709091 -488.23303223]
[22.41688728 -494.74554443]
[36.37137222 -500.26553345]
[50.68778992 -504.76419067]
[65.29150391 -508.21807861]
[80.10637665 -510.60916138]
[95.05516052 -511.92504883]
[110.05992889 -512.15881348]
[125.04245758 -511.30920410]
[139.92462158 -509.38073730]
[154.62882996 -506.38342285]
[169.07843018 -502.33288574]
[183.19808960 -497.25027466]
[196.91418457 -491.16204834]
[210.15521240 -484.09997559]
[222.85212708 -476.10086060]
[234.93875122 -467.20639038]
[246.35206604 -457.46298218]
[257.03256226 -446.92141724]
[266.92456055 -435.63662720]
[275.97647095 -423.66748047]
[284.14111328 -411.07635498]
[291.37591553 -397.92889404]
[297.64315796 -384.29370117]
[302.91018677 -370.24179077]
[307.14953613 -355.84643555]
[310.33908081 -341.18270874]
[312.46221924 -326.32708740]
[313.50784302 -311.35696411]
[313.47052002 -296.35043335]
[312.35049438 -281.38568115]
[310.15353394 -266.54077148]
[306.89111328 -251.89311218]
[302.58026123 -237.51902771]
[297.24340820 -223.49346924]
[290.90844727 -209.88958740]
[283.60836792 -196.77827454]
[275.38122559 -184.22790527]
[266.26989746 -172.30390930]
[256.32192993 -161.06845093]
[245.58915710 -150.58009338]
[234.12754822 -140.89355469]
[221.99684143 -132.05931091]
[209.26031494 -124.12341309]
[195.98432922 -117.12725830]
[182.23812866 -111.10729980]
[168.09338379 -106.09494781]
[153.62382507 -102.11631012]
[138.90489197 -99.19214630]
[124.01332092 -97.33769226]
[109.02675629 -96.56262207]
[108.71878052 -81.56578064]
[108.41080475 -66.56893921]
[108.10282898 -51.57210541]
[107.79484558 -36.57526779]
[117.08235931 -21.71637535]
[107.50000000 -6.02532578]
[107.50000000 8.97467422]
[107.50000000 23.97467422]
[122.18614960 26.89818764]
[136.01988220 32.63036346]
[148.46969604 40.95095825]
[159.05723572 51.54028702]
[167.37571716 63.99150085]
[173.10556030 77.82620239]
[176.02659607 92.51284790]
[176.02659607 107.48715210]
[173.10556030 122.17379761]
[167.37571716 136.00849915]
[159.05723572 148.45971680]
[148.46969604 159.04904175]
[136.01988220 167.36964417]
[122.18614960 173.10180664]
[107.50000000 176.02532959]
[107.50000000 191.02532959]
[107.50000000 206.02532959]
[107.50000000 221.02532959]
[107.50000000 236.02532959]
[107.50000000 251.02532959]
[107.50000000 266.02532959]
[107.50000000 281.02532959]
[107.50000000 296.02532959]
[107.50000000 311.02532959]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[25 128]
[26 127]
[27 126]
[30 124]
[31 123]
[32 122]
[33 121]
[34 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
