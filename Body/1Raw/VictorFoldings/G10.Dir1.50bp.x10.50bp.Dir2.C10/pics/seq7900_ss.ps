%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUUUACCCUAUAGCACCCCCUCUACCCCCUCUAGAGCCCACUGUAAAGCUAACUUAGCAUxxxxxxxxxxAUCCUAUACAACCGUAUCGGCGAUAUCGGUUUCAUCCUCGCCUUAGCAUGAUUUAUCCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-31.80045319 230.14746094]
[-42.89176941 240.24610901]
[-53.98308563 250.34477234]
[-65.07440186 260.44342041]
[-76.16571808 270.54205322]
[-86.82733917 281.09335327]
[-97.04082489 292.07901001]
[-107.25430298 303.06469727]
[-117.46778107 314.05035400]
[-127.68125916 325.03601074]
[-121.02291870 338.67532349]
[-119.74519348 353.79922485]
[-124.02087402 368.36227417]
[-133.27171326 380.39498901]
[-146.24661255 388.27005005]
[-161.19082642 390.92236328]
[-176.08328247 387.99328613]
[-188.90986633 379.87893677]
[-197.93592834 367.67666626]
[-201.94073486 353.03680420]
[-200.38267517 337.93920898]
[-193.47247314 324.42575073]
[-182.14468384 314.32400513]
[-167.93127441 309.00012207]
[-152.75451660 309.17416382]
[-138.66693115 314.82254028]
[-128.45344543 303.83688354]
[-118.23996735 292.85119629]
[-108.02648926 281.86553955]
[-97.81300354 270.87988281]
[-97.81710052 268.01504517]
[-96.64929199 264.97689819]
[-94.23798370 262.22601318]
[-90.68463898 260.23986816]
[-86.26436615 259.45074463]
[-75.17304993 249.35209656]
[-64.08173370 239.25344849]
[-52.99041748 229.15480042]
[-41.89910507 219.05615234]
[-52.01563644 205.83462524]
[-60.90419388 191.75817871]
[-68.49297333 176.94050598]
[-74.72066498 161.50131226]
[-79.53697205 145.56530762]
[-82.90298462 129.26123047]
[-84.79151154 112.72078705]
[-85.18730164 96.07758331]
[-84.08715057 79.46605682]
[-81.49995422 63.02041245]
[-77.44660187 46.87348557]
[-71.95983887 31.15571213]
[-65.08399200 15.99406147]
[-56.87460327 1.51100791]
[-47.39798355 -12.17645454]
[-36.73069000 -24.95775795]
[-24.95888519 -36.72965622]
[-12.17766953 -47.39706039]
[1.50971425 -56.87379074]
[-5.94519615 -69.89009857]
[-13.40010643 -82.90641022]
[-20.85501671 -95.92272186]
[-33.97370529 -106.66219330]
[-27.28554726 -122.24118042]
[-10.46392632 -120.12709045]
[-7.83870745 -103.37763214]
[-0.38379690 -90.36132050]
[7.07111359 -77.34500885]
[14.52602386 -64.32869720]
[25.76116562 -69.70066833]
[37.33187866 -74.30556488]
[49.18586731 -78.12255859]
[61.26954269 -81.13440704]
[73.52828979 -83.32749939]
[85.90669250 -84.69190979]
[98.34880066 -85.22148132]
[110.79837036 -84.91381073]
[123.19912720 -83.77030182]
[135.49502563 -81.79611206]
[147.63047791 -79.00016785]
[159.55062866 -75.39511108]
[171.20159912 -70.99723816]
[182.53073120 -65.82641602]
[193.48680115 -59.90603638]
[204.02029419 -53.26284790]
[214.08360291 -45.92687988]
[223.63122559 -37.93129730]
[232.62001038 -29.31223679]
[241.00933838 -20.10866356]
[248.76126099 -10.36217403]
[255.84075928 -0.11682647]
[268.77880859 -7.70673466]
[281.71688843 -15.29664326]
[294.65493774 -22.88655090]
[307.59298706 -30.47645950]
[320.45138550 -38.20054626]
[333.22875977 -46.05797195]
[346.00610352 -53.91539764]
[358.78344727 -61.77282333]
[369.10836792 -75.22022247]
[384.88845825 -69.02143097]
[383.30029297 -52.14203644]
[366.64089966 -48.99546432]
[353.86352539 -41.13803864]
[341.08618164 -33.28061295]
[328.30880737 -25.42318726]
[324.23223877 -19.20006752]
[315.18289185 -17.53840446]
[302.24484253 -9.94849586]
[289.30679321 -2.35858703]
[276.36871338 5.23132133]
[263.43066406 12.82122993]
[271.12945557 29.11673737]
[277.20809937 46.08330536]
[281.60913086 63.56031036]
[284.29080200 81.38229370]
[285.22781372 99.38053894]
[284.41122437 117.38464355]
[281.84878540 135.22416687]
[277.56475830 152.73020935]
[271.59973145 169.73706055]
[285.25595093 175.94247437]
[301.51654053 173.81507874]
[311.27304077 186.99623108]
[304.48880005 201.92628479]
[288.14288330 203.24647522]
[279.05056763 189.59870911]
[265.39431763 183.39329529]
[258.60232544 195.68186951]
[250.89904785 207.42066956]
[242.32870483 218.54223633]
[232.94056702 228.98266602]
[222.78855896 238.68199158]
[211.93101501 247.58445740]
[200.43032837 255.63891602]
[188.35258484 262.79907227]
[175.76718140 269.02383423]
[162.74642944 274.27740479]
[149.36512756 278.52957153]
[135.70019531 281.75592041]
[121.83013153 283.93795776]
[107.83462524 285.06307983]
[93.79410553 285.12484741]
[79.78924561 284.12292480]
[65.90051270 282.06301880]
[52.20771790 278.95703125]
[38.78952789 274.82275391]
[25.72304535 269.68399048]
[13.08335114 263.57022095]
[0.94307095 256.51660156]
[-10.62803841 248.56365967]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[3 37]
[4 36]
[5 35]
[6 30]
[7 29]
[8 28]
[9 27]
[10 26]
[58 68]
[59 67]
[60 66]
[61 65]
[90 111]
[91 110]
[92 109]
[93 108]
[94 107]
[95 105]
[96 104]
[97 103]
[98 102]
[120 127]
[121 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
