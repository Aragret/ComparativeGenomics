%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCAUCCACCCUCCUCUCCCUAGGAGGCCUGCCCCCGCUAACCGGCUUUUUGCCCAAAUGGxxxxxxxxxxUUUUUAUUGCCACAACUAACCUCCUCGGACUCCUGCCUCACUCAUUUACACCAACCACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[170.18936157 73.76757050]
[164.06915283 65.87171173]
[151.62969971 74.25386047]
[139.19026184 82.63600159]
[126.75082397 91.01814270]
[114.31138611 99.40029144]
[108.00435638 111.87879181]
[94.07075500 113.03915405]
[81.63131714 121.42129517]
[69.19187927 129.80343628]
[56.75243759 138.18557739]
[44.31299591 146.56771851]
[38.90057373 154.00799561]
[31.52643394 154.99169922]
[18.91530609 163.11325073]
[6.30417776 171.23478699]
[9.38611412 186.09634399]
[6.88745928 201.06703186]
[-0.85386366 214.12216187]
[-12.79090405 223.49613953]
[-27.30927658 227.92121887]
[-42.44548798 226.79893494]
[-56.15249252 220.28108215]
[-66.57653046 209.24913025]
[-72.30783081 195.19506836]
[-72.57129669 180.01959229]
[-67.33127594 165.77507019]
[-57.29645538 154.38792419]
[-43.82395172 147.39820862]
[-28.73581696 145.75122070]
[-14.07259369 149.66967773]
[-1.81736457 158.62365723]
[10.79376316 150.50212097]
[23.40489197 142.38056946]
[35.93085480 134.12828064]
[48.37029266 125.74613953]
[60.80973434 117.36399841]
[73.24917603 108.98185730]
[85.68861389 100.59970856]
[91.99564362 88.12120819]
[105.92924500 86.96084595]
[118.36868286 78.57870483]
[130.80812073 70.19656372]
[143.24755859 61.81441879]
[155.68699646 53.43227386]
[141.28967285 24.93693542]
[131.90635681 -5.57567549]
[127.80497742 -37.23073959]
[129.10200500 -69.12087250]
[135.75923157 -100.33213043]
[147.58479309 -129.97021484]
[164.23878479 -157.18608093]
[185.24298096 -181.20025635]
[175.26025391 -192.39601135]
[165.27752686 -203.59178162]
[149.40740967 -205.94100952]
[141.47415161 -219.88528442]
[147.56349182 -234.72778320]
[163.00419617 -239.08258057]
[175.95147705 -229.60906982]
[176.47328186 -213.57450867]
[186.45600891 -202.37873840]
[196.43873596 -191.18298340]
[204.31208801 -197.31942749]
[212.49938965 -203.03039551]
[220.97770691 -208.29983521]
[229.72323608 -213.11299133]
[238.71144104 -217.45631409]
[247.91711426 -221.31762695]
[257.31442261 -224.68608093]
[266.87701416 -227.55221558]
[276.57803345 -229.90797424]
[286.39028931 -231.74674988]
[296.28622437 -233.06335449]
[306.23806763 -233.85409546]
[316.21792603 -234.11676025]
[326.19775391 -233.85057068]
[336.14959717 -233.05628967]
[346.04550171 -231.73612976]
[355.85769653 -229.89378357]
[365.55865479 -227.53440857]
[375.12115479 -224.66461182]
[384.51834106 -221.29246521]
[393.72387695 -217.42738342]
[402.71188354 -213.08023071]
[411.45718384 -208.26319885]
[419.93521118 -202.98977661]
[428.12216187 -197.27476501]
[435.99505615 -191.13418579]
[443.53179932 -184.58526611]
[450.71127319 -177.64639282]
[457.51327515 -170.33699036]
[463.91873169 -162.67761230]
[469.90969849 -154.68969727]
[475.46926880 -146.39569092]
[480.58193970 -137.81883240]
[485.23327637 -128.98321533]
[489.41024780 -119.91359711]
[493.10113525 -110.63543701]
[496.29553223 -101.17477417]
[498.98452759 -91.55813599]
[501.16052246 -81.81252289]
[502.81744385 -71.96526337]
[503.95056152 -62.04399490]
[504.55676270 -52.07655716]
[504.63430786 -42.09091568]
[504.18295288 -32.11508942]
[503.20394897 -22.17707253]
[501.70007324 -12.30475426]
[499.67553711 -2.52583551]
[497.13595581 7.13224077]
[494.08850098 16.64237213]
[490.54168701 25.97786903]
[486.50549316 35.11253357]
[481.99118042 44.02072906]
[477.01147461 52.67745590]
[471.58026123 61.05841446]
[465.71282959 69.14009094]
[459.42565918 76.89979553]
[452.73629761 84.31574249]
[445.66360474 91.36713409]
[438.22732544 98.03415680]
[430.44839478 104.29811096]
[422.34863281 110.14141083]
[413.95071411 115.54764557]
[405.27822876 120.50164032]
[396.35549927 124.98948669]
[387.20755005 128.99858093]
[377.86007690 132.51766968]
[368.33926392 135.53686523]
[358.67187500 138.04769897]
[348.88497925 140.04309082]
[339.00607300 141.51745605]
[329.06289673 142.46664429]
[319.08328247 142.88796997]
[309.09527588 142.78024292]
[299.12692261 142.14378357]
[289.20614624 140.98033142]
[279.36083984 139.29316711]
[269.61856079 137.08700562]
[260.00671387 134.36802673]
[250.55226135 131.14385986]
[241.28170776 127.42353058]
[232.22108459 123.21748352]
[223.39582825 118.53750610]
[214.83068848 113.39671326]
[206.54972839 107.80953979]
[198.57615662 101.79164886]
[190.93238831 95.35990906]
[183.63986206 88.53237152]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 45]
[3 44]
[4 43]
[5 42]
[6 41]
[8 39]
[9 38]
[10 37]
[11 36]
[12 35]
[14 34]
[15 33]
[16 32]
[53 63]
[54 62]
[55 61]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
