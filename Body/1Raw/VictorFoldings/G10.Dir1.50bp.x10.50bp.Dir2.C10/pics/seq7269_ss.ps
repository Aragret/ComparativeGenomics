%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAUUAAUAAUUUUCAUGAUUUGAGAAGCCUUCGCUUCGAAGCGAAAAGUCCUAAUAGUAGAxxxxxxxxxxAGUAAUAAACUUCGCCUUAAUUUUAAUAAUCAACACCCUCCUAGCCUUACUACUAAUAAUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[208.22787476 360.17819214]
[208.22787476 345.17819214]
[208.22787476 330.17819214]
[208.22787476 315.17819214]
[208.22787476 300.17819214]
[208.22787476 285.17819214]
[208.22787476 270.17819214]
[208.22787476 255.17819214]
[208.22787476 240.17819214]
[208.22787476 225.17819214]
[203.82757568 210.83813477]
[194.91142273 198.77571106]
[185.50756836 187.08949280]
[176.10371399 175.40328979]
[166.69984436 163.71708679]
[157.29598999 152.03086853]
[150.61112976 148.77131653]
[147.82199097 140.00680542]
[138.66006470 128.12998962]
[129.49812317 116.25316620]
[120.33618927 104.37634277]
[110.14321136 122.17720795]
[86.56764984 124.53547668]
[72.87702942 130.66465759]
[59.18640137 136.79382324]
[52.14744186 151.21022034]
[36.45685577 154.55464172]
[24.15111923 144.26152039]
[24.67013931 128.22686768]
[37.61576843 118.75109100]
[53.05722809 123.10320282]
[66.74784851 116.97402954]
[80.43847656 110.84485626]
[77.98554993 96.04677582]
[63.04953766 94.66275024]
[48.11352539 93.27872467]
[33.17751312 91.89469910]
[18.24149895 90.51067352]
[3.57770681 97.85269165]
[-9.96173859 88.59983063]
[-8.44861603 72.27063751]
[6.56050348 65.66319275]
[19.62552452 75.57466125]
[34.56153870 76.95868683]
[49.49755096 78.34271240]
[64.43356323 79.72673798]
[79.36957550 81.11076355]
[97.19769287 75.77480316]
[111.73005676 82.82098389]
[110.19276428 67.89996338]
[108.65547180 52.97895050]
[106.96507263 38.07450104]
[105.12174988 23.18819427]
[103.27842712 8.30188656]
[97.09029388 21.96596527]
[88.15809631 34.01652145]
[76.88411713 43.91082764]
[63.77609634 51.20327377]
[49.42438507 55.56543350]
[34.47534943 56.80084229]
[19.60224152 54.85386276]
[5.47491264 49.81217957]
[-7.27038622 41.90285873]
[-18.05964088 31.48211288]
[-26.40693665 19.01926041]
[-31.93633270 5.07559633]
[-34.39879990 -9.72089863]
[-33.68343735 -24.70383072]
[-29.82246399 -39.19841003]
[-22.98976326 -52.55184555]
[-13.49306488 -64.16273499]
[-1.76007140 -73.50815582]
[11.68079662 -80.16721344]
[26.22419930 -83.84000397]
[41.21514511 -84.36112213]
[55.97848129 -81.70709229]
[69.84931183 -75.99744415]
[82.20293427 -67.48932648]
[92.48297119 -56.56592178]
[100.22644043 -43.71918488]
[105.08460236 -29.52769852]
[106.83863068 -14.63332462]
[113.10803223 -28.26030350]
[119.37744141 -41.88728333]
[115.18408203 -57.37260818]
[124.79226685 -70.22027588]
[140.83140564 -70.57464600]
[150.99765015 -58.16388321]
[147.49232483 -42.50846100]
[133.00442505 -35.61787796]
[126.73501587 -21.99089813]
[120.46560669 -8.36391926]
[118.16473389 6.45856237]
[120.00805664 21.34486961]
[121.85137939 36.23117828]
[125.81903839 42.52163696]
[123.57649231 51.44165802]
[125.11378479 66.36267090]
[126.65107727 81.28369141]
[132.21301270 95.21440887]
[141.37495422 107.09123230]
[150.53688049 118.96805573]
[159.69882202 130.84487915]
[168.98220825 142.62701416]
[178.38606262 154.31321716]
[187.78991699 165.99943542]
[197.19377136 177.68563843]
[206.59762573 189.37184143]
[210.83695984 190.83055115]
[214.03820801 193.33564758]
[215.99682617 196.41957092]
[216.68585205 199.59675598]
[216.24589539 202.42472839]
[215.64468384 187.43678284]
[218.01675415 172.62551880]
[223.26858521 158.57496643]
[231.19306946 145.83909607]
[241.47778320 134.92008972]
[253.71719360 126.24846649]
[267.42871094 120.16615295]
[282.07168579 116.91297150]
[297.06875610 116.61718750]
[311.82861328 119.29045868]
[325.76928711 124.82739258]
[338.34109497 133.00965881]
[349.04837036 143.51464844]
[357.46887207 155.92814636]
[363.27062988 169.76071167]
[366.22485352 184.46691895]
[366.21511841 199.46691895]
[363.24172974 214.16926575]
[357.42199707 227.99426270]
[348.98535156 240.39678955]
[338.26443481 250.88784790]
[325.68197632 259.05374146]
[311.73413086 264.57254028]
[296.97079468 267.22662354]
[281.97412109 266.91131592]
[267.33538818 263.63909912]
[253.63179016 257.53894043]
[241.40367126 248.85142517]
[231.13317871 237.91903687]
[223.22787476 225.17819214]
[223.22787476 240.17819214]
[223.22787476 255.17819214]
[223.22787476 270.17819214]
[223.22787476 285.17819214]
[223.22787476 300.17819214]
[223.22787476 315.17819214]
[223.22787476 330.17819214]
[223.22787476 345.17819214]
[223.22787476 360.17819214]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 113]
[12 108]
[13 107]
[14 106]
[15 105]
[16 104]
[18 103]
[19 102]
[20 101]
[21 100]
[23 33]
[24 32]
[25 31]
[34 47]
[35 46]
[36 45]
[37 44]
[38 43]
[49 99]
[50 98]
[51 97]
[52 95]
[53 94]
[54 93]
[82 92]
[83 91]
[84 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
