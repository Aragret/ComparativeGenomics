%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGCUUAGCCCUAAACCUCAACAGUUAAAUCAACAAAACUGCUCGCCAGAACACUACGAGCCxxxxxxxxxxGCAAAACCCCACUCUGCAUCAACUGAACGCAAAUCAGCCACUUUAAUUAAGCUAAGCCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[196.47885132 379.39700317]
[196.16679382 364.40026855]
[195.85473633 349.40350342]
[195.54267883 334.40673828]
[195.23062134 319.41000366]
[194.91856384 304.41323853]
[194.60650635 289.41647339]
[194.29444885 274.41973877]
[193.98239136 259.42297363]
[190.42764282 244.85028076]
[183.79913330 231.39431763]
[177.17063904 217.93833923]
[170.54214478 204.48237610]
[162.55223083 191.78744507]
[153.28727722 179.99081421]
[144.02232361 168.19416809]
[130.74336243 175.12161255]
[116.41764069 179.49133301]
[101.53295135 181.15454102]
[86.59606171 180.05462646]
[72.11554718 176.22904968]
[58.58443069 169.80802917]
[46.46342468 161.01020813]
[36.16521835 150.13513184]
[28.04044151 137.55305481]
[22.36572456 123.69239044]
[19.33428001 109.02505493]
[19.04932022 94.05043030]
[21.52054787 79.27838135]
[26.66382217 65.21185303]
[34.30402756 52.32978439]
[44.18103409 41.07077789]
[34.91608429 29.27413940]
[25.65113640 17.47749901]
[11.91040611 24.48471260]
[-2.92473078 28.69000435]
[-18.28938293 29.93511200]
[-33.59886169 28.17446327]
[-48.27092361 23.47682571]
[-61.74792099 16.02263641]
[-73.51799011 6.09706259]
[-83.13451385 -5.92090368]
[-90.23302460 -19.57291603]
[-94.54506683 -34.33875656]
[-95.90830231 -49.65615845]
[-94.27267456 -64.94220734]
[-89.70219421 -79.61554718]
[-82.37246704 -93.11846161]
[-72.56391907 -104.93810272]
[-82.07228088 -116.53944397]
[-91.58063507 -128.14077759]
[-101.08899689 -139.74212646]
[-110.59735107 -151.34346008]
[-123.37237549 -153.40565491]
[-131.05050659 -163.31855774]
[-129.92619324 -175.40338135]
[-139.19114685 -187.20002747]
[-154.60487366 -192.79904175]
[-157.19601440 -208.99220276]
[-144.29902649 -219.12135315]
[-129.18122864 -212.76649475]
[-127.39450836 -196.46498108]
[-118.12955475 -184.66833496]
[-101.52975464 -179.06060791]
[-98.99600983 -160.85182190]
[-89.48765564 -149.25048828]
[-79.97929382 -137.64913940]
[-70.47093964 -126.04779816]
[-60.96257782 -114.44645691]
[-48.14330292 -121.44656372]
[-34.24780273 -125.95998383]
[-19.75367355 -127.82999420]
[-5.15938854 -126.99074554]
[9.03285313 -123.46958160]
[22.33440399 -117.38616943]
[34.28699493 -108.94841766]
[44.47851562 -98.44538116]
[52.55724335 -86.23734283]
[58.24394989 -72.74348450]
[61.34158325 -58.42745972]
[61.74208450 -43.78148651]
[59.43013763 -29.30941010]
[54.48378754 -15.50938129]
[47.07176971 -2.85670018]
[37.44777679 8.21255016]
[46.71272659 20.00918961]
[55.97767258 31.80583000]
[69.25664520 24.87839127]
[83.58235931 20.50867462]
[98.46704865 18.84545517]
[113.40393829 19.94536591]
[127.88445282 23.77095604]
[141.41557312 30.19197273]
[153.53657532 38.98979568]
[163.83477783 49.86487579]
[171.95956421 62.44694519]
[177.63427734 76.30760956]
[180.66572571 90.97494507]
[180.95068359 105.94956970]
[178.47944641 120.72161865]
[173.33618164 134.78814697]
[165.69596863 147.67021179]
[155.81896973 158.92921448]
[165.08390808 170.72586060]
[174.34886169 182.52250671]
[174.46488953 167.52294922]
[181.94618225 154.52177429]
[194.85621643 146.88430786]
[209.85327148 146.58746338]
[223.05541992 153.70809937]
[231.04531860 166.40304565]
[231.75479126 181.38626099]
[225.00021362 194.77937317]
[212.52998352 203.11563110]
[197.57197571 204.23722839]
[183.99810791 197.85388184]
[190.62660217 211.30984497]
[197.25509644 224.76580811]
[203.88360596 238.22177124]
[205.19496155 223.27920532]
[210.41748047 209.21772766]
[219.17808533 197.04185486]
[230.85092163 187.62139893]
[244.60211182 181.62934875]
[259.44931030 179.49375916]
[274.33184814 181.36720276]
[288.18658447 187.11581421]
[300.02371216 196.32894897]
[308.99768066 208.34844971]
[314.46734619 222.31564331]
[316.04202271 237.23275757]
[313.60916138 252.03416443]
[307.34262085 265.66244507]
[297.69000244 277.14407349]
[285.34094238 285.65878296]
[271.17758179 290.59829712]
[256.21173096 291.60980225]
[241.51249695 288.62100220]
[228.12998962 281.84539795]
[217.02023315 271.76705933]
[208.97915649 259.11093140]
[209.29121399 274.10766602]
[209.60327148 289.10443115]
[209.91531372 304.10119629]
[210.22737122 319.09793091]
[210.53942871 334.09469604]
[210.85148621 349.09143066]
[211.16354370 364.08819580]
[211.47560120 379.08496094]
[214.06660461 398.29266357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 119]
[11 118]
[12 117]
[13 116]
[14 105]
[15 104]
[16 103]
[32 87]
[33 86]
[34 85]
[49 69]
[50 68]
[51 67]
[52 66]
[53 65]
[56 63]
[57 62]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
