%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCGUCACCCUCCUCAAGUAUACUUCAAAGGACAUUUAACUAAAACCCCUACGCAUUUAUAxxxxxxxxxxCCCGCCGGAGGAGGAGACCCCAUUCUAUACCAACACCUAUUCUGAUUUUUCGGUCACCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[102.79898834 267.91937256]
[102.79898834 252.91935730]
[102.79898834 237.91935730]
[102.79898834 222.91935730]
[102.79898834 207.91935730]
[102.79898834 192.91935730]
[102.79898834 177.91935730]
[102.79898834 162.91935730]
[102.79898834 147.91935730]
[102.79898834 132.91935730]
[82.58991241 124.83849335]
[73.32501984 107.18967438]
[77.37763214 89.54538727]
[66.28631592 79.44673920]
[55.19499969 69.34809113]
[42.25594330 69.16166687]
[33.22052002 60.46798706]
[32.57913971 48.34792328]
[21.70031548 38.02071762]
[10.82149029 27.69351196]
[-0.05733540 17.36630821]
[-10.93616104 7.03910303]
[-21.81498528 -3.28810191]
[-32.69380951 -13.61530685]
[-44.03134537 -3.77580357]
[-56.26561356 4.92352104]
[-69.28237915 12.40144157]
[-82.96010590 18.58813858]
[-97.17109680 23.42584419]
[-111.78264618 26.86939049]
[-126.65834045 28.88662529]
[-141.65928650 29.45871353]
[-156.64541626 28.58031464]
[-171.47679138 26.25963020]
[-186.01495361 22.51832581]
[-200.12416077 17.39133644]
[-213.67265320 10.92653084]
[-226.53395081 3.18427229]
[-238.58795166 -5.76315117]
[-249.72213745 -15.83219719]
[-259.83251953 -26.92885208]
[-268.82470703 -38.94950867]
[-276.61471558 -51.78192520]
[-283.12985229 -65.30628967]
[-288.30929565 -79.39632416]
[-292.10461426 -93.92047882]
[-294.48043823 -108.74312592]
[-295.41455078 -123.72588348]
[-294.89825439 -138.72885132]
[-292.93634033 -153.61193848]
[-289.54714966 -168.23619080]
[-284.76232910 -182.46507263]
[-278.62652588 -196.16571045]
[-271.19708252 -209.21020508]
[-262.54330444 -221.47673035]
[-252.74603271 -232.85076904]
[-241.89672852 -243.22613525]
[-230.09667969 -252.50593567]
[-217.45610046 -260.60354614]
[-204.09298706 -267.44332886]
[-190.13211060 -272.96142578]
[-175.70384216 -277.10635376]
[-160.94287109 -279.83935547]
[-145.98703003 -281.13497925]
[-130.97598267 -280.98107910]
[-116.04985809 -279.37908936]
[-101.34803009 -276.34399414]
[-87.00777435 -271.90411377]
[-73.16297913 -266.10089111]
[-59.94291306 -258.98855591]
[-47.47101212 -250.63348389]
[-35.86373138 -241.11369324]
[-25.22943878 -230.51806641]
[-15.66743183 -218.94552612]
[-7.26698923 -206.50415039]
[-0.10654496 -193.31007385]
[5.74704361 -179.48649597]
[10.23912239 -165.16250610]
[13.32774830 -150.47183228]
[14.98408318 -135.55165100]
[15.19266224 -120.54125214]
[13.95153713 -105.58079529]
[11.27229786 -90.80997467]
[7.17995882 -76.36669922]
[1.71273041 -62.38581848]
[-5.07834005 -48.99788284]
[-13.12984467 -36.32788849]
[-22.36660576 -24.49413300]
[-11.48778057 -14.16692734]
[-0.60895568 -3.83972216]
[10.26986980 6.48748255]
[21.14869499 16.81468773]
[32.02751923 27.14189339]
[42.90634537 37.46909714]
[60.14422226 40.60845184]
[65.29364777 58.25677490]
[76.38496399 68.35542297]
[87.47628021 78.45407104]
[105.22990417 72.87263489]
[123.89975739 81.32211304]
[132.99066162 101.77044678]
[147.98336792 101.30240631]
[151.77140808 86.67957306]
[159.52693176 73.71698761]
[170.62121582 63.46547318]
[184.15490723 56.75607681]
[199.03086853 54.13269424]
[214.04319763 55.80799484]
[227.97491455 61.64616776]
[239.69660950 71.17394257]
[248.25807190 83.61893463]
[252.96527100 97.97229767]
[253.43661499 113.07045746]
[249.63386536 127.68948364]
[241.86532593 140.64427185]
[230.76075745 150.88462830]
[217.22033691 157.58042908]
[202.34173584 160.18887329]
[187.33110046 158.49848938]
[173.40525818 152.64631653]
[161.69314575 143.10678101]
[153.14418030 130.65318298]
[148.45140076 116.29510498]
[133.45870972 116.76314545]
[146.84042358 123.54028320]
[160.22215271 130.31741333]
[173.60386658 137.09455872]
[188.33561707 139.91864014]
[200.54692078 148.62980652]
[208.01202393 161.64025879]
[209.37030029 176.57864380]
[204.37417603 190.72215271]
[193.93428040 201.49287415]
[179.95347595 206.92765808]
[164.97999573 206.03593445]
[151.74305725 198.98020935]
[142.65528870 187.04653931]
[139.37313843 172.41056824]
[132.18176270 159.24684143]
[124.99037170 146.08309937]
[117.79898834 132.91935730]
[117.79898834 147.91935730]
[117.79898834 162.91935730]
[117.79898834 177.91935730]
[117.79898834 192.91935730]
[117.79898834 207.91935730]
[117.79898834 222.91935730]
[117.79898834 237.91935730]
[117.79898834 252.91935730]
[117.79898834 267.91937256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[13 98]
[14 97]
[15 96]
[18 94]
[19 93]
[20 92]
[21 91]
[22 90]
[23 89]
[24 88]
[101 124]
[102 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
