%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAAUGAUAACCAUACACAACACUAAAGGACGAACCUGAUCUCUUAUACUAGUAUCCUUAAxxxxxxxxxxAACUGCUAACUCAUGCCCCCAUGUCUAACAACAUGGCUUUCUCAACUUUUAAAGGAUAACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[129.22923279 386.54815674]
[129.22923279 371.54815674]
[129.22923279 356.54815674]
[129.22923279 341.54815674]
[129.22923279 326.54815674]
[129.22923279 311.54815674]
[129.22923279 296.54815674]
[129.22923279 281.54815674]
[129.22923279 266.54815674]
[129.22923279 251.54814148]
[127.67164612 236.62924194]
[124.57332611 221.95271301]
[121.47499847 207.27618408]
[117.92024231 192.70347595]
[113.91249847 178.24879456]
[109.90476227 163.79411316]
[99.04823303 153.59680176]
[102.81708527 138.23104858]
[98.80934143 123.77635193]
[79.10044861 111.39919281]
[79.36556244 88.12765503]
[69.38283539 76.93189240]
[59.40010834 65.73612213]
[47.35817719 74.69656372]
[34.57143402 82.55766296]
[21.13996124 89.25790405]
[7.16887569 94.74482727]
[-7.23247766 98.97550964]
[-21.95138550 101.91682434]
[-36.87265396 103.54576111]
[-51.87949371 103.84957123]
[-66.85446167 102.82587433]
[-81.68035126 100.48267365]
[-96.24113464 96.83832550]
[-110.42284393 91.92134094]
[-124.11448669 85.77020264]
[-137.20890808 78.43305206]
[-149.60362244 69.96732330]
[-161.20162964 60.43926620]
[-171.91215515 49.92344666]
[-181.65136719 38.50217819]
[-190.34303284 26.26484108]
[-197.91915894 13.30721378]
[-204.32041931 -0.26929131]
[-209.49671936 -14.35841751]
[-213.40756226 -28.84989548]
[-216.02232361 -43.63031006]
[-217.32055664 -58.58397675]
[-217.29208374 -73.59387207]
[-215.93713379 -88.54250336]
[-213.26631165 -103.31289673]
[-209.30052185 -117.78942871]
[-204.07080078 -131.85881042]
[-197.61808777 -145.41093445]
[-189.99285889 -158.33973694]
[-181.25482178 -170.54400635]
[-171.47235107 -181.92825317]
[-160.72201538 -192.40335083]
[-149.08795166 -201.88734436]
[-136.66120911 -210.30599976]
[-123.53904724 -217.59341431]
[-109.82416534 -223.69256592]
[-95.62390137 -228.55570984]
[-81.04940033 -232.14479065]
[-66.21472931 -234.43173218]
[-51.23598099 -235.39860535]
[-36.23040009 -235.03787231]
[-21.31542206 -233.35234070]
[-6.60777712 -230.35519409]
[7.77742243 -226.06991577]
[21.72759247 -220.53002930]
[35.13354874 -213.77888489]
[47.89037704 -205.86932373]
[59.89822769 -196.86326599]
[71.06312561 -186.83119202]
[81.29768372 -175.85159302]
[90.52181244 -164.01043701]
[98.66330719 -151.40037537]
[105.65844727 -138.12010193]
[111.45249939 -124.27356720]
[116.00010681 -109.96913147]
[119.26567841 -95.31874847]
[121.22365570 -80.43708038]
[121.85871887 -65.44060516]
[121.16589355 -50.44668579]
[119.15059662 -35.57267380]
[115.82861328 -20.93498230]
[111.22593689 -6.64816999]
[105.37859344 7.17594481]
[98.33233643 20.42916870]
[90.14232635 33.00777435]
[80.87265015 44.81331635]
[70.59587097 55.75339890]
[80.57859802 66.94916534]
[90.56132507 78.14492798]
[98.73881531 76.22727966]
[107.07331085 77.26894379]
[114.52729034 81.14023590]
[120.17286682 87.35926056]
[134.74555969 83.80449677]
[149.31826782 80.24974060]
[163.89097595 76.69497681]
[178.46366882 73.14021301]
[193.03637695 69.58544922]
[201.02976990 55.95162582]
[216.34339905 52.04413605]
[229.89195251 60.18122864]
[233.63731384 75.53530884]
[225.35743713 88.99707794]
[209.96461487 92.57989502]
[196.59114075 84.15815735]
[182.01843262 87.71291351]
[167.44573975 91.26767731]
[152.87303162 94.82244110]
[138.30032349 98.37720490]
[123.72762299 101.93196106]
[122.10112000 108.84721375]
[118.50656128 114.97464752]
[113.26403046 119.76861572]
[117.27177429 134.22329712]
[128.41496277 145.45451355]
[124.35945129 159.78636169]
[128.36718750 174.24105835]
[132.37492371 188.69573975]
[136.19650269 192.43942261]
[137.97671509 196.84205627]
[137.81228638 200.99833679]
[136.15151978 204.17785645]
[139.24984741 218.85438538]
[142.34817505 233.53091431]
[149.08055115 220.12661743]
[161.53695679 211.76971436]
[176.49308777 210.62335205]
[190.07760620 216.98426819]
[198.77416992 229.20596313]
[200.33172607 244.12487793]
[194.34709167 257.87930298]
[182.36938477 266.90893555]
[167.49899292 268.87652588]
[153.58506775 263.27270508]
[144.22923279 251.54814148]
[144.22923279 266.54815674]
[144.22923279 281.54815674]
[144.22923279 296.54815674]
[144.22923279 311.54815674]
[144.22923279 326.54815674]
[144.22923279 341.54815674]
[144.22923279 356.54815674]
[144.22923279 371.54815674]
[144.22923279 386.54815674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 130]
[12 129]
[13 128]
[14 124]
[15 123]
[16 122]
[18 120]
[19 119]
[21 95]
[22 94]
[23 93]
[99 116]
[100 115]
[101 114]
[102 113]
[103 112]
[104 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
