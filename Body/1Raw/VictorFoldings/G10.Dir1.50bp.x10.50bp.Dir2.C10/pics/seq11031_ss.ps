%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAACCUCCCUCACCAUUGGCAGCCUAGCAUUAGCAGGAAUACCUUUCCUCACAGGUUUCUACUxxxxxxxxxxCGCAAACAUAUCAUACACAAACGCCUGAGCCCUAUCUAUUACUCUCAUCGCUACCUCCCUGACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[31.24223900 241.42086792]
[24.04751778 254.58277893]
[24.21747017 270.40307617]
[11.32368088 277.85958862]
[4.12895918 291.02148438]
[-3.06576204 304.18341064]
[-10.26048279 317.34533691]
[-17.45520401 330.50723267]
[-24.64992523 343.66915894]
[-31.84464645 356.83105469]
[-30.92111206 373.20419312]
[-44.78528595 381.96298218]
[-59.17490005 374.09716797]
[-59.28714752 357.69842529]
[-45.00656128 349.63635254]
[-37.81184006 336.47442627]
[-30.61711884 323.31253052]
[-23.42239761 310.15060425]
[-16.22767639 296.98867798]
[-9.03295517 283.82678223]
[-1.83823359 270.66485596]
[-2.52280092 255.78599548]
[10.88560390 247.38806152]
[18.08032608 234.22615051]
[-3.52613425 218.36312866]
[-22.12457085 199.06100464]
[-37.17459488 176.88056946]
[-48.23891449 152.46633911]
[-54.99605179 126.52764893]
[-57.24967194 99.81818390]
[-54.93429184 73.11400604]
[-48.11719131 47.19101334]
[-61.98970032 41.48543930]
[-75.86220551 35.77986908]
[-89.73471832 30.07430077]
[-108.74417114 41.32558823]
[-132.21759033 30.71877480]
[-147.19882202 29.96870804]
[-161.53843689 37.92531967]
[-175.45768738 29.25431824]
[-174.63766479 12.87568569]
[-159.92192078 5.63835621]
[-146.44876099 14.98747349]
[-131.46752930 15.73754025]
[-127.32014465 1.32229793]
[-140.40942383 -6.00374699]
[-153.49868774 -13.32979202]
[-166.58796692 -20.65583611]
[-179.67723083 -27.98188210]
[-195.44537354 -25.02461624]
[-207.49407959 -35.61745834]
[-206.58061218 -51.63448334]
[-193.40571594 -60.78880310]
[-178.07603455 -56.05800629]
[-172.35119629 -41.07115555]
[-159.26191711 -33.74510956]
[-146.17263794 -26.41906548]
[-133.08337402 -19.09301949]
[-119.99409485 -11.76697540]
[-104.77142334 -13.03240395]
[-91.96179962 -6.85646343]
[-84.65990448 4.10133791]
[-84.02914429 16.20179176]
[-70.15663910 21.90736389]
[-56.28413010 27.61293411]
[-42.41162109 33.31850433]
[-37.44601059 23.60572052]
[-31.81897354 14.26056671]
[-25.55758667 5.32801437]
[-18.69198036 -3.14895010]
[-11.25519753 -11.12953377]
[-3.28302360 -18.57533073]
[5.18617630 -25.45051193]
[14.11164665 -31.72199059]
[23.45043564 -37.35958862]
[33.15760040 -42.33617020]
[43.18643188 -46.62779617]
[53.48866272 -50.21380615]
[64.01471710 -53.07694626]
[74.71395111 -55.20344162]
[85.53485870 -56.58304977]
[96.42538452 -57.20914078]
[107.33310699 -57.07870102]
[118.20554352 -56.19235229]
[128.99037170 -54.55436325]
[139.63568115 -52.17261505]
[150.09025574 -49.05857086]
[160.30378723 -45.22721863]
[170.22712708 -40.69699097]
[179.81250000 -35.48969269]
[189.01379395 -29.63038063]
[197.78674316 -23.14725113]
[206.08911133 -16.07150269]
[213.88093567 -8.43718815]
[221.12474060 -0.28104281]
[227.78567505 8.35768223]
[233.83164978 17.43741417]
[239.23359680 26.91446114]
[243.96551514 36.74321365]
[248.00463867 46.87637711]
[251.33151245 57.26518631]
[253.93014526 67.85964966]
[255.78802490 78.60877228]
[256.89620972 89.46084595]
[257.24935913 100.36363220]
[272.23059082 101.11370087]
[282.33493042 93.03844452]
[294.83074951 94.00484467]
[303.02972412 102.94644928]
[317.99295044 103.99611664]
[332.95617676 105.04579163]
[347.91940308 106.09546661]
[354.67373657 92.47755432]
[366.12854004 82.48477173]
[380.53707886 77.64094543]
[395.70211792 78.68473816]
[409.31115723 85.45696259]
[419.28884888 96.92491150]
[424.11370850 111.33979797]
[423.04998779 126.50347137]
[416.25985718 140.10357666]
[404.77880859 150.06617737]
[390.35757446 154.87208557]
[375.19531250 153.78839111]
[361.60415649 146.98039246]
[351.65664673 135.48623657]
[346.86975098 121.05869293]
[331.90649414 120.00901794]
[316.94326782 118.95935059]
[301.98004150 117.90967560]
[286.67636108 126.44940186]
[271.48052979 116.09493256]
[256.49929810 115.34486389]
[254.85453796 127.34164429]
[252.29153442 139.17630005]
[248.82546997 150.77864075]
[244.47691345 162.07989502]
[239.27165222 173.01301575]
[233.24053955 183.51318359]
[226.41934204 193.51814270]
[218.84849548 202.96856689]
[210.57292175 211.80841064]
[201.64167786 219.98526001]
[192.10771179 227.45062256]
[182.02758789 234.16023254]
[171.46104431 240.07431030]
[160.47076416 245.15777588]
[149.12190247 249.38049316]
[137.48175049 252.71742249]
[125.61935425 255.14877319]
[113.60504150 256.66012573]
[101.51004791 257.24252319]
[89.40610504 256.89251709]
[77.36497498 255.61216736]
[65.45806885 253.40908813]
[53.75598907 250.29632568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 24]
[2 23]
[4 21]
[5 20]
[6 19]
[7 18]
[8 17]
[9 16]
[10 15]
[32 66]
[33 65]
[34 64]
[35 63]
[37 44]
[38 43]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[105 133]
[106 132]
[109 130]
[110 129]
[111 128]
[112 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
