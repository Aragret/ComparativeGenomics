%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUCCCUGUACGAAAGGACAAGAGAAAUAAGGCCUACUUCACAAAGCGCCUUCCCCCGUAAxxxxxxxxxxAAUAUCACUCUCCUACUUACAGGACUCAACAUACUAGUCACAGCCCUAUACUCCCUCUACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[114.86034393 297.45791626]
[113.92471313 282.48712158]
[112.98908234 267.51632690]
[112.05345917 252.54553223]
[111.11782837 237.57473755]
[110.18219757 222.60394287]
[109.24657440 207.63314819]
[106.14824677 192.95663452]
[100.95283508 178.88510132]
[95.75741577 164.81358337]
[90.56200409 150.74206543]
[85.36658478 136.67054749]
[76.15029907 110.00000000]
[88.71205902 95.26666260]
[78.96440887 83.86563873]
[69.21675110 72.46462250]
[59.46910095 61.06359863]
[49.72145081 49.66257858]
[39.97379684 38.26155853]
[25.12497139 32.80052185]
[22.73511124 18.09889412]
[9.91995144 16.30291557]
[2.03726530 6.55190372]
[2.90991449 -5.55370665]
[-6.59844398 -17.15504837]
[-16.10680199 -28.75638962]
[-25.61516190 -40.35773087]
[-30.62384033 -42.23728561]
[-34.03170395 -45.54467392]
[-35.56126404 -49.41276550]
[-35.32739258 -52.99225998]
[-44.09359741 -65.16410065]
[-52.85980606 -77.33593750]
[-68.20660400 -80.00304413]
[-76.92339325 -92.47190094]
[-74.28613281 -107.08628845]
[-83.05233765 -119.25812531]
[-94.35134888 -129.12385559]
[-107.59393311 -136.16899109]
[-120.83651733 -143.21412659]
[-134.07910156 -150.25924683]
[-147.32168579 -157.30438232]
[-160.63684082 -164.21139526]
[-174.02313232 -170.97950745]
[-187.27000427 -163.07229614]
[-202.68817139 -163.60498047]
[-215.35774231 -172.40756226]
[-221.23591614 -186.67117310]
[-218.44697571 -201.84434509]
[-207.88085938 -213.08538818]
[-192.90919495 -216.80731201]
[-178.30937195 -211.82246399]
[-168.74014282 -199.72149658]
[-167.25502014 -184.36578369]
[-153.86872864 -177.59767151]
[-146.43229675 -177.38499451]
[-140.27655029 -170.54698181]
[-127.03396606 -163.50184631]
[-113.79138184 -156.45671082]
[-100.54879761 -149.41157532]
[-87.30621338 -142.36643982]
[-94.98302460 -155.25311279]
[-99.13374329 -169.66740417]
[-99.48594666 -184.66326904]
[-96.01652527 -199.25651550]
[-88.95317841 -212.48939514]
[-78.75946808 -223.49340820]
[-66.10443115 -231.54637146]
[-51.81862640 -236.11973572]
[-36.83963394 -236.91336060]
[-22.15054512 -233.87515259]
[-8.71541500 -227.20452881]
[2.58399773 -217.33927917]
[11.00610352 -204.92684937]
[15.99815178 -190.78190613]
[17.23251152 -175.83279419]
[14.62816906 -161.06060791]
[8.35605049 -147.43487549]
[-1.17219961 -135.84986877]
[-13.33123493 -127.06591034]
[-27.32304764 -121.65950775]
[-42.22934341 -119.98548889]
[-57.07180786 -122.15370941]
[-70.88050079 -128.02433777]
[-62.11429596 -115.85249329]
[-47.41744614 -113.72220612]
[-38.35387039 -101.50310516]
[-40.68796921 -86.10214233]
[-31.92176056 -73.93030548]
[-23.15555382 -61.75846863]
[-14.01381969 -49.86608887]
[-4.50546122 -38.26474762]
[5.00289726 -26.66340637]
[14.51125526 -15.06206512]
[31.22412682 -9.80089474]
[34.13613129 8.35124302]
[48.28774261 12.99680138]
[51.37482071 28.51390648]
[61.12247086 39.91492844]
[70.87012482 51.31594849]
[80.61777496 62.71696854]
[90.36542511 74.11798859]
[100.11308289 85.51901245]
[114.01563263 91.15097046]
[128.94993591 89.74866486]
[143.88424683 88.34635925]
[150.88360596 74.59817505]
[164.21617126 66.83633423]
[179.62759399 67.53762817]
[192.20011902 76.47825623]
[197.92192078 90.80531311]
[194.96719360 105.94708252]
[184.27876282 117.07187653]
[169.26727295 120.62981415]
[154.72285461 115.48558044]
[145.28656006 103.28067017]
[130.35224915 104.68296814]
[115.41793823 106.08527374]
[111.42298126 112.43273926]
[118.42218018 125.69966125]
[103.43306732 125.12767029]
[99.43810272 131.47512817]
[104.63352203 145.54664612]
[109.82893372 159.61817932]
[115.02435303 173.68969727]
[120.21976471 187.76121521]
[123.70554352 173.17185974]
[132.42233276 160.96456909]
[145.09019470 152.93183899]
[159.84907532 150.25311279]
[174.53184509 153.32173157]
[186.98254395 161.68713379]
[195.37301636 174.12095642]
[198.47120667 188.79751587]
[195.82221985 203.56175232]
[187.81501770 216.24578857]
[175.62532043 224.98715210]
[161.04301453 228.50230408]
[146.20927429 226.27510071]
[133.30223083 218.63258362]
[124.21736145 206.69752502]
[125.15299225 221.66831970]
[126.08862305 236.63911438]
[127.02424622 251.60989380]
[127.95987701 266.58068848]
[128.89550781 281.55148315]
[129.83113098 296.52227783]
[139.34646606 309.87857056]
[132.29202271 324.68286133]
[115.92480469 325.70574951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 147]
[2 146]
[3 145]
[4 144]
[5 143]
[6 142]
[7 141]
[8 126]
[9 125]
[10 124]
[11 123]
[12 122]
[14 103]
[15 102]
[16 101]
[17 100]
[18 99]
[19 98]
[21 96]
[24 94]
[25 93]
[26 92]
[27 91]
[31 90]
[32 89]
[33 88]
[36 85]
[37 84]
[38 61]
[39 60]
[40 59]
[41 58]
[42 57]
[43 55]
[44 54]
[104 118]
[105 117]
[106 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
