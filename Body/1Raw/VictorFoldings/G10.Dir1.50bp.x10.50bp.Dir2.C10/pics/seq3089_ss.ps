%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUACUUCACAAAGCGCCUUCCCCCGUAAAUGAUAUCAUCUCAACUUAGUAUUAUACCCAxxxxxxxxxxCUCCACCCCUGACUCCCCUCAGCCAUAGAAGGCCCCACCCCAGUCUCAGCCCUACUCCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[114.43364716 162.39791870]
[125.20767212 151.89472961]
[116.95538330 139.36877441]
[108.70309448 126.84281158]
[100.45080566 114.31684875]
[88.03858948 107.88035583]
[87.02323151 93.93544006]
[78.77094269 81.40947723]
[70.51865387 68.88351440]
[62.26636505 56.35755539]
[54.01407623 43.83159256]
[45.76178741 31.30562973]
[37.50949860 18.77966881]
[23.45615387 11.51233482]
[22.91535378 -3.37244892]
[14.66306496 -15.89841080]
[1.59811604 -8.51709270]
[-11.94009590 -2.04456997]
[-25.88845062 3.48897958]
[-40.18191147 8.05775547]
[-54.75383759 11.64045620]
[-69.53628540 14.22037792]
[-84.46032715 15.78549004]
[-99.45639038 16.32849693]
[-114.45455170 15.84686470]
[-129.38487244 14.34284115]
[-144.17776489 11.82343864]
[-158.76422119 8.30040264]
[-173.07626343 3.79015970]
[-187.04714966 -1.68626058]
[-200.61174011 -8.10332489]
[-213.70678711 -15.43111324]
[-226.27122498 -23.63545990]
[-238.24650574 -32.67811203]
[-249.57676697 -42.51691055]
[-260.20919800 -53.10597992]
[-270.09420776 -64.39595032]
[-279.18569946 -76.33417511]
[-287.44131470 -88.86499786]
[-294.82254028 -101.93000031]
[-301.29498291 -115.46825409]
[-306.82843018 -129.41664124]
[-311.39712524 -143.71012878]
[-314.97970581 -158.28208923]
[-317.55953979 -173.06454468]
[-319.12454224 -187.98860168]
[-319.66744995 -202.98468018]
[-319.18572998 -217.98283386]
[-317.68161011 -232.91314697]
[-315.16210938 -247.70600891]
[-311.63897705 -262.29244995]
[-307.12863159 -276.60446167]
[-301.65209961 -290.57531738]
[-295.23495483 -304.13986206]
[-287.90707397 -317.23486328]
[-279.70263672 -329.79925537]
[-270.65991211 -341.77444458]
[-260.82104492 -353.10464478]
[-250.23190308 -363.73699951]
[-238.94186401 -373.62194824]
[-227.00358582 -382.71334839]
[-214.47270203 -390.96890259]
[-201.40765381 -398.35003662]
[-187.86935425 -404.82238770]
[-173.92092896 -410.35574341]
[-159.62739563 -414.92431641]
[-145.05543518 -418.50683594]
[-130.27294922 -421.08654785]
[-115.34887695 -422.65145874]
[-100.35281372 -423.19427490]
[-85.35466003 -422.71243286]
[-70.42435455 -421.20822144]
[-55.63150406 -418.68859863]
[-41.04508591 -415.16537476]
[-26.73310661 -410.65493774]
[-12.76229763 -405.17834473]
[0.80220342 -398.76107788]
[13.89715195 -391.43313599]
[26.46149254 -383.22860718]
[38.43664551 -374.18579102]
[49.76677322 -364.34683228]
[60.39905167 -353.75762939]
[70.28391266 -342.46752930]
[79.37525177 -330.52917480]
[87.63069916 -317.99826050]
[95.01175690 -304.93316650]
[101.48400879 -291.39480591]
[107.01727295 -277.44635010]
[111.58576202 -263.15280151]
[115.16817474 -248.58079529]
[117.74779510 -233.79829407]
[119.31260681 -218.87422180]
[119.85531616 -203.87814331]
[119.37338257 -188.87998962]
[117.86905670 -173.94969177]
[115.34935760 -159.15686035]
[111.82602692 -144.57048035]
[107.31549835 -130.25852966]
[101.83879089 -116.28775024]
[95.42145538 -102.72329712]
[88.09340668 -89.62839508]
[79.88880157 -77.06410980]
[70.84590912 -65.08901978]
[61.00688553 -53.75895309]
[50.41760254 -43.12674713]
[39.12743759 -33.24196625]
[27.18902779 -24.15069962]
[35.44131470 -11.62473774]
[48.90439987 -5.25334597]
[50.03545761 10.52737904]
[58.28774643 23.05334091]
[66.54003906 35.57930374]
[74.79232788 48.10526657]
[83.04461670 60.63122559]
[91.29690552 73.15718842]
[99.54919434 85.68315125]
[111.96141052 92.11964417]
[112.97676849 106.06455994]
[121.22905731 118.59052277]
[129.48135376 131.11648560]
[137.73364258 143.64244080]
[151.63635254 137.88822937]
[166.37687683 134.86935425]
[181.42233276 134.69497681]
[196.22886658 137.37138367]
[210.26121521 142.80183411]
[223.01211548 150.79002380]
[234.02062988 161.04716492]
[242.88882446 173.20248413]
[249.29609680 186.81655884]
[253.01083374 201.39727783]
[253.89875793 216.41754150]
[251.92778015 231.33436584]
[247.16912842 245.60852051]
[239.79483032 258.72402954]
[230.07145691 270.20672607]
[218.35052490 279.64157104]
[205.05572510 286.68746948]
[190.66764832 291.08972168]
[175.70643616 292.68920898]
[160.71289062 291.42807007]
[146.22906494 287.35192871]
[132.77850342 280.60812378]
[120.84744263 271.44042969]
[110.86719513 260.18026733]
[103.19853973 247.23469543]
[98.11868286 233.07165527]
[95.81126404 218.20315552]
[96.35969543 203.16668701]
[99.74414825 188.50578308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 121]
[3 120]
[4 119]
[5 118]
[7 116]
[8 115]
[9 114]
[10 113]
[11 112]
[12 111]
[13 110]
[15 108]
[16 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
