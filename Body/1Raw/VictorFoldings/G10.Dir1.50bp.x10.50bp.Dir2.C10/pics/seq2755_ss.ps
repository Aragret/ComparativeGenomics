%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCCUAACCGUGCAAAGGUAGCAUAAUCACUUGUUCCUUAAAUAGGGACCUGUAUGAAUGGCxxxxxxxxxxUUUUGGUGCAACUCCAAAUAAAAGUAAUAACCAUGCACACUACUAUAACCACCCUAACCCUGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[115.59503937 257.15350342]
[115.59503937 242.15350342]
[115.59503937 227.15350342]
[115.59503937 212.15350342]
[115.59503937 197.15350342]
[115.59503937 182.15350342]
[115.59503937 167.15350342]
[115.59503937 152.15350342]
[115.59503937 137.15350342]
[115.59503937 122.15350342]
[94.72492218 123.89119720]
[81.07633972 110.90552521]
[66.29840088 113.47697449]
[51.52045441 116.04842377]
[36.74250793 118.61986542]
[21.96456337 121.19131470]
[8.18019581 127.10665894]
[-3.86508632 136.04595947]
[-15.91036892 144.98526001]
[-16.66237831 160.60475159]
[-27.31636620 172.05143738]
[-42.84184265 173.92054749]
[-55.90815735 165.32952881]
[-60.34579086 150.33482361]
[-54.05943298 136.01644897]
[-40.01730347 129.13511658]
[-24.84967422 132.93998718]
[-12.80439091 124.00067902]
[-0.75910842 115.06137085]
[-15.68247414 116.57569122]
[-30.52376556 114.39945221]
[-44.38413239 108.66444397]
[-56.42412567 99.71801758]
[-65.91455078 88.10200500]
[-72.28062439 74.51991272]
[-75.13679504 59.79434967]
[-74.31007385 44.81714630]
[-69.85052490 30.49539948]
[-62.02825546 17.69649124]
[-51.31700516 7.19558144]
[-38.36549759 -0.37134767]
[-23.95812988 -4.54600954]
[-8.96748066 -5.07556820]
[5.69855165 -1.92795110]
[19.15172768 4.70620823]
[30.57726288 14.42511463]
[39.28317642 26.64015007]
[44.74219894 40.61151505]
[46.62370682 55.49304581]
[44.81375122 70.38344574]
[39.42194748 84.38088989]
[30.77485085 96.63763428]
[19.39311409 106.41337585]
[34.17105865 103.84192657]
[48.94900513 101.27047729]
[63.72694778 98.69902802]
[78.50489044 96.12757874]
[82.62733459 85.09350586]
[92.22496796 77.35610962]
[104.96888733 75.50721741]
[117.38709259 80.61260986]
[125.81034851 91.76538086]
[134.87126160 79.81130219]
[143.93217468 67.85723114]
[152.62551880 55.63325119]
[160.94326782 43.15066147]
[162.15692139 27.37607193]
[175.65316772 21.07524490]
[183.97091675 8.59265327]
[192.28866577 -3.88993716]
[200.60641479 -16.37252808]
[190.26460266 -27.32026482]
[182.62210083 -40.28870773]
[178.05941772 -54.62582016]
[176.80232239 -69.61158752]
[178.91065979 -84.49416351]
[184.27551270 -98.52761078]
[192.62480164 -111.00925446]
[203.53712463 -121.31489563]
[216.46298218 -128.93002319]
[230.75250244 -133.47549438]
[245.68803406 -134.72639465]
[260.52026367 -132.62319946]
[274.50576782 -127.27458191]
[282.82351685 -139.75717163]
[291.14126587 -152.23976135]
[299.45901489 -164.72235107]
[307.77673340 -177.20494080]
[303.20852661 -192.16040039]
[309.36981201 -206.53303528]
[323.35140991 -213.53654480]
[338.55163574 -209.86407471]
[347.79342651 -197.24964905]
[346.71307373 -181.64942932]
[335.82070923 -170.42935181]
[320.25933838 -168.88719177]
[311.94158936 -156.40460205]
[303.62384033 -143.92201233]
[295.30609131 -131.43942261]
[286.98834229 -118.95683289]
[297.30935669 -108.10886383]
[304.96115112 -95.22987366]
[309.55722046 -80.96414185]
[310.86395264 -66.02613831]
[308.81265259 -51.16476440]
[303.50302124 -37.12579727]
[295.19827271 -24.61446190]
[284.31231689 -14.26000977]
[271.38882446 -6.58407640]
[257.07434082 -1.97439253]
[242.08578491 -0.66520685]
[227.17457581 -2.72538185]
[213.08900452 -8.05478001]
[204.77125549 4.42781019]
[196.45350647 16.91040039]
[188.13575745 29.39299202]
[187.51704407 44.27474213]
[173.42585754 51.46840668]
[165.10810852 63.95100021]
[165.46887207 67.51433563]
[164.08409119 71.42850494]
[160.80873108 74.85373688]
[155.88624573 76.91814423]
[146.82533264 88.87221527]
[137.76441956 100.82629395]
[147.31790161 89.26208496]
[159.79716492 80.93934631]
[174.14466858 76.56336975]
[189.14456177 76.50499725]
[203.52568054 80.76917267]
[216.06935120 88.99452972]
[225.71255493 100.48403168]
[231.63809204 114.26401520]
[233.34382629 129.16671753]
[230.68519592 143.92922974]
[223.88752747 157.30052185]
[213.52684021 168.14747620]
[200.48117065 175.55087280]
[185.85601807 178.88331604]
[170.89080811 177.86242676]
[156.85371399 172.57469177]
[144.93429565 163.46823120]
[136.14265442 151.31475830]
[131.22381592 137.14419556]
[130.59503174 122.15350342]
[130.59503174 137.15350342]
[130.59503174 152.15350342]
[130.59503174 167.15350342]
[130.59503174 182.15350342]
[130.59503174 197.15350342]
[130.59503174 212.15350342]
[130.59503174 227.15350342]
[130.59503174 242.15350342]
[130.59503174 257.15350342]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 154]
[2 153]
[3 152]
[4 151]
[5 150]
[6 149]
[7 148]
[8 147]
[9 146]
[10 145]
[12 57]
[13 56]
[14 55]
[15 54]
[16 53]
[17 29]
[18 28]
[19 27]
[62 125]
[63 124]
[64 123]
[65 119]
[66 118]
[68 116]
[69 115]
[70 114]
[71 113]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
