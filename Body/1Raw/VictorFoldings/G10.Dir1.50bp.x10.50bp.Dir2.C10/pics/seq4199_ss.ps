%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUACACAACAUAUUUUGUCACCAAGACCCUACUUCUAACCUCCCUGUUCUUAUGAAUUCGAxxxxxxxxxxACACUAUGCUUAGGCGCUAUCACCACUCUGUUCGCAGCAGUCUGCGCCCUUACACAAAAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[106.79630280 269.50738525]
[106.79630280 254.50737000]
[106.79630280 239.50737000]
[106.79630280 224.50737000]
[106.79630280 209.50737000]
[106.79630280 194.50737000]
[106.79630280 179.50737000]
[106.79630280 164.50737000]
[106.79630280 149.50737000]
[106.79630280 134.50737000]
[94.55741882 131.13189697]
[85.57003784 124.03946686]
[74.69120789 134.36666870]
[63.81238556 144.69387817]
[59.13072205 159.80654907]
[44.57322311 162.95750427]
[33.69439697 173.28471375]
[29.56087875 189.15437317]
[13.68088722 193.24800110]
[2.39039707 181.35444641]
[7.30409670 165.70875549]
[23.36719322 162.40588379]
[34.24601746 152.07867432]
[38.14955902 137.70468140]
[53.48517990 133.81504822]
[64.36400604 123.48784637]
[75.24282837 113.16064453]
[72.81576538 106.86567688]
[71.96270752 100.17317963]
[72.73303223 93.47064972]
[75.08214569 87.14617920]
[78.87403870 81.56596375]
[70.62174988 69.04000092]
[62.36946106 56.51403809]
[48.98443222 63.31999588]
[34.92153168 68.58448029]
[20.35761070 72.24128723]
[5.47582769 74.24443054]
[-9.53666210 74.56871033]
[-24.49106216 73.21005249]
[-39.19930267 70.18554688]
[-53.47641754 65.53323364]
[-67.14285278 59.31160736]
[-80.02673340 51.59891891]
[-91.96604156 42.49216461]
[-102.81062317 32.10587311]
[-112.42409515 20.57065773]
[-120.68555450 8.03158760]
[-127.49111176 -5.35364294]
[-132.75517273 -19.41670227]
[-136.41154480 -33.98073196]
[-138.41424561 -48.86257553]
[-138.73806763 -63.87507248]
[-137.37896729 -78.82942963]
[-134.35401917 -93.53758240]
[-129.70127869 -107.81455994]
[-123.47924805 -121.48080444]
[-115.76617432 -134.36445618]
[-106.65906525 -146.30349731]
[-96.27244568 -157.14776611]
[-84.73694611 -166.76089478]
[-72.19762421 -175.02197266]
[-58.81219482 -181.82713318]
[-44.74897766 -187.09077454]
[-30.18483734 -190.74670410]
[-15.30293560 -192.74896240]
[-0.29042599 -193.07234192]
[14.66389275 -191.71279907]
[29.37195396 -188.68740845]
[43.64878845 -184.03424072]
[57.31484985 -177.81179810]
[70.19827271 -170.09834290]
[82.13703156 -160.99087524]
[92.98099518 -150.60392761]
[102.59377289 -139.06814575]
[110.85448456 -126.52857208]
[117.65924072 -113.14293671]
[122.92246246 -99.07955933]
[126.57796478 -84.51531219]
[128.57977295 -69.63335419]
[128.90270996 -54.62083435]
[127.54270935 -39.66655731]
[124.51688385 -24.95858574]
[119.86328125 -10.68189049]
[113.64043427 2.98398471]
[105.92658997 15.86717701]
[96.81876373 27.80566597]
[86.43149567 38.64931488]
[74.89542389 48.26174927]
[83.14771271 60.78771210]
[91.40000153 73.31367493]
[119.61423492 75.21900177]
[135.05769348 102.81182098]
[149.95959473 101.09913635]
[164.86151123 99.38644409]
[179.76341248 97.67375183]
[194.66531372 95.96106720]
[198.16699219 93.15042877]
[202.00018311 91.78012848]
[205.65829468 91.77307892]
[208.71490479 92.89163208]
[210.87020874 94.77896118]
[220.29089355 85.90740204]
[232.82949829 85.86138916]
[241.72546387 94.11785889]
[256.72463989 93.96182251]
[271.72384644 93.80578613]
[286.72058105 93.49372864]
[301.71328735 93.02568817]
[316.70599365 92.55764771]
[330.35269165 83.46369934]
[344.92962646 90.97664642]
[345.44134521 107.36780548]
[331.36138916 115.77536011]
[317.17404175 107.55033875]
[302.18133545 108.01837921]
[287.18862915 108.48642731]
[280.55831909 111.86053467]
[271.87988281 108.80496979]
[256.88067627 108.96101379]
[241.88150024 109.11705017]
[227.31881714 118.86016846]
[211.33824158 109.77165985]
[196.37800598 110.86296844]
[181.47608948 112.57566071]
[166.57418823 114.28834534]
[151.67228699 116.00103760]
[136.77038574 117.71372986]
[150.66914368 123.35504913]
[165.63172913 122.29620361]
[179.42848206 128.18258667]
[189.01826477 139.71672058]
[192.28726196 154.35617065]
[188.51490784 168.87406921]
[178.53271484 180.07031250]
[164.54101562 185.47697449]
[149.62388611 183.90229797]
[137.06945801 175.69338989]
[129.64501953 162.65966797]
[128.98768616 147.67111206]
[121.79630280 134.50737000]
[121.79630280 149.50737000]
[121.79630280 164.50737000]
[121.79630280 179.50737000]
[121.79630280 194.50737000]
[121.79630280 209.50737000]
[121.79630280 224.50737000]
[121.79630280 239.50737000]
[121.79630280 254.50737000]
[121.79630280 269.50738525]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 27]
[13 26]
[14 25]
[16 23]
[17 22]
[32 91]
[33 90]
[34 89]
[93 128]
[94 127]
[95 126]
[96 125]
[97 124]
[102 123]
[105 121]
[106 120]
[107 119]
[108 117]
[109 116]
[110 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
