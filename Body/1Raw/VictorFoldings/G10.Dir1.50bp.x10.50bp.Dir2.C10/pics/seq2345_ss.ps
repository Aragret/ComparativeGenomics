%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGUAGGCCUAAAAGCAGCCACCAAUUAAGAAAGCGUUCAAGCUCAACACCCACUACCUAAAxxxxxxxxxxGAACAGUCUACCCUCCCUUAGCAGGGAACUACUCCCACCCUGGAGCCUCCGUAGACCUAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[99.29490662 342.21899414]
[98.98284912 327.22222900]
[98.67079926 312.22549438]
[98.35874176 297.22872925]
[98.04668427 282.23196411]
[97.73462677 267.23522949]
[97.42256927 252.23846436]
[97.11051178 237.24171448]
[96.79846191 222.24496460]
[94.93084717 207.36167908]
[91.52787018 192.75279236]
[86.91748810 186.91412354]
[88.20941162 177.80462646]
[85.11108398 163.12809753]
[82.01276398 148.45158386]
[78.91444397 133.77505493]
[85.77319336 95.35760498]
[76.26483917 83.75626373]
[66.75647736 72.15492249]
[57.24812317 60.55358124]
[44.92161942 69.11496735]
[31.95387459 76.66995239]
[18.42687607 83.17074585]
[4.42614460 88.57626343]
[-9.95979881 92.85232544]
[-24.64000130 95.97190094]
[-39.52164841 97.91526031]
[-54.51065445 98.67011261]
[-69.51225281 98.23169708]
[-84.43159485 96.60278320]
[-99.17434692 93.79366302]
[-113.64731598 89.82209778]
[-127.75898743 84.71320343]
[-141.42015076 78.49927521]
[-154.54441833 71.21960449]
[-167.04882812 62.92021179]
[-178.85430908 53.65357208]
[-189.88623047 43.47827530]
[-200.07484436 32.45864487]
[-209.35574341 20.66436005]
[-217.67022705 8.16998577]
[-224.96574402 -4.94548368]
[-231.19616699 -18.59912682]
[-236.32209778 -32.70461655]
[-240.31112671 -47.17277908]
[-243.13806152 -61.91213226]
[-244.78498840 -76.82949829]
[-245.24151611 -91.83055115]
[-244.50476074 -106.82045746]
[-242.57937622 -121.70444489]
[-239.47753906 -136.38839722]
[-235.21885681 -150.77949524]
[-229.83024597 -164.78674316]
[-223.34579468 -178.32159424]
[-215.80647278 -191.29844666]
[-207.25997925 -203.63528442]
[-197.76033020 -215.25408936]
[-187.36758423 -226.08140564]
[-176.14746094 -236.04879761]
[-164.17088318 -245.09323120]
[-151.51358032 -253.15751648]
[-138.25556946 -260.19070435]
[-124.48069763 -266.14825439]
[-110.27602386 -270.99258423]
[-95.73137665 -274.69302368]
[-80.93869781 -277.22616577]
[-65.99152374 -278.57601929]
[-50.98435593 -278.73406982]
[-36.01207352 -277.69924927]
[-21.16933632 -275.47817993]
[-6.54998732 -272.08483887]
[7.75354481 -267.54071045]
[21.65082550 -261.87451172]
[35.05399323 -255.12210083]
[47.87830353 -247.32614136]
[60.04268265 -238.53590393]
[71.47021484 -228.80700684]
[82.08865356 -218.20092773]
[91.83087158 -206.78474426]
[100.63526154 -194.63061523]
[108.44616699 -181.81539917]
[115.21420288 -168.42010498]
[120.89657593 -154.52943420]
[125.45736694 -140.23121643]
[128.86773682 -125.61582947]
[131.10610962 -110.77568817]
[132.15835571 -95.80461884]
[132.01782227 -80.79727936]
[130.68537903 -65.84854126]
[128.16946411 -51.05292511]
[124.48598480 -36.50397110]
[119.65821838 -22.29366684]
[113.71669769 -8.51185322]
[106.69898224 4.75433636]
[98.64944458 17.42102623]
[89.61897278 29.40813255]
[79.66467285 40.63986969]
[68.84946442 51.04521942]
[78.35781860 62.64656067]
[87.86618042 74.24790192]
[97.37453461 85.84924316]
[111.09458923 91.91225433]
[126.07430267 91.13241577]
[141.05401611 90.35256958]
[156.03373718 89.57272339]
[171.01344299 88.79287720]
[177.35408020 74.86251068]
[189.44929504 65.48358917]
[204.51971436 62.81130600]
[219.10226440 67.45973969]
[229.84596252 78.36071777]
[234.28201294 93.00926971]
[231.39103699 108.03926086]
[221.83734131 119.99692535]
[207.81631470 126.13446045]
[192.54988098 125.04151917]
[179.54615784 116.96924591]
[171.79328918 103.77259064]
[156.81358337 104.55243683]
[141.83386230 105.33228302]
[126.85414886 106.11212921]
[111.87443542 106.89197540]
[107.30357361 112.83816528]
[98.16183472 124.73054504]
[93.59096527 130.67672729]
[96.68929291 145.35325623]
[99.78761292 160.02978516]
[102.88593292 174.70631409]
[106.13675690 189.34980774]
[109.53974152 203.95870972]
[115.99180603 190.41725159]
[128.27166748 181.80302429]
[143.20071411 180.34576416]
[156.91459656 186.42269897]
[165.86354065 198.46081543]
[167.73114014 213.34410095]
[162.03395081 227.22004700]
[150.24667358 236.49691772]
[135.42042542 238.77342224]
[121.39293671 233.46028137]
[111.79521179 221.93290710]
[112.10726929 236.92965698]
[112.41932678 251.92640686]
[112.73138428 266.92315674]
[113.04343414 281.91992188]
[113.35549164 296.91668701]
[113.66754913 311.91342163]
[113.97960663 326.91018677]
[114.29166412 341.90692139]
[116.88265991 361.11465454]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 130]
[11 129]
[13 128]
[14 127]
[15 126]
[16 125]
[17 101]
[18 100]
[19 99]
[20 98]
[102 122]
[103 121]
[104 120]
[105 119]
[106 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
