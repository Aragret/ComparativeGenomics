%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUUCUAGGCUAUAUACAACUACGCAAAGGCCCCAACGUUGUAGGCCCCUACGGGCUACUAxxxxxxxxxxAACUAUCUAUAAACCUAGCCAUGGCCAUCCCCUUAUGAGCGGGCACAGUGAUUAUAGGCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[97.40967560 270.37762451]
[97.40967560 255.37760925]
[97.40967560 240.37760925]
[97.40967560 225.37760925]
[97.40967560 210.37760925]
[97.40967560 195.37760925]
[97.40967560 180.37760925]
[97.40967560 165.37760925]
[97.40967560 150.37760925]
[97.40967560 135.37760925]
[82.70581818 127.68265533]
[74.23647308 114.99424744]
[73.04592133 101.12623596]
[78.19055939 89.63761902]
[67.31173706 79.31041718]
[56.43291092 68.98320770]
[45.55408478 58.65600586]
[34.67526245 48.32880020]
[16.69906616 44.47700882]
[12.31390762 27.51321220]
[1.22259271 17.41456223]
[-9.86872292 7.31591368]
[-20.96003723 -2.78273606]
[-34.92042923 -8.26976776]
[-49.91961670 -8.42580414]
[-64.91880798 -8.58184052]
[-79.91799164 -8.73787689]
[-94.91718292 -8.89391422]
[-109.91636658 -9.04995060]
[-114.96167755 5.22672844]
[-124.37120819 17.09009743]
[-137.12426758 25.25330734]
[-151.83752441 28.83087540]
[-166.91497803 27.43473244]
[-180.72113037 21.21632004]
[-191.75842285 10.85016823]
[-198.82957458 -2.53928161]
[-201.16760254 -17.49964333]
[-198.51885986 -32.40812683]
[-191.17066956 -45.64757156]
[-179.92012024 -55.78186417]
[-165.98757935 -61.71170807]
[-150.88435364 -62.79388428]
[-136.24871826 -58.91099930]
[-123.66822815 -50.48424530]
[-114.50754547 -38.42768860]
[-109.76033020 -24.04913902]
[-94.76114655 -23.89310265]
[-79.76195526 -23.73706627]
[-64.76277161 -23.58102989]
[-49.76358032 -23.42499161]
[-34.76439285 -23.26895523]
[-28.13589287 -36.72492218]
[-37.40084076 -48.52156067]
[-46.66579056 -60.31820297]
[-55.93074036 -72.11483765]
[-65.19568634 -83.91148376]
[-80.60942078 -89.51050568]
[-83.20056152 -105.70365143]
[-70.30356598 -115.83280182]
[-55.18576813 -109.47795105]
[-53.39905167 -93.17642975]
[-44.13410187 -81.37979126]
[-34.86915207 -69.58315277]
[-25.60420227 -57.78651047]
[-16.33925247 -45.98987198]
[-18.81439972 -60.78424835]
[-15.58100319 -75.43161011]
[-8.64253044 -88.73039246]
[1.52160823 -99.76171875]
[14.20912743 -107.76339722]
[28.54339027 -112.18255615]
[43.53397751 -112.71383667]
[58.14512634 -109.32055664]
[71.36727905 -102.23715210]
[82.28687286 -91.95305634]
[90.14940643 -79.17884827]
[94.41163635 -64.79714203]
[94.77906036 -49.80164337]
[91.22628784 -35.22845459]
[83.99880219 -22.08450317]
[73.59598541 -11.27796173]
[60.73660278 -3.55550456]
[46.30917740 0.54929060]
[31.31055832 0.75280493]
[16.77706718 -2.95902324]
[3.71370697 -10.32911301]
[-10.86138821 -13.87405109]
[0.22992682 -3.77540183]
[11.32124233 6.32324743]
[22.41255760 16.42189789]
[34.54716492 16.17979431]
[43.87517166 24.55877304]
[45.00246811 37.44997406]
[55.88129044 47.77717972]
[66.76011658 58.10438538]
[77.63893890 68.43158722]
[88.51776886 78.75879669]
[115.26143646 74.39384460]
[135.47232056 99.99040222]
[150.43257141 101.08171844]
[165.41958618 101.70569611]
[180.41876221 101.86173248]
[194.29867554 94.26840210]
[206.94477844 102.13768005]
[221.94396973 102.29371643]
[227.87467957 88.29746246]
[238.71359253 77.63976288]
[252.80783081 71.94583893]
[268.00814819 72.08397675]
[281.99658203 78.03309631]
[292.64001465 88.88601685]
[298.31539917 102.98773193]
[298.15725708 118.18785095]
[292.18972778 132.16844177]
[281.32284546 142.79759216]
[267.21365356 148.45442200]
[252.01376343 148.27629089]
[238.04103088 142.29039001]
[227.42619324 131.40950012]
[221.78793335 117.29290771]
[206.78874207 117.13687134]
[193.98167419 124.74135590]
[180.26272583 116.86091614]
[165.26354980 116.70487976]
[162.47203064 118.95764923]
[158.42897034 119.93503571]
[153.76248169 119.05400085]
[149.34124756 116.04196167]
[134.38101196 114.95065308]
[128.88816833 120.05739594]
[141.49382019 128.18743896]
[156.23635864 130.95472717]
[165.30877686 142.90005493]
[164.01815796 157.84443665]
[153.03211975 168.05751038]
[138.03343201 168.25631714]
[126.78054810 158.33802795]
[125.09389496 143.43461609]
[117.90251160 130.27087402]
[112.40967560 135.37760925]
[112.40967560 150.37760925]
[112.40967560 165.37760925]
[112.40967560 180.37760925]
[112.40967560 195.37760925]
[112.40967560 210.37760925]
[112.40967560 225.37760925]
[112.40967560 240.37760925]
[112.40967560 255.37760925]
[112.40967560 270.37762451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[14 98]
[15 97]
[16 96]
[17 95]
[18 94]
[20 91]
[21 90]
[22 89]
[23 88]
[24 52]
[25 51]
[26 50]
[27 49]
[28 48]
[29 47]
[53 66]
[54 65]
[55 64]
[56 63]
[57 62]
[100 130]
[101 129]
[102 125]
[103 124]
[105 122]
[106 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
