%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAUUAAUUAAUGCUUGUAGGACAUAAUAAUAACAAUUGAAUGUCUGCACAGCCACUUUCCxxxxxxxxxxAACUACAAGAACACCAAUGACCCCAAUACGCAAAACUAACCCCCUAAUAAAAUUAAUUAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[129.44386292 333.50979614]
[129.44386292 318.50979614]
[129.44386292 303.50979614]
[129.44386292 288.50979614]
[129.44386292 273.50979614]
[129.44386292 258.50979614]
[129.44386292 243.50978088]
[129.44386292 228.50978088]
[129.44386292 213.50978088]
[129.44386292 198.50978088]
[125.99382019 194.37519836]
[124.65163422 188.57225037]
[126.18241882 182.22410583]
[120.40614319 168.38088989]
[114.62986755 154.53767395]
[102.58818054 145.77143860]
[104.41455078 130.05599976]
[98.63828278 116.21278381]
[88.12067413 111.11711121]
[83.73263550 100.28517151]
[87.73831940 89.30609131]
[82.25128937 75.34569550]
[76.76425934 61.38530731]
[68.38211060 48.94586945]
[57.50328827 38.61866379]
[46.62446213 28.29145813]
[35.74563980 17.96425438]
[24.86681366 7.63704872]
[13.98798847 -2.69015598]
[0.60170317 -9.45827103]
[-14.16435242 -12.09713459]
[-28.93040848 -14.73599911]
[-43.69646454 -17.37486458]
[-58.46252060 -20.01372719]
[-69.51251221 -13.27937126]
[-81.79022980 -15.82426453]
[-88.78894043 -25.74018288]
[-103.49690247 -28.68566513]
[-118.20486450 -31.63114738]
[-132.91282654 -34.57662964]
[-148.26679993 -28.81575775]
[-160.75924683 -39.43981552]
[-157.53901672 -55.51968384]
[-141.91880798 -60.51377487]
[-129.96734619 -49.28459167]
[-115.25937653 -46.33910751]
[-100.55141449 -43.39362717]
[-85.84345245 -40.44814301]
[-69.58233643 -46.97316742]
[-55.82365417 -34.77978516]
[-41.05759811 -32.14091873]
[-26.29154396 -29.50205421]
[-11.52548790 -26.86318970]
[3.24056745 -24.22432709]
[-7.90673923 -34.26113510]
[-16.77172470 -46.36122131]
[-22.98142624 -60.01551056]
[-26.27459335 -74.64954376]
[-26.51267433 -89.64765930]
[-23.68565559 -104.37884521]
[-17.91247368 -118.22335052]
[-9.43601418 -130.59872437]
[1.38710511 -140.98428345]
[14.10153961 -148.94313049]
[28.17237282 -154.14039612]
[43.00762558 -156.35745239]
[57.98315430 -155.50099182]
[72.46891785 -151.60707092]
[85.85547638 -144.83949280]
[97.57964325 -135.48300171]
[107.14815521 -123.93122101]
[114.15846252 -110.67016602]
[118.31561279 -96.25774384]
[119.44473267 -81.30030060]
[117.49829865 -66.42711639]
[112.55821228 -52.26394653]
[104.83229828 -39.40663910]
[94.64560699 -28.39612770]
[82.42671204 -19.69564056]
[68.68966675 -13.67121887]
[54.01242065 -10.57632065]
[39.01245880 -10.54115105]
[24.31519318 -13.56898117]
[35.19401932 -3.24177623]
[46.07284164 7.08542871]
[56.95166779 17.41263390]
[67.83049011 27.73983765]
[78.70932007 38.06704330]
[74.76398468 23.59519768]
[74.79288483 8.59522533]
[78.79396820 -5.86130810]
[86.48139191 -18.74166107]
[97.30599213 -29.12568665]
[110.49448395 -36.27157593]
[125.10470581 -39.66884232]
[140.09294128 -39.07479095]
[154.38845825 -34.53186035]
[166.97001648 -26.36458588]
[176.93881226 -15.15642262]
[183.58271790 -1.70805490]
[186.42709351 13.01979446]
[185.26873779 27.97500229]
[180.19039917 42.08919907]
[171.55488586 54.35409927]
[159.97906494 63.89352417]
[146.28991699 70.02600098]
[131.46536255 72.31343079]
[116.56441498 70.59242249]
[102.65158081 64.98590088]
[90.72464752 55.89827728]
[96.21167755 69.85866547]
[101.69870758 83.81905365]
[115.07951355 93.89125824]
[112.48149872 110.43650818]
[118.25777435 124.27972412]
[130.71261597 134.03613281]
[128.47308350 148.76139832]
[134.24935913 162.60462952]
[140.02563477 176.44784546]
[142.07781982 161.58888245]
[147.98188782 147.79969788]
[157.31849670 136.05967712]
[169.42446899 127.20272827]
[183.43992615 121.85794067]
[198.36938477 120.40493774]
[213.15243530 122.94692993]
[226.73902893 129.30335999]
[238.16415405 139.02275085]
[246.61630249 151.41473389]
[251.49511719 165.59912109]
[252.45407104 180.56843567]
[249.42506409 195.25942993]
[242.62321472 208.62860107]
[232.53166199 219.72637939]
[219.86718750 227.76448059]
[205.52934265 232.17199707]
[190.53651428 232.63586426]
[175.95362854 229.12312317]
[162.81648254 221.88328552]
[152.05818176 211.43057251]
[144.44386292 198.50978088]
[144.44386292 213.50978088]
[144.44386292 228.50978088]
[144.44386292 243.50978088]
[144.44386292 258.50979614]
[144.44386292 273.50979614]
[144.44386292 288.50979614]
[144.44386292 303.50979614]
[144.44386292 318.50979614]
[144.44386292 333.50979614]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[13 119]
[14 118]
[15 117]
[17 115]
[18 114]
[21 112]
[22 111]
[23 110]
[24 88]
[25 87]
[26 86]
[27 85]
[28 84]
[29 83]
[30 54]
[31 53]
[32 52]
[33 51]
[34 50]
[37 48]
[38 47]
[39 46]
[40 45]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
