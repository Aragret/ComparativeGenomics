%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAACCUCGCCUUACCCCCCACUAUUAACCUACUGGGAGAACUCUCUGUGCUAGUAACCACxxxxxxxxxxAGACAACCAUCAUUCCCCCUAAAUAAAUUAAAAAAACUAUUAAACCCAUAUAACCUCCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-3.60576081 264.33996582]
[-12.18721867 258.60580444]
[-20.45204163 252.42401123]
[-23.53911781 267.94113159]
[-37.69072723 272.58666992]
[-47.43838120 283.98770142]
[-57.18603134 295.38873291]
[-66.93368530 306.78973389]
[-76.68133545 318.19076538]
[-86.42898560 329.59176636]
[-96.17664337 340.99279785]
[-105.92429352 352.39382935]
[-115.67194366 363.79483032]
[-112.92073059 379.18850708]
[-120.75281525 392.72335815]
[-135.47013855 398.00866699]
[-150.12362671 392.54885864]
[-157.79434204 378.92190552]
[-154.86041260 363.56201172]
[-142.70715332 353.72167969]
[-127.07296753 354.04718018]
[-117.32530975 342.64617920]
[-107.57765961 331.24514771]
[-97.83000946 319.84411621]
[-88.08235931 308.44311523]
[-78.33470154 297.04208374]
[-68.58705139 285.64105225]
[-58.83940125 274.24005127]
[-49.09174728 262.83901978]
[-46.70188904 248.13739014]
[-31.85306168 242.67636108]
[-52.36494827 220.52674866]
[-69.19770813 195.46679688]
[-81.94488525 168.10163879]
[-90.29867554 139.09204102]
[-94.05736542 109.13848877]
[-93.13019562 78.96427917]
[-87.53955078 49.29800797]
[-77.42042542 20.85603142]
[-63.01716232 -5.67487288]
[-75.27953339 -14.31398964]
[-87.54190063 -22.95310593]
[-99.80426788 -31.59222221]
[-105.13304138 -32.06521225]
[-109.30069733 -34.34184647]
[-111.80813599 -37.66064072]
[-112.53914642 -41.17249680]
[-124.23876953 -50.55965805]
[-139.84465027 -53.16105270]
[-144.92950439 -67.16082001]
[-156.62913513 -76.54798126]
[-172.66914368 -76.23545837]
[-182.80296326 -88.67270660]
[-179.25680542 -104.31893158]
[-164.75097656 -111.17168427]
[-150.41310120 -103.97412872]
[-147.24197388 -88.24760437]
[-135.54234314 -78.86044312]
[-120.77330780 -76.93048096]
[-114.85160828 -62.25928116]
[-103.15198517 -52.87211990]
[-91.16515350 -43.85459137]
[-78.90278625 -35.21547318]
[-66.64041138 -26.57635689]
[-54.37804794 -17.93724060]
[-47.89685059 -25.96942329]
[-40.99823380 -33.64607239]
[-33.70166397 -40.94551849]
[-26.02773476 -47.84716415]
[-17.99810791 -54.33152771]
[-9.63544559 -60.38030624]
[-0.96334976 -65.97643280]
[7.99370384 -71.10411072]
[17.21043587 -75.74886322]
[26.66082954 -79.89758301]
[36.31821823 -83.53856659]
[46.15533829 -86.66152954]
[56.14442825 -89.25765991]
[66.25730133 -91.31964111]
[76.46540070 -92.84163666]
[86.73992920 -93.81935883]
[97.05187988 -94.25005341]
[107.37215424 -94.13249207]
[117.67162323 -93.46701813]
[127.92121124 -92.25550842]
[138.09199524 -90.50137329]
[148.15527344 -88.20957184]
[158.08264160 -85.38657379]
[167.84606934 -82.04033661]
[177.41801453 -78.18032074]
[186.77145386 -73.81740570]
[195.87998962 -68.96390533]
[204.71791077 -63.63352966]
[213.26028442 -57.84131622]
[221.48300171 -51.60361481]
[229.36283875 -44.93802643]
[236.87756348 -37.86336899]
[244.00596619 -30.39960861]
[250.72792053 -22.56780815]
[257.02447510 -14.39007568]
[262.87783813 -5.88948965]
[268.27151489 2.90995765]
[273.19024658 11.98343086]
[277.62014771 21.30532074]
[281.54876709 30.84931564]
[284.96499634 40.58848190]
[287.85916138 50.49533081]
[290.22311401 60.54190063]
[292.05020142 70.69983673]
[293.33523560 80.94046783]
[294.07458496 91.23489380]
[294.26620483 101.55406189]
[293.90951538 111.86883545]
[293.00555420 122.15011597]
[291.55685425 132.36888123]
[289.56750488 142.49629211]
[287.04312134 152.50375366]
[283.99084473 162.36303711]
[280.41925049 172.04629517]
[276.33843994 181.52621460]
[271.75994873 190.77604675]
[266.69668579 199.76966858]
[261.16293335 208.48170471]
[255.17433167 216.88755798]
[248.74775696 224.96350098]
[241.90136719 232.68676758]
[234.65446472 240.03552246]
[227.02752686 246.98905945]
[219.04205322 253.52772522]
[210.72061157 259.63308716]
[202.08666992 265.28790283]
[193.16459656 270.47619629]
[183.97956848 275.18334961]
[174.55752563 279.39605713]
[164.92506409 283.10244751]
[155.10934448 286.29205322]
[145.13809204 288.95587158]
[135.03942871 291.08639526]
[124.84188843 292.67758179]
[114.57422638 293.72497559]
[104.26543427 294.22558594]
[93.94460297 294.17803955]
[83.64085388 293.58242798]
[73.38328552 292.44042969]
[63.20083618 290.75534058]
[53.12224960 288.53182983]
[43.17597198 285.77621460]
[33.39007187 282.49627686]
[23.79216957 278.70126343]
[14.40935612 274.40188599]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 31]
[5 29]
[6 28]
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[12 22]
[13 21]
[40 65]
[41 64]
[42 63]
[43 62]
[47 61]
[48 60]
[50 58]
[51 57]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
