%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCGAAACCAUCAGCCUACUCAUUCAACCAAUAGCCCUGGCCGUACGCCUAACCGCUAACAxxxxxxxxxxCAUCCACAACCUUAACAAUGAACAAGAUAUUCGAAAAAUAGGAGGACUACUCAAAACCAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 242.71813965]
[92.50000000 227.71813965]
[92.50000000 212.71813965]
[92.50000000 197.71813965]
[92.50000000 182.71813965]
[92.50000000 167.71813965]
[92.50000000 152.71813965]
[92.50000000 137.71813965]
[92.50000000 122.71813965]
[92.50000000 107.71813965]
[88.49225616 93.26345062]
[80.76817322 80.40504456]
[73.04409027 67.54664612]
[65.32000732 54.68824005]
[57.59592056 41.82983780]
[44.25514221 48.69903564]
[30.49365616 54.68099213]
[16.37039757 59.75009537]
[1.94584060 63.88463593]
[-12.71824455 67.06690979]
[-27.55906487 69.28328705]
[-42.51306534 70.52427673]
[-57.51621628 70.78456879]
[-72.50426483 70.06304932]
[-87.41304016 68.36280823]
[-102.17868042 65.69112396]
[-116.73797607 62.05942917]
[-131.02857971 57.48328781]
[-144.98928833 51.98229218]
[-158.56031799 45.57999420]
[-171.68354797 38.30381393]
[-184.30281067 30.18490982]
[-196.36404419 21.25804520]
[-207.81561279 11.56145000]
[-218.60845947 1.13664520]
[-228.69638062 -9.97172832]
[-238.03619385 -21.71610260]
[-246.58787537 -34.04618454]
[-254.31481934 -46.90917969]
[-261.18392944 -60.24999619]
[-267.16580200 -74.01152039]
[-272.23483276 -88.13480377]
[-276.36929321 -102.55938721]
[-279.55148315 -117.22348785]
[-281.76776123 -132.06433105]
[-283.00866699 -147.01834106]
[-283.26889038 -162.02148438]
[-282.54727173 -177.00953674]
[-280.84692383 -191.91828918]
[-278.17517090 -206.68392944]
[-274.54339600 -221.24319458]
[-269.96716309 -235.53376770]
[-264.46606445 -249.49444580]
[-258.06369019 -263.06542969]
[-250.78744507 -276.18862915]
[-242.66845703 -288.80783081]
[-233.74153137 -300.86901855]
[-224.04486084 -312.32052612]
[-213.61999512 -323.11331177]
[-202.51156616 -333.20117188]
[-190.76713562 -342.54092407]
[-178.43699646 -351.09252930]
[-165.57395935 -358.81939697]
[-152.23310852 -365.68844604]
[-138.47154236 -371.67022705]
[-124.34822845 -376.73916626]
[-109.92362213 -380.87353516]
[-95.25949860 -384.05563354]
[-80.41865540 -386.27185059]
[-65.46463776 -387.51266479]
[-50.46148682 -387.77276611]
[-35.47344208 -387.05108643]
[-20.56469345 -385.35064697]
[-5.79907799 -382.67880249]
[8.76017380 -379.04693604]
[23.05071831 -374.47061157]
[37.01135635 -368.96945190]
[50.58231354 -362.56698608]
[63.70546722 -355.29067993]
[76.32463074 -347.17160034]
[88.38575745 -338.24459839]
[99.83720398 -328.54788208]
[110.62993622 -318.12295532]
[120.71773529 -307.01446533]
[130.05740356 -295.26995850]
[138.60893250 -282.93978882]
[146.33572388 -270.07669067]
[153.20469666 -256.73580933]
[159.18640137 -242.97421265]
[164.25526428 -228.85086060]
[168.38954163 -214.42622375]
[171.57154846 -199.76208496]
[173.78767395 -184.92123413]
[175.02839661 -169.96720886]
[175.28842163 -154.96405029]
[174.56663513 -139.97601318]
[172.86613464 -125.06726837]
[170.19418335 -110.30167389]
[166.56224060 -95.74243927]
[161.98583984 -81.45192719]
[156.48460388 -67.49131775]
[150.08206177 -53.92039871]
[142.80564880 -40.79728699]
[134.68652344 -28.17817497]
[125.75944519 -16.11709976]
[116.06264496 -4.66570807]
[105.63764954 6.12696123]
[94.52909851 16.21469307]
[82.78455353 25.55428886]
[70.45432281 34.10575485]
[78.17840576 46.96415710]
[85.90248871 59.82255936]
[93.62657928 72.68096161]
[101.35066223 85.53936005]
[101.48549652 70.53997040]
[104.89281464 55.93208694]
[111.40811920 42.42094803]
[120.71685791 30.65883446]
[132.36962891 21.21358681]
[145.80389404 14.54119778]
[160.37104797 10.96379280]
[175.36785889 10.65407848]
[190.07029724 13.62700844]
[203.76856995 19.73905754]
[215.80137634 28.69515038]
[225.58779907 40.06291199]
[232.65536499 53.29353714]
[236.66288757 67.74829102]
[237.41687012 82.72932434]
[234.88095093 97.51340485]
[229.17752075 111.38679504]
[220.58193970 123.67971802]
[209.50917053 133.79870605]
[196.49380493 141.25524902]
[182.16415405 145.68936157]
[167.21205139 146.88697815]
[152.35931396 144.79026794]
[138.32299805 139.50047302]
[125.78074646 131.27294922]
[115.33806610 120.50492096]
[107.50000000 107.71813965]
[107.50000000 122.71813965]
[107.50000000 137.71813965]
[107.50000000 152.71813965]
[107.50000000 167.71813965]
[107.50000000 182.71813965]
[107.50000000 197.71813965]
[107.50000000 212.71813965]
[107.50000000 227.71813965]
[107.50000000 242.71813965]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 114]
[12 113]
[13 112]
[14 111]
[15 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
