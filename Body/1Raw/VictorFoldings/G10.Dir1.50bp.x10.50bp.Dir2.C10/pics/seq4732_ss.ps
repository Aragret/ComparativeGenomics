%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCUGAGUAGGCCUAGAAAUAAACAUGCUAGCUUUUAUUCCAGUUCUAACCAAAAAAAUAxxxxxxxxxxAUCUAGGCCUUCUUACGAGCCAAAACCUGCCCCUACUCCUCCUAGACCUAACCUGACUAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[130.32319641 381.34942627]
[130.32319641 366.34942627]
[130.32319641 351.34942627]
[130.32319641 336.34942627]
[130.32319641 321.34942627]
[130.32319641 306.34942627]
[130.32319641 291.34942627]
[130.32319641 276.34942627]
[130.32319641 261.34942627]
[130.32319641 246.34942627]
[107.37718201 236.87991333]
[91.63673401 217.61558533]
[86.91025543 193.13647461]
[94.37975311 169.29386902]
[112.30570984 151.81172180]
[106.81867981 137.85133362]
[101.33164978 123.89093781]
[95.84461975 109.93054962]
[87.07840729 97.75871277]
[75.57660675 88.13018799]
[64.07480621 78.50165558]
[52.57299805 68.87313080]
[41.07119751 59.24460602]
[29.56939316 49.61608124]
[18.06758881 39.98755264]
[6.56578588 30.35902786]
[-4.93601751 20.73050117]
[-16.55702209 30.27976418]
[-29.73139763 37.52904510]
[-44.00975800 42.23273849]
[-58.90536880 44.23204422]
[-73.91073608 43.46032333]
[-88.51489258 39.94532394]
[-102.22081757 33.80818176]
[-114.56233215 25.25924301]
[-125.11994171 14.59086514]
[-133.53514099 2.16741109]
[-139.52253723 -11.58719254]
[-142.87957764 -26.20392036]
[-143.49334717 -41.18464661]
[-141.34440613 -56.01911163]
[-136.50740051 -70.20230865]
[-129.14843750 -83.25167847]
[-140.65023804 -92.88020325]
[-152.15205383 -102.50872803]
[-163.65385437 -112.13725281]
[-176.76014709 -104.52143097]
[-191.68135071 -101.85056305]
[-206.61564636 -104.44718170]
[-219.75965881 -111.99773407]
[-229.52618408 -123.59043884]
[-234.73585510 -137.82543945]
[-234.75958252 -152.98377991]
[-229.59449768 -167.23501587]
[-219.86431885 -178.85824585]
[-206.74401855 -186.44990540]
[-191.81791687 -189.09326172]
[-176.88842773 -186.46913147]
[-163.75834656 -178.89437866]
[-154.01321411 -167.28369141]
[-148.82978821 -153.03910828]
[-148.83398438 -137.88075256]
[-154.02532959 -123.63906097]
[-142.52351379 -114.01052856]
[-131.02171326 -104.38200378]
[-119.51991272 -94.75347900]
[-107.96868896 -104.29336548]
[-94.85764313 -111.55010223]
[-80.63259125 -116.27526855]
[-65.77753448 -118.30654144]
[-50.79818726 -117.57330322]
[-36.20477676 -114.09905243]
[-22.49464417 -108.00068665]
[-10.13531303 -99.48456573]
[0.45146516 -88.83950043]
[8.90409756 -76.42700958]
[14.93350220 -62.66899490]
[18.33299446 -48.03342056]
[18.98537064 -33.01840210]
[16.86694717 -18.13523674]
[12.04842186 -3.89100933]
[4.69250870 9.22869873]
[16.19431114 18.85722542]
[27.69611549 28.48575020]
[39.19791794 38.11427689]
[50.69972229 47.74280167]
[62.20152664 57.37133026]
[73.70333099 66.99985504]
[85.20513153 76.62837982]
[96.70693970 86.25690460]
[91.87555695 72.05628204]
[90.51507568 57.11810684]
[92.70162964 42.27832794]
[98.31285858 28.36739349]
[107.03475189 16.16376305]
[118.37922668 6.35036039]
[131.71144104 -0.52365178]
[146.28532410 -4.07359934]
[161.28529358 -4.10082531]
[175.87196350 -0.60380632]
[189.22904968 6.22176266]
[200.60906982 15.99391937]
[209.37519836 28.16580772]
[215.03689575 42.05628204]
[217.27729797 56.88802338]
[215.97105408 71.83103943]
[211.19126892 86.04911041]
[203.20539856 98.74658203]
[192.46034241 109.21290588]
[179.55740356 116.86237335]
[165.21864319 121.26690674]
[150.24645996 122.18004608]
[135.47871399 119.55067444]
[121.74181366 113.52594757]
[109.80500793 104.44351959]
[115.29203796 118.40390778]
[120.77906799 132.36430359]
[126.26609802 146.32469177]
[133.34681702 145.22406006]
[140.50846863 145.12249756]
[147.61088562 146.02108765]
[154.51512146 147.90127563]
[161.08627319 150.72537231]
[167.19607544 154.43721008]
[172.72541809 158.96334839]
[177.56663513 164.21446228]
[181.62565613 170.08709717]
[184.82380676 176.46577454]
[187.09928894 183.22520447]
[188.40847778 190.23277283]
[188.72663879 197.35110474]
[188.04850769 204.44084167]
[186.38825989 211.36326599]
[183.77934265 217.98309326]
[180.27366638 224.17106628]
[175.94068909 229.80651855]
[170.86598206 234.77970886]
[165.14953613 238.99395752]
[158.90380859 242.36749268]
[152.25151062 244.83512878]
[145.32319641 246.34942627]
[145.32319641 261.34942627]
[145.32319641 276.34942627]
[145.32319641 291.34942627]
[145.32319641 306.34942627]
[145.32319641 321.34942627]
[145.32319641 336.34942627]
[145.32319641 351.34942627]
[145.32319641 366.34942627]
[145.32319641 381.34942627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[15 118]
[16 117]
[17 116]
[18 115]
[19 90]
[20 89]
[21 88]
[22 87]
[23 86]
[24 85]
[25 84]
[26 83]
[27 82]
[43 66]
[44 65]
[45 64]
[46 63]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
