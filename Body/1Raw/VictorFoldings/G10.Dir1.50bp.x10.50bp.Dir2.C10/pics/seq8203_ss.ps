%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCACAAUCCUAGGCCUACCCGCCGCAGUACUGAUCAUUCUAUUUCCCCCUCUAUUGAUCCCxxxxxxxxxxAAGCUACCCUUUUACCAUCAUUGGACAAGUAGCAUCCGUACUAUACUUCACAACAAUCCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[14.65942001 213.37287903]
[5.01760578 224.86354065]
[2.07414174 240.40852356]
[-12.03390694 245.18473816]
[-21.67572021 256.67541504]
[-31.31753540 268.16607666]
[-34.26099777 283.71105957]
[-48.36904907 288.48727417]
[-58.01086044 299.97793579]
[-67.65267944 311.46859741]
[-77.29448700 322.95925903]
[-86.93630219 334.44995117]
[-82.25751495 349.15069580]
[-86.29136658 364.04135132]
[-97.75066376 374.37036133]
[-112.97878265 376.84173584]
[-127.11650085 370.66690063]
[-135.65251160 357.81622314]
[-135.86300659 342.39028931]
[-127.68082428 329.31149292]
[-113.71685791 322.75317383]
[-98.42697144 324.80813599]
[-88.78515625 313.31747437]
[-79.14334106 301.82678223]
[-69.50152588 290.33612061]
[-59.85971451 278.84545898]
[-57.60589600 264.12237549]
[-42.80820084 258.52426147]
[-33.16638947 247.03358459]
[-23.52457428 235.54292297]
[-21.27075577 220.81982422]
[-6.47306108 215.22172546]
[3.16875315 203.73106384]
[-12.46105576 186.53862000]
[-25.07571030 167.02603149]
[-34.33700180 145.71643066]
[-39.99663162 123.18114471]
[-41.90286255 100.02435303]
[-40.00458145 76.86690521]
[-34.35268784 54.32967758]
[-25.09870720 33.01689911]
[-12.49075127 13.49997902]
[-23.88182449 3.74070454]
[-35.27289963 -6.01856995]
[-46.66397095 -15.77784443]
[-58.05504608 -25.53711891]
[-70.95639038 -17.63708878]
[-85.66801453 -14.11241913]
[-100.74862671 -15.30842209]
[-114.72077179 -21.10792542]
[-126.21561432 -30.94275284]
[-134.10699463 -43.84938812]
[-137.62181091 -58.56337357]
[-136.41569519 -73.64317322]
[-130.60684204 -87.61143494]
[-120.76430511 -99.09968567]
[-107.85238647 -106.98241425]
[-93.13605499 -110.48736572]
[-78.05706024 -109.27115631]
[-64.09269714 -103.45293427]
[-52.61104584 -93.60270691]
[-44.73696518 -80.68550873]
[-41.24187469 -65.96682739]
[-42.46819305 -50.88865662]
[-48.29577255 -36.92819214]
[-36.90469742 -27.16891861]
[-25.51362419 -17.40964317]
[-14.12255001 -7.65036917]
[-2.73147655 2.10890532]
[8.85772133 -8.76354027]
[21.58988190 -18.27204323]
[35.30533981 -26.29736328]
[49.83209991 -32.73885727]
[64.98798370 -37.51575089]
[80.58293915 -40.56813431]
[96.42138672 -41.85773087]
[112.30471802 -41.36837387]
[128.03373718 -39.10618973]
[143.41120911 -35.09955597]
[158.24427795 -29.39871407]
[172.34693909 -22.07515717]
[185.54232788 -13.22072220]
[197.66499329 -2.94645023]
[208.56289673 8.61881542]
[220.53315735 -0.42070422]
[232.50340271 -9.46022415]
[244.47366333 -18.49974251]
[256.44393921 -27.53926277]
[258.51913452 -32.46357346]
[261.95474243 -35.73498154]
[265.87591553 -37.11116409]
[269.44091797 -36.73964691]
[281.94494629 -45.02512360]
[285.20779419 -60.25639725]
[298.00668335 -68.48091888]
[312.50726318 -65.27644348]
[325.01132202 -73.56192017]
[337.51535034 -81.84739685]
[344.33673096 -96.76049805]
[360.68588257 -98.03997803]
[369.74420166 -84.36960602]
[362.19326782 -69.81229401]
[345.80081177 -69.34336090]
[333.29678345 -61.05788422]
[320.79275513 -52.77241135]
[318.09164429 -38.16968155]
[305.52880859 -29.58890915]
[290.23043823 -32.52108765]
[277.72640991 -24.23561096]
[265.48345947 -15.56900406]
[253.51318359 -6.52948475]
[241.54292297 2.51003456]
[229.57267761 11.54955387]
[217.60241699 20.58907318]
[222.88632202 29.03962898]
[227.56404114 37.84022903]
[231.61250305 46.94745636]
[235.01171875 56.31638718]
[237.74493408 65.90081024]
[239.79867554 75.65344238]
[241.16278076 85.52616882]
[241.83055115 95.47029877]
[241.79867554 105.43676758]
[241.06732178 115.37642670]
[239.64009094 125.24022675]
[237.52401733 134.97952271]
[234.72955322 144.54626465]
[231.27047729 153.89326477]
[227.16384888 162.97441101]
[222.42994690 171.74491882]
[217.09208679 180.16149902]
[211.17662048 188.18264771]
[204.71273804 195.76881409]
[197.73231506 202.88253784]
[190.26977539 209.48876953]
[182.36195374 215.55488586]
[174.04783630 221.05097961]
[165.36843872 225.94995117]
[156.36659241 230.22760010]
[147.08670044 233.86285400]
[137.57452393 236.83778381]
[127.87699890 239.13768005]
[118.04195404 240.75123596]
[108.11791229 241.67047119]
[98.15382385 241.89085388]
[88.19884491 241.41130066]
[78.30207825 240.23417664]
[68.51234436 238.36528015]
[58.87794113 235.81384277]
[49.44638824 232.59243774]
[40.26421356 228.71696472]
[31.37671089 224.20654297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 33]
[2 32]
[4 30]
[5 29]
[6 28]
[8 26]
[9 25]
[10 24]
[11 23]
[12 22]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[84 114]
[85 113]
[86 112]
[87 111]
[88 110]
[92 109]
[93 108]
[96 105]
[97 104]
[98 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
