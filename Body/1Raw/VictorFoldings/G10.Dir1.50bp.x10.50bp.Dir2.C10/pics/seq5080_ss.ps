%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUAGCCCCCAUCUCAAUCAUAUACCAAAUCUCUCCCUCACUAAACGUAAGCCUUCUCCUCxxxxxxxxxxUUUUUUCUUCGCAGGAUUUUUCUGAGCCUUUUACCACUCCAGCCUAGCCCCUACCCCCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[98.60237885 197.87698364]
[97.66674805 182.90620422]
[96.73112488 167.93540955]
[95.79549408 152.96461487]
[94.85986328 137.99382019]
[93.92423248 123.02303314]
[92.98860931 108.05223846]
[90.50348663 93.25952911]
[86.49575043 78.80484009]
[82.48800659 64.35015869]
[78.48027039 49.89546585]
[74.47252655 35.44077682]
[70.46479034 20.98608971]
[66.45704651 6.53140163]
[51.79484940 9.71591568]
[36.97596741 12.06581211]
[22.04787827 13.57356358]
[7.05839586 14.23434162]
[-7.94446230 14.04602814]
[-22.91263580 13.00922585]
[-37.79817963 11.12725830]
[-52.55340958 8.40615177]
[-67.13105774 4.85462427]
[-81.48442841 0.48405150]
[-95.56755066 -4.69156551]
[-109.33529663 -10.65564823]
[-122.74357605 -17.38909149]
[-135.74943542 -24.87032509]
[-148.31120300 -33.07538605]
[-160.38865662 -41.97798920]
[-171.94309998 -51.54962158]
[-182.93751526 -61.75961304]
[-193.33670044 -72.57526398]
[-203.10733032 -83.96192932]
[-212.21809387 -95.88313293]
[-220.63983154 -108.30068207]
[-228.34555054 -121.17480469]
[-235.31057739 -134.46426392]
[-241.51258850 -148.12648010]
[-246.93173218 -162.11769104]
[-251.55062866 -176.39309692]
[-255.35450745 -190.90693665]
[-258.33114624 -205.61274719]
[-260.47106934 -220.46340942]
[-261.76736450 -235.41134644]
[-262.21591187 -250.40867615]
[-261.81524658 -265.40737915]
[-260.56668091 -280.35937500]
[-258.47421265 -295.21676636]
[-255.54450989 -309.93200684]
[-251.78698730 -324.45791626]
[-247.21369934 -338.74798584]
[-241.83924866 -352.75643921]
[-235.68089294 -366.43838501]
[-228.75833130 -379.75003052]
[-221.09375000 -392.64868164]
[-212.71170044 -405.09304810]
[-203.63903809 -417.04327393]
[-193.90481567 -428.46109009]
[-183.54022217 -439.30987549]
[-172.57846069 -449.55493164]
[-161.05464172 -459.16339111]
[-149.00567627 -468.10452271]
[-136.47015381 -476.34963989]
[-123.48825073 -483.87237549]
[-110.10153961 -490.64859009]
[-96.35289764 -496.65658569]
[-82.28637695 -501.87713623]
[-67.94702911 -506.29351807]
[-53.38079453 -509.89157104]
[-38.63433075 -512.65979004]
[-23.75487137 -514.58923340]
[-8.79008293 -515.67382812]
[6.21209717 -515.91003418]
[21.20361328 -515.29711914]
[36.13644028 -513.83703613]
[50.96274948 -511.53448486]
[65.63504028 -508.39678955]
[80.10631561 -504.43405151]
[94.33022308 -499.65893555]
[108.26119232 -494.08673096]
[121.85459900 -487.73532104]
[135.06690979 -480.62506104]
[147.85578918 -472.77865601]
[160.18026733 -464.22131348]
[172.00088501 -454.98040771]
[183.27975464 -445.08554077]
[193.98075867 -434.56842041]
[204.06961060 -423.46273804]
[213.51400757 -411.80407715]
[222.28367615 -399.62976074]
[230.35054016 -386.97879028]
[237.68875122 -373.89169312]
[244.27481079 -360.41040039]
[250.08760071 -346.57809448]
[255.10852051 -332.43908691]
[259.32150269 -318.03866577]
[262.71301270 -303.42297363]
[265.27218628 -288.63879395]
[266.99087524 -273.73352051]
[267.86352539 -258.75488281]
[267.88735962 -243.75085449]
[267.06231689 -228.76951599]
[265.39099121 -213.85885620]
[262.87878418 -199.06661987]
[259.53375244 -184.44021606]
[255.36656189 -170.02648926]
[250.39057922 -155.87159729]
[244.62176514 -142.02088928]
[238.07858276 -128.51873779]
[230.78199768 -115.40840912]
[222.75537109 -102.73187256]
[214.02442932 -90.52974701]
[204.61712646 -78.84112549]
[194.56359863 -67.70344543]
[183.89607239 -57.15237808]
[172.64869690 -47.22172928]
[160.85751343 -37.94330978]
[148.56027222 -29.34683800]
[135.79640198 -21.45985413]
[122.60675049 -14.30762100]
[109.03359222 -7.91305065]
[95.12039948 -2.29662609]
[80.91173553 2.52366138]
[84.91947937 16.97834969]
[88.92721558 31.43303871]
[92.93495941 45.88772583]
[96.94269562 60.34241486]
[100.95043945 74.79710388]
[104.95817566 89.25179291]
[110.84135437 75.45366669]
[122.75224304 66.33606720]
[137.60774231 64.25904083]
[151.56256104 69.76023865]
[161.00453186 81.41567993]
[163.48962402 96.20838928]
[158.37458801 110.30932617]
[146.98342896 120.06849670]
[132.26470947 122.95977783]
[118.02833557 118.23476410]
[107.95939636 107.11660767]
[108.89502716 122.08740234]
[109.83065796 137.05819702]
[110.76628113 152.02899170]
[111.70191193 166.99977112]
[112.63754272 181.97056580]
[113.57317352 196.94136047]
[123.08850098 210.29765320]
[116.03405762 225.10192871]
[99.66683960 226.12483215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 147]
[2 146]
[3 145]
[4 144]
[5 143]
[6 142]
[7 141]
[8 130]
[9 129]
[10 128]
[11 127]
[12 126]
[13 125]
[14 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
