%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACUUCAAACUCUACUCCCACUAAUAGCUUUUUGAUGACUUCUAGCAAGCCUCGCUAACCUCxxxxxxxxxxAUGAACAAGAUAUUCGAAAAAUAGGAGGACUACUCAAAACCAUACCUCUCACUUCAACCUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[103.80522919 278.57864380]
[103.80522919 263.57864380]
[103.80522919 248.57864380]
[103.80522919 233.57864380]
[103.80522919 218.57864380]
[103.80522919 203.57864380]
[103.80522919 188.57864380]
[103.80522919 173.57864380]
[103.80522919 158.57864380]
[103.80522919 143.57864380]
[83.07691956 135.57147217]
[70.99366760 119.65666199]
[61.04620743 131.95945740]
[46.35725021 129.49293518]
[32.42653275 135.05487061]
[18.49581528 140.61680603]
[4.56510019 146.17874146]
[-9.36561584 151.74067688]
[-15.94423199 167.91810608]
[-31.86286354 174.23701477]
[-47.13251877 167.25555420]
[-60.94610214 173.10235596]
[-74.75968933 178.94914246]
[-76.56745911 194.20126343]
[-85.77194977 206.49650574]
[-99.89720917 212.52749634]
[-115.14360046 210.67192078]
[-127.40991974 201.42892456]
[-133.39660645 187.28483582]
[-131.49325562 172.04434204]
[-122.21185303 159.80705261]
[-108.04907227 153.86473083]
[-92.81461334 155.81585693]
[-80.60647583 165.13555908]
[-66.79289246 159.28877258]
[-52.97930908 153.44197083]
[-49.84166336 140.90773010]
[-39.89677429 132.35624695]
[-26.64574051 131.09477234]
[-14.92755318 137.80996704]
[-0.99683726 132.24803162]
[12.93387890 126.68608856]
[26.86459541 121.12415314]
[40.79531097 115.56221008]
[49.74635315 103.65724945]
[65.43173218 105.72594452]
[64.47852325 92.11019897]
[68.88330078 78.65331268]
[78.35992432 67.45500946]
[91.80599976 60.40833282]
[88.14730072 45.86137772]
[84.48859406 31.31442451]
[77.52823639 18.02708244]
[67.65252686 6.73680258]
[57.77682495 -4.55347776]
[42.14729691 -4.05153751]
[29.88375473 -13.75408936]
[26.77666283 -29.07988358]
[34.29309845 -42.79255295]
[48.88402557 -48.41738892]
[63.66006088 -43.29851913]
[71.64440918 -29.85291672]
[69.06710052 -14.42918396]
[78.94281006 -3.13890386]
[88.81851959 8.15137672]
[86.16818237 -6.61262512]
[87.20304871 -21.57688522]
[91.86045837 -35.83551407]
[99.85847473 -48.52534485]
[110.71292114 -58.87817001]
[123.76670074 -66.26727295]
[138.22958374 -70.24533081]
[153.22604370 -70.57153320]
[167.84822083 -67.22612762]
[181.21095276 -60.41163635]
[192.50531006 -50.54058838]
[201.04754639 -38.21054077]
[206.32057190 -24.16791725]
[208.00514221 -9.26281071]
[205.99931335 5.60247183]
[200.42448425 19.52803421]
[191.61814880 31.67086792]
[180.11340332 41.29588699]
[166.60671997 47.82042313]
[151.91575623 50.84950256]
[136.92982483 50.19975281]
[122.55615997 45.91051102]
[109.66487885 38.24142838]
[99.03554535 27.65571785]
[102.69425201 42.20267105]
[106.35295868 56.74962616]
[120.59964752 61.44342804]
[132.18870544 51.92008972]
[143.77774048 42.39675140]
[155.36679077 32.87341309]
[158.35379028 17.11088371]
[172.60652161 9.74614620]
[187.19149780 16.42880058]
[190.92039490 32.03248596]
[180.93269348 44.58738708]
[164.89013672 44.46246338]
[153.30108643 53.98580170]
[141.71203613 63.50913620]
[130.12298584 73.03247833]
[140.61756897 88.97377777]
[142.87222290 108.69200897]
[157.77667236 110.38240814]
[172.68112183 112.07280731]
[187.58557129 113.76319885]
[194.31999207 100.18294525]
[205.29513550 89.72723389]
[219.18571472 83.65865326]
[234.31436157 82.70999908]
[248.85421753 86.99583435]
[261.04953003 95.99862671]
[269.42764282 108.63124084]
[272.97686768 123.36822510]
[271.26864624 138.43002319]
[264.50918579 151.99784851]
[253.51478577 162.43330383]
[239.61305237 168.47628784]
[224.48269653 169.39706421]
[209.95075989 165.08442688]
[197.77206421 156.05918884]
[189.41723633 143.41114807]
[185.89517212 128.66764832]
[170.99072266 126.97724915]
[156.08627319 125.28685760]
[141.18182373 123.59645844]
[135.58767700 128.59201050]
[147.85714722 137.22103882]
[160.12660217 145.85008240]
[174.78117371 149.05061340]
[184.76043701 160.24946594]
[186.25753784 175.17457581]
[178.70138550 188.13237000]
[164.97445679 194.17979431]
[150.31321716 191.00990295]
[140.31057739 179.83192444]
[138.78215027 164.91058350]
[131.59075928 151.74684143]
[124.39938354 138.58309937]
[118.80522919 143.57864380]
[118.80522919 158.57864380]
[118.80522919 173.57864380]
[118.80522919 188.57864380]
[118.80522919 203.57864380]
[118.80522919 218.57864380]
[118.80522919 233.57864380]
[118.80522919 248.57864380]
[118.80522919 263.57864380]
[118.80522919 278.57864380]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[12 46]
[14 44]
[15 43]
[16 42]
[17 41]
[18 40]
[21 36]
[22 35]
[23 34]
[50 91]
[51 90]
[52 89]
[53 65]
[54 64]
[55 63]
[92 104]
[93 103]
[94 102]
[95 101]
[106 129]
[107 128]
[108 127]
[109 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
