%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUCCUAGAAAUCGCUGUCGCCUUAAUCCAAGCCUACGUUUUCACACUUCUAGUAAGCCUCUxxxxxxxxxxCCGUCCCUAACAAACUAGGAGGCGUCCUUGCCCUAUUACUAUCCAUCCUCAUCCUAGCAAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[159.31718445 400.76928711]
[158.70135498 385.78192139]
[158.08554077 370.79455566]
[157.46971130 355.80722046]
[156.85388184 340.81985474]
[156.23805237 325.83251953]
[155.62223816 310.84515381]
[155.00640869 295.85778809]
[152.40168762 281.08569336]
[147.85440063 266.79156494]
[143.30711365 252.49742126]
[138.75981140 238.20329285]
[123.52334595 231.14970398]
[117.96501160 214.94981384]
[125.97005463 199.42864990]
[121.13024139 185.23089600]
[116.29042053 171.03314209]
[104.86042786 161.48304749]
[107.73122406 145.92446899]
[102.89141083 131.72673035]
[98.05158997 117.52896881]
[83.42671204 106.03218079]
[87.24002838 87.82444000]
[81.82140350 73.83735657]
[67.21785736 62.66743851]
[70.51055145 45.45689774]
[55.68074799 34.58917236]
[58.61938477 17.31465340]
[52.63108826 3.56182528]
[46.64279175 -10.19100380]
[40.65449524 -23.94383240]
[34.66619873 -37.69666290]
[30.27878380 -23.35265350]
[18.92794991 -13.54660511]
[4.09877110 -11.28929138]
[-9.65571499 -17.27378082]
[-18.11243629 -29.66264153]
[-18.67490578 -44.65209198]
[-11.17042828 -57.63988495]
[2.09688044 -64.63835144]
[17.05352592 -63.49873352]
[29.10622025 -54.57239151]
[25.74696159 -69.19139862]
[22.38770103 -83.81040955]
[19.02844238 -98.42941284]
[14.02774620 -106.14879608]
[15.75355721 -113.38300323]
[12.69516087 -128.06790161]
[9.63676548 -142.75279236]
[6.57837057 -157.43769836]
[-8.41815186 -156.49691772]
[-23.39591217 -157.70001221]
[-38.04998398 -161.02250671]
[-52.08202362 -166.39675903]
[-65.20635986 -173.71334839]
[-77.15580750 -182.82333374]
[-87.68707275 -193.54121399]
[-96.58576202 -205.64881897]
[-103.67071533 -218.89964294]
[-108.79768372 -233.02391052]
[-111.86228943 -247.73406982]
[-112.80214691 -262.73065186]
[-111.59811401 -277.70834351]
[-108.27471161 -292.36221313]
[-102.89958954 -306.39392090]
[-95.58219147 -319.51779175]
[-86.47147369 -331.46667480]
[-75.75293732 -341.99728394]
[-63.64478302 -350.89523315]
[-50.39352417 -357.97937012]
[-36.26893997 -363.10543823]
[-21.55858421 -366.16915894]
[-6.56194639 -367.10806274]
[8.41566467 -365.90310669]
[23.06932449 -362.57879639]
[37.10070038 -357.20281982]
[50.22413254 -349.88461304]
[62.17244720 -340.77316284]
[72.70238495 -330.05395508]
[81.59958649 -317.94525146]
[88.68289185 -304.69354248]
[93.80811310 -290.56866455]
[96.87090302 -275.85812378]
[97.80889893 -260.86141968]
[96.60301208 -245.88388062]
[93.27779388 -231.23042297]
[87.90093994 -217.19938660]
[80.58190918 -204.07640076]
[71.46971893 -192.12864685]
[60.74987793 -181.59936523]
[48.64062500 -172.70292664]
[35.38848877 -165.62043762]
[21.26326752 -160.49609375]
[24.32166290 -145.81118774]
[27.38005829 -131.12629700]
[30.43845367 -116.44139862]
[33.64744949 -101.78867340]
[37.00671005 -87.16966248]
[40.36596680 -72.55065918]
[43.72522736 -57.93165207]
[48.41902924 -43.68495941]
[54.40732574 -29.93212891]
[60.39562225 -16.17930031]
[66.38391876 -2.42647123]
[72.37221527 11.32635784]
[83.54209137 16.06935883]
[88.62593842 27.52910805]
[84.38343048 39.75223541]
[95.45357513 44.72357559]
[100.30105591 56.28528976]
[95.80848694 68.41873169]
[101.22711182 82.40581512]
[110.61289215 85.91356659]
[116.57328796 93.96781921]
[117.18453217 103.96899414]
[112.24934387 112.68915558]
[117.08916473 126.88690948]
[121.92897797 141.08465576]
[133.70515442 151.65028381]
[130.48817444 166.19332886]
[135.32798767 180.39108276]
[140.16780090 194.58883667]
[152.89141846 199.11866760]
[160.55482483 210.00228882]
[160.53111267 223.11824036]
[153.05393982 233.65600586]
[157.60124207 247.95013428]
[162.14852905 262.24426270]
[166.69581604 276.53839111]
[171.02517700 262.17675781]
[180.73680115 250.74502563]
[194.20977783 244.15116882]
[209.19544983 243.49574280]
[223.19267273 248.88812256]
[233.86528015 259.42828369]
[239.43199158 273.35711670]
[238.96371460 288.34979248]
[232.53858948 301.90405273]
[221.22900391 311.75762939]
[206.92254639 316.26596069]
[192.00697327 314.67660522]
[178.97177124 307.25479126]
[169.99375916 295.24197388]
[170.60958862 310.22933960]
[171.22541809 325.21667480]
[171.84123230 340.20404053]
[172.45706177 355.19137573]
[173.07289124 370.17874146]
[173.68872070 385.16610718]
[174.30453491 400.15344238]
[180.99606323 415.73098755]
[167.87968445 426.47329712]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 129]
[10 128]
[11 127]
[12 126]
[15 122]
[16 121]
[17 120]
[19 118]
[20 117]
[21 116]
[23 112]
[24 111]
[26 108]
[28 105]
[29 104]
[30 103]
[31 102]
[32 101]
[42 100]
[43 99]
[44 98]
[45 97]
[47 96]
[48 95]
[49 94]
[50 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
