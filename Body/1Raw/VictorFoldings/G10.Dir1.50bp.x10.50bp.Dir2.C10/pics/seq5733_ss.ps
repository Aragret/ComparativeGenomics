%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCCAUAUCUAACAACGUAAAAAUAAAAUGACAGUUUGAACAUACAAAACCCACCCCAUUCCUCCCCAxxxxxxxxxxUUACGACCCCUUAUUUACCGAGAAAGCUCACAAGAACUGCUAACUCAUGCCCCCAUGUCUAACAACAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[92.50000000 77.50000000]
[92.50000000 62.50000000]
[92.50000000 47.50000000]
[92.50000000 32.50000000]
[92.50000000 17.50000000]
[92.50000000 2.49999952]
[92.50000000 -12.50000000]
[92.50000000 -27.50000000]
[92.50000000 -42.50000000]
[77.51124573 -43.13666534]
[62.56302261 -44.40890121]
[47.68225861 -46.31441116]
[32.89577866 -48.84976196]
[18.23022461 -52.01038361]
[3.71202445 -55.79058456]
[-10.63265705 -60.18354797]
[-24.77797127 -65.18135834]
[-38.69842529 -70.77501678]
[-52.36893845 -76.95442963]
[-65.76486969 -83.70846558]
[-78.86208344 -91.02496338]
[-91.63697052 -98.89073181]
[-104.06651306 -107.29158783]
[-116.12831879 -116.21240234]
[-127.80064392 -125.63710022]
[-139.06245422 -135.54869080]
[-149.89346313 -145.92932129]
[-160.27413940 -156.76026917]
[-170.18577576 -168.02203369]
[-179.61053467 -179.69430542]
[-188.53140259 -191.75607300]
[-196.93232727 -204.18557739]
[-204.79815674 -216.96043396]
[-212.11470032 -230.05760193]
[-218.86880493 -243.45350647]
[-225.04829407 -257.12399292]
[-230.64201355 -271.04440308]
[-235.63989258 -285.18969727]
[-240.03292847 -299.53436279]
[-243.81320190 -314.05255127]
[-246.97389221 -328.71807861]
[-249.50930786 -343.50454712]
[-251.41488647 -358.38531494]
[-252.68719482 -373.33352661]
[-253.32394409 -388.32226562]
[-253.32395935 -403.32455444]
[-252.68727112 -418.31329346]
[-251.41500854 -433.26150513]
[-249.50947571 -448.14227295]
[-246.97410583 -462.92874146]
[-243.81346130 -477.59429932]
[-240.03323364 -492.11248779]
[-235.64024353 -506.45718384]
[-230.64241028 -520.60247803]
[-225.04873657 -534.52294922]
[-218.86930847 -548.19342041]
[-212.11523438 -561.58935547]
[-204.79872131 -574.68652344]
[-196.93293762 -587.46142578]
[-188.53205872 -599.89093018]
[-179.61122131 -611.95275879]
[-170.18650818 -623.62506104]
[-160.27490234 -634.88684082]
[-149.89425659 -645.71783447]
[-139.06329346 -656.09851074]
[-127.80150604 -666.01013184]
[-116.12921143 -675.43487549]
[-104.06743622 -684.35571289]
[-91.63792419 -692.75659180]
[-78.86306000 -700.62243652]
[-65.76586914 -707.93896484]
[-52.36996078 -714.69305420]
[-38.69947052 -720.87249756]
[-24.77903175 -726.46618652]
[-10.63373470 -731.46405029]
[3.71093345 -735.85705566]
[18.22912025 -739.63732910]
[32.89466476 -742.79797363]
[47.68113708 -745.33337402]
[62.56189346 -747.23895264]
[77.51011658 -748.51123047]
[92.49886322 -749.14794922]
[107.50113678 -749.14794922]
[122.48988342 -748.51123047]
[137.43811035 -747.23895264]
[152.31886292 -745.33337402]
[167.10533142 -742.79797363]
[181.77087402 -739.63732910]
[196.28906250 -735.85705566]
[210.63372803 -731.46405029]
[224.77903748 -726.46618652]
[238.69946289 -720.87249756]
[252.36996460 -714.69305420]
[265.76586914 -707.93896484]
[278.86306763 -700.62243652]
[291.63790894 -692.75659180]
[304.06744385 -684.35571289]
[316.12921143 -675.43487549]
[327.80151367 -666.01013184]
[339.06329346 -656.09851074]
[349.89425659 -645.71783447]
[360.27490234 -634.88684082]
[370.18652344 -623.62506104]
[379.61123657 -611.95275879]
[388.53207397 -599.89093018]
[396.93295288 -587.46142578]
[404.79873657 -574.68652344]
[412.11523438 -561.58935547]
[418.86929321 -548.19342041]
[425.04873657 -534.52294922]
[430.64242554 -520.60247803]
[435.64025879 -506.45718384]
[440.03323364 -492.11248779]
[443.81344604 -477.59429932]
[446.97409058 -462.92874146]
[449.50949097 -448.14227295]
[451.41500854 -433.26150513]
[452.68725586 -418.31329346]
[453.32397461 -403.32455444]
[453.32394409 -388.32226562]
[452.68719482 -373.33352661]
[451.41488647 -358.38531494]
[449.50930786 -343.50454712]
[446.97387695 -328.71807861]
[443.81320190 -314.05255127]
[440.03292847 -299.53436279]
[435.63989258 -285.18969727]
[430.64199829 -271.04440308]
[425.04827881 -257.12399292]
[418.86880493 -243.45350647]
[412.11471558 -230.05760193]
[404.79815674 -216.96043396]
[396.93231201 -204.18557739]
[388.53140259 -191.75607300]
[379.61053467 -179.69430542]
[370.18579102 -168.02203369]
[360.27413940 -156.76026917]
[349.89346313 -145.92932129]
[339.06243896 -135.54869080]
[327.80062866 -125.63710022]
[316.12832642 -116.21240234]
[304.06652832 -107.29158783]
[291.63696289 -98.89073181]
[278.86209106 -91.02496338]
[265.76486206 -83.70846558]
[252.36894226 -76.95442963]
[238.69842529 -70.77501678]
[224.77796936 -65.18135834]
[210.63265991 -60.18354797]
[196.28797913 -55.79058456]
[181.76977539 -52.01038361]
[167.10421753 -48.84976196]
[152.31773376 -46.31441116]
[137.43698120 -44.40890121]
[122.48875427 -43.13666534]
[107.50000000 -42.50000000]
[107.50000000 -27.50000000]
[107.50000000 -12.50000000]
[107.50000000 2.49999952]
[107.50000000 17.50000000]
[107.50000000 32.50000000]
[107.50000000 47.50000000]
[107.50000000 62.50000000]
[107.50000000 77.50000000]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[4 163]
[5 162]
[6 161]
[7 160]
[8 159]
[9 158]
[10 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
