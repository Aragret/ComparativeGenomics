%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGACCCCCGAAACCAGACGAGCUACCUAAGAACAGCUAAAAGAGCACACCCGUCUAUGUAGxxxxxxxxxxUUAACCAAAUCAACAACAACCUAUUUAGCUGUUCCCCAACCUUUUCCUCCGACCCCCUAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[85.72026825 320.43109131]
[88.31127167 301.22338867]
[88.62332916 286.22662354]
[88.93537903 271.22985840]
[89.24743652 256.23312378]
[89.55949402 241.23635864]
[89.87155151 226.23960876]
[90.18360901 211.24285889]
[90.49566650 196.24609375]
[90.80771637 181.24934387]
[91.11977386 166.25259399]
[76.60211182 162.61631775]
[63.25733948 155.84121704]
[51.75440216 146.26690674]
[42.66991806 134.37332153]
[36.45927048 120.75669098]
[33.43379593 106.09955597]
[33.74514771 91.13666534]
[37.37771988 76.61808014]
[44.14942169 63.27157974]
[53.72079468 51.76620102]
[65.61205292 42.67868423]
[79.22711182 36.46456528]
[93.88346863 33.43535233]
[94.19552612 18.43859863]
[79.99021149 15.02274418]
[66.81712341 8.71788597]
[55.25624466 -0.19557692]
[45.81596756 -11.32245731]
[38.91077042 -24.17030144]
[34.84300613 -38.17118454]
[33.78966522 -52.70681763]
[35.79467773 -67.13584900]
[40.76708221 -80.82215118]
[48.48516083 -93.16289520]
[58.60631561 -103.61507416]
[70.68226624 -111.71939850]
[84.17893219 -117.12050629]
[98.50002289 -119.58249664]
[99.12400055 -134.56951904]
[99.74797821 -149.55653381]
[100.37195587 -164.54354858]
[100.99593353 -179.53056335]
[101.61991119 -194.51757812]
[102.24388885 -209.50459290]
[102.86786652 -224.49160767]
[103.49184418 -239.47862244]
[104.11582184 -254.46563721]
[104.73979950 -269.45266724]
[89.90094757 -271.75231934]
[75.41288757 -275.69897461]
[61.45782089 -281.24301147]
[48.21125031 -288.31466675]
[35.83976364 -296.82501221]
[24.49894524 -306.66708374]
[14.33141994 -317.71701050]
[5.46505356 -329.83590698]
[-1.98864937 -342.87133789]
[-7.93595123 -356.65936279]
[-12.30205822 -371.02658081]
[-15.03206158 -385.79232788]
[-16.09162903 -400.77090454]
[-15.46743488 -415.77389526]
[-13.16732979 -430.61270142]
[-9.22023869 -445.10064697]
[-3.67580223 -459.05554199]
[3.39625359 -472.30187988]
[11.90699005 -484.67312622]
[21.74937439 -496.01364136]
[32.79962921 -506.18084717]
[44.91878891 -515.04687500]
[57.95443726 -522.50018311]
[71.74263763 -528.44702148]
[86.10999298 -532.81274414]
[100.87581635 -535.54229736]
[115.85440826 -536.60137939]
[130.85740662 -535.97674561]
[145.69612122 -533.67620850]
[160.18394470 -529.72869873]
[174.13867188 -524.18383789]
[187.38482666 -517.11138916]
[199.75579834 -508.60028076]
[211.09603882 -498.75756836]
[221.26289368 -487.70700073]
[230.12854004 -475.58758545]
[237.58146667 -462.55169678]
[243.52793884 -448.76330566]
[247.89318848 -434.39584351]
[250.62231445 -419.62994385]
[251.68098450 -404.65130615]
[251.05589294 -389.64834595]
[248.75489807 -374.80969238]
[244.80693054 -360.32199097]
[239.26167297 -346.36740112]
[232.18881226 -333.12145996]
[223.67733765 -320.75076294]
[213.83427429 -309.41082764]
[202.78341675 -299.24429321]
[190.66372681 -290.37899780]
[177.62763977 -282.92648315]
[163.83908081 -276.98040771]
[149.47146606 -272.61560059]
[134.70547485 -269.88690186]
[119.72681427 -268.82867432]
[119.10283661 -253.84167480]
[118.47885895 -238.85464478]
[117.85488129 -223.86763000]
[117.23090363 -208.88061523]
[116.60692596 -193.89360046]
[115.98295593 -178.90658569]
[115.35897827 -163.91957092]
[114.73500061 -148.93255615]
[114.11102295 -133.94554138]
[113.48704529 -118.95851898]
[128.39341736 -114.99413300]
[142.05723572 -107.82261658]
[153.79800415 -97.79766083]
[163.03021240 -85.41515350]
[169.29257202 -71.28865051]
[172.27099609 -56.11898804]
[171.81446838 -40.65947723]
[167.94259644 -25.67853928]
[160.84481812 -11.92148209]
[150.87115479 -0.07342952]
[138.51492310 9.27479744]
[124.38835907 15.65614319]
[109.19228363 18.75065613]
[108.88022614 33.74740982]
[123.39788818 37.38368225]
[136.74266052 44.15878677]
[148.24560547 53.73309708]
[157.33007812 65.62667084]
[163.54072571 79.24330902]
[166.56620789 93.90044403]
[166.25485229 108.86333466]
[162.62228394 123.38191986]
[155.85058594 136.72842407]
[146.27920532 148.23379517]
[134.38793945 157.32131958]
[120.77288818 163.53543091]
[106.11653137 166.56465149]
[105.80447388 181.56140137]
[105.49241638 196.55815125]
[105.18035889 211.55490112]
[104.86830139 226.55166626]
[104.55625153 241.54841614]
[104.24419403 256.54516602]
[103.93213654 271.54193115]
[103.62007904 286.53866577]
[103.30802155 301.53543091]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[11 141]
[24 128]
[25 127]
[39 114]
[40 113]
[41 112]
[42 111]
[43 110]
[44 109]
[45 108]
[46 107]
[47 106]
[48 105]
[49 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
