%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUUCUACUAUGAACCCCCCUCCCCAUACCCAACCCCCUGGUCAACCUCAACCUAGGCCUCCxxxxxxxxxxAACUCAUCACUAGACAUCGUACUACACGACACGUACUACGUUGUAGCCCACUUCCACUAUGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-10.15117931 237.32057190]
[-20.02688599 248.61085510]
[-29.90259171 259.90112305]
[-39.77829742 271.19140625]
[-49.53757095 282.58248901]
[-59.17938614 294.07315063]
[-68.82119751 305.56381226]
[-78.46301270 317.05450439]
[-88.10482788 328.54516602]
[-97.74664307 340.03582764]
[-100.89324951 348.67843628]
[-107.70630646 351.66079712]
[-117.58200836 362.95108032]
[-127.45771790 374.24136353]
[-126.15388489 389.99176025]
[-136.43276978 401.99676514]
[-152.19609070 403.13400269]
[-164.09175110 392.72875977]
[-165.06225586 376.95431519]
[-154.53184509 365.16931152]
[-138.74800110 364.36563110]
[-128.87228394 353.07537842]
[-118.99658203 341.78509521]
[-109.23731232 330.39401245]
[-99.59549713 318.90335083]
[-89.95368195 307.41268921]
[-80.31186676 295.92199707]
[-70.67005157 284.43133545]
[-61.02824020 272.94067383]
[-59.12624359 265.75079346]
[-51.06857681 261.31570435]
[-41.19287109 250.02543640]
[-31.31716537 238.73515320]
[-21.44145966 227.44487000]
[-36.34439468 211.35720825]
[-49.13151932 193.54150391]
[-59.60440445 174.27420044]
[-67.60052490 153.85430908]
[-72.99580383 132.59869385]
[-75.70651245 110.83720398]
[-75.69058228 88.90754700]
[-72.94826508 67.15002441]
[-67.52211761 45.90227127]
[-59.49633408 25.49401093]
[-48.99547195 6.24194527]
[-36.18247986 -11.55517101]
[-47.37077332 -21.54626846]
[-58.55907059 -31.53736496]
[-69.84934998 -41.41307068]
[-81.24042511 -51.17234421]
[-92.63150024 -60.93162155]
[-107.69359589 -57.20161438]
[-122.05883026 -63.06843185]
[-130.20349121 -76.27616882]
[-128.99577332 -91.74617004]
[-118.90007782 -103.52991486]
[-103.79840851 -107.09630585]
[-89.49765778 -101.07399750]
[-81.49675751 -87.77868652]
[-82.87222290 -72.32269287]
[-71.48114777 -62.56341934]
[-60.09007645 -52.80414581]
[-52.92008591 -50.82843399]
[-48.56797409 -42.72566223]
[-37.37967682 -32.73456573]
[-26.19138145 -22.74346733]
[-18.18971062 -30.46614838]
[-9.71640396 -37.66820526]
[-0.80527335 -44.32089233]
[8.50812054 -50.39767075]
[18.18661308 -55.87428665]
[28.19158173 -60.72888565]
[38.48310089 -64.94209290]
[49.02010727 -68.49710083]
[59.76054382 -71.37972260]
[70.66156006 -73.57845306]
[81.67964935 -75.08451843]
[92.77084351 -75.89190674]
[103.89089203 -75.99739838]
[114.99540710 -75.40057373]
[126.04008484 -74.10381317]
[136.98085022 -72.11228943]
[147.77404785 -69.43395233]
[158.37660217 -66.07949066]
[168.74620056 -62.06228256]
[178.84146118 -57.39836884]
[188.62211609 -52.10635757]
[198.04911804 -46.20736313]
[207.08485413 -39.72492981]
[215.69328308 -32.68492508]
[223.84002686 -25.11543846]
[231.49258423 -17.04667854]
[238.62042236 -8.51084423]
[245.19508362 0.45800188]
[251.19036865 9.82407093]
[256.58230591 19.54998779]
[261.34942627 29.59693909]
[265.47265625 39.92483521]
[268.93557739 50.49246216]
[271.72436523 61.25764465]
[273.82788086 72.17743683]
[275.23773193 83.20824432]
[275.94830322 94.30606842]
[290.94750977 94.46006012]
[305.94671631 94.61405945]
[320.94592285 94.76805878]
[335.94512939 94.92205048]
[339.76364136 92.57285309]
[343.73150635 91.69001007]
[347.35766602 92.13473511]
[350.24981689 93.61954498]
[352.15539551 95.75491333]
[367.09143066 97.13893890]
[382.02743530 98.52296448]
[396.96343994 99.90699005]
[413.29287720 95.34789276]
[422.19424438 109.77709961]
[410.79309082 122.32499695]
[395.57940674 114.84300232]
[380.64340210 113.45897675]
[365.70739746 112.07495117]
[350.77136230 110.69092560]
[335.79113770 109.92126465]
[320.79193115 109.76726532]
[305.79272461 109.61327362]
[290.79351807 109.45927429]
[275.79431152 109.30527496]
[274.45895386 123.54351807]
[271.97232056 137.62638855]
[268.35079956 151.46096802]
[263.61831665 164.95593262]
[257.80606079 178.02224731]
[250.95242310 190.57366943]
[243.10261536 202.52738953]
[234.30844116 213.80450439]
[224.62794495 224.33059692]
[214.12501526 234.03620911]
[202.86892700 242.85729980]
[190.93400574 250.73562622]
[178.39898682 257.61923218]
[165.34658813 263.46267700]
[151.86296082 268.22738647]
[138.03707886 271.88195801]
[123.96018982 274.40222168]
[109.72518158 275.77157593]
[95.42598724 275.98095703]
[81.15698242 275.02905273]
[67.01232147 272.92205811]
[53.08535767 269.67391968]
[39.46799469 265.30609131]
[26.25008965 259.84735107]
[13.51887703 253.33375549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[4 31]
[5 29]
[6 28]
[7 27]
[8 26]
[9 25]
[10 24]
[12 23]
[13 22]
[14 21]
[46 66]
[47 65]
[48 64]
[49 62]
[50 61]
[51 60]
[103 127]
[104 126]
[105 125]
[106 124]
[107 123]
[112 122]
[113 121]
[114 120]
[115 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
