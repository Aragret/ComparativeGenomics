%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUACUACUAAUCUCAUCAAUACAACCCCCGCCCAUCCUACCCAGCACACACACACCGCUGCUxxxxxxxxxxGCAAUCUCAAUUACAAUAUAUACACCAACAAACAAUGUUCAACCAGUAACUACUACUAAUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-21.89779091 220.62564087]
[-29.93250084 211.92481995]
[-41.71463776 221.20819092]
[-53.49677277 230.49157715]
[-59.54792023 245.10986328]
[-74.33344269 246.90921021]
[-86.11557770 256.19259644]
[-97.89771271 265.47598267]
[-109.67984772 274.75936890]
[-121.46199036 284.04275513]
[-133.24412537 293.32614136]
[-127.43556213 307.26037598]
[-125.60295868 322.24517822]
[-127.88230133 337.16854858]
[-134.10444641 350.92309570]
[-143.80767822 362.48812866]
[-156.27194214 371.00546265]
[-170.57231140 375.84301758]
[-185.64759827 376.64184570]
[-200.37913513 373.34265137]
[-213.67372131 366.19027710]
[-224.54481506 355.71545410]
[-232.18572998 342.69552612]
[-236.02943420 328.09658813]
[-235.79069519 313.00204468]
[-231.48725891 298.53195190]
[-223.43844604 285.76016235]
[-212.24154663 275.63433838]
[-198.72741699 268.90597534]
[-183.89892578 266.07427979]
[-168.85644531 267.34942627]
[-154.71620178 272.63677979]
[-142.52751160 281.54400635]
[-130.74537659 272.26062012]
[-118.96323395 262.97723389]
[-107.18109894 253.69384766]
[-95.39896393 244.41046143]
[-83.61682892 235.12707520]
[-78.40841675 221.17280579]
[-62.78015900 218.70944214]
[-50.99802399 209.42605591]
[-39.21588516 200.14266968]
[-53.67270660 176.12042236]
[-64.02211761 150.06359863]
[-69.98750305 122.66865540]
[-71.40940857 94.66782379]
[-68.24983978 66.80950928]
[-60.59324646 39.83831787]
[-48.64426804 14.47514820]
[-32.72228241 -8.60208988]
[-13.25286102 -28.77658081]
[-22.65671730 -40.46278763]
[-32.06057358 -52.14899826]
[-41.46443176 -63.83520508]
[-56.46956253 -60.81782150]
[-71.15493011 -65.13041687]
[-82.14595032 -75.78199768]
[-86.91696167 -90.32489777]
[-84.37162018 -105.41727448]
[-75.09483337 -117.59101105]
[-61.21833038 -124.04866028]
[-45.93083572 -123.30631256]
[-32.74530029 -115.53455353]
[-24.69166756 -102.51927185]
[-23.62060165 -87.25128174]
[-29.77822304 -73.23906708]
[-20.37436676 -61.55285645]
[-10.97050953 -49.86664581]
[-1.56665242 -38.18043900]
[6.12818098 -43.51898956]
[14.10297585 -48.42950821]
[22.33394814 -52.89735794]
[30.79654884 -56.90921021]
[39.46554184 -60.45310211]
[48.31507111 -63.51845932]
[57.31874084 -66.09614563]
[66.44970703 -68.17846680]
[75.68073273 -69.75921631]
[84.98428345 -70.83367920]
[94.33261871 -71.39865875]
[103.69786072 -71.45245361]
[113.05206299 -70.99491882]
[122.36734772 -70.02741241]
[131.61592102 -68.55281830]
[140.77020264 -66.57553101]
[149.80290222 -64.10146332]
[158.68705750 -61.13797379]
[167.39619446 -57.69391251]
[175.90432739 -53.77955246]
[184.18609619 -49.40655899]
[192.21678162 -44.58798218]
[199.97242737 -39.33818817]
[207.42993164 -33.67283630]
[214.56704712 -27.60881996]
[221.36247253 -21.16422653]
[227.79594421 -14.35827541]
[233.84828186 -7.21126509]
[239.50143433 0.25548995]
[244.73854065 8.01972008]
[249.54399109 16.05827141]
[253.90342712 24.34716797]
[257.80389404 32.86169052]
[261.23370361 41.57644272]
[264.18264771 50.46543884]
[266.64196777 59.50216293]
[268.60427856 68.65966797]
[270.06375122 77.91064453]
[271.01602173 87.22749329]
[286.00891113 86.76557159]
[301.00180054 86.30364227]
[315.99468994 85.84171295]
[327.98742676 75.18557739]
[343.77093506 78.05976868]
[351.23742676 92.25946045]
[344.65924072 106.89186096]
[329.08261108 110.73224640]
[316.45660400 100.83460236]
[301.46371460 101.29652405]
[286.47082520 101.75845337]
[271.47796631 102.22038269]
[270.91580200 114.05021667]
[269.53851318 125.81304169]
[267.35266113 137.45275879]
[264.36865234 148.91386414]
[260.60073853 160.14167786]
[256.06689453 171.08267212]
[250.78871155 181.68464661]
[244.79139709 191.89706421]
[238.10354614 201.67118835]
[230.75703430 210.96041870]
[222.78692627 219.72045898]
[214.23121643 227.90953064]
[205.13070679 235.48857117]
[195.52880859 242.42143250]
[185.47131348 248.67506409]
[175.00617981 254.21961975]
[164.18333435 259.02868652]
[153.05438232 263.07928467]
[141.67239380 266.35211182]
[130.09165955 268.83160400]
[118.36742401 270.50588989]
[106.55558777 271.36697388]
[94.71247864 271.41079712]
[82.89459229 270.63711548]
[71.15828705 269.04962158]
[59.55952835 266.65588379]
[48.15364456 263.46734619]
[36.99502563 259.49917603]
[26.13689041 254.77033997]
[15.63102627 249.30335999]
[5.52753592 243.12432861]
[-4.12539339 236.26269531]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 42]
[3 41]
[4 40]
[6 38]
[7 37]
[8 36]
[9 35]
[10 34]
[11 33]
[51 69]
[52 68]
[53 67]
[54 66]
[108 120]
[109 119]
[110 118]
[111 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
