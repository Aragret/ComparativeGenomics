%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAGCUACGCAAAAUCUUAGCAUACUCCUCAAUUACCCACAUAGGAUGAAUAAUAGCAGUUxxxxxxxxxxCUAAGCCCUUACUAGACCAAUGGGACUUAAACCCACAAACACUUAGUUAACAGCUAAGCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[114.52803802 278.98220825]
[114.52803802 263.98220825]
[114.52803802 248.98219299]
[114.52803802 233.98219299]
[114.52803802 218.98219299]
[114.52803802 203.98219299]
[114.52803802 188.98219299]
[114.52803802 173.98219299]
[114.52803802 158.98219299]
[114.52803802 143.98219299]
[90.04360199 139.31213379]
[74.68134308 123.85607910]
[71.49353027 105.44046021]
[56.53327942 104.34914398]
[41.57302856 103.25783539]
[26.61277962 102.16652679]
[37.25423813 112.73815918]
[40.63555908 127.35207367]
[35.71906281 141.52345276]
[24.01355934 150.90328979]
[9.11131573 152.61300659]
[-4.41435671 146.12794495]
[-12.41260338 133.43824768]
[-12.42886353 118.43826294]
[-4.45814753 105.73126984]
[9.05422401 99.21675110]
[-5.44137239 95.35959625]
[-19.93696785 91.50243378]
[-37.56273651 96.72853851]
[-49.53533173 83.93569183]
[-64.10803223 80.38092804]
[-78.68074036 76.82617188]
[-93.92140961 81.07263947]
[-104.45250702 70.53958130]
[-119.02521515 66.98482513]
[-127.41696930 79.60838318]
[-139.62199402 88.59799194]
[-154.16647339 92.86812592]
[-169.29408264 91.90313721]
[-183.17810059 85.81955719]
[-194.14195251 75.35199738]
[-200.86169434 61.76447678]
[-202.52590942 46.69775391]
[-198.93362427 31.97120476]
[-190.51861572 19.36313248]
[-178.29704285 10.39602566]
[-163.74472046 6.15270376]
[-148.61892700 7.14556980]
[-134.74613953 13.25472927]
[-123.80159760 23.74247360]
[-117.10689545 37.34235382]
[-115.47045135 52.41212082]
[-100.89775085 55.96688080]
[-86.69941711 51.46615219]
[-75.12597656 62.25346375]
[-60.55327225 65.80822754]
[-45.98057175 69.36299133]
[-35.44345856 63.33998489]
[-23.24221230 66.22937012]
[-16.07980919 77.00683594]
[-1.58421278 80.86399841]
[12.91138363 84.72116089]
[27.70409012 87.20627594]
[42.66434097 88.29758453]
[57.62458801 89.38890076]
[72.58483887 90.48020935]
[96.21299744 62.52058792]
[139.83258057 76.35971069]
[148.34367371 64.00814056]
[156.85476685 51.65657043]
[142.62858582 56.41218185]
[127.80186462 54.13876343]
[115.65413666 45.33917236]
[108.87237549 31.95980072]
[108.95662689 16.96003723]
[115.88826752 3.65769339]
[128.13407898 -5.00487471]
[142.98539734 -7.11158657]
[157.15725708 -2.19645762]
[167.51496887 8.65333080]
[171.76750183 23.03790665]
[168.97340393 37.77733994]
[180.06472778 27.67868996]
[191.15603638 17.58003998]
[202.24734497 7.48139048]
[213.23301697 -2.73208928]
[224.11184692 -13.05929470]
[234.99066162 -23.38649940]
[229.86489868 -37.72687912]
[231.02151489 -52.91180801]
[238.26011658 -66.31040955]
[250.32656860 -75.60129547]
[265.13031006 -79.17476654]
[280.10644531 -76.41168976]
[292.66033936 -67.79078674]
[300.61691284 -54.80568314]
[302.59762573 -39.70612717]
[298.25936890 -25.10820770]
[288.35369873 -13.54110241]
[274.59689331 -7.00888109]
[259.37237549 -6.64329147]
[245.31787109 -12.50767422]
[234.43904114 -2.18046904]
[223.56022644 8.14673615]
[220.85697937 15.07768917]
[212.34600830 18.57270622]
[201.25468445 28.67135620]
[190.16337585 38.77000427]
[179.07205200 48.86865616]
[169.20632935 60.16765976]
[160.69523621 72.51923370]
[152.18415833 84.87080383]
[154.26309204 92.07691193]
[166.68518066 83.66905975]
[178.52003479 92.88513947]
[173.41201782 106.98862457]
[158.42098999 106.48912811]
[160.49992371 113.69523621]
[174.28230286 119.61519623]
[188.06469727 125.53516388]
[203.43807983 120.94838715]
[216.52651978 130.22590637]
[217.28967285 146.25079346]
[205.14212036 156.73013306]
[189.40242004 153.62507629]
[182.14472961 139.31755066]
[168.36235046 133.39758301]
[154.57997131 127.47761536]
[148.31698608 131.60375977]
[157.57397461 143.40664673]
[166.83097839 155.20953369]
[176.08796692 167.01240540]
[188.02120972 176.10073853]
[187.50888062 191.09197998]
[174.98300171 199.34439087]
[161.00634766 193.89891052]
[157.36517334 179.34725952]
[150.17378235 166.18353271]
[142.98240662 153.01979065]
[135.79101562 139.85604858]
[129.52804565 143.98219299]
[129.52804565 158.98219299]
[129.52804565 173.98219299]
[129.52804565 188.98219299]
[129.52804565 203.98219299]
[129.52804565 218.98219299]
[129.52804565 233.98219299]
[129.52804565 248.98219299]
[129.52804565 263.98220825]
[129.52804565 278.98220825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[13 66]
[14 65]
[15 64]
[16 63]
[26 62]
[27 61]
[28 60]
[30 57]
[31 56]
[32 55]
[34 53]
[35 52]
[68 112]
[69 111]
[70 110]
[82 109]
[83 108]
[84 107]
[85 106]
[86 104]
[87 103]
[88 102]
[118 128]
[119 127]
[120 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
