%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUCAACCUAGGCCUCCUAUUUAUUCUAGCCACCUCUAGCCUAGCCGUUUACUCAAUCCUCxxxxxxxxxxCGAUCCGUCCCUAACAAACUAGGAGGCGUCCUUGCCCUAUUACUAUCCAUCCUCAUCCUAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[141.95576477 269.83886719]
[141.03234863 254.86730957]
[140.10893250 239.89575195]
[139.18551636 224.92420959]
[138.26211548 209.95265198]
[137.33869934 194.98110962]
[136.41528320 180.00955200]
[131.86799622 165.71542358]
[123.97151184 152.96217346]
[116.07502747 140.20890808]
[108.17854309 127.45565796]
[93.38941193 127.87474823]
[80.36342621 120.85920715]
[72.57482910 108.28018951]
[72.10095215 93.49270630]
[79.06819916 80.44082642]
[71.17171478 67.68756866]
[67.14378357 65.71896362]
[64.27463531 62.83945465]
[62.70985031 59.53821945]
[62.41648102 56.30044556]
[63.20063400 53.54796982]
[56.37705612 40.18986893]
[49.55348206 26.83176994]
[42.72990799 13.47367096]
[35.90633011 0.11557115]
[29.08275604 -13.24252796]
[22.25918007 -26.60062790]
[15.43560505 -39.95872879]
[8.47524929 -53.24606705]
[1.37884581 -66.46125031]
[-5.71755743 -79.67643738]
[-19.55784225 -73.86341095]
[-33.88802719 -69.39232635]
[-48.57832718 -66.30367279]
[-63.49570847 -64.62542725]
[-78.50507355 -64.37277985]
[-93.47048187 -65.54802704]
[-108.25641632 -68.14051819]
[-122.72895050 -72.12678528]
[-136.75703430 -77.47071838]
[-150.21362305 -84.12391663]
[-162.97683716 -92.02613831]
[-174.93109131 -101.10580444]
[-185.96813965 -111.28070068]
[-195.98800659 -122.45867157]
[-204.89994812 -134.53848267]
[-212.62327576 -147.41075134]
[-219.08802795 -160.95887756]
[-224.23565674 -175.06018066]
[-228.01954651 -189.58694458]
[-230.40542603 -204.40762329]
[-231.37168884 -219.38796997]
[-230.90959167 -234.39234924]
[-229.02331543 -249.28485107]
[-225.72993469 -263.93060303]
[-221.05929565 -278.19699097]
[-215.05368042 -291.95480347]
[-207.76747131 -305.07943726]
[-199.26667786 -317.45205688]
[-189.62826538 -328.96054077]
[-178.93952942 -339.50076294]
[-167.29727173 -348.97717285]
[-154.80694580 -357.30401611]
[-141.58163452 -364.40585327]
[-127.74114227 -370.21838379]
[-113.41079712 -374.68893433]
[-98.72037506 -377.77706909]
[-83.80294037 -379.45477295]
[-68.79356384 -379.70684814]
[-53.82819748 -378.53106689]
[-39.04236221 -375.93801880]
[-24.56996536 -371.95123291]
[-10.54207611 -366.60681152]
[2.91426563 -359.95309448]
[15.67719364 -352.05041504]
[27.63112259 -342.97030640]
[38.66779327 -332.79501343]
[48.68725204 -321.61666870]
[57.59875870 -309.53652954]
[65.32160950 -296.66400146]
[71.78586578 -283.11563110]
[76.93297577 -269.01416016]
[80.71633911 -254.48724365]
[83.10168457 -239.66648865]
[84.06740570 -224.68609619]
[83.60475922 -209.68173218]
[81.71794128 -194.78930664]
[78.42402649 -180.14366150]
[73.75286102 -165.87744141]
[67.74674225 -152.11984253]
[60.46006012 -138.99548340]
[51.95880890 -126.62319183]
[42.31998062 -115.11503601]
[31.63086319 -104.57522583]
[19.98826599 -95.09922028]
[7.49762535 -86.77283478]
[14.59402847 -73.55765533]
[21.69043159 -60.34247208]
[27.66253853 -55.91007614]
[28.79370499 -46.78230286]
[35.61727905 -33.42420197]
[42.44085693 -20.06610298]
[49.26443100 -6.70800400]
[56.08800507 6.65009499]
[62.91158295 20.00819397]
[69.73515320 33.36629486]
[76.55873108 46.72439194]
[83.92497253 59.79108810]
[91.82145691 72.54434204]
[106.61058807 72.12525177]
[119.63657379 79.14079285]
[127.42517090 91.71981049]
[127.89904785 106.50729370]
[120.93180084 119.55917358]
[128.82827759 132.31242371]
[136.72476196 145.06568909]
[144.62124634 157.81893921]
[144.43417358 142.82011414]
[147.77635193 128.19718933]
[154.46066284 114.76885986]
[164.11286926 103.28692627]
[176.19259644 94.39421844]
[190.02354431 88.58860779]
[204.83134460 86.19512939]
[219.78700256 87.34778595]
[234.05316162 91.98204041]
[246.83116150 99.83843994]
[257.40557861 110.47713470]
[265.18438721 123.30250549]
[269.73208618 137.59649658]
[270.79406738 152.55885315]
[268.31091309 167.35189819]
[262.42156982 181.14739990]
[253.45581055 193.17300415]
[241.91560364 202.75544739]
[228.44700623 209.35824585]
[213.80409241 212.61174011]
[198.80667114 212.33377075]
[184.29438782 208.53988647]
[171.07971191 201.44252014]
[159.90252686 191.43901062]
[151.38682556 179.08613586]
[152.31024170 194.05769348]
[153.23365784 209.02923584]
[154.15707397 224.00079346]
[155.08049011 238.97233582]
[156.00390625 253.94389343]
[156.92730713 268.91543579]
[166.43174744 282.27947998]
[159.36521912 297.07800293]
[142.99717712 298.08755493]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 118]
[9 117]
[10 116]
[11 115]
[16 110]
[17 109]
[22 108]
[23 107]
[24 106]
[25 105]
[26 104]
[27 103]
[28 102]
[29 101]
[30 99]
[31 98]
[32 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
