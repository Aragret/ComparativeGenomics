%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCACACAUUCGAAGAACCCGUAUACAUAAAAUCUAGACAAAAAAGGAAGGAAUCGAACCCxxxxxxxxxxACUGUAUCCGACAUCUGGUUCCUACUUCAGGGUCAUAAAGCCUAAAUAGCCCACACGUUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[149.43344116 461.61285400]
[149.12138367 446.61608887]
[148.80932617 431.61932373]
[148.49726868 416.62258911]
[148.18521118 401.62582397]
[147.87315369 386.62905884]
[147.56109619 371.63232422]
[147.24903870 356.63555908]
[146.93698120 341.63882446]
[145.06936646 326.75552368]
[141.66639709 312.14663696]
[126.31768036 312.71963501]
[111.14512634 310.30148315]
[96.72625732 304.98245239]
[83.61026001 296.96313477]
[72.29705811 286.54714966]
[63.21829605 274.12942505]
[56.72081375 260.18133545]
[53.05344391 245.23278809]
[52.35745621 229.85205078]
[54.66112900 214.62419128]
[59.87859726 200.12884521]
[67.81305695 186.91807556]
[78.16417694 175.49542236]
[90.53949738 166.29666138]
[104.46926880 159.67320251]
[100.76310730 145.13825989]
[97.05694580 130.60333252]
[93.35078430 116.06838989]
[81.74944305 106.56002808]
[66.76972961 105.78018951]
[52.58596039 112.78955841]
[40.27816010 104.40103149]
[25.29844475 103.62118530]
[16.37802124 116.20806885]
[2.06017566 121.95288086]
[-13.08631802 119.02247620]
[-24.22826958 108.35192871]
[-27.81032181 93.34618378]
[-22.68945503 78.79351044]
[-10.49972057 69.33761597]
[4.86918306 67.99584961]
[18.51309395 75.19635010]
[26.07828903 88.64147186]
[41.05800247 89.42131805]
[54.17032242 82.35617065]
[67.54957581 90.80046844]
[82.52928925 91.58031464]
[69.89767456 83.49066925]
[69.17681122 68.50799561]
[80.97342682 59.24301910]
[95.35847473 63.49393845]
[100.22425079 77.68289185]
[103.01657104 62.94508743]
[105.80889893 48.20727921]
[99.18984985 37.08783340]
[101.86232758 24.83724785]
[111.85050964 17.94207191]
[114.94882965 3.26554608]
[118.04715729 -11.41097927]
[121.14547729 -26.08750534]
[124.24379730 -40.76403046]
[127.34211731 -55.44055557]
[130.44044495 -70.11708069]
[133.38592529 -84.82504272]
[136.17825317 -99.56285095]
[125.90988159 -88.62847137]
[112.56462097 -81.77982330]
[97.69409943 -79.81320190]
[83.02730560 -82.95726776]
[70.26953125 -90.84645081]
[60.90411377 -102.56348419]
[56.01996613 -116.74604797]
[56.18495941 -131.74514771]
[61.37990952 -145.81683350]
[71.00080872 -157.32501221]
[83.92903900 -164.93165588]
[98.66145325 -167.75230408]
[113.48510742 -165.45904541]
[126.67649078 -158.31849670]
[136.70184326 -147.16087341]
[142.39550781 -133.28347778]
[143.09515381 -118.29695129]
[150.55006409 -131.31326294]
[158.00497437 -144.32957458]
[155.20352173 -160.12614441]
[165.91479492 -172.06967163]
[181.92202759 -170.99813843]
[190.94583130 -157.73350525]
[186.06393433 -142.45126343]
[171.02128601 -136.87466431]
[163.56637573 -123.85835266]
[156.11146545 -110.84204102]
[150.91604614 -96.77052307]
[148.12373352 -82.03272247]
[149.98071289 -74.82874298]
[145.11697388 -67.01876068]
[142.01864624 -52.34223557]
[138.92031860 -37.66571045]
[135.82200623 -22.98918343]
[132.72367859 -8.31265736]
[129.62535095 6.36386776]
[126.52703857 21.04039383]
[132.88255310 37.36851120]
[120.54669952 50.99960709]
[117.75437927 65.73741150]
[114.96205139 80.47521973]
[120.47541809 94.17944336]
[116.80354309 106.38269806]
[107.88571930 112.36222839]
[111.59188080 126.89716339]
[115.29804230 141.43209839]
[119.00420380 155.96704102]
[133.64552307 155.08303833]
[148.19413757 156.91775513]
[162.14968872 161.40658569]
[175.03253174 168.39360046]
[186.40014648 177.63710022]
[195.86241150 188.81787109]
[203.09492493 201.55026245]
[207.85018921 215.39544678]
[209.96604919 229.87661743]
[209.37121582 244.49531555]
[206.08769226 258.74865723]
[200.22990417 272.14657593]
[192.00082397 284.22879028]
[181.68479919 294.58041382]
[169.63783264 302.84640503]
[156.27528381 308.74365234]
[159.67826843 323.35256958]
[166.13032532 309.81109619]
[178.41018677 301.19686890]
[193.33923340 299.73962402]
[207.05313110 305.81655884]
[216.00207520 317.85467529]
[217.86965942 332.73794556]
[212.17247009 346.61389160]
[200.38520813 355.89077759]
[185.55895996 358.16726685]
[171.53146362 352.85412598]
[161.93373108 341.32675171]
[162.24578857 356.32351685]
[162.55784607 371.32025146]
[162.86990356 386.31701660]
[163.18196106 401.31378174]
[163.49401855 416.31051636]
[163.80607605 431.30728149]
[164.11813354 446.30404663]
[164.43019104 461.30078125]
[167.02117920 480.50851440]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 130]
[11 129]
[26 113]
[27 112]
[28 111]
[29 110]
[30 48]
[31 47]
[33 45]
[34 44]
[53 107]
[54 106]
[55 105]
[58 103]
[59 102]
[60 101]
[61 100]
[62 99]
[63 98]
[64 97]
[65 95]
[66 94]
[83 93]
[84 92]
[85 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
