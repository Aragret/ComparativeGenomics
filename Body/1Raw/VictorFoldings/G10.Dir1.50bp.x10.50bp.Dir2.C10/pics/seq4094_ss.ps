%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAUUAUUAUAAUAAACACCCUCACCACUACAAUCUUCCUAGGAACAACAUAUGACGCACUCxxxxxxxxxxCCCCUGACAAAACACAUAGCCUACCCCUUCCUUGUACUAUCCCUAUGAGGCAUAAUUAUAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 283.75805664]
[92.50000000 268.75805664]
[92.50000000 253.75805664]
[92.50000000 238.75805664]
[92.50000000 223.75805664]
[92.50000000 208.75805664]
[92.50000000 193.75805664]
[92.50000000 178.75805664]
[92.50000000 163.75805664]
[92.50000000 148.75805664]
[85.22756195 147.06774902]
[78.29351044 144.29927063]
[71.85668182 140.51605225]
[61.52577591 151.39137268]
[51.19487381 162.26667786]
[40.86397171 173.14199829]
[37.55564117 189.20396423]
[21.90828133 194.11235046]
[10.01855659 182.81782532]
[14.11759472 166.93922424]
[29.98865700 162.81109619]
[40.31956100 151.93577576]
[50.65046310 141.06047058]
[60.98136520 130.18515015]
[51.79767609 110.49444580]
[51.96417618 88.76804352]
[61.44856262 69.22039032]
[78.41107941 55.64331055]
[99.56137085 50.67044449]
[101.70995331 35.82512283]
[103.85852814 20.97979927]
[106.00711060 6.13447666]
[108.15569305 -8.71084595]
[93.47938538 -11.83683872]
[79.04177094 -15.92596722]
[64.90597534 -20.96034813]
[51.13381577 -26.91796875]
[37.78550720 -33.77277756]
[24.91942406 -41.49480057]
[12.59182739 -50.05027008]
[0.85662180 -59.40177536]
[-10.23487759 -69.50842285]
[-20.63417053 -80.32601929]
[-30.29578018 -91.80726624]
[-39.17746353 -103.90195465]
[-47.24037933 -116.55718994]
[-54.44926834 -129.71765137]
[-60.77261353 -143.32577515]
[-66.18276215 -157.32205200]
[-70.65605164 -171.64530945]
[-74.17292786 -186.23287964]
[-76.71800995 -201.02099609]
[-78.28016663 -215.94497681]
[-78.85256958 -230.93957520]
[-78.43271637 -245.93922424]
[-77.02244568 -260.87832642]
[-74.62791443 -275.69155884]
[-71.25959778 -290.31414795]
[-66.93223572 -304.68215942]
[-61.66473007 -318.73275757]
[-55.48013306 -332.40447998]
[-48.40547943 -345.63760376]
[-40.47170639 -358.37420654]
[-31.71350861 -370.55859375]
[-22.16918182 -382.13751221]
[-11.88046074 -393.06033325]
[-0.89233726 -403.27929688]
[10.74714088 -412.74966431]
[22.98707581 -421.43008423]
[35.77394485 -429.28259277]
[49.05183792 -436.27282715]
[62.76268768 -442.37020874]
[76.84654236 -447.54812622]
[91.24182129 -451.78390503]
[105.88556671 -455.05902100]
[120.71375275 -457.35913086]
[135.66152954 -458.67425537]
[150.66355896 -458.99856567]
[165.65420532 -458.33065796]
[180.56793213 -456.67349243]
[195.33953857 -454.03427124]
[209.90441895 -450.42456055]
[224.19888306 -445.86013794]
[238.16043091 -440.36096191]
[251.72799683 -433.95108032]
[264.84228516 -426.65850830]
[277.44592285 -418.51516724]
[289.48379517 -409.55664062]
[300.90325928 -399.82208252]
[311.65441895 -389.35412598]
[321.69021606 -378.19848633]
[330.96679688 -366.40396118]
[339.44357300 -354.02212524]
[347.08349609 -341.10711670]
[353.85314941 -327.71542358]
[359.72293091 -313.90557861]
[364.66717529 -299.73800659]
[368.66427612 -285.27465820]
[371.69674683 -270.57873535]
[373.75131226 -255.71453857]
[374.81896973 -240.74703979]
[374.89511108 -225.74171448]
[373.97937012 -210.76416016]
[372.07574463 -195.87988281]
[369.19256592 -181.15394592]
[365.34243774 -166.65077209]
[360.54220581 -152.43374634]
[354.81286621 -138.56507874]
[348.17944336 -125.10537720]
[340.67095947 -112.11351013]
[332.32028198 -99.64629364]
[323.16384888 -87.75824738]
[313.24176025 -76.50134277]
[302.59741211 -65.92480469]
[291.27728271 -56.07489014]
[279.33093262 -46.99466705]
[266.81057739 -38.72383881]
[253.77099609 -31.29857826]
[240.26914978 -24.75134850]
[226.36413574 -19.11078072]
[212.11671448 -14.40153980]
[197.58921814 -10.64421940]
[182.84515381 -7.85524797]
[167.94900513 -6.04682207]
[152.96591187 -5.22684908]
[137.96136475 -5.39891481]
[123.00101471 -6.56226683]
[120.85243225 8.28305626]
[118.70385742 23.12837791]
[116.55527496 37.97370148]
[114.40670013 52.81902313]
[124.54359436 57.20736694]
[133.44993591 63.74121857]
[140.67918396 72.09299469]
[145.86889648 81.84395599]
[148.75885010 92.50521088]
[149.20416260 103.54222870]
[147.18251038 114.40165710]
[142.79525757 124.53902435]
[136.26234436 133.44606018]
[127.91134644 140.67620850]
[118.16094971 145.86695862]
[107.50000000 148.75805664]
[107.50000000 163.75805664]
[107.50000000 178.75805664]
[107.50000000 193.75805664]
[107.50000000 208.75805664]
[107.50000000 223.75805664]
[107.50000000 238.75805664]
[107.50000000 253.75805664]
[107.50000000 268.75805664]
[107.50000000 283.75805664]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[13 24]
[14 23]
[15 22]
[16 21]
[29 131]
[30 130]
[31 129]
[32 128]
[33 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
