%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAUCAUUCUACUAUCAACAUUACUAAUAAGUGGCUCCUUUAACCUCUCCACCCUUAUCACxxxxxxxxxxCUACAAACAACUAACCUGCCACUAAUAGUUAUGUCAUCCCUCUUAUUAAUCAUCAUCCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[90.70358276 399.70764160]
[90.70358276 384.70764160]
[90.70358276 369.70764160]
[90.70358276 354.70764160]
[90.70358276 339.70764160]
[90.70358276 324.70764160]
[90.70358276 309.70764160]
[90.70358276 294.70764160]
[90.70358276 279.70764160]
[90.70358276 264.70764160]
[76.35157013 261.99566650]
[62.74345398 256.67822266]
[50.34798050 248.93684387]
[39.59242249 239.03657532]
[30.84785271 227.31689453]
[24.41634941 214.18011475]
[20.52055550 200.07754517]
[19.29597664 185.49394226]
[20.78626442 170.93093872]
[24.94166565 156.88972473]
[31.62067795 143.85383606]
[40.59486771 132.27243042]
[51.55669022 122.54491425]
[64.13002014 115.00710297]
[77.88305664 109.91963959]
[92.34317017 107.45899200]
[90.94086456 92.52468109]
[87.84254456 77.84815216]
[84.74422455 63.17163086]
[81.64589691 48.49510574]
[71.22496033 36.59070969]
[76.16652679 22.53972435]
[73.06820679 7.86319828]
[69.96988678 -6.81332731]
[66.87156677 -21.48985291]
[54.78318024 -27.51717758]
[48.48373032 -39.24513245]
[50.08607101 -52.26461029]
[58.77900696 -61.82649612]
[55.98668289 -76.56430054]
[53.19435883 -91.30210876]
[50.40203094 -106.03991699]
[47.60970688 -120.77771759]
[44.81738281 -135.51551819]
[29.84086990 -134.41926575]
[14.83701324 -135.03738403]
[0.00142107 -137.36180115]
[-14.47249508 -141.36224365]
[-28.39603615 -146.98654175]
[-41.58768463 -154.16137695]
[-53.87545395 -162.79321289]
[-65.09915161 -172.76950073]
[-75.11245728 -183.96018982]
[-83.78482056 -196.21937561]
[-91.00318146 -209.38726807]
[-96.67343140 -223.29216003]
[-100.72164917 -237.75277710]
[-103.09506226 -252.58061218]
[-103.76272583 -267.58233643]
[-102.71593475 -282.56240845]
[-99.96833038 -297.32546997]
[-95.55574036 -311.67910767]
[-89.53569031 -325.43618774]
[-81.98666382 -338.41729736]
[-73.00708008 -350.45327759]
[-62.71400452 -361.38720703]
[-51.24162674 -371.07647705]
[-38.73951340 -379.39483643]
[-25.37065887 -386.23379517]
[-11.30934811 -391.50421143]
[3.26109815 -395.13739014]
[18.15072441 -397.08593750]
[33.16541290 -397.32443237]
[48.10941696 -395.84982300]
[62.78791046 -392.68130493]
[77.00952911 -387.86016846]
[90.58886719 -381.44927979]
[103.34889221 -373.53222656]
[115.12323761 -364.21224976]
[125.75841522 -353.61077881]
[135.11576843 -341.86608887]
[143.07330322 -329.13128662]
[149.52728271 -315.57238770]
[154.39356995 -301.36614990]
[157.60870361 -286.69778442]
[159.13078308 -271.75854492]
[158.93995667 -256.74316406]
[157.03871155 -241.84744263]
[153.45185852 -227.26553345]
[148.22612000 -213.18754578]
[141.42965698 -199.79704285]
[133.15106201 -187.26856995]
[123.49826050 -175.76547241]
[112.59709930 -165.43771362]
[100.58970642 -156.41993713]
[87.63260651 -148.82972717]
[73.89473724 -142.76600647]
[59.55519104 -138.30784607]
[62.34751511 -123.57004547]
[65.13983917 -108.83223724]
[67.93215942 -94.09442902]
[70.72448730 -79.35662842]
[73.51681519 -64.61882019]
[87.79199219 -55.78268814]
[91.36046600 -39.03305817]
[81.54808807 -24.58817482]
[84.64640808 -9.91164875]
[87.74473572 4.76487637]
[90.84305573 19.44140244]
[101.04238129 30.29603386]
[96.32242584 45.39678192]
[99.42074585 60.07330704]
[102.51906586 74.74983215]
[105.61739349 89.42636108]
[111.96279907 75.83460999]
[123.81951141 66.64665985]
[138.56492615 63.89480591]
[152.93750000 68.18772888]
[163.75814819 78.57588196]
[168.63343811 92.76148987]
[166.48500061 107.60683441]
[157.78807068 119.82826233]
[144.46630859 126.72249603]
[129.46635437 126.76461029]
[116.10609436 119.94528198]
[107.33992004 107.77104187]
[122.40911865 111.06162262]
[136.54864502 117.21301270]
[149.22128296 125.98952484]
[159.94592285 137.05578613]
[168.31584167 149.98951721]
[174.01411438 164.29769897]
[176.82563782 179.43530273]
[176.64518738 194.82609558]
[173.48146057 209.88455200]
[167.45655823 224.03814697]
[158.80136108 236.74913025]
[147.84664917 247.53489685]
[135.01045227 255.98640442]
[120.78209686 261.78363037]
[105.70358276 264.70764160]
[105.70358276 279.70764160]
[105.70358276 294.70764160]
[105.70358276 309.70764160]
[105.70358276 324.70764160]
[105.70358276 339.70764160]
[105.70358276 354.70764160]
[105.70358276 369.70764160]
[105.70358276 384.70764160]
[105.70358276 399.70764160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[26 126]
[27 114]
[28 113]
[29 112]
[30 111]
[32 109]
[33 108]
[34 107]
[35 106]
[39 103]
[40 102]
[41 101]
[42 100]
[43 99]
[44 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
