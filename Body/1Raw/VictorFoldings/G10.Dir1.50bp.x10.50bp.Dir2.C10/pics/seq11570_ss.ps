%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCCAUCCUCCAUAUAUCCAAACAACAAAGCAUAAUAUUUCGCCCACUAAGCCAAUCACUUUAxxxxxxxxxxAUCCCUUCUCGUCCCCAUGGAUGACCCCCCUCAGAUAGGGGUCCCUUGACCACCAUCCUCCGUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[139.14782715 354.12002563]
[139.14782715 339.12002563]
[139.14782715 324.12002563]
[139.14782715 309.12002563]
[139.14782715 294.12002563]
[139.14782715 279.12002563]
[139.14782715 264.12002563]
[139.14782715 249.12002563]
[139.14782715 234.12002563]
[139.14782715 219.12002563]
[135.87275696 204.48191833]
[129.48063660 190.91207886]
[123.08850861 177.34222412]
[116.69638824 163.77238464]
[110.16882324 150.26716614]
[103.50646973 136.82792664]
[96.84410858 123.38869476]
[82.92185974 109.42143250]
[85.98423767 93.59867859]
[76.54831696 81.93833923]
[67.11240387 70.27799988]
[57.67648315 58.61766434]
[48.24056625 46.95732880]
[35.85217285 55.42927933]
[22.82223511 62.87689972]
[9.23526096 69.25189209]
[-4.82063007 74.51290131]
[-19.25428009 78.62581635]
[-33.97208023 81.56395721]
[-48.87857819 83.30827332]
[-63.87709808 83.84745026]
[-78.87036896 83.17799377]
[-93.76114655 81.30423737]
[-108.45286560 78.23834229]
[-122.85024261 74.00018311]
[-136.85989380 68.61725616]
[-150.39097595 62.12446594]
[-163.35571289 54.56392670]
[-175.67004395 45.98466492]
[-187.25408936 36.44232559]
[-198.03271484 25.99879646]
[-207.93605042 14.72180748]
[-216.89982605 2.68449330]
[-224.86593628 -10.03507614]
[-231.78269958 -23.35441017]
[-237.60527039 -37.18712616]
[-242.29588318 -51.44350815]
[-245.82411194 -66.03110504]
[-248.16708374 -80.85530090]
[-249.30958557 -95.81996155]
[-249.24423218 -110.82802582]
[-247.97142029 -125.78216553]
[-245.49942017 -140.58538818]
[-241.84428406 -155.14170837]
[-237.02967834 -169.35668945]
[-231.08683777 -183.13816833]
[-224.05433655 -196.39675903]
[-215.97773743 -209.04646301]
[-206.90945435 -221.00524902]
[-196.90827942 -232.19555664]
[-186.03909302 -242.54479980]
[-174.37237549 -251.98588562]
[-161.98379517 -260.45755005]
[-148.95368958 -267.90490723]
[-135.36657715 -274.27960205]
[-121.31057739 -279.54028320]
[-106.87683105 -283.65289307]
[-92.15896606 -286.59069824]
[-77.25243378 -288.33468628]
[-62.25389862 -288.87353516]
[-47.26064301 -288.20373535]
[-32.36990356 -286.32965088]
[-17.67825317 -283.26342773]
[-3.28097391 -279.02496338]
[10.72856140 -273.64172363]
[24.25949478 -267.14865112]
[37.22407150 -259.58782959]
[49.53820801 -251.00828552]
[61.12203979 -241.46569824]
[71.90044403 -231.02192688]
[81.80352020 -219.74472046]
[90.76703644 -207.70719910]
[98.73286438 -194.98745728]
[105.64933777 -181.66796875]
[111.47160339 -167.83512878]
[116.16190338 -153.57864380]
[119.68981171 -138.99096680]
[122.03244781 -124.16672516]
[123.17462921 -109.20204163]
[123.10893250 -94.19397736]
[121.83580017 -79.23986053]
[119.36347961 -64.43669128]
[115.70800781 -49.88045883]
[110.89309692 -35.66557693]
[104.94995880 -21.88422966]
[97.91715240 -8.62580013]
[89.84028625 4.02372599]
[80.77173615 15.98231030]
[70.77032471 27.17239571]
[59.90090561 37.52141190]
[69.33682251 49.18174744]
[78.77274323 60.84208298]
[88.20865631 72.50241852]
[97.64457703 84.16275787]
[111.97394562 88.59774017]
[126.34697723 84.30634308]
[140.72000122 80.01494598]
[148.00956726 65.99218750]
[163.10461426 61.31083298]
[177.04951477 68.74824524]
[181.57101440 83.89194489]
[173.98658752 97.75743866]
[158.79592896 102.11857605]
[145.01139832 94.38796997]
[130.63836670 98.67937469]
[116.26534271 102.97077179]
[110.28334808 116.72633362]
[116.94570160 130.16557312]
[123.60806274 143.60479736]
[130.26087952 149.94737244]
[130.26623535 157.38026428]
[136.65835571 170.95010376]
[143.05047607 184.51995850]
[149.44259644 198.08979797]
[150.84523010 183.15553284]
[155.99887085 169.06864929]
[164.56480408 156.75505066]
[175.98004150 147.02404785]
[189.49429321 140.51521301]
[204.21932983 137.65635681]
[219.18734741 138.63534546]
[233.41456604 143.38787842]
[245.96588135 151.60156250]
[256.01635742 162.73655701]
[262.90539551 176.06100464]
[266.18023682 190.69914246]
[265.62564087 205.68888855]
[261.27807617 220.04502869]
[253.42323303 232.82397461]
[242.57740784 243.18583679]
[229.45346069 250.44958496]
[214.91395569 254.13778687]
[199.91452026 254.00804138]
[185.44099426 250.06887817]
[172.44465637 242.57919312]
[161.77970886 232.03126526]
[154.14782715 219.12002563]
[154.14782715 234.12002563]
[154.14782715 249.12002563]
[154.14782715 264.12002563]
[154.14782715 279.12002563]
[154.14782715 294.12002563]
[154.14782715 309.12002563]
[154.14782715 324.12002563]
[154.14782715 339.12002563]
[154.14782715 354.12002563]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[3 154]
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[9 148]
[10 147]
[11 124]
[12 123]
[13 122]
[14 121]
[15 119]
[16 118]
[17 117]
[19 104]
[20 103]
[21 102]
[22 101]
[23 100]
[105 116]
[106 115]
[107 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
