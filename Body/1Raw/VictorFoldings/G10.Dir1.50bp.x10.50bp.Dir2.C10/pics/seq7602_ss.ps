%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAACUAAUACUAACAUCUCAGACGCUCAGGAAAUAGAAACCGUCUGAACUAUCCUGCCCGCCAxxxxxxxxxxCCGAGCAAUCUCAAUUACAAUAUAUACACCAACAAACAAUGUUCAACCAGUAACUACUACUAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-44.07549667 123.46632385]
[-58.98474884 125.11383057]
[-71.85160828 134.32005310]
[-85.35169983 128.02743530]
[-100.26094818 129.67494202]
[-115.17019653 131.32244873]
[-128.03706360 140.52867126]
[-141.53715515 134.23606873]
[-156.44639587 135.88357544]
[-171.35565186 137.53108215]
[-186.18704224 139.77377319]
[-172.19334412 145.17527771]
[-160.83035278 154.96723938]
[-153.42108154 168.00958252]
[-150.82818604 182.78378296]
[-153.35356140 197.56967163]
[-160.70318604 210.64572144]
[-172.02131653 220.48948669]
[-185.99020386 225.95484924]
[-200.98342896 226.40548706]
[-215.25534058 221.78892517]
[-227.14424133 212.64266968]
[-235.26591492 200.03161621]
[-238.67472839 185.42408752]
[-236.97381592 170.52082825]
[-230.36122131 157.05705261]
[-219.60682678 146.60032654]
[-205.96008301 140.36744690]
[-220.83338928 138.42195129]
[-235.70668030 136.47645569]
[-250.57998657 134.53096008]
[-265.45327759 132.58547974]
[-280.32659912 130.63998413]
[-295.19989014 128.69448853]
[-302.16598511 142.15737915]
[-313.31863403 152.42352295]
[-327.31115723 158.25325012]
[-342.45382690 158.94258118]
[-356.91812134 154.40826416]
[-368.95739746 145.19787598]
[-377.11788940 132.42356873]
[-380.41412354 117.62794495]
[-378.44808960 102.59762573]
[-371.45718384 89.14759827]
[-360.28561401 78.90202332]
[-346.28240967 73.09809875]
[-331.13848877 72.43667603]
[-316.68255615 76.99762726]
[-304.66027832 86.23020172]
[-296.52334595 99.01950836]
[-293.25439453 113.82118988]
[-278.38110352 115.76667786]
[-263.50778198 117.71217346]
[-248.63449097 119.65766907]
[-233.76119995 121.60315704]
[-218.88789368 123.54865265]
[-204.01458740 125.49414825]
[-189.02134705 125.04398346]
[-187.33364868 122.73933411]
[-184.60589600 120.98403931]
[-181.04995728 120.18734741]
[-177.02526855 120.67147064]
[-173.00315857 122.62182617]
[-158.09390259 120.97431946]
[-143.18466187 119.32681274]
[-131.38420105 110.23844147]
[-116.81770325 116.41320038]
[-101.90845490 114.76569366]
[-86.99920654 113.11819458]
[-75.19875336 104.02981567]
[-60.63225555 110.20458221]
[-45.72300339 108.55707550]
[-45.40446854 87.11753845]
[-41.94865417 65.95594788]
[-35.43011856 45.52890396]
[-25.98951530 26.27714348]
[-13.83053112 8.61604309]
[0.78448659 -7.07333660]
[17.54020119 -20.45247650]
[36.07508850 -31.23270607]
[55.98923492 -39.18142700]
[76.85296631 -44.12714005]
[98.21612549 -45.96313095]
[119.61776733 -44.64978790]
[140.59614563 -40.21544647]
[160.69859314 -32.75578308]
[167.62852478 -46.05902100]
[174.55845642 -59.36225510]
[173.30749512 -75.71362305]
[186.99363708 -84.74807739]
[201.53775024 -77.17175293]
[201.97810364 -60.77851868]
[187.86169434 -52.43233109]
[180.93176270 -39.12909317]
[174.00183105 -25.82585526]
[181.01658630 -21.42788315]
[187.77070618 -16.63928032]
[194.24246216 -11.47545052]
[200.41104126 -5.95300579]
[206.25660706 -0.08971177]
[211.76034546 6.09556913]
[216.90455627 12.58293915]
[221.67268372 19.35152817]
[226.04939270 26.37956238]
[230.02059937 33.64443207]
[233.57353210 41.12276459]
[236.69676208 48.79050827]
[239.38024902 56.62298965]
[241.61534119 64.59501648]
[243.39486694 72.68093872]
[244.71308899 80.85474396]
[245.56576538 89.09014130]
[245.95016479 97.36063385]
[245.86505127 105.63961792]
[260.80429077 106.98847961]
[275.74349976 108.33734131]
[290.68273926 109.68620300]
[303.87265015 100.55352020]
[319.19454956 105.30947876]
[324.89477539 120.30570984]
[316.60061646 134.03839111]
[300.67462158 135.97297668]
[289.33386230 124.62542725]
[274.39465332 123.27656555]
[259.45541382 121.92771149]
[244.51618958 120.57884979]
[242.12480164 133.30101013]
[238.61573792 145.76129150]
[234.01657104 157.86169434]
[228.36349487 169.50706482]
[221.70094299 180.60583496]
[214.08131409 191.07069397]
[205.56454468 200.81936646]
[196.21759033 209.77519226]
[186.11398315 217.86772156]
[175.33316040 225.03332520]
[163.95989990 231.21565247]
[152.08364868 236.36608887]
[139.79782104 240.44412231]
[127.19900513 243.41767883]
[114.38629913 245.26338196]
[101.46045685 245.96672058]
[88.52312469 245.52215576]
[75.67605591 243.93319702]
[63.02026749 241.21231079]
[50.65529633 237.38092041]
[38.67837524 232.46914673]
[27.18369675 226.51562500]
[16.26165390 219.56716919]
[5.99814129 211.67842102]
[-3.52612948 202.91140747]
[-12.23625755 193.33509827]
[-20.06374550 183.02478027]
[-26.94703674 172.06155396]
[-32.83200073 160.53161621]
[-37.67235565 148.52566528]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 72]
[2 71]
[4 69]
[5 68]
[6 67]
[8 65]
[9 64]
[10 63]
[11 58]
[28 57]
[29 56]
[30 55]
[31 54]
[32 53]
[33 52]
[34 51]
[86 95]
[87 94]
[88 93]
[114 126]
[115 125]
[116 124]
[117 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
