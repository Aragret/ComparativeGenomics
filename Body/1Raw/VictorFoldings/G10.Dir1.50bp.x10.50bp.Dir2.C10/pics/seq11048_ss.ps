%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUUAGCAGGAAUACCUUUCCUCACAGGUUUCUACUCCAAAGACCACAUCAUCGAAACCGCxxxxxxxxxxAAUAACCCCACCCUACUAAACCCCAUUAAACGCCUGGCAGCCGGAAGCCUAUUCGCAGGACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[89.51748657 285.54498291]
[89.51748657 270.54498291]
[89.51748657 255.54499817]
[89.51748657 240.54499817]
[89.51748657 225.54499817]
[89.51748657 210.54499817]
[89.51748657 195.54499817]
[89.51748657 180.54499817]
[89.51748657 165.54499817]
[89.51748657 150.54499817]
[82.93319702 146.95373535]
[75.75068665 160.12231445]
[68.56797028 173.29078674]
[55.39961243 166.10787964]
[62.58210373 152.93980408]
[69.76461029 139.77122498]
[63.18032074 136.17997742]
[50.56919098 144.30151367]
[37.95806503 152.42306519]
[25.34693527 160.54460144]
[12.73580837 168.66613770]
[7.94880342 183.97836304]
[-7.05894995 189.64819336]
[-20.77478790 181.32620239]
[-22.67709351 165.39633179]
[-11.30658150 154.07861328]
[4.61426592 156.05500793]
[17.22539330 147.93347168]
[29.83652115 139.81193542]
[42.44765091 131.69038391]
[55.05877686 123.56884766]
[51.47095871 97.15264893]
[61.64532089 73.74790192]
[81.55568695 59.67323303]
[104.74474335 58.05691528]
[109.05233002 43.68873215]
[113.35991669 29.32054901]
[117.66750336 14.95236397]
[121.97508240 0.58417994]
[126.28266907 -13.78400421]
[130.59025574 -28.15218925]
[134.89784241 -42.52037430]
[130.22425842 -60.30062866]
[143.38444519 -71.86821747]
[147.39219666 -86.32290649]
[151.24934387 -100.81850433]
[154.95550537 -115.35343933]
[158.66166687 -129.88838196]
[144.52033997 -134.92301941]
[130.90388489 -141.24098206]
[117.92847443 -148.78839111]
[105.70480347 -157.50082397]
[94.33717346 -167.30395508]
[83.92256165 -178.11416626]
[74.54982758 -189.83920288]
[66.29894257 -202.37904358]
[59.24029160 -215.62669373]
[53.43410492 -229.46911621]
[48.92992401 -243.78822327]
[45.76616669 -258.46185303]
[43.96983337 -273.36480713]
[43.55624771 -288.36993408]
[44.52894211 -303.34918213]
[46.87960815 -318.17480469]
[50.58819962 -332.72027588]
[55.62307358 -346.86154175]
[61.94127274 -360.47787476]
[69.48889160 -373.45318604]
[78.20153046 -385.67669678]
[88.00485992 -397.04415894]
[98.81523895 -407.45858765]
[110.54042816 -416.83114624]
[123.08040619 -425.08181763]
[136.32817078 -432.14022827]
[150.17070007 -437.94619751]
[164.48988342 -442.45013428]
[179.16355896 -445.61364746]
[194.06654358 -447.40972900]
[209.07165527 -447.82305908]
[224.05091858 -446.85012817]
[238.87649536 -444.49920654]
[253.42192078 -440.79037476]
[267.56307983 -435.75527954]
[281.17932129 -429.43685913]
[294.15447998 -421.88900757]
[306.37786865 -413.17617798]
[317.74517822 -403.37265015]
[328.15942383 -392.56210327]
[337.53176880 -380.83676147]
[345.78222656 -368.29663086]
[352.84042358 -355.04876709]
[358.64614868 -341.20614624]
[363.14987183 -326.88687134]
[366.31314087 -312.21313477]
[368.10897827 -297.31015015]
[368.52206421 -282.30499268]
[367.54885864 -267.32577515]
[365.19769287 -252.50022888]
[361.48861694 -237.95486450]
[356.45327759 -223.81379700]
[350.13464355 -210.19764709]
[342.58657837 -197.22261047]
[333.87353516 -184.99938965]
[324.06982422 -173.63223267]
[313.25909424 -163.21817017]
[301.53359985 -153.84602356]
[288.99334717 -145.59576416]
[275.74536133 -138.53778076]
[261.90261841 -132.73228455]
[247.58329773 -128.22880554]
[232.90950012 -125.06578827]
[218.00646973 -123.27020264]
[203.00132751 -122.85736847]
[188.02210999 -123.83080292]
[173.19660950 -126.18222046]
[169.49044800 -111.64727783]
[165.78428650 -97.11234283]
[167.18830872 -89.80656433]
[161.84687805 -82.31517029]
[157.83914185 -67.86048126]
[163.53042603 -57.14056396]
[160.26173401 -45.03541565]
[149.26602173 -38.21278763]
[144.95843506 -23.84460449]
[140.65084839 -9.47641945]
[136.34326172 4.89176464]
[132.03569031 19.25994873]
[127.72809601 33.62813187]
[123.42051697 47.99631500]
[119.11293030 62.36450195]
[127.84628296 67.25199890]
[135.32681274 74.17018127]
[141.08212280 82.79701996]
[144.72280884 92.70075989]
[145.96780396 103.36130524]
[144.66433716 114.19750214]
[140.80085754 124.59877014]
[134.51231384 133.95954895]
[126.07695770 141.71438599]
[115.90467834 147.37182617]
[104.51748657 150.54499817]
[104.51748657 165.54499817]
[104.51748657 180.54499817]
[104.51748657 195.54499817]
[104.51748657 210.54499817]
[104.51748657 225.54499817]
[104.51748657 240.54499817]
[104.51748657 255.54499817]
[104.51748657 270.54498291]
[104.51748657 285.54498291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[17 31]
[18 30]
[19 29]
[20 28]
[21 27]
[35 130]
[36 129]
[37 128]
[38 127]
[39 126]
[40 125]
[41 124]
[42 123]
[44 120]
[45 119]
[46 117]
[47 116]
[48 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
