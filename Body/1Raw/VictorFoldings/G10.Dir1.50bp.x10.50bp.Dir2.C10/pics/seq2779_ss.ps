%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGGACCUGUAUGAAUGGCUCCACGAGGGUUCAGCUGUCUCUUACUUUUAACCAGUGAAAUUxxxxxxxxxxUACACGACACGUACUACGUUGUAGCCCACUUCCACUAUGUCCUAUCAAUAGGAGCUGUAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[152.73059082 482.86663818]
[152.73059082 467.86663818]
[152.73059082 452.86663818]
[152.73059082 437.86663818]
[152.73059082 422.86663818]
[152.73059082 407.86663818]
[152.73059082 392.86663818]
[152.73059082 377.86663818]
[152.73059082 362.86663818]
[152.73059082 347.86663818]
[149.93826294 333.12884521]
[144.45123291 319.16845703]
[138.96420288 305.20803833]
[133.47715759 291.24765015]
[117.80662537 285.22338867]
[111.18249512 269.43081665]
[118.13436890 253.41180420]
[112.35809326 239.56858826]
[101.26092529 234.65327454]
[96.35466003 223.11431885]
[100.78807068 210.95707703]
[95.30104065 196.99668884]
[89.81400299 183.03630066]
[84.18205261 169.13374329]
[78.40577698 155.29051208]
[72.62950134 141.44729614]
[59.10531235 134.95913696]
[44.69309616 139.11701965]
[30.28088188 143.27491760]
[16.73841476 153.47480774]
[3.18820453 143.28520203]
[9.22852802 127.44377136]
[26.12299538 128.86270142]
[40.53520966 124.70481110]
[54.94742584 120.54692078]
[56.19430161 105.59883118]
[42.67011261 99.11067200]
[29.14592171 92.62250519]
[15.62173176 86.13433838]
[5.19683838 97.09685516]
[-8.10639286 104.29957581]
[-22.98464966 107.03685760]
[-37.98030853 105.04051971]
[-51.62425232 98.50614166]
[-62.57978058 88.07390594]
[-69.77359009 74.76585388]
[-72.50089264 59.88576508]
[-70.49450684 44.89144897]
[-63.95099640 31.25188637]
[-53.51142120 20.30335045]
[-40.19854736 13.11846256]
[-25.31663704 10.40112686]
[-10.32366657 12.41755867]
[3.31150675 18.97021103]
[14.25304604 29.41711998]
[21.42901230 42.73480225]
[24.13637543 57.61853027]
[22.10989571 72.61014557]
[35.63408661 79.09831238]
[49.15827560 85.58647919]
[62.68246460 92.07464600]
[74.94715881 77.67669678]
[90.76976776 72.54900360]
[89.83413696 57.57821274]
[88.89850616 42.60742188]
[74.29259491 38.61417007]
[61.77608490 30.09268570]
[52.70667267 17.96732140]
[48.06813431 3.55334568]
[48.36363602 -11.58572292]
[53.56111145 -25.80771065]
[63.09678650 -37.56992340]
[75.93629456 -45.59648514]
[90.68691254 -49.01673126]
[105.74859619 -47.45965958]
[119.48756409 -41.09417343]
[130.41352844 -30.61075020]
[137.34130859 -17.14655304]
[139.51942444 -2.16207886]
[136.71163940 12.71726990]
[129.22248840 25.87749290]
[117.86436462 35.89106750]
[103.86930084 41.67179489]
[104.80492401 56.64258575]
[105.74055481 71.61338043]
[110.31312561 72.93722534]
[114.60706329 74.99224091]
[125.26869202 64.44094849]
[135.93031311 53.88965988]
[146.48161316 43.22803497]
[156.92141724 32.45722580]
[167.36123657 21.68641853]
[174.04347229 6.10488987]
[190.86589050 8.21259022]
[193.49748230 24.96105576]
[178.13203430 32.12622833]
[167.69223022 42.89703751]
[157.25241089 53.66784668]
[154.83982849 60.70525360]
[146.48161316 64.55128479]
[135.81997681 75.10257721]
[125.15835571 85.65386963]
[131.11854553 102.95365143]
[125.50163269 121.80920410]
[108.88431549 134.73448181]
[86.47272491 135.67103577]
[92.24899292 149.51425171]
[98.02526855 163.35746765]
[104.25786591 170.12551880]
[103.77439880 177.54925537]
[109.26142883 191.50965881]
[114.74845886 205.47004700]
[129.40617371 216.56649780]
[126.20131683 233.79231262]
[131.97758484 247.63552856]
[144.97668457 251.30718994]
[153.34924316 261.65747070]
[154.19854736 274.74765015]
[147.43756104 285.76062012]
[152.92459106 299.72100830]
[158.41162109 313.68142700]
[163.89865112 327.64181519]
[166.57302856 312.88214111]
[173.60057068 299.63018799]
[184.31835938 289.13598633]
[197.71548462 282.38934326]
[212.52824402 280.02664185]
[227.35942078 282.27078247]
[240.81007385 288.91006470]
[251.61146545 299.31820679]
[258.74478149 312.51351929]
[261.53710938 327.25131226]
[259.72512817 342.14147949]
[253.47973633 355.77947998]
[243.39001465 366.87890625]
[230.40768433 374.39282227]
[215.75729370 377.61248779]
[200.82075500 376.23419189]
[187.00694275 370.38793945]
[175.61885071 360.62518311]
[167.73059082 347.86663818]
[167.73059082 362.86663818]
[167.73059082 377.86663818]
[167.73059082 392.86663818]
[167.73059082 407.86663818]
[167.73059082 422.86663818]
[167.73059082 437.86663818]
[167.73059082 452.86663818]
[167.73059082 467.86663818]
[167.73059082 482.86663818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 122]
[12 121]
[13 120]
[14 119]
[17 115]
[18 114]
[21 112]
[22 111]
[23 110]
[24 108]
[25 107]
[26 106]
[27 35]
[28 34]
[29 33]
[36 61]
[37 60]
[38 59]
[39 58]
[63 85]
[64 84]
[65 83]
[87 102]
[88 101]
[89 100]
[90 98]
[91 97]
[92 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
