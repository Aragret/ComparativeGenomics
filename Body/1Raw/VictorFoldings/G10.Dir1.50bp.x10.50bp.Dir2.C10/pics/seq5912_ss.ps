%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUAUCUCCCCUUUUAUACUAAUAAUCUUAUAGAAAUUUAGGUUAAAUACAGACCAAGAGCxxxxxxxxxxCAAACGCCCCUCUUCGUCUGAUCCGUCCUAAUCACAGCAGUCCUACUUCUCCUAUCUCUCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[101.94962311 286.76089478]
[101.94962311 271.76089478]
[101.94962311 256.76089478]
[101.94962311 241.76091003]
[101.94962311 226.76091003]
[101.94962311 211.76091003]
[101.94962311 196.76091003]
[101.94962311 181.76091003]
[101.94962311 166.76091003]
[101.94962311 151.76091003]
[91.11294556 149.43476868]
[81.34854889 144.94010925]
[73.06752014 138.62356567]
[66.58360291 130.90406799]
[62.10190964 122.24777222]
[48.05993271 127.52250671]
[34.01795578 132.79725647]
[33.44571686 147.96128845]
[27.12840462 161.71391296]
[16.05697823 171.97242737]
[1.93970966 177.19645691]
[-13.06134129 176.61911011]
[-26.66144753 170.35952759]
[-36.80118561 159.39982605]
[-50.84316254 164.67456055]
[-64.88513947 169.94931030]
[-78.92711639 175.22404480]
[-88.91503906 188.23071289]
[-105.13548279 185.81628418]
[-110.90222931 170.46452332]
[-100.28295898 157.96800232]
[-84.20185852 161.18206787]
[-70.15988159 155.90733337]
[-56.11790085 150.63258362]
[-42.07592773 145.35784912]
[-41.65954590 130.43283081]
[-35.54413986 116.76728821]
[-24.63317490 106.45633698]
[-10.56792355 101.09384918]
[4.51938343 101.52606964]
[18.32878685 107.71826935]
[28.74321365 118.75527191]
[42.78519058 113.48053741]
[56.82716751 108.20579529]
[57.36536789 89.34557343]
[65.76272583 72.44936371]
[80.47128296 60.63176727]
[98.77971649 56.07120132]
[100.92829895 41.22587585]
[103.07687378 26.38055420]
[105.22545624 11.53523159]
[107.37403107 -3.31009102]
[94.89880371 -10.24736786]
[85.56812286 -21.01037216]
[80.49188995 -34.28757858]
[80.26323700 -48.47032166]
[84.88927460 -61.84770584]
[93.79271698 -72.81297302]
[105.88382721 -80.05652618]
[119.69379425 -82.72225952]
[122.14672089 -97.52033997]
[124.59965515 -112.31842041]
[127.05258179 -127.11650085]
[129.50550842 -141.91458130]
[124.12908173 -156.79425049]
[133.84350586 -168.08493042]
[136.29643250 -182.88301086]
[138.74935913 -197.68107605]
[141.20228577 -212.47915649]
[143.65521240 -227.27723694]
[130.04661560 -233.83337402]
[118.83726501 -243.95893860]
[110.93584442 -256.83309937]
[106.98289490 -271.41223145]
[107.29885864 -286.51443481]
[111.85812378 -300.91546631]
[120.29109192 -313.44790649]
[131.91413879 -323.09576416]
[145.78503418 -329.07699585]
[160.77934265 -330.90664673]
[175.68151855 -328.43646240]
[189.28352356 -321.86666870]
[200.48269653 -311.72985840]
[208.37117004 -298.84774780]
[212.30947876 -284.26467896]
[211.97834778 -269.16278076]
[207.40461731 -254.76632690]
[198.95906067 -242.24238586]
[187.32632446 -232.60618591]
[173.44941711 -226.63891602]
[158.45329285 -224.82431030]
[156.00036621 -210.02622986]
[153.54743958 -195.22814941]
[151.09451294 -180.43006897]
[148.64158630 -165.63200378]
[154.19345093 -151.81077576]
[144.30358887 -139.46165466]
[141.85066223 -124.66356659]
[139.39773560 -109.86549377]
[136.94480896 -95.06741333]
[134.49188232 -80.26933289]
[148.05032349 -72.12091064]
[157.47673035 -59.36986923]
[161.30973816 -43.94342041]
[158.93618774 -28.18723297]
[150.68894958 -14.50874043]
[137.80059814 -5.00932932]
[122.21935272 -1.16151202]
[120.07077789 13.68381119]
[117.92219543 28.52913284]
[115.77362061 43.37445450]
[113.62503815 58.21977997]
[127.54037476 63.76128006]
[139.22196960 73.94669342]
[147.12351990 87.88125610]
[150.05474854 104.15904236]
[147.34819031 121.00337219]
[161.27890015 126.56530762]
[176.96427917 124.49661255]
[185.91532898 136.40158081]
[199.84603882 141.96351624]
[213.77676392 147.52545166]
[230.72874451 147.78320312]
[235.17382812 164.14405823]
[220.68289185 172.94456482]
[208.21481323 161.45616150]
[194.28410339 155.89422607]
[180.35339355 150.33229065]
[165.66442871 152.79881287]
[155.71696472 140.49601746]
[141.78625488 134.93408203]
[135.57708740 139.14079285]
[145.13591003 150.70059204]
[154.69473267 162.26039124]
[168.32518005 168.52224731]
[172.67144775 182.87876892]
[164.80278015 195.64921570]
[150.02511597 198.22229004]
[138.30322266 188.86296082]
[137.54154968 173.88168335]
[130.35015869 160.71794128]
[123.15878296 147.55419922]
[116.94962311 151.76091003]
[116.94962311 166.76091003]
[116.94962311 181.76091003]
[116.94962311 196.76091003]
[116.94962311 211.76091003]
[116.94962311 226.76091003]
[116.94962311 241.76091003]
[116.94962311 256.76089478]
[116.94962311 271.76089478]
[116.94962311 286.76089478]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[15 44]
[16 43]
[17 42]
[24 35]
[25 34]
[26 33]
[27 32]
[48 112]
[49 111]
[50 110]
[51 109]
[52 108]
[60 101]
[61 100]
[62 99]
[63 98]
[64 97]
[66 95]
[67 94]
[68 93]
[69 92]
[70 91]
[117 131]
[118 130]
[120 128]
[121 127]
[122 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
