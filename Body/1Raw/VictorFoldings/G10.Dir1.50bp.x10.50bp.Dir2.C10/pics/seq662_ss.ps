%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUCAAUACAACCCCCGCCCAUCCUACCCAGCACACACACACCGCUGCUAACCCCAUACCCCGxxxxxxxxxxCAAUUAUAUUACUACCACUGACAUGACUUUCCAAAAAACACAUAAUUUGAAUCAACACAACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-6.87216330 266.67611694]
[-15.44118690 278.98754883]
[-24.01021004 291.29901123]
[-25.54331589 307.04577637]
[-39.16449738 313.07177734]
[-47.73352051 325.38320923]
[-56.30254364 337.69467163]
[-64.87156677 350.00613403]
[-73.44058990 362.31756592]
[-66.32411194 375.86801147]
[-66.33158112 391.17352295]
[-73.46128845 404.71701050]
[-86.07486725 413.38626099]
[-101.27381897 415.18917847]
[-115.56552887 409.71145630]
[-125.66587067 398.21182251]
[-129.25386047 383.33279419]
[-125.50500488 368.49349976]
[-115.28075409 357.10388184]
[-100.93058014 351.78118896]
[-85.75203705 353.74856567]
[-77.18301392 341.43710327]
[-68.61399078 329.12564087]
[-60.04497147 316.81420898]
[-51.47594833 304.50274658]
[-50.55575562 289.63659668]
[-36.32166290 282.72998047]
[-27.75263786 270.41854858]
[-19.18361473 258.10708618]
[-39.47879791 240.52847290]
[-57.20908737 220.36564636]
[-72.04843140 197.98939514]
[-83.72395325 173.81121826]
[-92.02094269 148.27569580]
[-96.78682709 121.85243988]
[-97.93397522 95.02732849]
[-95.44127655 68.29366302]
[-89.35458374 42.14305115]
[-103.52355957 37.21962357]
[-117.69253540 32.29619217]
[-131.86151123 27.37276649]
[-142.98483276 37.88610840]
[-157.72296143 42.01478577]
[-172.68919373 38.81005096]
[-184.44441223 29.00833511]
[-190.28732300 14.86199760]
[-188.87528992 -0.37823749]
[-180.53279114 -13.21027374]
[-167.17684937 -20.68540382]
[-151.87658691 -21.08589935]
[-138.14787292 -14.31972599]
[-129.14547729 -1.94170332]
[-126.93807983 13.20379066]
[-112.76910400 18.12721825]
[-98.60012817 23.05064583]
[-84.43115997 27.97407532]
[-80.48210907 18.58258820]
[-76.05519867 9.40666676]
[-71.16216278 0.47060591]
[-65.81594086 -8.20193577]
[-60.03070068 -16.58799553]
[-53.82175064 -24.66536903]
[-47.20553589 -32.41267395]
[-40.19956970 -39.80939102]
[-32.82240295 -46.83594513]
[-25.09356689 -53.47372818]
[-17.03352737 -59.70516205]
[-8.66362381 -65.51375580]
[-0.00601539 -70.88411713]
[8.91637516 -75.80204010]
[18.07992363 -80.25450134]
[27.46036720 -84.22971344]
[37.03287125 -87.71714783]
[46.77209091 -90.70756531]
[56.65224075 -93.19305420]
[66.64716339 -95.16703796]
[76.73038483 -96.62429047]
[86.87522125 -97.56094360]
[97.05480957 -97.97452545]
[107.24219513 -97.86392975]
[117.41040039 -97.22946930]
[127.53251648 -96.07280731]
[137.58172607 -94.39701080]
[147.53144836 -92.20652008]
[157.35531616 -89.50713348]
[167.02731323 -86.30599976]
[176.52186584 -82.61157990]
[185.81379700 -78.43367767]
[194.87854004 -73.78334045]
[203.69206238 -68.67288208]
[212.23104858 -63.11584091]
[220.47288513 -57.12692261]
[228.39575195 -50.72198486]
[235.97866821 -43.91798782]
[243.20155334 -36.73294449]
[250.04530334 -29.18588066]
[256.49179077 -21.29677582]
[262.52392578 -13.08651924]
[268.12576294 -4.57684755]
[273.28244019 4.20970774]
[277.98034668 13.24988270]
[282.20700073 22.51974297]
[285.95126343 31.99474335]
[289.20315552 41.64979935]
[291.95413208 51.45934677]
[294.19686890 61.39741135]
[295.92544556 71.43768311]
[297.13528442 81.55358124]
[297.82315063 91.71831512]
[297.98727417 101.90497589]
[297.62716675 112.08659363]
[296.74383545 122.23621368]
[295.33959961 132.32695007]
[293.41815186 142.33210754]
[307.93930054 146.09190369]
[322.46044922 149.85168457]
[336.98159790 153.61148071]
[347.69253540 142.60366821]
[362.47671509 138.44151306]
[377.35729980 142.24464417]
[388.33148193 152.99000549]
[392.44726562 167.78715515]
[388.59750366 182.65576172]
[377.81781006 193.59620667]
[363.00781250 197.66558838]
[348.15136719 193.76925659]
[337.24475098 182.95530701]
[333.22183228 168.13262939]
[318.70065308 164.37284851]
[304.17950439 160.61305237]
[289.65835571 156.85327148]
[284.93679810 170.71748352]
[279.20333862 184.19473267]
[272.48925781 197.21130371]
[264.83139038 209.69593811]
[256.27157593 221.58033752]
[246.85667419 232.79948425]
[236.63819885 243.29196167]
[225.67207336 253.00038147]
[214.01828003 261.87161255]
[201.74061584 269.85708618]
[188.90623474 276.91317749]
[175.58537292 283.00119019]
[161.85092163 288.08786011]
[147.77804565 292.14538574]
[133.44372559 295.15148926]
[118.92640686 297.08978271]
[104.30552673 297.94961548]
[89.66109467 297.72631836]
[75.07322693 296.42108154]
[60.62176132 294.04107666]
[46.38576126 290.59930420]
[32.44313049 286.11462402]
[18.87015915 280.61154175]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[3 27]
[5 25]
[6 24]
[7 23]
[8 22]
[9 21]
[38 56]
[39 55]
[40 54]
[41 53]
[114 131]
[115 130]
[116 129]
[117 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
