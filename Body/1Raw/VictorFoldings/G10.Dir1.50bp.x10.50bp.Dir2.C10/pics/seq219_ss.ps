%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGCCACUUUCCACACAGACAUCAUAACAAAAAAUUUCCACCAAACCCCCCCUCCCCCGCUUxxxxxxxxxxCCCCCUUCCAAACAACAAUCCCCCUCUACCUAAAACUCACAGCCCUCGCUGUCACUUUCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-75.15701294 138.92140198]
[-89.92306519 141.56027222]
[-104.68912506 144.19912720]
[-119.45517731 146.83799744]
[-134.22123718 149.47685242]
[-148.95904541 152.26918030]
[-163.66700745 155.21466064]
[-178.37496948 158.16015625]
[-193.08293152 161.10563660]
[-207.79089355 164.05111694]
[-222.49885559 166.99659729]
[-221.62588501 181.99606323]
[-222.84901428 196.97105408]
[-226.14443970 211.63005066]
[-231.44799805 225.68772888]
[-238.65646362 238.87045288]
[-247.62951660 250.92161560]
[-258.19250488 261.60662842]
[-270.13980103 270.71752930]
[-283.23883057 278.07693481]
[-297.23468018 283.54159546]
[-311.85485840 287.00518799]
[-326.81478882 288.40023804]
[-341.82330322 287.69961548]
[-356.58822632 284.91696167]
[-370.82217407 280.10644531]
[-384.24804688 273.36169434]
[-396.60455322 264.81399536]
[-407.65112305 254.62971497]
[-417.17276001 243.00712585]
[-424.98410034 230.17243958]
[-430.93313599 216.37551880]
[-434.90402222 201.88488770]
[-436.81945801 186.98263550]
[-436.64221191 171.95883179]
[-434.37570190 157.10591125]
[-430.06405640 142.71301270]
[-423.79119873 129.06027222]
[-415.67919922 116.41345978]
[-405.88601685 105.01873779]
[-394.60226440 95.09792328]
[-382.04754639 86.84411621]
[-368.46627808 80.41798401]
[-354.12280273 75.94461060]
[-339.29632568 73.51107025]
[-324.27548218 73.16474152]
[-309.35260010 74.91235352]
[-294.81820679 78.71989441]
[-280.95520020 84.51325226]
[-268.03341675 92.17965698]
[-256.30438232 101.56987000]
[-245.99644470 112.50112152]
[-237.31019592 124.76062012]
[-230.41476440 138.10974121]
[-225.44433594 152.28863525]
[-210.73637390 149.34315491]
[-196.02841187 146.39767456]
[-181.32044983 143.45219421]
[-166.61248779 140.50669861]
[-151.90452576 137.56121826]
[-145.92483521 133.13526917]
[-136.86009216 134.71080017]
[-122.09403992 132.07194519]
[-107.32798767 129.43307495]
[-92.56193542 126.79421234]
[-77.79587555 124.15534973]
[-79.02725983 112.00392914]
[-79.42913055 99.79689026]
[-78.99962616 87.59079742]
[-77.74073792 75.44219208]
[-75.65828705 63.40738297]
[-72.76194000 51.54212189]
[-69.06510925 39.90138626]
[-64.58492279 28.53911781]
[-59.34214020 17.50795746]
[-53.36105347 6.85902071]
[-46.66937637 -3.35835266]
[-39.29811096 -13.09681988]
[-31.28141785 -22.31125832]
[-22.65643692 -30.95897484]
[-13.46313477 -38.99989700]
[-3.74410677 -46.39677048]
[6.45561504 -53.11532593]
[17.08876991 -59.12442398]
[28.10609055 -64.39623260]
[39.45652771 -68.90631104]
[51.08749008 -72.63377380]
[62.94508362 -75.56134796]
[74.97437286 -77.67546844]
[87.11961365 -78.96633911]
[99.32453918 -79.42797852]
[111.53259277 -79.05824280]
[123.68721008 -77.85884857]
[135.73207092 -75.83535767]
[147.61137390 -72.99714661]
[159.27006531 -69.35735321]
[170.65414429 -64.93285370]
[181.71084595 -59.74414825]
[192.38893127 -53.81527710]
[202.63894653 -47.17370605]
[212.41339111 -39.85021591]
[221.66697693 -31.87873650]
[230.35682678 -23.29620361]
[238.44265747 -14.14238262]
[245.88703918 -4.45968914]
[252.65545654 5.70701265]
[258.71655273 16.31061745]
[264.04223633 27.30199242]
[268.60784912 38.63020706]
[272.39221191 50.24277878]
[275.37780762 62.08589935]
[277.55081177 74.10469055]
[278.90112305 86.24346924]
[279.42251587 98.44598389]
[279.11257935 110.65570068]
[277.97271729 122.81604767]
[276.00820923 134.87066650]
[273.22821045 146.76373291]
[269.64553833 158.44010925]
[265.27682495 169.84570312]
[260.14233398 180.92767334]
[273.23547363 188.24678040]
[286.32864380 195.56588745]
[302.70977783 194.79753113]
[311.33682251 208.74407959]
[303.33502197 223.05851746]
[286.93591309 223.01538086]
[279.00952148 208.65904236]
[265.91638184 201.33993530]
[252.82322693 194.02082825]
[241.82130432 209.91619873]
[229.17318726 224.53572083]
[215.02566528 237.70965576]
[199.54298401 249.28512573]
[182.90483093 259.12774658]
[165.30436707 267.12329102]
[146.94587708 273.17892456]
[128.04244995 277.22436523]
[108.81352234 279.21264648]
[89.48228455 279.12072754]
[70.27313995 276.94961548]
[51.40904617 272.72454834]
[33.10897827 266.49456787]
[15.58535767 258.33200073]
[-0.95841283 248.33157349]
[-16.33029747 236.60935974]
[-30.35186768 223.30143738]
[-42.86036301 208.56228638]
[-53.71059418 192.56298828]
[-62.77661514 175.48925781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 66]
[2 65]
[3 64]
[4 63]
[5 62]
[6 60]
[7 59]
[8 58]
[9 57]
[10 56]
[11 55]
[121 130]
[122 129]
[123 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
