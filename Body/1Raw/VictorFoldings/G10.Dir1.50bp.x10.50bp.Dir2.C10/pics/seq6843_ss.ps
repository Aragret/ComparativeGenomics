%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCGGAAUAAUCUCCCAUAUUGUAACUUACUACUCCGGAAAAAAAGAACCAUUUGGAUACAUxxxxxxxxxxAGCACAUACCAAGGCCACCACACACCACCUGUCCAAAAAGGCCUUCGAUACGGGAUAAUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 254.76022339]
[92.50000000 239.76022339]
[92.50000000 224.76022339]
[92.50000000 209.76022339]
[92.50000000 194.76022339]
[92.50000000 179.76022339]
[92.50000000 164.76022339]
[92.50000000 149.76022339]
[92.50000000 134.76022339]
[92.50000000 119.76022339]
[79.97403717 111.50793457]
[66.19165802 117.42790222]
[52.40927505 123.34786224]
[38.62689209 129.26782227]
[41.46298981 144.05871582]
[41.05271912 159.11347961]
[37.41527557 173.72796631]
[30.72078514 187.21862793]
[21.28236389 198.95446777]
[9.54146194 208.38661194]
[-3.95277715 215.07388306]
[-18.56920242 218.70350647]
[-33.62417984 219.10572815]
[-48.41355515 216.26171875]
[-62.24560928 210.30450439]
[-74.47338867 201.51271057]
[-84.52497864 190.29756165]
[-91.93024445 177.18359375]
[-96.34283447 162.78417969]
[-97.55635834 147.77281189]
[-95.51406097 132.85157776]
[-90.31146240 118.71838379]
[-82.19189453 106.03427124]
[-71.53513336 95.39249420]
[-58.83961105 87.29077911]
[-44.69911575 82.10807037]
[-29.77502823 80.08676147]
[-14.76537418 81.32140350]
[-0.37218145 85.75424957]
[12.73135376 93.17795563]
[23.93235397 103.24530792]
[32.70693207 115.48544312]
[46.48931122 109.56548309]
[60.27169418 103.64551544]
[74.05407715 97.72555542]
[77.41699982 92.79080200]
[81.57131958 89.18813324]
[86.10630035 87.00101471]
[90.61801910 86.20034027]
[94.73805237 86.65250397]
[98.15869141 88.13439941]
[100.65320587 90.35411072]
[108.37729645 77.49570465]
[116.10137939 64.63730621]
[113.74338531 51.91355515]
[120.49356079 41.34690857]
[132.25170898 38.33805084]
[140.24162292 25.64312172]
[140.48852539 7.26055002]
[156.26095581 -0.37033692]
[163.98504639 -13.22873974]
[171.70912170 -26.08714104]
[179.43321228 -38.94554520]
[187.15728760 -51.80394745]
[194.88137817 -64.66234589]
[202.60546875 -77.52075195]
[189.31626892 -70.56392670]
[174.79733276 -66.79560089]
[159.80224609 -66.41136932]
[145.10937500 -69.43117523]
[131.48132324 -75.69827271]
[119.62550354 -84.88735962]
[110.15727234 -96.52147675]
[103.56810760 -109.99674988]
[100.20000458 -124.61371613]
[100.22779846 -139.61369324]
[103.65004730 -154.21807861]
[110.28911591 -167.66883850]
[119.80039215 -179.26779175]
[131.69020081 -188.41287231]
[145.34136963 -194.62942505]
[160.04534912 -197.59475708]
[175.03889465 -197.15493774]
[189.54377747 -193.33283997]
[202.80708313 -186.32681274]
[214.14041138 -176.50051880]
[222.95545959 -164.36401367]
[228.79467773 -150.54722595]
[231.35501099 -135.76734924]
[230.50352478 -120.79154205]
[226.28443909 -106.39711761]
[218.91557312 -93.32963562]
[232.00872803 -100.64873505]
[245.10188293 -107.96784210]
[243.67822266 -123.13007355]
[248.55082703 -137.55842590]
[258.87548828 -148.75312805]
[272.86340332 -154.77461243]
[288.09106445 -154.57962036]
[301.92019653 -148.20193481]
[311.95483398 -136.74653625]
[316.45639038 -122.19814301]
[314.64495850 -107.07733917]
[306.83438110 -94.00390625]
[294.37786865 -85.24289703]
[279.43359375 -82.31219482]
[264.59078979 -85.71958160]
[252.42098999 -94.87468719]
[239.32783508 -87.55558777]
[226.23468018 -80.23648071]
[215.46386719 -69.79666901]
[207.73977661 -56.93826294]
[200.01570129 -44.07986069]
[192.29161072 -31.22145844]
[184.56752014 -18.36305618]
[176.84344482 -5.50465441]
[169.11935425 7.35374784]
[171.73956299 19.20456314]
[165.35542297 29.99630356]
[152.93655396 33.63303757]
[144.94664001 46.32796860]
[145.25334167 63.84669495]
[128.95977783 72.36138916]
[121.23569489 85.21978760]
[113.51161194 98.07819366]
[123.41216278 86.80970001]
[136.63938904 79.73577118]
[151.50837708 77.75750732]
[166.12504578 81.12691498]
[178.62750244 89.41477203]
[187.42312622 101.56536102]
[191.39152527 116.03089905]
[190.02719116 130.96871948]
[183.50390625 144.47601318]
[172.65263367 154.83215332]
[158.85563660 160.71797180]
[143.87042236 161.38371277]
[129.60583496 156.74455261]
[117.87896729 147.39144897]
[110.18360138 134.51583862]
[107.50000000 119.76022339]
[107.50000000 134.76022339]
[107.50000000 149.76022339]
[107.50000000 164.76022339]
[107.50000000 179.76022339]
[107.50000000 194.76022339]
[107.50000000 209.76022339]
[107.50000000 224.76022339]
[107.50000000 239.76022339]
[107.50000000 254.76022339]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 45]
[12 44]
[13 43]
[14 42]
[52 125]
[53 124]
[54 123]
[57 121]
[58 120]
[60 117]
[61 116]
[62 115]
[63 114]
[64 113]
[65 112]
[66 111]
[92 110]
[93 109]
[94 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
