%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAGUAGGCCUAAAAGCAGCCACCAAUUAAGAAAGCGUUCAAGCUCAACACCCACUACCUAxxxxxxxxxxAAACAAGCUAACAUGACUAACACCCUUAAUUCCAUCCACCCUCCUCUCCCUAGGAGGCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[109.03443909 272.38754272]
[109.03443909 257.38754272]
[109.03443909 242.38754272]
[109.03443909 227.38754272]
[109.03443909 212.38754272]
[109.03443909 197.38754272]
[109.03443909 182.38754272]
[109.03443909 167.38754272]
[109.03443909 152.38754272]
[109.03443909 137.38754272]
[105.02670288 122.93286133]
[95.38986969 123.02021790]
[86.52985382 119.22859955]
[74.44986725 128.12094116]
[69.35163116 135.77992249]
[62.02479935 137.06953430]
[49.76242828 145.70864868]
[37.50006104 154.34776306]
[38.25911331 169.75643921]
[30.54730797 183.11801147]
[16.82545471 190.16885376]
[1.47214746 188.65905762]
[-10.61343002 179.07040405]
[-15.57481480 164.46258545]
[-11.82884502 149.49691772]
[-0.57084709 138.94888306]
[14.60679245 136.18432617]
[28.86094475 142.08540344]
[41.12331390 133.44628906]
[53.38568115 124.80716705]
[65.55751801 116.04096222]
[77.63750458 107.14860535]
[78.42845917 90.73435211]
[89.78842926 78.85980988]
[87.92081451 63.97653198]
[86.05319977 49.09325409]
[84.18558502 34.20997238]
[82.31797791 19.32669258]
[80.45036316 4.44341326]
[78.58274841 -10.43986702]
[65.07231140 -14.91600895]
[54.64330292 -24.51441956]
[49.11003113 -37.49938965]
[49.40791702 -51.55206680]
[55.43572235 -64.18451691]
[66.08206177 -73.18020630]
[62.07432175 -87.63489532]
[58.06658173 -102.08958435]
[53.55611801 -107.06584930]
[52.45223999 -112.72383118]
[54.20621490 -117.22927856]
[50.80323792 -131.83818054]
[47.40026093 -146.44706726]
[43.99728394 -161.05595398]
[28.96209145 -160.47328186]
[14.08837223 -162.74681091]
[-0.08619821 -167.79438782]
[-13.04921913 -175.43354797]
[-24.33208466 -185.38810730]
[-33.52692795 -197.29824829]
[-40.30135727 -210.73341370]
[-44.41048813 -225.20793152]
[-45.70576859 -240.19854736]
[-44.14038467 -255.16337585]
[-39.77091980 -269.56143188]
[-32.75532532 -282.87225342]
[-23.34721184 -294.61465454]
[-11.88667774 -304.36416626]
[1.21198583 -311.76831055]
[15.47527027 -316.55947876]
[30.38756752 -318.56442261]
[45.40980911 -317.71072388]
[59.99894333 -314.02920532]
[73.62759399 -307.65295410]
[85.80308533 -298.81250000]
[96.08528137 -287.82736206]
[104.10248566 -275.09469604]
[109.56488800 -261.07476807]
[112.27502441 -246.27436829]
[112.13491821 -231.22854614]
[109.14964294 -216.48118591]
[103.42710876 -202.56539917]
[95.17417908 -189.98423767]
[84.68920135 -179.19248962]
[72.35119629 -170.58027649]
[58.60617447 -164.45893860]
[62.00915146 -149.85005188]
[65.41213226 -135.24114990]
[68.81510925 -120.63226318]
[72.52127075 -106.09732056]
[76.52900696 -91.64263916]
[80.53675079 -77.18795013]
[92.70915985 -75.40214539]
[103.38508606 -69.28812408]
[115.46507263 -78.18047333]
[119.28765106 -93.76147461]
[133.91252136 -100.35636902]
[148.12074280 -92.90612030]
[151.01296997 -77.12592316]
[140.37054443 -65.12099457]
[124.35742188 -66.10048676]
[112.27743530 -57.20813751]
[114.92638397 -39.60857391]
[108.04382324 -23.03269196]
[93.46602631 -12.30747986]
[95.33364105 2.57580018]
[97.20125580 17.45907974]
[99.06887054 32.34236145]
[100.93647766 47.22563934]
[102.80409241 62.10892105]
[104.67170715 76.99220276]
[118.27380371 85.26053619]
[123.47532654 100.30468750]
[117.88510132 115.20877075]
[118.01994324 100.20938110]
[121.42726135 85.60150146]
[127.94255829 72.09036255]
[137.25129700 60.32824326]
[148.90408325 50.88299561]
[162.33833313 44.21060562]
[176.90548706 40.63320160]
[191.90229797 40.32349014]
[206.60473633 43.29641724]
[220.30300903 49.40846634]
[232.33581543 58.36455917]
[242.12223816 69.73232269]
[249.18980408 82.96295166]
[253.19732666 97.41770172]
[253.95132446 112.39873505]
[251.41539001 127.18281555]
[245.71195984 141.05619812]
[237.11637878 153.34913635]
[226.04362488 163.46812439]
[213.02824402 170.92466736]
[198.69860840 175.35877991]
[183.74649048 176.55638123]
[168.89375305 174.45968628]
[154.85743713 169.16987610]
[142.31518555 160.94236755]
[131.87251282 150.17433167]
[124.03443909 137.38754272]
[124.03443909 152.38754272]
[124.03443909 167.38754272]
[124.03443909 182.38754272]
[124.03443909 197.38754272]
[124.03443909 212.38754272]
[124.03443909 227.38754272]
[124.03443909 242.38754272]
[124.03443909 257.38754272]
[124.03443909 272.38754272]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 114]
[13 32]
[14 31]
[16 30]
[17 29]
[18 28]
[34 111]
[35 110]
[36 109]
[37 108]
[38 107]
[39 106]
[40 105]
[46 92]
[47 91]
[48 90]
[51 89]
[52 88]
[53 87]
[54 86]
[94 102]
[95 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
