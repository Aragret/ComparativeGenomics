%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCACCCAAGAACAGGGUUUGUUAAGAUGGCAGAGCCCGGUAAUCGCAUAAAACUUAAAACUxxxxxxxxxxCCCUCUAUUGAUCCCCACCUCCAAAUAUCUCAUCAACAACCGACUAAUCACCACCCAACAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 254.22151184]
[92.50000000 239.22151184]
[92.50000000 224.22151184]
[92.50000000 209.22151184]
[92.50000000 194.22151184]
[92.50000000 179.22151184]
[92.50000000 164.22151184]
[92.50000000 149.22151184]
[92.50000000 134.22151184]
[92.50000000 119.22151184]
[85.62358856 116.22736359]
[71.87075806 110.23906708]
[64.99433899 107.24491882]
[54.01353836 117.46362305]
[43.03273773 127.68233490]
[32.05193329 137.90104675]
[33.03495026 153.50769043]
[23.71465492 166.06420898]
[8.49181175 169.64178467]
[-5.44581985 162.55120850]
[-11.51731777 148.14041138]
[-6.85590458 133.21374512]
[6.33744192 124.81912994]
[21.83322716 126.92023468]
[32.81402969 116.70153046]
[43.79483414 106.48282623]
[54.77563477 96.26411438]
[60.05037689 82.22213745]
[58.51308441 67.30112457]
[56.97579193 52.38010788]
[55.43849945 37.45909119]
[53.90120697 22.53807259]
[50.28782654 16.88244820]
[50.14254379 11.12338829]
[52.62005997 6.97475958]
[51.69664764 -7.99679041]
[50.77323532 -22.96833992]
[49.84981918 -37.93989182]
[46.47167969 -43.73909378]
[46.56295395 -49.49926376]
[49.20870590 -53.54267883]
[48.90073013 -68.53952026]
[48.59275055 -83.53635406]
[33.62181854 -84.63436890]
[18.81948853 -87.12947083]
[4.31585121 -90.99973297]
[-9.76163483 -96.21115112]
[-23.28925133 -102.71791840]
[-36.14811707 -110.46286011]
[-48.22522354 -119.37789917]
[-59.41443253 -129.38470459]
[-69.61741638 -140.39530945]
[-78.74450684 -152.31297302]
[-86.71548462 -165.03295898]
[-93.46031189 -178.44346619]
[-98.91970825 -192.42665100]
[-103.04569244 -206.85963440]
[-105.80200195 -221.61555481]
[-107.16442108 -236.56474304]
[-107.12097931 -251.57582092]
[-105.67204285 -266.51687622]
[-102.83036041 -281.25659180]
[-98.62090302 -295.66543579]
[-93.08065796 -309.61679077]
[-86.25831604 -322.98803711]
[-78.21384430 -335.66168213]
[-69.01792145 -347.52630615]
[-58.75137329 -358.47766113]
[-47.50442505 -368.41952515]
[-35.37591553 -377.26452637]
[-22.47243500 -384.93490601]
[-8.90738010 -391.36325073]
[5.20003605 -396.49310303]
[19.72583389 -400.27932739]
[34.54235840 -402.68872070]
[49.51939774 -403.70004272]
[64.52532959 -403.30444336]
[79.42827606 -401.50540161]
[94.09727478 -398.31869507]
[108.40339661 -393.77236938]
[122.22093201 -387.90634155]
[135.42845154 -380.77218628]
[147.90985107 -372.43258667]
[159.55548096 -362.96084595]
[170.26298523 -352.44021606]
[179.93826294 -340.96313477]
[188.49626160 -328.63043213]
[195.86181641 -315.55056763]
[201.97015381 -301.83843994]
[206.76762390 -287.61456299]
[210.21205139 -273.00393677]
[212.27316284 -258.13494873]
[212.93286133 -243.13832092]
[212.18531799 -228.14579773]
[210.03713989 -213.28915405]
[206.50718689 -198.69895935]
[201.62646484 -184.50341797]
[195.43789673 -170.82731628]
[187.99586487 -157.79080200]
[179.36575317 -145.50846863]
[169.62341309 -134.08825684]
[158.85446167 -123.63052368]
[147.15354919 -114.22717285]
[134.62348938 -105.96084595]
[121.37441254 -98.90418243]
[107.52275085 -93.11920929]
[93.19023132 -88.65676117]
[78.50282288 -85.55605316]
[63.58958817 -83.84432983]
[63.89756775 -68.84749603]
[64.20554352 -53.85065842]
[64.82137299 -38.86330414]
[65.74478149 -23.89175415]
[66.66819763 -8.92020416]
[67.59161377 6.05134630]
[68.82221985 21.00078011]
[70.35951233 35.92179871]
[71.89680481 50.84281540]
[73.43409729 65.76383209]
[74.97138977 80.68484497]
[94.32485962 65.63578033]
[121.04607391 68.30711365]
[140.12767029 90.40390015]
[153.41500854 97.36425781]
[169.76919556 96.15072632]
[178.77229309 109.85751343]
[171.16270447 124.38425446]
[154.76850891 124.78707886]
[146.45465088 110.65159607]
[133.16731262 103.69123840]
[126.75048065 107.57380676]
[135.07424927 120.05238342]
[143.39801025 132.53096008]
[151.72178650 145.00953674]
[164.07119751 153.52377319]
[163.62547302 168.51715088]
[150.79211426 176.28276062]
[137.30332947 169.72129822]
[135.49098206 154.83015442]
[128.29959106 141.66642761]
[121.10820770 128.50268555]
[113.91682434 115.33894348]
[107.50000000 119.22151184]
[107.50000000 134.22151184]
[107.50000000 149.22151184]
[107.50000000 164.22151184]
[107.50000000 179.22151184]
[107.50000000 194.22151184]
[107.50000000 209.22151184]
[107.50000000 224.22151184]
[107.50000000 239.22151184]
[107.50000000 254.22151184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[13 27]
[14 26]
[15 25]
[16 24]
[28 120]
[29 119]
[30 118]
[31 117]
[32 116]
[35 115]
[36 114]
[37 113]
[38 112]
[41 111]
[42 110]
[43 109]
[123 130]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
