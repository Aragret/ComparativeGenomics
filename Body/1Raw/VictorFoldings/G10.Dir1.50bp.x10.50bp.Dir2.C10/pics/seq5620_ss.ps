%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCACCAUCACCCUCCUUAACCUCUACUUCUACCUACGCCUAAUCUACUCCACCUCAAUCAxxxxxxxxxxUGGGACAGACCUAGUUCAAUGAAUCUGAGGAGGCUACUCAGUAGACAGUCCCACCCUCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[75.03999329 387.22985840]
[75.03999329 372.22985840]
[75.03999329 357.22985840]
[75.03999329 342.22985840]
[75.03999329 327.22985840]
[75.03999329 312.22985840]
[75.03999329 297.22985840]
[75.03999329 282.22985840]
[75.03999329 267.22985840]
[75.03999329 252.22984314]
[58.94189072 247.40391541]
[45.08203888 237.86756897]
[34.79985428 224.52912903]
[29.09306526 208.66502380]
[28.52089500 191.79757690]
[33.14929199 175.54895020]
[42.54353333 161.48516846]
[55.80902481 150.96511841]
[71.67649078 145.00932312]
[70.74086761 130.03852844]
[87.00273895 90.48583984]
[81.80732727 76.41432190]
[76.61190796 62.34280014]
[71.41649628 48.27128220]
[66.22107697 34.19976044]
[61.02566147 20.12824249]
[44.51485825 24.34818649]
[29.77497292 17.74357986]
[22.75988960 4.18862963]
[25.54466629 -9.91273594]
[15.10485268 -20.68354416]
[3.16130185 -11.57926369]
[-9.77523136 -3.95152044]
[-23.52313805 2.09260297]
[-37.88941956 6.46825647]
[-52.67239380 9.11401272]
[-67.66452789 9.99272919]
[-82.65536499 9.09207058]
[-97.43445587 6.42468071]
[-111.79431152 2.02800488]
[-125.53336334 -4.03623390]
[-138.45870972 -11.68290329]
[-150.38893127 -20.80465508]
[-161.15652466 -31.27343559]
[-170.61032104 -42.94227982]
[-178.61763000 -55.64737320]
[-185.06602478 -69.21035767]
[-189.86499023 -83.44083405]
[-192.94714355 -98.13901520]
[-194.26922607 -113.09857941]
[-193.81266785 -128.10951233]
[-191.58387756 -142.96105957]
[-187.61416626 -157.44477844]
[-181.95924377 -171.35728455]
[-174.69850159 -184.50331116]
[-165.93386841 -196.69828796]
[-155.78837585 -207.77102661]
[-144.40446472 -217.56607056]
[-131.94194031 -225.94592285]
[-118.57576752 -232.79293823]
[-104.49356842 -238.01100159]
[-89.89305115 -241.52685547]
[-74.97917938 -243.29113770]
[-59.96131516 -243.27908325]
[-45.05028915 -241.49087524]
[-30.45543098 -237.95159912]
[-16.38162994 -232.71093750]
[-3.02645683 -225.84248352]
[9.42259979 -217.44264221]
[20.79077721 -207.62933350]
[30.91847992 -196.54032898]
[39.66353607 -184.33129883]
[46.90317535 -171.17364502]
[52.53576279 -157.25207520]
[56.48223114 -142.76200867]
[58.68717194 -127.90689087]
[59.11963654 -112.89525604]
[57.77355194 -97.93783569]
[54.66781235 -83.24461365]
[49.84601974 -69.02185822]
[43.37586594 -55.46924210]
[35.34818268 -42.77701569]
[25.87566185 -31.12335777]
[36.31547546 -20.35254860]
[53.70899963 -23.05529976]
[69.32581329 -11.06457329]
[80.82762146 -20.69309998]
[92.32942200 -30.32162666]
[103.83122253 -39.95015335]
[89.44983673 -44.21344757]
[83.61932373 -58.03390503]
[90.60131073 -71.30989075]
[105.29254150 -74.33773041]
[116.95490265 -64.90432739]
[117.06443787 -49.90531921]
[129.50387573 -58.28746033]
[141.94331360 -66.66960907]
[151.69990540 -80.53486633]
[167.72419739 -74.99787140]
[166.83953857 -58.06701660]
[150.32546997 -54.23016357]
[137.88601685 -45.84802246]
[125.44658661 -37.46587753]
[113.45974731 -28.44834900]
[101.95794678 -18.81982231]
[90.45614624 -9.19129658]
[78.95433807 0.43722993]
[75.09718323 14.93282700]
[80.29259491 29.00434685]
[85.48801422 43.07586670]
[90.68342590 57.14738464]
[95.87884521 71.21890259]
[101.07425690 85.29042053]
[112.27002716 95.27314758]
[126.84272766 98.82791138]
[141.41543579 102.38267517]
[155.98812866 105.93743896]
[172.80894470 103.81695557]
[179.50302124 119.39340210]
[166.38841248 130.13786316]
[152.43336487 120.51013947]
[137.86067200 116.95537567]
[123.28796387 113.40061188]
[108.71526337 109.84585571]
[102.96436310 114.66011810]
[105.55231476 129.43518066]
[91.46255493 124.28864288]
[85.71165466 129.10290527]
[86.64728546 144.07369995]
[99.68112183 146.72102356]
[111.68011475 152.43371582]
[121.93583679 160.86889648]
[129.84416199 171.52311707]
[134.94079590 183.76240540]
[136.92860413 196.85998535]
[135.69485474 210.03944397]
[131.31767273 222.52076721]
[124.06105804 233.56646729]
[114.35896301 242.52517700]
[102.78941345 248.87007141]
[90.03999329 252.22984314]
[90.03999329 267.22985840]
[90.03999329 282.22985840]
[90.03999329 297.22985840]
[90.03999329 312.22985840]
[90.03999329 327.22985840]
[90.03999329 342.22985840]
[90.03999329 357.22985840]
[90.03999329 372.22985840]
[90.03999329 387.22985840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[19 129]
[20 128]
[21 113]
[22 112]
[23 111]
[24 110]
[25 109]
[26 108]
[30 84]
[31 83]
[86 107]
[87 106]
[88 105]
[89 104]
[95 103]
[96 102]
[97 101]
[114 124]
[115 123]
[116 122]
[117 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
