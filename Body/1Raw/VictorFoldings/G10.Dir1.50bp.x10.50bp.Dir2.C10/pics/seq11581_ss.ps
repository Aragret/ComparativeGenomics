%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAACUAUCUCCCUAAUUGAAAACAAAAUACUCAAAUGGGCCUGUCCUUGUAGUAUAAACUxxxxxxxxxxACAUCAAAACCCCCUCCCCAUGCUUACAAGCAAGUACAGCAAUCAACCCUCAACUAUCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[88.92140961 485.35516357]
[88.92140961 470.35516357]
[88.92140961 455.35516357]
[88.92140961 440.35516357]
[88.92140961 425.35516357]
[88.92140961 410.35516357]
[88.92140961 395.35516357]
[88.92140961 380.35516357]
[88.92140961 365.35516357]
[88.92140961 350.35516357]
[74.56938934 347.64318848]
[60.96128082 342.32574463]
[48.56580734 334.58435059]
[37.81024933 324.68408203]
[29.06567764 312.96441650]
[22.63417435 299.82763672]
[18.73838043 285.72503662]
[17.51380157 271.14144897]
[19.00408936 256.57843018]
[23.15949059 242.53723145]
[29.83850288 229.50132751]
[38.81269455 217.91993713]
[49.77451706 208.19241333]
[62.34784698 200.65460205]
[76.10088348 195.56713867]
[90.56098938 193.10649109]
[90.87304688 178.10974121]
[91.18510437 163.11299133]
[91.49716187 148.11622620]
[81.01514435 145.02272034]
[71.48291016 139.67675781]
[63.37736511 132.34582520]
[57.10400772 123.39665985]
[52.97669220 113.27698517]
[51.20190048 102.49307251]
[51.86842728 91.58444214]
[54.94292450 81.09682465]
[42.16556931 73.23940277]
[29.38821030 65.38197327]
[16.61085320 57.52454758]
[3.83349633 49.66712189]
[-9.02490616 41.94303894]
[-21.96296120 34.35313034]
[-34.90101624 26.76322174]
[-41.60319519 26.32921791]
[-46.33372116 23.03476906]
[-48.21001053 18.57886696]
[-60.82113647 10.45732498]
[-73.43226624 2.33578324]
[-89.82942963 2.08087063]
[-97.56976318 -12.37662888]
[-88.69067383 -26.16407776]
[-72.32620239 -25.09813309]
[-65.31072235 -10.27534485]
[-52.69959641 -2.15380287]
[-40.08846664 5.96773911]
[-27.31110954 13.82516479]
[-14.37305355 21.41507339]
[-1.43499792 29.00498199]
[5.97368145 29.68108940]
[11.69092178 36.88976669]
[24.46827888 44.74719238]
[37.24563599 52.60461807]
[50.02299500 60.46204376]
[62.80035019 68.31946564]
[80.68704987 55.11704254]
[102.57179260 51.20598602]
[123.92413330 57.39594269]
[133.18908691 45.59930420]
[142.45404053 33.80266190]
[128.31663513 38.81604767]
[113.48095703 41.03020859]
[98.49578857 40.36324310]
[83.91548157 36.83982086]
[70.27938080 30.59028244]
[58.09191513 21.84581184]
[47.80393219 10.92988682]
[39.79600525 -1.75369000]
[34.36436844 -15.73572445]
[31.70994186 -30.49899101]
[31.93092537 -45.49736404]
[35.01913834 -60.17601776]
[40.86034775 -73.99195862]
[49.23847198 -86.43411255]
[59.84358215 -97.04219818]
[72.28337860 -105.42382050]
[86.09767914 -111.26891327]
[100.77546692 -114.36125183]
[115.77377319 -114.58644867]
[130.53778076 -111.93617249]
[144.52134705 -106.50846100]
[157.20716858 -98.50409698]
[168.12599182 -88.21918488]
[176.87388611 -76.03417969]
[183.12725830 -62.39983368]
[186.65476990 -47.82051086]
[187.32594299 -32.83553314]
[185.11595154 -17.99922943]
[180.10653687 -3.86042500]
[172.48301697 9.05785465]
[162.53222656 20.27325249]
[176.94444275 16.11536598]
[191.35665894 11.95747852]
[205.76887512 7.79959106]
[216.74555969 -4.38419294]
[232.72683716 -0.70581800]
[237.27256775 15.05071926]
[225.70646667 26.67644310]
[209.92675781 22.21180725]
[195.51454163 26.36969376]
[181.10232544 30.52758217]
[166.69010925 34.68547058]
[154.25067139 43.06761169]
[144.98573303 54.86425400]
[135.72077942 66.66089630]
[143.39926147 77.55064392]
[147.85034180 90.10985565]
[148.74299622 103.40454865]
[146.01083374 116.44606781]
[139.85705566 128.26455688]
[130.73927307 137.98114014]
[119.33554077 144.87322998]
[106.49391174 148.42828369]
[106.18186188 163.42503357]
[105.86980438 178.42179871]
[105.55774689 193.41854858]
[120.62694550 196.70912170]
[134.76647949 202.86051941]
[147.43910217 211.63702393]
[158.16374207 222.70329285]
[166.53366089 235.63702393]
[172.23193359 249.94520569]
[175.04345703 265.08282471]
[174.86302185 280.47360229]
[171.69927979 295.53207397]
[165.67439270 309.68566895]
[157.01919556 322.39663696]
[146.06448364 333.18240356]
[133.22827148 341.63391113]
[118.99991608 347.43112183]
[103.92140961 350.35516357]
[103.92140961 365.35516357]
[103.92140961 380.35516357]
[103.92140961 395.35516357]
[103.92140961 410.35516357]
[103.92140961 425.35516357]
[103.92140961 440.35516357]
[103.92140961 455.35516357]
[103.92140961 470.35516357]
[103.92140961 485.35516357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[26 126]
[27 125]
[28 124]
[29 123]
[37 65]
[38 64]
[39 63]
[40 62]
[41 61]
[42 59]
[43 58]
[44 57]
[47 56]
[48 55]
[49 54]
[68 115]
[69 114]
[70 113]
[101 112]
[102 111]
[103 110]
[104 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
