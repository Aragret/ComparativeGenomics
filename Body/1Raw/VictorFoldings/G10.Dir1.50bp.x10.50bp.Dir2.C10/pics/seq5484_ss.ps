%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUCCACCCUCCUCUCCCUAGGAGGCCUGCCCCCGCUAACCGGCUUUUUGCCCAAAUGGGCxxxxxxxxxxAUUCUCCGAUCCGUCCCUAACAAACUAGGAGGCGUCCUUGCCCUAUUACUAUCCAUCCUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-16.77228355 209.84715271]
[-24.52253342 200.97674561]
[-36.60252380 209.86909485]
[-48.68251038 218.76144409]
[-60.76249695 227.65379333]
[-72.84248352 236.54614258]
[-79.36936188 250.95831299]
[-94.20590210 252.27223206]
[-106.28588867 261.16458130]
[-118.36587524 270.05694580]
[-103.83857727 273.79290771]
[-96.04286957 286.60803223]
[-99.40480042 301.22640991]
[-112.01560974 309.34844971]
[-126.71546936 306.36279297]
[-135.15847778 293.96459961]
[-132.55024719 279.19165039]
[-145.64340210 286.51074219]
[-158.73655701 293.82986450]
[-171.82971191 301.14895630]
[-184.92286682 308.46804810]
[-198.01602173 315.78717041]
[-202.07609558 331.06103516]
[-215.78900146 338.91802979]
[-231.01908875 334.69668579]
[-238.73065186 320.90148926]
[-234.34852600 305.71685791]
[-220.47256470 298.15158081]
[-205.33512878 302.69400024]
[-192.24197388 295.37490845]
[-179.14881897 288.05581665]
[-166.05566406 280.73669434]
[-152.96250916 273.41760254]
[-139.86935425 266.09848022]
[-127.25822449 257.97692871]
[-115.17823792 249.08459473]
[-103.09825134 240.19224548]
[-97.43541718 226.41612244]
[-81.73484039 224.46615601]
[-69.65484619 215.57380676]
[-57.57485962 206.68145752]
[-45.49487305 197.78910828]
[-33.41488266 188.89675903]
[-41.87620163 174.65458679]
[-48.82264709 159.61531067]
[-54.18004608 143.93948364]
[-57.89119720 127.79449463]
[-59.91647720 111.35273743]
[-60.23426056 94.78975677]
[-58.84114838 78.28240967]
[-55.75202560 62.00695419]
[-50.99986649 46.13716507]
[-44.63541794 30.84249306]
[-36.72663116 16.28624535]
[-27.35795784 2.62384629]
[-16.62942696 -9.99882507]
[-4.65559196 -21.44699097]
[8.43569565 -31.59841537]
[22.50465584 -40.34470367]
[15.87615681 -53.80067062]
[9.24765873 -67.25663757]
[2.61915970 -80.71260071]
[-11.30566597 -89.37465668]
[-10.49615765 -105.75381470]
[4.21493340 -113.00059509]
[17.69409752 -103.66013336]
[16.07512474 -87.34110260]
[22.70362473 -73.88513184]
[29.33212280 -60.42916870]
[35.96062088 -46.97320175]
[44.46995926 -50.39474487]
[53.16103363 -53.32408905]
[62.00539780 -55.75164413]
[70.97410583 -57.66947174]
[80.03781128 -59.07129288]
[89.16684723 -59.95251465]
[98.33132935 -60.31026077]
[107.50128174 -60.14336014]
[116.64667511 -59.45235062]
[125.73759460 -58.23950577]
[134.74427795 -56.50878525]
[143.63726807 -54.26585388]
[152.38743591 -51.51805878]
[160.96615601 -48.27438354]
[169.34533691 -44.54545212]
[177.49758911 -40.34346771]
[185.39620972 -35.68217468]
[193.01535034 -30.57683563]
[200.33007812 -25.04415512]
[207.31645203 -19.10223961]
[213.95161438 -12.77053833]
[220.21383667 -6.06977129]
[226.08264160 0.97813201]
[231.53881836 8.35010529]
[236.56449890 16.02202225]
[241.14324951 23.96877480]
[254.66743469 17.48060989]
[268.19161987 10.99244499]
[281.71582031 4.50428009]
[286.72070312 -10.48660660]
[300.89697266 -17.47293282]
[315.83410645 -12.30983543]
[322.67016602 1.93951166]
[317.34942627 16.82122421]
[303.02862549 23.50624466]
[288.20397949 18.02847099]
[274.67980957 24.51663589]
[261.15560913 31.00480080]
[247.63142395 37.49296570]
[258.37115479 75.08532715]
[259.69244385 114.15937805]
[274.55548096 116.18171692]
[289.41854858 118.20404816]
[304.28158569 120.22638702]
[319.24630737 113.51902008]
[332.37713623 123.34317017]
[330.16616821 139.59259033]
[314.88787842 145.55126953]
[302.25924683 135.08943176]
[287.39620972 133.06709290]
[272.53314209 131.04476929]
[257.67010498 129.02243042]
[255.11357117 140.52088928]
[251.71968079 151.80061340]
[247.50674438 162.80068970]
[242.49749756 173.46174622]
[236.71899414 183.72622681]
[230.20243835 193.53871155]
[222.98298645 202.84625244]
[215.09962463 211.59857178]
[206.59490967 219.74844360]
[197.51475525 227.25186157]
[187.90817261 234.06832886]
[177.82702637 240.16104126]
[167.32574463 245.49711609]
[156.46101379 250.04772949]
[145.29147339 253.78831482]
[133.87742615 256.69869995]
[122.28050995 258.76315308]
[110.56330872 259.97055054]
[98.78908539 260.31436157]
[87.02140045 259.79275513]
[75.32377625 258.40847778]
[63.75936127 256.16906738]
[52.39059067 253.08660889]
[41.27883530 249.17770386]
[30.48407745 244.46350098]
[20.06459618 238.96940613]
[10.07663918 232.72511292]
[0.57412350 225.76429749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 43]
[3 42]
[4 41]
[5 40]
[6 39]
[8 37]
[9 36]
[10 35]
[17 34]
[18 33]
[19 32]
[20 31]
[21 30]
[22 29]
[59 70]
[60 69]
[61 68]
[62 67]
[96 109]
[97 108]
[98 107]
[99 106]
[111 122]
[112 121]
[113 120]
[114 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
