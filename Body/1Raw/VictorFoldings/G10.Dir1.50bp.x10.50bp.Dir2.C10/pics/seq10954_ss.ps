%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUGUUCGCAGCAGUCUGCGCCCUUACACAAAAUGACAUCAAAAAAAUCGUAGCCUUCUCCxxxxxxxxxxAAAAUAACCCCACCCUACUAAACCCCAUUAAACGCCUGGCAGCCGGAAGCCUAUUCGCAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[127.07131958 289.96896362]
[126.44734192 274.98196411]
[125.82336426 259.99493408]
[125.19938660 245.00793457]
[124.57540894 230.02091980]
[123.95143127 215.03388977]
[123.32745361 200.04687500]
[122.70347595 185.05986023]
[119.60515594 170.38334656]
[114.11812592 156.42294312]
[108.63108826 142.46255493]
[103.14405823 128.50216675]
[97.65702820 114.54177856]
[90.45092010 112.46283722]
[76.03870392 108.30494690]
[68.83259583 106.22600555]
[56.75260925 115.11835480]
[44.67261887 124.01070404]
[32.59263229 132.90306091]
[20.51264381 141.79541016]
[14.43539619 157.02691650]
[-1.83071756 159.11152649]
[-11.55251408 145.90475464]
[-4.72904348 130.99261475]
[11.62029362 129.71540833]
[23.70028114 120.82306671]
[35.78026962 111.93071747]
[47.86026001 103.03836823]
[59.94024658 94.14601898]
[77.76909637 89.98707581]
[93.67517853 94.65884399]
[93.36312866 79.66208649]
[78.90726471 75.24785614]
[66.54031372 66.59331512]
[57.46620178 54.55633926]
[52.56353378 40.32331848]
[52.30054474 25.29223442]
[56.69040680 10.93535328]
[65.29117584 -1.34499264]
[77.25024414 -10.35336971]
[91.38884735 -15.21761036]
[91.07678986 -30.21436501]
[90.76473236 -45.21111679]
[90.45267487 -60.20787048]
[75.48674774 -61.39094925]
[60.71299362 -64.05828857]
[46.27823639 -68.18338776]
[32.32594681 -73.72524261]
[18.99478531 -80.62877655]
[6.41725111 -88.82537842]
[-5.28165197 -98.23358154]
[-15.98565197 -108.75988007]
[-25.58836555 -120.29965973]
[-33.99435043 -132.73822021]
[-41.12006760 -145.95196533]
[-46.89469528 -159.80953979]
[-51.26083755 -174.17321777]
[-54.17510605 -188.90025330]
[-55.60852814 -203.84428406]
[-55.54686737 -218.85676575]
[-53.99073029 -233.78851318]
[-50.95558548 -248.49111938]
[-46.47159576 -262.81845093]
[-40.58332825 -276.62811279]
[-33.34930420 -289.78286743]
[-24.84142303 -302.15197754]
[-15.14423752 -313.61248779]
[-4.35412884 -324.05047607]
[7.42166471 -333.36227417]
[20.06610680 -341.45526123]
[33.45352936 -348.24905396]
[47.45087433 -353.67611694]
[61.91902924 -357.68249512]
[76.71420288 -360.22839355]
[91.68933868 -361.28848267]
[106.69561768 -360.85226440]
[121.58388519 -358.92401123]
[136.20617676 -355.52294922]
[150.41716003 -350.68286133]
[164.07560730 -344.45187378]
[177.04576111 -336.89184570]
[189.19871521 -328.07797241]
[200.41369629 -318.09786987]
[210.57922363 -307.05065918]
[219.59426880 -295.04617310]
[227.36926270 -282.20373535]
[233.82688904 -268.65097046]
[238.90298462 -254.52256775]
[242.54711914 -239.95895386]
[244.72303772 -225.10485840]
[245.40914917 -210.10792542]
[244.59861755 -195.11721802]
[242.29949951 -180.28169250]
[238.53463745 -165.74882507]
[233.34146118 -151.66302490]
[226.77159119 -138.16430664]
[218.89030457 -125.38683319]
[209.77593994 -113.45758057]
[199.51907349 -102.49512482]
[188.22166443 -92.60840607]
[175.99598694 -83.89569855]
[162.96354675 -76.44358063]
[149.25386047 -70.32612610]
[135.00320435 -65.60414124]
[120.35318756 -62.32453918]
[105.44943237 -60.51992798]
[105.76148987 -45.52317429]
[106.07353973 -30.52642059]
[106.38559723 -15.52966690]
[120.71430969 -11.25778103]
[133.03776550 -2.75468063]
[142.14192200 9.15725708]
[147.12521362 23.31909943]
[147.48771667 38.34811020]
[143.18136597 52.77275467]
[134.61582947 65.17678070]
[122.61960602 74.33827972]
[108.35987854 79.35003662]
[108.67193604 94.34678650]
[111.61741638 109.05474854]
[117.10444641 123.01513672]
[122.59148407 136.97552490]
[128.07850647 150.93591309]
[133.56555176 164.89630127]
[136.43164062 150.17266846]
[144.07810974 137.26795959]
[155.61592102 127.68260956]
[169.70356750 122.53108215]
[184.70309448 122.41236115]
[198.87052917 127.34023285]
[210.55862427 136.74174500]
[218.40841675 149.52378845]
[221.50721741 164.20021057]
[219.49473572 179.06460571]
[212.60496521 192.38867188]
[201.63896179 202.62326050]
[187.87173462 208.57839966]
[172.90399170 209.56167603]
[158.47602844 205.45877075]
[146.26536560 196.74673462]
[137.69049072 184.43588257]
[138.31446838 199.42289734]
[138.93844604 214.40991211]
[139.56242371 229.39694214]
[140.18640137 244.38395691]
[140.81037903 259.37097168]
[141.43435669 274.35797119]
[142.05833435 289.34500122]
[148.75833130 304.91891479]
[135.64779663 315.66833496]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 124]
[10 123]
[11 122]
[12 121]
[13 120]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[31 119]
[32 118]
[41 109]
[42 108]
[43 107]
[44 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
