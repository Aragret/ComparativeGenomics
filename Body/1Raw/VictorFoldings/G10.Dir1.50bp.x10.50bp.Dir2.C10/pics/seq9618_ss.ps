%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAAUACUAUCGCUGUUCAUUAUAGCUACUCUCAUAACCCUCAACACCCACUCCCUCUUAGxxxxxxxxxxCUACACAAUUCUCCGAUCCGUCCCUAACAAACUAGGAGGCGUCCUUGCCCUAUUACUAUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[93.27559662 275.55444336]
[93.27559662 260.55444336]
[93.27559662 245.55444336]
[93.27559662 230.55444336]
[93.27559662 215.55444336]
[93.27559662 200.55444336]
[93.27559662 185.55444336]
[93.27559662 170.55444336]
[93.27559662 155.55444336]
[93.27559662 140.55444336]
[79.15155792 132.93310547]
[69.72215271 120.99869537]
[66.02001953 107.11192322]
[68.02398682 93.72646332]
[74.75807953 82.96029663]
[64.77535248 71.76453400]
[47.18154907 66.43180084]
[44.22167969 49.16220093]
[34.00820160 38.17653656]
[23.79472160 27.19087029]
[13.58124161 16.20520592]
[1.76203549 25.45616341]
[-10.79913330 33.67144775]
[-24.01176071 40.79186249]
[-37.78064728 46.76610947]
[-52.00658417 51.55114365]
[-66.58707428 55.11248016]
[-81.41706085 57.42446899]
[-96.38969421 58.47044754]
[-111.39709473 58.24287796]
[-126.33113098 56.74340057]
[-141.08419800 53.98281860]
[-155.55000305 49.98102951]
[-169.62431335 44.76685715]
[-183.20573425 38.37787247]
[-196.19638062 30.86011505]
[-208.50268555 22.26774597]
[-220.03596497 12.66267490]
[-230.71311951 2.11410952]
[-240.45721436 -9.30194759]
[-249.19805908 -21.50324249]
[-256.87265015 -34.40185928]
[-263.42572021 -47.90486908]
[-268.81002808 -61.91497421]
[-272.98678589 -76.33123016]
[-275.92590332 -91.04977417]
[-277.60620117 -105.96454620]
[-278.01559448 -120.96808624]
[-277.15109253 -135.95228577]
[-275.01895142 -150.80920410]
[-271.63452148 -165.43177795]
[-267.02221680 -179.71464539]
[-261.21520996 -193.55490112]
[-254.25540161 -206.85282898]
[-246.19291687 -219.51260376]
[-237.08583069 -231.44302368]
[-226.99978638 -242.55812073]
[-216.00744629 -252.77781677]
[-204.18798828 -262.02847290]
[-191.62661743 -270.24343872]
[-178.41380310 -277.36349487]
[-164.64476013 -283.33740234]
[-150.41870117 -288.12207031]
[-135.83811951 -291.68301392]
[-121.00807190 -293.99462891]
[-106.03540802 -295.04022217]
[-91.02801514 -294.81225586]
[-76.09401703 -293.31240845]
[-61.34102249 -290.55145264]
[-46.87532043 -286.54928589]
[-32.80114365 -281.33474731]
[-19.21989632 -274.94540405]
[-6.22943497 -267.42730713]
[6.07664347 -258.83462524]
[17.60967255 -249.22924805]
[28.28655243 -238.68041992]
[38.03035736 -227.26409912]
[46.77088165 -215.06259155]
[54.44514847 -202.16377258]
[60.99785995 -188.66058350]
[66.38180542 -174.65034485]
[70.55819702 -160.23397827]
[73.49694061 -145.51536560]
[75.17685699 -130.60055542]
[75.58585358 -115.59700012]
[74.72097015 -100.61281586]
[72.58844757 -85.75595856]
[69.20364380 -71.13347626]
[64.59095001 -56.85072708]
[58.78360748 -43.01062012]
[51.82344818 -29.71287155]
[43.76063156 -17.05329895]
[34.65324402 -5.12311363]
[24.56690598 5.99172592]
[34.78038406 16.97739029]
[44.99386597 27.96305466]
[55.20734406 38.94871902]
[67.32008362 39.71614456]
[75.91930389 48.84151459]
[75.97111511 61.78180695]
[85.95384216 72.97756958]
[110.25065613 71.32195282]
[127.99288177 88.00396729]
[142.81063843 85.67286682]
[157.62840271 83.34175873]
[172.44615173 81.01065826]
[181.54519653 68.08846283]
[197.13063049 65.46744537]
[209.95590210 74.70259857]
[212.41198730 90.31487274]
[203.04176331 103.04178619]
[187.40438843 105.33267975]
[174.77725220 95.82841492]
[159.95950317 98.15951538]
[145.14173889 100.49062347]
[130.32398987 102.82172394]
[135.21945190 106.31751251]
[139.70326233 110.65512085]
[153.35949707 116.86052704]
[167.01574707 123.06593323]
[180.67198181 129.27134705]
[196.93255615 127.14395905]
[206.68905640 140.32510376]
[199.90483093 155.25515747]
[183.55891418 156.57534790]
[174.46658325 142.92758179]
[160.81033325 136.72216797]
[147.15409851 130.51676941]
[133.49784851 124.31136322]
[127.19229126 128.37213135]
[136.20173645 140.36503601]
[145.21118164 152.35794067]
[154.22064209 164.35086060]
[163.88586426 175.82182312]
[157.60069275 189.44154358]
[142.60095215 189.53019714]
[136.15530396 175.98489380]
[128.96392822 162.82115173]
[121.77254486 149.65740967]
[114.58116150 136.49366760]
[108.27559662 140.55444336]
[108.27559662 155.55444336]
[108.27559662 170.55444336]
[108.27559662 185.55444336]
[108.27559662 200.55444336]
[108.27559662 215.55444336]
[108.27559662 230.55444336]
[108.27559662 245.55444336]
[108.27559662 260.55444336]
[108.27559662 275.55444336]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[15 101]
[16 100]
[18 97]
[19 96]
[20 95]
[21 94]
[103 116]
[104 115]
[105 114]
[106 113]
[118 129]
[119 128]
[120 127]
[121 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
