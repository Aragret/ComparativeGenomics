%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACUACCAAACCUGCAUUAAAAAUUUCGGUUGGGGCGACCUCGGAGCAGAACCCAACCUCCxxxxxxxxxxCAUCAAUUUCAUCACAACAAUUAUCAAUAUAAAACCCCCUGCCAUAACCCAAUACCAAACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[118.01782990 262.92962646]
[118.01782990 247.92962646]
[118.01782990 232.92962646]
[118.01782990 217.92962646]
[118.01782990 202.92962646]
[118.01782990 187.92962646]
[118.01782990 172.92962646]
[118.01782990 157.92962646]
[118.01782990 142.92962646]
[118.01782990 127.92962646]
[111.62915039 124.00091553]
[92.46311188 112.21477509]
[83.63871002 125.34643555]
[68.78952026 124.18416595]
[55.40323257 130.95228577]
[42.01694870 137.72039795]
[28.70179367 144.62739563]
[15.45920849 151.67253113]
[2.21662259 158.71766663]
[3.32454205 173.90621948]
[-1.84717441 188.23008728]
[-12.40249634 199.20758057]
[-26.51264954 204.93675232]
[-41.73296356 204.42500305]
[-55.42642975 197.76101685]
[-65.22057343 186.09933472]
[-69.41849518 171.46043396]
[-67.29288483 156.38059998]
[-59.21200943 143.47247314]
[-46.57593918 134.97250366]
[-31.57394218 132.35333252]
[-16.80521011 136.06877136]
[-4.82851219 145.47508240]
[8.41407299 138.42994690]
[21.65665817 131.38481140]
[26.11346054 125.42808533]
[35.24883652 124.33410645]
[48.63512039 117.56599426]
[62.02140427 110.79788208]
[69.88833618 98.15032196]
[85.69499969 98.82849121]
[96.13481140 88.05768585]
[102.48194122 74.46673584]
[108.82907104 60.87578201]
[103.78031158 46.75098038]
[90.25612640 40.26281357]
[73.95481110 42.05145645]
[64.47463989 28.67018700]
[71.56800079 13.88450718]
[87.93785095 12.90465927]
[96.74429321 26.73862648]
[110.26847839 33.22679138]
[119.84889984 19.72094345]
[134.10716248 13.36411381]
[148.67306519 15.05977535]
[156.39714050 2.20137334]
[164.12123108 -10.65702915]
[171.84532166 -23.51543045]
[159.82350159 -32.50804138]
[148.77314758 -42.67075729]
[138.80766296 -53.89928818]
[130.02928162 -66.07841492]
[122.52810669 -79.08316040]
[116.38110352 -92.78006744]
[111.65135193 -107.02859497]
[108.38739014 -121.68252563]
[106.62271118 -136.59147644]
[106.37541199 -151.60246277]
[107.64804840 -166.56146240]
[110.42755127 -181.31494141]
[114.68539429 -195.71153259]
[120.37789154 -209.60348511]
[127.44663239 -222.84826660]
[135.81907654 -235.30993652]
[145.40930176 -246.86062622]
[156.11889648 -257.38183594]
[167.83796692 -266.76553345]
[180.44627380 -274.91549683]
[193.81440735 -281.74807739]
[207.80520630 -287.19311523]
[222.27508545 -291.19479370]
[237.07557678 -293.71203613]
[252.05479431 -294.71899414]
[267.05905151 -294.20532227]
[281.93432617 -292.17633057]
[296.52801514 -288.65280151]
[310.69036865 -283.67092896]
[324.27603149 -277.28179932]
[337.14559937 -269.55102539]
[349.16702271 -260.55789185]
[360.21691895 -250.39468384]
[370.18191528 -239.16571045]
[378.95974731 -226.98619080]
[386.46035767 -213.98112488]
[392.60675049 -200.28393555]
[397.33587646 -186.03520203]
[400.59918213 -171.38113403]
[402.36322021 -156.47210693]
[402.60986328 -141.46110535]
[401.33657837 -126.50216675]
[398.55642700 -111.74880219]
[394.29794312 -97.35240173]
[388.60482788 -83.46069336]
[381.53549194 -70.21623230]
[373.16250610 -57.75492859]
[363.57177734 -46.20465469]
[352.86172485 -35.68393707]
[341.14224243 -26.30072975]
[328.53356934 -18.15132523]
[315.16513062 -11.31934834]
[301.17410278 -5.87490654]
[286.70404053 -1.87386811]
[271.90344238 0.64270920]
[256.92416382 1.64900136]
[241.91995239 1.13468206]
[227.04475403 -0.89497089]
[212.45121765 -4.41912985]
[198.28909302 -9.40163136]
[184.70372009 -15.79134655]
[176.97962952 -2.93294406]
[169.25555420 9.92545795]
[161.53146362 22.78386116]
[168.74752808 34.09457779]
[169.75761414 47.91899109]
[163.89965820 60.97069550]
[152.19453430 69.94724274]
[137.19201660 72.36279297]
[122.42002106 67.22291565]
[116.07289124 80.81386566]
[109.72576141 94.40481567]
[121.81174469 85.52060699]
[134.38142395 77.33507538]
[149.27331543 75.53735352]
[163.42980957 80.49654388]
[173.94433594 91.19442749]
[178.65805054 105.43454742]
[176.60314941 120.29312134]
[168.20153809 132.71942139]
[155.17822266 140.16209412]
[140.20921326 141.09336853]
[133.01782227 127.92962646]
[133.01782227 142.92962646]
[133.01782227 157.92962646]
[133.01782227 172.92962646]
[133.01782227 187.92962646]
[133.01782227 202.92962646]
[133.01782227 217.92962646]
[133.01782227 232.92962646]
[133.01782227 247.92962646]
[133.01782227 262.92962646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 41]
[14 39]
[15 38]
[16 37]
[17 35]
[18 34]
[19 33]
[42 130]
[43 129]
[44 128]
[45 52]
[46 51]
[55 122]
[56 121]
[57 120]
[58 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
