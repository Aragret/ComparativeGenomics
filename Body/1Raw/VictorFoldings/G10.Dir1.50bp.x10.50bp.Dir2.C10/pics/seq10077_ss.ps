%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACCCUAGUAGGCUCCCUUCCCCUACUCAUCGCACUAAUUUACACUCACAACACCCUAGGxxxxxxxxxxUCUAAUUUAAACUAUUCUCUGUUCUUUCAUGGGGAAGCAGAUUUGGGUACCACCCAAGUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 308.57287598]
[92.50000000 293.57287598]
[92.50000000 278.57287598]
[92.50000000 263.57287598]
[92.50000000 248.57289124]
[92.50000000 233.57289124]
[92.50000000 218.57289124]
[92.50000000 203.57289124]
[92.50000000 188.57289124]
[92.50000000 173.57289124]
[78.22488403 170.67576599]
[64.79451752 165.03686523]
[52.72990036 156.87492371]
[42.49907303 146.50659180]
[34.49893188 134.33407593]
[29.03982925 120.82962799]
[26.33354568 106.51710510]
[26.48506927 91.95176697]
[29.48851967 77.69864655]
[35.22738647 64.31067657]
[43.47903061 52.30724335]
[53.92333984 42.15399170]
[66.15514374 34.24481201]
[79.69992065 28.88652802]
[94.03221130 26.28701019]
[94.34426880 11.29025745]
[94.65632629 -3.70649672]
[93.72069550 -18.67728806]
[91.54386139 -33.51849365]
[89.36702728 -48.35969925]
[87.19018555 -63.20090485]
[85.01335144 -78.04210663]
[82.83651733 -92.88331604]
[67.86131287 -91.89165497]
[52.85466003 -92.09292603]
[37.91143799 -93.48584747]
[23.12612534 -96.06161499]
[8.59219646 -99.80393982]
[-5.59845686 -104.68917084]
[-19.35611534 -110.68640900]
[-32.59379959 -117.75775146]
[-45.22780991 -125.85848236]
[-57.17827606 -134.93737793]
[-68.36963654 -144.93705750]
[-78.73114014 -155.79428101]
[-88.19728088 -167.44041443]
[-96.70819092 -179.80181885]
[-104.21008301 -192.80035400]
[-110.65551758 -206.35382080]
[-116.00373840 -220.37654114]
[-120.22093964 -234.77984619]
[-123.28046417 -249.47267151]
[-125.16294861 -264.36215210]
[-125.85651398 -279.35412598]
[-125.35675812 -294.35379028]
[-123.66684723 -309.26635742]
[-120.79747009 -323.99749756]
[-116.76676178 -338.45410156]
[-111.60020447 -352.54476929]
[-105.33046722 -366.18038940]
[-97.99719238 -379.27478027]
[-89.64673615 -391.74514771]
[-80.33190155 -403.51266479]
[-70.11157990 -414.50286865]
[-59.05038071 -424.64636230]
[-47.21824646 -433.87893677]
[-34.68997574 -442.14227295]
[-21.54478645 -449.38409424]
[-7.86578131 -455.55862427]
[6.26055241 -460.62683105]
[20.74490356 -464.55670166]
[35.49569321 -467.32330322]
[50.41966629 -468.90924072]
[65.42246246 -469.30441284]
[80.40923309 -468.50637817]
[95.28521729 -466.52014160]
[109.95637512 -463.35830688]
[124.32993317 -459.04080200]
[138.31503296 -453.59497070]
[151.82324219 -447.05520630]
[164.76916504 -439.46292114]
[177.07095337 -430.86602783]
[188.65081787 -421.31893921]
[199.43556213 -410.88201904]
[209.35697937 -399.62121582]
[218.35235596 -387.60775757]
[226.36483765 -374.91760254]
[233.34373474 -361.63095093]
[239.24493408 -347.83181763]
[244.03112793 -333.60745239]
[247.67205811 -319.04779053]
[250.14469910 -304.24490356]
[251.43342590 -289.29232788]
[251.53009033 -274.28463745]
[250.43406677 -259.31671143]
[248.15231323 -244.48318481]
[244.69923401 -229.87782288]
[240.09664917 -215.59300232]
[234.37368774 -201.71899414]
[227.56651306 -188.34355164]
[219.71817017 -175.55122375]
[210.87828064 -163.42289734]
[201.10273743 -152.03523254]
[190.45333862 -141.46025085]
[178.99740601 -131.76480103]
[166.80737305 -123.01018524]
[153.96032715 -115.25174713]
[140.53747559 -108.53854370]
[126.62368774 -102.91300964]
[112.30693054 -98.41072845]
[97.67771912 -95.06015015]
[99.85455322 -80.21894836]
[102.03139496 -65.37773895]
[104.20822906 -50.53653717]
[106.38507080 -35.69533157]
[108.56190491 -20.85412598]
[117.13918304 -33.15982437]
[131.25807190 -38.22510529]
[145.70191956 -34.17844772]
[155.13400269 -22.51501274]
[156.06936646 -7.54420471]
[148.16239929 5.20255995]
[134.33459473 11.01560497]
[119.69501495 7.74712610]
[109.65308380 -3.39444041]
[109.34102631 11.60231304]
[109.02896881 26.59906769]
[124.01992798 30.05529213]
[137.97145081 36.53829575]
[150.27980042 45.76753616]
[160.41235352 57.34362411]
[167.93063354 70.76562500]
[172.50927734 85.45270538]
[173.95016479 100.76930237]
[172.19094849 116.05261230]
[167.30773926 130.64126587]
[159.51187134 143.90394592]
[149.14068604 155.26673889]
[136.64299011 164.23791504]
[122.55961609 170.42927551]
[107.50000000 173.57289124]
[107.50000000 188.57289124]
[107.50000000 203.57289124]
[107.50000000 218.57289124]
[107.50000000 233.57289124]
[107.50000000 248.57289124]
[107.50000000 263.57287598]
[107.50000000 278.57287598]
[107.50000000 293.57287598]
[107.50000000 308.57287598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[25 127]
[26 126]
[27 125]
[28 116]
[29 115]
[30 114]
[31 113]
[32 112]
[33 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
