%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCAUGACCCCUAACAGGGGCCCUCUCAGCCCUCCUAAUGACCUCCGGCCUAGCCAUGUGAUUxxxxxxxxxxCUAUUACCUUCUUAUUAUUUGAUCUAGAAAUUGCCCUCCUUUUACCCCUACCAUGAGCCCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 308.57220459]
[92.50000000 293.57220459]
[92.50000000 278.57220459]
[92.50000000 263.57220459]
[92.50000000 248.57220459]
[92.50000000 233.57220459]
[92.50000000 218.57220459]
[92.50000000 203.57220459]
[92.50000000 188.57220459]
[92.50000000 173.57220459]
[78.22756195 170.67587280]
[64.79944611 165.03875732]
[52.73640823 156.87945557]
[42.50624084 146.51437378]
[34.50566864 134.34547424]
[29.04495049 120.84465790]
[26.33585548 106.53549957]
[26.48344040 91.97289276]
[29.48198318 77.72158051]
[35.21519852 64.33421326]
[43.46075439 52.32996368]
[53.89888763 42.17434311]
[66.12481689 34.26119232]
[79.66441345 28.89737701]
[93.99262238 26.29090691]
[94.29663086 11.29398823]
[94.60063171 -3.70293069]
[94.90464020 -18.69985008]
[95.20864105 -33.69676971]
[80.25611877 -34.95159149]
[65.41328430 -37.15224075]
[50.73991013 -40.28985214]
[36.29507828 -44.35179138]
[22.13695526 -49.32170486]
[8.32254791 -55.17957687]
[-5.09251499 -61.90182495]
[-18.05421638 -69.46137238]
[-30.51036453 -77.82778931]
[-42.41080093 -86.96738434]
[-53.70760727 -96.84334564]
[-64.35529327 -107.41592407]
[-74.31098938 -118.64252472]
[-83.53459930 -130.47796631]
[-91.98899078 -142.87457275]
[-99.64011383 -155.78242493]
[-106.45716095 -169.14956665]
[-112.41268158 -182.92214966]
[-117.48270416 -197.04473877]
[-121.64680481 -211.46044922]
[-124.88821411 -226.11125183]
[-127.19388580 -240.93812561]
[-128.55453491 -255.88139343]
[-128.96467590 -270.88085938]
[-128.42266846 -285.87615967]
[-126.93068695 -300.80688477]
[-124.49473572 -315.61291504]
[-121.12463379 -330.23464966]
[-116.83394623 -344.61318970]
[-111.63995361 -358.69064331]
[-105.56356049 -372.41033936]
[-98.62924957 -385.71704102]
[-90.86492920 -398.55712891]
[-82.30187225 -410.87890625]
[-72.97455597 -422.63278198]
[-62.92053604 -433.77142334]
[-52.18030167 -444.24996948]
[-40.79709625 -454.02624512]
[-28.81676102 -463.06082153]
[-16.28753471 -471.31741333]
[-3.25986671 -478.76269531]
[10.21378326 -485.36672974]
[24.07916069 -491.10293579]
[38.28043747 -495.94815063]
[52.76042557 -499.88293457]
[67.46081543 -502.89141846]
[82.32242584 -504.96145630]
[97.28540802 -506.08477783]
[112.28950500 -506.25680542]
[127.27429962 -505.47686768]
[142.17945862 -503.74810791]
[156.94497681 -501.07745361]
[171.51136780 -497.47570801]
[185.82000732 -492.95736694]
[199.81326294 -487.54058838]
[213.43478394 -481.24722290]
[226.62973022 -474.10256958]
[239.34497070 -466.13546753]
[251.52931213 -457.37789917]
[263.13366699 -447.86520386]
[274.11132812 -437.63568115]
[284.41809082 -426.73049927]
[294.01245117 -415.19354248]
[302.85577393 -403.07135010]
[310.91244507 -390.41265869]
[318.15002441 -377.26846313]
[324.53939819 -363.69168091]
[330.05480957 -349.73699951]
[334.67404175 -335.46063232]
[338.37847900 -320.92001343]
[341.15325928 -306.17370605]
[342.98718262 -291.28112793]
[343.87286377 -276.30221558]
[343.80673218 -261.29727173]
[342.78906250 -246.32673645]
[340.82397461 -231.45088196]
[337.91931152 -216.72962952]
[334.08682251 -202.22222900]
[329.34194946 -187.98710632]
[323.70376587 -174.08158875]
[317.19500732 -160.56166077]
[309.84182739 -147.48176575]
[301.67388916 -134.89457703]
[292.72409058 -122.85077667]
[283.02841187 -111.39885712]
[272.62591553 -100.58493805]
[261.55853271 -90.45255280]
[249.87077332 -81.04251099]
[237.60972595 -72.39270020]
[224.82475281 -64.53794861]
[211.56735229 -57.50988770]
[197.89088440 -51.33681488]
[183.85043335 -46.04359055]
[169.50253296 -41.65152740]
[154.90495300 -38.17831039]
[140.11647034 -35.63792419]
[125.19665527 -34.04059601]
[110.20555878 -33.39276505]
[109.90155792 -18.39584541]
[109.59754944 -3.39892650]
[109.29354858 11.59799290]
[108.98954010 26.59491158]
[123.98489380 30.04398537]
[137.94194031 36.52143478]
[150.25650024 45.74685287]
[160.39546204 57.32087708]
[167.91992188 70.74246216]
[172.50415039 85.43060303]
[173.94969177 100.74944305]
[172.19398499 116.03584290]
[167.31300354 130.62805176]
[159.51808167 143.89439392]
[149.14662170 155.26054382]
[136.64762878 164.23449707]
[122.56217194 170.42774963]
[107.50000000 173.57220459]
[107.50000000 188.57220459]
[107.50000000 203.57220459]
[107.50000000 218.57220459]
[107.50000000 233.57220459]
[107.50000000 248.57220459]
[107.50000000 263.57220459]
[107.50000000 278.57220459]
[107.50000000 293.57220459]
[107.50000000 308.57220459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 154]
[2 153]
[3 152]
[4 151]
[5 150]
[6 149]
[7 148]
[8 147]
[9 146]
[10 145]
[25 131]
[26 130]
[27 129]
[28 128]
[29 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
