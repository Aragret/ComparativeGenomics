%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACACUAUACCUAUUAUUCGGCGCAUGAGCUGGAGUCCUAGGCACAGCUCUAAGCCUCCUxxxxxxxxxxCUCAUCCGCUUCCACCCCCUAGCAGAAAAUAGCCCACUAAUCCAAACUCUAACACUAUGCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[217.35034180 521.78076172]
[216.72636414 506.79373169]
[216.10238647 491.80670166]
[215.47840881 476.81970215]
[214.85443115 461.83267212]
[214.23045349 446.84567261]
[213.60647583 431.85864258]
[212.98249817 416.87164307]
[209.73167419 402.22814941]
[203.95539856 388.38491821]
[198.17912292 374.54168701]
[183.97238159 376.04702759]
[169.90316772 373.47583008]
[157.11865234 367.02865601]
[146.66381836 357.22232056]
[139.39608765 344.84878540]
[135.91497803 330.91091919]
[136.51264954 316.54135132]
[141.14945984 302.91052246]
[149.45639038 291.13110352]
[160.76445007 282.16741943]
[155.27742004 268.20703125]
[149.79037476 254.24664307]
[144.30334473 240.28625488]
[138.81631470 226.32586670]
[133.40742493 221.21807861]
[133.36367798 212.01753235]
[128.16825867 197.94601440]
[122.97284698 183.87449646]
[111.30624390 174.61492920]
[113.78477478 158.98905945]
[108.58935547 144.91754150]
[90.04158020 144.63398743]
[73.13230133 137.00662231]
[60.64367676 123.29039764]
[54.63050461 105.74211121]
[56.08216476 87.24905396]
[42.55797577 80.76089478]
[29.03378487 74.27272797]
[15.50959492 67.78456116]
[1.98540449 61.29639816]
[-11.53878498 54.80823135]
[-23.98636627 58.34540176]
[-35.13779449 52.61262894]
[-39.23270416 41.18726349]
[-52.61899185 34.41914749]
[-68.24854279 38.03807068]
[-80.73281097 27.96222305]
[-80.49492645 11.92093372]
[-67.71737671 2.21970654]
[-52.20200348 6.30049372]
[-45.85087585 21.03286362]
[-32.46459198 27.80097771]
[-15.05125618 25.85785675]
[-5.05062056 41.28404236]
[8.47356987 47.77220535]
[21.99775887 54.26037216]
[35.52194977 60.74853897]
[49.04613876 67.23670197]
[62.57032776 73.72486877]
[76.45111084 60.79779816]
[94.38309479 54.61483383]
[95.00707245 39.62781906]
[95.63105011 24.64080238]
[96.25502777 9.65378666]
[81.85254669 5.15590239]
[69.10547638 -2.91717720]
[58.88293076 -14.01501560]
[51.88190460 -27.38094330]
[48.57973480 -42.10364914]
[49.20157242 -57.17931747]
[53.70501709 -71.58006287]
[61.78302002 -84.32401276]
[72.88480377 -94.54226685]
[86.25343323 -101.53813934]
[100.97741699 -104.83461761]
[116.05284119 -104.20696259]
[130.45184326 -99.69795227]
[143.19267273 -91.61503601]
[153.40664673 -80.50930786]
[160.39735413 -67.13797760]
[163.68814087 -52.41272354]
[163.05467224 -37.33753967]
[158.54010010 -22.94027901]
[150.45227051 -10.20256901]
[139.34259033 0.00711222]
[125.96855927 6.99265194]
[111.24204254 10.27776432]
[110.61806488 25.26478004]
[109.99408722 40.25179672]
[109.37010956 55.23881149]
[118.90037537 58.35700989]
[127.52194977 63.47733307]
[134.82031250 70.35360718]
[140.44456482 78.65522003]
[144.12432861 87.98306274]
[145.68266296 97.88865662]
[145.04464722 107.89575958]
[142.24095154 117.52325439]
[137.40640259 126.30825043]
[130.77340698 133.82839966]
[122.66087341 139.72212219]
[127.85629272 153.79365540]
[139.89450073 164.05970764]
[137.04437256 178.67907715]
[142.23977661 192.75059509]
[147.43519592 206.82211304]
[152.77670288 220.83883667]
[158.26373291 234.79922485]
[163.75077820 248.75961304]
[169.23780823 262.72000122]
[174.72483826 276.68038940]
[190.47981262 275.65359497]
[205.76470947 279.53094482]
[219.09237671 287.92282104]
[229.16992188 300.00106812]
[235.02407837 314.58047485]
[236.09526062 330.23532104]
[232.29095459 345.43862915]
[223.99363708 358.71118164]
[212.02235413 368.76544189]
[217.79861450 382.60864258]
[223.57489014 396.45187378]
[226.02471924 381.65325928]
[233.06623840 368.40875244]
[243.96403503 358.10159302]
[257.57995605 351.80822754]
[272.49197388 350.18594360]
[287.14266968 353.40417480]
[300.00195312 361.12680054]
[309.72677612 372.54730225]
[315.30151367 386.47290039]
[316.14392090 401.44921875]
[312.16604614 415.91217041]
[303.78332520 428.35119629]
[291.87121582 437.46722412]
[277.67382812 442.30816650]
[262.67395020 442.36840820]
[248.43815613 437.64169312]
[236.45320129 428.62167358]
[227.96951294 416.24765015]
[228.59349060 431.23468018]
[229.21746826 446.22167969]
[229.84144592 461.20870972]
[230.46542358 476.19570923]
[231.08940125 491.18273926]
[231.71337891 506.16976929]
[232.33735657 521.15679932]
[239.03735352 536.73065186]
[225.92681885 547.48010254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 123]
[10 122]
[11 121]
[21 112]
[22 111]
[23 110]
[24 109]
[25 108]
[27 107]
[28 106]
[29 105]
[31 103]
[32 102]
[37 60]
[38 59]
[39 58]
[40 57]
[41 56]
[42 55]
[45 53]
[46 52]
[62 91]
[63 90]
[64 89]
[65 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
