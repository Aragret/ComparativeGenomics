%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUUAAACUCCAGCACCACGACCCUACUACUAUCUCGCACCUGAAACAAGCUAACAUGACUAxxxxxxxxxxUGUAAACCGGAGAUGAAAACCUUUUUCCAAGGACAAAUCAGAGAAAAAGUCUUUAACUCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[98.47473145 270.96414185]
[98.47473145 255.96412659]
[98.47473145 240.96412659]
[98.47473145 225.96412659]
[98.47473145 210.96412659]
[98.47473145 195.96412659]
[98.47473145 180.96412659]
[98.47473145 165.96412659]
[98.47473145 150.96412659]
[98.47473145 135.96412659]
[74.35399628 116.52767944]
[76.79328156 90.63724518]
[65.20423126 81.11390686]
[49.62984467 78.33019257]
[44.70904160 64.27191925]
[29.13465691 61.48820496]
[24.21385384 47.42993164]
[12.62480545 37.90659714]
[1.03575695 28.38325882]
[-10.55329132 18.85992050]
[-21.07024765 29.56932068]
[-32.49255753 39.30731201]
[-44.73081970 47.99768448]
[-57.68925476 55.57241821]
[-71.26644135 61.97223282]
[-85.35611725 67.14704132]
[-99.84801483 71.05633545]
[-114.62870026 73.66952515]
[-129.58250427 74.96616364]
[-144.59239197 74.93609619]
[-159.54089355 73.57955170]
[-174.31098938 70.90715790]
[-188.78710938 66.93982697]
[-202.85594177 61.70860672]
[-216.40737915 55.25444412]
[-229.33535767 47.62784958]
[-241.53869629 38.88851166]
[-252.92189026 29.10482979]
[-263.39584351 18.35337639]
[-272.87860107 6.71829844]
[-281.29592896 -5.70934296]
[-288.58193970 -18.83228302]
[-294.67965698 -32.54781342]
[-299.54129028 -46.74859238]
[-303.12881470 -61.32347870]
[-305.41415405 -76.15839386]
[-306.37945557 -91.13724518]
[-306.01712036 -106.14278412]
[-304.32998657 -121.05758667]
[-301.33129883 -135.76490784]
[-297.04446411 -150.14965820]
[-291.50308228 -164.09922791]
[-284.75051880 -177.50447083]
[-276.83959961 -190.26045227]
[-267.83227539 -202.26734924]
[-257.79901123 -213.43116760]
[-246.81832886 -223.66456604]
[-234.97618103 -232.88742065]
[-222.36524963 -241.02757263]
[-209.08422852 -248.02131653]
[-195.23707581 -253.81388855]
[-180.93215942 -258.35998535]
[-166.28143311 -261.62399292]
[-151.39955139 -263.58038330]
[-136.40301514 -264.21383667]
[-121.40916443 -263.51940918]
[-106.53536987 -261.50253296]
[-91.89802551 -258.17898560]
[-77.61170959 -253.57479858]
[-63.78821564 -247.72598267]
[-50.53574371 -240.67831421]
[-37.95800781 -232.48695374]
[-26.15345573 -223.21603394]
[-15.21446800 -212.93807983]
[-5.22666216 -201.73356628]
[3.73179221 -189.69015503]
[11.59078217 -176.90211487]
[18.28879929 -163.46952820]
[23.77342224 -149.49754333]
[28.00172424 -135.09548950]
[30.94061470 -120.37609863]
[32.56708908 -105.45455933]
[32.86841965 -90.44766998]
[31.84224892 -75.47286987]
[29.49660683 -60.64736557]
[25.84985161 -46.08718491]
[20.93052673 -31.90629005]
[14.77713013 -18.21566010]
[7.43782282 -5.12244797]
[-1.02995384 7.27087212]
[10.55909443 16.79421043]
[22.14814377 26.31754684]
[33.73719025 35.84088516]
[48.48265076 37.94342804]
[54.23237991 52.68287277]
[68.97783661 54.78541565]
[74.72756958 69.52485657]
[86.31661987 79.04819489]
[98.91814423 72.25378418]
[114.64351654 73.23342896]
[128.68077087 83.17139435]
[135.99501038 100.32208252]
[150.97525024 101.09174347]
[165.95550537 101.86140442]
[180.93574524 102.63105774]
[195.91598511 103.40071869]
[210.89622498 104.17037964]
[225.87646484 104.94004059]
[232.05148315 91.07521057]
[242.82083130 80.38008881]
[256.72805786 74.30110931]
[271.89227295 73.66040039]
[286.26269531 78.54461670]
[297.89581299 88.29319763]
[305.21835327 101.58773804]
[307.24002075 116.63025665]
[303.68734741 131.38638306]
[295.04086304 143.86045837]
[282.46990967 152.36547852]
[267.67459106 155.75120544]
[252.65586853 153.55973816]
[239.44490051 146.08747864]
[229.82835388 134.34495544]
[225.10679626 119.92028046]
[210.12655640 119.15061951]
[195.14631653 118.38095856]
[180.16607666 117.61130524]
[165.18583679 116.84164429]
[150.20559692 116.07198334]
[135.22535706 115.30232239]
[129.78770447 120.46777344]
[142.56510925 128.32511902]
[155.34249878 136.18247986]
[169.53370667 141.04145813]
[177.46228027 153.77479553]
[175.56117249 168.65383911]
[164.68571472 178.98457336]
[149.72869873 180.11927795]
[137.41918945 171.54745483]
[133.29515076 157.12615967]
[126.10376740 143.96241760]
[118.91238403 130.79867554]
[113.47473145 135.96412659]
[113.47473145 150.96412659]
[113.47473145 165.96412659]
[113.47473145 180.96412659]
[113.47473145 195.96412659]
[113.47473145 210.96412659]
[113.47473145 225.96412659]
[113.47473145 240.96412659]
[113.47473145 255.96412659]
[113.47473145 270.96414185]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[12 98]
[13 97]
[15 95]
[17 93]
[18 92]
[19 91]
[20 90]
[102 130]
[103 129]
[104 128]
[105 127]
[106 126]
[107 125]
[108 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
