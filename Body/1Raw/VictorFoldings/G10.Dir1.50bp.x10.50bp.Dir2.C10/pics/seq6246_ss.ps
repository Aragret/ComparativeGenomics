%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUCACCCCCACUGAUGUUCGCCGACCGUUGACUAUUCUCUACAAACCACAAAGACAUUGxxxxxxxxxxCGAGAAAACACCCUCAUGUUCAUACACCUAUCCCCCAUUCUCCUCCUAUCCCUCAACCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[145.16098022 181.00350952]
[135.41333008 169.60249329]
[125.66567993 158.20146179]
[115.91802979 146.80044556]
[106.17037964 135.39942932]
[91.22229004 136.64630127]
[83.49820709 149.50469971]
[75.77412415 162.36311340]
[68.05003357 175.22151184]
[60.32595062 188.07991028]
[62.79817200 203.93133545]
[51.84074402 215.64945984]
[35.85927200 214.24513245]
[27.11337280 200.79563904]
[32.31215286 185.61828613]
[47.46754837 180.35581970]
[55.19163513 167.49742126]
[62.91571808 154.63902283]
[70.63980103 141.78062439]
[78.36389160 128.92221069]
[72.65902710 109.94282532]
[78.51977539 94.94921875]
[89.63774872 89.10020447]
[80.37280273 77.30356598]
[71.10784912 65.50692749]
[61.47932434 54.00512314]
[51.49659729 42.80935669]
[41.51387024 31.61359024]
[31.53114510 20.41782379]
[17.40634155 15.36906815]
[2.58858323 17.70017242]
[-7.97916079 29.77089500]
[-23.99805450 28.89076614]
[-33.17977142 15.73494530]
[-28.48088646 0.39545262]
[-13.50598049 -5.36056614]
[0.25747928 2.88241363]
[15.07523727 0.55130965]
[18.73479080 -5.99526739]
[4.61339331 -11.05354309]
[-9.53844357 -16.02602005]
[-10.60517311 -30.98804092]
[2.69807315 -37.91794968]
[14.34794807 -28.46769524]
[26.05389595 -19.08842278]
[29.71344948 -25.63499832]
[23.93717575 -39.47821808]
[18.16090393 -53.32143402]
[12.38463116 -67.16464996]
[6.60835886 -81.00787354]
[-9.52034283 -79.06989288]
[-25.53303146 -81.72192383]
[-40.15068054 -88.74423981]
[-52.20790482 -99.56835938]
[-60.74585342 -113.32304382]
[-65.08849335 -128.90443420]
[-64.89609528 -145.06462097]
[-60.19182205 -160.51162720]
[-51.35924911 -174.01261902]
[-39.11109543 -184.49240112]
[-45.45822525 -198.08335876]
[-51.80535507 -211.67430115]
[-66.33238220 -218.48202515]
[-69.92705536 -234.11717224]
[-59.83185577 -246.58580017]
[-43.79095459 -246.32302856]
[-34.10955811 -233.53045654]
[-38.21440506 -218.02143860]
[-31.86727524 -204.43048096]
[-25.52014542 -190.83953857]
[-11.92091084 -193.40090942]
[1.90473211 -192.60925293]
[15.14170742 -188.50645447]
[27.00848961 -181.32969666]
[36.80323792 -171.49786377]
[43.94531631 -159.58699036]
[48.00970459 -146.29658508]
[48.75228882 -132.40847778]
[46.12451935 -118.74091339]
[40.27655792 -106.10028076]
[31.54869843 -95.23355103]
[20.45157623 -86.78414154]
[26.22784996 -72.94092560]
[32.00411987 -59.09770584]
[37.78039551 -45.25448990]
[43.55666733 -31.41127205]
[42.72690964 10.43509769]
[52.70963669 21.63086319]
[62.69236374 32.82662964]
[72.67508698 44.02239609]
[76.22019958 44.56983185]
[79.66487122 46.90134048]
[82.15509796 50.94499588]
[82.90448761 56.24197388]
[92.16944122 68.03861237]
[101.43438721 79.83525848]
[116.11091614 82.93357849]
[129.35350037 75.88844299]
[142.59608459 68.84330750]
[150.81942749 54.65497971]
[167.21586609 54.95302200]
[174.91815186 69.43082428]
[166.00282288 83.19487762]
[149.64122009 82.08589172]
[136.39863586 89.13102722]
[123.15605164 96.17616272]
[121.75988770 103.54506683]
[136.63925171 101.64651489]
[143.04283142 115.21096039]
[132.12107849 125.49275208]
[118.96755981 118.28287506]
[117.57140350 125.65177155]
[127.31905365 137.05279541]
[137.06671143 148.45381165]
[146.81436157 159.85484314]
[156.56201172 171.25585938]
[169.47656250 163.55375671]
[183.50708008 158.14517212]
[198.24986267 155.18572998]
[213.28073120 154.76055908]
[228.16723633 156.88189697]
[242.48104858 161.48872375]
[255.81033325 168.44848633]
[267.77157593 177.56092834]
[278.02062988 188.56385803]
[286.26263428 201.14073181]
[292.26040649 214.92965698]
[295.84140015 229.53392029]
[296.90258789 244.53332520]
[295.41345215 259.49627686]
[291.41680908 273.99230957]
[285.02764893 287.60430908]
[276.42980957 299.94067383]
[265.87066650 310.64639282]
[253.65405273 319.41348267]
[240.13142395 325.98971558]
[225.69187927 330.18585205]
[210.75086975 331.88116455]
[195.73826599 331.02685547]
[181.08601379 327.64755249]
[167.21571350 321.84045410]
[154.52639771 313.77264404]
[143.38319397 303.67626953]
[134.10670471 291.84179688]
[126.96384430 278.60974121]
[122.16010284 264.36080933]
[119.83371735 249.50495911]
[120.05161285 234.46965027]
[122.80751801 219.68746948]
[128.02214050 205.58370972]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 116]
[2 115]
[3 114]
[4 113]
[5 112]
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[23 96]
[24 95]
[25 94]
[26 90]
[27 89]
[28 88]
[29 87]
[30 38]
[31 37]
[46 86]
[47 85]
[48 84]
[49 83]
[50 82]
[60 70]
[61 69]
[62 68]
[97 106]
[98 105]
[99 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
