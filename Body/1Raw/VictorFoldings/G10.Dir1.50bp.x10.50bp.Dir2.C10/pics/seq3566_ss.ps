%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACUAUGAACCCCCCUCCCCAUACCCAACCCCCUGGUCAACCUCAACCUAGGCCUCCUAUUxxxxxxxxxxGCAUCCAUAAUCCUUCUAAUAGCUAUCCUCUUCAACAAUAUACUCUCCGGACAAUGAACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-22.95944786 283.56198120]
[-31.72565460 295.73382568]
[-40.49186325 307.90563965]
[-49.25806808 320.07748413]
[-57.89718628 332.33984375]
[-66.40827942 344.69143677]
[-74.91936493 357.04299927]
[-83.43045807 369.39456177]
[-91.94154358 381.74615479]
[-100.45263672 394.09771729]
[-95.16388702 408.68569946]
[-99.49212646 423.58688354]
[-111.77306366 433.07153320]
[-127.28442383 433.49255371]
[-140.06178284 424.68804932]
[-145.19197083 410.04357910]
[-140.70233154 395.19021606]
[-128.31922913 385.83935547]
[-112.80420685 385.58663940]
[-104.29312134 373.23504639]
[-95.78202820 360.88348389]
[-87.27093506 348.53192139]
[-78.75984955 336.18032837]
[-70.24875641 323.82876587]
[-69.03543091 316.48892212]
[-61.42990494 311.31127930]
[-52.66370010 299.13943481]
[-43.89749146 286.96762085]
[-35.13128662 274.79577637]
[-54.95446014 257.49014282]
[-72.57955933 237.95043945]
[-87.75655365 216.45387268]
[-100.27015686 193.30535889]
[-109.94285583 168.83328247]
[-116.63745117 143.38479614]
[-120.25897217 117.32086182]
[-120.75603485 91.01123810]
[-118.12160492 64.82911682]
[-112.39304352 39.14590836]
[-103.65161896 14.32593632]
[-92.02131653 -9.27871990]
[-104.79867554 -17.13614655]
[-117.57603455 -24.99357224]
[-130.43443298 -32.71765518]
[-143.37249756 -40.30756378]
[-156.31054688 -47.89747238]
[-170.47508240 -41.56140518]
[-185.65168762 -44.79405212]
[-196.00466919 -56.35239792]
[-197.55308533 -71.79202271]
[-189.70153809 -85.17607880]
[-175.46911621 -91.35811615]
[-160.32846069 -87.96102142]
[-150.10147095 -76.29104614]
[-148.72064209 -60.83552933]
[-135.78257751 -53.24562073]
[-122.84452820 -45.65571213]
[-115.43585205 -44.97960663]
[-109.71860504 -37.77092743]
[-96.94125366 -29.91350365]
[-84.16389465 -22.05607796]
[-77.59213257 -31.43461990]
[-70.54325104 -40.46004868]
[-63.03618240 -49.10810852]
[-55.09109879 -57.35557556]
[-46.72933960 -65.18028259]
[-37.97337341 -72.56121826]
[-28.84672737 -79.47853851]
[-19.37391472 -85.91367340]
[-9.58039093 -91.84932709]
[0.50753450 -97.26954651]
[10.86275959 -102.15978241]
[21.45746231 -106.50688934]
[32.26317978 -110.29918671]
[43.25088120 -113.52649689]
[54.39104843 -116.18013000]
[65.65374756 -118.25297546]
[77.00872040 -119.73944855]
[88.42546844 -120.63557434]
[99.87330627 -120.93892670]
[111.32148743 -120.64870453]
[122.73925018 -119.76567841]
[134.09593201 -118.29222107]
[145.36099243 -116.23229980]
[156.50419617 -113.59143829]
[167.49559021 -110.37673187]
[178.30564880 -106.59683228]
[188.90533447 -102.26187897]
[199.26615906 -97.38352203]
[209.36029053 -91.97486877]
[219.16061401 -86.05045319]
[228.64080811 -79.62619019]
[237.77537537 -72.71933746]
[246.53981018 -65.34845734]
[254.91053772 -57.53334045]
[262.86508179 -49.29499054]
[270.38204956 -40.65554428]
[277.44128418 -31.63820648]
[284.02380371 -22.26720619]
[290.11190796 -12.56772041]
[295.68923950 -2.56580734]
[300.74084473 7.71166229]
[305.25314331 18.23707581]
[309.21398926 28.98215675]
[312.61276245 39.91803741]
[315.44030762 51.01533127]
[317.68905640 62.24423218]
[319.35296631 73.57456970]
[320.42755127 84.97589874]
[320.90991211 96.41759491]
[320.79879761 107.86891174]
[320.09445190 119.29909515]
[318.79882812 130.67742920]
[316.91534424 141.97332764]
[314.44909668 153.15647888]
[311.40670776 164.19680786]
[307.79635620 175.06466675]
[303.62771606 185.73086548]
[298.91201782 196.16671753]
[293.66189575 206.34422302]
[287.89151001 216.23600769]
[281.61630249 225.81552124]
[274.85317993 235.05700684]
[267.62026978 243.93565369]
[259.93704224 252.42758179]
[251.82411194 260.51000977]
[243.30329895 268.16119385]
[234.39747620 275.36059570]
[225.13058472 282.08889771]
[215.52751160 288.32797241]
[205.61405945 294.06106567]
[195.41685486 299.27279663]
[184.96330261 303.94915771]
[174.28149414 308.07760620]
[163.40011597 311.64700317]
[152.34840393 314.64779663]
[141.15605164 317.07189941]
[129.85311890 318.91281128]
[118.46999359 320.16558838]
[107.03723907 320.82687378]
[95.58558655 320.89486694]
[84.14579010 320.36938477]
[72.74858093 319.25189209]
[61.42459488 317.54531860]
[50.20424271 315.25430298]
[39.11767578 312.38494873]
[28.19467545 308.94500732]
[17.46459007 304.94372559]
[6.95624542 300.39181519]
[-3.30212498 295.30154419]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[3 27]
[4 26]
[5 24]
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[41 61]
[42 60]
[43 59]
[44 57]
[45 56]
[46 55]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
