%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAAAUUCUUCUUAGUAGCUAUUACCUUCUUAUUAUUUGAUCUAGAAAUUGCCCUCCUUUUACCxxxxxxxxxxUAUCUAUUACUCUCAUCGCUACCUCCCUGACAAGCGCCUAUAGCACUCGAAUAAUUCUUCUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 310.19619751]
[92.50000000 295.19619751]
[92.50000000 280.19619751]
[92.50000000 265.19619751]
[92.50000000 250.19618225]
[92.50000000 235.19618225]
[92.50000000 220.19618225]
[92.50000000 205.19618225]
[92.50000000 190.19618225]
[92.50000000 175.19618225]
[76.25566101 171.74205017]
[61.15809631 164.82301331]
[47.93647385 154.77322388]
[37.22935486 142.07804871]
[29.55386162 127.35065460]
[25.28069496 111.30229950]
[24.61623573 94.70807648]
[27.59257317 78.36944580]
[34.06595993 63.07549667]
[43.72375488 49.56488419]
[56.09951782 38.49013138]
[70.59553528 30.38611031]
[86.51168823 25.64422035]
[85.31236267 10.69224358]
[84.11303711 -4.25973320]
[80.28900146 -12.61824894]
[83.04235840 -19.52237320]
[82.14244080 -34.49535370]
[81.24252319 -49.46833420]
[80.34261322 -64.44131470]
[79.44269562 -79.41429901]
[64.43735504 -79.52710724]
[49.47386551 -80.65267181]
[34.62049866 -82.78585815]
[19.94503021 -85.91692352]
[5.51442242 -90.03159332]
[-8.60548306 -95.11107635]
[-22.35025978 -101.13221741]
[-35.65719223 -108.06752777]
[-48.46556091 -115.88536835]
[-60.71692657 -124.55006409]
[-72.35539246 -134.02207947]
[-83.32784271 -144.25820923]
[-93.58422089 -155.21171570]
[-103.07773590 -166.83265686]
[-111.76505280 -179.06799316]
[-119.60654449 -191.86189270]
[-126.56643677 -205.15599060]
[-132.61296082 -218.88961792]
[-137.71853638 -233.00010681]
[-141.85984802 -247.42309570]
[-145.01803589 -262.09274292]
[-147.17866516 -276.94213867]
[-148.33187866 -291.90353394]
[-148.47241211 -306.90863037]
[-147.59963989 -321.88900757]
[-145.71752930 -336.77627563]
[-142.83467102 -351.50250244]
[-138.96423340 -366.00051880]
[-134.12385559 -380.20416260]
[-128.33563232 -394.04864502]
[-121.62596893 -407.47076416]
[-114.02548981 -420.40930176]
[-105.56887054 -432.80520630]
[-96.29469299 -444.60192871]
[-86.24527740 -455.74563599]
[-75.46647644 -466.18548584]
[-64.00747681 -475.87384033]
[-51.92055130 -484.76647949]
[-39.26086044 -492.82287598]
[-26.08616829 -500.00619507]
[-12.45658302 -506.28372192]
[1.56570327 -511.62680054]
[15.91670990 -516.01104736]
[30.53095627 -519.41644287]
[45.34175873 -521.82745361]
[60.28154373 -523.23309326]
[75.28213501 -523.62695312]
[90.27510071 -523.00720215]
[105.19201660 -521.37670898]
[119.96482849 -518.74291992]
[134.52612305 -515.11779785]
[148.80947876 -510.51788330]
[162.74969482 -504.96423340]
[176.28318787 -498.48214722]
[189.34819031 -491.10119629]
[201.88510132 -482.85504150]
[213.83671570 -473.78137207]
[225.14849854 -463.92150879]
[235.76884460 -453.32049561]
[245.64927673 -442.02670288]
[254.74472046 -430.09164429]
[263.01370239 -417.56976318]
[270.41842651 -404.51824951]
[276.92517090 -390.99658203]
[282.50424194 -377.06649780]
[287.13012695 -362.79156494]
[290.78176880 -348.23687744]
[293.44250488 -333.46890259]
[295.10018921 -318.55496216]
[295.74722290 -303.56317139]
[295.38070679 -288.56188965]
[294.00228882 -273.61956787]
[291.61825562 -258.80438232]
[288.23950195 -244.18395996]
[283.88140869 -229.82499695]
[278.56387329 -215.79299927]
[272.31118774 -202.15199280]
[265.15188599 -188.96423340]
[257.11856079 -176.28988647]
[248.24795532 -164.18678284]
[238.58050537 -152.71014404]
[228.16030884 -141.91235352]
[217.03492737 -131.84265137]
[205.25512695 -122.54699707]
[192.87464905 -114.06780243]
[179.94998169 -106.44376373]
[166.54010010 -99.70966339]
[152.70619202 -93.89622498]
[138.51139832 -89.02997589]
[124.02044678 -85.13311768]
[109.29948425 -82.22344208]
[94.41567230 -80.31420898]
[95.31558990 -65.34123230]
[96.21550751 -50.36824799]
[97.11542511 -35.39526749]
[98.01533508 -20.42228889]
[99.06501007 -5.45906019]
[100.26434326 9.49291611]
[101.46366882 24.44489288]
[114.80455017 25.89506340]
[127.67858124 29.68206215]
[139.67979431 35.68647003]
[150.42974854 43.71894836]
[159.58944702 53.52619553]
[166.87004089 64.79895020]
[172.04196167 77.18173981]
[174.94209290 90.28408051]
[175.47900391 103.69280243]
[173.63574219 116.98507690]
[169.47045898 129.74174500]
[163.11448669 141.56053162]
[154.76826477 152.06874084]
[144.69496155 160.93502808]
[133.21224976 167.87976074]
[120.68222046 172.68399048]
[107.50000000 175.19618225]
[107.50000000 190.19618225]
[107.50000000 205.19618225]
[107.50000000 220.19618225]
[107.50000000 235.19618225]
[107.50000000 250.19618225]
[107.50000000 265.19619751]
[107.50000000 280.19619751]
[107.50000000 295.19619751]
[107.50000000 310.19619751]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[3 154]
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[9 148]
[10 147]
[23 130]
[24 129]
[25 128]
[27 127]
[28 126]
[29 125]
[30 124]
[31 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
