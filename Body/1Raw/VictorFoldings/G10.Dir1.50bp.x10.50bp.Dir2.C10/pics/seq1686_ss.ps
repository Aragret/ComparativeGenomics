%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACACACCGCCCGUCACCCUCCUCAAGUAUACUUCAAAGGACAUUUAACUAAAACCCCUACxxxxxxxxxxAUACCAAUGAUGGCGCGAUGUAACACGAGAAAGCACAUACCAAGGCCACCACACACCACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[100.70577240 280.04385376]
[100.70577240 265.04385376]
[100.70577240 250.04385376]
[100.70577240 235.04385376]
[100.70577240 220.04385376]
[100.70577240 205.04385376]
[100.70577240 190.04385376]
[100.70577240 175.04385376]
[100.70577240 160.04385376]
[100.70577240 145.04385376]
[72.55544281 131.89898682]
[61.24037170 105.23202515]
[70.00774384 79.83289337]
[59.56793594 69.06208801]
[49.12812042 58.29127502]
[33.96757507 53.76707458]
[30.66535187 39.24314117]
[20.22554016 28.47233391]
[9.78572750 17.70152473]
[-0.76556236 7.03989840]
[-11.42718887 -3.51139212]
[-22.08881569 -14.06268215]
[-32.75044250 -24.61397171]
[-43.41206741 -35.16526413]
[-54.07369232 -45.71655273]
[-65.62823486 -36.13222122]
[-78.06657410 -27.72660255]
[-91.26892853 -20.58064461]
[-105.10813904 -14.76317024]
[-119.45092773 -10.33020687]
[-134.15916443 -7.32444668]
[-149.09118652 -5.77483797]
[-164.10321045 -5.69630480]
[-179.05062866 -7.08960342]
[-193.78952026 -9.94131470]
[-208.17790222 -14.22397518]
[-222.07720947 -19.89633942]
[-235.35360718 -26.90377808]
[-247.87921143 -35.17880249]
[-259.53338623 -44.64171982]
[-270.20391846 -55.20139313]
[-279.78802490 -66.75612640]
[-288.19338989 -79.19463348]
[-295.33908081 -92.39713287]
[-301.15628052 -106.23645782]
[-305.58895874 -120.57933807]
[-308.59442139 -135.28762817]
[-310.14373779 -150.21969604]
[-310.22195435 -165.23170471]
[-308.82836914 -180.17910767]
[-305.97637939 -194.91792297]
[-301.69342041 -209.30622864]
[-296.02078247 -223.20542908]
[-289.01306152 -236.48168945]
[-280.73779297 -249.00712585]
[-271.27465820 -260.66113281]
[-260.71475220 -271.33142090]
[-249.15983582 -280.91531372]
[-236.72116089 -289.32043457]
[-223.51852417 -296.46585083]
[-209.67907715 -302.28277588]
[-195.33610535 -306.71514893]
[-180.62774658 -309.72033691]
[-165.69566345 -311.26934814]
[-150.68363953 -311.34729004]
[-135.73626709 -309.95336914]
[-120.99750519 -307.10107422]
[-106.60929108 -302.81784058]
[-92.71020508 -297.14492798]
[-79.43408966 -290.13696289]
[-66.90881348 -281.86141968]
[-55.25501251 -272.39804077]
[-44.58491135 -261.83795166]
[-35.00127411 -250.28283691]
[-26.59639931 -237.84397888]
[-19.45123291 -224.64120483]
[-13.63458920 -210.80165100]
[-9.20248604 -196.45858765]
[-6.19760847 -181.75016785]
[-4.64889574 -166.81805420]
[-4.57126284 -151.80603027]
[-5.96545839 -136.85868835]
[-8.81805420 -122.11997986]
[-13.10157776 -107.73185730]
[-18.77477646 -93.83287811]
[-25.78301048 -80.55690002]
[-34.05878830 -68.03179169]
[-43.52240372 -56.37817764]
[-32.86077881 -45.82688904]
[-22.19915009 -35.27560043]
[-11.53752422 -24.72430801]
[-0.87589836 -14.17301846]
[9.78572750 -3.62172794]
[16.79765511 -1.13606536]
[20.55653572 7.26171207]
[30.99634933 18.03252029]
[41.43616104 28.80332947]
[55.84998322 32.55713272]
[59.89892960 47.85146332]
[70.33874512 58.62227249]
[80.77855682 69.39308167]
[87.00131226 65.48207092]
[94.02227020 62.85127258]
[101.57505035 61.66345978]
[109.36022949 62.02541733]
[117.05720520 63.98127747]
[124.33739471 67.50840759]
[130.87820435 72.51607513]
[136.37722778 78.84705353]
[140.56590271 86.28217316]
[143.22230530 94.54772949]
[144.18214417 103.32546234]
[143.34768677 112.26479340]
[157.84329224 116.12195587]
[168.62783813 105.18627930]
[183.43962097 101.12344360]
[198.29434204 105.02635193]
[209.19616699 115.84512329]
[213.21255493 130.66957092]
[209.26310730 145.51199341]
[198.41021729 156.37985229]
[183.57324219 160.34974670]
[168.74328613 156.35379028]
[157.90950012 145.46688843]
[153.98612976 130.61755371]
[139.49052429 126.76039124]
[133.54434204 131.33125305]
[144.41619873 141.66580200]
[155.28807068 152.00033569]
[166.15992737 162.33486938]
[179.94094849 168.25799561]
[186.75346375 181.62173462]
[183.45089722 196.25366211]
[171.55865479 205.39555359]
[156.56950378 204.82498169]
[145.40664673 194.80546570]
[143.22610474 179.96420288]
[136.03472900 166.80047607]
[128.84333801 153.63673401]
[121.65196228 140.47299194]
[115.70577240 145.04385376]
[115.70577240 160.04385376]
[115.70577240 175.04385376]
[115.70577240 190.04385376]
[115.70577240 205.04385376]
[115.70577240 220.04385376]
[115.70577240 235.04385376]
[115.70577240 250.04385376]
[115.70577240 265.04385376]
[115.70577240 280.04385376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[13 101]
[14 100]
[15 99]
[17 97]
[18 96]
[19 95]
[20 93]
[21 92]
[22 91]
[23 90]
[24 89]
[25 88]
[113 126]
[114 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
