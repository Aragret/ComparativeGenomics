%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUAUGAAACUUAAGGGUCGAAGGUGGAUUUAGCAGUAAACUAAGAGUAGAGUGCUUAGUUGxxxxxxxxxxUAAUUAACCACUCAUUCAUCGACCUCCCCACCCCAUCCAACAUCUCCGCAUGAUGAAACUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[192.32508850 200.87655640]
[181.99418640 190.00123596]
[171.66328430 179.12593079]
[161.33236694 168.25061035]
[146.95706177 164.35195923]
[143.06221008 149.01765442]
[132.73130798 138.14234924]
[122.40040588 127.26702881]
[112.06950378 116.39171600]
[97.12007141 117.62232971]
[88.70665741 130.04064941]
[80.29325104 142.45895386]
[79.65604401 158.84571838]
[65.02198029 166.24681091]
[51.44532776 157.04862976]
[52.89258575 140.71347046]
[67.87493134 134.04554749]
[76.28834534 121.62723541]
[84.70175171 109.20892334]
[71.15586853 115.65166473]
[57.26285934 109.99619293]
[52.06784058 95.92453003]
[58.95304489 82.59809113]
[73.43583679 78.69312286]
[86.08687592 86.75159454]
[79.26329803 73.39349365]
[72.43972778 60.03539658]
[65.61614990 46.67729568]
[58.79257202 33.31919861]
[51.96899796 19.96109772]
[38.80085373 11.19122982]
[39.90153122 -3.66265106]
[32.40153122 -16.65303230]
[24.24486542 -29.24147224]
[16.08819962 -41.82991028]
[7.93153334 -54.41835022]
[2.14090276 -57.81116486]
[-0.60830432 -62.87374878]
[-0.28920785 -67.69530487]
[-7.92217779 -80.60800171]
[-18.14088440 -91.58880615]
[-30.47216797 -100.12926483]
[-42.80345154 -108.66972351]
[-55.13473511 -117.21018219]
[-70.88500214 -118.70677948]
[-76.94256592 -132.31394958]
[-92.29791260 -129.69648743]
[-104.68192291 -138.53340149]
[-107.08264160 -153.18850708]
[-119.41392517 -161.72895813]
[-131.74520874 -170.26942444]
[-148.20889282 -174.31704712]
[-148.87705994 -191.25782776]
[-132.78330994 -196.58953857]
[-123.20475006 -182.60070801]
[-110.87346649 -174.06024170]
[-98.54218292 -165.51979065]
[-83.97885895 -168.42585754]
[-71.35152435 -159.94029236]
[-68.40210724 -144.64523315]
[-53.53385925 -143.75950623]
[-46.59427643 -129.54145813]
[-34.26299286 -121.00100708]
[-21.93170929 -112.46054840]
[-9.60042572 -103.92008972]
[-15.76268387 -117.59585571]
[-18.08143234 -132.41554260]
[-16.39094734 -147.31999207]
[-10.81205273 -161.24392700]
[-1.74347866 -173.19218445]
[10.16662693 -182.31080627]
[24.06702995 -187.94807434]
[38.96424103 -189.70109558]
[53.79353714 -187.44454956]
[67.49504089 -181.33972168]
[79.08947754 -171.82295227]
[87.74818420 -159.57440186]
[92.85229492 -145.46951294]
[94.03701782 -130.51637268]
[91.21768188 -115.78370667]
[84.59578705 -102.32449341]
[74.64460754 -91.10067749]
[62.07537079 -82.91445160]
[47.78642654 -78.35089111]
[32.79902649 -77.73616028]
[18.18434906 -81.11420441]
[4.99052000 -88.24097443]
[12.62349033 -75.32826996]
[20.51997185 -62.57501602]
[28.67663765 -49.98657608]
[36.83330536 -37.39813614]
[44.98997116 -24.80969810]
[50.95664978 -38.57191849]
[65.38018799 -42.69036102]
[77.71403503 -34.15360641]
[78.93962860 -19.20375824]
[68.16081238 -8.77221107]
[53.25962830 -10.48622608]
[65.93970490 -2.67181897]
[65.32709503 13.13752270]
[72.15067291 26.49562263]
[78.97425079 39.85372162]
[85.79782104 53.21182251]
[92.62139893 66.56992340]
[99.44497681 79.92801666]
[117.16887665 86.39520264]
[122.94481659 106.06081390]
[133.27572632 116.93612671]
[143.60662842 127.81143951]
[153.93753052 138.68675232]
[169.05177307 143.36328125]
[172.20768738 157.91970825]
[182.53858948 168.79502869]
[192.86949158 179.67033386]
[203.20039368 190.54565430]
[215.58255005 182.02340698]
[229.14549255 175.54319763]
[243.55522156 171.26458740]
[258.45687866 169.29296875]
[273.48348999 169.67687988]
[288.26501465 172.40686035]
[302.43743896 177.41567993]
[315.65179443 184.58001709]
[327.58264160 193.72341919]
[337.93612671 204.62072754]
[346.45736694 217.00358582]
[352.93646240 230.56706238]
[357.21386719 244.97714233]
[359.18426514 259.87893677]
[358.79910278 274.90551758]
[356.06790161 289.68682861]
[351.05792236 303.85885620]
[343.89248657 317.07263184]
[334.74810791 329.00268555]
[323.84994507 339.35531616]
[311.46636963 347.87551880]
[297.90237427 354.35348511]
[283.49194336 358.62969971]
[268.58996582 360.59887695]
[253.56341553 360.21249390]
[238.78233337 357.48007202]
[224.61071777 352.46890259]
[211.39755249 345.30236816]
[199.46823120 336.15701294]
[189.11653137 325.25799561]
[180.59735107 312.87371826]
[174.12049866 299.30917358]
[169.84545898 284.89840698]
[167.87751770 269.99627686]
[168.26515198 254.96974182]
[170.99879456 240.18888855]
[176.01112366 226.01768494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 115]
[2 114]
[3 113]
[4 112]
[6 110]
[7 109]
[8 108]
[9 107]
[10 19]
[11 18]
[12 17]
[25 105]
[26 104]
[27 103]
[28 102]
[29 101]
[30 100]
[32 98]
[33 92]
[34 91]
[35 90]
[36 89]
[39 88]
[40 87]
[41 65]
[42 64]
[43 63]
[44 62]
[46 60]
[49 57]
[50 56]
[51 55]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
