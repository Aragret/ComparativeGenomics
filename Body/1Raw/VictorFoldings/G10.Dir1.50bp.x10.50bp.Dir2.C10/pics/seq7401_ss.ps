%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUCCAUGACUUUUUCAAAAAGGUAUUAGAAAAACCAUUUCAUAACUUUGUCAAAGUUAAxxxxxxxxxxAAACAUAUCAUACACAAACGCCUGAGCCCUAUCUAUUACUCUCAUCGCUACCUCCCUGACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[110.89460754 276.45440674]
[110.89460754 261.45440674]
[110.89460754 246.45442200]
[110.89460754 231.45442200]
[110.89460754 216.45442200]
[110.89460754 201.45442200]
[110.89460754 186.45442200]
[110.89460754 171.45442200]
[110.89460754 156.45442200]
[110.89460754 141.45442200]
[94.87337494 141.55395508]
[80.31333923 135.82281494]
[69.20362091 125.34204865]
[62.94977570 111.81893921]
[62.19879913 97.31324768]
[66.78174591 83.92479706]
[54.88936615 74.78305817]
[42.99698639 65.64132690]
[31.10460663 56.49959183]
[16.15651894 55.25271606]
[2.91393375 62.29785156]
[-10.32865238 69.34298706]
[-23.57123756 76.38812256]
[-36.81382370 83.43325806]
[-47.95740891 96.21045685]
[-63.32012177 89.03944397]
[-60.68218231 72.29198456]
[-43.85895920 70.19067383]
[-30.61637306 63.14553452]
[-17.37378693 56.10040283]
[-4.13120127 49.05526733]
[9.11138439 42.01013184]
[11.90370846 27.27232552]
[2.15605688 15.87130451]
[-19.40423203 23.14242363]
[-41.91344070 20.18522644]
[-60.77950287 7.64804649]
[-72.17341614 -11.87098217]
[-73.80635834 -34.36225128]
[-88.12895203 -38.81906509]
[-102.45155334 -43.27588272]
[-116.77414703 -47.73269653]
[-131.58815002 -41.57436752]
[-145.56919861 -49.44264603]
[-147.99223328 -65.30166626]
[-136.99850464 -76.98574066]
[-121.02146912 -75.53185272]
[-112.31733704 -62.05529404]
[-97.99473572 -57.59848022]
[-83.67214203 -53.14166260]
[-69.34954071 -48.68484879]
[-64.66851044 -56.42979813]
[-58.66415787 -63.20061874]
[-67.17524719 -75.55219269]
[-75.68634033 -87.90376282]
[-84.19742584 -100.25533295]
[-92.70851898 -112.60691071]
[-101.21961212 -124.95848083]
[-109.73069763 -137.31005859]
[-123.69670105 -146.92187500]
[-118.32669830 -163.00289917]
[-101.38755798 -162.29441833]
[-97.37912750 -145.82113647]
[-88.86803436 -133.46957397]
[-80.35694885 -121.11799622]
[-71.84585571 -108.76642609]
[-63.33476639 -96.41485596]
[-54.82367706 -84.06327820]
[-46.31258392 -71.71170807]
[-37.19921494 -75.12784576]
[-27.58809280 -76.70971680]
[-17.84495544 -76.39403534]
[-8.34114838 -74.18979645]
[0.56050622 -70.17802429]
[8.51957035 -64.50882721]
[15.23100948 -57.39572906]
[20.43687820 -49.10768890]
[23.93623924 -39.95890045]
[25.59291267 -30.29688263]
[25.34077644 -20.48927879]
[23.18640137 -10.90987968]
[19.20890808 -1.92436445]
[13.55707741 6.12365246]
[23.30472946 17.52467346]
[31.74336815 20.81870461]
[38.01643753 27.28596306]
[41.01894379 35.72883987]
[40.24634171 44.60721207]
[52.13872147 53.74894714]
[64.03109741 62.89067841]
[75.92347717 72.03241730]
[85.52125549 65.24716949]
[96.98037720 61.72581482]
[109.20010376 61.95874405]
[120.95863342 66.06813049]
[131.03530884 73.78143311]
[138.33699036 84.44510651]
[142.01582336 97.07833862]
[141.56550598 110.46278381]
[156.56469727 110.30674744]
[166.16789246 101.63309479]
[178.70475769 101.84794617]
[187.42701721 110.28769684]
[202.42620850 110.44373322]
[217.42539978 110.59976959]
[232.42459106 110.75580597]
[238.35530090 96.75955200]
[249.19421387 86.10186005]
[263.28845215 80.40792847]
[278.48876953 80.54606628]
[292.47720337 86.49518585]
[303.12063599 97.34810638]
[308.79602051 111.44982147]
[308.63787842 126.64994049]
[302.67037964 140.63053894]
[291.80346680 151.25967407]
[277.69427490 156.91650391]
[262.49438477 156.73838806]
[248.52165222 150.75247192]
[237.90681458 139.87159729]
[232.26855469 125.75499725]
[217.26936340 125.59896088]
[202.27017212 125.44292450]
[187.27098083 125.28688812]
[172.50877380 134.72494507]
[156.72073364 125.30593872]
[141.72154236 125.46197510]
[154.95936584 132.51603699]
[168.19720459 139.57009888]
[183.02976990 141.80511475]
[195.07226562 150.74816895]
[201.49967957 164.30133057]
[200.80422974 179.28520203]
[193.14904785 192.18473816]
[180.32994080 199.97387695]
[165.35412598 200.82537842]
[151.73474121 194.53948975]
[142.66673279 182.59080505]
[140.27737427 167.78189087]
[133.08598328 154.61814880]
[125.89460754 141.45442200]
[125.89460754 156.45442200]
[125.89460754 171.45442200]
[125.89460754 186.45442200]
[125.89460754 201.45442200]
[125.89460754 216.45442200]
[125.89460754 231.45442200]
[125.89460754 246.45442200]
[125.89460754 261.45440674]
[125.89460754 276.45440674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[16 91]
[17 90]
[18 89]
[19 88]
[20 32]
[21 31]
[22 30]
[23 29]
[24 28]
[33 84]
[34 83]
[39 51]
[40 50]
[41 49]
[42 48]
[53 69]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[59 63]
[99 127]
[100 126]
[103 124]
[104 123]
[105 122]
[106 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
