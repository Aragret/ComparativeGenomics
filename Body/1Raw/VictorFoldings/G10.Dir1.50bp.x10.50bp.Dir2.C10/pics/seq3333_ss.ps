%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUCCUCAUUGUACCCAUUCUAAUCGCAAUGGCAUUCCUAAUGCUUACCGAACGAAAAAUUCUxxxxxxxxxxUAAUAUUUCGCCCACUAAGCCAAUCACUUUAUUGACUCCUAGCCGCAGACCUCCUCAUUCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[107.54100037 295.22372437]
[107.54100037 280.22372437]
[107.54100037 265.22372437]
[107.54100037 250.22370911]
[107.54100037 235.22370911]
[107.54100037 220.22370911]
[107.54100037 205.22370911]
[107.54100037 190.22370911]
[107.54100037 175.22370911]
[107.54100037 160.22370911]
[105.41995239 145.37443542]
[101.22048950 130.97427368]
[93.52855682 132.01841736]
[85.43067169 131.08886719]
[77.44539642 128.05990601]
[70.12544250 122.94399261]
[56.52725983 129.27560425]
[42.92907333 135.60722351]
[29.33089066 141.93884277]
[15.73270798 148.27046204]
[2.13452387 154.60208130]
[2.43392515 169.82806396]
[-3.49150062 183.85693359]
[-14.61513710 194.25811768]
[-29.00974846 199.22953796]
[-44.18137741 197.90988159]
[-57.50145340 190.52777100]
[-66.66218567 178.36221313]
[-70.07643127 163.52096558]
[-67.15264130 148.57534790]
[-58.39738846 136.11479187]
[-45.32756805 128.29815674]
[-30.20760727 126.47973633]
[-15.65712929 130.97456360]
[-4.19709539 141.00390625]
[9.40108871 134.67228699]
[22.99927139 128.34066772]
[36.59745407 122.00904846]
[50.19564056 115.67742920]
[63.79382324 109.34580994]
[63.03408432 94.36505890]
[48.86511230 89.44163513]
[34.69613647 84.51820374]
[20.52716064 79.59477234]
[6.35818529 74.67134857]
[-10.58801365 75.18385315]
[-15.77166653 59.04179764]
[-1.69542336 49.59215546]
[11.28161335 60.50237274]
[25.45058823 65.42580414]
[39.61956406 70.34922791]
[53.78853989 75.27265930]
[67.95751190 80.19608307]
[75.47243500 73.19344330]
[84.30955505 68.71359253]
[93.68552399 66.93109131]
[102.82545471 67.79134369]
[111.02648926 71.02912140]
[119.59551239 58.71767426]
[111.09937286 43.62123108]
[114.66897583 24.23557091]
[131.58815002 10.00253391]
[131.28414917 -4.99438572]
[130.98014832 -19.99130440]
[130.67614746 -34.98822403]
[130.37214661 -49.98514175]
[122.35674286 -63.62566757]
[129.83450317 -76.50714111]
[129.53050232 -91.50405884]
[129.22650146 -106.50097656]
[115.17518616 -112.37298584]
[104.73176575 -123.45697784]
[99.70561218 -137.83256531]
[100.96754456 -153.00910950]
[108.29891968 -166.35717773]
[120.42954254 -175.56411743]
[135.25770569 -179.03480530]
[150.21432495 -176.16789246]
[162.70809937 -167.46011353]
[170.57438660 -154.42012024]
[172.45033264 -139.30718994]
[168.01087952 -124.73971558]
[158.02522278 -113.24160767]
[144.22341919 -106.80497742]
[144.52742004 -91.80805969]
[144.83142090 -76.81114197]
[152.82508850 -64.24329376]
[145.36906433 -50.28914642]
[145.67306519 -35.29222870]
[145.97706604 -20.29530907]
[146.28106689 -5.29838991]
[146.58508301 9.69852924]
[152.51589966 14.28932381]
[161.69766235 2.42782974]
[173.55902100 11.60978603]
[164.37753296 23.47091293]
[170.30834961 28.06170845]
[184.90272522 24.59699249]
[199.49710083 21.13227654]
[214.01824951 17.37248802]
[228.46022034 13.31917286]
[239.65623474 2.14061666]
[254.00080872 6.15089989]
[268.44277954 2.09758472]
[282.88476562 -1.95573068]
[297.32672119 -6.00904608]
[304.84701538 -19.90944099]
[320.01733398 -24.34072876]
[333.83746338 -16.67390823]
[338.10809326 -1.45756459]
[330.29559326 12.28071308]
[315.03494263 16.39024925]
[301.38003540 8.43292904]
[286.93807983 12.48624420]
[272.49609375 16.53956032]
[258.05410767 20.59287453]
[247.89111328 31.48151016]
[232.51353455 27.76114845]
[218.07156372 31.81446266]
[214.97004700 35.51638412]
[209.48759460 37.27375412]
[202.96180725 35.72665024]
[188.36743164 39.19136429]
[173.77307129 42.65608215]
[156.94639587 67.55892181]
[131.90696716 67.28669739]
[123.33794403 79.59814453]
[130.59170532 105.00428009]
[115.62065125 126.77481079]
[119.82011414 141.17497253]
[124.24489594 126.84244537]
[133.73727417 115.22801971]
[146.90213013 108.03868103]
[161.80461121 106.33105469]
[176.25448608 110.35610962]
[188.12803650 119.52227783]
[195.68020630 132.48240662]
[197.80102539 147.33171082]
[194.17880249 161.88780212]
[185.34591675 174.01132202]
[172.60050964 181.92048645]
[157.81582642 184.45286560]
[143.16476440 181.23628235]
[130.80061340 172.74346924]
[122.54100037 160.22370911]
[122.54100037 175.22370911]
[122.54100037 190.22370911]
[122.54100037 205.22370911]
[122.54100037 220.22370911]
[122.54100037 235.22370911]
[122.54100037 250.22370911]
[122.54100037 265.22372437]
[122.54100037 280.22372437]
[122.54100037 295.22372437]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 154]
[2 153]
[3 152]
[4 151]
[5 150]
[6 149]
[7 148]
[8 147]
[9 146]
[10 145]
[11 130]
[12 129]
[16 40]
[17 39]
[18 38]
[19 37]
[20 36]
[21 35]
[41 53]
[42 52]
[43 51]
[44 50]
[45 49]
[58 127]
[59 126]
[62 92]
[63 91]
[64 90]
[65 89]
[66 88]
[68 86]
[69 85]
[70 84]
[97 124]
[98 123]
[99 122]
[100 119]
[101 118]
[103 116]
[104 115]
[105 114]
[106 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
