%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUUCUCCUUACACCUAGCAGGUGUCUCCUCUAUCUUAGGGGCCAUCAAUUUCAUCACAACxxxxxxxxxxUGAGCCACAACCCAAACAACCCAGCUCUCCCUAAGCUUCAAACUAGACUACUUCUCCAUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[95.81222534 467.75125122]
[95.81222534 452.75125122]
[95.81222534 437.75125122]
[95.81222534 422.75125122]
[95.81222534 407.75125122]
[95.81222534 392.75125122]
[95.81222534 377.75125122]
[95.81222534 362.75125122]
[95.81222534 347.75125122]
[95.81222534 332.75125122]
[80.74172211 329.63262939]
[66.63760376 323.46063232]
[54.11135864 314.50036621]
[43.70660400 303.13781738]
[35.87548065 289.86325073]
[30.95899773 275.25015259]
[29.17220306 259.93038940]
[30.59476089 244.56683350]
[35.16741562 229.82481384]
[42.69444275 216.34320068]
[52.85204315 204.70672607]
[65.20225525 195.42066956]
[79.21183777 188.88888550]
[94.27532196 185.39624023]
[93.96326447 170.39949036]
[93.65120697 155.40274048]
[93.33915710 140.40599060]
[73.71327972 131.40093994]
[61.39600372 113.66535187]
[46.57824707 115.99645996]
[31.76048851 118.32756042]
[21.19274330 130.39828491]
[5.17385101 129.51815796]
[-4.00786686 116.36233521]
[0.69101804 101.02284241]
[15.66592407 95.26682281]
[29.42938423 103.50980377]
[44.24714279 101.17870331]
[59.06489944 98.84759521]
[61.29999542 86.60894775]
[67.10691833 75.60623169]
[75.94972229 66.85494995]
[87.01224518 61.16279221]
[99.27348328 59.05512619]
[101.75860596 44.26242065]
[104.24372101 29.46971321]
[106.72883606 14.67700577]
[109.21395874 -0.11570150]
[111.69907379 -14.90840912]
[114.18419647 -29.70111656]
[116.66931152 -44.49382401]
[106.65859222 -33.32308197]
[94.69448090 -24.27542686]
[81.21955872 -17.68555641]
[66.73228455 -13.79723930]
[51.76858902 -12.75431442]
[36.88199997 -14.59536266]
[22.62320709 -19.25227928]
[9.51967812 -26.55279541]
[-1.94386101 -36.22684479]
[-11.34334850 -47.91656876]
[-18.33107567 -61.18953705]
[-22.64855194 -75.55474854]
[-24.13606644 -90.48081207]
[-22.73858833 -105.41557312]
[-18.50781631 -119.80656433]
[-11.60025692 -133.12142944]
[-2.27143312 -144.86761475]
[9.13356018 -154.61062622]
[22.19282722 -161.99002075]
[36.42327499 -166.73284912]
[51.29849243 -168.66363525]
[66.26821136 -167.71095276]
[80.77866364 -163.91007996]
[94.29308319 -157.40158081]
[106.31153870 -148.42623901]
[116.38943481 -137.31607056]
[124.15398407 -124.48205566]
[129.31794739 -110.39896393]
[131.69029236 -95.58775330]
[131.18327332 -80.59632111]
[127.81772614 -65.98548889]
[138.47935486 -76.53677368]
[149.14097595 -87.08806610]
[159.80261230 -97.63935852]
[152.98857117 -111.14579773]
[150.68374634 -126.09715271]
[153.11395264 -141.02864075]
[160.04110718 -154.47741699]
[170.78656006 -165.12593079]
[184.29756165 -171.93090820]
[199.25045776 -174.22570801]
[214.18031311 -171.78549194]
[227.62445068 -164.84933472]
[238.26574707 -154.09675598]
[245.06169128 -140.58119202]
[247.34646606 -125.62676239]
[244.89624023 -110.69854736]
[237.95108032 -97.25906372]
[227.19136047 -86.62496948]
[213.67124939 -79.83808899]
[198.71530151 -77.56333160]
[183.78872681 -80.02355194]
[170.35389709 -86.97772980]
[159.69227600 -76.42643738]
[149.03063965 -65.87515259]
[138.36901855 -55.32386017]
[131.46202087 -42.00870514]
[128.97689819 -27.21599770]
[126.49178314 -12.42329025]
[124.00666809 2.36941695]
[121.52154541 17.16212463]
[119.03643036 31.95483208]
[116.55130768 46.74753952]
[114.06619263 61.54024506]
[125.55432129 68.00020599]
[134.39549255 77.77476501]
[139.67388916 89.85147095]
[140.84278870 102.97937012]
[137.78111267 115.79866791]
[130.80598450 126.98150635]
[120.63990784 135.36953735]
[108.33590698 140.09393311]
[108.64796448 155.09068298]
[108.96002197 170.08743286]
[109.27207947 185.08418274]
[123.67478943 187.71456909]
[137.27775574 193.11557007]
[149.55377197 201.07575989]
[160.02752686 211.28459167]
[168.29389954 223.34448242]
[174.03372192 236.78631592]
[177.02601624 251.08767700]
[177.15660095 265.69317627]
[174.42233276 280.03594971]
[168.93124390 293.55978394]
[160.89825439 305.74060059]
[150.63673401 316.10671997]
[138.54629517 324.25726318]
[125.09723663 329.87756348]
[110.81222534 332.75125122]
[110.81222534 347.75125122]
[110.81222534 362.75125122]
[110.81222534 377.75125122]
[110.81222534 392.75125122]
[110.81222534 407.75125122]
[110.81222534 422.75125122]
[110.81222534 437.75125122]
[110.81222534 452.75125122]
[110.81222534 467.75125122]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[24 126]
[25 125]
[26 124]
[27 123]
[29 39]
[30 38]
[31 37]
[44 115]
[45 114]
[46 113]
[47 112]
[48 111]
[49 110]
[50 109]
[51 108]
[82 107]
[83 106]
[84 105]
[85 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
