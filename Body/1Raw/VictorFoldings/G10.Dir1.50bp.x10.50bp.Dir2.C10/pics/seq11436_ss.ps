%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGAAGAAAACCCCACAAACCCCAUUACUAAACCCACACUCAACAGAAACAAAGCAUACAUCxxxxxxxxxxAAUGGGCCUGUCCUUGUAGUAUAAACUAAUACACCAGUCUUGUAAACCGGAGAUGAAAACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[100.45571899 458.79980469]
[100.45571899 443.79980469]
[100.45571899 428.79980469]
[100.45571899 413.79980469]
[100.45571899 398.79980469]
[100.45571899 383.79980469]
[100.45571899 368.79980469]
[100.45571899 353.79980469]
[100.45571899 338.79980469]
[100.45571899 323.79980469]
[85.91332245 320.24914551]
[72.63536835 313.31689453]
[61.39569473 303.40219116]
[52.85050964 291.07806396]
[47.50011063 277.05847168]
[45.65956116 262.15676880]
[47.44015884 247.23866272]
[52.74271011 233.17179871]
[61.26305008 220.77543640]
[72.50948334 210.77258301]
[85.83115387 203.74795532]
[100.45571899 200.11372375]
[100.45571899 185.11372375]
[99.68605804 170.13348389]
[98.14876556 155.21246338]
[96.61147308 140.29144287]
[95.07418060 125.37042999]
[80.92005157 117.43209839]
[74.28899384 102.62042236]
[77.79558563 86.77553558]
[67.69014740 75.69040680]
[57.58471298 64.60527039]
[47.47927856 53.52013779]
[37.37384415 42.43500137]
[27.26840973 31.34986877]
[14.94196510 39.93554306]
[1.60029280 46.83878708]
[-12.52831364 51.94148254]
[-27.20209694 55.15631104]
[-42.16996765 56.42826080]
[-57.17580795 55.73557281]
[-71.96284485 53.09009933]
[-86.27805328 48.53710175]
[-99.87648773 42.15449524]
[-112.52545166 34.05149078]
[-124.00850677 24.36673927]
[-134.12916565 13.26596355]
[-142.71426392 0.93911058]
[-149.61686707 -12.40289021]
[-154.71888733 -26.53174019]
[-157.93301392 -41.20567703]
[-159.20425415 -56.17360687]
[-158.51084900 -71.17941284]
[-155.86466980 -85.96632385]
[-151.31100464 -100.28131866]
[-144.92774963 -113.87944794]
[-136.82414246 -126.52802277]
[-127.13883972 -138.01062012]
[-116.03758240 -148.13075256]
[-103.71031952 -156.71525574]
[-90.36798859 -163.61723328]
[-76.23889923 -168.71858215]
[-61.56481171 -171.93200684]
[-46.59681702 -173.20254517]
[-31.59104538 -172.50842285]
[-16.80426025 -169.86154175]
[-2.48948383 -165.30717468]
[11.10833931 -158.92327881]
[23.75653267 -150.81906128]
[35.23867035 -141.13322449]
[45.35827637 -130.03147888]
[53.94218826 -117.70381165]
[60.84352875 -104.36116028]
[65.94420624 -90.23181915]
[69.15693665 -75.55757904]
[70.42675018 -60.58952713]
[69.73191833 -45.58378983]
[67.08433533 -30.79712868]
[62.52929306 -16.48256874]
[56.14474487 -2.88504910]
[48.03993225 9.76275826]
[38.35354233 21.24443436]
[48.45897675 32.32956696]
[58.56441116 43.41470337]
[68.66984558 54.49983597]
[78.77528381 65.58496857]
[88.88071442 76.67010498]
[104.74885559 74.59584808]
[118.79615784 82.26226807]
[132.22360229 75.57619476]
[145.65104675 68.89011383]
[144.66616821 53.74727249]
[149.54077148 39.41962814]
[159.50254822 28.08046341]
[173.01008606 21.43712807]
[187.99131775 20.47402382]
[202.16133118 25.30683517]
[213.37089539 35.16964340]
[226.79833984 28.48356628]
[240.22579956 21.79749107]
[253.65324402 15.11141682]
[262.25558472 1.14961481]
[278.63806152 1.88895762]
[285.94778442 16.56887245]
[276.66513062 30.08792114]
[260.33932495 28.53886604]
[246.91186523 35.22494125]
[233.48442078 41.91101837]
[220.05697632 48.59709167]
[221.17239380 63.48618698]
[216.48971558 77.70652008]
[206.69293213 89.08139801]
[193.25132751 95.85714722]
[178.19915771 96.97344208]
[163.82785034 92.22911835]
[152.33712769 82.31756592]
[138.90968323 89.00363922]
[125.48223114 95.68972015]
[124.84111023 107.13034058]
[119.31678009 117.16928864]
[109.99520111 123.83313751]
[111.53249359 138.75415039]
[113.06978607 153.67517090]
[114.60707855 168.59619141]
[126.18114471 159.05465698]
[140.89938354 161.94834900]
[147.99975586 175.16140747]
[142.29043579 189.03237915]
[127.94610596 193.41874695]
[115.45571899 185.11372375]
[115.45571899 200.11372375]
[130.08029175 203.74795532]
[143.40196228 210.77258301]
[154.64839172 220.77543640]
[163.16873169 233.17179871]
[168.47128296 247.23866272]
[170.25187683 262.15676880]
[168.41133118 277.05847168]
[163.06092834 291.07806396]
[154.51574707 303.40219116]
[143.27606201 313.31689453]
[129.99810791 320.24914551]
[115.45571899 323.79980469]
[115.45571899 338.79980469]
[115.45571899 353.79980469]
[115.45571899 368.79980469]
[115.45571899 383.79980469]
[115.45571899 398.79980469]
[115.45571899 413.79980469]
[115.45571899 428.79980469]
[115.45571899 443.79980469]
[115.45571899 458.79980469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[22 131]
[23 130]
[24 124]
[25 123]
[26 122]
[27 121]
[30 87]
[31 86]
[32 85]
[33 84]
[34 83]
[35 82]
[89 118]
[90 117]
[91 116]
[98 109]
[99 108]
[100 107]
[101 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
