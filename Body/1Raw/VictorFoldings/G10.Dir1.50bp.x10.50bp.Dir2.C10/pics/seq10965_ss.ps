%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCACUUCAAGUCAACUAGGACUCAUAAUAGUUACAAUCGGCAUCAACCAACCACACCUAGxxxxxxxxxxCUAGGCGACCCAGACAAUUAUACCCUAGCCAACCCCUUAAACACCCCUCCCCACAUCAAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[203.81147766 456.88879395]
[202.56460571 441.94070435]
[201.31773376 426.99261475]
[200.07086182 412.04452515]
[198.82398987 397.09643555]
[197.57711792 382.14834595]
[194.32627869 367.50485229]
[189.13087463 353.43334961]
[183.93545532 339.36181641]
[178.74003601 325.29028320]
[163.58210754 327.76986694]
[148.22653198 327.25964355]
[133.25759888 323.77722168]
[119.24519348 317.45336914]
[106.72315979 308.52700806]
[96.16894531 297.33630371]
[87.98538208 284.30572510]
[82.48533630 269.93011475]
[79.87974548 254.75570679]
[80.26951599 239.35951233]
[83.64160156 224.32734680]
[89.86947632 210.23147583]
[98.71784973 197.60891724]
[109.85155487 186.94090271]
[122.84826660 178.63462830]
[117.36122894 164.67424011]
[111.87419891 150.71385193]
[106.38716888 136.75344849]
[100.90013885 122.79306793]
[89.80863190 120.40760040]
[81.23810577 112.97402954]
[77.30859375 102.33114624]
[78.99211884 91.11162567]
[85.87223816 82.09076691]
[80.97068787 67.91421509]
[76.06913757 53.73765564]
[71.16758728 39.56109619]
[66.26603699 25.38453865]
[54.44400024 14.87025928]
[57.59766388 0.31334758]
[52.69611359 -13.86321068]
[37.58421326 -15.70492077]
[24.82253838 -23.89189911]
[16.91336441 -36.75522614]
[15.37980652 -51.71548080]
[20.47275162 -65.79991913]
[31.13167191 -76.23317719]
[26.23011971 -90.40973663]
[21.32856941 -104.58628845]
[9.50653458 -115.10057068]
[12.66019535 -129.65748596]
[-2.21835279 -127.43409729]
[-17.25210381 -127.98272705]
[-31.92901230 -131.28469849]
[-45.74918747 -137.22753906]
[-58.24192429 -145.60884094]
[-68.98171997 -156.14314270]
[-77.60278320 -168.47163391]
[-83.81147766 -182.17443848]
[-87.39634705 -196.78482056]
[-88.23529053 -211.80517578]
[-86.29972839 -226.72389221]
[-81.65558624 -241.03286743]
[-74.46104431 -254.24472046]
[-64.96114349 -265.90948486]
[-53.47945404 -275.62985229]
[-40.40703201 -283.07473755]
[-26.18911743 -287.99057007]
[-11.30997086 -290.20996094]
[3.72363091 -289.65725708]
[18.39964867 -286.35134888]
[32.21822357 -280.40478516]
[44.70869827 -272.02011108]
[55.44565201 -261.48291016]
[64.06339264 -249.15209961]
[70.26839447 -235.44761658]
[73.84932709 -220.83627319]
[74.68421936 -205.81570435]
[72.74463654 -190.89749146]
[68.09664154 -176.58978271]
[60.89853668 -163.37986755]
[51.39549637 -151.71766663]
[39.91118240 -142.00039673]
[26.83675385 -134.55903625]
[38.30819702 -125.05875397]
[35.50512695 -109.48784637]
[40.40667725 -95.31128693]
[45.30822754 -81.13472748]
[60.13510132 -79.51319122]
[72.83985138 -71.58231354]
[80.87419128 -58.86970901]
[82.59928894 -43.86823273]
[77.61975861 -29.54722595]
[66.87267303 -18.76476097]
[71.77422333 -4.58820343]
[83.24566650 4.91207266]
[80.44259644 20.48298645]
[85.34414673 34.65954590]
[90.24569702 48.83610153]
[95.14724731 63.01266098]
[100.04879761 77.18921661]
[116.55486298 84.30699158]
[122.78082275 101.16968536]
[114.86052704 117.30603790]
[120.34755707 131.26641846]
[125.83458710 145.22680664]
[131.32162476 159.18721008]
[136.80865479 173.14759827]
[151.22596741 170.44750977]
[165.88981628 170.45655823]
[180.29566956 173.17286682]
[193.94821167 178.50151062]
[206.37825012 186.25773621]
[217.15896606 196.17338562]
[225.92048645 207.90618896]
[232.36257935 221.05157471]
[236.26499939 235.15661621]
[237.49493408 249.73562622]
[236.01159668 264.28686523]
[231.86753845 278.30990601]
[225.20680237 291.32266235]
[216.25991821 302.87817383]
[205.33587646 312.57980347]
[192.81155396 320.09487915]
[198.00697327 334.16641235]
[203.20239258 348.23791504]
[208.39781189 362.30944824]
[212.10151672 347.77386475]
[221.30805969 335.93161011]
[234.48159790 328.75817871]
[249.42446899 327.45028687]
[263.64385986 332.22610474]
[274.76770020 342.28894043]
[280.94024658 355.96005249]
[281.13177490 370.95883179]
[275.31036377 384.78314209]
[264.44711304 395.12673950]
[250.35430908 400.26409912]
[235.38290405 399.33822632]
[222.03048706 392.50354004]
[212.52519226 380.90148926]
[213.77207947 395.84957886]
[215.01895142 410.79766846]
[216.26582336 425.74572754]
[217.51269531 440.69381714]
[218.75956726 455.64190674]
[230.02946472 467.05984497]
[227.98622131 482.97225952]
[214.19726562 491.17251587]
[199.24028015 485.37005615]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 146]
[2 145]
[3 144]
[4 143]
[5 142]
[6 141]
[7 127]
[8 126]
[9 125]
[10 124]
[25 108]
[26 107]
[27 106]
[28 105]
[29 104]
[34 101]
[35 100]
[36 99]
[37 98]
[38 97]
[40 95]
[41 94]
[47 88]
[48 87]
[49 86]
[51 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
