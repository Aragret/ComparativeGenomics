%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACCCCCCACAGUUUAUGUAGCUUACCUCCUCAAAGCAAUACACUGAAAAUGUUUAGACGGxxxxxxxxxxACAGCCCUAUACUCCCUCUACAUAUUUACCACAACACAAUGGGGCUCACUCACCCACCACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[43.24250412 241.31057739]
[44.50364685 257.08142090]
[32.15508270 265.40982056]
[25.88567734 279.03680420]
[19.61627197 292.66378784]
[13.34686756 306.29077148]
[7.07746220 319.91775513]
[0.80805707 333.54473877]
[2.85913253 349.81509399]
[-10.36764526 359.50967407]
[-25.26570129 352.65545654]
[-26.50919342 336.30352783]
[-12.81892204 327.27532959]
[-6.54951668 313.64834595]
[-0.28011167 300.02136230]
[5.98929358 286.39437866]
[12.25869846 272.76739502]
[18.52810478 259.14044189]
[16.81853104 244.34425354]
[29.61552429 235.04116821]
[9.12349892 222.19473267]
[-9.07623005 206.26602173]
[-24.52458572 187.65682983]
[-36.83189392 166.83654785]
[-45.68771744 144.33035278]
[-50.86866379 120.70597076]
[-52.24405670 96.55928802]
[-67.20533752 95.48221588]
[-82.16661835 94.40514374]
[-97.12789917 93.32807922]
[-112.10813904 92.55841827]
[-127.10102844 92.09648895]
[-142.09391785 91.63456726]
[-157.08679199 91.17263794]
[-165.73822021 103.94590759]
[-179.93099976 109.99312592]
[-195.13623047 107.38466644]
[-206.50201416 96.95285797]
[-210.40156555 82.02647400]
[-205.59053040 67.36845398]
[-193.60411072 57.65612030]
[-178.26713562 55.98865128]
[-164.47355652 62.89812469]
[-156.62487793 76.17975616]
[-141.63198853 76.64167786]
[-126.63909912 77.10360718]
[-111.64621735 77.56552887]
[-107.57585144 74.96143341]
[-101.81504822 74.92929840]
[-96.05082703 78.36679840]
[-81.08954620 79.44387054]
[-66.12826538 80.52093506]
[-51.16698456 81.59800720]
[-49.10270691 69.04077911]
[-45.99718857 56.69974899]
[-41.87211609 44.66110229]
[-36.75629807 33.00891113]
[-30.68545723 21.82454109]
[-23.70199013 11.18610001]
[-15.85466480 1.16788125]
[-7.19828320 -8.16015530]
[2.20670557 -16.73286819]
[12.29462147 -24.49039268]
[22.99501801 -31.37855148]
[34.23316956 -37.34924698]
[45.93059540 -42.36077499]
[58.00560760 -46.37814713]
[70.37388611 -49.37330627]
[82.94905090 -51.32533264]
[95.64329529 -52.22059631]
[108.36795807 -52.05284882]
[121.03418732 -50.82325363]
[133.55352783 -48.54040527]
[145.83854675 -45.22024536]
[157.80345154 -40.88595200]
[169.36470032 -35.56780243]
[180.44155884 -29.30292892]
[190.95664978 -22.13508415]
[200.83656311 -14.11432457]
[210.01229858 -5.29666042]
[218.41976929 4.25632954]
[226.00027466 14.47793484]
[232.70086670 25.29677200]
[238.47476196 36.63729095]
[252.40547180 31.07535362]
[266.33618164 25.51341629]
[280.26690674 19.95147896]
[294.19763184 14.38954163]
[308.12832642 8.82760429]
[322.05905151 3.26566744]
[335.98977661 -2.29626989]
[333.43072510 -17.13355446]
[334.01284790 -32.17864609]
[337.71066284 -46.77384186]
[344.36257935 -60.28110123]
[353.67773438 -72.10993958]
[365.24893188 -81.74326324]
[378.57034302 -88.75993347]
[393.05960083 -92.85321808]
[408.08331299 -93.84416962]
[422.98468018 -91.68946838]
[437.11230469 -86.48332214]
[449.84857178 -78.45330048]
[460.63671875 -67.95046234]
[469.00512695 -55.43392944]
[474.58795166 -41.45087814]
[477.14114380 -26.61259079]
[476.55313110 -11.56772709]
[472.84954834 3.02601218]
[466.19235229 16.53065300]
[456.87252808 28.35582924]
[445.29754639 37.98459625]
[431.97335815 44.99602509]
[417.48248291 49.08360672]
[402.45840454 50.06864929]
[387.55786133 47.90809250]
[373.43231201 42.69638062]
[360.69918823 34.66135406]
[349.91519165 24.15426826]
[341.55169678 11.63444614]
[327.62100220 17.19638443]
[313.69027710 22.75832176]
[299.75955200 28.32025909]
[285.82885742 33.88219452]
[271.89813232 39.44413376]
[257.96740723 45.00606918]
[244.03669739 50.56800842]
[247.69731140 62.91096115]
[250.30226135 75.51900482]
[251.83296204 88.30201721]
[252.27844238 101.16864777]
[251.63554382 114.02692413]
[249.90882874 126.78494263]
[247.11067200 139.35151672]
[243.26104736 151.63684082]
[238.38748169 163.55308533]
[232.52481079 175.01509094]
[225.71493530 185.94093323]
[218.00653076 196.25253296]
[209.45468140 205.87617493]
[200.12051392 214.74307251]
[190.07075500 222.78987122]
[179.37721252 229.95903015]
[168.11634827 236.19932556]
[156.36860657 241.46614075]
[144.21800232 245.72186279]
[131.75134277 248.93603516]
[119.05773926 251.08572388]
[106.22792816 252.15553284]
[93.35359955 252.13781738]
[80.52677917 251.03273010]
[67.83914185 248.84814453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[3 18]
[4 17]
[5 16]
[6 15]
[7 14]
[8 13]
[27 53]
[28 52]
[29 51]
[30 50]
[31 47]
[32 46]
[33 45]
[34 44]
[84 127]
[85 126]
[86 125]
[87 124]
[88 123]
[89 122]
[90 121]
[91 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
