%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUAAAACCCCUACGCAUUUAUAUAGAGGAGACAAGUCGUAACAUGGUAAGUGUACUGGAAAGxxxxxxxxxxCCCCUACCCCCCAAUUAGGAGGGCACUGGCCCCCAACAGGCAUCACCCCGCUAAAUCCCCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[181.80458069 152.20132446]
[167.73829651 146.99174500]
[153.67201233 141.78216553]
[139.60572815 136.57258606]
[125.53945160 131.36300659]
[111.47316742 126.15342712]
[97.30419159 131.07685852]
[89.49914551 143.88627625]
[81.69409180 156.69569397]
[73.88904572 169.50511169]
[77.86049652 184.80227661]
[69.78009033 198.38470459]
[54.44179916 202.19421387]
[40.94554901 193.97065735]
[37.29842758 178.59294128]
[45.66421127 165.18438721]
[61.07962418 161.70005798]
[68.88467407 148.89064026]
[76.68972778 136.08122253]
[84.49477386 123.27180481]
[76.30395508 110.70556641]
[61.43394089 112.67601776]
[46.56392670 114.64646912]
[31.69391060 116.61692047]
[29.74769402 131.57936096]
[23.99432945 145.52787781]
[14.82609272 157.51144409]
[2.86808896 166.71299744]
[-11.06436539 172.50515747]
[-26.02133179 174.49301147]
[-40.98302078 172.54101562]
[-54.92931747 166.78227234]
[-66.90934753 157.60940552]
[-76.10627747 145.64784241]
[-81.89305878 131.71315002]
[-83.87513733 116.75542450]
[-81.91736603 101.79448700]
[-76.15322876 87.85041809]
[-66.97573853 75.87393188]
[-55.01063538 66.68161774]
[-41.07371140 60.90021896]
[-26.11521339 58.92391968]
[-11.15503693 60.88746643]
[2.78680968 66.65698242]
[14.75974751 75.83909607]
[23.94744110 87.80775452]
[29.72345924 101.74690247]
[44.59347534 99.77645111]
[59.46348953 97.80599976]
[74.33350372 95.83554840]
[78.82395172 81.52346039]
[67.74484253 71.41142273]
[56.66573334 61.29938126]
[45.58662796 51.18733978]
[29.55920029 50.47938919]
[20.23664856 37.42298889]
[24.77043533 22.03389168]
[39.68262482 16.11729431]
[53.53386307 24.21190643]
[55.69866562 40.10823059]
[66.77777863 50.22027206]
[77.85688019 60.33231354]
[88.93598938 70.44435120]
[95.73508453 67.27854156]
[97.05052185 52.33633423]
[109.33326721 60.94692612]
[116.13235474 57.78111649]
[115.52447510 42.79343796]
[101.07435608 38.21415329]
[89.06378174 28.96634102]
[80.94309998 16.16672134]
[77.69291687 1.36090803]
[79.70569611 -13.66322231]
[86.73840332 -27.09143448]
[97.94179535 -37.30220413]
[111.96300507 -43.06253433]
[127.10890961 -43.67683792]
[141.55056763 -39.07093048]
[153.54406738 -29.80099869]
[161.64115906 -16.98643494]
[164.86405945 -2.17465734]
[162.82357788 12.84573841]
[155.76614380 26.26096725]
[144.54396057 36.45107269]
[130.51214600 42.18555450]
[131.12004089 57.17323303]
[138.50840759 82.83681488]
[131.21157837 103.25346375]
[116.68274689 112.08715057]
[130.74902344 117.29673004]
[144.81530762 122.50630188]
[158.88159180 127.71588135]
[172.94787598 132.92546082]
[187.01416016 138.13504028]
[203.08396912 116.94696808]
[225.75854492 103.09989929]
[251.89909363 98.48976135]
[277.89471436 103.73530579]
[300.16110229 118.09511566]
[315.63473511 139.57232666]
[329.80371094 134.64889526]
[336.93334961 128.84289551]
[344.31002808 129.77243042]
[358.57589722 125.13717651]
[372.84173584 120.50192261]
[387.10757446 115.86666870]
[397.67266846 103.32430267]
[413.76751709 106.46875000]
[418.83514404 122.06526184]
[407.66238403 134.06948853]
[391.74282837 130.13252258]
[377.47698975 134.76777649]
[363.21115112 139.40303040]
[348.94528198 144.03828430]
[334.72714233 148.81787109]
[320.55816650 153.74130249]
[321.78442383 160.43766785]
[322.36569214 167.22052002]
[322.29669189 174.02789307]
[321.57806396 180.79757690]
[320.21636963 187.46772766]
[334.28265381 192.67730713]
[349.40219116 187.31269836]
[362.94662476 195.91084290]
[364.52578735 211.87599182]
[352.92834473 222.96102905]
[337.05078125 220.66247559]
[329.07308960 206.74359131]
[315.00680542 201.53401184]
[311.21627808 208.26945496]
[306.71737671 214.55583191]
[301.56277466 220.31892395]
[295.81292725 225.49066162]
[289.53530884 230.00988770]
[282.80358887 233.82310486]
[275.69689941 236.88513184]
[268.29876709 239.15959167]
[260.69619751 240.61938477]
[252.97863770 241.24696350]
[245.23692322 241.03462219]
[237.56224060 239.98451233]
[230.04496765 238.10865784]
[222.77372742 235.42880249]
[215.83422852 231.97619629]
[209.30833435 227.79116821]
[203.27307129 222.92271423]
[197.79971313 217.42787170]
[192.95295715 211.37112427]
[188.79011536 204.82354736]
[185.36051941 197.86206055]
[182.70483398 190.56846619]
[180.85466003 183.02854919]
[179.83212280 175.33097839]
[179.64958191 167.56634521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 94]
[2 93]
[3 92]
[4 91]
[5 90]
[6 89]
[7 20]
[8 19]
[9 18]
[10 17]
[21 50]
[22 49]
[23 48]
[24 47]
[51 63]
[52 62]
[53 61]
[54 60]
[67 86]
[68 85]
[100 116]
[101 115]
[103 114]
[104 113]
[105 112]
[106 111]
[121 129]
[122 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
