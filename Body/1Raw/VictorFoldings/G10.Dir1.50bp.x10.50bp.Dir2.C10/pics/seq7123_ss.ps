%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCAAACCUACGCCAAAAUCCAUUUCACUAUCAUAUUCAUCGGCGUAAAUCUAACUUUCUxxxxxxxxxxUCCACUUCAAGUCAACUAGGACUCAUAAUAGUUACAAUCGGCAUCAACCAACCACACCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[108.12740326 301.24395752]
[108.12740326 286.24395752]
[108.12740326 271.24395752]
[108.12740326 256.24395752]
[108.12740326 241.24397278]
[108.12740326 226.24397278]
[108.12740326 211.24397278]
[108.12740326 196.24397278]
[108.12740326 181.24397278]
[108.12740326 166.24397278]
[96.47318268 165.97369385]
[85.16188812 163.68946838]
[74.53514862 159.50225830]
[64.90657806 153.57977295]
[56.55246735 146.14022827]
[49.70393753 137.44447327]
[44.54060364 127.78700256]
[41.18601227 117.48604584]
[39.70492172 106.87315369]
[24.70573425 106.71711731]
[9.70654488 106.56108093]
[-5.29264307 106.40504456]
[-20.29183197 106.24900818]
[-35.29101944 106.09297180]
[-50.10877991 108.42407990]
[-64.33555603 113.17789459]
[-78.56233978 117.93170929]
[-86.98423004 131.58642578]
[-102.92755890 133.37237549]
[-114.16197968 121.91954803]
[-112.06938934 106.01354980]
[-98.25505829 97.85611725]
[-83.31615448 103.70492554]
[-69.08937073 98.95111084]
[-54.86259460 94.19729614]
[-69.41731262 90.56960297]
[-81.90702820 82.26255798]
[-90.87957001 70.24201965]
[-95.29171753 55.90559769]
[-94.63046265 40.92018127]
[-88.97269440 27.02810860]
[-78.97623444 15.84460163]
[-65.80336761 8.66995811]
[-50.98568344 6.33836699]
[-36.24602890 9.12092018]
[-23.29817009 16.69409180]
[-13.64754295 28.17735863]
[-8.41621685 42.23556519]
[-8.21243477 57.23418045]
[-13.05988979 71.42932892]
[-22.39497185 83.17054749]
[-35.13498306 91.09378815]
[-20.13579559 91.24982452]
[-5.13660669 91.40586090]
[9.86258221 91.56189728]
[24.86177063 91.71793365]
[39.86095810 91.87397003]
[42.72153854 79.95218658]
[47.91995239 68.84867096]
[55.24402618 59.01659393]
[64.39482880 50.85726547]
[74.99885559 44.70371246]
[86.62331390 40.80708694]
[98.79374695 39.32643509]
[100.35132599 24.40752220]
[101.90890503 9.48860931]
[103.46649170 -5.43030310]
[89.42692566 -10.97946453]
[77.40583038 -20.11159515]
[68.29524231 -32.14903259]
[62.77124023 -46.19851303]
[61.24373627 -61.21747971]
[63.82607651 -76.09141541]
[70.32663727 -89.71659088]
[80.26303864 -101.08190918]
[92.89792633 -109.34400177]
[107.29371643 -113.88976288]
[122.38213348 -114.38185883]
[137.04353333 -110.78379059]
[150.18992615 -103.36254120]
[160.84576416 -92.66882324]
[168.22032166 -79.49618530]
[171.76635742 -64.82212067]
[171.22073364 -49.73553848]
[166.62393188 -35.35597229]
[158.31706238 -22.75047302]
[146.91654968 -12.85445881]
[133.26840210 -6.40227699]
[118.38539886 -3.87272191]
[116.82781982 11.04619026]
[115.27024078 25.96510315]
[113.71265411 40.88401413]
[135.97581482 51.12794495]
[152.37197876 69.34200287]
[166.15435791 63.42204285]
[179.93673706 57.50207901]
[193.71911621 51.58211517]
[207.50151062 45.66215134]
[209.22836304 30.40064812]
[218.36752319 18.05677032]
[232.46060181 11.95096016]
[247.71661377 13.72565079]
[260.03176880 22.90345764]
[266.09338379 37.01559830]
[264.27087402 52.26597977]
[255.05451965 64.55232239]
[240.92344666 70.56966400]
[225.67886353 68.69936371]
[213.42146301 59.44453430]
[199.63908386 65.36449432]
[185.85670471 71.28446198]
[172.07432556 77.20442200]
[158.29194641 83.12438965]
[160.79136658 90.36241150]
[162.38230896 97.96209717]
[163.01348877 105.80820465]
[162.64837646 113.77835083]
[161.26617432 121.74489594]
[158.86257935 129.57702637]
[155.45022583 137.14283752]
[168.83651733 143.91094971]
[183.77189636 138.74276733]
[197.95054626 145.72427368]
[202.96052551 160.71345520]
[195.82951355 174.81750488]
[180.78820801 179.66873169]
[166.76033020 172.38899231]
[162.06840515 157.29724121]
[148.68211365 150.52911377]
[142.29344177 154.45782471]
[150.79620361 166.81513977]
[159.29896545 179.17243958]
[167.80172729 191.52975464]
[177.83409119 202.68106079]
[171.50703430 216.28137207]
[156.51504517 215.79100037]
[151.09022522 201.80647278]
[143.89884949 188.64273071]
[136.70745850 175.47898865]
[129.51608276 162.31526184]
[123.12740326 166.24397278]
[123.12740326 181.24397278]
[123.12740326 196.24397278]
[123.12740326 211.24397278]
[123.12740326 226.24397278]
[123.12740326 241.24397278]
[123.12740326 256.24395752]
[123.12740326 271.24395752]
[123.12740326 286.24395752]
[123.12740326 301.24395752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[19 57]
[20 56]
[21 55]
[22 54]
[23 53]
[24 52]
[25 35]
[26 34]
[27 33]
[64 92]
[65 91]
[66 90]
[67 89]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[120 129]
[121 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
