%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUCCCCUAAUAAUCGGUGCCCCCGAUAUGGCGUUUCCCCGCAUAAACAACAUAAGCUUCUxxxxxxxxxxACGCCUGAACGCAGGCACAUACUUCCUAUUCUACACCCUAGUAGGCUCCCUUCCCCUACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[85.98062134 406.02600098]
[85.98062134 391.02600098]
[85.98062134 376.02600098]
[85.98062134 361.02600098]
[85.98062134 346.02600098]
[85.98062134 331.02600098]
[85.98062134 316.02600098]
[85.98062134 301.02600098]
[85.98062134 286.02600098]
[85.98062134 271.02600098]
[71.28505707 268.12524414]
[57.43340683 262.41125488]
[44.95875168 254.10192871]
[34.34157181 243.51509094]
[25.99125481 231.05627441]
[20.23028564 217.20330811]
[17.28181076 202.48785400]
[17.26098824 187.47514343]
[20.17048836 172.74217224]
[25.90032768 158.85551453]
[34.23201752 146.34962463]
[44.84690094 135.70617676]
[57.33833694 127.33556366]
[71.22727203 121.56105804]
[85.98062134 118.60631561]
[81.07506561 89.83638000]
[73.08515167 77.14144897]
[65.09523010 64.44651794]
[57.10531616 51.75158691]
[49.11539841 39.05665970]
[33.96484375 35.43748093]
[26.04277802 22.44919777]
[29.58647919 8.02776337]
[21.59656334 -4.66716623]
[6.30878258 -4.18651533]
[-7.07857895 -11.37507248]
[-15.01755428 -24.21403885]
[-15.46119499 -39.20267105]
[-8.39044857 -52.31259918]
[-16.38036537 -65.00753021]
[-24.37028122 -77.70245361]
[-32.36019897 -90.39738464]
[-40.35011292 -103.09231567]
[-54.19187164 -97.22700500]
[-68.79528046 -93.65814972]
[-83.78206635 -92.47820282]
[-98.76404572 -93.71772003]
[-113.35314941 -97.34459686]
[-127.17148590 -103.26489258]
[-139.86111450 -111.32525635]
[-151.09335327 -121.31689453]
[-160.57725525 -132.98101807]
[-168.06718445 -146.01548767]
[-173.36909485 -160.08267212]
[-176.34568787 -174.81820679]
[-176.91986084 -189.84040833]
[-175.07672119 -204.76016235]
[-170.86401367 -219.19100952]
[-164.39086914 -232.75915527]
[-155.82496643 -245.11315918]
[-145.38815308 -255.93301392]
[-133.35079956 -264.93844604]
[-120.02468109 -271.89624023]
[-105.75498199 -276.62612915]
[-90.91131592 -279.00561523]
[-75.87818146 -278.97305298]
[-61.04497147 -276.52929688]
[-46.79589462 -271.73764038]
[-33.50003815 -264.72219849]
[-21.50180054 -255.66468811]
[-11.11196041 -244.79972839]
[-2.59964204 -232.40873718]
[3.81466532 -218.81268311]
[7.96481562 -204.36372375]
[9.74331093 -189.43612671]
[9.10408211 -174.41654968]
[6.06368828 -159.69404602]
[0.70088261 -145.64996338]
[-6.84542561 -132.64805603]
[-16.37976837 -121.02513123]
[-27.65518379 -111.08222961]
[-19.66526794 -98.38730621]
[-11.67535210 -85.69237518]
[-3.68543553 -72.99744415]
[4.30448055 -60.30251312]
[19.18296623 -61.00696564]
[32.50501251 -54.12372208]
[40.64683151 -41.41242218]
[41.33749771 -26.23283577]
[34.29149246 -12.65708256]
[42.28141022 0.03784709]
[56.81676483 3.08071160]
[65.10051727 15.84135628]
[61.81032944 31.06674194]
[69.80024719 43.76167297]
[77.79016113 56.45660400]
[85.78007507 69.15153503]
[93.76999664 81.84645844]
[92.37348938 66.91161346]
[101.35231781 54.89575958]
[116.07068634 52.00271988]
[128.92947388 59.72616959]
[133.28964233 74.07848358]
[126.90005493 87.64952087]
[113.05760193 93.43258667]
[128.01785278 94.52390289]
[142.97808838 95.61521149]
[157.93833923 96.70652008]
[164.14241028 94.13415527]
[169.84181213 94.99906921]
[173.49403381 98.16716766]
[188.39593506 99.87985992]
[203.29783630 101.59255219]
[216.70648193 92.78416443]
[231.90786743 97.91226959]
[237.24078369 113.04301453]
[228.61428833 126.56939697]
[212.64587402 128.11512756]
[201.58514404 116.49445343]
[186.68324280 114.78176117]
[171.78134155 113.06907654]
[156.84703064 111.66677094]
[141.88677979 110.57546234]
[126.92653656 109.48414612]
[111.96628571 108.39283752]
[100.98062134 118.60631561]
[115.73397827 121.56105804]
[129.62290955 127.33556366]
[142.11434937 135.70617676]
[152.72923279 146.34962463]
[161.06091309 158.85551453]
[166.79075623 172.74217224]
[169.70025635 187.47514343]
[169.67942810 202.48785400]
[166.73095703 217.20330811]
[160.96998596 231.05627441]
[152.61967468 243.51509094]
[142.00250244 254.10192871]
[129.52783203 262.41125488]
[115.67618561 268.12524414]
[100.98062134 271.02600098]
[100.98062134 286.02600098]
[100.98062134 301.02600098]
[100.98062134 316.02600098]
[100.98062134 331.02600098]
[100.98062134 346.02600098]
[100.98062134 361.02600098]
[100.98062134 376.02600098]
[100.98062134 391.02600098]
[100.98062134 406.02600098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[25 126]
[26 98]
[27 97]
[28 96]
[29 95]
[30 94]
[33 91]
[34 90]
[39 85]
[40 84]
[41 83]
[42 82]
[43 81]
[105 125]
[106 124]
[107 123]
[108 122]
[111 121]
[112 120]
[113 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
