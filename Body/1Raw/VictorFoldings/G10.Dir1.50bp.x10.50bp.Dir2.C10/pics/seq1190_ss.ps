%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCGAUUAACCCAAGUCAAUAGAAGCCGGCGUAAAGAGUGUUUUAGAUCACCCCCUCCCCAAxxxxxxxxxxAAAGGACCUGGCGGUGCUUCAUAUCCCUCUAGAGGAGCCUGUUCUGUAAUCGAUAAACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-29.64476967 125.20916748]
[-44.50781631 127.23150635]
[-59.37086487 129.25384521]
[-74.23390961 131.27616882]
[-89.09695435 133.29850769]
[-103.96000671 135.32084656]
[-118.82305145 137.34317017]
[-133.68609619 139.36550903]
[-148.54914856 141.38784790]
[-163.41218567 143.41018677]
[-176.04319763 152.93740845]
[-189.69743347 146.98667908]
[-204.56048584 149.00900269]
[-219.42352295 151.03134155]
[-234.28657532 153.05368042]
[-249.07928467 155.53878784]
[-263.78723145 158.48428345]
[-278.49520874 161.42976379]
[-282.50698853 164.96884155]
[-287.02749634 166.42402649]
[-291.16079712 165.95764160]
[-294.21105957 164.06996155]
[-306.84207153 173.59718323]
[-320.49630737 167.64645386]
[-335.35934448 169.66879272]
[-338.03375244 184.55847168]
[-345.18020630 197.89201355]
[-356.09857178 208.36312866]
[-369.71920776 214.94596863]
[-384.70767212 216.99559021]
[-399.59558105 214.31121826]
[-412.92431641 207.15583801]
[-423.38812256 196.23043823]
[-429.96182251 182.60540771]
[-432.00140381 167.61557007]
[-429.30706787 152.72947693]
[-422.14273071 139.40551758]
[-411.21032715 128.94905090]
[-397.58090210 122.38447571]
[-382.58969116 120.35493469]
[-367.70541382 123.05925751]
[-354.38626099 130.23249817]
[-343.93713379 141.17190552]
[-337.38168335 154.80574036]
[-322.51864624 152.78340149]
[-310.95074463 143.40083313]
[-296.23339844 149.20690918]
[-281.44067383 146.72180176]
[-266.73272705 143.77632141]
[-252.02476501 140.83082581]
[-249.75877380 138.05004883]
[-246.00477600 136.25862122]
[-241.25694275 136.15676880]
[-236.30891418 138.19062805]
[-221.44586182 136.16828918]
[-206.58280945 134.14596558]
[-191.71977234 132.12362671]
[-180.15185547 122.74105072]
[-165.43452454 128.54713440]
[-150.57147217 126.52480316]
[-135.70843506 124.50246429]
[-120.84538269 122.48013306]
[-105.98233795 120.45779419]
[-91.11929321 118.43546295]
[-76.25624847 116.41312408]
[-61.39319611 114.39079285]
[-46.53015137 112.36846161]
[-31.66710472 110.34612274]
[-31.65152359 89.45748138]
[-28.34273911 68.83255005]
[-21.82351685 48.98726654]
[-12.25693417 30.41803932]
[0.11770710 13.58937454]
[14.99085999 -1.07776546]
[31.99047852 -13.21648979]
[50.69132614 -22.52315331]
[70.62561035 -28.76495552]
[91.29467773 -31.78575706]
[112.18151093 -31.50999832]
[132.76362610 -27.94457245]
[152.52616882 -21.17867088]
[170.97479248 -11.38153744]
[179.74099731 -23.55337334]
[188.50721741 -35.72521210]
[190.29374695 -51.44522476]
[204.01020813 -57.25106049]
[212.77642822 -69.42289734]
[221.54263306 -81.59473419]
[222.64967346 -97.95647430]
[237.49005127 -104.93469238]
[250.79722595 -95.35080719]
[248.88194275 -79.06388855]
[233.71446228 -72.82852936]
[224.94825745 -60.65668869]
[216.18205261 -48.48485184]
[215.02253723 -33.63544846]
[200.67904663 -26.95900345]
[191.91284180 -14.78716660]
[183.14663696 -2.61533022]
[192.75253296 5.97747469]
[201.47517395 15.46564293]
[209.23147583 25.75881958]
[215.94758606 36.75898361]
[221.55953979 48.36138153]
[226.01390076 60.45552826]
[229.26824951 72.92625427]
[231.29159546 85.65479279]
[246.27131653 84.87494659]
[261.25103760 84.09510040]
[273.01504517 73.18697357]
[288.85595703 75.72572327]
[296.62194824 89.76384735]
[290.35565186 104.53248596]
[274.86398315 108.70241547]
[262.03088379 99.07481384]
[247.05116272 99.85466003]
[232.07144165 100.63450623]
[231.55094910 111.73103333]
[230.09977722 122.74456787]
[227.72821045 133.59719849]
[224.45303345 144.21212769]
[220.29737854 154.51429749]
[215.29069519 164.43078613]
[209.46835327 173.89144897]
[202.87158203 182.82937622]
[195.54704285 191.18130493]
[187.54653931 198.88818359]
[178.92668152 205.89544678]
[169.74845886 212.15356445]
[160.07678223 217.61822510]
[149.98010254 222.25080872]
[139.52981567 226.01849365]
[128.79988098 228.89466858]
[117.86621094 230.85896301]
[106.80612946 231.89747620]
[95.69790649 232.00288391]
[84.62010956 231.17442322]
[73.65113068 229.41795349]
[62.86854935 226.74591064]
[52.34866333 223.17718506]
[42.16588593 218.73703003]
[32.39226151 213.45687866]
[23.09693718 207.37405396]
[14.34566689 200.53160095]
[6.20036554 192.97793579]
[-1.28134263 184.76649475]
[-8.04652786 175.95535278]
[-14.04732895 166.60687256]
[-19.24129295 156.78717041]
[-23.59167480 146.56571960]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 68]
[2 67]
[3 66]
[4 65]
[5 64]
[6 63]
[7 62]
[8 61]
[9 60]
[10 59]
[12 57]
[13 56]
[14 55]
[15 54]
[16 50]
[17 49]
[18 48]
[22 47]
[24 45]
[25 44]
[82 99]
[83 98]
[84 97]
[86 95]
[87 94]
[88 93]
[107 117]
[108 116]
[109 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
