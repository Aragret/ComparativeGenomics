%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUAAUAAUCAUAAUAGCUAUAGCAAUAAAACUAGGAAUAGCCCCCUUUCACUUCUGAGUCxxxxxxxxxxUAACUAGUUUUGACAACAUUCAAAAAAGAGUAAUAAACUUCGCCUUAAUUUUAAUAAUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[137.21508789 326.63403320]
[137.21508789 311.63403320]
[137.21508789 296.63403320]
[137.21508789 281.63403320]
[137.21508789 266.63403320]
[137.21508789 251.63404846]
[137.21508789 236.63404846]
[137.21508789 221.63404846]
[137.21508789 206.63404846]
[137.21508789 191.63404846]
[133.50892639 177.09910583]
[126.32641602 163.93052673]
[119.14390564 150.76194763]
[106.25704193 143.29348755]
[106.44166565 127.47335815]
[99.25915527 114.30477142]
[87.42492676 106.85878754]
[87.57225800 92.87773895]
[80.38974762 79.70915222]
[66.98914337 71.29878998]
[67.68750763 56.42056274]
[53.71855545 60.89469528]
[39.16769409 62.71148682]
[24.53572655 61.80994415]
[10.32597351 58.22260666]
[-2.97305822 52.07437515]
[-14.90446091 43.57816696]
[-25.05862236 33.02753067]
[-33.08729172 20.78651810]
[-38.71551895 7.27711487]
[-41.75108337 -7.03530693]
[-42.09103012 -21.65801430]
[-39.72519302 -36.08788300]
[-34.73647690 -49.82870483]
[-27.29794884 -62.40825272]
[-17.66684341 -73.39450836]
[-6.17566299 -82.41049194]
[-13.08266163 -95.72564697]
[-19.98966026 -109.04080200]
[-26.89665794 -122.35595703]
[-33.80365753 -135.67111206]
[-40.71065521 -148.98626709]
[-47.61765289 -162.30142212]
[-54.52465439 -175.61657715]
[-68.58366394 -171.43402100]
[-83.16917419 -169.92033386]
[-97.77921295 -171.12608337]
[-111.91126251 -175.00827026]
[-125.07951355 -181.43183899]
[-136.83157349 -190.17442322]
[-146.76405334 -200.93402100]
[-154.53631592 -213.33941650]
[-159.88229370 -226.96298218]
[-162.61944580 -241.33544922]
[-162.65510559 -255.96206665]
[-159.98959351 -270.33959961]
[-154.71609497 -283.97366333]
[-147.01747131 -296.39575195]
[-137.15989685 -307.17926025]
[-125.48363495 -315.95422363]
[-132.11213684 -329.41018677]
[-138.74063110 -342.86614990]
[-152.66545105 -351.52822876]
[-151.85594177 -367.90737915]
[-137.14485168 -375.15414429]
[-123.66569519 -365.81369019]
[-125.28466797 -349.49465942]
[-118.65616608 -336.03869629]
[-112.02767181 -322.58273315]
[-97.20914459 -326.62286377]
[-81.88360596 -327.70989990]
[-66.63398743 -325.80065918]
[-52.04066849 -320.96603394]
[-38.65942764 -313.38821411]
[-27.00023270 -303.35391235]
[-17.50782967 -291.24356079]
[-10.54477501 -277.51675415]
[-6.37757969 -262.69494629]
[-5.16651583 -247.34152222]
[-6.95945263 -232.04046631]
[-11.68996525 -217.37409973]
[-19.17979431 -203.90097046]
[-29.14556122 -192.13452148]
[-41.20949554 -182.52357483]
[-34.30249786 -169.20841980]
[-27.39550018 -155.89326477]
[-20.48850060 -142.57810974]
[-13.58150291 -129.26295471]
[-6.67450428 -115.94779968]
[0.23249431 -102.63264465]
[7.13949299 -89.31748962]
[21.87075615 -93.66504669]
[37.17036438 -95.07067108]
[52.45640564 -93.47910309]
[67.14714050 -88.94910431]
[80.68313599 -81.65129089]
[92.54856110 -71.86173248]
[102.29084778 -59.95147705]
[109.53796387 -46.37251282]
[114.01260376 -31.64060211]
[115.54281616 -16.31569290]
[114.06858826 -0.98064041]
[109.64421082 13.78096199]
[102.43630219 27.40699577]
[92.71747589 39.37821960]
[80.85609436 49.23805618]
[93.74295807 56.70651627]
[93.55833435 72.52664185]
[100.74084473 85.69522858]
[112.57507324 93.14121246]
[112.42774200 107.12226105]
[119.61025238 120.29084778]
[133.01086426 128.70121765]
[132.31248474 143.57943726]
[139.49499512 156.74801636]
[146.67750549 169.91659546]
[147.37559509 154.93286133]
[151.57382202 140.53233337]
[159.03726196 127.52091217]
[169.34823608 116.62670898]
[181.92974854 108.45936584]
[196.07772827 103.47593689]
[211.00045776 101.95529175]
[225.86283875 103.98253632]
[239.83316040 109.44422150]
[252.12965393 118.03470612]
[262.06417847 129.27325439]
[269.08081055 142.53097534]
[272.78689575 157.06593323]
[272.97500610 172.06474304]
[269.63467407 186.68809509]
[262.95275879 200.11761475]
[253.30323792 211.60180664]
[241.22608948 220.49801636]
[227.39714050 226.30838013]
[212.59028625 228.70774841]
[197.63412476 227.56187439]
[183.36560059 222.93487549]
[170.58319092 215.08566284]
[160.00221252 204.45350647]
[152.21508789 191.63404846]
[152.21508789 206.63404846]
[152.21508789 221.63404846]
[152.21508789 236.63404846]
[152.21508789 251.63404846]
[152.21508789 266.63403320]
[152.21508789 281.63403320]
[152.21508789 296.63403320]
[152.21508789 311.63403320]
[152.21508789 326.63403320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 116]
[12 115]
[13 114]
[15 112]
[16 111]
[18 109]
[19 108]
[21 106]
[37 91]
[38 90]
[39 89]
[40 88]
[41 87]
[42 86]
[43 85]
[44 84]
[60 69]
[61 68]
[62 67]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
