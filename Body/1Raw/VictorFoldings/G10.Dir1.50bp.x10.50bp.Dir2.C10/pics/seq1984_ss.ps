%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCCAAAUAAAGUAUAGGCGAUAGAAAUUGAAACCUGGCGCAAUAGAUAUAGUACCGCAAxxxxxxxxxxCAGGAGUAUCAAUCACCUGAGCUCACCAUAGUCUAAUAGAAAACAACCGAAACCAAAUAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[214.35292053 415.16036987]
[214.04086304 400.16360474]
[213.72880554 385.16687012]
[213.41674805 370.17010498]
[213.10469055 355.17337036]
[212.79263306 340.17660522]
[212.48057556 325.17984009]
[212.16853333 310.18310547]
[211.85647583 295.18634033]
[207.39965820 280.86373901]
[199.14736938 268.33779907]
[190.89508057 255.81182861]
[177.35087585 261.07583618]
[162.99992371 263.39581299]
[148.47486877 262.66693115]
[134.41650391 258.91882324]
[121.44563293 252.31436157]
[110.13554382 243.14257812]
[100.98672485 231.80607605]
[94.40470886 218.80334473]
[90.68210602 204.70675659]
[89.98556519 190.13748169]
[92.34836578 175.73805237]
[97.66876984 162.14405823]
[105.71447754 149.95602417]
[116.13269806 139.71298218]
[108.14278412 127.01805878]
[100.15286255 114.32312775]
[87.87723541 107.62980652]
[87.15220642 93.66678619]
[79.16229248 80.97185516]
[74.37928009 95.18885040]
[61.03096771 102.03154755]
[46.69590759 97.61498260]
[39.51288986 84.44667816]
[43.56009674 70.00299072]
[56.53971863 62.48438263]
[71.08376312 66.16049194]
[64.73663330 52.56953812]
[58.38949966 38.97858810]
[52.04236984 25.38763618]
[34.03758240 19.65816498]
[26.01407623 2.90344238]
[32.60839462 -14.12337208]
[25.70139694 -27.43852806]
[18.79439926 -40.75368500]
[11.88739967 -54.06884003]
[3.37630987 -66.42041016]
[-6.60641670 -77.61618042]
[-16.58914375 -88.81194305]
[-30.79119301 -83.45786285]
[-45.96829224 -83.59960938]
[-60.06786346 -89.21802521]
[-71.18305206 -99.55325317]
[-77.81062317 -113.20755005]
[-79.05425262 -128.33427429]
[-74.74575043 -142.88766479]
[-65.46779633 -154.89949036]
[-52.47517014 -162.74526978]
[-37.52501297 -165.36390686]
[-22.63921165 -162.40124512]
[-9.83094692 -154.25798035]
[-0.83243173 -142.03541565]
[3.13935804 -127.38654327]
[1.54727077 -112.29251862]
[-5.39337730 -98.79467010]
[4.58934927 -87.59890747]
[14.57207584 -76.40313721]
[12.97900772 -91.31830597]
[17.90165710 -105.48754883]
[28.39901161 -116.20228577]
[42.46439743 -121.41428375]
[57.40907669 -120.12721252]
[70.37622833 -112.58712769]
[78.88705444 -100.23536682]
[81.31462097 -85.43310547]
[77.19487762 -71.00994110]
[67.31535339 -59.72299957]
[53.56462097 -53.72989273]
[38.57126617 -54.17626190]
[25.20255661 -60.97583771]
[32.10955429 -47.66068268]
[39.01655197 -34.34552765]
[45.92354965 -21.03037071]
[57.36215210 -20.00619698]
[66.96852875 -13.49580383]
[72.26679993 -3.03625631]
[71.82350159 8.80065155]
[65.63332367 19.04050636]
[71.98045349 32.63145828]
[78.32758331 46.22240829]
[84.67471313 59.81335831]
[91.85721588 72.98194122]
[99.84713745 85.67687225]
[112.12276459 92.37019348]
[112.84779358 106.33321381]
[120.83770752 119.02814484]
[128.82762146 131.72306824]
[143.44760132 126.55072021]
[158.84326172 124.74666595]
[174.24913025 126.39750671]
[188.89984131 131.41815186]
[202.06829834 139.55613708]
[213.10163879 150.40441895]
[221.45368958 163.42164612]
[226.71195984 177.95919800]
[228.61798096 193.29354858]
[227.08012390 208.66218567]
[222.17787170 223.30162048]
[214.15776062 236.48527527]
[203.42103577 247.55953979]
[211.67332458 260.08547974]
[219.92561340 272.61145020]
[219.47953796 257.61810303]
[222.20664978 242.86807251]
[227.98416138 229.02537537]
[236.55203247 216.71311951]
[247.52455139 206.48553467]
[260.40783691 198.80299377]
[274.62191772 194.01133728]
[289.52694702 192.32626343]
[304.45202637 193.82362366]
[318.72528076 198.43600464]
[331.70422363 205.95579529]
[342.80459595 216.04447937]
[351.52673340 228.24794006]
[357.47802734 242.01683044]
[360.39053345 256.73135376]
[360.13320923 271.72915649]
[356.71759033 286.33508301]
[350.29742432 299.89169312]
[341.16177368 311.78875732]
[329.72180176 321.49066162]
[316.49252319 328.56076050]
[302.06942749 332.68075562]
[287.10177612 333.66519165]
[272.26330566 331.46975708]
[258.22198486 326.19329834]
[245.60986328 318.07327271]
[234.99467468 307.47528076]
[226.85322571 294.87429810]
[227.16528320 309.87103271]
[227.47734070 324.86779785]
[227.78939819 339.86456299]
[228.10145569 354.86129761]
[228.41349792 369.85806274]
[228.72555542 384.85479736]
[229.03761292 399.85156250]
[229.34967041 414.84832764]
[231.94067383 434.05603027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 113]
[11 112]
[12 111]
[26 98]
[27 97]
[28 96]
[30 94]
[31 93]
[38 92]
[39 91]
[40 90]
[41 89]
[44 84]
[45 83]
[46 82]
[47 81]
[48 68]
[49 67]
[50 66]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
