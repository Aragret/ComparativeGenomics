%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUAACCAGAUUUCAAAUUUUAUCUUUUGGCGGUAUGCACUUUUAACAGUCACCCCCCAACxxxxxxxxxxUUCACUUCCACUCCAUAACGCUCCUCAUACUAGGCCUACUAACCAACACACUAACCAUAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[164.31910706 359.08074951]
[164.31910706 344.08074951]
[164.31910706 329.08074951]
[164.31910706 314.08074951]
[164.31910706 299.08074951]
[164.31910706 284.08074951]
[164.31910706 269.08074951]
[164.31910706 254.08076477]
[164.31910706 239.08076477]
[164.31910706 224.08076477]
[160.16122437 209.66854858]
[152.17131042 196.97361755]
[144.18139648 184.27868652]
[129.30290222 184.98313904]
[115.98085785 178.09989929]
[107.83904266 165.38859558]
[107.14837646 150.20901489]
[114.19438171 136.63325500]
[106.20446014 123.93832397]
[95.39184570 125.74249268]
[84.25183868 122.63459778]
[75.01374817 114.71332550]
[69.73754883 103.08062744]
[55.41495132 107.53743744]
[41.09235764 111.99425507]
[26.76975822 116.45107269]
[21.91860771 131.19033813]
[9.31076622 140.23588562]
[-6.20579481 140.10951233]
[-18.66464043 130.85983276]
[-23.27508926 116.04350281]
[-18.26433182 101.35773468]
[-5.55910492 92.44948578]
[9.95517254 92.74417114]
[22.31294250 102.12847137]
[36.63554001 97.67166138]
[50.95813751 93.21484375]
[65.28073120 88.75802612]
[72.73564148 75.74171448]
[69.33266449 61.13282394]
[65.92968750 46.52393341]
[55.26335144 34.83890533]
[59.91153717 20.68815994]
[56.50855637 6.07926702]
[53.10557938 -8.52962494]
[49.70260239 -23.13851738]
[34.75778961 -21.62823677]
[19.74254608 -22.04150963]
[4.90343523 -24.37155151]
[-9.51587296 -28.58009911]
[-23.27860069 -34.59804535]
[-36.15874863 -42.32656860]
[-47.94481659 -51.63876343]
[-58.44326401 -62.38171005]
[-67.48169708 -74.37900543]
[-74.91169739 -87.43363190]
[-80.61125946 -101.33123779]
[-84.48679352 -115.84359741]
[-86.47464752 -130.73240662]
[-86.54219055 -145.75318909]
[-84.68830872 -160.65927124]
[-80.94345093 -175.20590210]
[-75.36910248 -189.15420532]
[-68.05680084 -202.27511597]
[-59.12662506 -214.35321045]
[-48.72521210 -225.19013977]
[-37.02336884 -234.60795593]
[-24.21324348 -242.45199585]
[-10.50519371 -248.59346008]
[3.87568402 -252.93151855]
[18.69324112 -255.39491272]
[33.70416260 -255.94320679]
[48.66194916 -254.56738281]
[63.32098770 -251.29005432]
[77.44055939 -246.16500854]
[90.78881073 -239.27642822]
[103.14654541 -230.73742676]
[114.31084442 -220.68820190]
[124.09838104 -209.29379272]
[132.34843445 -196.74130249]
[138.92552185 -183.23686218]
[143.72164917 -169.00219727]
[146.65806580 -154.27108765]
[147.68653870 -139.28540039]
[146.79019165 -124.29124451]
[143.98373413 -109.53481293]
[139.31326294 -95.25843811]
[132.85545349 -81.69653320]
[124.71636200 -69.07181549]
[115.02964020 -57.59158325]
[103.95435333 -47.44435501]
[91.67235565 -38.79675674]
[78.38534546 -31.79078674]
[64.31149292 -26.54149628]
[67.71446991 -11.93260384]
[71.11744690 2.67628908]
[74.52043152 17.28518105]
[84.94335938 27.92528152]
[80.53858185 43.12095261]
[83.94155884 57.72984695]
[87.34453583 72.33873749]
[107.06459808 71.87730408]
[121.95990753 83.32390594]
[126.14304352 100.67248535]
[118.89939117 115.94841003]
[126.88930511 128.64334106]
[142.17709351 128.16268921]
[155.56445312 135.35124207]
[163.50341797 148.19021606]
[163.94706726 163.17884827]
[156.87631226 176.28877258]
[164.86624146 188.98370361]
[172.85615540 201.67863464]
[172.72209167 186.67922974]
[175.75546265 171.98913574]
[181.81971741 158.26963806]
[190.64186096 146.13827515]
[201.82478333 136.14117432]
[214.86509705 128.72831726]
[229.17578125 124.23341370]
[244.11265564 122.85878754]
[259.00335693 124.66631317]
[273.17758179 129.57463074]
[285.99725342 137.36280823]
[296.88534546 147.68023682]
[305.35171509 160.06251526]
[311.01525879 173.95222473]
[313.62103271 188.72416687]
[313.05175781 203.71334839]
[309.33300781 218.24507141]
[302.63223267 231.66519165]
[293.25103760 243.36959839]
[281.61172485 252.83143616]
[268.23822021 259.62478638]
[253.73252869 263.44381714]
[238.74761963 264.11666870]
[223.95803833 261.61300659]
[210.02952576 256.04556274]
[197.58906555 247.66494751]
[187.19665527 236.84838867]
[179.31910706 224.08076477]
[179.31910706 239.08076477]
[179.31910706 254.08076477]
[179.31910706 269.08074951]
[179.31910706 284.08074951]
[179.31910706 299.08074951]
[179.31910706 314.08074951]
[179.31910706 329.08074951]
[179.31910706 344.08074951]
[179.31910706 359.08074951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 113]
[12 112]
[13 111]
[18 106]
[19 105]
[23 38]
[24 37]
[25 36]
[26 35]
[39 101]
[40 100]
[41 99]
[43 97]
[44 96]
[45 95]
[46 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
