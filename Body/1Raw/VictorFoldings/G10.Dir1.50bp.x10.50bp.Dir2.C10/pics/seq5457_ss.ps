%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUAACAUGACUAACACCCUUAAUUCCAUCCACCCUCCUCUCCCUAGGAGGCCUGCCCCCGCUxxxxxxxxxxCCUAUCUAGGCCUUCUUACGAGCCAAAACCUGCCCCUACUCCUCCUAGACCUAACCUGACUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[240.87861633 135.29145813]
[237.72361755 123.94300079]
[235.37242126 112.40097046]
[233.83665466 100.72221375]
[221.51760864 109.09420776]
[207.34326172 102.06580353]
[192.36251831 102.82553864]
[177.38177490 103.58528137]
[162.40101624 104.34501648]
[147.42027283 105.10475159]
[132.43952942 105.86449432]
[128.23690796 120.75990295]
[117.20184326 132.90353394]
[101.04302979 139.19660950]
[82.84243011 137.55879211]
[66.47011566 127.51439667]
[53.13969803 134.39189148]
[39.80927658 141.26937866]
[42.02732086 156.24800110]
[39.25918198 171.13478088]
[31.80512810 184.31491089]
[20.47372055 194.35870361]
[6.49410439 200.17669678]
[-8.61731529 201.13780212]
[-23.22136497 197.13774109]
[-35.73390961 188.61042786]
[-44.79767609 176.48085022]
[-49.42949677 162.06471252]
[-49.12694931 146.92578125]
[-43.92285156 132.70622253]
[-34.38170242 120.94844818]
[-21.53845406 112.92786407]
[-6.78624916 109.51448822]
[8.27470589 111.07856750]
[22.01070976 117.45045471]
[32.93178558 127.93896484]
[46.26220703 121.06147003]
[59.59262466 114.18397522]
[59.74462891 106.68551636]
[44.74771500 106.38126373]
[45.05221558 91.38435364]
[60.04863358 91.68859863]
[60.20063400 84.19013977]
[47.15988159 76.77807617]
[34.11912537 69.36601257]
[21.07836914 61.95394516]
[8.03761482 54.54188156]
[-5.00314045 47.12981415]
[-20.17250824 51.56443024]
[-33.99429703 43.90064240]
[-38.26828766 28.68523598]
[-30.45879173 14.94524479]
[-15.19904900 10.83236217]
[-1.54239297 18.78668785]
[2.40892482 34.08906174]
[15.44967937 41.50112534]
[28.49043465 48.91318893]
[41.53118896 56.32525635]
[54.57194519 63.73731995]
[67.61270142 71.14938354]
[87.57524872 61.16750717]
[108.46968079 62.78192520]
[124.43044281 74.15042877]
[131.67979431 90.88374329]
[146.66053772 90.12400818]
[161.64128113 89.36427307]
[176.62202454 88.60453033]
[191.60278320 87.84479523]
[206.58352661 87.08506012]
[219.97409058 78.65872192]
[233.07691956 85.74146271]
[234.15632629 65.78549194]
[237.60032654 46.10034943]
[243.35981750 26.96519089]
[251.35289001 8.65134811]
[261.46597290 -8.58152580]
[273.55538940 -24.48913193]
[287.44952393 -38.84598923]
[302.95114136 -51.44864273]
[319.84020996 -62.11852264]
[337.87704468 -70.70449829]
[356.80575562 -77.08501434]
[376.35778809 -81.16979218]
[396.25573730 -82.90112305]
[416.21743774 -82.25469971]
[435.95974731 -79.23992157]
[455.20266724 -73.89978027]
[473.67337036 -66.31024933]
[491.10995483 -56.57919312]
[507.26522827 -44.84483337]
[521.91015625 -31.27379608]
[533.19195557 -41.15921783]
[544.47375488 -51.04464340]
[541.40502930 -66.09385681]
[546.28735352 -80.65609741]
[557.80725098 -90.81420135]
[572.86602783 -93.83569336]
[587.41290283 -88.90779114]
[597.53479004 -77.35608673]
[600.50909424 -62.28793335]
[595.53564453 -47.75658417]
[583.95227051 -37.67089844]
[568.87481689 -34.74387741]
[554.35913086 -39.76287079]
[543.07739258 -29.87744713]
[531.79559326 -19.99202347]
[538.82269287 -10.55273342]
[545.17041016 -0.64356351]
[550.80743408 9.68667984]
[555.70605469 20.38711548]
[559.84204102 31.40503311]
[563.19500732 42.68615723]
[565.74835205 54.17491913]
[567.48956299 65.81471252]
[568.40997314 77.54820251]
[568.50494385 89.31756592]
[567.77410889 101.06482697]
[566.22094727 112.73209381]
[563.85314941 124.26188660]
[560.68231201 135.59739685]
[556.72399902 146.68273926]
[551.99774170 157.46331787]
[546.52673340 167.88597107]
[540.33795166 177.89936829]
[533.46191406 187.45413208]
[525.93231201 196.50315857]
[517.78637695 205.00187683]
[509.06417847 212.90835571]
[499.80862427 220.18363953]
[490.06530762 226.79185486]
[479.88226318 232.70040894]
[469.30963135 237.88017273]
[458.39947510 242.30558777]
[447.20553589 245.95481873]
[435.78295898 248.80987549]
[424.18804932 250.85664368]
[412.47787476 252.08500671]
[400.71017456 252.48889160]
[388.94290161 252.06626892]
[377.23403931 250.81919861]
[365.64129639 248.75378418]
[354.22180176 245.88017273]
[343.03176880 242.21250916]
[332.12640381 237.76881409]
[321.55944824 232.57095337]
[311.38293457 226.64453125]
[301.64703369 220.01869202]
[292.39978027 212.72607422]
[283.68667603 204.80258179]
[275.55075073 196.28723145]
[268.03207397 187.22193909]
[261.16769409 177.65138245]
[254.99148560 167.62266541]
[249.53390503 157.18521118]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 71]
[6 69]
[7 68]
[8 67]
[9 66]
[10 65]
[11 64]
[16 38]
[17 37]
[18 36]
[43 60]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
[91 106]
[92 105]
[93 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
