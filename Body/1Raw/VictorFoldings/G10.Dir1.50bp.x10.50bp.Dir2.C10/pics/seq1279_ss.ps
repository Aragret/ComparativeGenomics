%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACUCACCUGAGUUGUAAAAAACUCCAGUUGACACAAAAUAGACUACGAAAGUGGCUUUAxxxxxxxxxxUUUGAUCUAGAAAUUGCCCUCCUUUUACCCCUACCAUGAGCCCUACAAACAACUAACCUGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 303.16287231]
[92.50000000 288.16287231]
[92.50000000 273.16287231]
[92.50000000 258.16287231]
[92.50000000 243.16285706]
[92.50000000 228.16285706]
[92.50000000 213.16285706]
[92.50000000 198.16285706]
[92.50000000 183.16285706]
[92.50000000 168.16285706]
[76.73948669 164.50871277]
[62.27370453 157.26388550]
[49.90784073 146.83163452]
[40.33020782 133.79263306]
[26.54782867 139.71260071]
[12.76544666 145.63255310]
[3.13913298 158.18821716]
[-11.60864353 156.10198975]
[-25.39102554 162.02195740]
[-39.17340469 167.94192505]
[-52.89345932 174.00492859]
[-66.54969788 180.21034241]
[-80.20594025 186.41574097]
[-93.86218262 192.62115479]
[-99.17784882 207.50466919]
[-113.49639893 214.19456482]
[-128.32289124 208.72184753]
[-134.86102295 194.33335876]
[-129.23185730 179.56556702]
[-114.77504730 173.17991638]
[-100.06758881 178.96490479]
[-86.41134644 172.75950623]
[-72.75511169 166.55409241]
[-59.09886551 160.34869385]
[-54.27919388 154.68156433]
[-45.09336853 154.15953064]
[-31.31098747 148.23957825]
[-17.52860641 142.31961060]
[-8.88810158 130.18737793]
[6.84548378 131.85017395]
[20.62786484 125.93021393]
[34.41024780 120.01025391]
[31.43251419 100.96219635]
[33.87458038 81.83808899]
[41.54341888 64.14955902]
[53.83285522 49.29476929]
[69.77149200 38.44787979]
[88.09949493 32.46627426]
[107.36814880 31.82275772]
[126.05439758 36.56819153]
[133.23690796 23.39961052]
[140.41941833 10.23102760]
[138.70672607 -4.67087460]
[128.72399902 -15.86664104]
[118.74127197 -27.06240654]
[102.87115479 -29.41162682]
[94.93791199 -43.35591507]
[101.02724457 -58.19840622]
[116.46794128 -62.55321121]
[129.41522217 -53.07969666]
[129.93704224 -37.04513168]
[139.91976929 -25.84936714]
[149.90249634 -14.65360165]
[164.90249634 -14.65360165]
[174.88522339 -25.84936714]
[184.86795044 -37.04513168]
[194.85067749 -48.24089813]
[184.90158081 -59.49042511]
[176.35285950 -71.83773041]
[169.32453918 -85.10946655]
[163.91528320 -99.11933136]
[160.20101929 -113.67063904]
[158.23388672 -128.55911255]
[158.04151917 -143.57574463]
[159.62660217 -158.50973511]
[162.96688843 -173.15141296]
[168.01548767 -187.29524231]
[174.70150757 -200.74267578]
[182.93112183 -213.30491638]
[192.58877563 -224.80561829]
[203.53889465 -235.08332825]
[215.62774658 -243.99375916]
[228.68565369 -251.41183472]
[242.52926636 -257.23339844]
[256.96426392 -261.37673950]
[271.78799438 -263.78369141]
[286.79235840 -264.42044067]
[301.76672363 -263.27807617]
[316.50085449 -260.37261963]
[330.78790283 -255.74488831]
[344.42733765 -249.45980835]
[357.22766113 -241.60563660]
[369.00918579 -232.29261780]
[379.60650635 -221.65150452]
[388.87084961 -209.83168030]
[396.67214966 -196.99906921]
[402.90093994 -183.33383179]
[407.46969604 -169.02778625]
[410.31436157 -154.28179932]
[411.39495850 -139.30285645]
[410.69631958 -124.30124664]
[408.22824097 -109.48757172]
[404.02542114 -95.06978607]
[398.14678955 -81.25029755]
[390.67492676 -68.22311401]
[381.71472168 -56.17110443]
[371.39193726 -45.26346970]
[359.85150146 -35.65333557]
[347.25543213 -27.47560883]
[333.78051758 -20.84509468]
[319.61599731 -15.85487747]
[304.96066284 -12.57500839]
[290.02026367 -11.05153275]
[275.00454712 -11.30583858]
[260.12432861 -13.33435535]
[245.58845520 -17.10860634]
[231.60101318 -22.57560539]
[218.35838318 -29.65860558]
[206.04643250 -38.25817108]
[196.06370544 -27.06240654]
[186.08099365 -15.86664104]
[176.09826660 -4.67087460]
[153.58799744 17.41353607]
[146.40548706 30.58211899]
[139.22297668 43.75070190]
[147.26008606 50.31187057]
[154.21534729 58.01045990]
[159.92956543 66.67024231]
[164.27192688 76.09297943]
[167.14302063 86.06297302]
[168.47714233 96.35200500]
[168.24372864 106.72454071]
[166.44815063 116.94314575]
[163.13148499 126.77390289]
[158.36967468 135.99177551]
[152.27169800 144.38574219]
[144.97718811 151.76368713]
[136.65307617 157.95669556]
[127.48994446 162.82299805]
[117.69753265 166.25122070]
[107.50000000 168.16285706]
[107.50000000 183.16285706]
[107.50000000 198.16285706]
[107.50000000 213.16285706]
[107.50000000 228.16285706]
[107.50000000 243.16285706]
[107.50000000 258.16287231]
[107.50000000 273.16287231]
[107.50000000 288.16287231]
[107.50000000 303.16287231]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[14 42]
[15 41]
[16 40]
[18 38]
[19 37]
[20 36]
[21 34]
[22 33]
[23 32]
[24 31]
[50 125]
[51 124]
[52 123]
[53 63]
[54 62]
[55 61]
[64 122]
[65 121]
[66 120]
[67 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
