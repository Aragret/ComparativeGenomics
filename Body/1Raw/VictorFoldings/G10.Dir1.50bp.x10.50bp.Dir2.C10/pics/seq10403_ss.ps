%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCUCUGUGCUAGUAACCACGUUCUCCUGAUCAAAUAUCACUCUCCUACUUACAGGACUCAxxxxxxxxxxUCUUUAACUCCACCAUUAGCACCCAAAGCUAAGAUUCUAAUUUAAACUAUUCUCUGUUCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[195.35638428 385.26412964]
[195.35638428 370.26412964]
[195.35638428 355.26412964]
[195.35638428 340.26412964]
[195.35638428 325.26412964]
[195.35638428 310.26412964]
[195.35638428 295.26412964]
[195.35638428 280.26412964]
[195.35638428 265.26412964]
[195.35638428 250.26414490]
[191.34863281 235.80944824]
[183.62455750 222.95104980]
[175.90046692 210.09265137]
[167.77893066 197.48152161]
[159.26783752 185.12994385]
[150.25030518 173.14311218]
[140.74194336 161.54177856]
[131.23359680 149.94042969]
[121.72523499 138.33909607]
[112.21687317 126.73774719]
[102.70851135 115.13640594]
[89.77046204 107.54650116]
[75.00440216 104.90763855]
[60.23834610 102.26876831]
[45.47229004 99.62990570]
[39.62868500 112.29445648]
[30.91173744 123.16994476]
[19.83890724 131.61842346]
[7.06566906 137.14579773]
[-6.65329504 139.43070984]
[-20.50868416 138.34324646]
[-33.68431854 133.95225525]
[-45.40521622 126.52105713]
[-54.98318863 116.49166870]
[-61.85722733 104.45845795]
[-65.62638092 91.13297272]
[-66.07312775 77.30184174]
[-80.71662903 74.05101013]
[-95.36013031 70.80018616]
[-110.00363159 67.54936218]
[-124.25444794 74.91779327]
[-138.84115601 68.23891449]
[-142.57409668 52.63619995]
[-132.58966064 40.07870865]
[-116.54705811 40.19947433]
[-106.75280762 52.90586090]
[-92.10930634 56.15668488]
[-77.46580505 59.40751266]
[-62.82229996 62.65833664]
[-55.24602890 48.43008423]
[-43.98011017 36.88147354]
[-29.91975594 28.94130325]
[-14.18533134 25.25121307]
[1.96688557 26.11381721]
[17.24502754 31.46791077]
[30.42495346 40.89275360]
[40.44833374 53.64110184]
[46.50762939 68.69847107]
[48.11115646 84.86385345]
[62.87721252 87.50271606]
[77.64326477 90.14157867]
[92.40932465 92.78044128]
[91.70000458 88.06148529]
[92.67654419 82.89727783]
[93.92341614 67.94919586]
[95.17029572 53.00110626]
[80.96738434 47.90799332]
[68.56717682 39.31164169]
[58.81513596 27.79816818]
[52.37617111 14.15257645]
[49.68930435 -0.69475138]
[50.93772888 -15.73150158]
[56.03632355 -29.93244171]
[64.63745880 -42.32933044]
[76.15470123 -52.07692719]
[89.80278015 -58.51062012]
[104.65113831 -61.19175720]
[119.68740845 -59.93752670]
[133.88638306 -54.83344650]
[146.27995300 -46.22752380]
[156.02308655 -34.70652008]
[162.45152283 -21.05596161]
[165.12692261 -6.20656347]
[163.86688232 8.82921791]
[158.75732422 23.02621651]
[150.14662170 35.41646194]
[138.62185669 45.15515900]
[124.96881104 51.57831192]
[110.11837769 54.24797821]
[108.87150574 69.19606781]
[107.62463379 84.14415741]
[117.99713135 73.30850220]
[132.99305725 73.65817261]
[142.84924316 84.96549988]
[141.14877319 99.86879730]
[128.99874878 108.66521454]
[114.30985260 105.62805176]
[123.81821442 117.22939301]
[133.32656860 128.83073425]
[142.83493042 140.43206787]
[152.34329224 152.03341675]
[161.85165405 163.63475037]
[166.11061096 165.05699158]
[169.33810425 167.53778076]
[171.32466125 170.60949707]
[172.03921509 173.78494263]
[171.61941528 176.61885071]
[180.13049316 188.97042847]
[184.96560669 191.25982666]
[188.08674622 194.83905029]
[189.28947449 198.82089233]
[188.75886536 202.36856079]
[196.48295593 215.22695923]
[204.20704651 228.08537292]
[204.34187317 213.08596802]
[207.74919128 198.47808838]
[214.26449585 184.96694946]
[223.57324219 173.20483398]
[235.22601318 163.75959778]
[248.66027832 157.08720398]
[263.22741699 153.50979614]
[278.22424316 153.20008850]
[292.92666626 156.17301941]
[306.62493896 162.28506470]
[318.65774536 171.24114990]
[328.44418335 182.60891724]
[335.51174927 195.83953857]
[339.51925659 210.29429626]
[340.27325439 225.27532959]
[337.73733521 240.05941772]
[332.03390503 253.93280029]
[323.43832397 266.22573853]
[312.36557007 276.34472656]
[299.35018921 283.80126953]
[285.02053833 288.23538208]
[270.06842041 289.43298340]
[255.21568298 287.33627319]
[241.17938232 282.04647827]
[228.63713074 273.81896973]
[218.19444275 263.05093384]
[210.35638428 250.26414490]
[210.35638428 265.26412964]
[210.35638428 280.26412964]
[210.35638428 295.26412964]
[210.35638428 310.26412964]
[210.35638428 325.26412964]
[210.35638428 340.26412964]
[210.35638428 355.26412964]
[210.35638428 370.26412964]
[210.35638428 385.26412964]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 114]
[12 113]
[13 112]
[14 108]
[15 107]
[16 102]
[17 101]
[18 100]
[19 99]
[20 98]
[21 97]
[22 62]
[23 61]
[24 60]
[25 59]
[37 49]
[38 48]
[39 47]
[40 46]
[64 91]
[65 90]
[66 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
