%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCACUCCUAAACACAUCCGUAUUACUCGCAUCAGGAGUAUCAAUCACCUGAGCUCACCAUAGUCUAxxxxxxxxxxGGCAUAAUUAAACUUUACUUCCUCUCUUUCUUCUUCCCACUCAUCCUAACCCUACUCCUAAUCACAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[92.50000000 77.50000000]
[92.50000000 62.50000000]
[92.50000000 47.50000000]
[92.50000000 32.50000000]
[92.50000000 17.50000000]
[92.50000000 2.49999952]
[92.50000000 -12.50000000]
[92.50000000 -27.50000000]
[92.50000000 -42.50000000]
[77.51155853 -43.14538574]
[62.56475830 -44.43500900]
[47.68728256 -46.36648178]
[32.90667725 -48.93623352]
[18.25031281 -52.13949966]
[3.74533057 -55.97034836]
[-10.58140945 -60.42168808]
[-24.70337868 -65.48527527]
[-38.59442520 -71.15173340]
[-52.22882462 -77.41057587]
[-65.58132935 -84.25019836]
[-78.62722015 -91.65794373]
[-91.34233093 -99.62010193]
[-103.70311737 -108.12191010]
[-115.68669128 -117.14764404]
[-127.27086639 -126.68058014]
[-138.43418884 -136.70306396]
[-149.15597534 -147.19654846]
[-159.41639709 -158.14158630]
[-169.19642639 -169.51791382]
[-178.47796631 -181.30447388]
[-187.24382019 -193.47943115]
[-195.47778320 -206.02023315]
[-203.16456604 -218.90367126]
[-210.28997803 -232.10589600]
[-216.84078979 -245.60244751]
[-222.80488586 -259.36831665]
[-228.17121887 -273.37805176]
[-232.92985535 -287.60568237]
[-237.07199097 -302.02484131]
[-240.58993530 -316.60888672]
[-243.47718811 -331.33074951]
[-245.72839355 -346.16320801]
[-247.33938599 -361.07879639]
[-248.30718994 -376.04989624]
[-248.63000488 -391.04873657]
[-248.30723572 -406.04760742]
[-247.33949280 -421.01867676]
[-245.72854614 -435.93426514]
[-243.47738647 -450.76675415]
[-240.59017944 -465.48864746]
[-237.07228088 -480.07266235]
[-232.93020630 -494.49188232]
[-228.17161560 -508.71951294]
[-222.80532837 -522.72924805]
[-216.84127808 -536.49517822]
[-210.29051208 -549.99169922]
[-203.16514587 -563.19396973]
[-195.47839355 -576.07745361]
[-187.24449158 -588.61828613]
[-178.47866821 -600.79327393]
[-169.19715881 -612.57983398]
[-159.41717529 -623.95617676]
[-149.15679932 -634.90130615]
[-138.43504333 -645.39477539]
[-127.27175140 -655.41729736]
[-115.68760681 -664.95031738]
[-103.70406342 -673.97607422]
[-91.34330750 -682.47790527]
[-78.62821960 -690.44012451]
[-65.58235931 -697.84790039]
[-52.22987366 -704.68756104]
[-38.59549332 -710.94647217]
[-24.70446587 -716.61297607]
[-10.58251476 -721.67657471]
[3.74421048 -726.12799072]
[18.24917984 -729.95886230]
[32.90553284 -733.16217041]
[47.68613052 -735.73199463]
[62.56360245 -737.66351318]
[77.51039124 -738.95318604]
[92.49883270 -739.59863281]
[107.50116730 -739.59863281]
[122.48960876 -738.95318604]
[137.43640137 -737.66351318]
[152.31387329 -735.73199463]
[167.09446716 -733.16217041]
[181.75082397 -729.95886230]
[196.25578308 -726.12799072]
[210.58251953 -721.67657471]
[224.70446777 -716.61297607]
[238.59548950 -710.94647217]
[252.22987366 -704.68756104]
[265.58236694 -697.84790039]
[278.62823486 -690.44012451]
[291.34329224 -682.47790527]
[303.70407104 -673.97607422]
[315.68762207 -664.95031738]
[327.27175903 -655.41729736]
[338.43502808 -645.39477539]
[349.15679932 -634.90130615]
[359.41717529 -623.95617676]
[369.19717407 -612.57983398]
[378.47866821 -600.79327393]
[387.24447632 -588.61828613]
[395.47839355 -576.07745361]
[403.16516113 -563.19396973]
[410.29049683 -549.99169922]
[416.84127808 -536.49517822]
[422.80532837 -522.72924805]
[428.17163086 -508.71951294]
[432.93020630 -494.49188232]
[437.07229614 -480.07266235]
[440.59017944 -465.48864746]
[443.47738647 -450.76675415]
[445.72854614 -435.93426514]
[447.33947754 -421.01867676]
[448.30725098 -406.04760742]
[448.63000488 -391.04873657]
[448.30718994 -376.04989624]
[447.33938599 -361.07879639]
[445.72839355 -346.16320801]
[443.47717285 -331.33074951]
[440.58993530 -316.60888672]
[437.07199097 -302.02484131]
[432.92987061 -287.60568237]
[428.17123413 -273.37805176]
[422.80490112 -259.36831665]
[416.84078979 -245.60244751]
[410.28997803 -232.10589600]
[403.16458130 -218.90367126]
[395.47778320 -206.02023315]
[387.24383545 -193.47943115]
[378.47796631 -181.30447388]
[369.19641113 -169.51791382]
[359.41638184 -158.14158630]
[349.15597534 -147.19654846]
[338.43417358 -136.70306396]
[327.27087402 -126.68058014]
[315.68670654 -117.14764404]
[303.70312500 -108.12191010]
[291.34231567 -99.62010193]
[278.62722778 -91.65794373]
[265.58132935 -84.25019836]
[252.22882080 -77.41057587]
[238.59442139 -71.15173340]
[224.70338440 -65.48527527]
[210.58140564 -60.42168808]
[196.25466919 -55.97034836]
[181.74969482 -52.13949966]
[167.09332275 -48.93623352]
[152.31271362 -46.36648178]
[137.43524170 -44.43500900]
[122.48844147 -43.14538574]
[107.50000000 -42.50000000]
[107.50000000 -27.50000000]
[107.50000000 -12.50000000]
[107.50000000 2.49999952]
[107.50000000 17.50000000]
[107.50000000 32.50000000]
[107.50000000 47.50000000]
[107.50000000 62.50000000]
[107.50000000 77.50000000]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 164]
[2 163]
[3 162]
[4 161]
[5 160]
[6 159]
[7 158]
[8 157]
[9 156]
[10 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
