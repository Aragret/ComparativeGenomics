%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACAAACGCCUGAGCCCUAUCUAUUACUCUCAUCGCUACCUCCCUGACAAGCGCCUAUAGxxxxxxxxxxACAAUCAAUACUAAACCCCCAUAAAUAGGAGAAGGCUUAGAAGAAAACCCCACAAACCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[143.19361877 394.19436646]
[143.19361877 379.19436646]
[143.19361877 364.19436646]
[143.19361877 349.19436646]
[143.19361877 334.19436646]
[143.19361877 319.19436646]
[143.19361877 304.19436646]
[143.19361877 289.19436646]
[143.19361877 274.19436646]
[143.19361877 259.19436646]
[140.55476379 244.42831421]
[126.47855377 233.99470520]
[129.65797424 215.88748169]
[117.80126953 206.87263489]
[119.95418549 191.19859314]
[114.46715546 177.23820496]
[109.05825806 172.13041687]
[109.01451111 162.92987061]
[103.81909180 148.85835266]
[98.62368011 134.78683472]
[93.42826080 120.71531677]
[79.97229767 114.08681488]
[65.64970398 118.54363251]
[51.32710266 123.00044250]
[49.14061737 138.10614014]
[40.60942459 150.76242065]
[27.42740059 158.45637512]
[12.21184444 159.66036987]
[-2.01618385 154.13534546]
[-12.43169880 142.97828674]
[-16.96669197 128.40446472]
[-14.72073746 113.30748749]
[-6.13977146 100.68489838]
[7.07244968 93.04291534]
[22.29262924 91.89884949]
[36.49879074 97.47986603]
[46.87028885 108.67784882]
[61.19288635 104.22103119]
[75.51548004 99.76421356]
[76.83491516 92.38118744]
[62.06890106 89.74209595]
[64.70822144 74.97612000]
[79.47377777 77.61513519]
[80.79321289 70.23210907]
[68.90083313 61.09037018]
[57.00845337 51.94863892]
[45.11607361 42.80690384]
[31.50801277 49.71945953]
[16.24814796 50.03456116]
[2.36633611 43.68963623]
[-7.38117933 31.94447899]
[-11.05902195 17.13109970]
[-7.93695307 2.19070339]
[1.36513805 -9.91028214]
[15.00031376 -16.76919937]
[30.26130104 -17.02420235]
[44.11801910 -10.62466145]
[53.81920624 1.15878952]
[57.43868637 15.98653793]
[54.25780869 30.91452408]
[66.15018463 40.05625916]
[78.04256439 49.19799042]
[89.93494415 58.33972549]
[104.54383850 54.93674850]
[111.17234039 41.48078156]
[117.80083466 28.02481842]
[124.42933655 14.56885242]
[131.05783081 1.11288667]
[118.84642029 -7.65815544]
[108.24532318 -18.31961250]
[99.54375458 -30.58063126]
[92.97910309 -44.10672379]
[88.73044586 -58.52888870]
[86.91370392 -73.45367432]
[87.57843018 -88.47393036]
[90.70648956 -103.17988586]
[96.21254730 -117.17034912]
[103.94639587 -130.06365967]
[113.69705200 -141.50807190]
[125.19850922 -151.19137573]
[138.13699341 -158.84941101]
[152.15954590 -164.27323914]
[166.88360596 -167.31491089]
[181.90750122 -167.89144897]
[196.82138062 -165.98712158]
[211.21835327 -161.65388489]
[224.70567322 -155.00993347]
[236.91539001 -146.23654175]
[247.51443481 -135.57304382]
[256.21365356 -123.31034088]
[262.77569580 -109.78298950]
[267.02157593 -95.36000824]
[268.83541870 -80.43486786]
[268.16781616 -65.41474152]
[265.03692627 -50.70939255]
[259.52816772 -36.71998596]
[251.79182434 -23.82816696]
[242.03897095 -12.38563251]
[230.53564453 -2.70454478]
[217.59568787 4.95099020]
[203.57209778 10.37212276]
[188.84744263 13.41096210]
[173.82344055 13.98460484]
[158.90994263 12.07740307]
[144.51379395 7.74138498]
[137.88529968 21.19735146]
[131.25680542 34.65331650]
[124.62830353 48.10928345]
[117.99980164 61.56524658]
[130.43698120 80.51461792]
[129.83834839 99.81854248]
[119.97653198 112.44882202]
[107.49978638 115.51989746]
[112.69519806 129.59141541]
[117.89061737 143.66293335]
[123.08602905 157.73445129]
[128.42753601 171.75117493]
[133.91458130 185.71156311]
[146.16375732 195.72496033]
[143.61836243 210.40045166]
[155.14315796 216.28546143]
[159.40676880 228.07699585]
[154.62628174 239.23289490]
[157.68957520 224.54902649]
[165.27595520 211.60890198]
[176.59309387 201.76397705]
[190.45903015 196.04246521]
[205.42562866 195.04190063]
[219.92976379 198.86679077]
[232.45664978 207.11767578]
[241.69799805 218.93281555]
[246.68861389 233.07826233]
[246.90731812 248.07667542]
[242.33123779 262.36160278]
[233.43830872 274.44119263]
[221.15730286 283.05377197]
[206.77084351 287.29992676]
[191.78144836 286.73617554]
[177.75457764 281.42135620]
[166.15522766 271.91058350]
[158.19361877 259.19436646]
[158.19361877 274.19436646]
[158.19361877 289.19436646]
[158.19361877 304.19436646]
[158.19361877 319.19436646]
[158.19361877 334.19436646]
[158.19361877 349.19436646]
[158.19361877 364.19436646]
[158.19361877 379.19436646]
[158.19361877 394.19436646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 123]
[13 120]
[15 118]
[16 117]
[18 116]
[19 115]
[20 114]
[21 113]
[22 39]
[23 38]
[24 37]
[44 63]
[45 62]
[46 61]
[47 60]
[64 109]
[65 108]
[66 107]
[67 106]
[68 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
