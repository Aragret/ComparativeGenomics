%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCCUACUACUAUCUCGCACCUGAAACAAGCUAACAUGACUAACACCCUUAAUUCCAUCCxxxxxxxxxxACCAAAUAAUUCAAGCACUGCUUAUUACAAUUUUACUGGGUCUCUAUUUUACCCUCCUACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 242.70858765]
[92.50000000 227.70858765]
[92.50000000 212.70858765]
[92.50000000 197.70858765]
[92.50000000 182.70858765]
[92.50000000 167.70858765]
[92.50000000 152.70858765]
[92.50000000 137.70858765]
[92.50000000 122.70858765]
[92.50000000 107.70858765]
[89.55451965 93.00062561]
[83.77824402 79.15740204]
[78.00197601 65.31418610]
[72.22570038 51.47097015]
[58.05759430 56.41063309]
[43.61943436 60.49414062]
[28.96290398 63.70687485]
[14.14047241 66.03733826]
[-0.79480010 67.47718048]
[-15.78944969 68.02125549]
[-30.78979683 67.66761017]
[-45.74214935 66.41751099]
[-60.59297180 64.27543640]
[-75.28911591 61.24904633]
[-89.77795410 57.34918594]
[-104.00763702 52.58980942]
[-117.92722321 46.98795319]
[-131.48687744 40.56367493]
[-144.63804626 33.33996964]
[-157.33369446 25.34269524]
[-169.52832031 16.60048103]
[-181.17831421 7.14462185]
[-192.24195862 -2.99103165]
[-202.67962646 -13.77019691]
[-212.45397949 -25.15428734]
[-221.53002930 -37.10255051]
[-229.87525940 -49.57221222]
[-237.45982361 -62.51863861]
[-244.25656128 -75.89547729]
[-250.24113464 -89.65485382]
[-255.39213562 -103.74750519]
[-259.69110107 -118.12297821]
[-263.12268066 -132.72982788]
[-265.67453003 -147.51574707]
[-267.33758545 -162.42781067]
[-268.10583496 -177.41265869]
[-267.97656250 -192.41661072]
[-266.95022583 -207.38598633]
[-265.03045654 -222.26718140]
[-262.22421265 -237.00694275]
[-258.54144287 -251.55249023]
[-253.99540710 -265.85174561]
[-248.60235596 -279.85354614]
[-242.38157654 -293.50775146]
[-235.35534668 -306.76550293]
[-227.54882812 -319.57931519]
[-218.98997498 -331.90332031]
[-209.70939636 -343.69342041]
[-199.74032593 -354.90740967]
[-189.11846924 -365.50512695]
[-177.88182068 -375.44863892]
[-166.07063293 -384.70233154]
[-153.72715759 -393.23312378]
[-140.89561462 -401.01046753]
[-127.62191010 -408.00646973]
[-113.95357513 -414.19616699]
[-99.93952942 -419.55734253]
[-85.62995148 -424.07080078]
[-71.07606506 -427.72042847]
[-56.32995605 -430.49313354]
[-41.44442368 -432.37899780]
[-26.47275352 -433.37127686]
[-11.46853924 -433.46640015]
[3.51450872 -432.66403198]
[18.42275429 -430.96704102]
[33.20282745 -428.38153076]
[47.80182266 -424.91671753]
[62.16747665 -420.58502197]
[76.24836731 -415.40197754]
[89.99407959 -409.38607788]
[103.35541534 -402.55892944]
[116.28453827 -394.94491577]
[128.73516846 -386.57128906]
[140.66275024 -377.46807861]
[152.02455139 -367.66784668]
[162.77993774 -357.20565796]
[172.89036560 -346.11895752]
[182.31968689 -334.44747925]
[191.03411865 -322.23297119]
[199.00247192 -309.51916504]
[206.19621277 -296.35156250]
[212.58961487 -282.77734375]
[218.15975952 -268.84503174]
[222.88673401 -254.60455322]
[226.75360107 -240.10687256]
[229.74653625 -225.40388489]
[231.85479736 -210.54821777]
[233.07084656 -195.59306335]
[233.39035034 -180.59194946]
[232.81214905 -165.59857178]
[231.33830261 -150.66661072]
[228.97410583 -135.84953308]
[225.72801208 -121.20035553]
[221.61164856 -106.77152252]
[216.63973999 -92.61470032]
[210.83010864 -78.78055573]
[204.20352173 -65.31861115]
[196.78370667 -52.27706528]
[188.59724426 -39.70259857]
[179.67341614 -27.64022446]
[170.04417419 -16.13312340]
[159.74400330 -5.22248793]
[148.80976868 5.05262375]
[137.28060913 14.65542984]
[125.19778442 23.55155373]
[112.60456848 31.70914841]
[99.54602814 39.09901428]
[86.06891632 45.69469833]
[91.84519196 59.53791428]
[97.62145996 73.38113403]
[103.39773560 87.22434998]
[105.70381927 72.40267944]
[112.20112610 58.88287735]
[122.33344269 47.82231140]
[135.23339844 40.16783142]
[149.79669189 36.57469559]
[164.77661133 37.35050201]
[178.89080811 42.42882919]
[190.93103027 51.37495422]
[199.86656189 63.42303085]
[204.93249512 77.54168701]
[205.69512939 92.52228546]
[202.08918762 107.08241272]
[194.42337036 119.97563934]
[183.35391235 130.09823608]
[169.82839966 136.58364868]
[155.00469971 138.87670898]
[140.15180969 136.78109741]
[126.54120636 130.47622681]
[115.33803558 120.50180817]
[107.50000000 107.70858765]
[107.50000000 122.70858765]
[107.50000000 137.70858765]
[107.50000000 152.70858765]
[107.50000000 167.70858765]
[107.50000000 182.70858765]
[107.50000000 197.70858765]
[107.50000000 212.70858765]
[107.50000000 227.70858765]
[107.50000000 242.70858765]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 121]
[12 120]
[13 119]
[14 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
