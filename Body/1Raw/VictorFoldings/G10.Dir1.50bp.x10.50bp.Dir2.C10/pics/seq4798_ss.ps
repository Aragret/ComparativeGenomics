%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAUAAACCCUCGUUCCACAGAAGCUGCCAUCAAGUAUUUCCUCACGCAAGCAACCGCAUCCxxxxxxxxxxAACCCAAUCCACAUCAAAACCCCCUCCCCAUGCUUACAAGCAAGUACAGCAAUCAACCCUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[87.84280396 99.52649689]
[76.45172882 89.76722717]
[65.06065369 80.00794983]
[53.66958237 70.24868011]
[42.27850723 60.48940277]
[30.88743401 50.73012924]
[19.49636078 40.97085190]
[8.10528660 31.21157837]
[-3.28578758 21.45230484]
[-14.67686081 11.69302940]
[-25.19472694 22.39589119]
[-36.41846466 32.35603333]
[-48.29574585 41.52701950]
[-60.77119064 49.86608505]
[-73.78662872 57.33435440]
[-87.28138733 63.89700317]
[-101.19252777 69.52343750]
[-115.45520782 74.18741608]
[-130.00292969 77.86720276]
[-144.76783752 80.54563141]
[-159.68112183 82.21022034]
[-174.67323303 82.85320282]
[-189.67427063 82.47158813]
[-204.61428833 81.06715393]
[-219.42364502 78.64643860]
[-234.03326416 75.22074127]
[-248.37506104 70.80603027]
[-262.38214111 65.42288971]
[-275.98922729 59.09640884]
[-289.13284302 51.85610199]
[-301.75170898 43.73571396]
[-313.78701782 34.77310944]
[-325.18264771 25.01008034]
[-335.88543701 14.49214172]
[-345.84548950 3.26833653]
[-355.01638794 -8.60900497]
[-363.35537720 -21.08450508]
[-370.82354736 -34.09999466]
[-377.38610840 -47.59479523]
[-383.01245117 -61.50597763]
[-387.67633057 -75.76869202]
[-391.35601807 -90.31642914]
[-394.03436279 -105.08135986]
[-395.69885254 -119.99465179]
[-396.34173584 -134.98677063]
[-395.96002197 -149.98779297]
[-394.55548096 -164.92781067]
[-392.13467407 -179.73715210]
[-388.70886230 -194.34675598]
[-384.29406738 -208.68852234]
[-378.91082764 -222.69557190]
[-372.58425903 -236.30259705]
[-365.34387207 -249.44616699]
[-357.22338867 -262.06500244]
[-348.26071167 -274.10025024]
[-338.49758911 -285.49578857]
[-327.97958374 -296.19851685]
[-316.75570679 -306.15850830]
[-304.87832642 -315.32931519]
[-292.40277100 -323.66821289]
[-279.38720703 -331.13632202]
[-265.89236450 -337.69879150]
[-251.98115540 -343.32501221]
[-237.71841431 -347.98883057]
[-223.17065430 -351.66839600]
[-208.40570068 -354.34664917]
[-193.49240112 -356.01101685]
[-178.50027466 -356.65380859]
[-163.49925232 -356.27200317]
[-148.55924988 -354.86737061]
[-133.74992371 -352.44644165]
[-119.14034271 -349.02053833]
[-104.79860687 -344.60565186]
[-90.79158783 -339.22232056]
[-77.18460083 -332.89566040]
[-64.04108429 -325.65518188]
[-51.42231369 -317.53460693]
[-39.38713074 -308.57183838]
[-27.99165154 -298.80865479]
[-17.28900146 -288.29058838]
[-7.32908440 -277.06665039]
[1.84166145 -265.18917847]
[10.18047810 -252.71357727]
[17.64848518 -239.69798279]
[24.21086311 -226.20309448]
[29.83701515 -212.29183960]
[34.50070953 -198.02906799]
[38.18019867 -183.48127747]
[40.85833359 -168.71630859]
[42.52262115 -153.80299377]
[43.16530609 -138.81086731]
[42.78338623 -123.80984497]
[41.37865067 -108.86985016]
[38.95764160 -94.06054688]
[35.53165054 -79.45098114]
[31.11664772 -65.10927582]
[25.73322296 -51.10229492]
[19.40647507 -37.49534988]
[12.16589928 -24.35187912]
[4.04525805 -11.73316574]
[-4.91758680 0.30195588]
[6.47348690 10.06123066]
[17.86456108 19.82050514]
[29.25563431 29.57977867]
[40.64670944 39.33905411]
[52.03778076 49.09832764]
[63.42885590 58.85760117]
[74.81993103 68.61687469]
[86.21100616 78.37615204]
[97.60207367 88.13542938]
[104.74843597 88.91857910]
[110.16244507 93.60449982]
[125.06689453 95.29489136]
[139.97134399 96.98529053]
[154.87579346 98.67568970]
[169.68722534 91.63629150]
[183.03384399 101.16519928]
[181.18577576 117.45987701]
[166.04415894 123.75776672]
[153.18539429 113.58013916]
[138.28094482 111.88973999]
[123.37649536 110.19934082]
[108.47204590 108.50894165]
[120.38977814 117.61760712]
[130.33567810 128.84609985]
[137.93923950 141.77613831]
[142.91722107 155.92604065]
[145.08416748 170.76869202]
[144.35937500 185.75115967]
[140.76982117 200.31533813]
[134.44923401 213.91865540]
[125.63307190 226.05435181]
[114.64975739 236.27037048]
[101.90844727 244.18611145]
[87.88378143 249.50669861]
[73.09821320 252.03395081]
[58.10253906 251.67370605]
[43.45538712 248.43937683]
[29.70239258 242.45144653]
[17.35589027 233.93301392]
[6.87581778 223.20137024]
[-1.34741938 210.65631104]
[-7.00748539 196.76518250]
[-9.89352989 182.04544067]
[-9.89804077 167.04544067]
[-7.02084970 152.32395935]
[-1.36913884 138.42942810]
[6.84655190 125.87943268]
[17.32016945 115.14149475]
[29.66154480 106.61562347]
[43.41093445 100.61943817]
[58.05614090 97.37629700]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 110]
[2 109]
[3 108]
[4 107]
[5 106]
[6 105]
[7 104]
[8 103]
[9 102]
[10 101]
[112 123]
[113 122]
[114 121]
[115 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
