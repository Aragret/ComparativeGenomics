%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAGCUGACUCGCCACACUCCACGGAAGCAAUAUGAAAUGAUCUGCUGCAGUGCUCUGAGCxxxxxxxxxxUCCCCAACCUUUUCCUCCGACCCCCUAACAACCCCCCUCCUAAUACUAACUACCUGACUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[231.01417542 294.27343750]
[221.50582886 282.67208862]
[211.99746704 271.07073975]
[202.48910522 259.46942139]
[192.98074341 247.86807251]
[183.47238159 236.26672363]
[173.14518738 225.38789368]
[162.05386353 215.28924561]
[150.96255493 205.19059753]
[139.87123108 195.09194946]
[128.77992249 184.99330139]
[113.77992249 184.99330139]
[102.68860626 195.09194946]
[98.41323090 203.23890686]
[91.25991058 205.28236389]
[79.96090698 215.14808655]
[81.48133087 230.59049988]
[73.60552979 243.96029663]
[59.36191559 250.11651611]
[44.22744751 246.69197083]
[34.02163696 235.00347900]
[32.66882706 219.54548645]
[40.68919754 206.26190186]
[54.99875641 200.26055908]
[70.09518433 203.84909058]
[81.39418793 193.98336792]
[92.58995819 184.00064087]
[103.68127441 173.90197754]
[88.77003479 172.27253723]
[83.64569855 158.17497253]
[94.03012848 147.35076904]
[108.32875061 151.88719177]
[102.26573944 138.16714478]
[96.20272827 124.44709015]
[90.13971710 110.72703552]
[79.15405273 100.51355743]
[65.02924347 95.46479797]
[50.90444565 90.41604614]
[36.77964020 85.36728668]
[32.39638138 86.34120941]
[28.35223007 85.87657928]
[25.06754875 84.26637268]
[22.81986427 81.91225433]
[21.72043419 79.26676941]
[8.06419277 73.06136322]
[-7.40129042 77.32731628]
[-20.29388809 67.77951813]
[-20.72350311 51.74221802]
[-8.36056995 41.51786041]
[7.31112528 44.94969940]
[14.26959991 59.40512085]
[27.92584229 65.61052704]
[41.82839584 71.24248505]
[55.95320129 76.29123688]
[70.07800293 81.33999634]
[84.20280457 86.38875580]
[88.95698547 80.58808136]
[103.21952057 63.18606949]
[95.49543762 50.32766724]
[87.77135468 37.46926498]
[73.17468262 29.99468613]
[72.61987305 13.60492706]
[86.67766571 5.16036654]
[100.88660431 13.34804535]
[100.62975311 29.74518013]
[108.35384369 42.60358429]
[116.07792664 55.46198654]
[130.78588867 52.51650238]
[132.96272278 37.67529678]
[119.31105804 31.18504143]
[108.18006134 20.95800400]
[100.55949402 7.90356636]
[97.12696838 -6.81747913]
[98.18770599 -21.89614677]
[103.64738464 -35.99165344]
[113.02053833 -47.85063553]
[125.47370148 -56.41859818]
[139.89956665 -60.93368912]
[155.01538086 -60.99442291]
[169.47705078 -56.59540558]
[181.99867249 -48.12778854]
[191.46681213 -36.34451294]
[197.03958130 -22.29333305]
[198.22145081 -7.22367573]
[194.90733337 7.52447796]
[187.39192200 20.63973236]
[176.34346008 30.95588493]
[162.74440002 37.55563354]
[147.80392456 39.85213470]
[145.62709045 54.69334030]
[147.77845764 73.58852386]
[143.72232056 89.85067749]
[135.13525391 101.71595001]
[124.13049316 108.14928436]
[112.98567963 108.93329620]
[103.85977173 104.66402435]
[109.92278290 118.38407898]
[115.98579407 132.10412598]
[122.04880524 145.82418823]
[138.87857056 173.90197754]
[149.96987915 184.00064087]
[161.06120300 194.09928894]
[172.15251160 204.19793701]
[183.24383545 214.29658508]
[182.93763733 199.29971313]
[192.20584106 187.50563049]
[206.84986877 184.25717163]
[220.23582458 191.02593994]
[226.29974365 204.74559021]
[222.29461670 219.20100403]
[210.03479004 227.84371948]
[195.07373047 226.75836182]
[204.58209229 238.35971069]
[214.09043884 249.96104431]
[223.59880066 261.56237793]
[233.10716248 273.16372681]
[242.61552429 284.76507568]
[255.72413635 277.39379883]
[269.91366577 272.41098022]
[284.75289917 269.96804810]
[299.79092407 270.13922119]
[314.57070923 272.91931152]
[328.64312744 278.22381592]
[341.58056641 285.89154053]
[352.98983765 295.68948364]
[362.52423096 307.31991577]
[369.89398193 320.42935181]
[374.87521362 334.61944580]
[377.31646729 349.45895386]
[377.14358521 364.49694824]
[374.36181641 379.27642822]
[369.05572510 393.34826660]
[361.38653564 406.28482056]
[351.58728027 417.69296265]
[339.95578003 427.22604370]
[326.84552002 434.59432983]
[312.65484619 439.57394409]
[297.81506348 442.01351929]
[282.77706909 441.83892822]
[267.99792480 439.05548096]
[253.92668152 433.74780273]
[240.99099731 426.07711792]
[229.58395386 416.27658081]
[220.05220032 404.64401245]
[212.68540955 391.53289795]
[207.70741272 377.34167480]
[205.26953125 362.50161743]
[205.44581604 347.46365356]
[208.23092651 332.68481445]
[213.54022217 318.61416626]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 117]
[2 116]
[3 115]
[4 114]
[5 113]
[6 112]
[7 104]
[8 103]
[9 102]
[10 101]
[11 100]
[12 28]
[13 27]
[15 26]
[16 25]
[32 99]
[33 98]
[34 97]
[35 96]
[36 56]
[37 55]
[38 54]
[39 53]
[44 52]
[45 51]
[58 67]
[59 66]
[60 65]
[68 90]
[69 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
