%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCCUCCUACAAGCCUCAGAGUACUUCGAGUCUCCCUUCACCAUUUCCGACGGCAUCUACxxxxxxxxxxUACUGGGAGAACUCUCUGUGCUAGUAACCACGUUCUCCUGAUCAAAUAUCACUCUCCUACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[163.43225098 357.67166138]
[163.43225098 342.67166138]
[163.43225098 327.67166138]
[163.43225098 312.67166138]
[163.43225098 297.67166138]
[163.43225098 282.67166138]
[163.43225098 267.67166138]
[163.43225098 252.67166138]
[163.43225098 237.67166138]
[163.43225098 222.67166138]
[159.27436829 208.25944519]
[151.28443909 195.56451416]
[136.47630310 197.34895325]
[122.30357361 192.50712585]
[111.59466553 181.94869995]
[106.51123810 167.72973633]
[108.11199951 152.65245056]
[116.13269806 139.71298218]
[108.14278412 127.01805878]
[100.15286255 114.32312775]
[87.87723541 107.62980652]
[87.15220642 93.66678619]
[79.16229248 80.97185516]
[71.17237091 68.27692413]
[58.75351715 64.64019012]
[52.36936951 53.84845352]
[54.98957443 41.99763870]
[47.26549149 29.13923645]
[39.54140472 16.28083420]
[31.81732178 3.42243123]
[24.09323692 -9.43597126]
[20.07985115 5.01715136]
[7.81509686 13.65287876]
[-7.14497471 12.55914211]
[-18.02330399 2.23141432]
[-19.89190102 -12.65174198]
[-11.90427399 -25.34811211]
[2.32110453 -30.10611534]
[16.34030533 -24.77006912]
[10.56403351 -38.61328506]
[4.78776121 -52.45650482]
[-1.13220203 -66.23888397]
[-7.19521523 -79.95893860]
[-13.25822830 -93.67899323]
[-19.32124138 -107.39904785]
[-25.38425446 -121.11910248]
[-39.91371536 -117.26667023]
[-54.86696243 -115.73470306]
[-69.87575531 -116.56092834]
[-84.57048798 -119.72499084]
[-98.58929443 -125.14897156]
[-111.58694458 -132.69931030]
[-123.24335480 -142.19007874]
[-133.27148438 -153.38752747]
[-141.42437744 -166.01594543]
[-147.50126648 -179.76432800]
[-151.35249329 -194.29409790]
[-152.88322449 -209.24748230]
[-152.05577087 -224.25619507]
[-148.89048767 -238.95066833]
[-143.46534729 -252.96902466]
[-135.91394043 -265.96606445]
[-126.42221832 -277.62167358]
[-115.22393036 -287.64889526]
[-102.59484863 -295.80075073]
[-88.84597015 -301.87649536]
[-74.31587219 -305.72653198]
[-59.36236954 -307.25604248]
[-44.35371399 -306.42733765]
[-29.65950394 -303.26083374]
[-15.64159489 -297.83453369]
[-2.64519238 -290.28204346]
[9.00965595 -280.78936768]
[19.03593826 -269.59027100]
[27.18674850 -256.96051025]
[33.26136780 -243.21112061]
[37.11019897 -228.68070984]
[38.63846207 -213.72708130]
[37.80852509 -198.71849060]
[34.64082718 -184.02455139]
[29.21337128 -170.00708008]
[21.65981483 -157.01130676]
[12.16617012 -145.35723877]
[0.96622920 -135.33187866]
[-11.66420078 -127.18211365]
[-5.60118771 -113.46205902]
[0.46182537 -99.74200439]
[6.52483845 -86.02194977]
[12.58785152 -72.30189514]
[18.20454025 -67.42353058]
[18.63097954 -58.23277664]
[24.40725136 -44.38955688]
[30.18352318 -30.54634094]
[36.95163727 -17.16005516]
[44.67572403 -4.30165386]
[52.39980698 8.55674839]
[60.12389374 21.41515160]
[67.84797668 34.27355194]
[83.62040710 41.90444183]
[83.86730194 60.28701019]
[91.85721588 72.98194122]
[99.84713745 85.67687225]
[112.12276459 92.37019348]
[112.84779358 106.33321381]
[120.83770752 119.02814484]
[128.82762146 131.72306824]
[143.96331787 130.08839417]
[158.24958801 135.16673279]
[168.87078857 145.90034485]
[173.75831604 160.12261963]
[171.99343872 174.99522400]
[163.97937012 187.57458496]
[171.96928406 200.26951599]
[171.83523560 185.27012634]
[174.86860657 170.58003235]
[180.93284607 156.86051941]
[189.75500488 144.72917175]
[200.93792725 134.73207092]
[213.97822571 127.31921387]
[228.28892517 122.82431030]
[243.22579956 121.44967651]
[258.11648560 123.25720978]
[272.29071045 128.16552734]
[285.11041260 135.95370483]
[295.99850464 146.27113342]
[304.46487427 158.65339661]
[310.12841797 172.54312134]
[312.73419189 187.31504822]
[312.16488647 202.30424500]
[308.44613647 216.83596802]
[301.74536133 230.25608826]
[292.36416626 241.96049500]
[280.72485352 251.42233276]
[267.35134888 258.21566772]
[252.84567261 262.03472900]
[237.86076355 262.70755005]
[223.07118225 260.20391846]
[209.14266968 254.63645935]
[196.70219421 246.25584412]
[186.30978394 235.43928528]
[178.43225098 222.67166138]
[178.43225098 237.67166138]
[178.43225098 252.67166138]
[178.43225098 267.67166138]
[178.43225098 282.67166138]
[178.43225098 297.67166138]
[178.43225098 312.67166138]
[178.43225098 327.67166138]
[178.43225098 342.67166138]
[178.43225098 357.67166138]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 113]
[12 112]
[18 106]
[19 105]
[20 104]
[22 102]
[23 101]
[24 100]
[27 98]
[28 97]
[29 96]
[30 95]
[31 94]
[39 93]
[40 92]
[41 91]
[42 89]
[43 88]
[44 87]
[45 86]
[46 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
