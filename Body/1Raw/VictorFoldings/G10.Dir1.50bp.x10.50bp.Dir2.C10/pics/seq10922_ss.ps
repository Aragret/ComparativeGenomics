%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCCACCCCCUAGCAGAAAAUAGCCCACUAAUCCAAACUCUAACACUAUGCUUAGGCGCUAUxxxxxxxxxxCUUUACCUUUCACUUCAUCUUGCCCUUCAUUAUUGCAGCCCUAGCAACACUCCACCUCCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[50.51910400 232.42535400]
[44.53080750 246.17817688]
[38.54251099 259.93099976]
[32.55421448 273.68383789]
[26.56591988 287.43667603]
[28.15060234 303.17831421]
[15.97563839 311.75848389]
[9.98734188 325.51132202]
[9.20766544 342.44732666]
[-7.28231478 346.38647461]
[-15.63239956 331.63140869]
[-3.76548672 319.52304077]
[2.22280979 305.77020264]
[0.20980389 291.01223755]
[12.81309032 281.44836426]
[18.80138588 267.69555664]
[24.78968239 253.94271851]
[30.77797890 240.18988037]
[36.76627731 226.43705750]
[26.64477158 220.84635925]
[17.01402283 214.44718933]
[7.93845797 207.28236389]
[-0.52120465 199.39979553]
[-8.30836964 190.85223389]
[-15.37094021 181.69686890]
[-21.66166687 171.99493408]
[-27.13846397 161.81135559]
[-31.76469040 151.21424866]
[-35.50939560 140.27450562]
[-38.34753036 129.06533813]
[-53.17001343 131.36621094]
[-67.99249268 133.66708374]
[-80.42257690 144.36404419]
[-95.80998993 138.69309998]
[-98.32547760 122.48803711]
[-85.38133240 112.41921997]
[-70.29336548 118.84459686]
[-55.47088623 116.54372406]
[-40.64840698 114.24285126]
[-41.34260178 97.33504486]
[-40.01154709 80.46542358]
[-36.67431259 63.87570572]
[-31.37872314 47.80360413]
[-24.20065117 32.47940445]
[-15.24295044 18.12268257]
[-4.63397360 4.93915558]
[7.47426748 -6.88227844]
[20.90827751 -17.17223358]
[35.47556686 -25.78326607]
[50.96740341 -32.59199524]
[67.16181183 -37.50085831]
[83.82674408 -40.43951797]
[100.72342682 -41.36587143]
[117.60973358 -40.26663971]
[134.24372864 -37.15757370]
[150.38703918 -32.08322525]
[165.80838013 -25.11630249]
[180.28677368 -16.35663033]
[189.44871521 -28.23345375]
[198.61065674 -40.11027908]
[207.77258301 -51.98710251]
[205.94647217 -67.45652771]
[215.40716553 -79.37079620]
[230.16615295 -81.01638794]
[239.32809448 -92.89321136]
[248.49002075 -104.77003479]
[257.52954102 -116.74029541]
[266.44567871 -128.80271912]
[255.60647583 -139.20173645]
[246.18608093 -150.90150452]
[238.33920288 -163.70989990]
[232.19471741 -177.41659546]
[227.85348511 -191.79652405]
[225.38682556 -206.61354065]
[224.83522034 -221.62432861]
[226.20774841 -236.58242798]
[229.48184204 -251.24218750]
[234.60375977 -265.36288452]
[241.48941040 -278.71264648]
[250.02568054 -291.07226562]
[260.07244873 -302.23880005]
[271.46469116 -312.02883911]
[284.01535034 -320.28164673]
[297.51834106 -326.86172485]
[311.75195312 -331.66101074]
[326.48242188 -334.60064697]
[341.46786499 -335.63244629]
[356.46221924 -334.73941040]
[371.21926880 -331.93618774]
[385.49667358 -327.26889038]
[399.05999756 -320.81405640]
[411.68652344 -312.67776489]
[423.16888428 -302.99356079]
[433.31857300 -291.92053223]
[441.96887207 -279.64044189]
[448.97778320 -266.35498047]
[454.23016357 -252.28227234]
[457.63980103 -237.65344238]
[459.15072632 -222.70869446]
[458.73806763 -207.69343567]
[456.40866089 -192.85423279]
[452.20071411 -178.43473816]
[446.18331909 -164.67176819]
[438.45535278 -151.79129028]
[429.14364624 -140.00483704]
[418.40112305 -129.50595093]
[406.40420532 -120.46701050]
[393.34988403 -113.03646088]
[379.45254517 -107.33631897]
[364.94033813 -103.46018982]
[350.05160522 -101.47171021]
[335.03082275 -101.40354156]
[320.12466431 -103.25679779]
[305.57788086 -107.00105286]
[291.62936401 -112.57482147]
[278.50811768 -119.88657379]
[269.59197998 -107.82414246]
[268.13619995 -100.53079224]
[260.36685181 -95.60810089]
[251.20491028 -83.73127747]
[242.04296875 -71.85445404]
[244.19796753 -57.16120148]
[235.07565308 -44.98589706]
[219.64941406 -42.82516479]
[210.48747253 -30.94834328]
[201.32554626 -19.07151985]
[192.16360474 -7.19469547]
[202.72561646 2.88006568]
[212.19245911 13.99021530]
[220.46324158 26.01730728]
[227.44978333 38.83312607]
[233.07757568 52.30103683]
[237.28665161 66.27746582]
[240.03211975 80.61340332]
[241.28471375 95.15602875]
[241.03108215 109.75028992]
[239.27392578 124.24060059]
[236.03198242 138.47248840]
[231.33981323 152.29421997]
[225.24743652 165.55845642]
[217.81982422 178.12376404]
[209.13612366 189.85621643]
[199.28894043 200.63070679]
[188.38323975 210.33238220]
[176.53529358 218.85781860]
[163.87141418 226.11611938]
[150.52661133 232.02990723]
[136.64314270 236.53611755]
[122.36901855 239.58674622]
[107.85642242 241.14924622]
[93.26007080 241.20695496]
[78.73557281 239.75927734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[3 17]
[4 16]
[5 15]
[7 13]
[8 12]
[30 39]
[31 38]
[32 37]
[58 127]
[59 126]
[60 125]
[61 124]
[64 121]
[65 120]
[66 119]
[67 117]
[68 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
