%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCAUUCAAGCAAUCCUAUACAACCGUAUCGGCGAUAUCGGUUUCAUCCUCGCCUUAGCAUGxxxxxxxxxxCCCUGACUCCCCUCAGCCAUAGAAGGCCCCACCCCAGUCUCAGCCCUACUCCACUCAAGCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[226.00692749 279.92993164]
[235.63528442 268.38690186]
[225.75958252 257.09664917]
[215.88388062 245.80635071]
[206.00817871 234.51608276]
[191.80503845 230.03053284]
[188.54302979 214.54925537]
[178.66731262 203.25897217]
[168.79161072 191.96870422]
[158.91590881 180.67842102]
[149.04019165 169.38813782]
[139.16448975 158.09785461]
[132.35144043 155.11549377]
[129.20483398 146.47288513]
[119.56301880 134.98222351]
[109.92120361 123.49155426]
[88.40856171 125.22430420]
[71.40832520 109.14861298]
[71.99844360 83.94202423]
[57.34571838 80.73302460]
[50.85285187 90.27492523]
[41.69278717 97.23613739]
[30.82963753 100.91307831]
[19.39756966 100.94631958]
[8.58240128 97.35557556]
[-0.50140160 90.53527832]
[-6.92556238 81.21135712]
[-21.50931168 84.72052765]
[-36.09305954 88.22969055]
[-50.67681122 91.73886108]
[-62.18740082 103.41954041]
[-77.98818970 99.03011322]
[-81.82468414 83.08604431]
[-69.75022125 71.98922729]
[-54.18597794 77.15511322]
[-39.60223007 73.64594269]
[-25.01847839 70.13677979]
[-10.43472958 66.62760925]
[-10.02690983 60.51260376]
[-8.56175804 54.56172562]
[-21.39541245 46.79658890]
[-34.22906494 39.03145599]
[-47.06271744 31.26631927]
[-59.89637375 23.50118446]
[-64.37893677 23.58038902]
[-68.24392700 22.32125854]
[-71.13918304 20.09320450]
[-72.87332153 17.34329414]
[-73.42711639 14.53538799]
[-85.58045197 5.74354553]
[-101.14337158 8.49507904]
[-114.04557800 -0.63227576]
[-116.63241577 -16.22342110]
[-107.36916351 -29.02840614]
[-91.75154114 -31.45026207]
[-79.04520416 -22.05214310]
[-76.78860474 -6.40978718]
[-64.63527679 2.38205528]
[-52.13123703 10.66753006]
[-39.29758453 18.43266487]
[-26.46393013 26.19780159]
[-13.63027573 33.96293640]
[-0.79662228 41.72807312]
[17.14506721 31.40560341]
[37.90257263 32.96069336]
[54.28829575 45.98614120]
[60.55471420 66.08029938]
[75.20744324 69.28929901]
[63.88694000 59.44824600]
[49.43931961 55.41510391]
[37.53122330 46.29384995]
[29.87414169 33.39543533]
[27.56858444 18.57367897]
[30.94591713 3.95883703]
[39.52073288 -8.34858036]
[52.06061935 -16.57969284]
[66.76329041 -19.55148697]
[81.51560211 -16.83684349]
[94.19728851 -8.82592106]
[102.98567200 3.32991147]
[106.61765289 17.88356018]
[104.57122040 32.74330902]
[97.13968658 45.77439499]
[96.01676178 60.73230362]
[104.17342377 48.14386368]
[112.33009338 35.55542374]
[120.48675537 22.96698380]
[116.94030762 7.56574345]
[125.39361572 -5.78779840]
[140.83149719 -9.17122173]
[154.09490967 -0.57720184]
[157.31492615 14.89558220]
[148.58116150 28.06740189]
[133.07519531 31.12364960]
[124.91853333 43.71208954]
[116.76186371 56.30052948]
[108.60520172 68.88896942]
[117.13218689 73.98509979]
[123.41934967 81.21929169]
[127.00319672 89.73087311]
[127.72422791 98.58793640]
[125.72419739 106.88799286]
[121.41187286 113.84974670]
[131.05368042 125.34040833]
[140.69549561 136.83106995]
[150.45477295 148.22215271]
[160.33047485 159.51243591]
[170.20617676 170.80270386]
[180.08189392 182.09298706]
[189.95759583 193.38327026]
[199.83329773 204.67355347]
[214.74281311 209.96664429]
[217.29844666 224.64036560]
[227.17416382 235.93064880]
[237.04986572 247.22093201]
[246.92556763 258.51119995]
[259.64718628 250.50450134]
[273.46472168 244.58657837]
[288.03796387 240.90318298]
[303.00799561 239.54499817]
[318.00616455 240.54550171]
[332.66314697 243.88003540]
[346.61801147 249.46649170]
[359.52706909 257.16729736]
[371.07247925 266.79281616]
[380.96984863 278.10598755]
[388.97552490 290.82824707]
[394.89230347 304.64630127]
[398.57449341 319.21981812]
[399.93142700 334.18997192]
[398.92968750 349.18807983]
[395.59396362 363.84478760]
[390.00634766 377.79919434]
[382.30447388 390.70761108]
[372.67800903 402.25222778]
[361.36401367 412.14868164]
[348.64108276 420.15328979]
[334.82257080 426.06890869]
[320.24871826 429.74990845]
[305.27847290 431.10562134]
[290.28045654 430.10266113]
[275.62402344 426.76568604]
[261.67007446 421.17694092]
[248.76228333 413.47399902]
[237.21847534 403.84658813]
[227.32295227 392.53176880]
[219.31939697 379.80816650]
[213.40489197 365.98916626]
[209.72509766 351.41503906]
[208.37063599 336.44467163]
[209.37484741 321.44671631]
[212.71301270 306.79055786]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 116]
[3 115]
[4 114]
[5 113]
[7 111]
[8 110]
[9 109]
[10 108]
[11 107]
[12 106]
[14 105]
[15 104]
[16 103]
[19 68]
[20 67]
[27 38]
[28 37]
[29 36]
[30 35]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[49 58]
[50 57]
[84 97]
[85 96]
[86 95]
[87 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
