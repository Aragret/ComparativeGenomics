%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUUCCCCCGUAAAUGAUAUCAUCUCAACUUAGUAUUAUACCCACACCCACCCAAGAACAGxxxxxxxxxxGAACCUACGAGUACACCGACUACGGCGGACUAAUCUUCAACUCCUACAUACUUCCCCCAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-244.68653870 540.78106689]
[-260.07861328 536.75805664]
[-275.22055054 531.87756348]
[-290.06457520 526.15496826]
[-304.56393433 519.60839844]
[-311.47091675 532.92352295]
[-318.37792969 546.23870850]
[-325.28491211 559.55383301]
[-332.19192505 572.86901855]
[-330.91278076 589.21820068]
[-344.58334351 598.27618408]
[-359.14050293 590.72491455]
[-359.60910034 574.33251953]
[-345.50708008 565.96197510]
[-338.60006714 552.64685059]
[-331.69308472 539.33166504]
[-324.78607178 526.01654053]
[-317.87908936 512.70135498]
[-330.27066040 505.43679810]
[-342.27822876 497.55355835]
[-353.87091064 489.07186890]
[-365.01892090 480.01354980]
[-375.69360352 470.40185547]
[-385.86752319 460.26147461]
[-395.51449585 449.61849976]
[-404.60974121 438.50024414]
[-413.12991333 426.93527222]
[-421.05307007 414.95333862]
[-428.35885620 402.58520508]
[-435.02850342 389.86264038]
[-441.04486084 376.81835938]
[-446.39242554 363.48590088]
[-451.05749512 349.89947510]
[-455.02804565 336.09402466]
[-458.29385376 322.10504150]
[-460.84655762 307.96844482]
[-462.67959595 293.72061157]
[-463.78820801 279.39807129]
[-464.16955566 265.03771973]
[-463.82263184 250.67640686]
[-462.74838257 236.35105896]
[-460.94949341 222.09849548]
[-458.43060303 207.95535278]
[-455.19821167 193.95794678]
[-451.26058960 180.14228821]
[-446.62783813 166.54385376]
[-441.31185913 153.19761658]
[-435.32632446 140.13787842]
[-428.68661499 127.39818573]
[-421.40975952 115.01129150]
[-413.51449585 103.00903320]
[-405.02105713 91.42226410]
[-395.95129395 80.28076172]
[-386.32852173 69.61315918]
[-376.17742920 59.44688416]
[-365.52413940 49.80806351]
[-354.39599609 40.72147369]
[-342.82159424 32.21047592]
[-330.83068848 24.29694366]
[-318.45410156 17.00122261]
[-305.72360229 10.34206963]
[-292.67193604 4.33660316]
[-279.33264160 -0.99973679]
[-265.73995972 -5.65322924]
[-251.92886353 -9.61190891]
[-237.93481445 -12.86559486]
[-223.79379272 -15.40591812]
[-209.54212952 -17.22634315]
[-195.21646118 -18.32218552]
[-180.85359192 -18.69062233]
[-166.49043274 -18.33069801]
[-152.16390991 -17.24333191]
[-137.91082764 -15.43130970]
[-123.76782227 -12.89928246]
[-109.77124023 -9.65375042]
[-95.95705414 -5.70304680]
[-82.36077118 -1.05731845]
[-69.01732635 4.27150249]
[-55.96101761 10.26972771]
[-43.22540665 16.92194748]
[-30.84322357 24.21107483]
[-18.84629250 32.11838150]
[-7.26545000 40.62355423]
[3.86953878 49.70473480]
[14.53005314 59.33860016]
[24.68869019 69.50038910]
[34.31933975 80.16399384]
[43.39724350 91.30201721]
[51.89907074 102.88583374]
[59.80296326 114.88568115]
[72.74102020 107.29577637]
[85.67907715 99.70587158]
[92.75217438 87.64506531]
[106.73101807 87.35607910]
[114.71914673 73.69956207]
[129.61192322 73.93334961]
[142.54997253 66.34344482]
[155.48803711 58.75353622]
[163.11404419 44.23541260]
[179.50869751 43.85112381]
[187.80656433 57.99599838]
[179.47151184 72.11899567]
[163.07794189 71.69158936]
[150.13987732 79.28150177]
[137.20182800 86.87140656]
[130.13911438 99.98503876]
[114.32092285 100.29412842]
[107.24782562 112.35493469]
[93.26898193 112.64392090]
[80.33092499 120.23383331]
[67.39286804 127.82373810]
[74.68315887 141.96990967]
[81.16796112 156.50283813]
[86.82684326 171.37669373]
[91.64199066 186.54458618]
[95.59823608 201.95870972]
[98.68311310 217.57043457]
[100.88691711 233.33058167]
[102.20271301 249.18945312]
[102.62636566 265.09704590]
[102.15655518 281.00320435]
[100.79476929 296.85781860]
[98.54532623 312.61090088]
[95.41532898 328.21276855]
[91.41464996 343.61425781]
[86.55591583 358.76681519]
[80.85446167 373.62268066]
[74.32827759 388.13500977]
[66.99794006 402.25811768]
[58.88656998 415.94741821]
[50.01975632 429.15982056]
[40.42545700 441.85363770]
[30.13393021 453.98889160]
[19.17763138 465.52731323]
[7.59110737 476.43255615]
[-4.58910704 486.67022705]
[-17.32460594 496.20812988]
[-30.57523155 505.01611328]
[-44.29920959 513.06652832]
[-58.45326233 520.33386230]
[-72.99276733 526.79534912]
[-87.87189484 532.43060303]
[-103.04371643 537.22186279]
[-118.46041107 541.15405273]
[-134.07337952 544.21472168]
[-149.83338928 546.39434814]
[-165.69075012 547.68597412]
[-181.59550476 548.08557129]
[-197.49748230 547.59185791]
[-213.34657288 546.20654297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 18]
[6 17]
[7 16]
[8 15]
[9 14]
[90 111]
[91 110]
[92 109]
[94 107]
[96 105]
[97 104]
[98 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
