%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCGUUGACUAUUCUCUACAAACCACAAAGACAUUGGAACACUAUACCUAUUAUUCGGCGxxxxxxxxxxUGUAUGUCUCCAUCUAUUGAUGAGGGUCUUACUCUUUUAGUAUAAAUAGUACCGUUAACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[82.49782562 437.73135376]
[82.49782562 422.73135376]
[82.49782562 407.73135376]
[82.49782562 392.73135376]
[82.49782562 377.73135376]
[82.49782562 362.73135376]
[82.49782562 347.73135376]
[82.49782562 332.73135376]
[82.49782562 317.73135376]
[82.49782562 302.73135376]
[66.35135651 297.34210205]
[52.98003387 286.76882935]
[43.98741913 272.25830078]
[40.45917511 255.53079224]
[42.83199310 238.57595825]
[50.83963776 223.41638184]
[63.54268265 211.86613464]
[79.43872070 205.31381226]
[78.50308990 190.34301758]
[77.56745911 175.37222290]
[76.63183594 160.40144348]
[75.69620514 145.43064880]
[74.76057434 130.45985413]
[81.35919189 88.10827637]
[74.45219421 74.79312134]
[67.54519653 61.47796631]
[52.74792099 56.61192322]
[45.93292236 43.01007080]
[50.66313934 28.93311501]
[43.75614166 15.61795998]
[36.84914017 2.30280375]
[21.82871056 4.20333815]
[7.09199667 0.85651451]
[-5.58665180 -7.31490564]
[-14.68745804 -19.30846214]
[-19.12738991 -33.66493988]
[-18.38901520 -48.64590454]
[-12.58072662 -62.44419861]
[-2.42133975 -73.40193939]
[-9.32833862 -86.71709442]
[-16.23533630 -100.03225708]
[-23.14233589 -113.34741211]
[-30.04933357 -126.66256714]
[-36.95633316 -139.97772217]
[-40.82967758 -142.24899292]
[-43.47515488 -145.34294128]
[-44.78439713 -148.75875854]
[-44.82763290 -152.01330566]
[-43.83152390 -154.69940186]
[-49.60779572 -168.54261780]
[-55.38406754 -182.38583374]
[-70.15747070 -179.49940491]
[-85.20948792 -179.64627075]
[-99.92375946 -182.82040405]
[-113.69773865 -188.89186096]
[-125.96738434 -197.61198425]
[-136.23027039 -208.62370300]
[-144.06613159 -221.47610474]
[-149.15411377 -235.64286804]
[-151.28582764 -250.54389954]
[-150.37402344 -265.56900024]
[-146.45600891 -280.10290527]
[-139.69224548 -293.55044556]
[-130.35969543 -305.36096191]
[-118.84051514 -315.05081177]
[-105.60641479 -322.22323608]
[-91.19931793 -326.58447266]
[-76.20919800 -327.95599365]
[-61.24987411 -326.28158569]
[-46.93393326 -321.62985229]
[-33.84759903 -314.19125366]
[-22.52675247 -304.27038574]
[-13.43497086 -292.27355957]
[-6.94455862 -278.69195557]
[-3.32129478 -264.08178711]
[-2.71354914 -249.04133606]
[-5.14620829 -234.18646240]
[-10.51965714 -220.12550354]
[-18.61385536 -207.43420410]
[-29.09735107 -196.63229370]
[-41.54085159 -188.16210938]
[-35.76457977 -174.31889343]
[-29.98830605 -160.47567749]
[-23.64117622 -146.88471985]
[-16.73417854 -133.56956482]
[-9.82717991 -120.25440979]
[-2.92018127 -106.93925476]
[3.98681736 -93.62409973]
[10.89381599 -80.30893707]
[25.70288277 -82.30313873]
[40.32809830 -79.10435486]
[53.00016403 -71.07981873]
[62.17932129 -59.18172836]
[66.74242401 -44.83431625]
[66.12033081 -29.76337624]
[60.36885071 -15.78866863]
[50.16429520 -4.60419464]
[57.07129669 8.71096134]
[63.97829437 22.02611732]
[78.21040344 26.26670074]
[85.40476227 39.67176819]
[80.86035156 54.57096481]
[87.76734924 67.88612366]
[94.67434692 81.20127869]
[96.13893890 66.27294922]
[108.14835358 57.28551102]
[122.88379669 60.09027100]
[130.75169373 72.86118317]
[126.62962341 87.28367615]
[113.20170593 93.96791077]
[128.10360718 95.68060303]
[143.00550842 97.39329529]
[157.90740967 99.10597992]
[171.31607056 90.29759979]
[186.51745605 95.42570496]
[191.85037231 110.55644989]
[183.22386169 124.08282471]
[167.25544739 125.62855530]
[156.19473267 114.00788116]
[141.29281616 112.29519653]
[126.39092255 110.58250427]
[111.48902130 108.86981201]
[106.04960632 114.03341675]
[95.17078400 124.36062622]
[89.73136902 129.52423096]
[90.66699982 144.49501038]
[91.60262299 159.46580505]
[92.53825378 174.43659973]
[93.47388458 189.40739441]
[94.40950775 204.37818909]
[107.17835999 207.29199219]
[118.73461151 213.42646790]
[128.28288269 222.35139465]
[135.16812134 233.44479370]
[138.92042542 245.93621826]
[139.28727722 258.96032715]
[136.25036621 271.61679077]
[130.02645874 283.03253174]
[121.05191040 292.42196655]
[109.95210266 299.14102173]
[97.49782562 302.73135376]
[97.49782562 317.73135376]
[97.49782562 332.73135376]
[97.49782562 347.73135376]
[97.49782562 362.73135376]
[97.49782562 377.73135376]
[97.49782562 392.73135376]
[97.49782562 407.73135376]
[97.49782562 422.73135376]
[97.49782562 437.73135376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[18 130]
[19 129]
[20 128]
[21 127]
[22 126]
[23 125]
[24 104]
[25 103]
[26 102]
[29 99]
[30 98]
[31 97]
[39 89]
[40 88]
[41 87]
[42 86]
[43 85]
[44 84]
[49 83]
[50 82]
[51 81]
[110 122]
[111 121]
[112 120]
[113 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
