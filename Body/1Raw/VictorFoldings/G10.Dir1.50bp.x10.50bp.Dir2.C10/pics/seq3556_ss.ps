%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUUCUACUAUGAACCCCCCUCCCCAUACCCAACCCCCUGGUCAACCUCAACCUAGGCCUCxxxxxxxxxxAAUACCAAACGCCCCUCUUCGUCUGAUCCGUCCUAAUCACAGCAGUCCUACUUCUCCUAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[10.61058903 211.52093506]
[0.62786233 222.71669006]
[-9.35486412 233.91246033]
[-19.33759117 245.10823059]
[-29.20331383 256.40722656]
[-38.95096588 267.80825806]
[-48.69861603 279.20925903]
[-58.44626999 290.61029053]
[-68.19392395 302.01132202]
[-77.94157410 313.41232300]
[-81.16931915 322.02822876]
[-88.01255035 324.94641113]
[-97.99527740 336.14218140]
[-107.97800446 347.33795166]
[-106.82415771 363.10006714]
[-117.21684265 375.00668335]
[-132.99028015 375.99380493]
[-144.78634644 365.47583008]
[-145.60667419 349.69284058]
[-134.96455383 338.00863647]
[-119.17376709 337.35522461]
[-109.19104767 326.15945435]
[-99.20832062 314.96368408]
[-89.34259796 303.66467285]
[-79.59494019 292.26367188]
[-69.84729004 280.86264038]
[-60.09963989 269.46160889]
[-50.35198593 258.06060791]
[-40.60433578 246.65957642]
[-38.63540649 239.48539734]
[-30.53335571 235.12550354]
[-20.55063057 223.92973328]
[-10.56790352 212.73396301]
[-0.58517706 201.53820801]
[-12.43761063 188.23359680]
[-22.54248238 173.55761719]
[-30.74273872 157.73838806]
[-36.91092300 141.02174377]
[-40.95117188 123.66751862]
[-42.80068588 105.94544220]
[-42.43072128 88.13095856]
[-39.84702301 70.50094604]
[-35.08975601 53.32942963]
[-28.23285484 36.88328934]
[-19.38289452 21.41814041]
[-8.67742443 7.17434883]
[-19.55624962 -3.15285635]
[-30.43507576 -13.48006153]
[-41.42073822 -23.69354057]
[-52.51205444 -33.79219055]
[-63.60337067 -43.89083862]
[-78.77118683 -40.61716080]
[-92.95279694 -46.91489792]
[-100.69508362 -60.36244583]
[-99.02098083 -75.78894806]
[-88.57421875 -87.26260376]
[-73.37178040 -90.37155151]
[-59.25932312 -83.92034149]
[-51.66336823 -70.38958740]
[-53.50472260 -54.98215485]
[-42.41340637 -44.88350677]
[-31.32209015 -34.78485489]
[-24.21283150 -32.59303284]
[-20.10787010 -24.35888672]
[-9.22904491 -14.03168106]
[1.64978004 -3.70447659]
[8.80204010 -10.04688168]
[16.36226845 -15.89699841]
[24.29664803 -21.22865486]
[32.56968307 -26.01799965]
[41.14436340 -30.24361038]
[49.98233032 -33.88658142]
[59.04404831 -36.93061829]
[68.28898621 -39.36210251]
[77.67577362 -41.17015839]
[87.16243744 -42.34669495]
[96.70652008 -42.88644791]
[106.26534271 -42.78700638]
[115.79613495 -42.04881668]
[125.25626373 -40.67517853]
[134.60340881 -38.67223358]
[143.79576111 -36.04894638]
[152.79219055 -32.81705093]
[161.55245972 -28.99100494]
[170.03736877 -24.58792305]
[178.20898438 -19.62750435]
[186.03071594 -14.13193703]
[193.46760559 -8.12580585]
[200.48637390 -1.63597941]
[211.57769775 -11.73462868]
[222.66900635 -21.83327866]
[220.82765198 -37.24071503]
[228.42361450 -50.77146149]
[242.53607178 -57.22267151]
[257.73849487 -54.11372375]
[268.18527222 -42.64007187]
[269.85937500 -27.21356964]
[262.11709595 -13.76602077]
[247.93547058 -7.46828175]
[232.76765442 -10.74196339]
[221.67634583 -0.64331365]
[210.58502197 9.45533562]
[231.32257080 43.59285355]
[241.80358887 82.13587189]
[256.76382446 81.04456329]
[271.72409058 79.95325470]
[286.68432617 78.86194611]
[294.75280762 65.60754395]
[309.08404541 59.65812683]
[324.16735840 63.30136871]
[334.20294189 75.13636017]
[335.33184814 90.61231995]
[327.12005615 103.77841187]
[312.72512817 109.57200623]
[297.68222046 105.76535797]
[287.77563477 93.82218933]
[272.81539917 94.91350555]
[257.85513306 96.00481415]
[242.89489746 97.09612274]
[242.75721741 106.91083527]
[241.94622803 116.69294739]
[240.46571350 126.39633179]
[238.32269287 135.97520447]
[235.52726746 145.38441467]
[232.09260559 154.57954407]
[228.03492737 163.51725769]
[223.37335205 172.15538025]
[218.12988281 180.45318604]
[212.32923889 188.37152100]
[205.99879456 195.87304688]
[199.16838074 202.92237854]
[191.87023926 209.48626709]
[184.13879395 215.53375244]
[176.01048279 221.03631592]
[167.52368164 225.96800232]
[158.71838379 230.30554199]
[149.63613892 234.02848816]
[140.31979370 237.11929321]
[130.81326294 239.56333923]
[121.16139984 241.34913635]
[111.40972900 242.46824646]
[101.60424042 242.91539001]
[91.79119110 242.68847656]
[82.01685333 241.78854370]
[72.32733917 240.21986389]
[62.76834869 237.98980713]
[53.38496017 235.10893250]
[44.22143173 231.59078979]
[35.32099152 227.45199585]
[26.72561646 222.71205139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[4 31]
[5 29]
[6 28]
[7 27]
[8 26]
[9 25]
[10 24]
[12 23]
[13 22]
[14 21]
[46 66]
[47 65]
[48 64]
[49 62]
[50 61]
[51 60]
[89 102]
[90 101]
[91 100]
[104 119]
[105 118]
[106 117]
[107 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
