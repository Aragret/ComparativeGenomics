%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCCAAGUCAAUAGAAGCCGGCGUAAAGAGUGUUUUAGAUCACCCCCUCCCCAAUAAAGCxxxxxxxxxxUAGCAAUAAAACUAGGAAUAGCCCCCUUUCACUUCUGAGUCCCAGAGGUUACCCAAGGCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[104.33827209 277.22378540]
[104.02621460 262.22705078]
[103.71415710 247.23028564]
[103.40209961 232.23353577]
[103.09004211 217.23678589]
[102.77799225 202.24002075]
[102.46593475 187.24327087]
[102.15387726 172.24652100]
[101.84181976 157.24977112]
[87.47363281 152.94218445]
[78.96254730 165.29374695]
[70.45145416 177.64532471]
[69.68502808 194.02655029]
[54.99304962 201.31199646]
[41.48936462 192.00703430]
[43.06541061 175.68379211]
[58.09988403 169.13423157]
[66.61097717 156.78266907]
[75.12206268 144.43109131]
[63.60127640 131.89088440]
[57.38352966 116.95235443]
[56.69509506 101.63398743]
[61.05399323 87.81717682]
[69.39006805 77.01606750]
[80.23354340 70.21205902]
[74.74651337 56.25166702]
[69.25948334 42.29127502]
[55.04748154 35.91500854]
[49.68172455 21.67902374]
[55.84810257 8.16934681]
[50.36107254 -5.79104280]
[44.87404251 -19.75143242]
[30.48891830 -18.61659241]
[16.38452339 -21.58738899]
[3.70739889 -28.41312218]
[-6.51453257 -38.53009796]
[-13.45532417 -51.10817337]
[-16.55773354 -65.11887360]
[-15.57795143 -79.41947174]
[-10.60474205 -92.84621429]
[-2.05147982 -104.30899811]
[9.37819672 -112.87989807]
[4.18278074 -126.95141602]
[-1.01263475 -141.02293396]
[-6.20805025 -155.09445190]
[-11.40346622 -169.16596985]
[-16.59888077 -183.23748779]
[-31.32751274 -180.24285889]
[-46.34066391 -179.53173828]
[-61.28641129 -181.12081909]
[-75.81439209 -184.97285461]
[-89.58406830 -190.99751282]
[-102.27263641 -199.05360413]
[-113.58267975 -208.95225525]
[-123.24906158 -220.46145630]
[-131.04519653 -233.31138611]
[-136.78831482 -247.20083618]
[-140.34381104 -261.80422974]
[-141.62832642 -276.77920532]
[-140.61175537 -291.77478027]
[-137.31793213 -306.43942261]
[-131.82405090 -320.42932129]
[-124.25891113 -333.41659546]
[-114.79985046 -345.09677124]
[-103.66860199 -355.19607544]
[-91.12609100 -363.47772217]
[-77.46633911 -369.74761963]
[-63.00954437 -373.85876465]
[-48.09460068 -375.71481323]
[-33.07113266 -375.27224731]
[-18.29131508 -372.54141235]
[-4.10160494 -367.58636475]
[9.16537094 -360.52322388]
[21.19861412 -351.51760864]
[31.71604729 -340.78054810]
[40.47113037 -328.56381226]
[47.25862885 -315.15371704]
[51.91943359 -300.86465454]
[54.34428787 -286.03158569]
[54.47635269 -271.00216675]
[52.31253052 -256.12875366]
[47.90354538 -241.75999451]
[41.35275269 -228.23271179]
[32.81370544 -215.86399841]
[22.48657417 -204.94378662]
[10.61344528 -195.72808838]
[-2.52736211 -188.43290710]
[2.66805339 -174.36138916]
[7.86346912 -160.28987122]
[13.05888462 -146.21835327]
[18.25429916 -132.14683533]
[23.44971657 -118.07530975]
[39.06313705 -118.86305237]
[54.17716980 -114.79216003]
[67.31527710 -106.24793243]
[77.19013977 -94.05331421]
[82.82978821 -79.38957977]
[83.67326355 -63.68198013]
[79.62641144 -48.46115112]
[71.07216644 -35.21400833]
[58.83443069 -25.23846436]
[64.32146454 -11.27807426]
[69.80849457 2.68231559]
[83.52333069 8.37782097]
[89.28683472 22.45747566]
[83.21987152 36.80424500]
[88.70690155 50.76463318]
[94.19393921 64.72502136]
[122.37125397 65.87171936]
[144.47027588 88.77769470]
[144.78121948 124.24202728]
[159.19343567 128.39991760]
[173.60565186 132.55780029]
[188.01786804 136.71568298]
[202.43008423 140.87358093]
[216.84230042 145.03146362]
[231.25451660 149.18934631]
[245.93719482 142.72416687]
[260.07891846 150.29988098]
[262.83132935 166.10505676]
[252.08306885 178.01531982]
[236.07925415 176.89411926]
[227.09663391 163.60156250]
[212.68441772 159.44367981]
[198.27220154 155.28579712]
[183.85998535 151.12789917]
[169.44776917 146.97001648]
[155.03555298 142.81213379]
[140.62333679 138.65423584]
[134.67713928 143.22511292]
[145.33164978 153.78358459]
[155.98616028 164.34205627]
[169.67109680 170.48394775]
[174.43505859 184.70733643]
[167.21017456 197.85272217]
[152.64909363 201.45480347]
[140.12878418 193.19395447]
[137.71212769 178.38940430]
[130.24844360 165.37812805]
[122.78476715 152.36683655]
[116.83857727 156.93771362]
[117.15062714 171.93446350]
[117.46268463 186.93121338]
[117.77474213 201.92796326]
[118.08679962 216.92472839]
[118.39885712 231.92147827]
[118.71091461 246.91822815]
[119.02296448 261.91497803]
[119.33502197 276.91174316]
[121.92602539 296.11947632]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 19]
[11 18]
[12 17]
[25 108]
[26 107]
[27 106]
[30 103]
[31 102]
[32 101]
[42 92]
[43 91]
[44 90]
[45 89]
[46 88]
[47 87]
[111 129]
[112 128]
[113 127]
[114 126]
[115 125]
[116 124]
[117 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
