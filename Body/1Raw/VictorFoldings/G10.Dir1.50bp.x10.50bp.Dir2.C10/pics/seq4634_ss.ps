%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCCGAAAAUGUUGGUUAUACCCUUCCCGUACUAAUUAAUCCCCUGGCCCAACCCGUCAUxxxxxxxxxxCCAUCAUUCCCCCUAAAUAAAUUAAAAAAACUAUUAAACCCAUAUAACCUCCCCCAAAAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 301.17327881]
[92.50000000 286.17327881]
[92.50000000 271.17327881]
[92.50000000 256.17327881]
[92.50000000 241.17329407]
[92.50000000 226.17329407]
[92.50000000 211.17329407]
[92.50000000 196.17329407]
[92.50000000 181.17329407]
[92.50000000 166.17329407]
[78.79141235 163.12962341]
[66.02577209 157.27919006]
[54.77064133 148.88209534]
[45.52643204 138.31167603]
[38.70414352 126.03789520]
[34.60710144 112.60646057]
[33.41746140 98.61453247]
[35.18811417 84.68420410]
[39.84033585 71.43482971]
[47.16728973 59.45547104]
[56.84321213 49.27874374]
[68.43790436 41.35711288]
[81.43586731 36.04277039]
[95.25920105 33.57200241]
[95.88317871 18.58498573]
[96.50715637 3.59797025]
[97.13113403 -11.38904572]
[97.75511169 -26.37606239]
[98.37908936 -41.36307907]
[99.00306702 -56.35009384]
[84.08556366 -57.97412872]
[69.30985260 -60.59091568]
[54.74192047 -64.18877411]
[40.44683075 -68.75163269]
[26.48843002 -74.25911713]
[12.92906189 -80.68661499]
[-0.17071488 -88.00543976]
[-12.75239277 -96.18288422]
[-24.75977898 -105.18243408]
[-36.13924408 -114.96389771]
[-46.83996582 -125.48358917]
[-56.81415176 -136.69451904]
[-66.01725006 -148.54661560]
[-74.40816498 -160.98693848]
[-81.94941711 -173.95994568]
[-88.60731506 -187.40768433]
[-94.35214233 -201.27008057]
[-99.15822601 -215.48524475]
[-103.00410461 -229.98968506]
[-105.87260437 -244.71859741]
[-107.75090790 -259.60620117]
[-108.63063049 -274.58605957]
[-108.50784302 -289.59118652]
[-107.38308716 -304.55462646]
[-105.26139832 -319.40951538]
[-102.15224457 -334.08950806]
[-98.06951904 -348.52905273]
[-93.03144836 -362.66366577]
[-87.06053162 -376.43020630]
[-80.18344879 -389.76718140]
[-72.43090820 -402.61502075]
[-63.83753204 -414.91638184]
[-54.44170380 -426.61627197]
[-44.28538513 -437.66247559]
[-33.41394424 -448.00564575]
[-21.87592697 -457.59954834]
[-9.72287083 -466.40139771]
[2.99094653 -474.37185669]
[16.20874214 -481.47531128]
[29.87148094 -487.68005371]
[43.91814041 -492.95837402]
[58.28598785 -497.28668213]
[72.91085052 -500.64566040]
[87.72740936 -503.02029419]
[102.66948700 -504.39999390]
[117.67034912 -504.77856445]
[132.66300964 -504.15435791]
[147.58047485 -502.53012085]
[162.35615540 -499.91314697]
[176.92405701 -496.31512451]
[191.21908569 -491.75207520]
[205.17741394 -486.24441528]
[218.73669434 -479.81674194]
[231.83638000 -472.49777222]
[244.41796875 -464.32015991]
[256.42523193 -455.32046509]
[267.80456543 -445.53884888]
[278.50515747 -435.01901245]
[288.47921753 -423.80798340]
[297.68215942 -411.95574951]
[306.07290649 -399.51531982]
[313.61401367 -386.54223633]
[320.27172852 -373.09442139]
[326.01638794 -359.23193359]
[330.82229614 -345.01669312]
[334.66799927 -330.51223755]
[337.53631592 -315.78326416]
[339.41442871 -300.89562988]
[340.29394531 -285.91580200]
[340.17098999 -270.91064453]
[339.04605103 -255.94723511]
[336.92416382 -241.09237671]
[333.81481934 -226.41241455]
[329.73190308 -211.97291565]
[324.69366455 -197.83837891]
[318.72259521 -184.07191467]
[311.84533691 -170.73501587]
[304.09262085 -157.88726807]
[295.49908447 -145.58602905]
[286.10311890 -133.88624573]
[275.94665527 -122.84017181]
[265.07510376 -112.49714661]
[253.53695679 -102.90336609]
[241.38378906 -94.10166931]
[228.66986084 -86.13137817]
[215.45198059 -79.02808380]
[201.78916931 -72.82351685]
[187.74243164 -67.54537964]
[173.37454224 -63.21725082]
[158.74963379 -59.85846329]
[143.93304443 -57.48401642]
[128.99095154 -56.10451126]
[113.99008179 -55.72611618]
[113.36610413 -40.73910141]
[112.74212646 -25.75208473]
[112.11814880 -10.76506805]
[111.49417114 4.22194767]
[110.87019348 19.20896339]
[110.24621582 34.19598007]
[125.56495667 38.50539017]
[139.42401123 46.32596970]
[151.03205872 57.21118164]
[159.72633362 70.53952026]
[165.01039124 85.54996490]
[166.58253479 101.38546753]
[164.35301208 117.14186096]
[158.44911194 131.91950989]
[149.20793152 144.87463379]
[137.15711975 155.26754761]
[122.98474121 162.50483704]
[107.50000000 166.17329407]
[107.50000000 181.17329407]
[107.50000000 196.17329407]
[107.50000000 211.17329407]
[107.50000000 226.17329407]
[107.50000000 241.17329407]
[107.50000000 256.17327881]
[107.50000000 271.17327881]
[107.50000000 286.17327881]
[107.50000000 301.17327881]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[24 129]
[25 128]
[26 127]
[27 126]
[28 125]
[29 124]
[30 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
