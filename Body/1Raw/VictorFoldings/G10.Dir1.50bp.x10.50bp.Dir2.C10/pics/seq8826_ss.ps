%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCCCUAACAGGGGCCCUCUCAGCCCUCCUAAUGACCUCCGGCCUAGCCAUGUGAUUUCAxxxxxxxxxxUCCUCCGACCCCCUAACAACCCCCCUCCUAAUACUAACUACCUGACUCCUACCCCUCACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[166.05155945 50.00308609]
[154.96025085 60.10173416]
[143.86892700 70.20038605]
[132.77761841 80.29903412]
[121.68629456 90.39768219]
[110.59498596 100.49633026]
[100.04369354 111.15795898]
[90.06096649 122.35372162]
[80.07823944 133.54948425]
[70.09551239 144.74525452]
[66.68922424 153.29212952]
[59.78676224 156.06732178]
[49.57328415 167.05299377]
[39.35980225 178.03865051]
[29.14632225 189.02432251]
[18.93284225 200.00997925]
[12.57620335 215.72715759]
[-4.28642797 213.96987915]
[-7.26586962 197.27978516]
[7.94717836 189.79650879]
[18.16065788 178.81083679]
[28.37413788 167.82518005]
[38.58761978 156.83950806]
[48.80109787 145.85385132]
[58.89974594 134.76252747]
[68.88247681 123.56676483]
[78.86520386 112.37099457]
[88.84792328 101.17523193]
[74.00008392 99.04413605]
[66.22563171 86.21611786]
[71.20706940 72.06743622]
[85.30335999 66.93962097]
[98.21126556 74.58069611]
[100.49633026 89.40501404]
[111.58764648 79.30636597]
[122.67896271 69.20771790]
[133.77027893 59.10906982]
[144.86158752 49.01041794]
[155.95291138 38.91176987]
[140.12059021 17.96354675]
[126.81643677 -4.67329454]
[116.21855164 -28.69514275]
[108.46875763 -53.77984619]
[103.67068481 -79.59103394]
[101.88839722 -105.78262329]
[103.14550018 -132.00346375]
[107.42487335 -157.90205383]
[114.66886902 -183.13125610]
[124.78010559 -207.35287476]
[137.62277222 -230.24234009]
[153.02447510 -251.49290466]
[141.72546387 -261.35864258]
[130.42646790 -271.22436523]
[114.51860046 -277.08749390]
[115.74885559 -293.99673462]
[132.33786011 -297.49551392]
[140.29219055 -282.52337646]
[151.59118652 -272.65765381]
[162.89019775 -262.79193115]
[171.01931763 -271.06939697]
[179.56137085 -278.92013550]
[188.49398804 -286.32354736]
[197.79376221 -293.26025391]
[207.43635559 -299.71206665]
[217.39649963 -305.66207886]
[227.64811707 -311.09466553]
[238.16432190 -315.99566650]
[248.91758728 -320.35214233]
[259.87973022 -324.15274048]
[271.02206421 -327.38745117]
[282.31539917 -330.04785156]
[293.73010254 -332.12692261]
[305.23629761 -333.61920166]
[316.80386353 -334.52078247]
[328.40246582 -334.82931519]
[340.00173950 -334.54397583]
[351.57128906 -333.66549683]
[363.08078003 -332.19616699]
[374.50009155 -330.13986206]
[385.79931641 -327.50192261]
[396.94882202 -324.28924561]
[407.91937256 -320.51028442]
[418.68228149 -316.17492676]
[429.20932007 -311.29449463]
[439.47293091 -305.88177490]
[449.44616699 -299.95095825]
[459.10293579 -293.51757812]
[468.41793823 -286.59848022]
[477.36676025 -279.21173096]
[485.92596436 -271.37677002]
[494.07308960 -263.11404419]
[501.78683472 -254.44523621]
[509.04693604 -245.39303589]
[515.83435059 -235.98115540]
[522.13140869 -226.23425293]
[527.92150879 -216.17785645]
[533.18945312 -205.83831787]
[537.92150879 -195.24270630]
[542.10522461 -184.41877747]
[545.72967529 -173.39489746]
[548.78527832 -162.19993591]
[551.26409912 -150.86322021]
[553.15966797 -139.41445923]
[554.46691895 -127.88362885]
[555.18243408 -116.30094910]
[555.30438232 -104.69676208]
[554.83239746 -93.10147095]
[553.76776123 -81.54544830]
[552.11315918 -70.05896759]
[549.87304688 -58.67213058]
[547.05316162 -47.41476440]
[543.66094971 -36.31636429]
[539.70532227 -25.40600777]
[535.19659424 -14.71228027]
[530.14654541 -4.26320028]
[524.56842041 5.91385412]
[518.47680664 15.79221725]
[511.88772583 25.34600639]
[504.81838989 34.55018997]
[497.28729248 43.38064575]
[489.31420898 51.81424332]
[480.91998291 59.82887268]
[472.12661743 67.40354156]
[462.95712280 74.51839447]
[453.43554688 81.15478516]
[443.58682251 87.29532623]
[433.43673706 92.92392731]
[423.01190186 98.02583313]
[412.33956909 102.58766174]
[401.44778442 106.59747314]
[390.36499023 110.04473877]
[379.12026978 112.92043304]
[367.74310303 115.21701050]
[356.26321411 116.92845154]
[344.71075439 118.05025482]
[333.11596680 118.57949066]
[321.50918579 118.51475525]
[309.92086792 117.85620880]
[298.38137817 116.60557556]
[286.92089844 114.76612091]
[275.56948853 112.34266663]
[264.35690308 109.34153748]
[253.31248474 105.77060699]
[242.46519470 101.63921356]
[231.84344482 96.95817566]
[221.47505188 91.73974609]
[211.38720703 85.99760437]
[201.60632324 79.74677277]
[192.15803528 73.00363159]
[183.06709290 65.78583527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[3 37]
[4 36]
[5 35]
[6 34]
[7 28]
[8 27]
[9 26]
[10 25]
[12 24]
[13 23]
[14 22]
[15 21]
[16 20]
[51 59]
[52 58]
[53 57]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
