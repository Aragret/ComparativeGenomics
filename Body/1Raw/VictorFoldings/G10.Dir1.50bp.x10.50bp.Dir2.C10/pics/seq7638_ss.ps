%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUGCCCGCCAUCAUCCUAGUCCUCAUCGCCCUCCCAUCCCUACGCAUCCUUUACAUAACxxxxxxxxxxAAAAUGAACGAAAAUCUGUUCGCUUCAUUCAUUGCCCCCACAAUCCUAGGCCUACCCGCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[0.24750690 161.56423950]
[-12.99507904 168.60937500]
[-26.23766518 175.65451050]
[-39.33081818 182.97361755]
[-52.26887512 190.56352234]
[-65.20693207 198.15344238]
[-78.14498901 205.74334717]
[-91.08304596 213.33325195]
[-104.02109528 220.92315674]
[-116.95915222 228.51306152]
[-129.89721680 236.10298157]
[-138.58093262 252.30708313]
[-156.09552002 251.81816101]
[-168.87287903 259.67559814]
[-164.89251709 274.24725342]
[-165.18006897 289.35003662]
[-169.71223450 303.75961304]
[-178.12161255 316.30789185]
[-189.72650146 325.97760010]
[-203.58612061 331.98489380]
[-218.57695007 333.84277344]
[-233.48374939 331.40063477]
[-247.09808350 324.85641479]
[-258.31631470 314.74069214]
[-266.22900391 301.87344360]
[-270.19473267 287.29779053]
[-269.89199829 272.19531250]
[-265.34536743 257.79028320]
[-256.92337036 245.25047302]
[-245.30879211 235.59242249]
[-231.44314575 229.59906006]
[-216.45045471 227.75624084]
[-201.54612732 230.21336365]
[-187.93836975 236.77122498]
[-176.73030090 246.89823914]
[-163.95295715 239.04080200]
[-160.82194519 227.31459045]
[-150.18565369 220.67469788]
[-137.48712158 223.16491699]
[-124.54906464 215.57501221]
[-111.61100769 207.98510742]
[-98.67295074 200.39520264]
[-85.73489380 192.80528259]
[-72.79683685 185.21537781]
[-59.85878372 177.62547302]
[-46.92072678 170.03556824]
[-44.86070633 165.66157532]
[-39.99722672 162.56675720]
[-33.28279877 162.41192627]
[-20.04021454 155.36679077]
[-6.79762793 148.32165527]
[-10.59322071 138.85685730]
[-13.55185032 129.09799194]
[-15.65112591 119.11891937]
[-16.87516022 108.99514771]
[-17.21469116 98.80330658]
[-16.66714859 88.62052155]
[-15.23667526 78.52385712]
[-12.93409729 68.58972168]
[-9.77684116 58.89329529]
[-5.78880024 49.50796509]
[-1.00015593 40.50475311]
[4.55285168 31.95179749]
[10.82819748 23.91382790]
[17.77839088 16.45167351]
[25.35083199 9.62180805]
[33.48821259 3.47591901]
[42.12895203 -1.93948126]
[51.20765686 -6.58340931]
[60.65561676 -10.42072105]
[70.40133667 -13.42237473]
[80.37105560 -15.56565380]
[90.48931885 -16.83433914]
[100.67956543 -17.21883011]
[110.86466980 -16.71621513]
[120.96754456 -15.33029938]
[130.91174316 -13.07157040]
[140.62200928 -9.95712185]
[150.02484131 -6.01052523]
[159.04908752 -1.26164663]
[167.62646484 4.25357389]
[175.69203186 10.49339771]
[183.18478394 17.41060257]
[194.48377991 7.54487944]
[205.78279114 -2.32084346]
[217.08178711 -12.18656635]
[228.38079834 -22.05228996]
[239.67980957 -31.91801262]
[250.87556458 -41.90073776]
[261.96688843 -51.99938965]
[273.05819702 -62.09803772]
[284.14950562 -72.19668579]
[284.63861084 -87.99340820]
[296.21148682 -98.75649261]
[312.00216675 -98.10040283]
[322.64230347 -86.41438293]
[321.81930542 -70.63153839]
[310.02142334 -60.11555099]
[294.24816895 -61.10537338]
[283.15686035 -51.00672150]
[272.06552124 -40.90807343]
[260.97421265 -30.80942345]
[258.12738037 -23.93620682]
[249.54553223 -20.61900711]
[238.24652100 -10.75328445]
[226.94750977 -0.88756168]
[215.64851379 8.97816181]
[204.34950256 18.84388351]
[193.05050659 28.70960808]
[212.95935059 68.68063354]
[216.47558594 113.19670105]
[231.24163818 115.83557129]
[246.00770569 118.47443390]
[260.77374268 121.11329651]
[273.59588623 111.87377930]
[289.18222046 114.48949432]
[298.28564453 127.40859222]
[295.50527954 142.96638489]
[282.49066162 151.93272400]
[266.96313477 148.98803711]
[258.13488770 135.87934875]
[243.36883545 133.24049377]
[228.60278320 130.60162354]
[213.83673096 127.96276093]
[211.09487915 137.39843750]
[207.57241821 146.57133484]
[203.29409790 155.41700745]
[198.28997803 163.87327576]
[192.59523010 171.88073730]
[186.24983215 179.38313293]
[179.29841614 186.32772827]
[171.78979492 192.66574097]
[163.77674866 198.35264587]
[155.31556702 203.34846497]
[146.46571350 207.61808777]
[137.28935242 211.13154602]
[127.85099030 213.86412048]
[118.21692657 215.79663086]
[108.45485687 216.91548157]
[98.63338470 217.21282959]
[88.82151031 216.68658447]
[79.08818817 215.34042358]
[69.50180054 213.18380737]
[60.12970734 210.23191833]
[51.03776932 206.50547791]
[42.28986359 202.03065491]
[33.94746017 196.83892822]
[26.06917953 190.96675110]
[18.71037674 184.45539856]
[11.92276001 177.35060120]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[4 46]
[5 45]
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[13 36]
[14 35]
[83 109]
[84 108]
[85 107]
[86 106]
[87 105]
[88 104]
[89 102]
[90 101]
[91 100]
[92 99]
[111 124]
[112 123]
[113 122]
[114 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
