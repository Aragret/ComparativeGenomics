%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAUACCCACACCCACCCAAGAACAGGGUUUGUUAAGAUGGCAGAGCCCGGUAAUCGCAUAAAACxxxxxxxxxxCCCCCAUAAAUAGGAGAAGGCUUAGAAGAAAACCCCACAAACCCCAUUACUAAACCCACACUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[62.30964661 189.85734558]
[55.46020889 203.20219421]
[48.61076736 216.54705811]
[49.19274902 232.35755920]
[36.49756241 240.14738464]
[37.07954407 255.95788574]
[24.38435555 263.74771118]
[17.53491592 277.09255981]
[10.68547821 290.43743896]
[14.20923519 306.08871460]
[4.05761290 318.51144409]
[-11.98193169 318.17596436]
[-21.60523415 305.33963013]
[-17.43011856 289.84936523]
[-2.65937829 283.58798218]
[4.19006014 270.24313354]
[11.03949928 256.89828491]
[9.96759892 242.04229736]
[23.15270615 233.29794312]
[22.08080673 218.44195557]
[35.26591110 209.69761658]
[42.11535263 196.35276794]
[48.96479034 183.00790405]
[32.35815811 170.13905334]
[18.89597702 154.00965881]
[9.20406342 135.36952209]
[3.73296142 115.08517456]
[2.73700500 94.09957123]
[6.26249266 73.38825226]
[14.14553642 53.91403198]
[26.01967812 36.58219910]
[41.33292770 22.19845772]
[59.37342453 11.43145847]
[79.30251312 4.78172731]
[100.19377136 2.55838799]
[101.37804413 -12.39478874]
[102.56231689 -27.34796524]
[103.74658966 -42.30114365]
[104.93086243 -57.25431824]
[106.11513519 -72.20749664]
[107.29940796 -87.16067505]
[108.48368073 -102.11385345]
[92.81439972 -107.11902618]
[78.77957153 -115.68264008]
[67.17296600 -127.31587982]
[58.64994431 -141.35644531]
[53.69047546 -157.00625610]
[52.57210541 -173.37686157]
[55.35442352 -189.53979492]
[61.87589645 -204.57928467]
[71.76325989 -217.64414978]
[84.45285034 -227.99592590]
[99.22277069 -235.05065918]
[115.23393250 -238.41181946]
[115.53028870 -253.40888977]
[115.82664490 -268.40594482]
[116.12300873 -283.40301514]
[101.27652740 -285.69769287]
[86.86838531 -289.95077515]
[73.15570068 -296.08642578]
[60.38320923 -303.99505615]
[48.77883911 -313.53561401]
[38.54968643 -324.53778076]
[29.87830162 -336.80523682]
[22.91943932 -350.11904907]
[17.79728508 -364.24163818]
[14.60325146 -378.92092896]
[13.39433956 -393.89495850]
[14.19212341 -408.89654541]
[16.98236656 -423.65789795]
[21.71527290 -437.91564941]
[28.30637741 -451.41528320]
[36.63805389 -463.91595459]
[46.56161880 -475.19454956]
[57.89996719 -485.04974365]
[70.45075989 -493.30572510]
[83.99000549 -499.81512451]
[98.27608490 -504.46176147]
[113.05404663 -507.16275024]
[128.06016541 -507.86984253]
[143.02662659 -506.57046509]
[157.68634033 -503.28775024]
[171.77769470 -498.08035278]
[185.04920959 -491.04113770]
[197.26403809 -482.29577637]
[208.20419312 -472.00030518]
[217.67442322 -460.33850098]
[225.50573730 -447.51843262]
[231.55838013 -433.76892090]
[235.72431946 -419.33532715]
[237.92919922 -404.47525024]
[238.13371277 -389.45388794]
[236.33416748 -374.53930664]
[232.56269836 -359.99765015]
[226.88661194 -346.08847046]
[219.40719604 -333.05996704]
[210.25793457 -321.14465332]
[199.60211182 -310.55520630]
[187.62988281 -301.48052979]
[174.55491638 -294.08267212]
[160.61054993 -288.49356079]
[146.04562378 -284.81301880]
[131.12007141 -283.10665894]
[130.82371521 -268.10958862]
[130.52735901 -253.11253357]
[130.23100281 -238.11544800]
[143.52142334 -235.05120850]
[155.94955444 -229.41972351]
[167.02473450 -221.44099426]
[176.30921936 -211.42773438]
[183.43556213 -199.77313232]
[188.12106323 -186.93534851]
[190.17907715 -173.41963196]
[189.52638245 -159.75831604]
[186.18656921 -146.48988342]
[180.28919983 -134.13777161]
[172.06474304 -123.18972015]
[161.83564758 -114.07846832]
[150.00360107 -107.16468811]
[137.03385925 -102.72269440]
[123.43685913 -100.92958069]
[122.25258636 -85.97640228]
[121.06831360 -71.02322388]
[119.88403320 -56.07004547]
[118.69976044 -41.11687088]
[117.51548767 -26.16369247]
[116.33121490 -11.21051598]
[115.14694214 3.74266100]
[125.21867371 5.87814379]
[135.00886536 9.06439209]
[144.40821838 13.26583385]
[153.31179810 18.43556595]
[161.62022400 24.51587296]
[169.24072266 31.43887520]
[176.08822632 39.12728882]
[182.08628845 47.49527359]
[187.16795349 56.44941711]
[191.27648926 65.88975525]
[194.36601257 75.71089172]
[196.40205383 85.80319214]
[197.36187744 96.05398560]
[197.23475647 106.34883118]
[196.02212524 116.57279968]
[193.73750305 126.61174774]
[190.40641785 136.35360718]
[186.06604004 145.68962097]
[180.76484680 154.51556396]
[174.56198120 162.73289490]
[167.52673340 170.24987793]
[159.73760986 176.98262024]
[151.28160095 182.85592651]
[142.25306702 187.80422974]
[132.75283813 191.77230835]
[122.88697052 194.71585083]
[112.76557922 196.60198975]
[102.50168610 197.40968323]
[92.20985413 197.12991333]
[82.00499725 195.76577759]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[5 19]
[7 17]
[8 16]
[9 15]
[35 128]
[36 127]
[37 126]
[38 125]
[39 124]
[40 123]
[41 122]
[42 121]
[54 106]
[55 105]
[56 104]
[57 103]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
