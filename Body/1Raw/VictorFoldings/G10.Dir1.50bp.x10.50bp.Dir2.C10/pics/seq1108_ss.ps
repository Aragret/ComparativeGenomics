%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:33:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUAACCUUUAGCAAUAAACGAAAGUUUAACUAAGCUAUACUAACCCCAGGGUUGGUCAAUxxxxxxxxxxAAAAAACAAUAGCCUCAUCAUCCCCACCAUCAUAGCCACCAUCACCCUCCUUAACCUCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[99.80727386 187.91514587]
[98.56040192 172.96705627]
[97.31352997 158.01898193]
[96.06665039 143.07089233]
[94.81977844 128.12280273]
[93.57290649 113.17471313]
[81.40106964 104.40850830]
[66.82836151 107.96327209]
[52.25566101 111.51802826]
[37.68296051 115.07279205]
[23.11025620 118.62755585]
[8.53755379 122.18231964]
[-6.03514957 125.73707581]
[-9.23702240 137.89703369]
[-17.27863312 147.46954346]
[-28.57225227 152.66076660]
[-40.92874908 152.53251648]
[-51.98186111 147.17121887]
[-59.64132690 137.65948486]
[-74.34928894 140.60496521]
[-89.05725098 143.55044556]
[-103.76521301 146.49592590]
[-113.91221619 163.76686096]
[-133.17146301 168.04450989]
[-149.17709351 157.03585815]
[-163.67269897 160.89302063]
[-178.16828918 164.75018311]
[-192.66387939 168.60734558]
[-207.15948486 172.46450806]
[-218.38725281 184.41729736]
[-234.28855896 180.40724182]
[-238.50550842 164.55955505]
[-226.70005798 153.17695618]
[-211.01664734 157.96890259]
[-196.52104187 154.11174011]
[-182.02545166 150.25459290]
[-167.52984619 146.39743042]
[-153.03425598 142.54026794]
[-150.43272400 132.49578857]
[-143.81874084 124.39611816]
[-134.35136414 119.76782990]
[-123.73500061 119.51964569]
[-113.91275024 123.76480865]
[-106.71069336 131.78796387]
[-92.00273132 128.84248352]
[-77.29476929 125.89700317]
[-62.58681107 122.95152283]
[-56.01656723 106.61445618]
[-40.84696960 97.36870575]
[-23.00399017 99.04515076]
[-9.58991146 111.16437531]
[4.98279142 107.60961151]
[19.55549431 104.05484772]
[34.12819672 100.50009155]
[48.70090103 96.94532776]
[63.27360153 93.39056396]
[77.84630585 89.83580017]
[104.45594788 80.60494232]
[114.43867493 69.40917969]
[124.42140198 58.21341324]
[134.40412903 47.01764679]
[144.38685608 35.82188034]
[154.13450623 24.42086029]
[163.64286804 12.81951809]
[173.15122986 1.21817720]
[182.65957642 -10.38316441]
[172.25112915 -21.20908546]
[163.19619751 -33.19008636]
[155.62187195 -46.15797043]
[149.63450623 -59.93068695]
[145.31813049 -74.31489563]
[142.73336792 -89.10865021]
[141.91650391 -104.10428619]
[142.87898254 -119.09128571]
[145.60729980 -133.85923767]
[150.06317139 -148.20085144]
[156.18402100 -161.91476440]
[163.88392639 -174.80847168]
[173.05480957 -186.70095825]
[183.56791687 -197.42527771]
[195.27565002 -206.83087158]
[208.01365662 -214.78572083]
[221.60313416 -221.17811584]
[235.85327148 -225.91833496]
[250.56404114 -228.93984985]
[265.52893066 -230.20021057]
[280.53784180 -229.68174744]
[295.38009644 -227.39173889]
[309.84729004 -223.36231995]
[323.73638916 -217.65005493]
[336.85235596 -210.33515930]
[349.01107788 -201.52029419]
[360.04187012 -191.32922363]
[369.78988647 -179.90501404]
[378.11825562 -167.40803528]
[384.91009521 -154.01373291]
[390.07000732 -139.91014099]
[393.52563477 -125.29524231]
[395.22839355 -110.37421417]
[395.15438843 -95.35652924]
[393.30468750 -80.45301056]
[389.70523071 -65.87287140]
[384.40658569 -51.82080460]
[377.48309326 -38.49407578]
[369.03198242 -26.07976723]
[359.17187500 -14.75216293]
[348.04119873 -4.67028093]
[335.79620361 4.02434397]
[322.60879517 11.20965290]
[308.66412354 16.78477478]
[294.15789795 20.67144585]
[279.29382324 22.81509972]
[264.28051758 23.18564415]
[249.32878113 21.77787971]
[234.64849854 18.61156654]
[220.44575500 13.73115540]
[206.91993713 7.20515966]
[194.26092529 -0.87480557]
[184.75256348 10.72653580]
[175.24420166 22.32787704]
[165.73583984 33.92921829]
[165.31831360 38.74597931]
[161.82780457 43.33374786]
[155.58262634 45.80460739]
[145.59989929 57.00037384]
[135.61717224 68.19613647]
[125.63443756 79.39190674]
[115.65171051 90.58766937]
[127.08650970 80.87966156]
[141.53892517 76.86373138]
[156.34292603 79.28069305]
[168.76760864 87.68469238]
[176.52099609 100.52544403]
[178.17283630 115.43421173]
[173.41839600 129.66078186]
[163.13473511 140.58078003]
[149.21888733 146.17979431]
[134.23788452 145.42497253]
[120.95529175 138.45555115]
[111.82134247 126.55719757]
[108.52098846 111.92784119]
[109.76786804 126.87592316]
[111.01473999 141.82402039]
[112.26161194 156.77209473]
[113.50849152 171.72018433]
[114.75536346 186.66827393]
[126.02525330 198.08621216]
[123.98201752 213.99861145]
[110.19305420 222.19886780]
[95.23607635 216.39642334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 146]
[2 145]
[3 144]
[4 143]
[5 142]
[6 141]
[7 57]
[8 56]
[9 55]
[10 54]
[11 53]
[12 52]
[13 51]
[19 47]
[20 46]
[21 45]
[22 44]
[25 38]
[26 37]
[27 36]
[28 35]
[29 34]
[58 128]
[59 127]
[60 126]
[61 125]
[62 124]
[63 121]
[64 120]
[65 119]
[66 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
