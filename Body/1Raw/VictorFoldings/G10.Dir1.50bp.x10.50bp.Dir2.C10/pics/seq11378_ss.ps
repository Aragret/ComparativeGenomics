%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAACCCCUGACCCCCAUGCCUCAGGAUACUCCUCAAUAGCCAUCGCUGUAGUAUAUCCAAxxxxxxxxxxACACUAUUCUCACCAGACCUCCUAGGCGACCCAGACAAUUAUACCCUAGCCAACCCCUUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[29.76968575 231.47831726]
[22.04560089 244.33671570]
[14.32151604 257.19512939]
[6.59743071 270.05352783]
[-1.12665427 282.91192627]
[-8.44575977 296.00506592]
[-15.35275841 309.32022095]
[-22.25975609 322.63537598]
[-29.16675568 335.95053101]
[-27.88763237 352.29971313]
[-41.55819321 361.35775757]
[-56.11534119 353.80648804]
[-56.58392715 337.41403198]
[-42.48191071 329.04354858]
[-35.57491302 315.72839355]
[-28.66791344 302.41323853]
[-21.76091576 289.09808350]
[-22.51177979 285.59042358]
[-21.55975723 281.54129028]
[-18.66794586 277.77435303]
[-13.98505688 275.18783569]
[-6.26097155 262.32943726]
[1.46311319 249.47102356]
[9.18719864 236.61262512]
[16.91128349 223.75422668]
[-2.23324013 208.47676086]
[-18.61744308 190.27040100]
[-31.79894829 169.62672424]
[-41.42185593 147.10310364]
[-47.22633743 123.30769348]
[-49.05567932 98.88296509]
[-46.86048508 74.48840332]
[-40.70002365 50.78265762]
[-30.74063110 28.40579033]
[-43.51799011 20.54836464]
[-56.29534531 12.69093895]
[-69.07270050 4.83351326]
[-82.01075745 -2.75639486]
[-95.10391235 -10.07550049]
[-108.19706726 -17.39460564]
[-107.05966949 -2.43779087]
[-117.89791107 7.93199778]
[-132.78991699 6.13528347]
[-140.85083008 -6.51468086]
[-136.18878174 -20.77179527]
[-122.21200562 -26.21530914]
[-134.47438049 -34.85442352]
[-146.73674011 -43.49354172]
[-158.99911499 -52.13265610]
[-171.26147461 -60.77177429]
[-187.63385010 -61.70856094]
[-194.76606750 -76.47553253]
[-185.32113647 -89.88169098]
[-169.01516724 -88.13593292]
[-162.62236023 -73.03414154]
[-150.36000061 -64.39502716]
[-138.09762573 -55.75590897]
[-125.83525848 -47.11679459]
[-113.57289124 -38.47767639]
[-100.87796021 -30.48776054]
[-87.78480530 -23.16865540]
[-74.69165039 -15.84954929]
[-69.87656403 -16.28591919]
[-64.74627686 -13.65694523]
[-61.21527863 -7.94384384]
[-48.43791962 -0.08641825]
[-35.66056061 7.77100754]
[-22.88320541 15.62843323]
[-16.12460899 6.54456425]
[-8.69601345 -2.00009823]
[-0.64027780 -9.95625401]
[7.99611855 -17.27799988]
[17.16334724 -23.92308998]
[26.80851364 -29.85318565]
[36.87597275 -35.03407288]
[47.30763626 -39.43585587]
[58.04331589 -43.03314209]
[69.02107239 -45.80517578]
[80.17756653 -47.73596191]
[91.44842529 -48.81436157]
[102.76863098 -49.03414917]
[114.07286072 -48.39406204]
[125.29589081 -46.89779282]
[136.37297058 -44.55397034]
[147.24020386 -41.37611771]
[157.83486938 -37.38257599]
[168.09584045 -32.59637833]
[177.96392822 -27.04514885]
[187.38218689 -20.76090813]
[196.29627991 -13.77991867]
[204.65476990 -6.14245653]
[212.40945435 2.10741210]
[219.51556396 10.92208767]
[225.93209839 20.25071335]
[231.62205505 30.03946686]
[236.55259705 40.23186874]
[240.69528198 50.76911163]
[244.02619934 61.59040070]
[246.52613831 72.63330078]
[248.18064880 83.83409882]
[248.98022461 95.12816620]
[248.92024231 106.45034027]
[263.85455322 107.85264587]
[278.78884888 109.25495148]
[293.72314453 110.65724945]
[308.65747070 112.05955505]
[314.64007568 98.16482544]
[324.62512207 86.80022430]
[337.63433838 79.07913208]
[352.39324951 75.75798798]
[367.45590210 77.16216278]
[381.34661865 83.15408325]
[392.70452881 93.14673615]
[400.41690063 106.16113281]
[403.72814941 120.92225647]
[402.31387329 135.98396301]
[396.31265259 149.87066650]
[386.31240845 161.22187805]
[373.29284668 168.92552185]
[358.52951050 172.22688293]
[343.46875000 170.80253601]
[329.58605957 164.79199219]
[318.24154663 154.78413391]
[310.54663086 141.75941467]
[307.25515747 126.99386597]
[292.32086182 125.59156036]
[277.38653564 124.18925476]
[262.45223999 122.78694916]
[247.51792908 121.38465118]
[245.22489929 133.59423828]
[241.92312622 145.57048035]
[237.63557434 157.23017883]
[232.39198303 168.49237061]
[226.22882080 179.27880859]
[219.18885803 189.51458740]
[211.32101440 199.12858582]
[202.67993164 208.05403137]
[193.32563782 216.22894287]
[183.32310486 223.59654236]
[172.74180603 230.10562134]
[161.65525818 235.71099854]
[150.14042664 240.37371826]
[138.27734375 244.06140137]
[126.14837646 246.74844360]
[113.83778381 248.41616821]
[101.43107605 249.05299377]
[89.01442719 248.65449524]
[76.67407990 247.22344971]
[64.49575806 244.76979065]
[52.56404877 241.31056213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[3 23]
[4 22]
[5 21]
[6 17]
[7 16]
[8 15]
[9 14]
[34 68]
[35 67]
[36 66]
[37 65]
[38 62]
[39 61]
[40 60]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[102 129]
[103 128]
[104 127]
[105 126]
[106 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
