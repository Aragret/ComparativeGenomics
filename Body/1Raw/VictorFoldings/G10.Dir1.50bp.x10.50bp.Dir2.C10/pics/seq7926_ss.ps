%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCUACCCCCUCUAGAGCCCACUGUAAAGCUAACUUAGCAUUAACCUUUUAAGUUAAAGAUxxxxxxxxxxCCGAUGAGGCAACCAGCCAGAACGCCUGAACGCAGGCACAUACUUCCUAUUCUACACCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[16.59886742 228.63545227]
[7.83266020 240.80728149]
[-0.93354690 252.97912598]
[-8.92346287 265.67404175]
[-16.10597229 278.84262085]
[-23.28848076 292.01119995]
[-30.47098923 305.17980957]
[-37.65349960 318.34838867]
[-44.83600616 331.51696777]
[-41.70653534 347.25183105]
[-52.16701889 359.41561890]
[-68.19307709 358.67730713]
[-77.49088287 345.60327148]
[-72.92796326 330.22280884]
[-58.00458908 324.33444214]
[-50.82208252 311.16586304]
[-43.63957214 297.99728394]
[-36.45706177 284.82870483]
[-29.27455521 271.66012573]
[-22.09204483 258.49154663]
[-36.83555222 261.25360107]
[-49.32156754 252.94099426]
[-52.46110535 238.27323914]
[-44.47167969 225.57800293]
[-29.88932228 222.06304932]
[-16.99322128 229.72402954]
[-13.10538387 244.21290588]
[-4.33917665 232.04107666]
[4.42703056 219.86923218]
[-9.08252621 207.72106934]
[-21.06007004 194.06001282]
[-31.33738327 179.07792664]
[-39.77012253 162.98522949]
[-46.23986053 146.00793457]
[-50.65572739 128.38447571]
[-52.95570755 110.36238098]
[-53.10749435 92.19474030]
[-51.10895920 74.13672638]
[-65.75246429 70.88590240]
[-80.39596558 67.63507080]
[-95.03946686 64.38424683]
[-111.81253052 66.85420227]
[-118.82920074 51.42038727]
[-105.94095612 40.40542221]
[-91.78863525 49.74074554]
[-77.14513397 52.99157333]
[-62.50163651 56.24239731]
[-47.85813522 59.49322510]
[-32.23237991 22.42794037]
[-7.50338554 -9.29706764]
[-17.48611259 -20.49283409]
[-27.46883774 -31.68859863]
[-37.45156479 -42.88436508]
[-47.43429184 -54.08013153]
[-63.05833054 -53.42944336]
[-75.41367340 -63.01482391]
[-78.66650391 -78.31034851]
[-71.28093719 -92.09394073]
[-56.74420929 -97.85740662]
[-41.92012024 -92.87941742]
[-33.80815125 -79.51042175]
[-36.23852539 -64.06285858]
[-26.25579834 -52.86709213]
[-16.27307320 -41.67132568]
[-6.29034615 -30.47555923]
[3.69238043 -19.27979469]
[11.23669815 -24.99561310]
[19.11935997 -30.23497581]
[27.31032181 -34.97791672]
[35.77835846 -39.20634842]
[44.49119186 -42.90415955]
[53.41561508 -46.05725479]
[62.51760483 -48.65361404]
[71.76246643 -50.68333817]
[81.11496735 -52.13869476]
[90.53945160 -53.01413345]
[100.00000000 -53.30631638]
[109.46054840 -53.01413345]
[118.88503265 -52.13869476]
[128.23753357 -50.68333817]
[137.48239136 -48.65361404]
[146.58438110 -46.05725479]
[155.50880432 -42.90415955]
[164.22164917 -39.20634842]
[172.68968201 -34.97791672]
[180.88064575 -30.23497581]
[188.76330566 -24.99561310]
[196.30761719 -19.27979469]
[206.29034424 -30.47555923]
[216.27307129 -41.67132568]
[216.79489136 -57.70589066]
[229.74217224 -67.17940521]
[245.18287659 -62.82459641]
[251.27220154 -47.98210526]
[243.33895874 -34.03781891]
[227.46884155 -31.68859863]
[217.48611450 -20.49283409]
[207.50338745 -9.29706764]
[218.37132263 2.57794905]
[227.93417358 15.52708340]
[236.08650208 29.40756607]
[242.73841858 44.06635666]
[247.81657410 59.34184265]
[251.26501465 75.06559753]
[266.16690063 73.35290527]
[281.06881714 71.64022064]
[295.97070312 69.92752838]
[310.87261963 68.21483612]
[323.71615601 58.01798630]
[338.86715698 64.29322052]
[340.73962402 80.58512115]
[327.40725708 90.13397217]
[312.58529663 83.11674500]
[297.68341064 84.82942963]
[282.78149414 86.54212189]
[267.87960815 88.25481415]
[252.97769165 89.96749878]
[253.30590820 99.64709473]
[253.02226257 109.32810211]
[252.12788391 118.97187805]
[250.62635803 128.53993225]
[248.52365112 137.99407959]
[245.82818604 147.29660034]
[242.55068970 156.41033936]
[238.70426941 165.29895020]
[234.30426025 173.92694092]
[229.36822510 182.25988770]
[223.91587830 190.26451111]
[217.96896362 197.90888977]
[211.55122375 205.16250610]
[204.68826294 211.99639893]
[197.40748596 218.38331604]
[189.73794556 224.29774475]
[181.71025085 229.71607971]
[173.35644531 234.61671448]
[164.70986938 238.98007202]
[155.80502319 242.78874207]
[146.67744446 246.02754211]
[137.36358643 248.68351746]
[127.90059662 250.74609375]
[118.32625580 252.20701599]
[108.67877197 253.06047058]
[98.99665070 253.30303955]
[89.31853485 252.93376160]
[79.68305206 251.95410156]
[70.12864685 250.36798096]
[60.69347000 248.18173218]
[51.41516876 245.40406799]
[42.33077621 242.04608154]
[33.47654343 238.12117004]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[3 27]
[4 20]
[5 19]
[6 18]
[7 17]
[8 16]
[9 15]
[38 48]
[39 47]
[40 46]
[41 45]
[50 66]
[51 65]
[52 64]
[53 63]
[54 62]
[88 98]
[89 97]
[90 96]
[104 117]
[105 116]
[106 115]
[107 114]
[108 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
