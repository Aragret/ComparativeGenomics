%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGUGAGUUCACCCUCUAAAUCACCACGAUCAAAAGGAACAAGCAUCAAGCACGCAGCAAUGxxxxxxxxxxCCCCUAACAGGGGCCCUCUCAGCCCUCCUAAUGACCUCCGGCCUAGCCAUGUGAUUUCACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[95.35158539 271.37045288]
[95.03952789 256.37371826]
[94.72747040 241.37695312]
[94.41541290 226.38020325]
[94.10335541 211.38343811]
[93.79129791 196.38668823]
[93.47924805 181.38993835]
[93.16719055 166.39318848]
[92.85513306 151.39642334]
[79.26418304 145.04930115]
[67.56455994 154.43646240]
[55.86493301 163.82362366]
[44.16530991 173.21078491]
[32.46568680 182.59794617]
[26.54398537 197.26914978]
[11.77494621 199.19911194]
[0.07532220 208.58627319]
[0.95204639 224.07855225]
[-7.47309875 237.10916138]
[-21.96047401 242.66754150]
[-36.93938446 238.61639404]
[-46.65013885 226.51345825]
[-47.35874939 211.01257324]
[-38.79274368 198.07414246]
[-24.24592400 192.67324829]
[-9.31184006 196.88664246]
[2.38778400 187.49948120]
[7.47265100 173.49972534]
[23.07852554 170.89833069]
[34.77814865 161.51115417]
[46.47777176 152.12399292]
[58.17739487 142.73683167]
[69.87702179 133.34967041]
[61.00725555 104.08261108]
[72.90550995 80.34662628]
[94.18031311 72.87951660]
[95.11594391 57.90872574]
[95.73992157 42.92171097]
[96.05197906 27.92495728]
[96.36402893 12.92820263]
[85.70344543 1.57083988]
[86.23355103 -13.63355541]
[97.12676239 -23.72680283]
[97.43881226 -38.72355652]
[97.75086975 -53.72031021]
[98.06292725 -68.71706390]
[87.71147156 -54.67514801]
[71.72541046 -50.08209991]
[57.01177979 -55.89650345]
[49.32160568 -68.78577423]
[51.00784302 -82.88289642]
[39.70883942 -92.74861908]
[23.66971397 -93.10360718]
[14.06202888 -105.95164490]
[18.25597954 -121.43680573]
[33.03432465 -127.68021393]
[47.06038284 -119.89244843]
[49.57456207 -104.04762268]
[60.87356567 -94.18190002]
[70.27814484 -99.92488861]
[82.68804169 -100.56826782]
[67.95956421 -103.69325256]
[54.20281601 -109.81253052]
[42.01918793 -118.65859222]
[31.94129562 -129.84474182]
[24.40970039 -142.88194275]
[19.75365257 -157.20028687]
[18.17669487 -172.17382812]
[19.74776268 -187.14797974]
[24.39817619 -201.46815491]
[31.92464256 -214.50833130]
[41.99813461 -225.69842529]
[54.17827988 -234.54928589]
[67.93261719 -240.67398071]
[82.65986633 -243.80476379]
[97.71621704 -243.80476379]
[112.44347382 -240.67398071]
[126.19780731 -234.54928589]
[138.37796021 -225.69842529]
[148.45144653 -214.50833130]
[155.97792053 -201.46815491]
[160.62832642 -187.14797974]
[162.19940186 -172.17382812]
[160.62243652 -157.20028687]
[155.96638489 -142.88194275]
[148.43479919 -129.84474182]
[138.35690308 -118.65859222]
[126.17327118 -109.81253052]
[112.41652679 -103.69325256]
[97.68804169 -100.56826782]
[111.07433319 -93.80014801]
[123.15431976 -102.69249725]
[135.23431396 -111.58484650]
[147.31430054 -120.47720337]
[148.12710571 -136.09364319]
[158.82556152 -147.49876404]
[174.35820007 -149.30741882]
[187.39097595 -140.66561890]
[191.77020264 -125.65373993]
[185.42816162 -111.35995483]
[171.35934448 -104.53333282]
[156.20664978 -108.39720917]
[144.12666321 -99.50485992]
[132.04666138 -90.61251068]
[119.96668243 -81.72016144]
[113.05968475 -68.40500641]
[112.74762726 -53.40825272]
[112.43556976 -38.41149902]
[112.12351227 -23.41474533]
[122.58742523 -12.87709522]
[122.48458862 2.33619118]
[111.36078644 13.24025917]
[111.04872894 28.23701286]
[110.73667145 43.23376465]
[113.38344574 47.27976227]
[113.47205353 53.04374313]
[110.08673096 58.84435654]
[109.15110779 73.81514740]
[133.87734985 86.85316467]
[139.56230164 121.31710052]
[153.08650208 127.80526733]
[166.61068726 134.29342651]
[183.50675964 135.69309998]
[186.83908081 152.31632996]
[171.78797913 160.12020874]
[160.12252808 147.81761169]
[146.59832764 141.32945251]
[133.07414246 134.84129333]
[126.76857758 138.90205383]
[135.52658081 151.07980347]
[144.28457642 163.25753784]
[153.04258728 175.43528748]
[165.49169922 183.80305481]
[165.34437561 198.80233765]
[152.73332214 206.92398071]
[139.01669312 200.85322571]
[136.54849243 186.05744934]
[129.08480835 173.04617310]
[121.62113190 160.03488159]
[114.15744781 147.02360535]
[107.85188293 151.08436584]
[108.16394043 166.08113098]
[108.47599792 181.07788086]
[108.78805542 196.07463074]
[109.10011292 211.07138062]
[109.41217041 226.06814575]
[109.72422028 241.06489563]
[110.03627777 256.06164551]
[110.34833527 271.05841064]
[112.93933105 290.26611328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 33]
[11 32]
[12 31]
[13 30]
[14 29]
[16 27]
[17 26]
[36 118]
[37 117]
[38 114]
[39 113]
[40 112]
[43 109]
[44 108]
[45 107]
[46 106]
[51 59]
[52 58]
[61 90]
[91 105]
[92 104]
[93 103]
[94 102]
[120 128]
[121 127]
[122 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
