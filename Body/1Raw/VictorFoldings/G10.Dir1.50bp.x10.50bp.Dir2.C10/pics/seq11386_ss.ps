%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUCAAUAGCCAUCGCUGUAGUAUAUCCAAAGACAACCAUCAUUCCCCCUAAAUAAAUUAAxxxxxxxxxxGCUAAAGUGAACUGUAUCCGACAUCUGGUUCCUACUUCAGGGUCAUAAAGCCUAAAUAGCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[115.57372284 297.21447754]
[115.57372284 282.21447754]
[115.57372284 267.21447754]
[115.57372284 252.21447754]
[115.57372284 237.21447754]
[115.57372284 222.21447754]
[115.57372284 207.21447754]
[115.57372284 192.21447754]
[115.57372284 177.21447754]
[115.57372284 162.21447754]
[112.51532745 147.52957153]
[106.52703094 133.77674866]
[100.53873444 120.02391815]
[87.90509033 117.50813293]
[78.72299194 107.40282440]
[77.26174927 93.05065155]
[85.00000000 79.96884155]
[72.00962067 72.46884155]
[59.01923752 64.96884155]
[46.02885818 57.46883774]
[37.26583099 69.65850830]
[27.33263969 80.91507721]
[16.32800102 91.12666321]
[4.36129045 100.19178772]
[-8.44856071 108.02033997]
[-21.97423935 114.53453064]
[-36.08131409 119.66960907]
[-50.62958145 123.37453461]
[-65.47444916 125.61249542]
[-80.46838379 126.36124420]
[-95.46235657 125.61333466]
[-110.30735016 123.37620544]
[-124.85582733 119.67208862]
[-138.96319580 114.53780365]
[-152.48922729 108.02436829]
[-165.29953003 100.19652557]
[-177.26673889 91.13207245]
[-188.27195740 80.92110443]
[-198.20576477 69.66509247]
[-206.96948242 57.47591400]
[-214.47596741 44.47471237]
[-220.65063477 30.79070282]
[-225.43211365 16.55988884]
[-228.77288818 1.92370474]
[-230.63973999 -12.97238445]
[-231.01411438 -27.98033142]
[-229.89231873 -42.95097351]
[-227.28547668 -57.73552704]
[-223.21949768 -72.18704987]
[-217.73480225 -86.16190338]
[-210.88589478 -99.52121735]
[-202.74084473 -112.13219452]
[-193.38061523 -123.86951447]
[-182.89820862 -134.61651611]
[-171.39784241 -144.26637268]
[-158.99378967 -152.72320557]
[-145.80932617 -159.90295410]
[-131.97550964 -165.73426819]
[-117.62982178 -170.15916443]
[-102.91483307 -173.13368225]
[-87.97679901 -174.62828064]
[-72.96418762 -174.62806702]
[-58.02619171 -173.13305664]
[-43.31129074 -170.15812683]
[-28.96572304 -165.73281860]
[-15.13206863 -159.90113831]
[-1.94781423 -152.72102356]
[10.45600510 -144.26383972]
[21.95611000 -134.61364746]
[32.43820572 -123.86635590]
[41.79811478 -112.12877655]
[49.94280624 -99.51757050]
[56.79133987 -86.15806580]
[62.27564621 -72.18305206]
[66.34121704 -57.73142242]
[68.94764709 -42.94679642]
[70.06903076 -27.97612190]
[69.69422913 -12.96818542]
[67.82695770 1.92785108]
[64.48578644 16.56394196]
[59.70390701 30.79462242]
[53.52885818 44.47845840]
[66.51924133 51.97845840]
[79.50962067 59.47845840]
[92.50000000 66.97845459]
[107.50000000 66.97845459]
[120.49037933 59.47845840]
[133.48075867 51.97845840]
[146.47114563 44.47845840]
[159.30479431 36.71332169]
[171.97631836 28.68632507]
[184.64782715 20.65932846]
[197.31935120 12.63233089]
[209.65063477 4.09187222]
[221.62088013 -4.94764709]
[233.59114075 -13.98716640]
[237.22276306 -29.61377716]
[251.76582336 -36.38715744]
[266.06414795 -29.11135101]
[269.14929199 -13.36773396]
[258.65457153 -1.23346078]
[242.63066101 -2.01690841]
[230.66040039 7.02261114]
[218.69015503 16.06212997]
[218.19412231 18.88081551]
[216.51681519 21.66575050]
[213.66790771 23.95278168]
[209.82958984 25.29100227]
[205.34634399 25.30384636]
[192.67481995 33.33084488]
[180.00331116 41.35784149]
[167.33178711 49.38483810]
[165.42260742 53.82378387]
[160.67134094 57.08158875]
[153.97114563 57.46883774]
[140.98075867 64.96884155]
[127.99037933 72.46884155]
[115.00000000 79.96884155]
[122.46329498 98.29312134]
[114.29156494 114.03562164]
[120.27986145 127.78844452]
[126.26815796 141.54127502]
[128.25451660 126.67337799]
[134.27705383 112.93550873]
[143.86552429 101.40029144]
[156.27128601 92.96838379]
[170.52571106 88.29812622]
[185.51583862 87.75417328]
[200.07127380 91.37899017]
[213.05555725 98.88956451]
[223.45486450 109.69947815]
[230.45727539 122.96470642]
[233.51603699 137.64952087]
[232.39230347 152.60737610]
[227.17385864 166.67036438]
[218.26811218 178.74049377]
[206.37043762 187.87532043]
[192.40975952 193.36163330]
[177.47612000 194.77105713]
[162.73551941 191.99356079]
[149.33886719 185.24600220]
[138.33213806 175.05522156]
[130.57373047 162.21447754]
[130.57373047 177.21447754]
[130.57373047 192.21447754]
[130.57373047 207.21447754]
[130.57373047 222.21447754]
[130.57373047 237.21447754]
[130.57373047 252.21447754]
[130.57373047 267.21447754]
[130.57373047 282.21447754]
[130.57373047 297.21447754]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 122]
[12 121]
[13 120]
[17 85]
[18 84]
[19 83]
[20 82]
[86 118]
[87 117]
[88 116]
[89 115]
[90 112]
[91 111]
[92 110]
[93 109]
[94 104]
[95 103]
[96 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
