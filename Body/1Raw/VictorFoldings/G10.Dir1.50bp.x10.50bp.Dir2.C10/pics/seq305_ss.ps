%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCAAACCCCCCCUCCCCCGCUUCUGGCCACAGCACUUAAACACAUCUCUGCCAAACCCCAxxxxxxxxxxGGUACCAUAAAUACUUGACCACCUGUAGUACAUAAAAACCCAAUCCACAUCAAAACCCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-10.16492081 289.11785889]
[-18.15483665 301.81280518]
[-26.14475441 314.50772095]
[-34.00217819 327.28509521]
[-41.72626495 340.14349365]
[-49.45034790 353.00189209]
[-57.17443466 365.86029053]
[-64.89852142 378.71868896]
[-72.62260437 391.57708740]
[-80.34668732 404.43548584]
[-77.87447357 420.28692627]
[-88.83189392 432.00503540]
[-104.81336975 430.60070801]
[-113.55926514 417.15124512]
[-108.36048889 401.97387695]
[-93.20509338 396.71142578]
[-85.48100281 383.85299683]
[-77.75691986 370.99459839]
[-70.03283691 358.13619995]
[-62.30875015 345.27780151]
[-54.58466721 332.41940308]
[-46.86058044 319.56100464]
[-46.10744095 312.15975952]
[-38.83968353 306.51782227]
[-30.84976768 293.82287598]
[-22.85984993 281.12796021]
[-45.77296066 263.25476074]
[-66.11624146 242.50358582]
[-83.53106689 219.24020386]
[-97.71042633 193.87474060]
[-108.40435028 166.85435486]
[-115.42432404 138.65539551]
[-118.64658356 109.77498627]
[-133.64576721 109.93102264]
[-148.64495850 110.08705902]
[-162.47789001 118.89513397]
[-176.89538574 111.08055878]
[-177.06597900 94.68229675]
[-162.81416321 86.56948090]
[-148.80099487 95.08786774]
[-133.80180359 94.93183136]
[-118.80261993 94.77579498]
[-118.24401855 83.52496338]
[-117.10728455 72.31777954]
[-115.39542389 61.18391800]
[-113.11298370 50.15288544]
[-110.26599884 39.25389862]
[-106.86200714 28.51583099]
[-102.91004181 17.96712494]
[-98.42056274 7.63572645]
[-93.40545654 -2.45099688]
[-87.87802124 -12.26632500]
[-81.85289001 -21.78425789]
[-75.34602356 -30.97957993]
[-68.37466431 -39.82793427]
[-60.95727158 -48.30588150]
[-53.11350250 -56.39096069]
[-44.86413193 -64.06175995]
[-36.23101425 -71.29795074]
[-27.23701477 -78.08037567]
[-17.90596390 -84.39105225]
[-8.26257515 -90.21327972]
[1.66760325 -95.53162384]
[11.85826683 -100.33200836]
[22.28241920 -104.60169983]
[32.91244888 -108.32939911]
[43.72019196 -111.50522614]
[54.67702484 -114.12077332]
[65.75392151 -116.16910553]
[76.92153168 -117.64480591]
[88.15027618 -118.54396057]
[99.41041565 -118.86418152]
[110.67211151 -118.60462952]
[121.90554047 -117.76598358]
[133.08094788 -116.35047913]
[144.16871643 -114.36184692]
[155.13948059 -111.80537415]
[165.96417236 -108.68782043]
[176.61413574 -105.01744080]
[187.06114197 -100.80397034]
[197.27751160 -96.05857086]
[207.23620605 -90.79380035]
[216.91081238 -85.02361298]
[226.27574158 -78.76329803]
[235.30615234 -72.02942657]
[243.97811890 -64.83985138]
[252.26870728 -57.21361160]
[260.15591431 -49.17090607]
[267.61886597 -40.73304749]
[274.63781738 -31.92238045]
[281.19412231 -22.76224709]
[287.27044678 -13.27691460]
[300.36358643 -20.59601974]
[313.45675659 -27.91512680]
[326.54989624 -35.23423004]
[330.31552124 -40.79550171]
[335.55072021 -43.20878983]
[340.34347534 -42.57249832]
[353.72976685 -49.34061050]
[360.08090210 -64.07298279]
[375.59625244 -68.15377045]
[388.37380981 -58.45254135]
[388.61169434 -42.41125107]
[376.12744141 -32.33540344]
[360.49789429 -35.95432663]
[347.11160278 -29.18621254]
[333.86901855 -22.14107704]
[320.77584839 -14.82197189]
[307.68270874 -7.50286579]
[294.58953857 -0.18376026]
[300.35961914 11.92107201]
[305.37756348 24.35654831]
[309.62454224 37.07598495]
[313.08459473 50.03163528]
[315.74472046 63.17486191]
[317.59497070 76.45632935]
[318.62838745 89.82617950]
[318.84106445 103.23422241]
[318.23226929 116.63011932]
[316.80419922 129.96359253]
[314.56228638 143.18458557]
[311.51489258 156.24345398]
[307.67349243 169.09120178]
[303.05252075 181.67958069]
[297.66928101 193.96133423]
[291.54400635 205.89036560]
[284.69967651 217.42189026]
[277.16201782 228.51263428]
[268.95928955 239.12092590]
[260.12231445 249.20698547]
[250.68423462 258.73291016]
[240.68049622 267.66299438]
[230.14865112 275.96365356]
[219.12823486 283.60375977]
[207.66061401 290.55462646]
[195.78884888 296.79016113]
[183.55751038 302.28698730]
[171.01248169 307.02441406]
[158.20088196 310.98468018]
[145.17080688 314.15292358]
[131.97116089 316.51724243]
[118.65148926 318.06878662]
[105.26180267 318.80172729]
[91.85237122 318.71325684]
[78.47351837 317.80377197]
[65.17547607 316.07669067]
[52.00816727 313.53842163]
[39.02101135 310.19857788]
[26.26276970 306.06964111]
[13.78133392 301.16714478]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 26]
[2 25]
[3 24]
[4 22]
[5 21]
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[33 42]
[34 41]
[35 40]
[92 110]
[93 109]
[94 108]
[95 107]
[98 106]
[99 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
