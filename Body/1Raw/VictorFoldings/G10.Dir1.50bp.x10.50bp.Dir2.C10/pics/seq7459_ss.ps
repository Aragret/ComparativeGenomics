%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCGCUACUUCCCCUAUCAUAGAAGAGCUUAUCACCUUUCAUGAUCACGCCCUCAUAAUCAUUxxxxxxxxxxACCGCAAACAUAUCAUACACAAACGCCUGAGCCCUAUCUAUUACUCUCAUCGCUACCUCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[105.35016632 283.39050293]
[105.35016632 268.39050293]
[105.35016632 253.39050293]
[105.35016632 238.39050293]
[105.35016632 223.39050293]
[105.35016632 208.39050293]
[105.35016632 193.39050293]
[105.35016632 178.39050293]
[105.35016632 163.39050293]
[105.35016632 148.39050293]
[84.85978699 142.09440613]
[70.72539520 128.39515686]
[58.22136307 136.68061829]
[45.71732712 144.96609497]
[40.24946213 152.36192322]
[32.87040710 153.29025269]
[20.19889259 161.31724548]
[7.52737665 169.34423828]
[-5.14413929 177.37123108]
[-4.43341827 192.71368408]
[-11.50338554 206.34860229]
[-24.45225525 214.60827637]
[-39.79684830 215.27090454]
[-53.40954208 208.15823364]
[-61.62859344 195.18353271]
[-62.24312210 179.83694458]
[-55.08781433 166.24661255]
[-42.08741760 158.06826782]
[-26.73897552 157.50184631]
[-13.17113590 164.69972229]
[-0.49962035 156.67272949]
[12.17189598 148.64572144]
[24.84341240 140.61872864]
[37.43185043 132.46206665]
[49.93588638 124.17658997]
[62.43992233 115.89111328]
[60.22098541 108.99538422]
[59.25703049 101.81586456]
[59.57846832 94.57904816]
[45.33177567 89.88524628]
[31.08508301 85.19145203]
[16.83839226 80.49765015]
[3.63918829 88.88305664]
[-11.85512638 86.77113342]
[-22.32861137 75.15906525]
[-22.83600616 59.52971268]
[-13.13773537 47.26278305]
[2.18697405 44.15034103]
[15.90226364 51.66199112]
[21.53219223 66.25095367]
[35.77888489 70.94475555]
[50.02557755 75.63855743]
[64.27227020 80.33235931]
[73.36128998 69.11851501]
[85.78734589 61.77321243]
[99.99382782 59.21658707]
[102.75006866 44.47198868]
[88.45867920 39.84766006]
[74.87598419 33.43370056]
[62.22503662 25.33544159]
[50.71356964 15.68585873]
[40.53061676 4.64340782]
[31.84338188 -7.61058426]
[24.79452705 -20.87489510]
[19.49979401 -34.93171310]
[16.04613304 -49.55021286]
[14.49025154 -64.49034882]
[14.85770130 -79.50678253]
[17.14244652 -94.35293579]
[21.30697250 -108.78501892]
[27.28289032 -122.56604767]
[34.97207260 -135.46972656]
[44.24825287 -147.28414917]
[54.95911407 -157.81533813]
[66.92876434 -166.89033508]
[79.96066284 -174.36013794]
[93.84080505 -180.10209656]
[108.34127045 -184.02189636]
[123.22395325 -186.05517578]
[138.24444580 -186.16854858]
[153.15612793 -184.36016846]
[167.71411133 -180.65971375]
[181.67935181 -175.12796021]
[194.82254028 -167.85574341]
[206.92782593 -158.96246338]
[217.79643250 -148.59417725]
[227.24992371 -136.92112732]
[235.13301086 -124.13499451]
[241.31629944 -110.44574738]
[245.69821167 -96.07817841]
[248.20681763 -81.26821136]
[248.80091858 -66.25903320]
[247.47074890 -51.29711533]
[244.23815918 -36.62814331]
[239.15623474 -22.49299622]
[232.30842590 -9.12378693]
[223.80715942 3.25995207]
[213.79206848 14.45486736]
[202.42758179 24.27712822]
[189.90032959 32.56544495]
[176.41600037 39.18371582]
[162.19604492 44.02326202]
[147.47396851 47.00461578]
[132.49150085 48.07881927]
[117.49466705 47.22823334]
[114.73842621 61.97282791]
[133.23625183 72.06395721]
[145.16160583 90.99121094]
[146.43572998 114.62829590]
[161.15126038 117.53577423]
[175.86677551 120.44324493]
[190.58230591 123.35071564]
[198.98211670 110.68140411]
[211.59365845 102.19509888]
[226.49377441 99.18591309]
[241.41027832 102.11270905]
[254.06854248 110.52918243]
[262.53823853 123.15188599]
[265.52783203 138.05593872]
[262.58142090 152.96858215]
[254.14828491 165.61575317]
[241.51446533 174.06884766]
[226.60649109 177.03883362]
[211.69772339 174.07279968]
[199.06166077 165.62304688]
[190.62519836 152.97810364]
[187.67483521 138.06623840]
[172.95930481 135.15876770]
[158.24378967 132.25129700]
[143.52825928 129.34382629]
[137.73373413 134.10548401]
[149.25390625 143.71203613]
[160.77407837 153.31857300]
[175.00747681 158.05252075]
[182.70449829 170.92713928]
[180.13650513 185.70568848]
[168.54750061 195.22909546]
[153.55146790 194.88398743]
[142.41284180 184.83755493]
[140.52745056 169.95629883]
[133.33607483 156.79257202]
[126.14469147 143.62882996]
[120.35016632 148.39050293]
[120.35016632 163.39050293]
[120.35016632 178.39050293]
[120.35016632 193.39050293]
[120.35016632 208.39050293]
[120.35016632 223.39050293]
[120.35016632 238.39050293]
[120.35016632 253.39050293]
[120.35016632 268.39050293]
[120.35016632 283.39050293]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[12 36]
[13 35]
[14 34]
[16 33]
[17 32]
[18 31]
[19 30]
[39 53]
[40 52]
[41 51]
[42 50]
[56 106]
[57 105]
[109 130]
[110 129]
[111 128]
[112 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
