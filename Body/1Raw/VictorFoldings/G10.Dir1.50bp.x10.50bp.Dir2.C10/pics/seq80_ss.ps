%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUCUGUCUUUGAUUCCUGCCUCAUCCUAUUAUUUAUCGCACCUACGUUCAAUAUUACAGGxxxxxxxxxxACGGAAGCAAUAUGAAAUGAUCUGCUGCAGUGCUCUGAGCCCUAGGAUUCAUCUUUCUUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[116.54599762 337.80426025]
[116.54599762 322.80426025]
[116.54599762 307.80426025]
[116.54599762 292.80426025]
[116.54599762 277.80426025]
[116.54599762 262.80426025]
[116.54599762 247.80427551]
[116.54599762 232.80427551]
[116.54599762 217.80427551]
[116.54599762 202.80427551]
[114.67838287 187.92098999]
[110.97222137 173.38606262]
[107.26605988 158.85112000]
[103.55989838 144.31617737]
[84.52452087 141.67860413]
[68.38053894 131.25390625]
[58.14426422 114.98980713]
[55.72820663 95.92504120]
[61.58378220 77.62163544]
[50.08197784 67.99311066]
[38.58017731 58.36458206]
[23.03179741 55.43908691]
[18.23927879 41.33657074]
[6.73747587 31.70804405]
[-4.76432753 22.07951736]
[-16.26613045 12.45099068]
[-27.09198189 22.85523033]
[-38.97928238 32.02797699]
[-51.78866577 39.86168671]
[-65.36994171 46.26451111]
[-79.56388092 51.16138077]
[-94.20406342 54.49488068]
[-109.11884308 56.22593307]
[-124.13335419 56.33423615]
[-139.07156372 54.81852722]
[-153.75830078 51.69656754]
[-168.02140808 47.00496674]
[-181.69363403 40.79873276]
[-194.61470032 33.15062332]
[-206.63308716 24.15031624]
[-217.60789490 13.90333176]
[-227.41046143 2.52981114]
[-235.92585754 -9.83689690]
[-243.05421448 -23.05179787]
[-248.71199036 -36.95995712]
[-252.83282471 -51.39830399]
[-255.36842346 -66.19756317]
[-256.28906250 -81.18421173]
[-255.58390808 -96.18254852]
[-253.26127625 -111.01671600]
[-249.34835815 -125.51279449]
[-243.89106750 -139.50083923]
[-236.95336914 -152.81681824]
[-228.61659241 -165.30462646]
[-218.97850037 -176.81785583]
[-208.15208435 -187.22151184]
[-196.26429749 -196.39363098]
[-183.45449829 -204.22663879]
[-169.87287903 -210.62873840]
[-155.67866516 -215.52484131]
[-141.03829956 -218.85755920]
[-126.12342834 -220.58781433]
[-111.10891724 -220.69531250]
[-96.17079926 -219.17878723]
[-81.48421478 -216.05604553]
[-67.22135925 -211.36367798]
[-53.54946518 -205.15670776]
[-40.62882233 -197.50790405]
[-28.61091614 -188.50694275]
[-17.63665390 -178.25936890]
[-7.83470106 -166.88531494]
[0.68001813 -154.51815796]
[7.80767345 -141.30287170]
[13.46469593 -127.39440918]
[17.58476067 -112.95584106]
[20.11956406 -98.15644836]
[21.03938293 -83.16974640]
[20.33343506 -68.17144775]
[18.00999641 -53.33740616]
[14.09630871 -38.84153366]
[8.63825798 -24.85379219]
[1.69983697 -11.53817844]
[-6.63760471 0.94918728]
[4.86419868 10.57771397]
[16.36600113 20.20623970]
[27.86780548 29.83476639]
[42.59349823 32.07156372]
[48.20870209 46.86277771]
[59.71050644 56.49130630]
[71.21231079 66.11983490]
[85.31806183 58.03528214]
[101.38724518 55.56271362]
[117.27091217 59.03278351]
[130.84492493 67.98144531]
[142.92491150 59.08909225]
[146.74748230 43.50809860]
[161.37236023 36.91320038]
[175.58058167 44.36344910]
[178.47280884 60.14364243]
[167.83038330 72.14857483]
[151.81726074 71.16908264]
[139.73727417 80.06143188]
[141.86491394 85.03584290]
[143.37257385 90.23186493]
[158.35229492 89.45201874]
[173.33200073 88.67217255]
[181.80296326 85.08124542]
[188.63082886 88.03521729]
[203.62351990 87.56716919]
[218.61621094 87.09912872]
[232.26290894 78.00518036]
[246.83985901 85.51812744]
[247.35156250 101.90929413]
[233.27162170 110.31684875]
[219.08425903 102.09182739]
[204.09156799 102.55986786]
[189.09886169 103.02790833]
[174.11184692 103.65188599]
[159.13214111 104.43173218]
[144.15242004 105.21157837]
[142.14118958 114.16745758]
[138.33369446 122.51943970]
[132.89221191 129.91152954]
[126.04868317 136.02864075]
[118.09483337 140.61001587]
[121.80099487 155.14495850]
[125.50715637 169.67990112]
[129.21331787 184.21482849]
[134.66712952 170.24142456]
[145.56130981 159.93043518]
[159.81335449 155.25288391]
[174.69882202 157.10295105]
[187.37222290 165.12698364]
[195.41090393 177.79107666]
[197.27819824 192.67440796]
[192.61714172 206.93183899]
[182.31875610 217.83795166]
[168.35166931 223.30792236]
[153.38583374 222.29611206]
[140.28211975 214.99594116]
[131.54598999 202.80427551]
[131.54598999 217.80427551]
[131.54598999 232.80427551]
[131.54598999 247.80427551]
[131.54598999 262.80426025]
[131.54598999 277.80426025]
[131.54598999 292.80426025]
[131.54598999 307.80426025]
[131.54598999 322.80426025]
[131.54598999 337.80426025]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 128]
[12 127]
[13 126]
[14 125]
[19 90]
[20 89]
[21 88]
[23 86]
[24 85]
[25 84]
[26 83]
[94 102]
[95 101]
[104 120]
[105 119]
[106 118]
[108 117]
[109 116]
[110 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
