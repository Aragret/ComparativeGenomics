%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCAAACCCCAAAGACACCCCCCACAGUUUAUGUAGCUUACCUCCUCAAAGCAAUACACUxxxxxxxxxxCAAUUUCAUCACAACAAUUAUCAAUAUAAAACCCCCUGCCAUAACCCAAUACCAAACGCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-4.71662521 234.01960754]
[-14.46427727 245.42062378]
[-24.21192932 256.82165527]
[-33.95958328 268.22265625]
[-43.70723343 279.62368774]
[-53.45488739 291.02471924]
[-62.34723663 303.10470581]
[-70.33715057 315.79962158]
[-78.32706451 328.49456787]
[-86.31698608 341.18948364]
[-82.56769562 356.54260254]
[-90.84414673 370.00650024]
[-106.23604584 373.59323120]
[-119.61167145 365.17489624]
[-123.03549194 349.74594116]
[-114.47621918 336.46008301]
[-99.01191711 333.19955444]
[-91.02199554 320.50463867]
[-83.03208160 307.80969238]
[-75.04216766 295.11477661]
[-89.75127411 298.05450439]
[-102.99191284 291.00573730]
[-108.76593781 277.16156006]
[-104.45766449 262.79357910]
[-92.01878357 254.41062927]
[-77.08422089 255.81024170]
[-66.41948700 266.35839844]
[-64.85590363 281.27703857]
[-55.10825348 269.87603760]
[-45.36060333 258.47500610]
[-35.61294937 247.07398987]
[-25.86529732 235.67297363]
[-16.11764526 224.27194214]
[-35.04421616 203.39190674]
[-50.26311874 179.67320251]
[-61.35652161 153.76707458]
[-68.01985168 126.38474274]
[-70.07015991 98.27802277]
[-67.45116425 70.21858215]
[-60.23476028 42.97679520]
[-48.61908340 17.30058861]
[-32.92304230 -6.10508966]
[-44.22204590 -15.97081280]
[-55.52104950 -25.83653641]
[-66.82005310 -35.70225906]
[-78.32186127 -45.33078384]
[-90.02148438 -54.71794891]
[-101.72110748 -64.10511017]
[-113.42073059 -73.49227142]
[-128.01521301 -68.49179077]
[-142.99085999 -72.19767761]
[-153.56898499 -83.42739105]
[-156.37417603 -98.59757996]
[-150.51129150 -112.86747742]
[-137.85115051 -121.68362427]
[-122.43357086 -122.23281097]
[-109.17823029 -114.33980560]
[-102.31487274 -100.52322388]
[-104.03356934 -85.19189453]
[-92.33394623 -75.80473328]
[-80.63432312 -66.41757202]
[-68.93470001 -57.03041077]
[-64.11385345 -56.66300964]
[-59.49002457 -53.22040939]
[-56.95433426 -47.00126266]
[-45.65532684 -37.13554001]
[-34.35632324 -27.26981735]
[-23.05731773 -17.40409470]
[-15.25543976 -25.07201385]
[-6.97676420 -32.22252655]
[1.74445879 -38.82605362]
[10.87215137 -44.85527802]
[20.36855507 -50.28525543]
[30.19438171 -55.09352112]
[40.30898285 -59.26018906]
[50.67052078 -62.76801682]
[61.23612595 -65.60250092]
[71.96209717 -67.75189972]
[82.80404663 -69.20734406]
[93.71714020 -69.96279144]
[104.65622711 -70.01512909]
[115.57604980 -69.36413574]
[126.43143463 -68.01251221]
[137.17747498 -65.96584320]
[147.76972961 -63.23258972]
[158.16435242 -59.82406998]
[168.31835938 -55.75437927]
[178.18974304 -51.04035187]
[187.73767090 -45.70149612]
[196.92263794 -39.75988770]
[205.70664978 -33.24011612]
[214.05337524 -26.16914558]
[221.92826843 -18.57623291]
[229.29876709 -10.49278450]
[236.13436890 -1.95224392]
[242.40679932 7.01005936]
[248.09011841 16.35704994]
[253.16079712 26.05005836]
[266.94317627 20.13009644]
[280.72555542 14.21013260]
[294.50793457 8.29016972]
[303.88223267 -5.16548729]
[320.19714355 -3.50552630]
[326.66931152 11.56242752]
[316.64071655 24.53775406]
[300.42791748 22.07255173]
[286.64553833 27.99251366]
[272.86315918 33.91247559]
[259.08078003 39.83243942]
[262.42077637 49.53895569]
[265.16912842 59.42928696]
[267.31582642 69.46739960]
[268.85302734 79.61674500]
[269.77517700 89.84033203]
[270.07885742 100.10092926]
[269.76300049 110.36116028]
[268.82873535 120.58364868]
[267.27947998 130.73115540]
[265.12084961 140.76672363]
[262.36077881 150.65377808]
[259.00924683 160.35632324]
[255.07849121 169.83900452]
[250.58282471 179.06729126]
[245.53863525 188.00755310]
[239.96429443 196.62722778]
[233.88009644 204.89491272]
[227.30822754 212.78050232]
[220.27259827 220.25526428]
[212.79884338 227.29196167]
[204.91421509 233.86499023]
[196.64739990 239.95036316]
[188.02851868 245.52595520]
[179.08898926 250.57142639]
[169.86135864 255.06842041]
[160.37924194 259.00054932]
[150.67718506 262.35345459]
[140.79051208 265.11499023]
[130.75526428 267.27502441]
[120.60798645 268.82574463]
[110.38562775 269.76150513]
[100.12544250 270.07882690]
[89.86480713 269.77661133]
[79.64108276 268.85598755]
[69.49152374 267.32022095]
[59.45309448 265.17498779]
[49.56236649 262.42803955]
[39.85536957 259.08944702]
[30.36746407 255.17131042]
[21.13320732 250.68794250]
[12.18624115 245.65565491]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 33]
[2 32]
[3 31]
[4 30]
[5 29]
[6 28]
[7 20]
[8 19]
[9 18]
[10 17]
[42 68]
[43 67]
[44 66]
[45 65]
[46 62]
[47 61]
[48 60]
[49 59]
[98 109]
[99 108]
[100 107]
[101 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
