%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCUAGGAGGCCUGCCCCCGCUAACCGGCUUUUUGCCCAAAUGGGCCAUUAUCGAAGAAUUxxxxxxxxxxAGGCAACCAGCCAGAACGCCUGAACGCAGGCACAUACUUCCUAUUCUACACCCUAGUAGGCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-11.73896885 285.03225708]
[-22.37550735 278.17623901]
[-31.29165840 290.23864746]
[-40.20780945 302.30108643]
[-49.12395859 314.36352539]
[-58.04011154 326.42596436]
[-60.02103043 342.12265015]
[-73.80828857 347.75833130]
[-82.72444153 359.82073975]
[-91.64059448 371.88317871]
[-100.55673981 383.94561768]
[-109.47289276 396.00805664]
[-106.88127899 411.59838867]
[-116.14061737 424.40621948]
[-131.75749207 426.83285522]
[-144.46670532 417.43862915]
[-146.72810364 401.79696655]
[-137.20002747 389.18777466]
[-121.53532410 387.09188843]
[-112.61917877 375.02947998]
[-103.70302582 362.96704102]
[-94.78687286 350.90460205]
[-85.87071991 338.84216309]
[-84.52754974 324.00823975]
[-70.10253906 317.50979614]
[-61.18638992 305.44738770]
[-52.27024078 293.38494873]
[-43.35408783 281.32250977]
[-34.43793869 269.26007080]
[-48.40018463 257.16207886]
[-61.27837753 243.91601562]
[-72.97843933 229.61865234]
[-83.41489410 214.37442017]
[-92.51152039 198.29470825]
[-100.20185089 181.49694824]
[-106.42972565 164.10385132]
[-111.14962769 146.24247742]
[-114.32710266 128.04331970]
[-115.93891907 109.63928986]
[-115.97332001 91.16485596]
[-114.43003845 72.75495911]
[-111.32035828 54.54408646]
[-106.66699219 36.66526413]
[-100.50392914 19.24910355]
[-92.87619781 2.42282295]
[-106.01782990 -4.80887938]
[-119.15946198 -12.04058170]
[-132.30110168 -19.27228546]
[-148.67674255 -18.39479256]
[-157.39653015 -32.28354263]
[-149.49028015 -46.65097809]
[-133.09126282 -46.71711731]
[-125.06938934 -32.41391754]
[-111.92775726 -25.18221283]
[-98.78612518 -17.95051193]
[-85.64450073 -10.71880817]
[-79.34175110 -20.66097450]
[-72.50710297 -30.24527931]
[-65.16083527 -39.44329834]
[-57.32471848 -48.22775269]
[-49.02200699 -56.57258606]
[-40.27732468 -64.45305634]
[-31.11659813 -71.84577942]
[-21.56700325 -78.72883606]
[-11.65686035 -85.08181763]
[-1.41556180 -90.88587952]
[9.12651825 -96.12379456]
[19.93811417 -100.78005219]
[30.98715973 -104.84082031]
[42.24088669 -108.29406738]
[53.66591644 -111.12954712]
[65.22836304 -113.33885956]
[76.89394379 -114.91543579]
[88.62805176 -115.85460663]
[100.39588165 -116.15359497]
[112.16253662 -115.81150818]
[123.89312744 -114.82935333]
[135.55285645 -113.21006012]
[147.10713196 -110.95841217]
[158.52169800 -108.08110046]
[169.76269531 -104.58665466]
[180.79679871 -100.48544312]
[191.59126282 -95.78961945]
[198.41484070 -109.14771271]
[205.23841858 -122.50581360]
[201.68434143 -138.15023804]
[211.81188965 -150.59260559]
[227.85205078 -150.28819275]
[237.50019836 -137.47052002]
[233.35510254 -121.97221375]
[218.59651184 -115.68224335]
[211.77293396 -102.32414246]
[204.94935608 -88.96604156]
[224.74353027 -76.52644348]
[243.07847595 -62.02186584]
[259.73971558 -45.62197876]
[274.53231812 -27.51863289]
[287.28329468 -7.92359400]
[297.84344482 12.93391895]
[311.77416992 7.37198114]
[325.70489502 1.81004405]
[339.63558960 -3.75189328]
[353.56631470 -9.31383038]
[363.28509521 -22.52282333]
[379.55166626 -20.44194221]
[385.63241577 -5.21181726]
[375.27194214 7.50010300]
[359.12826538 4.61688566]
[345.19754028 10.17882252]
[331.26681519 15.74075985]
[317.33609009 21.30269814]
[303.40539551 26.86463547]
[307.33666992 38.89318848]
[310.55728149 51.13118744]
[313.05624390 63.53668594]
[314.82492065 76.06715393]
[315.85733032 88.67965698]
[316.14987183 101.33096313]
[315.70153809 113.97770691]
[314.51391602 126.57653809]
[312.59103394 139.08427429]
[309.93951416 151.45806885]
[306.56842041 163.65547180]
[302.48931885 175.63470459]
[297.71618652 187.35469055]
[292.26538086 198.77528381]
[286.15557861 209.85731506]
[279.40774536 220.56282043]
[272.04498291 230.85508728]
[264.09255981 240.69885254]
[255.57768250 250.06037903]
[246.52958679 258.90756226]
[236.97924805 267.21011353]
[226.95941162 274.93954468]
[216.50442505 282.06936646]
[205.65013123 288.57513428]
[194.43371582 294.43457031]
[182.89363098 299.62759399]
[171.06942749 304.13641357]
[159.00163269 307.94552612]
[146.73161316 311.04193115]
[134.30142212 313.41497803]
[121.75365448 315.05651855]
[109.13133240 315.96099854]
[96.47771454 316.12524414]
[83.83616638 315.54873657]
[71.25002289 314.23345947]
[58.76241684 312.18386841]
[46.41615295 309.40704346]
[34.25355148 305.91244507]
[22.31628990 301.71209717]
[10.64529037 296.82040405]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 29]
[3 28]
[4 27]
[5 26]
[6 25]
[8 23]
[9 22]
[10 21]
[11 20]
[12 19]
[45 56]
[46 55]
[47 54]
[48 53]
[83 93]
[84 92]
[85 91]
[99 112]
[100 111]
[101 110]
[102 109]
[103 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
