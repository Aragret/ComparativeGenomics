%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAUUUACCAUCUCACUUCUAGGAAUACUAGUAUAUCGCUCACACCUCAUAUCCUCCCUACUxxxxxxxxxxCGCAGACCUCCUCAUUCUAACCUGAAUCGGAGGACAACCAGUAAGCUACCCUUUUACCAUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[98.00160980 449.52999878]
[98.00160980 434.52999878]
[98.00160980 419.52999878]
[98.00160980 404.52999878]
[98.00160980 389.52999878]
[98.00160980 374.52999878]
[98.00160980 359.52999878]
[98.00160980 344.52999878]
[98.00160980 329.52999878]
[98.00160980 314.52999878]
[82.56194305 311.58529663]
[67.97756958 305.71231079]
[54.79837036 297.13061523]
[43.52159119 286.16192627]
[34.57310486 273.21804810]
[28.29131699 258.78549194]
[24.91437721 243.40701294]
[24.57114410 227.66137695]
[27.27627754 212.14152527]
[32.92961121 197.43218994]
[41.31987000 184.08790588]
[52.13255692 172.61213684]
[64.96174622 163.43820190]
[79.32531738 156.91300964]
[94.68309021 153.28384399]
[94.06726074 138.29649353]
[93.45143890 123.30913544]
[81.76522827 113.90528107]
[66.99311066 116.51000214]
[52.22099304 119.11472321]
[37.44887924 121.71945190]
[27.10615921 133.98353577]
[11.07373047 133.39978027]
[1.65029824 120.41600800]
[6.06471443 104.99224091]
[20.93061638 98.96028137]
[34.84415436 106.94733429]
[49.61627197 104.34261322]
[64.38838959 101.73788452]
[79.16050720 99.13316345]
[82.64068604 92.48949432]
[69.35344696 85.52893066]
[76.31421661 72.24180603]
[89.60103607 79.20215607]
[93.08121490 72.55847931]
[86.81181335 58.93150330]
[80.40283966 45.36960602]
[73.85496521 31.87422180]
[59.39096451 35.99293518]
[44.43147659 37.53723907]
[29.43110657 36.46020508]
[14.84569740 32.79456329]
[1.11848164 26.65170670]
[-11.33338451 18.21831322]
[-22.13150406 7.75065994]
[-30.94773293 -4.43315029]
[-37.51415634 -17.96286583]
[-41.63122940 -32.42733383]
[-43.17383575 -47.38699722]
[-42.09510040 -62.38724518]
[-38.42780304 -76.97223663]
[-32.28339386 -90.69875336]
[-23.84858513 -103.14966583]
[-13.37970829 -113.94660187]
[-1.19489825 -122.76144409]
[12.33556175 -129.32633972]
[26.80049706 -133.44177246]
[41.76033401 -134.98268127]
[56.76045990 -133.90223694]
[71.34503937 -130.23329163]
[85.07086182 -124.08731842]
[97.52081299 -115.65110016]
[108.31655884 -105.18099976]
[117.13002014 -92.99519348]
[123.69337463 -79.46398926]
[127.80716705 -64.99858856]
[129.34638977 -50.03857422]
[128.26425171 -35.03857040]
[124.59364319 -20.45440865]
[118.44611359 -6.72928429]
[110.00848389 5.71971178]
[99.53715515 16.51426888]
[87.35034943 25.32635117]
[93.89822388 38.82173538]
[99.68331909 43.49557877]
[100.43878937 52.66209793]
[106.70819855 66.28907776]
[111.39932251 70.65845490]
[124.07083893 62.63145447]
[136.74235535 54.60445786]
[149.41386414 46.57746124]
[162.08538818 38.55046463]
[165.68487549 26.12277794]
[176.45542908 19.70667839]
[188.31263733 22.28911781]
[201.14628601 14.52398300]
[213.97994995 6.75884771]
[226.81359863 -1.00628793]
[230.34590149 -16.41077995]
[243.78042603 -24.73477936]
[259.14672852 -21.03980446]
[267.32821655 -7.51802015]
[263.47097778 7.80834055]
[249.86344910 15.84641933]
[234.57873535 11.82736588]
[221.74508667 19.59250069]
[208.91142273 27.35763741]
[196.07777405 35.12277222]
[188.49551392 50.92004776]
[170.11238098 51.22198105]
[157.44087219 59.24897766]
[144.76934814 67.27597046]
[132.09783936 75.30297089]
[119.42632294 83.32997131]
[122.33379364 98.04548645]
[137.10591125 100.65021515]
[151.01945496 92.66316223]
[165.88534546 98.69512177]
[170.29975891 114.11888885]
[160.87632751 127.10266113]
[144.84390259 127.68640900]
[134.50119019 115.42233276]
[119.72907257 112.81760406]
[108.43878937 122.69331360]
[109.05461121 137.68066406]
[109.67044067 152.66801453]
[123.84928894 154.67858887]
[137.45217896 159.14404297]
[150.05769348 165.92474365]
[161.27548218 174.80926514]
[170.75848389 185.52111816]
[178.21353149 197.72727966]
[183.41053772 211.04856873]
[186.18949890 225.07142639]
[186.46546936 239.36071777]
[184.23114014 253.47332764]
[179.55706787 266.97177124]
[172.58938599 279.43789673]
[163.54525757 290.48568726]
[152.70613098 299.77337646]
[140.40896606 307.01385498]
[127.03574371 311.98373413]
[113.00160980 314.52999878]
[113.00160980 329.52999878]
[113.00160980 344.52999878]
[113.00160980 359.52999878]
[113.00160980 374.52999878]
[113.00160980 389.52999878]
[113.00160980 404.52999878]
[113.00160980 419.52999878]
[113.00160980 434.52999878]
[113.00160980 449.52999878]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[25 126]
[26 125]
[27 124]
[28 40]
[29 39]
[30 38]
[31 37]
[45 87]
[46 86]
[47 84]
[48 83]
[88 114]
[89 113]
[90 112]
[91 111]
[92 110]
[95 108]
[96 107]
[97 106]
[98 105]
[115 123]
[116 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
