%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUACUAAUAAUCUUAUAGAAAUUUAGGUUAAAUACAGACCAAGAGCCUUCAAAGCCCUCAGUxxxxxxxxxxGCAAUCUCAAUUACAAUAUAUACACCAACAAACAAUGUUCAACCAGUAACUACUACUAAUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[110.16334534 308.16665649]
[110.16334534 293.16665649]
[110.16334534 278.16665649]
[110.16334534 263.16665649]
[110.16334534 248.16667175]
[110.16334534 233.16667175]
[110.16334534 218.16667175]
[110.16334534 203.16667175]
[110.16334534 188.16667175]
[110.16334534 173.16667175]
[108.16728973 158.30006409]
[104.21067810 143.83129883]
[100.25407410 129.36253357]
[96.29746246 114.89376068]
[82.20207214 109.76345825]
[69.87078857 118.30391693]
[57.53950500 126.84437561]
[54.45326996 139.40936279]
[43.95520401 146.26223755]
[32.00197601 144.16877747]
[19.49794197 152.45425415]
[6.99390507 160.73971558]
[-2.86984706 174.52894592]
[-18.85074234 168.86791992]
[-17.83489418 151.94442749]
[-1.29156935 148.23568726]
[11.21246624 139.95021057]
[23.71650314 131.66473389]
[30.64380836 115.56948853]
[48.99904633 114.51309204]
[61.33032990 105.97263336]
[73.66161346 97.43217468]
[81.01934052 92.82008362]
[88.55558777 91.72402191]
[94.99748993 93.81702423]
[97.14607239 78.97170258]
[99.29464722 64.12638092]
[101.44322968 49.28105545]
[86.79032898 46.04073334]
[72.41674805 41.72709656]
[58.40099716 36.36371231]
[44.81962204 29.97986794]
[31.74679947 22.61043358]
[19.25393295 14.29565716]
[7.40925169 5.08095264]
[-3.72254944 -4.98335171]
[-14.08067322 -15.84228802]
[-23.60854530 -27.43654823]
[-32.25412750 -39.70280838]
[-39.97020340 -52.57406998]
[-46.71462631 -65.98004150]
[-52.45056152 -79.84748840]
[-57.14667892 -94.10069275]
[-60.77733231 -108.66178894]
[-63.32269287 -123.45125580]
[-64.76885223 -138.38832092]
[-65.10792542 -153.39138794]
[-64.33804321 -168.37854004]
[-62.46342087 -183.26789856]
[-59.49429703 -197.97814941]
[-55.44688416 -212.42895508]
[-50.34329224 -226.54138184]
[-44.21139145 -240.23835754]
[-37.08467484 -253.44505310]
[-29.00206757 -266.08938599]
[-20.00771332 -278.10223389]
[-10.15073586 -289.41802979]
[0.51502830 -299.97494507]
[11.93132591 -309.71536255]
[24.03580475 -318.58602905]
[36.76235199 -326.53851318]
[50.04145813 -333.52941895]
[63.80060196 -339.52050781]
[77.96463013 -344.47909546]
[92.45618439 -348.37808228]
[107.19611359 -351.19616699]
[122.10391998 -352.91796875]
[137.09817505 -353.53408813]
[152.09698486 -353.04116821]
[167.01841736 -351.44189453]
[181.78100586 -348.74496460]
[196.30410767 -344.96514893]
[210.50839233 -340.12310791]
[224.31628418 -334.24523926]
[237.65237427 -327.36367798]
[250.44381714 -319.51599121]
[262.62075806 -310.74505615]
[274.11669922 -301.09875488]
[284.86880493 -290.62982178]
[294.81842041 -279.39538574]
[303.91116333 -267.45681763]
[312.09735107 -254.87931824]
[319.33233643 -241.73159790]
[325.57653809 -228.08546448]
[330.79589844 -214.01544189]
[334.96188354 -199.59837341]
[338.05172729 -184.91300964]
[340.04861450 -170.03955078]
[340.94158936 -155.05923462]
[340.72576904 -140.05387878]
[339.40237427 -125.10544586]
[336.97857666 -110.29556274]
[333.46768188 -95.70513153]
[328.88879395 -81.41383362]
[323.26696777 -67.49973297]
[316.63290405 -54.03881073]
[309.02282715 -41.10459518]
[300.47830200 -28.76772881]
[291.04598999 -17.09559059]
[280.77743530 -6.15192986]
[269.72866821 4.00348091]
[257.96008301 13.31517601]
[245.53594971 21.73229790]
[232.52410889 29.20887375]
[218.99563599 35.70407104]
[205.02441406 41.18241501]
[190.68675232 45.61397934]
[176.06097412 48.97456360]
[161.22692871 51.24581528]
[146.26567078 52.41532898]
[131.25888062 52.47671127]
[116.28855133 51.42963409]
[114.13997650 66.27495575]
[111.99139404 81.12027740]
[109.84281158 95.96560669]
[110.76622772 110.93715668]
[114.72283936 125.40592194]
[118.67945099 139.87469482]
[122.63606262 154.34346008]
[127.55139160 140.17167664]
[137.72415161 129.14828491]
[151.45648193 123.11312866]
[166.45642090 123.07348633]
[180.22045898 129.03596497]
[190.45135498 140.00543213]
[195.44151306 154.15103149]
[194.35810852 169.11186218]
[187.38192749 182.39089966]
[175.67733765 191.77186584]
[161.19784546 195.68904114]
[146.36012268 193.48866272]
[133.64059448 185.53794861]
[125.16334534 173.16667175]
[125.16334534 188.16667175]
[125.16334534 203.16667175]
[125.16334534 218.16667175]
[125.16334534 233.16667175]
[125.16334534 248.16667175]
[125.16334534 263.16665649]
[125.16334534 278.16665649]
[125.16334534 293.16665649]
[125.16334534 308.16665649]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 129]
[12 128]
[13 127]
[14 126]
[15 32]
[16 31]
[17 30]
[20 28]
[21 27]
[22 26]
[35 125]
[36 124]
[37 123]
[38 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
