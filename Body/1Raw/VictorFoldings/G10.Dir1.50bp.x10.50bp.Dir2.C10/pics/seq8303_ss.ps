%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUCAACAACCGACUAAUCACCACCCAACAAUGACUAAUCAAACUAACCUCAAAACAAAUGxxxxxxxxxxGUUUUGACAACAUUCAAAAAAGAGUAAUAAACUUCGCCUUAAUUUUAAUAAUCAACACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[34.77289581 203.43202209]
[26.39357948 197.64657593]
[18.52465820 191.18402100]
[7.86303186 201.73532104]
[-2.79859447 212.28660583]
[-7.16484642 227.49339294]
[-21.65364075 230.94651794]
[-32.31526566 241.49781799]
[-36.68151855 256.70458984]
[-51.17031479 260.15771484]
[-61.83193970 270.70901489]
[-72.49356842 281.26031494]
[-67.07057953 295.49093628]
[-67.91104126 310.69665527]
[-74.86933136 324.24295044]
[-86.73989105 333.78286743]
[-101.46606445 337.66351318]
[-116.49646759 335.21258545]
[-129.22697449 326.85473633]
[-137.45196533 314.03796387]
[-139.74639893 298.98287964]
[-135.71275330 284.29788208]
[-126.04988098 272.52719116]
[-112.43193817 265.71020508]
[-97.21831512 265.02795410]
[-83.04485321 270.59869385]
[-72.38323212 260.04739380]
[-61.72160339 249.49610901]
[-58.11794281 235.04400635]
[-42.86655807 230.83618164]
[-32.20492935 220.28489685]
[-28.60127068 205.83280945]
[-13.34988499 201.62498474]
[-2.68825841 191.07368469]
[7.97336769 180.52239990]
[-3.89470148 164.48757935]
[-12.99762249 146.73643494]
[-19.09312248 127.74140930]
[-22.01896858 108.00804138]
[-21.69729233 88.06154633]
[-18.13665199 68.43278503]
[-32.36343002 63.67897034]
[-46.59020996 58.92515564]
[-62.54197693 62.72951889]
[-73.61444855 50.63272476]
[-68.41721344 35.07891846]
[-52.29674530 32.06852722]
[-41.83639526 44.69837952]
[-27.60961723 49.45219421]
[-13.38283730 54.20600891]
[-7.46655798 41.65879059]
[-0.16723423 29.86240196]
[8.42119503 18.96864891]
[18.18820000 9.11773014]
[29.00808525 0.43642479]
[40.74160004 -6.96354437]
[53.23774719 -12.98694324]
[66.33570099 -17.55625153]
[79.86689758 -20.61266899]
[78.30931854 -35.53158188]
[76.75173187 -50.45049286]
[75.19415283 -65.36940765]
[73.63657379 -80.28831482]
[72.07899475 -95.20722961]
[70.52140808 -110.12614441]
[55.86807632 -114.08141327]
[43.63537216 -123.06614685]
[35.47767258 -135.86521912]
[32.49823761 -150.74768066]
[35.10001373 -165.70077515]
[42.93113327 -178.70223999]
[54.93249893 -187.99372864]
[69.48102570 -192.31863403]
[84.60913849 -191.09205627]
[98.27089691 -184.47988892]
[108.61865234 -173.37635803]
[114.25295258 -159.28312683]
[114.41181946 -144.10618591]
[109.07374573 -129.89811707]
[98.96067810 -118.58041382]
[85.44032288 -111.68372345]
[86.99790192 -96.76480865]
[88.55548859 -81.84590149]
[90.11306763 -66.92698669]
[91.67064667 -52.00807190]
[93.22822571 -37.08916092]
[94.78581238 -22.17024994]
[114.56533051 -21.41090775]
[133.96319580 -17.47024536]
[152.47113037 -10.45151806]
[169.60417175 -0.53863639]
[184.91337585 12.00865269]
[197.99758911 26.86157227]
[208.51399231 43.63093567]
[216.18699646 61.87733078]
[220.81558228 81.12265015]
[235.74987793 79.72035217]
[250.68418884 78.31804657]
[265.61849976 76.91574097]
[280.52038574 75.20304871]
[295.38345337 73.18071747]
[310.24649048 71.15838623]
[325.01254272 68.51951599]
[339.65603638 65.26869202]
[354.29956055 62.01786804]
[364.09381104 49.31148529]
[380.13641357 49.19071579]
[390.12084961 61.74820709]
[386.38790894 77.35092163]
[371.80120850 84.02980042]
[357.55038452 76.66136932]
[342.90689087 79.91219330]
[328.26336670 83.16301727]
[326.64120483 85.52436066]
[323.95574951 87.36344910]
[320.40930176 88.26045990]
[316.35638428 87.87973785]
[312.26882935 86.02143097]
[297.40579224 88.04376221]
[282.54272461 90.06610107]
[278.95721436 93.30949402]
[273.27703857 94.29278564]
[267.02081299 91.85005188]
[252.08650208 93.25234985]
[237.15219116 94.65465546]
[222.21788025 96.05696106]
[222.12219238 106.23906708]
[221.17970276 116.37790680]
[219.39694214 126.40318298]
[216.78625488 136.24537659]
[213.36576843 145.83624268]
[209.15917969 155.10926819]
[204.19566345 164.00015259]
[198.50965881 172.44726562]
[192.14054871 180.39201355]
[185.13253784 187.77931213]
[177.53421021 194.55793762]
[169.39825439 200.68089294]
[160.78106689 206.10569763]
[151.74241638 210.79476929]
[142.34498596 214.71556091]
[132.65393066 217.84089661]
[122.73644257 220.14912415]
[112.66130066 221.62420654]
[102.49835968 222.25595093]
[92.31809235 222.03993225]
[82.19110107 220.97769165]
[72.18759155 219.07656860]
[62.37694168 216.34974670]
[52.82717514 212.81614685]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 35]
[4 34]
[5 33]
[7 31]
[8 30]
[10 28]
[11 27]
[12 26]
[41 50]
[42 49]
[43 48]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[64 82]
[65 81]
[96 126]
[97 125]
[98 124]
[99 123]
[100 120]
[101 119]
[102 118]
[103 113]
[104 112]
[105 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
