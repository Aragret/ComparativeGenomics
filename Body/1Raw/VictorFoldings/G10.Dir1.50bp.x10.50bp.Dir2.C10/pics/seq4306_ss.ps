%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAACUCAUACACCUCCUAUGAAAAAACUUCCUACCACUCACCCUAGCAUUACUUAUAUGAUxxxxxxxxxxCACCAAUGGUACUGAACCUACGAGUACACCGACUACGGCGGACUAAUCUUCAACUCCUACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[114.77913666 280.30383301]
[114.77913666 265.30383301]
[114.77913666 250.30381775]
[114.77913666 235.30381775]
[114.77913666 220.30381775]
[114.77913666 205.30381775]
[114.77913666 190.30381775]
[114.77913666 175.30381775]
[114.77913666 160.30381775]
[114.77913666 145.30381775]
[104.60333252 146.36962891]
[94.66403961 145.22792053]
[85.42394257 142.02987671]
[77.29208374 137.02008057]
[70.60585785 130.52073669]
[58.45252609 139.31257629]
[46.29919052 148.10441589]
[34.14585876 156.89627075]
[21.99252701 165.68811035]
[21.05021477 181.29727173]
[10.25751495 192.61326599]
[-5.28958893 194.29301453]
[-18.25023079 185.54339600]
[-22.50479126 170.49571228]
[-16.04439735 156.25502014]
[-1.91944993 149.54533386]
[13.20068359 153.53477478]
[25.35401726 144.74293518]
[37.50735092 135.95108032]
[49.66068268 127.15924835]
[61.81401443 118.36740112]
[58.82178116 109.99426270]
[57.64275742 101.18104553]
[58.32885742 92.31581879]
[60.84986877 83.78894806]
[65.09478760 75.97591400]
[70.87669373 69.22072601]
[77.94098663 63.82085037]
[72.52236176 49.83376694]
[67.10373688 35.84668350]
[52.50019073 24.67676353]
[55.79288864 7.46622419]
[50.08822632 -6.40665627]
[44.38356018 -20.27953720]
[38.67889786 -34.15241623]
[32.97423553 -48.02529907]
[18.39261627 -44.39291000]
[3.43749857 -42.92242432]
[-11.57234764 -43.64518356]
[-26.31698608 -46.54578400]
[-40.48213577 -51.56239700]
[-53.76586533 -58.58809280]
[-65.88502502 -67.47312164]
[-76.58130646 -78.02809143]
[-85.62670898 -90.02803040]
[-92.82843018 -103.21716309]
[-98.03296661 -117.31434631]
[-101.12938690 -132.01910400]
[-102.05168152 -147.01802063]
[-100.78019714 -161.99136353]
[-97.34203339 -176.61999512]
[-91.81048584 -190.59210205]
[-84.30344391 -203.60986328]
[-74.98092651 -215.39581299]
[-64.04164124 -225.69873047]
[-51.71876907 -234.29899597]
[-38.27496338 -241.01330566]
[-23.99678421 -245.69854736]
[-9.18857098 -248.25483704]
[5.83403969 -248.62771606]
[20.75083923 -246.80920410]
[35.24387360 -242.83808899]
[49.00422668 -236.79901123]
[61.73859024 -228.82067871]
[73.17553711 -219.07315063]
[83.07128143 -207.76422119]
[91.21489716 -195.13490295]
[97.43280792 -181.45443726]
[101.59247589 -167.01437378]
[103.60522461 -152.12254333]
[103.42817688 -137.09635925]
[101.06508636 -122.25608063]
[96.56632996 -107.91805267]
[90.02779388 -94.38788605]
[81.58885193 -81.95397186]
[71.42938232 -70.88134766]
[59.76593781 -61.40602112]
[46.84711456 -53.72996140]
[52.55177689 -39.85708237]
[58.25644302 -25.98419952]
[63.96110535 -12.11131954]
[69.66577148 1.76156104]
[80.73590851 6.73290014]
[85.58338928 18.29461479]
[81.09082031 30.42805862]
[86.50944519 44.41514206]
[91.92807007 58.40222549]
[104.46421051 57.10370255]
[117.05047607 59.56571960]
[128.56466675 65.70021057]
[137.94241333 75.08628082]
[144.27511597 86.99708557]
[146.89706421 100.45533752]
[145.45315552 114.31324768]
[160.45236206 114.15924835]
[175.45158386 114.00524902]
[189.17158508 106.12667847]
[201.97763062 113.73291016]
[215.69763184 105.85433960]
[228.50367737 113.46056366]
[243.50288391 113.30657196]
[258.50207520 113.15257263]
[272.33621216 104.34637451]
[286.75265503 112.16291046]
[286.92102051 128.56118774]
[272.66809082 136.67207336]
[258.65609741 128.15177917]
[243.65687561 128.30577087]
[228.65766907 128.45977783]
[216.01049805 136.32733154]
[202.13162231 128.73211670]
[189.48445129 136.59967041]
[175.60557556 129.00445557]
[160.60636902 129.15846252]
[145.60716248 129.31245422]
[158.84402466 136.36831665]
[172.08090210 143.42417908]
[185.31777954 150.48002625]
[200.21264648 152.25292969]
[213.19700623 159.76335144]
[222.16052246 171.79061890]
[225.64636230 186.37995911]
[223.08796692 201.16017151]
[214.90115356 213.72903442]
[202.41653442 222.04373169]
[187.66320801 224.75286865]
[173.03904724 221.41615295]
[160.92088318 212.57588196]
[153.27830505 199.66888428]
[151.35328674 184.79502869]
[144.16189575 171.63130188]
[136.97052002 158.46755981]
[129.77912903 145.30381775]
[129.77912903 160.30381775]
[129.77912903 175.30381775]
[129.77912903 190.30381775]
[129.77912903 205.30381775]
[129.77912903 220.30381775]
[129.77912903 235.30381775]
[129.77912903 250.30381775]
[129.77912903 265.30383301]
[129.77912903 280.30383301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[15 31]
[16 30]
[17 29]
[18 28]
[19 27]
[38 97]
[39 96]
[40 95]
[42 92]
[43 91]
[44 90]
[45 89]
[46 88]
[104 125]
[105 124]
[106 123]
[108 121]
[110 119]
[111 118]
[112 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
