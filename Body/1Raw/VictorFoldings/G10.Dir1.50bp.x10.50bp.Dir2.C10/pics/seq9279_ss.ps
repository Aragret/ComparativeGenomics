%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAGAGUAAUAAACUUCGCCUUAAUUUUAAUAAUCAACACCCUCCUAGCCUUACUACUAAUAxxxxxxxxxxACAGCUAUCCAUUGGUCUUAGGCCCCAAAAAUUUUGGUGCAACUCCAAAUAAAAGUAAUAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 250.99664307]
[92.50000000 235.99664307]
[92.50000000 220.99664307]
[92.50000000 205.99664307]
[92.50000000 190.99664307]
[92.50000000 175.99664307]
[92.50000000 160.99664307]
[92.50000000 145.99664307]
[92.50000000 130.99664307]
[92.50000000 115.99664307]
[86.23059845 102.36966705]
[74.83952332 92.61038971]
[63.44844818 82.85112000]
[52.05737305 73.09184265]
[36.54342651 69.98894501]
[31.91230202 55.83259964]
[20.52122879 46.07332611]
[9.13015461 36.31405258]
[-2.26091933 26.55477715]
[-12.95730495 37.08383942]
[-24.50809097 46.66784668]
[-36.83005142 55.23774338]
[-49.83440399 62.73178482]
[-63.42745209 69.09597015]
[-77.51126099 74.28444672]
[-91.98434448 78.25983429]
[-106.74242401 80.99348450]
[-121.67916870 82.46570587]
[-136.68696594 82.66589355]
[-151.65765381 81.59259033]
[-166.48339844 79.25354004]
[-181.05737305 75.66560364]
[-195.27455139 70.85461426]
[-209.03251648 64.85525513]
[-222.23213196 57.71073532]
[-234.77827454 49.47254181]
[-246.58058167 40.20003128]
[-257.55398560 29.96001053]
[-267.61944580 18.82626343]
[-276.70443726 6.87900829]
[-284.74349976 -5.79567337]
[-291.67868042 -19.10645676]
[-297.46005249 -32.95743942]
[-302.04592896 -47.24881744]
[-305.40328979 -61.87762451]
[-307.50793457 -76.73845673]
[-308.34469604 -91.72424316]
[-307.90753174 -106.72699738]
[-306.19964600 -121.63863373]
[-303.23327637 -136.35171509]
[-299.02984619 -150.76020813]
[-293.61959839 -164.76033020]
[-287.04156494 -178.25119019]
[-279.34310913 -191.13557434]
[-270.57971191 -203.32067871]
[-260.81448364 -214.71867371]
[-250.11782837 -225.24746704]
[-238.56680298 -234.83117676]
[-226.24461365 -243.40075684]
[-213.24006653 -250.89445496]
[-199.64686584 -257.25830078]
[-185.56292725 -262.44641113]
[-171.08973694 -266.42141724]
[-156.33158875 -269.15469360]
[-141.39479065 -270.62652588]
[-126.38700104 -270.82632446]
[-111.41632843 -269.75262451]
[-96.59064484 -267.41320801]
[-82.01676941 -263.82489014]
[-67.79971313 -259.01351929]
[-54.04190826 -253.01380920]
[-40.84248352 -245.86895752]
[-28.29653931 -237.63043213]
[-16.49447441 -228.35762024]
[-5.52132416 -218.11732483]
[4.54384947 -206.98330688]
[13.62852478 -195.03582764]
[21.66724586 -182.36093140]
[28.60209084 -169.04997253]
[34.38309860 -155.19883728]
[38.96860886 -140.90733337]
[42.32558441 -126.27844238]
[44.42984390 -111.41755676]
[45.26621628 -96.43175507]
[44.82868576 -81.42900848]
[43.12039566 -66.51741791]
[40.15365601 -51.80441666]
[35.94984818 -37.39602280]
[30.53925705 -23.39604568]
[23.96086693 -9.90536022]
[16.26207542 2.97883439]
[7.49835539 15.16370392]
[18.88942909 24.92297935]
[30.28050232 34.68225479]
[41.67157745 44.44152832]
[56.37075806 46.84637833]
[61.81664658 61.70076752]
[73.20772552 71.46004486]
[84.59879303 81.21931458]
[95.98986816 90.97859192]
[100.44708252 84.74110413]
[109.48209381 81.64633179]
[120.79624939 84.30975342]
[135.70069885 82.61935425]
[148.54101562 73.37615967]
[162.05915833 79.62989044]
[176.96360779 77.93949890]
[191.86805725 76.24909973]
[206.77249146 74.55870056]
[221.67694092 72.86830139]
[236.73379517 65.07551575]
[248.39019775 77.38668823]
[239.78695679 91.99561310]
[223.36734009 87.77275085]
[208.46289062 89.46315002]
[193.55844116 91.15354919]
[178.65400696 92.84394073]
[163.74955750 94.53433990]
[151.97529602 103.65663147]
[137.39109802 97.52380371]
[122.48664856 99.21420288]
[136.37695312 104.87631226]
[150.26725769 110.53842163]
[164.15754700 116.20053101]
[179.09512329 114.83339691]
[193.70852661 118.21695709]
[206.52511597 126.01022339]
[216.25331116 137.42784119]
[221.91278076 151.31922913]
[222.93318176 166.28448486]
[219.21168518 180.81550598]
[211.12332153 193.44793701]
[199.48320007 202.90876770]
[185.46432495 208.24461365]
[170.47943115 208.91772461]
[156.03862000 204.86029053]
[143.59712219 196.48120117]
[134.40873718 184.62483215]
[129.39939880 170.48600769]
[129.07414246 155.48785400]
[121.88276672 142.32412720]
[114.69138336 129.16038513]
[107.50000000 115.99664307]
[107.50000000 130.99664307]
[107.50000000 145.99664307]
[107.50000000 160.99664307]
[107.50000000 175.99664307]
[107.50000000 190.99664307]
[107.50000000 205.99664307]
[107.50000000 220.99664307]
[107.50000000 235.99664307]
[107.50000000 250.99664307]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 100]
[12 99]
[13 98]
[14 97]
[16 95]
[17 94]
[18 93]
[19 92]
[103 121]
[104 120]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
