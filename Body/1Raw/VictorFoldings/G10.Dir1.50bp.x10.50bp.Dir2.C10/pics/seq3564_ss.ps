%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUACUAUGAACCCCCCUCCCCAUACCCAACCCCCUGGUCAACCUCAACCUAGGCCUCCUAxxxxxxxxxxUAUGAAUUCGAACAGCAUACCCCCGAUUCCGCUACGACCAACUCAUACACCUCCUAUGAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-3.87502718 244.40190125]
[-13.13997650 256.19854736]
[-22.40492630 267.99517822]
[-31.66987419 279.79180908]
[-40.81160736 291.68420410]
[-49.82913971 303.67102051]
[-58.84666824 315.65786743]
[-67.86419678 327.64468384]
[-76.88172913 339.63153076]
[-85.89926147 351.61837769]
[-79.81287384 365.71984863]
[-81.60858154 380.97338867]
[-90.80335236 393.27590942]
[-104.92382812 399.31805420]
[-120.17168427 397.47454834]
[-132.44531250 388.24127197]
[-138.44317627 374.10189819]
[-136.55187988 358.85992432]
[-127.28016663 346.61529541]
[-113.12208557 340.66177368]
[-97.88609314 342.60083008]
[-88.86856079 330.61401367]
[-79.85102844 318.62716675]
[-70.83350372 306.64035034]
[-61.81597137 294.65350342]
[-52.79844284 282.66665649]
[-51.28083801 275.38363647]
[-43.46651459 270.52688599]
[-34.20156479 258.73022461]
[-24.93661690 246.93359375]
[-15.67166710 235.13694763]
[-31.17004776 220.15135193]
[-44.74175644 203.40093994]
[-56.18745041 185.13172913]
[-65.33900452 165.61207581]
[-72.06200409 145.12869263]
[-76.25769043 123.98242950]
[-77.86444092 102.48391724]
[-76.85866547 80.94891357]
[-73.25511932 59.69374084]
[-67.10674286 39.03060150]
[-58.50384140 19.26300240]
[-47.57278061 0.68129724]
[-59.65277100 -8.21105194]
[-71.73275757 -17.10340118]
[-83.90459442 -25.86960983]
[-96.16696167 -34.50872421]
[-108.42932892 -43.14784241]
[-123.07152557 -38.01112747]
[-137.92689514 -42.49414444]
[-147.28326416 -54.87307739]
[-147.54290771 -70.38798523]
[-138.60598755 -83.07305145]
[-123.90892792 -88.05062866]
[-109.10305786 -83.40672302]
[-99.88153076 -70.92701721]
[-99.79021454 -55.41020966]
[-87.52784729 -46.77109528]
[-75.26548004 -38.13197708]
[-67.93864441 -36.84236526]
[-62.84040833 -29.18338966]
[-50.76041794 -20.29104042]
[-38.68043137 -11.39869118]
[-29.06838989 -22.40621376]
[-18.58524323 -32.58759689]
[-7.30174446 -41.87411880]
[4.70595264 -50.20311356]
[17.35680580 -57.51835632]
[30.56543350 -63.77048492]
[44.24268341 -68.91729736]
[58.29625320 -72.92404938]
[72.63128662 -75.76371765]
[87.15103912 -77.41712189]
[101.75750732 -77.87310791]
[116.35211945 -77.12859344]
[130.83636475 -75.18861389]
[145.11248779 -72.06624603]
[159.08413696 -67.78258514]
[172.65702820 -62.36651993]
[185.73953247 -55.85462189]
[198.24337769 -48.29082870]
[210.08415222 -39.72620010]
[221.18194580 -30.21853065]
[231.46186829 -19.83199501]
[242.96366882 -29.46052170]
[254.46546936 -39.08905029]
[265.96728516 -48.71757507]
[270.57785034 -56.67963791]
[277.80999756 -58.42375183]
[289.50961304 -67.81091309]
[285.59362793 -82.52774048]
[288.00848389 -97.56398010]
[296.33578491 -110.31449890]
[309.13278198 -118.57020569]
[324.18231201 -120.90074921]
[338.87698364 -116.90234375]
[350.67080688 -107.26773834]
[357.52044678 -93.66618347]
[358.23916626 -78.45423889]
[352.70245361 -64.26745605]
[341.86956787 -53.56378937]
[327.61737061 -48.19771194]
[312.41516113 -49.09892654]
[298.89675903 -56.11128998]
[287.19714355 -46.72412872]
[275.59579468 -37.21577072]
[264.09399414 -27.58724594]
[252.59219360 -17.95871925]
[241.09039307 -8.33019257]
[247.95352173 1.24936938]
[254.16729736 11.26232910]
[259.70446777 21.66474152]
[264.54074097 32.41095352]
[268.65484619 43.45380020]
[272.02877808 54.74481583]
[274.64770508 66.23445129]
[276.50012207 77.87227631]
[277.57794189 89.60721588]
[277.87637329 101.38776398]
[277.39416504 113.16222382]
[276.13339233 124.87892151]
[274.09960938 136.48641968]
[271.30172729 147.93379211]
[267.75204468 159.17079163]
[263.46612549 170.14810181]
[258.46279907 180.81755066]
[252.76397705 191.13230896]
[246.39472961 201.04708862]
[239.38296509 210.51840210]
[231.75949097 219.50466919]
[223.55773926 227.96646118]
[214.81373596 235.86662292]
[205.56581116 243.17048645]
[195.85459900 249.84600830]
[185.72268677 255.86389160]
[175.21455383 261.19772339]
[164.37631226 265.82406616]
[153.25555420 269.72265625]
[141.90104675 272.87634277]
[130.36265564 275.27133179]
[118.69100952 276.89706421]
[106.93733215 277.74645996]
[95.15320587 277.81573486]
[83.39035034 277.10464478]
[71.70039368 275.61624146]
[60.13463211 273.35708618]
[48.74383926 270.33712769]
[37.57799530 266.56958008]
[26.68611336 262.07098389]
[16.11598969 256.86108398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 31]
[2 30]
[3 29]
[4 28]
[5 26]
[6 25]
[7 24]
[8 23]
[9 22]
[10 21]
[43 63]
[44 62]
[45 61]
[46 59]
[47 58]
[48 57]
[84 109]
[85 108]
[86 107]
[87 106]
[89 105]
[90 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
