%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAUCUCAUCAAUACAACCCCCGCCCAUCCUACCCAGCACACACACACCGCUGCUAACCCCxxxxxxxxxxGGAUUCAUCUUUCUUUUCACCGUAGGUGGCCUGACUGGCAUUGUAUUAGCAAACUCAUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[6.47102356 211.61503601]
[-3.74245620 222.60070801]
[-13.95593643 233.58636475]
[-17.68582916 248.96162415]
[-32.01843643 253.01448059]
[-42.23191833 264.00015259]
[-52.44539642 274.98580933]
[-62.65887833 285.97146606]
[-72.87236023 296.95712280]
[-65.71260071 310.29943848]
[-63.27547836 325.24395752]
[-65.82534790 340.16967773]
[-73.08561707 353.45751953]
[-84.26874542 363.66616821]
[-98.16167450 369.68823242]
[-113.25740051 370.87048340]
[-127.91845703 367.08468628]
[-140.55451965 358.74151611]
[-149.79490662 346.74594116]
[-154.63732910 332.39916992]
[-154.55647278 317.25744629]
[-149.56114197 302.96319580]
[-140.19317627 291.06698608]
[-127.46874237 282.85922241]
[-112.76809692 279.23019409]
[-97.68585205 280.57357788]
[-83.85802460 286.74365234]
[-73.64453888 275.75799561]
[-63.43106079 264.77233887]
[-53.21758270 253.78666687]
[-43.00410080 242.80099487]
[-40.00474548 228.21151733]
[-24.94160080 223.37289429]
[-14.72812080 212.38722229]
[-4.51464128 201.40156555]
[-18.52548409 184.60079956]
[-29.86143494 165.89077759]
[-38.26666641 145.69372559]
[-43.55148697 124.46543884]
[-45.59662628 102.68502808]
[-44.35593033 80.84401703]
[-39.85740280 59.43531799]
[-32.20256424 38.94208908]
[-21.56417084 19.82681656]
[-33.64415741 10.93446732]
[-45.72414780 2.04211783]
[-57.80413437 -6.85023165]
[-71.53844452 -0.09543497]
[-86.83837891 -0.50860471]
[-100.18811798 -7.99479771]
[-108.51998901 -20.83374214]
[-109.91939545 -36.07514191]
[-104.06475830 -50.21663284]
[-92.30142975 -60.00860977]
[-77.33254242 -63.20093918]
[-62.59783554 -59.06005859]
[-51.48323059 -48.53750229]
[-46.54278946 -34.05128098]
[-48.91178513 -18.93021965]
[-36.83179855 -10.03787041]
[-24.75181007 -1.14552081]
[-12.67182064 7.74682903]
[-7.11619234 1.28216577]
[-1.19000316 -4.84836531]
[5.08667612 -10.62354469]
[11.69256115 -16.02335739]
[18.60522461 -21.02906036]
[25.80117416 -25.62325287]
[33.25593567 -29.78992844]
[40.94412613 -33.51453781]
[48.83954620 -36.78403854]
[56.91527939 -39.58694077]
[65.14376831 -41.91333771]
[73.49690247 -43.75495911]
[81.94615173 -45.10518646]
[90.46261597 -45.95907974]
[99.01716614 -46.31340408]
[107.58049774 -46.16662216]
[116.12328339 -45.51892090]
[124.61624146 -44.37220383]
[133.03022766 -42.73008347]
[141.33636475 -40.59786987]
[149.50611877 -37.98256683]
[157.51142883 -34.89282608]
[165.32472229 -31.33893204]
[172.91914368 -27.33277130]
[180.26850891 -22.88778877]
[187.34748840 -18.01893234]
[194.13165283 -12.74262238]
[200.59756470 -7.07667971]
[206.72286987 -1.04027355]
[212.48637390 5.34614611]
[217.86808777 12.06091595]
[222.84931946 19.08123398]
[227.41278076 26.38323784]
[231.54254150 33.94208145]
[235.22418213 41.73203278]
[238.44482422 49.72653580]
[252.10105896 43.52112961]
[265.75729370 37.31571960]
[279.41354370 31.11031342]
[291.33242798 19.05307770]
[306.21792603 27.16837692]
[302.54049683 43.71868896]
[285.61895752 44.76655579]
[271.96270752 50.97196198]
[258.30645752 57.17736816]
[244.65022278 63.38277817]
[247.59571838 78.09073639]
[262.58840942 78.55877686]
[277.58111572 79.02682495]
[290.21115112 69.13433075]
[305.78619385 72.98107147]
[312.35839844 87.61615753]
[304.88613892 101.81279755]
[289.10147095 104.68054962]
[277.11306763 94.01951599]
[262.12036133 93.55147552]
[247.12767029 93.08343506]
[247.20002747 103.41308594]
[246.54827881 113.71886444]
[245.17616272 123.95007324]
[243.09088135 134.05645752]
[240.30322266 143.98837280]
[236.82734680 153.69709778]
[232.68084717 163.13500977]
[227.88458252 172.25588989]
[222.46258545 181.01507568]
[216.44195557 189.36975098]
[209.85270691 197.27906799]
[202.72767639 204.70445251]
[195.10226440 211.60971069]
[187.01431274 217.96121216]
[178.50395203 223.72811890]
[169.61331177 228.88244629]
[160.38639832 233.39929199]
[150.86883545 237.25685120]
[141.10763550 240.43659973]
[131.15097046 242.92340088]
[121.04797363 244.70545959]
[110.84842682 245.77453613]
[100.60257721 246.12582397]
[90.36084747 245.75813293]
[80.17362213 244.67373657]
[70.09097290 242.87846375]
[60.16241837 240.38166809]
[50.43669510 237.19609070]
[40.96150208 233.33789062]
[31.78327560 228.82652283]
[22.94695473 223.68460083]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 35]
[2 34]
[3 33]
[5 31]
[6 30]
[7 29]
[8 28]
[9 27]
[44 62]
[45 61]
[46 60]
[47 59]
[98 108]
[99 107]
[100 106]
[101 105]
[109 119]
[110 118]
[111 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
