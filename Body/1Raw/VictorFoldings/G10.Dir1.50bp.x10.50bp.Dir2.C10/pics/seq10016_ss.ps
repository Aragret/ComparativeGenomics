%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAGCCACAGAACUAAUCAUAUUUUAUAUCUUCUUCGAAACCACACUUAUCCCCACCUUGGCxxxxxxxxxxAGCAGCAGCAGGCAAAUCAGCCCAAUUAGGUCUCCACCCCUGACUCCCCUCAGCCAUAGAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[198.18058777 480.80590820]
[198.18058777 465.80590820]
[198.18058777 450.80590820]
[198.18058777 435.80590820]
[198.18058777 420.80590820]
[198.18058777 405.80590820]
[198.18058777 390.80590820]
[198.18058777 375.80590820]
[198.18058777 360.80590820]
[198.18058777 345.80590820]
[195.27311707 331.09036255]
[189.56845093 317.21749878]
[183.86378479 303.34460449]
[166.77600098 301.70245361]
[152.78004456 291.61026001]
[145.75332642 275.75369263]
[147.69802856 258.43011475]
[158.17153931 244.38409424]
[151.90214539 230.75712585]
[145.63273621 217.13014221]
[133.28416443 208.80174255]
[134.54531860 193.03088379]
[128.27590942 179.40390015]
[122.00650024 165.77691650]
[115.73709869 152.14993286]
[109.46768951 138.52296448]
[92.20006561 141.76579285]
[74.03628540 137.12895203]
[58.59790802 124.53327942]
[49.36051941 105.55773163]
[48.90496826 83.27691650]
[33.94368744 82.19984436]
[18.98240662 81.12277222]
[11.84251595 94.57423401]
[-0.15530166 103.95359039]
[-14.93235111 107.63580322]
[-29.92841911 104.98291779]
[-42.54534531 96.45455170]
[-50.59717560 83.52829742]
[-52.68887711 68.44371796]
[-48.45804977 53.81429291]
[-38.63771057 42.17466736]
[-24.92929649 35.54147720]
[-9.70786858 35.06395721]
[4.38936710 40.82484436]
[14.91997910 51.82603073]
[20.05947685 66.16149139]
[35.02075577 67.23856354]
[49.98203659 68.31563568]
[56.94239426 55.02829361]
[47.53853607 43.34208298]
[38.13467789 31.65587425]
[23.68007278 36.28499985]
[8.52955532 35.37601852]
[-5.26789093 29.05186653]
[-15.84627438 18.16783142]
[-21.77495575 4.19588852]
[-22.25213051 -10.97437000]
[-17.21326256 -25.29129219]
[-7.33981752 -36.81863022]
[6.03290033 -43.99740982]
[21.09634209 -45.85675430]
[35.81330109 -42.14521027]
[48.19342804 -33.36472702]
[56.56241226 -20.70279312]
[59.78842163 -5.87183619]
[57.43515778 9.12238312]
[49.82088852 22.25201797]
[59.22474670 33.93822479]
[68.62860107 45.62443542]
[76.06190491 44.62640762]
[73.41191101 29.86234474]
[70.76191711 15.09828186]
[68.11191559 0.33421984]
[60.18834686 -12.40222263]
[66.58264923 -25.97104263]
[81.44917297 -27.96765327]
[91.19697571 -16.56675911]
[86.91380310 -2.19020605]
[88.25203705 12.74997902]
[89.59027100 27.69016457]
[90.92849731 42.63034821]
[98.36180115 41.63232040]
[104.35009766 27.87949181]
[101.96539307 11.65465832]
[114.99033356 1.69057739]
[130.02598572 8.23744106]
[131.60494995 24.56039810]
[118.10292816 33.86779022]
[112.11463165 47.62061691]
[120.30878448 57.92968369]
[124.70214081 68.96035004]
[136.09321594 59.20107269]
[147.48428345 49.44179916]
[148.44996643 33.66704178]
[160.34243774 23.25816536]
[176.10610962 24.39057350]
[186.38867188 36.39242935]
[185.08966064 52.14324188]
[172.97976685 62.29833603]
[157.24356079 60.83287430]
[145.85249329 70.59214783]
[134.46141052 80.35142517]
[139.65264893 98.84986115]
[135.54234314 117.61809540]
[123.09467316 132.25355530]
[129.36407471 145.88053894]
[135.63348389 159.50750732]
[141.90289307 173.13449097]
[148.17228699 186.76147461]
[160.96928406 196.06455994]
[159.25971985 210.86073303]
[165.52911377 224.48771667]
[171.79852295 238.11468506]
[184.78080750 238.08622742]
[196.75793457 242.97233582]
[205.94882202 252.00798035]
[211.00135803 263.81396484]
[211.19123840 276.60739136]
[206.52561951 288.47085571]
[197.73666382 297.63995361]
[203.44132996 311.51281738]
[209.14599609 325.38571167]
[211.48042297 310.56848145]
[218.00454712 297.06158447]
[228.15959167 286.02188110]
[241.07582092 278.39489746]
[255.64697266 274.83380127]
[270.62509155 275.64364624]
[284.72735596 280.75503540]
[296.74591064 289.73022461]
[305.65145874 301.80050659]
[310.68121338 315.93206787]
[311.40441895 330.91464233]
[307.75915527 345.46496582]
[300.05758667 358.33685303]
[288.95932007 368.42788696]
[275.41494751 374.87380981]
[260.58447266 377.12249756]
[245.73806763 374.98141479]
[232.14729309 368.63391113]
[220.97615051 358.62362671]
[213.18058777 345.80590820]
[213.18058777 360.80590820]
[213.18058777 375.80590820]
[213.18058777 390.80590820]
[213.18058777 405.80590820]
[213.18058777 420.80590820]
[213.18058777 435.80590820]
[213.18058777 450.80590820]
[213.18058777 465.80590820]
[213.18058777 480.80590820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 123]
[12 122]
[13 121]
[18 114]
[19 113]
[20 112]
[22 110]
[23 109]
[24 108]
[25 107]
[26 106]
[31 49]
[32 48]
[33 47]
[50 70]
[51 69]
[52 68]
[83 90]
[84 89]
[92 103]
[93 102]
[94 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
