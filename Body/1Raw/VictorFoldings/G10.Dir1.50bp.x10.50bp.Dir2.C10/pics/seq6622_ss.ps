%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAAUAUAAAACCCCCUGCCAUAACCCAAUACCAAACGCCCCUCUUCGUCUGAUCCGUCCUxxxxxxxxxxAUCCCCACCGGCGUCAAAGUAUUUAGCUGACUCGCCACACUCCACGGAAGCAAUAUGAAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-13.22626019 270.04748535]
[-21.99246788 282.21932983]
[-23.77900124 297.93933105]
[-37.49547195 303.74517822]
[-46.26168060 315.91702271]
[-55.02788544 328.08886719]
[-63.79409409 340.26068115]
[-72.56030273 352.43252563]
[-81.32650757 364.60437012]
[-74.42920685 378.26766968]
[-74.68319702 393.57107544]
[-82.03011322 406.99795532]
[-94.78169250 415.46292114]
[-110.00771332 417.02081299]
[-124.20934296 411.31359863]
[-134.12315369 399.65277100]
[-137.47102356 384.71789551]
[-133.48364258 369.94091797]
[-123.07727814 358.71743774]
[-108.64322662 353.62658691]
[-93.49834442 355.83816528]
[-84.73213959 343.66632080]
[-75.96593475 331.49447632]
[-67.19972229 319.32263184]
[-58.43351746 307.15081787]
[-49.66730881 294.97897339]
[-48.50779343 280.12957764]
[-34.16430283 273.45312500]
[-25.39809799 261.28128052]
[-39.43617630 249.31138611]
[-52.33720016 236.12388611]
[-63.99596405 221.82635498]
[-74.31739044 206.53535461]
[-83.21731567 190.37561035]
[-90.62316895 173.47886658]
[-96.47454834 155.98294067]
[-100.72373962 138.03047180]
[-103.33609009 119.76789856]
[-104.29030609 101.34410858]
[-103.57859802 82.90937042]
[-101.20677948 64.61399078]
[-97.19417572 46.60717773]
[-91.57351685 29.03576279]
[-84.39064026 12.04304028]
[-75.70412445 -4.23242235]
[-88.31524658 -12.35396385]
[-100.92637634 -20.47550583]
[-115.34221649 -14.73414421]
[-130.37121582 -18.59531975]
[-140.23443604 -30.57432938]
[-141.13923645 -46.06500244]
[-132.73773193 -59.11085892]
[-118.26046753 -64.69549561]
[-103.27423096 -60.67151260]
[-93.54154968 -48.58621216]
[-92.80483246 -33.08663559]
[-80.19371033 -24.96509171]
[-67.58258057 -16.84354973]
[-59.68101883 -27.42962074]
[-51.11183548 -37.48290634]
[-41.91085052 -46.96137619]
[-32.11653900 -55.82540512]
[-21.76984787 -64.03792572]
[-10.91403770 -71.56460571]
[0.40550455 -78.37397003]
[12.14145088 -84.43755341]
[24.24473381 -89.73001099]
[36.66474915 -94.22920227]
[49.34956741 -97.91632080]
[62.24615860 -100.77595520]
[75.30059814 -102.79614258]
[88.45829773 -103.96844482]
[101.66426086 -104.28794861]
[114.86326599 -103.75333405]
[128.00012207 -102.36682129]
[141.01991272 -100.13420868]
[153.86820984 -97.06484222]
[166.49127197 -93.17154694]
[178.83633423 -88.47060394]
[190.85179138 -82.98166656]
[202.48738098 -76.72767639]
[213.69448853 -69.73479462]
[224.42622375 -62.03224945]
[234.63774109 -53.65224838]
[244.28634644 -44.62982941]
[253.33168030 -35.00271225]
[261.73593140 -24.81114769]
[269.46398926 -14.09774971]
[276.48348999 -2.90730858]
[282.76513672 8.71338749]
[296.42135620 2.50798035]
[310.07760620 -3.69742680]
[323.73385620 -9.90283394]
[337.25802612 -16.39099884]
[350.64431763 -23.15911293]
[364.03060913 -29.92722893]
[364.19952393 -45.23180389]
[371.47167969 -58.69932938]
[384.17602539 -67.23506165]
[399.39312744 -68.87755585]
[413.62628174 -63.24937057]
[423.60476685 -51.64383316]
[427.03558350 -36.72780609]
[423.13043213 -21.92888069]
[412.78659058 -10.64774418]
[398.38107300 -5.47671938]
[383.22412109 -7.60406876]
[370.79873657 -16.54094315]
[357.41244507 -9.77282906]
[344.02615356 -3.00471401]
[341.69732666 1.23226893]
[336.65026855 4.01769638]
[329.93927002 3.75340724]
[316.28302002 9.95881462]
[302.62677002 16.16422081]
[288.97052002 22.36962891]
[293.98736572 35.92785645]
[298.03280640 49.80692673]
[301.08660889 63.93733978]
[303.13345337 78.24833679]
[304.16311646 92.66825104]
[304.17044067 107.12487793]
[303.15539551 121.54582977]
[301.12304688 135.85888672]
[298.08355713 149.99238586]
[294.05218506 163.87554932]
[289.04910278 177.43885803]
[283.09933472 190.61439514]
[276.23272705 203.33616638]
[268.48361206 215.54049683]
[259.89083862 227.16625977]
[250.49740601 238.15522766]
[240.35035706 248.45239258]
[229.50050354 258.00619507]
[218.00218201 266.76876831]
[205.91296387 274.69625854]
[193.29338074 281.74896240]
[180.20664978 287.89154053]
[166.71827698 293.09326172]
[152.89581299 297.32806396]
[138.80847168 300.57476807]
[124.52679443 302.81707764]
[110.12229919 304.04379272]
[95.66712189 304.24877930]
[81.23364258 303.43096924]
[66.89413452 301.59448242]
[52.72040176 298.74853516]
[38.78342056 294.90731812]
[25.15298080 290.09014893]
[11.89733791 284.32107544]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[4 26]
[5 25]
[6 24]
[7 23]
[8 22]
[9 21]
[45 58]
[46 57]
[47 56]
[90 116]
[91 115]
[92 114]
[93 113]
[94 110]
[95 109]
[96 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
