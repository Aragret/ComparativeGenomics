%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUAACCAGAUUUCAAAUUUUAUCUUUUGGCGGUAUGCACUUUUAACAGUCACCCCCCAAxxxxxxxxxxCCCUAUCUAGGCCUUCUUACGAGCCAAAACCUGCCCCUACUCCUCCUAGACCUAACCUGACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[97.51728821 220.66392517]
[96.89331055 205.67691040]
[96.26933289 190.68989563]
[95.64535522 175.70288086]
[95.02137756 160.71586609]
[94.39739990 145.72885132]
[93.77342224 130.74183655]
[93.14944458 115.75482178]
[85.55953979 102.81676483]
[72.78218079 94.95933533]
[60.00482559 87.10191345]
[47.22746658 79.24448395]
[34.45010757 71.38706207]
[29.96020699 71.43460083]
[26.09923744 70.14464569]
[23.21798706 67.89070129]
[21.50502968 65.12307739]
[20.97574425 62.30754852]
[8.89575672 53.41519928]
[-3.18423152 44.52285004]
[-15.26422024 35.63050079]
[-26.02778435 45.59519577]
[-38.44302750 53.39840698]
[-52.08199692 58.77294922]
[-66.47489166 61.53533554]
[-81.12622833 61.59202957]
[-95.53193665 58.94260406]
[-109.19667053 53.67971039]
[-121.65084076 45.98584366]
[-132.46676636 36.12700653]
[-141.27336121 24.44351959]
[-147.76885986 11.33826447]
[-151.73114014 -2.73719621]
[-153.02537537 -17.29818726]
[-151.60852051 -31.84360886]
[-147.53088379 -45.87317657]
[-140.93418884 -58.90463257]
[-152.82656860 -68.04636383]
[-164.71894836 -77.18810272]
[-176.61132812 -86.32983398]
[-185.38336182 -89.10527802]
[-188.65339661 -95.78753662]
[-200.35301208 -105.17469788]
[-215.85450745 -103.64445496]
[-227.58586121 -113.33103180]
[-228.94918823 -128.11875916]
[-240.64880371 -137.50592041]
[-249.36122131 -140.46325684]
[-252.49151611 -147.21211243]
[-263.99331665 -156.84063721]
[-275.49511719 -166.46916199]
[-291.21356201 -164.82405090]
[-303.43865967 -174.84016418]
[-304.91748047 -190.57510376]
[-294.77270508 -202.69363403]
[-279.02297974 -204.00601196]
[-267.01239014 -193.73365784]
[-265.86660767 -177.97096252]
[-254.36479187 -168.34243774]
[-242.86299133 -158.71391296]
[-231.26164246 -149.20555115]
[-219.56202698 -139.81838989]
[-204.83029175 -141.69229126]
[-192.83148193 -132.33903503]
[-190.96585083 -116.87432861]
[-179.26623535 -107.48715973]
[-167.46958923 -98.22221375]
[-155.57720947 -89.08048248]
[-143.68482971 -79.93874359]
[-131.79244995 -70.79701233]
[-120.28462219 -80.96958160]
[-107.01699066 -88.71707916]
[-92.49340820 -93.74317932]
[-77.26583099 -95.85498047]
[-61.91335678 -94.97035217]
[-47.02015686 -91.12114716]
[-33.15329742 -84.45207214]
[-20.84112167 -75.21522522]
[-10.55312061 -63.76059341]
[-2.68204045 -50.52274704]
[2.47111845 -36.00440979]
[4.70860958 -20.75732613]
[3.94352722 -5.36130333]
[0.20318225 9.59782696]
[-6.37187004 23.55051041]
[5.70811796 32.44285965]
[17.78810692 41.33520889]
[29.86809540 50.22755814]
[42.30753326 58.60970306]
[55.08489227 66.46712494]
[67.86225128 74.32455444]
[80.63961029 82.18197632]
[93.41696167 90.03940582]
[103.85774994 76.55484009]
[128.09538269 78.16681671]
[143.08807373 77.69877625]
[158.08078003 77.23072815]
[166.14073181 66.39123535]
[178.79400635 62.25326538]
[191.32853699 66.12105560]
[199.21199036 76.36058044]
[214.21118164 76.20454407]
[229.21037292 76.04850769]
[233.50021362 61.55407333]
[241.87315369 48.96895981]
[253.58470154 39.41222763]
[267.59344482 33.73365402]
[282.65377808 32.43817520]
[297.42651367 35.64098358]
[310.59805298 43.05728912]
[320.99722290 54.02763367]
[327.69934082 67.57655334]
[330.10842896 82.49927521]
[328.01031494 97.46888733]
[321.59152222 111.15429688]
[311.42282104 122.33861542]
[298.40838623 130.02732849]
[283.70550537 133.53677368]
[268.62149048 132.55488586]
[254.49763489 127.16897583]
[242.58981323 117.85795593]
[233.95684814 105.44975281]
[229.36640930 91.04769897]
[214.36721802 91.20373535]
[199.36802673 91.35977173]
[188.15835571 103.85781860]
[171.04217529 104.42397308]
[158.54881287 92.22342682]
[143.55612183 92.69146729]
[128.56341553 93.15951538]
[123.45668030 98.65234375]
[136.83840942 105.42948151]
[151.71086121 107.38135529]
[161.49435425 118.75164795]
[161.20562744 133.74887085]
[150.99176025 144.73416138]
[136.05519104 146.11216736]
[124.00388336 137.18098450]
[120.97595215 122.49120331]
[113.24320221 109.63800812]
[108.13645935 115.13084412]
[108.76043701 130.11785889]
[109.38441467 145.10487366]
[110.00839233 160.09188843]
[110.63237000 175.07890320]
[111.25634766 190.06591797]
[111.88032532 205.05293274]
[112.50430298 220.03994751]
[119.20429230 235.61386108]
[106.09376526 246.36329651]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 93]
[10 92]
[11 91]
[12 90]
[13 89]
[18 88]
[19 87]
[20 86]
[21 85]
[37 70]
[38 69]
[39 68]
[40 67]
[42 66]
[43 65]
[46 62]
[47 61]
[49 60]
[50 59]
[51 58]
[95 130]
[96 129]
[97 128]
[101 125]
[102 124]
[103 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
