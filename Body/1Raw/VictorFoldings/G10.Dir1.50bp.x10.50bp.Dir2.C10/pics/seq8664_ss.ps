%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUACUCAUGCACCUAAUUGGAAGCGCCACCCUAGCAAUAUCAACCAUUAACCUUCCCUCxxxxxxxxxxUAUCGGCGAUAUCGGUUUCAUCCUCGCCUUAGCAUGAUUUAUCCUACACUCCAACUCAUGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[158.29240417 459.60714722]
[158.29240417 444.60714722]
[158.29240417 429.60714722]
[158.29240417 414.60714722]
[158.29240417 399.60714722]
[158.29240417 384.60714722]
[158.29240417 369.60714722]
[158.29240417 354.60714722]
[158.29240417 339.60714722]
[158.29240417 324.60714722]
[135.67465210 316.70812988]
[118.18498230 300.28625488]
[108.85255432 278.14843750]
[109.30888367 254.09466553]
[119.50267029 232.26591492]
[137.70390320 216.43112183]
[132.21687317 202.47073364]
[126.72984314 188.51034546]
[121.24281311 174.54994202]
[115.75577545 160.58955383]
[110.26874542 146.62916565]
[95.36385345 147.52087402]
[80.91236115 143.76515198]
[68.32758331 135.72932434]
[58.84028625 124.19927216]
[53.37829590 110.30258942]
[52.47578049 95.39834595]
[56.22100449 80.94412994]
[64.24769592 68.35352325]
[75.77085876 58.85786057]
[70.28382874 44.89747238]
[64.79679871 30.93708229]
[57.88980103 17.62192726]
[43.83645630 10.35459328]
[43.29565811 -4.53019047]
[35.04336929 -17.05615234]
[26.79108047 -29.58211517]
[18.53878975 -42.10807800]
[5.02381802 -35.55059814]
[-9.23147392 -30.81333351]
[-23.98315811 -27.97734451]
[-38.97881317 -27.09115791]
[-53.96184540 -28.16993904]
[-68.67587280 -31.19522667]
[-82.86912537 -36.11525345]
[-96.29872894 -42.84583664]
[-108.73489380 -51.27180099]
[-119.96481323 -61.24897003]
[-129.79632568 -72.60662079]
[-138.06121826 -85.15040588]
[-144.61805725 -98.66569519]
[-149.35464478 -112.92121124]
[-152.18992615 -127.67302704]
[-153.07540894 -142.66873169]
[-151.99591064 -157.65170288]
[-148.96992493 -172.36560059]
[-144.04920959 -186.55860901]
[-137.31799316 -199.98789978]
[-128.89143372 -212.42366028]
[-118.91373444 -223.65310669]
[-107.55561829 -233.48408508]
[-95.01143646 -241.74836731]
[-81.49584198 -248.30456543]
[-67.24009705 -253.04046631]
[-52.48814392 -255.87506104]
[-37.49240112 -256.75982666]
[-22.50947380 -255.67961121]
[-7.79573202 -252.65292358]
[6.39704895 -247.73153687]
[19.82601357 -240.99967957]
[32.26137161 -232.57252502]
[43.49034500 -222.59429932]
[53.32078171 -211.23570251]
[61.58447647 -198.69113159]
[68.14002991 -185.17521667]
[72.87525940 -170.91925049]
[75.70913696 -156.16716003]
[76.59318542 -141.17138672]
[75.51226044 -126.18850708]
[72.48487091 -111.47490692]
[67.56282043 -97.28236389]
[60.83031845 -83.85372162]
[52.40258026 -71.41876221]
[42.42380524 -60.19026566]
[31.06475258 -50.36036682]
[39.31704330 -37.83440399]
[47.56933212 -25.30844116]
[55.82162094 -12.78248024]
[69.28470612 -6.41108751]
[70.41576385 9.36963749]
[71.77822876 -5.56835747]
[80.31433868 -17.90264893]
[93.81455994 -24.44054222]
[108.78439331 -23.48972511]
[121.34894562 -15.29631138]
[128.25592041 -1.98114359]
[127.71746826 13.00918865]
[119.87296295 25.79448318]
[106.75293732 33.06530762]
[91.75346375 32.93962860]
[78.75718689 25.45005035]
[84.24422455 39.41044235]
[89.73125458 53.37083054]
[104.63614655 52.47913361]
[119.08763885 56.23484802]
[131.67240906 64.27067566]
[141.15971375 75.80072784]
[146.62170410 89.69741058]
[147.52421570 104.60165405]
[143.77899170 119.05587006]
[135.75230408 131.64646912]
[124.22914124 141.14213562]
[129.71617126 155.10252380]
[135.20320129 169.06291199]
[140.69023132 183.02330017]
[146.17726135 196.98370361]
[151.66429138 210.94409180]
[159.43220520 209.57189941]
[167.31161499 209.26321411]
[175.15760803 210.02296448]
[182.82604980 211.83645630]
[190.17613220 214.66961670]
[197.07301331 218.46966553]
[203.39025879 223.16612244]
[209.01217651 228.67202759]
[213.83593750 234.88565063]
[217.77345276 241.69230652]
[220.75300598 248.96650696]
[222.72047424 256.57424927]
[223.64042664 264.37545776]
[223.49667358 272.22668457]
[222.29261780 279.98358154]
[220.05111694 287.50369263]
[216.81408691 294.64895630]
[212.64172363 301.28836060]
[207.61132812 307.30020142]
[201.81597900 312.57449341]
[195.36267090 317.01480103]
[188.37049866 320.54010010]
[180.96830750 323.08624268]
[173.29240417 324.60714722]
[173.29240417 339.60714722]
[173.29240417 354.60714722]
[173.29240417 369.60714722]
[173.29240417 384.60714722]
[173.29240417 399.60714722]
[173.29240417 414.60714722]
[173.29240417 429.60714722]
[173.29240417 444.60714722]
[173.29240417 459.60714722]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[16 117]
[17 116]
[18 115]
[19 114]
[20 113]
[21 112]
[30 103]
[31 102]
[32 101]
[33 90]
[35 88]
[36 87]
[37 86]
[38 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
