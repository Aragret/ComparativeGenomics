%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUCCACCCUCCUCUCCCUAGGAGGCCUGCCCCCGCUAACCGGCUUUUUGCCCAAAUGGGCxxxxxxxxxxACCCAAUCCACAUCAAAACCCCCUCCCCAUGCUUACAAGCAAGUACAGCAAUCAACCCUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[229.10112000 190.79710388]
[217.59930420 181.16857910]
[206.09750366 171.54003906]
[194.59570312 161.91151428]
[183.09390259 152.28298950]
[171.59210205 142.65446472]
[160.09028625 133.02593994]
[148.58848572 123.39741516]
[137.08668518 113.76889038]
[125.58488464 104.14036560]
[122.40495300 117.47802734]
[112.21654510 128.39781189]
[96.80440521 133.25906372]
[79.78762817 129.68193054]
[66.54504395 136.72706604]
[57.19476700 152.55590820]
[39.71567535 151.33883667]
[26.62252045 158.65794373]
[13.52936554 165.97705078]
[0.43621156 173.29615784]
[-12.65694332 180.61524963]
[-25.75009727 187.93435669]
[-29.81017685 203.20823669]
[-43.52307510 211.06521606]
[-58.75317001 206.84387207]
[-66.46472168 193.04867554]
[-62.08259964 177.86405945]
[-48.20663834 170.29878235]
[-33.06920242 174.84120178]
[-19.97604942 167.52210999]
[-6.88289404 160.20300293]
[6.21026039 152.88389587]
[19.30341530 145.56478882]
[32.39656830 138.24568176]
[36.01265717 126.65985870]
[46.91595840 120.46817017]
[59.49990463 123.48447418]
[72.74249268 116.43933868]
[72.35256958 108.94948578]
[58.98981857 102.13501740]
[71.57272339 93.96977234]
[71.18280029 86.47991180]
[57.28024673 80.84795380]
[43.37768936 75.21599579]
[28.10305023 80.12160492]
[14.82443810 71.11837769]
[13.72806740 55.11283493]
[25.65498161 44.38304901]
[41.45587158 47.15999603]
[49.00964737 61.31344223]
[62.91220093 66.94539642]
[76.81475830 72.57735443]
[91.14710236 68.64636230]
[104.41360474 71.08630371]
[114.16338348 78.29452515]
[114.78735352 63.30751038]
[115.41133118 48.32049561]
[116.03530884 33.33348083]
[116.65928650 18.34646416]
[101.29216766 11.52015877]
[89.73076630 -0.63926655]
[83.71377563 -16.26255035]
[84.13052368 -32.96265793]
[90.88961029 -48.19948578]
[102.93710327 -59.66620255]
[118.42074585 -65.63851166]
[118.42074585 -80.63851166]
[118.42074585 -95.63851166]
[118.42074585 -110.63851166]
[104.64688110 -117.21447754]
[95.09695435 -129.12084961]
[91.66711426 -143.99360657]
[95.03836060 -158.87976074]
[104.54132080 -170.82363892]
[118.28919220 -177.45379639]
[133.55230713 -177.45379639]
[147.30017090 -170.82363892]
[156.80314636 -158.87976074]
[160.17437744 -143.99360657]
[156.74453735 -129.12084961]
[147.19461060 -117.21447754]
[133.42074585 -110.63851166]
[133.42074585 -95.63851166]
[133.42074585 -80.63851166]
[133.42074585 -65.63851166]
[146.03077698 -61.32947159]
[156.70697021 -53.31641769]
[164.39300537 -42.37449265]
[168.32295227 -29.56948471]
[168.09757996 -16.15401459]
[163.72486877 -3.44500804]
[155.62059021 7.30558300]
[144.56887817 15.03410721]
[131.64630127 18.97044182]
[131.02232361 33.95745850]
[130.39834595 48.94447327]
[129.77436829 63.93148804]
[129.15039062 78.91850281]
[135.21340942 92.63855743]
[146.71520996 102.26708221]
[158.21701050 111.89561462]
[169.71882629 121.52413940]
[181.22062683 131.15266418]
[192.72242737 140.78118896]
[204.22422791 150.40971375]
[215.72602844 160.03823853]
[227.22782898 169.66676331]
[238.72964478 179.29528809]
[247.76010132 180.78742981]
[253.12287903 186.95259094]
[267.53509521 191.11047363]
[281.94732666 195.26835632]
[296.35952759 199.42625427]
[310.81420898 203.43399048]
[325.30981445 207.29115295]
[339.80541992 211.14830017]
[353.35119629 203.00660706]
[368.66613770 206.90887451]
[376.66418457 220.53997803]
[372.60018921 235.81282043]
[358.88528442 243.66629028]
[343.65628052 239.44107056]
[335.94824219 225.64390564]
[321.45266724 221.78674316]
[306.95706177 217.92958069]
[299.63705444 219.25752258]
[292.20162964 213.83847046]
[277.78942871 209.68057251]
[263.37719727 205.52268982]
[248.96499634 201.36480713]
[259.15637207 212.37095642]
[266.07873535 225.67814636]
[269.24032593 240.34117126]
[268.41662598 255.31854248]
[263.66613770 269.54641724]
[255.32629395 282.01425171]
[243.98942566 291.83645630]
[230.46080017 298.31536865]
[215.70132446 300.99078369]
[200.75935364 299.67269897]
[186.69618225 294.45474243]
[174.51069641 285.70751953]
[165.06842041 274.05230713]
[159.04002380 260.31701660]
[156.85369873 245.47720337]
[158.66471863 230.58694458]
[164.34446716 216.70384216]
[173.48951721 204.81401062]
[185.45031738 195.76196289]
[199.37728882 190.19065857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 108]
[2 107]
[3 106]
[4 105]
[5 104]
[6 103]
[7 102]
[8 101]
[9 100]
[10 99]
[14 38]
[15 37]
[17 34]
[18 33]
[19 32]
[20 31]
[21 30]
[22 29]
[42 52]
[43 51]
[44 50]
[55 98]
[56 97]
[57 96]
[58 95]
[59 94]
[66 85]
[67 84]
[68 83]
[69 82]
[110 130]
[111 129]
[112 128]
[113 127]
[114 125]
[115 124]
[116 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
