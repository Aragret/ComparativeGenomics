%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUCCUCCUAGACCUAACCUGACUAGAAAAGCUAUUACCUAAAACAAUUUCACAGCACCAAxxxxxxxxxxGAUCCGUCCCUAACAAACUAGGAGGCGUCCUUGCCCUAUUACUAUCCAUCCUCAUCCUAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[118.05030823 241.92935181]
[117.42633057 226.94233704]
[116.80235291 211.95530701]
[116.17837524 196.96829224]
[115.55439758 181.98127747]
[114.93041992 166.99426270]
[114.30644226 152.00724792]
[113.68246460 137.02023315]
[108.48705292 122.94871521]
[99.22209930 111.15207672]
[89.83493805 99.45245361]
[75.10293579 93.68368530]
[73.01943970 78.93552399]
[63.51108170 67.33418274]
[54.00272369 55.73283768]
[44.49436569 44.13149643]
[34.98600769 32.53015518]
[25.47764969 20.92881584]
[15.96929073 9.32747364]
[6.46093273 -2.27386713]
[-5.86557007 6.28752422]
[-18.83331490 13.84250164]
[-32.36031342 20.34329987]
[-46.36104584 25.74881935]
[-60.74698639 30.02488136]
[-75.42719269 33.14445496]
[-90.30883789 35.08781052]
[-105.29784393 35.84267044]
[-120.29943848 35.40425110]
[-135.21878052 33.77533722]
[-149.96153259 30.96621513]
[-164.43450928 26.99465179]
[-178.54617310 21.88575745]
[-192.20733643 15.67183018]
[-205.33160400 8.39215851]
[-217.83601379 0.09276655]
[-229.64149475 -9.17387295]
[-240.67341614 -19.34917259]
[-250.86203003 -30.36880112]
[-260.14291382 -42.16308594]
[-268.45742798 -54.65746307]
[-275.75292969 -67.77293396]
[-281.98333740 -81.42657471]
[-287.10928345 -95.53206635]
[-291.09832764 -110.00022125]
[-293.92523193 -124.73957825]
[-295.57217407 -139.65693665]
[-296.02871704 -154.65800476]
[-295.29196167 -169.64790344]
[-293.36657715 -184.53189087]
[-290.26473999 -199.21585083]
[-286.00604248 -213.60694885]
[-280.61743164 -227.61419678]
[-274.13299561 -241.14903259]
[-266.59365845 -254.12590027]
[-258.04718018 -266.46273804]
[-248.54751587 -278.08154297]
[-238.15476990 -288.90884399]
[-226.93464661 -298.87625122]
[-214.95806885 -307.92068481]
[-202.30076599 -315.98495483]
[-189.04277039 -323.01812744]
[-175.26788330 -328.97570801]
[-161.06321716 -333.82003784]
[-146.51856995 -337.52047729]
[-131.72589111 -340.05361938]
[-116.77871704 -341.40347290]
[-101.77154541 -341.56149292]
[-86.79926300 -340.52670288]
[-71.95652771 -338.30560303]
[-57.33717728 -334.91229248]
[-43.03364563 -330.36816406]
[-29.13636208 -324.70196533]
[-15.73319626 -317.94955444]
[-2.90888381 -310.15359497]
[9.25549316 -301.36337280]
[20.68302536 -291.63446045]
[31.30146599 -281.02838135]
[41.04367828 -269.61218262]
[49.84807205 -257.45806885]
[57.65897751 -244.64285278]
[64.42700958 -231.24755859]
[70.10939026 -217.35688782]
[74.67017365 -203.05865479]
[78.08054352 -188.44326782]
[80.31892395 -173.60313416]
[81.37117767 -158.63206482]
[81.23063660 -143.62472534]
[79.89819336 -128.67599487]
[77.38227844 -113.88037109]
[73.69879150 -99.33142090]
[68.87103271 -85.12111664]
[62.92950821 -71.33930206]
[55.91179276 -58.07311249]
[47.86225510 -45.40642166]
[38.83178711 -33.41931534]
[28.87748146 -22.18757820]
[18.06227303 -11.78222561]
[27.57063293 -0.18088444]
[37.07899094 11.42045689]
[46.58734894 23.02179718]
[56.09570694 34.62313843]
[65.60406494 46.22447968]
[75.11242676 57.82582092]
[84.62078094 69.42716217]
[98.67268372 74.36611938]
[101.43627930 89.94409180]
[108.62267303 93.71765900]
[111.01873779 101.88712311]
[120.28369141 113.68376160]
[118.76345825 98.76100159]
[120.12818909 83.82321167]
[124.32740784 69.42298126]
[131.20576477 56.09300613]
[140.50880432 44.32639313]
[151.89241028 34.55840683]
[164.93547058 27.15039635]
[179.15548706 22.37639427]
[194.02644348 20.41300201]
[208.99821472 21.33285141]
[223.51696777 25.10191536]
[237.04560852 31.58076668]
[249.08370972 40.52973938]
[259.18594360 51.61779022]
[266.97860718 64.43474579]
[272.17343140 78.50648499]
[274.57824707 93.31246185]
[274.10409546 108.30496979]
[270.76852417 122.92939758]
[264.69488525 136.64476013]
[256.10791016 148.94369507]
[245.32524109 159.37124634]
[232.74571228 167.54165649]
[218.83470154 173.15269470]
[204.10681152 175.99681091]
[189.10684204 175.96878052]
[174.38966370 173.06962585]
[160.49972534 167.40661621]
[147.95083618 159.18923950]
[137.20721436 148.72146606]
[128.66947937 136.39625549]
[129.29345703 151.38327026]
[129.91743469 166.37028503]
[130.54141235 181.35729980]
[131.16539001 196.34431458]
[131.78936768 211.33132935]
[132.41334534 226.31835938]
[133.03732300 241.30537415]
[139.73731995 256.87927246]
[126.62678528 267.62872314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 110]
[10 109]
[11 107]
[13 105]
[14 104]
[15 103]
[16 102]
[17 101]
[18 100]
[19 99]
[20 98]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
