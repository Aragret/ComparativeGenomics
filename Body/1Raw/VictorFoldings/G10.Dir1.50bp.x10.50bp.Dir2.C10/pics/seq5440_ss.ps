%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUACUAUCUCGCACCUGAAACAAGCUAACAUGACUAACACCCUUAAUUCCAUCCACCCUCCxxxxxxxxxxAUUAUCAGUCUCUUCCCCACAACAAUAUUCAUGUGCCUAGACCAAGAAGUUAUUAUCUCGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[120.62254333 381.76696777]
[120.62254333 366.76696777]
[120.62254333 351.76696777]
[120.62254333 336.76696777]
[120.62254333 321.76696777]
[120.62254333 306.76696777]
[120.62254333 291.76696777]
[120.62254333 276.76696777]
[120.62254333 261.76696777]
[120.62254333 246.76696777]
[99.25220490 238.93891907]
[83.03854370 222.91471863]
[74.93356323 201.56852722]
[76.43090820 178.74743652]
[87.29068756 158.57800293]
[105.57730103 144.72010803]
[101.26971436 130.35192871]
[96.96212769 115.98373413]
[84.46488190 104.83412170]
[88.42922974 88.56208801]
[83.82366943 74.28662872]
[79.21810150 60.01116562]
[74.61254120 45.73570633]
[63.01179886 34.97776031]
[66.46761322 20.48960686]
[61.86204910 6.21414566]
[57.25648499 -8.06131458]
[52.65092087 -22.33677483]
[38.05415726 -18.84925270]
[23.23103142 -16.50336266]
[8.27068806 -15.31321335]
[-6.73689604 -15.28596401]
[-21.70146179 -16.42177773]
[-36.53301239 -18.71382332]
[-51.14234161 -22.14831734]
[-65.44159698 -26.70460129]
[-79.34476471 -32.35527420]
[-92.76824188 -39.06635666]
[-105.63129425 -46.79747772]
[-117.85655212 -55.50214767]
[-129.37049866 -65.12801361]
[-140.10389709 -75.61717987]
[-149.99217224 -86.90657043]
[-158.97586060 -98.92828369]
[-167.00094604 -111.61001587]
[-174.01914978 -124.87549591]
[-179.98828125 -138.64495850]
[-184.87240601 -152.83557129]
[-188.64219666 -167.36199951]
[-191.27493286 -182.13687134]
[-192.75482178 -197.07133484]
[-193.07293701 -212.07557678]
[-192.22737122 -227.05934143]
[-190.22322083 -241.93252563]
[-187.07252502 -256.60568237]
[-182.79423523 -270.99057007]
[-177.41409302 -285.00064087]
[-170.96443176 -298.55166626]
[-163.48406982 -311.56213379]
[-155.01797485 -323.95382690]
[-145.61708069 -335.65216064]
[-135.33792114 -346.58685303]
[-124.24230194 -356.69207764]
[-112.39696503 -365.90707397]
[-99.87315369 -374.17645264]
[-86.74618530 -381.45043945]
[-73.09500885 -387.68530273]
[-59.00172043 -392.84356689]
[-44.55108643 -396.89416504]
[-29.83001137 -399.81280518]
[-14.92703438 -401.58184814]
[0.06821829 -402.19070435]
[15.06556129 -401.63571167]
[29.97479820 -399.92019653]
[44.70626068 -397.05450439]
[59.17135239 -393.05581665]
[73.28307343 -387.94821167]
[86.95655823 -381.76242065]
[100.10957336 -374.53561401]
[112.66300964 -366.31127930]
[124.54136658 -357.13888550]
[135.67321777 -347.07357788]
[145.99159241 -336.17590332]
[155.43444824 -324.51141357]
[163.94499207 -312.15020752]
[171.47204590 -299.16668701]
[177.97033691 -285.63891602]
[183.40077209 -271.64825439]
[187.73069763 -257.27883911]
[190.93408203 -242.61711121]
[192.99165344 -227.75122070]
[193.89103699 -212.77058411]
[193.62681580 -197.76528931]
[192.20059204 -182.82560730]
[189.62092590 -168.04136658]
[185.90336609 -153.50149536]
[181.07023621 -139.29342651]
[175.15060425 -125.50262451]
[168.18009949 -112.21201324]
[160.20062256 -99.50153351]
[151.26016235 -87.44763184]
[141.41250610 -76.12279510]
[130.71685791 -65.59513855]
[119.23756409 -55.92797852]
[107.04364777 -47.17945099]
[94.20845032 -39.40217209]
[80.80916595 -32.64291763]
[66.92638397 -26.94234085]
[71.53194427 -12.66687965]
[76.13751221 1.60858107]
[80.74307251 15.88404179]
[92.01439667 25.62091064]
[88.88800049 41.13014221]
[93.49356079 55.40560150]
[98.09912872 69.68106079]
[102.70468903 83.95652008]
[112.76232147 89.90882874]
[116.23477173 101.06803894]
[111.33031464 111.67615509]
[115.63789368 126.04433441]
[119.94548035 140.41252136]
[128.42883301 139.81701660]
[136.89636230 140.56036377]
[145.13819885 142.62284851]
[152.95025635 145.95205688]
[160.13928223 150.46423340]
[166.52766418 156.04638672]
[171.95783997 162.55908203]
[176.29609680 169.83998108]
[179.43598938 177.70785522]
[181.30082703 185.96708679]
[181.84562683 194.41256714]
[181.05816650 202.83473206]
[178.95927429 211.02485657]
[175.60223389 218.78010559]
[171.07150269 225.90869141]
[165.48054504 232.23449707]
[158.96899414 237.60148621]
[151.69914246 241.87756348]
[143.85197449 244.95777893]
[135.62254333 246.76696777]
[135.62254333 261.76696777]
[135.62254333 276.76696777]
[135.62254333 291.76696777]
[135.62254333 306.76696777]
[135.62254333 321.76696777]
[135.62254333 336.76696777]
[135.62254333 351.76696777]
[135.62254333 366.76696777]
[135.62254333 381.76696777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[16 121]
[17 120]
[18 119]
[20 116]
[21 115]
[22 114]
[23 113]
[25 111]
[26 110]
[27 109]
[28 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
