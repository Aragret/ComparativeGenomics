%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUCACCAAAGCCCAUAAAAAUAAAAAAUUAUAACAAACCCUGAGAACCAAAAUGAACGAAxxxxxxxxxxACUCCUAAACACAUCCGUAUUACUCGCAUCAGGAGUAUCAAUCACCUGAGCUCACCAUAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 242.59922791]
[92.50000000 227.59922791]
[92.50000000 212.59922791]
[92.50000000 197.59922791]
[92.50000000 182.59922791]
[92.50000000 167.59922791]
[92.50000000 152.59922791]
[92.50000000 137.59922791]
[92.50000000 122.59922028]
[92.50000000 107.59922028]
[90.94242096 92.68031311]
[87.84410095 78.00378418]
[84.74577332 63.32725906]
[81.64745331 48.65073395]
[66.81876373 50.93653870]
[51.88667679 52.40199280]
[36.89653015 53.04264450]
[21.89385605 52.85654831]
[6.92421389 51.84426880]
[-7.96693230 50.00888062]
[-22.73435974 47.35595703]
[-37.33321762 43.89355469]
[-51.71916962 39.63219070]
[-65.84853363 34.58480835]
[-79.67838287 28.76672935]
[-93.16673279 22.19563103]
[-106.27261353 14.89146519]
[-118.95621490 6.87641525]
[-131.17903137 -1.82517672]
[-142.90393066 -11.18688393]
[-154.09530640 -21.18027687]
[-164.71919250 -31.77500343]
[-174.74328613 -42.93888855]
[-184.13716125 -54.63802719]
[-192.87229919 -66.83689117]
[-200.92216492 -79.49842834]
[-208.26231384 -92.58419037]
[-214.87043762 -106.05443573]
[-220.72648621 -119.86825562]
[-225.81266785 -133.98370361]
[-230.11354065 -148.35789490]
[-233.61602783 -162.94718933]
[-236.30950928 -177.70726013]
[-238.18580627 -192.59330750]
[-239.23919678 -207.56011963]
[-239.46650696 -222.56222534]
[-238.86703491 -237.55407715]
[-237.44261169 -252.49012756]
[-235.19755554 -267.32504272]
[-232.13867188 -282.01376343]
[-228.27528381 -296.51165771]
[-223.61907959 -310.77471924]
[-218.18424988 -324.75961304]
[-211.98725891 -338.42385864]
[-205.04693604 -351.72601318]
[-197.38438416 -364.62561035]
[-189.02284241 -377.08352661]
[-179.98771667 -389.06192017]
[-170.30644226 -400.52438354]
[-160.00843811 -411.43609619]
[-149.12496948 -421.76397705]
[-137.68907166 -431.47659302]
[-125.73550415 -440.54452515]
[-113.30055237 -448.94015503]
[-100.42198181 -456.63803101]
[-87.13891602 -463.61477661]
[-73.49167633 -469.84918213]
[-59.52172470 -475.32232666]
[-45.27148056 -480.01757812]
[-30.78422356 -483.92071533]
[-16.10395241 -487.01980591]
[-1.27524793 -489.30551147]
[13.65685272 -490.77087402]
[28.64700317 -491.41140747]
[43.64967728 -491.22521973]
[58.61931229 -490.21282959]
[73.51044464 -488.37731934]
[88.27785492 -485.72430420]
[102.87668610 -482.26181030]
[117.26261139 -478.00033569]
[131.39193726 -472.95285034]
[145.22174072 -467.13467407]
[158.71005249 -460.56347656]
[171.81587219 -453.25921631]
[184.49942017 -445.24407959]
[196.72218323 -436.54241943]
[208.44702148 -427.18060303]
[219.63832092 -417.18713379]
[230.26211548 -406.59234619]
[240.28614807 -395.42837524]
[249.67994690 -383.72918701]
[258.41500854 -371.53027344]
[266.46478271 -358.86865234]
[273.80480957 -345.78283691]
[280.41284180 -332.31256104]
[286.26879883 -318.49868774]
[291.35488892 -304.38320923]
[295.65563965 -290.00900269]
[299.15805054 -275.41967773]
[301.85140991 -260.65957642]
[303.72760010 -245.77351379]
[304.78091431 -230.80670166]
[305.00811768 -215.80459595]
[304.40853882 -200.81275940]
[302.98400879 -185.87670898]
[300.73883057 -171.04180908]
[297.67984009 -156.35311890]
[293.81634521 -141.85525513]
[289.16006470 -127.59222412]
[283.72512817 -113.60736847]
[277.52804565 -99.94314575]
[270.58761597 -86.64105225]
[262.92495728 -73.74149323]
[254.56333923 -61.28364182]
[245.52813721 -49.30533218]
[235.84678650 -37.84294128]
[225.54870605 -26.93127823]
[214.66516113 -16.60348701]
[203.22920227 -6.89092922]
[191.27557373 2.17689753]
[178.84056091 10.57245445]
[165.96192932 18.27024460]
[152.67881775 25.24688911]
[139.03152466 31.48119926]
[125.06153870 36.95424652]
[110.81126404 41.64940262]
[96.32398224 45.55241394]
[99.42230225 60.22893906]
[102.52062225 74.90546417]
[105.61894226 89.58198547]
[112.35132599 76.17769623]
[124.80773926 67.82079315]
[139.76387024 66.67443085]
[153.34837341 73.03534698]
[162.04493713 85.25703430]
[163.60249329 100.17594910]
[157.61787415 113.93037415]
[145.64015198 122.96002197]
[130.76976013 124.92758942]
[116.85583496 119.32378387]
[107.50000000 107.59922028]
[107.50000000 122.59922028]
[107.50000000 137.59922791]
[107.50000000 152.59922791]
[107.50000000 167.59922791]
[107.50000000 182.59922791]
[107.50000000 197.59922791]
[107.50000000 212.59922791]
[107.50000000 227.59922791]
[107.50000000 242.59922791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 130]
[12 129]
[13 128]
[14 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
