%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUCCAACUCAUGAGACCCACAACAAAUAGCCCUUCUAAACGCUAAUCCAAGCCUCACCCCxxxxxxxxxxACAUCUCCGCAUGAUGAAACUUCGGCUCACUCCUUGGCGCCUGCCUGAUCCUCCAAAUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[118.98519897 260.89443970]
[118.36122131 245.90740967]
[117.73724365 230.92039490]
[117.11326599 215.93338013]
[116.48928833 200.94636536]
[115.86531067 185.95935059]
[115.24133301 170.97233582]
[114.61735535 155.98532104]
[111.06259918 141.41261292]
[104.71546936 127.82166290]
[98.36833954 114.23070526]
[87.02159882 106.06106567]
[88.04071045 92.11641693]
[81.69358063 78.52546692]
[75.34645081 64.93451691]
[68.99932098 51.34356689]
[53.77065659 49.91703415]
[41.38249588 41.11758804]
[35.10384750 27.39006233]
[36.52985382 12.46282387]
[45.17786789 0.33527273]
[38.83073807 -13.25567818]
[32.48360825 -26.84662819]
[26.13647652 -40.43758011]
[19.62773514 -46.94051361]
[19.80196762 -54.37793732]
[13.73895454 -68.09799194]
[-0.43212360 -63.15563583]
[-14.95494556 -59.36961365]
[-29.73532486 -56.76448059]
[-44.67740250 -55.35712814]
[-59.68427277 -55.15668488]
[-74.65860748 -56.16445541]
[-89.50329590 -58.37389374]
[-104.12205505 -61.77067947]
[-118.42008209 -66.33277893]
[-132.30464172 -72.03060913]
[-145.68569946 -78.82720947]
[-158.47645569 -86.67851257]
[-170.59396362 -95.53358459]
[-181.95962524 -105.33500671]
[-192.49975586 -116.01920319]
[-202.14596558 -127.51689148]
[-210.83572388 -139.75349426]
[-218.51264954 -152.64965820]
[-225.12696838 -166.12174988]
[-230.63577271 -180.08238220]
[-235.00334167 -194.44102478]
[-238.20135498 -209.10455322]
[-240.20906067 -223.97787476]
[-241.01344299 -238.96450806]
[-240.60929871 -253.96726990]
[-238.99922180 -268.88885498]
[-236.19366455 -283.63250732]
[-232.21083069 -298.10260010]
[-227.07655334 -312.20529175]
[-220.82411194 -325.84909058]
[-213.49407959 -338.94552612]
[-205.13397217 -351.40966797]
[-195.79801941 -363.16067505]
[-185.54678345 -374.12237549]
[-174.44671631 -384.22360229]
[-162.56983948 -393.39889526]
[-149.99316406 -401.58874512]
[-136.79826355 -408.74002075]
[-123.07070160 -414.80636597]
[-108.89951324 -419.74838257]
[-94.37660980 -423.53408813]
[-79.59616852 -426.13891602]
[-64.65406036 -427.54592896]
[-49.64718628 -427.74603271]
[-34.67287445 -426.73794556]
[-19.82823753 -424.52816772]
[-5.20955086 -421.13107300]
[9.08837509 -416.56863403]
[22.97281075 -410.87051392]
[36.35371399 -404.07360840]
[49.14429474 -396.22204590]
[61.26160812 -387.36669922]
[72.62705994 -377.56503296]
[83.16695404 -366.88058472]
[92.81291199 -355.38269043]
[101.50239563 -343.14590454]
[109.17903900 -330.24957275]
[115.79306030 -316.77731323]
[121.30155945 -302.81655884]
[125.66881561 -288.45782471]
[128.86650085 -273.79421997]
[130.87388611 -258.92086792]
[131.67793274 -243.93421936]
[131.27345276 -228.93145752]
[129.66305542 -214.00990295]
[126.85717010 -199.26631165]
[122.87402344 -184.79632568]
[117.73942566 -170.69375610]
[111.48668671 -157.05009460]
[104.15636444 -143.95381165]
[95.79598236 -131.48985291]
[86.45977783 -119.73903656]
[76.20829010 -108.77758789]
[65.10800934 -98.67658997]
[53.23093033 -89.50155640]
[40.65407181 -81.31198883]
[27.45900726 -74.16100311]
[33.52202225 -60.44095230]
[39.72742844 -46.78470993]
[46.07455826 -33.19375992]
[52.42168808 -19.60280800]
[58.76881790 -6.01185656]
[73.61923981 -4.85834169]
[85.98060608 3.63003373]
[92.47641754 17.25614357]
[91.27173615 32.40360260]
[82.59027100 44.99643707]
[88.93740082 58.58739090]
[95.28453064 72.17833710]
[101.63166046 85.76929474]
[112.97840118 93.93893433]
[111.95928955 107.88358307]
[118.30641937 121.47453308]
[124.65354919 135.06547546]
[126.34107208 120.16070557]
[132.27035522 106.38233185]
[141.93380737 94.90985107]
[154.50418091 86.72537994]
[168.90539551 82.52954102]
[183.90461731 82.68153381]
[198.21784973 87.16833496]
[210.61979675 95.60585785]
[220.04878235 107.27180481]
[225.69763184 121.16751099]
[227.08277893 136.10340881]
[224.08564758 150.80093384]
[216.96279907 164.00189209]
[206.32400513 174.57620239]
[193.07998657 181.61863708]
[178.36450195 184.52635193]
[163.43730164 183.05041504]
[149.57620239 177.31718445]
[137.96780396 167.81744385]
[129.60437012 155.36134338]
[130.22834778 170.34835815]
[130.85232544 185.33537292]
[131.47630310 200.32238770]
[132.10028076 215.30940247]
[132.72425842 230.29641724]
[133.34823608 245.28343201]
[133.97221375 260.27044678]
[140.67221069 275.84436035]
[127.56167603 286.59378052]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 121]
[10 120]
[11 119]
[13 117]
[14 116]
[15 115]
[16 114]
[21 109]
[22 108]
[23 107]
[24 106]
[26 105]
[27 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
