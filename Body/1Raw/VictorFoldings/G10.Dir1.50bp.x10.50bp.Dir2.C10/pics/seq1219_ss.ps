%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACCCCCUCCCCAAUAAAGCUAAAACUCACCUGAGUUGUAAAAAACUCCAGUUGACACAAAxxxxxxxxxxGAAGGAAUAAUACUAUCGCUGUUCAUUAUAGCUACUCUCAUAACCCUCAACACCCACUCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[11.36993217 289.99267578]
[4.54635715 303.35076904]
[-2.27721810 316.70886230]
[-9.10079384 330.06695557]
[-15.78686905 343.49441528]
[-22.33473969 356.98980713]
[-28.88261032 370.48516846]
[-35.43048096 383.98056030]
[-41.97835159 397.47595215]
[-43.45267868 414.36566162]
[-60.09047699 417.62451172]
[-67.82775116 402.53903198]
[-55.47373581 390.92807007]
[-48.92586517 377.43267822]
[-42.37799454 363.93731689]
[-35.83012390 350.44192505]
[-29.28225327 336.94653320]
[-29.19141579 329.50988770]
[-22.45889282 323.24337769]
[-15.63531780 309.88528442]
[-8.81174183 296.52719116]
[-1.98816681 283.16909790]
[-20.34443092 271.66744995]
[-37.41588974 258.33309937]
[-53.02029037 243.30838013]
[-66.99103546 226.75367737]
[-79.17897034 208.84574890]
[-89.45397949 189.77577209]
[-97.70636749 169.74734497]
[-103.84803009 148.97430420]
[-107.81339264 127.67839050]
[-109.56013489 106.08699036]
[-109.06959534 84.43060303]
[-106.34700775 62.94043350]
[-101.42145538 41.84591675]
[-94.34551239 21.37225533]
[-85.19472504 1.73803031]
[-98.18510437 -5.76196957]
[-111.17548370 -13.26196957]
[-126.99543762 -13.46135712]
[-134.14892578 -26.52569199]
[-147.13931274 -34.02569199]
[-160.12968445 -41.52569199]
[-173.19638062 -48.89192963]
[-186.33801270 -56.12363434]
[-199.47964478 -63.35533524]
[-212.62127686 -70.58703613]
[-227.72811890 -65.94386292]
[-241.65417480 -73.41650391]
[-246.13737488 -88.57158661]
[-238.51791382 -102.41786194]
[-223.31628418 -106.74058533]
[-209.55133057 -98.97515869]
[-205.38957214 -83.72866821]
[-192.24794006 -76.49697113]
[-179.10630798 -69.26526642]
[-165.96467590 -62.03356171]
[-158.54248047 -61.56126404]
[-152.62968445 -54.51607132]
[-139.63931274 -47.01607132]
[-126.64892578 -39.51607132]
[-111.75813293 -39.85313416]
[-103.67548370 -26.25234985]
[-90.68510437 -18.75234985]
[-77.69472504 -11.25235081]
[-70.17568207 -22.44483757]
[-61.95271301 -33.13083649]
[-53.05983353 -43.26614380]
[-43.53382874 -52.80883408]
[-33.41410446 -61.71944046]
[-22.74251556 -69.96109772]
[-11.56320667 -77.49972534]
[0.07757806 -84.30412292]
[12.13168812 -90.34616089]
[24.54926109 -95.60083771]
[37.27893448 -100.04641724]
[50.26805115 -103.66451263]
[63.46287918 -106.44016266]
[76.80884552 -108.36187744]
[90.25074005 -109.42170715]
[103.73295593 -109.61528015]
[117.19973755 -108.94178772]
[130.59536743 -107.40400696]
[143.86445618 -105.00831604]
[156.95208740 -101.76461792]
[169.80413818 -97.68632507]
[182.36744690 -92.79031372]
[194.59005737 -87.09682465]
[206.42138672 -80.62942505]
[217.81251526 -73.41485596]
[228.71630859 -65.48296356]
[239.08767700 -56.86656189]
[248.88371277 -47.60128403]
[258.06390381 -37.72546005]
[266.59027100 -27.27993774]
[274.42755127 -16.30792999]
[281.54330444 -4.85481787]
[287.90811157 7.03202105]
[293.49563599 19.30341911]
[307.53762817 14.02867699]
[321.57958984 8.75393581]
[335.62158203 3.47919416]
[349.66354370 -1.79554725]
[357.57662964 -15.75127983]
[373.44335938 -18.12342262]
[385.09210205 -7.09226894]
[383.58694458 8.88002300]
[370.08255005 17.54087830]
[354.93829346 12.24642944]
[340.89630127 17.52117157]
[326.85433960 22.79591179]
[312.81234741 28.07065392]
[298.77038574 33.34539413]
[302.23651123 44.74699402]
[305.04922485 56.32711411]
[307.19940186 68.04833984]
[308.68011475 79.87280273]
[309.48660278 91.76229858]
[309.61624146 103.67840576]
[309.06860352 115.58263397]
[307.84545898 127.43650818]
[305.95077515 139.20173645]
[303.39065552 150.84031677]
[300.17340088 162.31462097]
[296.30935669 173.58758545]
[291.81106567 184.62278748]
[286.69302368 195.38456726]
[280.97177124 205.83818054]
[274.66580200 215.94981384]
[267.79547119 225.68681335]
[260.38302612 235.01773071]
[252.45236206 243.91239929]
[244.02912903 252.34208679]
[235.14053345 260.27954102]
[225.81530762 267.69915771]
[216.08357239 274.57693481]
[205.97676086 280.89065552]
[195.52755737 286.61990356]
[184.76968384 291.74618530]
[173.73793030 296.25292969]
[162.46792603 300.12561035]
[150.99609375 303.35165405]
[139.35948181 305.92068481]
[127.59571075 307.82440186]
[115.74277496 309.05661011]
[103.83897400 309.61337280]
[91.92276764 309.49285889]
[80.03265381 308.69549561]
[68.20706177 307.22381592]
[56.48419189 305.08261108]
[44.90192032 302.27877808]
[33.49767303 298.82138062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[4 19]
[5 17]
[6 16]
[7 15]
[8 14]
[9 13]
[37 65]
[38 64]
[39 63]
[41 61]
[42 60]
[43 59]
[44 57]
[45 56]
[46 55]
[47 54]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
