%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUAGCAGGUGUCUCCUCUAUCUUAGGGGCCAUCAAUUUCAUCACAACAAUUAUCAAUAUxxxxxxxxxxAUCGCUACCUCCCUGACAAGCGCCUAUAGCACUCGAAUAAUUCUUCUCACCCUAACAGGUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[126.10109711 271.48797607]
[125.78903961 256.49121094]
[125.47698975 241.49446106]
[125.16493225 226.49769592]
[124.85287476 211.50094604]
[124.54081726 196.50419617]
[124.22875977 181.50744629]
[123.91670227 166.51069641]
[123.60465240 151.51393127]
[118.70310211 137.33737183]
[109.68556976 125.35054779]
[96.62113953 126.92663574]
[84.35118103 122.17148590]
[72.65155792 131.55863953]
[60.95193100 140.94580078]
[56.17671204 148.81022644]
[48.90986252 150.40351868]
[37.01748276 159.54524231]
[25.12510300 168.68698120]
[21.62749481 184.34413147]
[7.14298534 191.24185181]
[-7.21714878 184.08880615]
[-10.43704128 168.37219238]
[-0.04666621 156.14845276]
[15.98336983 156.79460144]
[27.87574959 147.65286255]
[39.76812744 138.51113892]
[51.56476974 129.24618530]
[63.26439285 119.85902405]
[74.96401978 110.47186279]
[72.87577820 100.85842133]
[74.35195923 91.13217926]
[79.19857025 82.57126617]
[86.77871704 76.30067444]
[83.37574005 61.69178009]
[79.97276306 47.08288956]
[76.56978607 32.47399521]
[65.90345001 20.78897095]
[70.55162811 6.63822412]
[67.14865112 -7.97066832]
[52.14578247 -16.90662003]
[48.29157639 -33.59281921]
[57.48685074 -47.63933945]
[53.78068924 -62.17427826]
[50.07453156 -76.70921326]
[35.16991043 -74.85029602]
[20.14983559 -74.87413025]
[5.25119162 -76.78034973]
[-9.29104710 -80.53887177]
[-23.24752998 -86.09043884]
[-36.39813995 -93.34748077]
[-48.53547668 -102.19554901]
[-59.46811676 -112.49509430]
[-69.02363586 -124.08367920]
[-77.05132294 -136.77853394]
[-83.42458344 -150.37945557]
[-88.04288483 -164.67190552]
[-90.83341217 -179.43051147]
[-91.75212860 -194.42248535]
[-90.78456879 -209.41137695]
[-87.94597626 -224.16081238]
[-83.28112793 -238.43814087]
[-76.86359406 -252.01821899]
[-68.79457855 -264.68685913]
[-59.20135880 -276.24426270]
[-48.23521805 -286.50811768]
[-36.06911850 -295.31658936]
[-22.89493370 -302.53076172]
[-8.92043781 -308.03680420]
[5.63397026 -311.74792480]
[20.53874588 -313.60559082]
[35.55881882 -313.58050537]
[50.45730209 -311.67303467]
[64.99922180 -307.91326904]
[78.95523834 -302.36053467]
[92.10523987 -295.10238647]
[104.24182892 -286.25329590]
[115.17360687 -275.95285034]
[124.72814178 -264.36346436]
[132.75476074 -251.66792297]
[139.12687683 -238.06646729]
[143.74398804 -223.77362061]
[146.53326416 -209.01478577]
[147.45072937 -194.02273560]
[146.48190308 -179.03392029]
[143.64205933 -164.28472900]
[138.97601318 -150.00778198]
[132.55732727 -136.42825317]
[124.48725891 -123.76029205]
[114.89305878 -112.20370483]
[103.92606354 -101.94075775]
[91.75921631 -93.13330841]
[78.58442688 -85.92025757]
[64.60946655 -80.41537476]
[68.31562805 -65.88043976]
[72.02178955 -51.34550095]
[83.94417572 -46.36017609]
[90.90508270 -35.24171829]
[90.15997314 -21.94988632]
[81.75754547 -11.37364578]
[85.16052246 3.23524642]
[95.58345795 13.87534523]
[91.17868042 29.07101822]
[94.58165741 43.67991257]
[97.98463440 58.28880310]
[101.38761139 72.89769745]
[118.94947052 80.57377625]
[127.05946350 97.93952179]
[121.67240143 116.33301544]
[130.68992615 128.31985474]
[129.48048401 113.36868286]
[131.15568542 98.46252441]
[135.65356445 84.15277100]
[142.80773926 70.96877289]
[152.35356140 59.39824295]
[163.93792725 49.86919403]
[177.13226318 42.73413086]
[191.44853210 38.25699234]
[206.35710144 36.60339737]
[221.30648804 37.83451462]
[235.74369812 41.90480804]
[249.13464355 48.66370392]
[260.98394775 57.86117935]
[270.85333252 69.15699005]
[278.37765503 82.13329315]
[283.27862549 96.31005859]
[285.37490845 111.16285706]
[284.58895874 126.14225006]
[280.94982910 140.69412231]
[274.59222412 154.28016663]
[265.75122070 166.39779663]
[254.75395203 176.59877014]
[242.00717163 184.50570679]
[227.98243713 189.82614136]
[213.19856262 192.36323547]
[198.20242310 192.02316284]
[183.54875183 188.81846619]
[169.77963257 182.86772156]
[157.40441895 174.39105225]
[146.88087463 163.70202637]
[138.60140991 151.20187378]
[138.91345215 166.19863892]
[139.22550964 181.19538879]
[139.53756714 196.19213867]
[139.84962463 211.18888855]
[140.16168213 226.18565369]
[140.47373962 241.18240356]
[140.78579712 256.17916870]
[141.09785461 271.17590332]
[143.68885803 290.38363647]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 110]
[11 109]
[13 30]
[14 29]
[15 28]
[17 27]
[18 26]
[19 25]
[34 106]
[35 105]
[36 104]
[37 103]
[39 101]
[40 100]
[43 96]
[44 95]
[45 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
