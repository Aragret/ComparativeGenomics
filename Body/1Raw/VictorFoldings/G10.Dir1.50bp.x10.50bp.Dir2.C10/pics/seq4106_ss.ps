%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUAUAAUAAACACCCUCACCACUACAAUCUUCCUAGGAACAACAUAUGACGCACUCUCCCxxxxxxxxxxUUUCCUAGGACUUCUAACAGCCCUAGACCUCAACUACCUAACCAACAAACUUAAAAUAAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[19.17499352 219.91485596]
[10.15746403 231.90168762]
[8.04428196 247.58113098]
[-5.79000378 253.10035706]
[-14.80753326 265.08718872]
[-23.82506371 277.07403564]
[-32.84259415 289.06085205]
[-41.86012268 301.04769897]
[-43.97330475 316.72714233]
[-57.80759048 322.24636841]
[-66.82511902 334.23318481]
[-75.84265137 346.22003174]
[-73.38256836 361.83166504]
[-82.74955750 374.56097412]
[-98.38633728 376.85586548]
[-111.01589966 367.35482788]
[-113.14533234 351.69464111]
[-103.51129913 339.16625977]
[-87.82948303 337.20248413]
[-78.81195068 325.21566772]
[-69.79442596 313.22882080]
[-68.32623291 298.40676880]
[-53.84695435 292.03015137]
[-44.82942581 280.04333496]
[-35.81189728 268.05648804]
[-26.79436684 256.06967163]
[-17.77683640 244.08282471]
[-16.30864716 229.26075745]
[-1.82936823 222.88415527]
[7.18816137 210.89732361]
[-11.13892555 192.52239990]
[-25.88656616 171.16760254]
[-36.57978058 147.52070618]
[-42.87417603 122.34332275]
[-44.56703186 96.44632721]
[-41.60381699 70.66378784]
[-34.07997894 45.82607269]
[-22.23782730 22.73313522]
[-6.45876837 2.12873006]
[12.74900436 -15.32353878]
[34.76686478 -29.06158638]
[28.70385361 -42.78163910]
[22.64084053 -56.50169373]
[16.57782745 -70.22174835]
[10.51481342 -83.94180298]
[4.45180035 -97.66185760]
[-1.61121261 -111.38190460]
[-7.67422581 -125.10195923]
[-13.73723888 -138.82202148]
[-22.87897301 -150.71440125]
[-34.57859802 -160.10156250]
[-50.61860657 -159.78903198]
[-60.75243378 -172.22628784]
[-57.20627213 -187.87251282]
[-42.70043564 -194.72526550]
[-28.36256027 -187.52770996]
[-25.19143486 -171.80117798]
[-13.49181175 -162.41401672]
[-18.63197517 -176.50581360]
[-20.17657280 -191.42607117]
[-18.03214455 -206.27200317]
[-12.32844543 -220.14527893]
[-3.41059947 -232.20645142]
[8.18178749 -241.72572327]
[21.74727440 -248.12710571]
[36.46503448 -251.02322388]
[51.44451141 -250.23887634]
[65.77932739 -245.82150269]
[78.60208893 -238.03839111]
[89.13691711 -227.36050415]
[96.74635315 -214.43392944]
[100.96997833 -200.04083252]
[101.55221558 -185.05213928]
[98.45783234 -170.37478638]
[91.87406921 -156.89688110]
[82.19930267 -145.43394470]
[70.01893616 -136.67959595]
[56.06998825 -131.16352844]
[41.19649124 -129.21954346]
[26.29841995 -130.96525574]
[12.27723598 -136.29501343]
[-0.01718526 -144.88502502]
[6.04582787 -131.16497803]
[12.10884094 -117.44492340]
[18.17185402 -103.72486877]
[24.23486710 -90.00481415]
[30.29788017 -76.28475952]
[36.36089325 -62.56470871]
[42.42390823 -48.84465408]
[48.48691940 -35.12459946]
[57.52618027 -38.23252106]
[66.75101471 -40.73648834]
[76.12110901 -42.62557220]
[85.59553528 -43.89151001]
[95.13290405 -44.52877426]
[104.69152832 -44.53458023]
[114.22966003 -43.90890121]
[123.70561981 -42.65447235]
[133.07800293 -40.77677536]
[142.30586243 -38.28401184]
[151.34889221 -35.18707657]
[160.16757202 -31.49949455]
[168.72338867 -27.23738289]
[176.97892761 -22.41935921]
[184.89814758 -17.06647491]
[192.44644165 -11.20211697]
[199.59082031 -4.85190868]
[206.30009460 1.95640683]
[212.54492188 9.19308281]
[218.29803467 16.82650185]
[223.53428650 24.82331276]
[228.23081970 33.14857864]
[232.36709595 41.76591873]
[235.92504883 50.63769531]
[238.88912964 59.72513580]
[241.24639893 68.98854065]
[242.98654175 78.38743591]
[244.10197449 87.88076019]
[244.58781433 97.42703247]
[244.44192505 106.98455048]
[243.66496277 116.51155090]
[242.26033020 125.96640778]
[240.23413086 135.30781555]
[237.59524536 144.49496460]
[234.35519409 153.48771667]
[230.52813721 162.24676514]
[226.13079834 170.73385620]
[221.18237305 178.91191101]
[215.70448303 186.74517822]
[209.72108459 194.19946289]
[203.25830078 201.24217224]
[196.34437561 207.84255981]
[189.00950623 213.97175598]
[181.28575134 219.60301208]
[173.20686340 224.71171570]
[164.80812073 229.27552795]
[156.12622070 233.27453613]
[147.19909668 236.69125366]
[138.06576538 239.51075745]
[128.76612854 241.72073364]
[119.34078979 243.31150818]
[109.83096313 244.27615356]
[100.27818298 244.61042786]
[90.72418213 244.31289673]
[81.21071625 243.38485718]
[71.77933502 241.83035278]
[62.47125626 239.65617371]
[53.32714081 236.87184143]
[44.38694763 233.48948669]
[35.68972778 229.52391052]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 30]
[2 29]
[4 27]
[5 26]
[6 25]
[7 24]
[8 23]
[10 21]
[11 20]
[12 19]
[41 90]
[42 89]
[43 88]
[44 87]
[45 86]
[46 85]
[47 84]
[48 83]
[49 82]
[50 58]
[51 57]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
