%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCUCCUUACACCUAGCAGGUGUCUCCUCUAUCUUAGGGGCCAUCAAUUUCAUCACAACAAxxxxxxxxxxCUUAUCCAGUGAACCACUAUCACGAAAAAAACUCUACCUCUCUAUACUAAUCUCCCUACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[126.01808167 293.84381104]
[126.01808167 278.84381104]
[126.01808167 263.84381104]
[126.01808167 248.84381104]
[126.01808167 233.84381104]
[126.01808167 218.84381104]
[126.01808167 203.84381104]
[126.01808167 188.84381104]
[126.01808167 173.84381104]
[126.01808167 158.84381104]
[121.41252136 144.56835938]
[118.60265350 144.00981140]
[115.85299683 142.26815796]
[113.62914276 139.36361694]
[112.37942505 135.48944092]
[112.47366333 131.00027466]
[104.74958038 118.14186859]
[90.21464539 114.43570709]
[77.27658844 122.02561188]
[64.33853149 129.61552429]
[51.40047455 137.20542908]
[38.46242142 144.79533386]
[25.52436447 152.38523865]
[14.92193604 165.61494446]
[-0.72578222 159.08920288]
[1.21320641 142.24650574]
[17.93445587 139.44718933]
[30.87251282 131.85728455]
[43.81056976 124.26737213]
[56.74862289 116.67746735]
[69.68668365 109.08755493]
[82.62473297 101.49765015]
[81.30530548 94.11462402]
[78.66644287 79.34856415]
[77.34700775 71.96553802]
[62.58095169 69.32667542]
[47.81489563 66.68780518]
[33.04883957 64.04894257]
[18.28278542 61.41007996]
[3.51672983 58.77121735]
[-13.13906860 61.93676758]
[-20.79169273 46.80819702]
[-8.37280846 35.26663208]
[6.15559387 44.00516129]
[20.92164993 46.64402390]
[35.68770599 49.28289032]
[50.45376205 51.92175293]
[65.21981812 54.56061935]
[79.98587036 57.19948196]
[65.54623413 53.13784027]
[56.61422729 41.08714676]
[56.92774200 26.09042358]
[66.35558319 14.42355537]
[80.95234680 10.96893692]
[94.60953522 17.17226982]
[101.61182404 30.43756104]
[99.02826691 45.21460724]
[103.03600311 30.75992012]
[107.04374695 16.30523109]
[111.05148315 1.85054231]
[100.01650238 12.01071930]
[87.14065552 19.70568085]
[72.96563721 24.61169052]
[58.08782196 26.52234268]
[43.13313675 25.35725594]
[28.73075294 21.16544533]
[15.48659515 14.12326527]
[3.95786667 4.52699423]
[-5.37040091 -7.21964025]
[-12.10575390 -20.62243843]
[-15.96482563 -35.11752701]
[-16.78525925 -50.09507370]
[-14.53253841 -64.92494965]
[-9.30143738 -78.98324585]
[-1.31203687 -91.67849731]
[9.09953690 -102.47660828]
[21.49525261 -110.92327118]
[35.35360718 -116.66313934]
[50.09155273 -119.45471954]
[65.08905029 -119.18056488]
[79.71511841 -115.85220337]
[93.35443878 -109.60968018]
[105.43315887 -100.71561432]
[115.44313049 -89.54420471]
[122.96320343 -76.56542969]
[127.67700958 -62.32534409]
[129.38623047 -47.42304611]
[128.01893616 -32.48548889]
[123.63037109 -18.13565254]
[134.92936707 -28.00137520]
[146.22837830 -37.86709976]
[157.52738953 -47.73282242]
[157.03926086 -63.36278534]
[166.75263977 -75.61774445]
[182.08117676 -78.71128845]
[195.78720093 -71.18273926]
[201.39913940 -56.58684540]
[196.26721191 -41.81533813]
[182.81455994 -33.84288025]
[167.39311218 -36.43381500]
[156.09410095 -26.56809235]
[144.79508972 -16.70236969]
[133.49609375 -6.83664703]
[125.50617218 5.85828257]
[121.49843597 20.31297112]
[117.49069214 34.76765823]
[113.48295593 49.22234726]
[117.60798645 110.41777802]
[125.33206940 123.27618408]
[133.58435059 135.80213928]
[132.68620300 120.82905579]
[134.67114258 105.96096802]
[139.46575928 91.74788666]
[146.89265442 78.71557617]
[156.67713928 67.34613800]
[168.45721436 58.06015396]
[181.79714966 51.20112610]
[196.20344543 47.02278900]
[211.14320374 45.67970276]
[226.06375122 47.22156143]
[240.41314697 51.59132004]
[253.66056824 58.62733459]
[265.31597900 68.06932831]
[274.94824219 79.56801605]
[282.20098877 92.69804382]
[286.80593872 106.97370148]
[288.59277344 121.86689758]
[287.49536133 136.82670593]
[283.55432129 151.29971313]
[276.91543579 164.75054932]
[267.82424927 176.68164062]
[256.61712646 186.65161133]
[243.70863342 194.29167175]
[229.57624817 199.31918335]
[214.74278259 201.54817200]
[199.75697327 200.89617920]
[185.17314148 197.38732910]
[171.53079224 191.15142822]
[159.33459473 182.41914368]
[149.03572083 171.51350403]
[141.01808167 158.84381104]
[141.01808167 173.84381104]
[141.01808167 188.84381104]
[141.01808167 203.84381104]
[141.01808167 218.84381104]
[141.01808167 233.84381104]
[141.01808167 248.84381104]
[141.01808167 263.84381104]
[141.01808167 278.84381104]
[141.01808167 293.84381104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 110]
[16 109]
[17 108]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[23 27]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[40 44]
[57 107]
[58 106]
[59 105]
[60 104]
[89 103]
[90 102]
[91 101]
[92 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
