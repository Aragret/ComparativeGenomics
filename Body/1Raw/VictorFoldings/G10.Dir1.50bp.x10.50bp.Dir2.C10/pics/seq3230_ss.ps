%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUAACAACAUACCCAUGGCCAACCUCCUACUCCUCAUUGUACCCAUUCUAAUCGCAAUGGCxxxxxxxxxxCUCCCUCUACAUAUUUACCACAACACAAUGGGGCUCACUCACCCACCACAUUAACAACAUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[85.84278870 317.38809204]
[88.42856598 298.17968750]
[88.73654175 283.18283081]
[89.04452515 268.18600464]
[89.35250092 253.18916321]
[89.66047668 238.19232178]
[89.96845245 223.19549561]
[90.27643585 208.19865417]
[90.58441162 193.20181274]
[90.89238739 178.20497131]
[76.60906982 175.17866516]
[63.13011932 169.56707764]
[50.91906357 161.56320190]
[40.39582062 151.44227600]
[31.92225838 139.55233765]
[25.78977585 126.30226898]
[22.20925522 112.14769745]
[21.30382538 97.57539368]
[23.10462189 83.08647156]
[27.54971886 69.17916870]
[34.48625946 56.33174896]
[43.67570114 44.98600006]
[54.80204010 35.53209305]
[67.48265839 28.29512405]
[81.28149414 23.52396202]
[95.72402954 21.38268280]
[96.33985901 6.39532900]
[96.95568085 -8.59202480]
[82.82382965 -12.29448891]
[69.78226471 -18.86392784]
[58.40501022 -28.00834656]
[49.19223404 -39.32247925]
[42.54826736 -52.30574417]
[38.76386642 -66.38439178]
[38.00347137 -80.93686676]
[40.29808807 -95.32125092]
[45.54400253 -108.90354919]
[53.50749588 -121.08567047]
[63.83523560 -131.33175659]
[76.06995392 -139.19174194]
[89.67070770 -144.32109070]
[104.03676605 -146.49600220]
[104.96018219 -161.46755981]
[105.88359833 -176.43910217]
[106.80700684 -191.41065979]
[107.73042297 -206.38220215]
[108.65383911 -221.35375977]
[109.57724762 -236.32530212]
[110.50066376 -251.29684448]
[111.42407990 -266.26840210]
[96.62963104 -268.83502197]
[82.20733643 -273.01364136]
[68.33226776 -278.75344849]
[55.17285538 -285.98486328]
[42.88884354 -294.62002563]
[31.62934113 -304.55413818]
[21.53103638 -315.66662598]
[12.71651077 -327.82260132]
[5.29276466 -340.87445068]
[-0.65008450 -354.66378784]
[-5.03989601 -369.02319336]
[-7.82338142 -383.77838135]
[-8.96675205 -398.75021362]
[-8.45612812 -413.75695801]
[-6.29770756 -428.61645508]
[-2.51769280 -443.14831543]
[2.83803058 -457.17611694]
[9.70444965 -470.52960205]
[17.99821091 -483.04666138]
[27.61863708 -494.57534790]
[38.44894409 -504.97570801]
[50.35766602 -514.12152100]
[63.20023346 -521.90173340]
[76.82075500 -528.22186279]
[91.05389404 -533.00531006]
[105.72686768 -536.19390869]
[120.66155243 -537.74896240]
[135.67666626 -537.65161133]
[150.58995056 -535.90301514]
[165.22033691 -532.52447510]
[179.39025879 -527.55688477]
[192.92768860 -521.06066895]
[205.66830444 -513.11456299]
[217.45742798 -503.81515503]
[228.15197754 -493.27523804]
[237.62211609 -481.62277222]
[245.75288391 -468.99923706]
[252.44558716 -455.55783081]
[257.61895752 -441.46176147]
[261.21023560 -426.88214111]
[263.17581177 -411.99591064]
[263.49182129 -396.98379517]
[262.15441895 -382.02804565]
[259.17984009 -367.31018066]
[254.60423279 -353.00891113]
[248.48307800 -339.29779053]
[240.89073181 -326.34326172]
[231.91932678 -314.30261230]
[221.67779541 -303.32199097]
[210.29043579 -293.53469849]
[197.89547729 -285.05953979]
[184.64341736 -277.99938965]
[170.69508362 -272.43994141]
[156.21983337 -268.44869995]
[141.39334106 -266.07409668]
[126.39562988 -265.34500122]
[125.47221375 -250.37344360]
[124.54879761 -235.40188599]
[123.62538910 -220.43034363]
[122.70197296 -205.45878601]
[121.77855682 -190.48724365]
[120.85514832 -175.51568604]
[119.93173218 -160.54414368]
[119.00831604 -145.57258606]
[133.83372498 -141.31050110]
[147.35243225 -133.86621094]
[158.89094543 -123.60707855]
[167.87367249 -111.04074860]
[173.85157776 -96.79008484]
[176.52468872 -81.56227112]
[175.75708008 -66.11372375]
[171.58383179 -51.21251297]
[164.20942688 -37.60018921]
[153.99772644 -25.95486259]
[141.45401001 -16.85743332]
[127.19999695 -10.76261330]
[111.94303894 -7.97619915]
[111.32720947 7.01115417]
[110.71138763 21.99850845]
[125.64852905 25.56130409]
[139.61000061 31.95578957]
[152.06468201 40.93870926]
[162.53878784 52.16835403]
[170.63389587 65.21753693]
[176.04205322 79.58986664]
[178.55752563 94.73860168]
[178.08462524 110.08748627]
[174.64135742 125.05264282]
[168.35868835 139.06477356]
[159.47561646 151.59086609]
[148.33006287 162.15441895]
[135.34600830 170.35357666]
[121.01737213 175.87644958]
[105.88922882 178.51295471]
[105.58124542 193.50979614]
[105.27326965 208.50662231]
[104.96529388 223.50346375]
[104.65731812 238.50030518]
[104.34933472 253.49714661]
[104.04135895 268.49398804]
[103.73338318 283.49081421]
[103.42540741 298.48767090]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 152]
[3 151]
[4 150]
[5 149]
[6 148]
[7 147]
[8 146]
[9 145]
[10 144]
[26 129]
[27 128]
[28 127]
[42 114]
[43 113]
[44 112]
[45 111]
[46 110]
[47 109]
[48 108]
[49 107]
[50 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
