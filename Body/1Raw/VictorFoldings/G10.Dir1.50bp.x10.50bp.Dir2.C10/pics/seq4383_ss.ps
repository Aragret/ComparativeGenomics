%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUCACCCUAGCAUUACUUAUAUGAUAUGUCUCCAUACCCAUUACAAUCUCCAGCAUUCCCxxxxxxxxxxACUCCUAAACACAUCCGUAUUACUCGCAUCAGGAGUAUCAAUCACCUGAGCUCACCAUAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[112.68531036 338.94015503]
[112.68531036 323.94015503]
[112.68531036 308.94015503]
[112.68531036 293.94015503]
[112.68531036 278.94015503]
[112.68531036 263.94015503]
[112.68531036 248.94015503]
[112.68531036 233.94015503]
[112.68531036 218.94015503]
[112.68531036 203.94015503]
[111.12773132 189.02124023]
[108.02941132 174.34471130]
[104.93109131 159.66819763]
[101.83276367 144.99166870]
[94.36949921 144.67556763]
[87.06118011 143.12998962]
[80.10894775 140.39746094]
[73.70411682 136.55319214]
[68.02295685 131.70295715]
[55.76058960 140.34207153]
[51.61469269 155.84017944]
[36.85578918 162.12939453]
[22.80563927 154.38517761]
[20.24232292 138.54823303]
[31.13219261 126.76729584]
[47.12147522 128.07971191]
[59.38384247 119.44058990]
[55.08859253 103.25186157]
[57.00693893 86.61322784]
[64.87346649 71.82668304]
[77.59983063 60.93798065]
[93.42530823 55.45359421]
[93.73736572 40.45684052]
[94.04942322 25.46008492]
[94.36148071 10.46333218]
[94.67353058 -4.53342199]
[92.08801270 -9.21686745]
[91.64708710 -13.94528961]
[92.99817657 -17.87927628]
[95.50204468 -20.44795418]
[96.74892426 -35.39604187]
[97.99579620 -50.34412766]
[99.24266815 -65.29221344]
[84.45639801 -67.87532806]
[69.96120453 -71.77347565]
[55.87379837 -76.95529175]
[42.30760193 -83.37904358]
[29.37184525 -90.99300385]
[17.17068291 -99.73587799]
[5.80235338 -109.53727722]
[-4.64161158 -120.31826782]
[-14.07712078 -131.99206543]
[-22.42820358 -144.46466064]
[-29.62762260 -157.63563538]
[-35.61740875 -171.39894104]
[-40.34933472 -185.64376831]
[-43.78530121 -200.25541687]
[-45.89764786 -215.11625671]
[-46.66936111 -230.10661316]
[-46.09423065 -245.10578918]
[-44.17688370 -259.99304199]
[-40.93276215 -274.64846802]
[-36.38798523 -288.95410156]
[-30.57914352 -302.79476929]
[-23.55300903 -316.05899048]
[-15.36615276 -328.63998413]
[-6.08449173 -340.43646240]
[4.21724224 -351.35345459]
[15.45610428 -361.30303955]
[27.54160309 -370.20510864]
[40.37643051 -377.98800659]
[53.85725021 -384.58905029]
[67.87551880 -389.95510864]
[82.31835938 -394.04293823]
[97.06949615 -396.81967163]
[112.01015472 -398.26290894]
[127.02004242 -398.36108398]
[141.97830200 -397.11337280]
[156.76449585 -394.52978516]
[171.25956726 -390.63119507]
[185.34681702 -385.44894409]
[198.91281128 -379.02478027]
[211.84834290 -371.41043091]
[224.04922485 -362.66717529]
[235.41726685 -352.86544800]
[245.86090088 -342.08413696]
[255.29605103 -330.41006470]
[263.64675903 -317.93719482]
[270.84576416 -304.76599121]
[276.83514404 -291.00250244]
[281.56661987 -276.75753784]
[285.00213623 -262.14578247]
[287.11404419 -247.28489685]
[287.88528442 -232.29450989]
[287.30969238 -217.29534912]
[285.39190674 -202.40815735]
[282.14733887 -187.75282288]
[277.60211182 -173.44732666]
[271.79284668 -159.60685730]
[264.76632690 -146.34283447]
[256.57907104 -133.76208496]
[247.29705811 -121.96588898]
[236.99499512 -111.04921722]
[225.75582886 -101.09997559]
[213.67005920 -92.19827271]
[200.83499146 -84.41577148]
[187.35397339 -77.81513977]
[173.33554077 -72.44952393]
[158.89256287 -68.36212158]
[144.14134216 -65.58583832]
[129.20063782 -64.14304352]
[114.19075775 -64.04534149]
[112.94388580 -49.09725571]
[111.69700623 -34.14916611]
[110.45013428 -19.20108032]
[109.67028809 -4.22136593]
[109.35823059 10.77538776]
[109.04617310 25.77214241]
[108.73411560 40.76889420]
[108.42206573 55.76564789]
[123.78273773 61.76401901]
[135.95381165 72.89036560]
[143.30297852 87.65250397]
[144.84460449 104.07060242]
[140.37194824 119.94278717]
[130.48484802 133.14035034]
[116.50929260 141.89334106]
[119.60761261 156.56987000]
[122.70593262 171.24639893]
[125.80426025 185.92291260]
[132.53663635 172.51863098]
[144.99305725 164.16172791]
[159.94918823 163.01536560]
[173.53369141 169.37628174]
[182.23025513 181.59796143]
[183.78781128 196.51687622]
[177.80317688 210.27130127]
[165.82546997 219.30094910]
[150.95507812 221.26852417]
[137.04115295 215.66471863]
[127.68531036 203.94015503]
[127.68531036 218.94015503]
[127.68531036 233.94015503]
[127.68531036 248.94015503]
[127.68531036 263.94015503]
[127.68531036 278.94015503]
[127.68531036 293.94015503]
[127.68531036 308.94015503]
[127.68531036 323.94015503]
[127.68531036 338.94015503]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 130]
[12 129]
[13 128]
[14 127]
[19 27]
[20 26]
[32 120]
[33 119]
[34 118]
[35 117]
[36 116]
[40 115]
[41 114]
[42 113]
[43 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
