%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAGGUUAAAAAAAGUAAAAGGAACUCGGCAAAUCUUACCCCGCCUGUUUACCAAAAACAUCxxxxxxxxxxCCAUGGCCAUCCCCUUAUGAGCGGGCACAGUGAUUAUAGGCUUUCGCUCUAAGAUUAAAAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 251.85023499]
[92.50000000 236.85023499]
[92.50000000 221.85023499]
[92.50000000 206.85023499]
[92.50000000 191.85023499]
[92.50000000 176.85023499]
[92.50000000 161.85023499]
[92.50000000 146.85023499]
[92.50000000 131.85023499]
[92.50000000 116.85022736]
[85.81392670 103.42278290]
[73.84366608 94.38326263]
[61.87340927 85.34374237]
[49.90314865 76.30422211]
[55.05287170 90.39252472]
[54.86545563 105.39135742]
[49.36531448 119.34658813]
[39.26903534 130.44006348]
[25.89201164 137.22645569]
[10.97707081 138.82162476]
[-3.53259397 135.01773071]
[-15.74659157 126.31036377]
[-24.07361984 113.83396149]
[-27.42879295 99.21401978]
[-25.37498283 84.35528564]
[-18.17976761 71.19364166]
[-6.78057766 61.44384766]
[7.33744335 56.37615585]
[22.33492851 56.65081406]
[36.25770569 62.23189163]
[27.59109879 49.98893738]
[18.92449188 37.74598312]
[6.96654177 38.05549622]
[-3.53530097 32.58403015]
[-10.00104237 22.80722237]
[-10.90628815 11.24143124]
[-6.14021349 0.79654717]
[-20.13780975 -6.57758999]
[-20.56524658 -21.46606064]
[-28.72191238 -34.05450058]
[-43.04293823 -28.32224083]
[-58.19979095 -25.48016548]
[-73.61539459 -25.63464928]
[-88.70317078 -28.77801514]
[-102.88937378 -34.78889084]
[-115.63488770 -43.43689346]
[-126.45574188 -54.39146042]
[-134.94145203 -67.23448944]
[-140.77062988 -81.47628021]
[-143.72312927 -96.57423401]
[-143.68836975 -111.95349121]
[-140.66946411 -127.02884674]
[-134.78306580 -141.22702026]
[-126.25480652 -154.00842285]
[-115.41072083 -164.88769531]
[-123.82413483 -177.30601501]
[-132.23754883 -189.72431946]
[-140.65095520 -202.14263916]
[-149.06436157 -214.56094360]
[-164.48405457 -218.98959351]
[-170.50228882 -233.86105347]
[-162.50241089 -247.76721191]
[-146.62123108 -250.04046631]
[-135.04142761 -238.93696594]
[-136.64604187 -222.97436523]
[-128.23263550 -210.55604553]
[-119.81922913 -198.13772583]
[-111.40581512 -185.71942139]
[-102.99240875 -173.30110168]
[-89.59075165 -179.10540771]
[-75.34368134 -182.33592224]
[-60.74095535 -182.88003540]
[-46.28481293 -180.71751404]
[-32.47275162 -175.92123413]
[-19.78038406 -168.65473938]
[-8.64506817 -159.16665649]
[0.54917169 -147.78219604]
[7.48487997 -134.89201355]
[11.92213631 -120.93878174]
[13.70685196 -106.40201569]
[12.77612209 -91.78156281]
[9.16043758 -77.58044434]
[2.98269463 -64.28752899]
[-5.54598618 -52.36072159]
[-16.13347244 -42.21116638]
[-7.97680759 -29.62272644]
[5.43736839 -23.14899826]
[6.44822550 -7.36011839]
[24.51007462 -4.66816711]
[35.10108185 10.59656525]
[31.16744423 29.07937622]
[39.83405304 41.32233047]
[48.50065994 53.56528473]
[58.94266891 64.33396149]
[70.91292572 73.37348175]
[82.88318634 82.41300201]
[94.85344696 91.45252228]
[99.39418793 81.76218414]
[112.14115906 76.42415619]
[128.97581482 80.74698639]
[143.97502136 80.90098572]
[158.97422791 81.05498505]
[173.97344971 81.20897675]
[188.97265625 81.36297607]
[203.97186279 81.20897675]
[218.96475220 80.74705505]
[233.95762634 80.28512573]
[239.68133545 66.17275238]
[250.65472412 55.61317825]
[264.97659302 50.43590927]
[280.16558838 51.53794098]
[293.59011841 58.72834015]
[302.92431641 70.76132965]
[306.55096436 85.55210876]
[303.84170532 100.53810120]
[295.26599121 113.12288666]
[282.30957031 121.12607574]
[267.21722412 123.16106415]
[252.60380554 118.87528229]
[241.00117493 109.01126099]
[234.41955566 95.27801514]
[219.42666626 95.73993683]
[204.43379211 96.20186615]
[200.53144836 99.05160522]
[194.78355408 99.43831635]
[188.81864929 96.36219025]
[173.81944275 96.20819092]
[158.82023621 96.05419159]
[143.82102966 95.90019226]
[128.82182312 95.74620056]
[123.49136353 101.02220917]
[136.58058167 108.34835815]
[149.66979980 115.67450714]
[163.85104370 120.56246185]
[171.84928894 133.25215149]
[170.14186096 148.15464783]
[159.48075867 158.70648193]
[144.56146240 160.26029968]
[131.95483398 152.13175964]
[127.21321869 137.90170288]
[120.02183533 124.73796082]
[112.83045197 111.57421875]
[107.50000000 116.85022736]
[107.50000000 131.85023499]
[107.50000000 146.85023499]
[107.50000000 161.85023499]
[107.50000000 176.85023499]
[107.50000000 191.85023499]
[107.50000000 206.85023499]
[107.50000000 221.85023499]
[107.50000000 236.85023499]
[107.50000000 251.85023499]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 97]
[12 96]
[13 95]
[14 94]
[30 93]
[31 92]
[32 91]
[37 88]
[39 86]
[40 85]
[55 69]
[56 68]
[57 67]
[58 66]
[59 65]
[100 130]
[101 129]
[102 128]
[103 127]
[104 126]
[105 123]
[106 122]
[107 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
