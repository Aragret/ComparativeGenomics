%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCGAAGCCCCCAUCGCUGGGUCAAUAGUACUUGCCGCAGUACUCUUAAAACUAGGCGGCUAxxxxxxxxxxACAAACAAUGUUCAACCAGUAACUACUACUAAUCAACGCCCAUAAUCAUACAAAGCCCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[152.52807617 308.69924927]
[151.59243774 293.72845459]
[150.65681458 278.75765991]
[149.72119141 263.78686523]
[148.78555298 248.81608582]
[147.84992981 233.84529114]
[146.91430664 218.87449646]
[143.05714417 204.37890625]
[136.42863464 190.92292786]
[129.80014038 177.46696472]
[123.17164612 164.01100159]
[116.54314423 150.55503845]
[106.58660126 152.78355408]
[96.38773346 153.07012939]
[86.32176208 151.40422058]
[76.75901794 147.84709167]
[68.05133820 142.52964783]
[60.51906967 135.64749146]
[48.07962799 144.02963257]
[35.64018631 152.41177368]
[23.20074654 160.79391479]
[16.49515152 175.75944519]
[0.15640225 177.16560364]
[-9.00759792 163.56585693]
[-1.56971025 148.95045471]
[14.81860352 148.35447693]
[27.25804520 139.97233582]
[39.69748306 131.59019470]
[52.13692474 123.20805359]
[47.14493942 105.98582458]
[48.15906525 88.08340454]
[55.06406784 71.53511810]
[67.07530212 58.22139359]
[82.82788849 49.65512848]
[80.03556824 34.91732025]
[77.24324036 20.17951584]
[74.45092010 5.44170952]
[71.04793549 -9.16718292]
[67.04019928 -23.62187195]
[63.03245926 -38.07656097]
[35.10395432 -49.57970428]
[31.57999420 -84.82716370]
[20.28098869 -94.69288635]
[8.98198414 -104.55860901]
[-2.31702065 -114.42433167]
[-13.61602592 -124.29005432]
[-25.11782837 -133.91857910]
[-36.81745148 -143.30574036]
[-48.51707458 -152.69290161]
[-63.11155319 -147.69242859]
[-78.08719635 -151.39831543]
[-88.66533661 -162.62802124]
[-91.47052765 -177.79821777]
[-85.60763550 -192.06811523]
[-72.94750214 -200.88426208]
[-57.52991486 -201.43344116]
[-44.27457809 -193.54043579]
[-37.41122055 -179.72386169]
[-39.12991333 -164.39253235]
[-27.43029022 -155.00537109]
[-15.73066711 -145.61820984]
[-10.90982342 -145.25080872]
[-6.28599310 -141.80821228]
[-3.75030231 -135.58906555]
[7.54870224 -125.72333527]
[18.84770775 -115.85761261]
[30.14671135 -105.99188995]
[41.44571686 -96.12616730]
[48.78397751 -97.67533112]
[43.59804916 -111.75034332]
[38.41212082 -125.82536316]
[27.45214081 -136.06640625]
[26.07472229 -151.00302124]
[34.97698593 -163.07571411]
[49.65343475 -166.17439270]
[62.67622375 -158.73080444]
[67.45443726 -144.51220703]
[61.56906891 -130.71395874]
[62.51478577 -115.74380493]
[63.46050644 -100.77365112]
[70.79876709 -102.32280731]
[77.14589691 -115.91376495]
[83.49302673 -129.50471497]
[79.38818359 -145.01373291]
[89.06958008 -157.80632019]
[105.11048126 -158.06907654]
[115.20568085 -145.60046387]
[111.61100006 -129.96531677]
[97.08397675 -123.15758514]
[90.73684692 -109.56663513]
[84.38971710 -95.97568512]
[91.07307434 -87.87516785]
[94.99420929 -78.58557892]
[96.04064178 -68.97721863]
[94.35751343 -59.88414383]
[90.31748199 -52.03213882]
[84.47167206 -45.98080063]
[77.48714447 -42.08430099]
[81.49488831 -27.62961197]
[85.50262451 -13.17492294]
[87.94511414 -11.67772388]
[89.92132568 -9.09150028]
[91.00150299 -5.59648991]
[90.83200073 -1.52926445]
[89.18872070 2.64938521]
[91.98104858 17.38719177]
[94.77336884 32.12499619]
[97.56569672 46.86280441]
[112.73692322 48.35449219]
[126.86203766 54.08792877]
[138.78092957 63.59220886]
[147.51466370 76.08673096]
[152.34593201 90.54529572]
[152.87791443 105.78039551]
[149.06695557 120.54074097]
[141.22601318 133.61402893]
[129.99911499 143.92654419]
[136.62760925 157.38250732]
[143.25610352 170.83847046]
[149.88461304 184.29443359]
[156.51310730 197.75039673]
[157.89019775 182.81375122]
[163.53153992 168.91500854]
[172.95422363 157.24397278]
[185.35162354 148.79975891]
[199.66242981 144.30523682]
[214.66157532 144.14514160]
[229.06504822 148.33320618]
[241.63984680 156.51089478]
[251.30947876 167.97816467]
[257.24618530 181.75334167]
[258.94177246 196.65719604]
[256.25103760 211.41389465]
[249.40435791 224.76016235]
[238.98785400 235.55351257]
[225.89321899 242.86996460]
[211.24140930 246.08317566]
[196.28672791 244.91810608]
[182.30935669 239.47447205]
[170.50584412 230.21827698]
[161.88508606 217.93887329]
[162.82072449 232.90965271]
[163.75634766 247.88044739]
[164.69197083 262.85125732]
[165.62760925 277.82202148]
[166.56323242 292.79281616]
[167.49885559 307.76361084]
[177.01419067 321.11990356]
[169.95974731 335.92419434]
[153.59252930 336.94708252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 147]
[2 146]
[3 145]
[4 144]
[5 143]
[6 142]
[7 141]
[8 121]
[9 120]
[10 119]
[11 118]
[12 117]
[18 29]
[19 28]
[20 27]
[21 26]
[34 108]
[35 107]
[36 106]
[37 105]
[38 100]
[39 99]
[40 98]
[42 68]
[43 67]
[44 66]
[45 65]
[46 64]
[47 61]
[48 60]
[49 59]
[81 91]
[82 90]
[83 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
