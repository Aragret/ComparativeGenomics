%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUCGACCCUAUAUCCCCCGCCCGCGUCCCUUUCUCCAUAAAAUUCUUCUUAGUAGCUAUUxxxxxxxxxxUUAAAAUAAAAUCCCCACUAUGCACAUUUUAUUUCUCCAACAUACUCGGAUUCUACCCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-25.26698685 282.47277832]
[-38.04845810 273.00509644]
[-47.79610825 284.40609741]
[-57.54376221 295.80712891]
[-60.63083649 311.32421875]
[-74.78244781 315.96978760]
[-84.53009796 327.37081909]
[-94.27775574 338.77182007]
[-104.02540588 350.17285156]
[-113.77305603 361.57388306]
[-107.18591309 375.30447388]
[-106.75949097 390.52743530]
[-112.56766510 404.60522461]
[-123.60414124 415.09887695]
[-137.95677185 420.19021606]
[-153.13888550 418.99719238]
[-166.52008057 411.72647095]
[-175.78199768 399.63775635]
[-179.31994629 384.82550049]
[-176.52095032 369.85601807]
[-167.86996460 357.32284546]
[-154.86581421 349.39746094]
[-139.76155090 347.45294189]
[-125.17407990 351.82623291]
[-115.42642212 340.42520142]
[-105.67877197 329.02416992]
[-95.93112183 317.62316895]
[-86.18347168 306.22213745]
[-83.79360962 291.52050781]
[-68.94478607 286.05947876]
[-59.19713211 274.65844727]
[-49.44947815 263.25741577]
[-59.63285065 253.31500244]
[-69.15618134 242.73864746]
[-77.98010254 231.57209778]
[-86.06811523 219.86154175]
[-93.38678741 207.65539551]
[-99.90586090 195.00411987]
[-105.59837341 181.96002197]
[-110.44078827 168.57704163]
[-114.41308594 154.91052246]
[-117.49884033 141.01695251]
[-119.68529510 126.95378876]
[-120.96340942 112.77918243]
[-121.32789612 98.55173492]
[-120.77725220 84.33027649]
[-119.31375122 70.17360687]
[-116.94344330 56.14025879]
[-113.67613220 42.28826523]
[-109.52532959 28.67489052]
[-104.50819397 15.35642910]
[-98.64546967 2.38794541]
[-91.96139526 -10.17693806]
[-84.48361206 -22.28626823]
[-76.24304199 -33.88997650]
[-67.27375031 -44.94008636]
[-57.61282349 -55.39090347]
[-47.30020905 -65.19922638]
[-36.37854767 -74.32448578]
[-24.89299774 -82.72896576]
[-12.89104748 -90.37790680]
[-0.42232266 -97.23968506]
[12.46162224 -103.28592682]
[25.70751572 -108.49163818]
[39.26058960 -112.83528900]
[53.06480408 -116.29891968]
[67.06308746 -118.86820984]
[81.19754791 -120.53254700]
[95.40975952 -121.28503418]
[109.64094543 -121.12255859]
[123.83226776 -120.04580688]
[137.92504883 -118.05922699]
[151.86103821 -115.17102051]
[165.58258057 -111.39314270]
[179.03294373 -106.74121094]
[192.15653992 -101.23445892]
[204.89909363 -94.89565277]
[217.20791626 -87.75099945]
[229.03211975 -79.83005524]
[240.32279968 -71.16555023]
[251.03329468 -61.79332733]
[261.11929321 -51.75212860]
[270.53912354 -41.08347702]
[279.25378418 -29.83148003]
[291.69323730 -38.21362305]
[304.13265991 -46.59576797]
[316.57211304 -54.97790909]
[329.01156616 -63.36005402]
[341.45098877 -71.74219513]
[353.89044189 -80.12433624]
[366.32986450 -88.50648499]
[378.76931763 -96.88862610]
[376.09020996 -111.88003540]
[379.74661255 -126.66349792]
[389.10498047 -138.67768860]
[402.54394531 -145.84106445]
[417.73513794 -146.91255188]
[432.04653931 -141.70649719]
[442.99868774 -131.12486267]
[448.69400024 -117.00101471]
[448.14575195 -101.78196716]
[441.44891357 -88.10453033]
[429.76376343 -78.33838654]
[415.11483765 -74.17559052]
[400.04016113 -76.33737183]
[387.15145874 -84.44918823]
[374.71200562 -76.06703949]
[362.27258301 -67.68489838]
[349.83312988 -59.30275726]
[337.39370728 -50.92061234]
[324.95425415 -42.53847122]
[312.51480103 -34.15632629]
[300.07537842 -25.77418327]
[287.63592529 -17.39204025]
[295.58233643 -3.61314344]
[302.51864624 10.70087242]
[308.40902710 25.47608185]
[313.22305298 40.63617325]
[316.93588257 56.10285950]
[319.52832031 71.79624939]
[320.98699951 87.63530731]
[321.30435181 103.53821564]
[320.47875977 119.42285919]
[318.51449585 135.20718384]
[315.42169189 150.80969238]
[311.21633911 166.14976501]
[305.92013550 181.14822388]
[299.56042480 195.72756958]
[292.17007446 209.81254578]
[283.78726196 223.33036804]
[274.45526123 236.21124268]
[264.22225952 248.38864136]
[253.14111328 259.79968262]
[241.26905823 270.38540649]
[228.66741943 280.09118652]
[215.40126038 288.86685181]
[201.53909302 296.66708374]
[187.15252686 303.45162964]
[172.31585693 309.18545532]
[157.10571289 313.83889771]
[141.60063171 317.38796997]
[125.88069153 319.81430054]
[110.02709961 321.10537720]
[94.12171936 321.25454712]
[78.24670410 320.26104736]
[62.48402786 318.12997437]
[46.91510773 314.87234497]
[31.62034798 310.50500488]
[16.67874336 305.05047607]
[2.16745663 298.53695679]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 32]
[3 31]
[4 30]
[6 28]
[7 27]
[8 26]
[9 25]
[10 24]
[84 114]
[85 113]
[86 112]
[87 111]
[88 110]
[89 109]
[90 108]
[91 107]
[92 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
