%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUAGACCUCAACUACCUAACCAACAAACUUAAAAUAAAAUCCCCACUAUGCACAUUUUAUxxxxxxxxxxACAAUCCCCUAUCUAGGCCUUCUUACGAGCCAAAACCUGCCCCUACUCCUCCUAGACCUAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[97.36730957 218.60981750]
[96.75148773 203.62246704]
[96.13565826 188.63511658]
[95.51983643 173.64776611]
[94.90400696 158.66041565]
[94.28818512 143.67304993]
[93.67235565 128.68569946]
[93.05653381 113.69834900]
[86.23295593 100.34024811]
[74.45082092 91.05686188]
[62.66868210 81.77347565]
[50.88654709 72.49009705]
[39.10440826 63.20670700]
[27.32227135 53.92332077]
[15.54013443 44.63993835]
[3.75799704 35.35655212]
[-6.44869947 46.35971832]
[-17.50769234 56.50590134]
[-29.34725761 65.72929382]
[-41.89060974 73.97008514]
[-55.05640030 81.17482758]
[-68.75923920 87.29679108]
[-82.91026306 92.29627228]
[-97.41769409 96.14085388]
[-112.18744659 98.80559540]
[-127.12372589 100.27321625]
[-142.12966919 100.53419495]
[-157.10794067 99.58684540]
[-171.96142578 97.43730927]
[-186.59376526 94.09952545]
[-200.91007996 89.59514618]
[-214.81752014 83.95337677]
[-228.22587585 77.21080780]
[-241.04820251 69.41117859]
[-253.20133972 60.60506058]
[-264.60644531 50.84957123]
[-275.18960571 40.20797729]
[-284.88211060 28.74930000]
[-293.62115479 16.54784966]
[-301.35006714 3.68275952]
[-308.01867676 -9.76253414]
[-313.58374023 -23.70083237]
[-318.00921631 -38.04174042]
[-321.26635742 -52.69224548]
[-323.33404541 -67.55734253]
[-324.19888306 -82.54061127]
[-323.85525513 -97.54488373]
[-322.30538940 -112.47285461]
[-319.55935669 -127.22769928]
[-315.63491821 -141.71372986]
[-310.55755615 -155.83700562]
[-304.36022949 -169.50592041]
[-297.08306885 -182.63183594]
[-288.77331543 -195.12960815]
[-279.48486328 -206.91818237]
[-269.27792358 -217.92112732]
[-258.21871948 -228.06706238]
[-246.37893677 -237.29020691]
[-233.83540344 -245.53071594]
[-220.66944885 -252.73516846]
[-206.96647644 -258.85684204]
[-192.81533813 -263.85598755]
[-178.30783081 -267.70025635]
[-163.53802490 -270.36468506]
[-148.60171509 -271.83197021]
[-133.59576416 -272.09262085]
[-118.61750793 -271.14492798]
[-103.76407623 -268.99508667]
[-89.13180542 -265.65698242]
[-74.81558990 -261.15228271]
[-60.90827942 -255.51019287]
[-47.50006866 -248.76733398]
[-34.67791367 -240.96742249]
[-22.52497482 -232.16104126]
[-11.12006950 -222.40528870]
[-0.53716439 -211.76347351]
[9.15510654 -200.30458069]
[17.89388275 -188.10293579]
[25.62249184 -175.23767090]
[32.29080582 -161.79223633]
[37.85558319 -147.85380554]
[42.28073120 -133.51280212]
[45.53754807 -118.86222839]
[47.60491180 -103.99709320]
[48.46942139 -89.01380157]
[48.12546158 -74.00953674]
[46.57526779 -59.08160019]
[43.82889557 -44.32681274]
[39.90414810 -29.84086418]
[34.82648849 -15.71770287]
[28.62884521 -2.04892373]
[21.35140991 11.07682419]
[13.04138279 23.57441521]
[24.82351875 32.85779953]
[36.60565567 42.14118576]
[48.38779449 51.42457199]
[60.16992950 60.70795822]
[71.95206451 69.99134064]
[83.73420715 79.27472687]
[95.51634216 88.55811310]
[85.56258392 77.33658600]
[83.37277985 62.49728775]
[89.66096497 48.87896347]
[102.37671661 40.92222977]
[117.37373352 41.22158432]
[129.76182556 49.67941666]
[135.50155640 63.53782654]
[132.72135925 78.27784729]
[147.54383850 80.57872009]
[162.36631775 82.87960052]
[169.65260315 69.58727264]
[181.04776001 59.59096527]
[195.17576599 54.09777451]
[210.33059692 53.77102661]
[224.68225098 58.65018463]
[236.49766541 68.14606476]
[244.35008240 81.11199188]
[247.29130554 95.98226929]
[244.96614075 110.96123505]
[237.65536499 124.24010468]
[226.24180603 134.21539307]
[212.10369873 139.68254089]
[196.94828796 139.98135376]
[182.60565186 135.07575989]
[170.80775452 125.55812836]
[162.97924805 112.57775116]
[160.06544495 97.70207977]
[145.24296570 95.40120697]
[130.42047119 93.10032654]
[124.82633209 98.09587860]
[136.73118591 107.22135925]
[148.63603210 116.34684753]
[163.41253662 118.92655945]
[173.72462463 129.81971741]
[175.49125671 144.71531677]
[168.01329041 157.71838379]
[154.25013733 163.68292236]
[139.64862061 160.24844360]
[129.98731995 148.77413940]
[129.08955383 133.80177307]
[121.36379242 120.94437408]
[113.63803101 108.08697510]
[108.04388428 113.08252716]
[108.65971375 128.06987000]
[109.27553558 143.05723572]
[109.89136505 158.04458618]
[110.50718689 173.03193665]
[111.12300873 188.01928711]
[111.73883820 203.00663757]
[112.35466003 217.99400330]
[119.04618073 233.57154846]
[105.92980957 244.31384277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 100]
[10 99]
[11 98]
[12 97]
[13 96]
[14 95]
[15 94]
[16 93]
[108 129]
[109 128]
[110 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
