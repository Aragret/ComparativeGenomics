%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUGUCCCCACAUUAGGCUUAAAAACAGAUGCAAUUCCCGGACGUCUAAACCAAACCACUUUxxxxxxxxxxUAACAAACCCUGAGAACCAAAAUGAACGAAAAUCUGUUCGCUUCAUUCAUUGCCCCCACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[83.97301483 249.44789124]
[83.66095734 234.45114136]
[83.34889984 219.45439148]
[83.03684235 204.45762634]
[82.72478485 189.46087646]
[82.41273499 174.46412659]
[82.10067749 159.46737671]
[81.78862000 144.47061157]
[81.47656250 129.47386169]
[67.10837555 125.16628265]
[58.59729004 137.51785278]
[50.08619690 149.86943054]
[49.31977081 166.25065613]
[34.62779236 173.53610229]
[21.12410927 164.23112488]
[22.70015335 147.90788269]
[37.73462677 141.35833740]
[46.24571609 129.00675964]
[54.75680542 116.65518951]
[71.74385071 96.05825806]
[92.85018921 94.78760529]
[84.08398438 82.61576843]
[76.47845459 77.43814087]
[75.26512909 70.09828186]
[66.75403595 57.74670792]
[53.70858002 65.16947174]
[40.07331085 71.44329834]
[25.94918442 76.52172852]
[11.44077301 80.36717987]
[-3.34450459 82.95117188]
[-18.29718208 84.25457001]
[-33.30655670 84.26773071]
[-48.26149750 82.99054718]
[-63.05128098 80.43248749]
[-77.56641388 76.61248779]
[-91.69942474 71.55883026]
[-105.34567261 65.30892181]
[-118.40412903 57.90904617]
[-130.77810669 49.41399002]
[-142.37600708 39.88664246]
[-153.11193848 29.39754295]
[-162.90643311 18.02435493]
[-171.68695068 5.85128164]
[-179.38851929 -7.03155231]
[-185.95408630 -20.52876472]
[-191.33505249 -34.54042435]
[-195.49159241 -48.96279144]
[-198.39289856 -63.68908691]
[-200.01753235 -78.61028290]
[-200.35342407 -93.61589813]
[-199.39811707 -108.59484863]
[-197.15867615 -123.43621826]
[-193.65167236 -138.03013611]
[-188.90307617 -152.26853943]
[-182.94805908 -166.04603577]
[-175.83068848 -179.26058960]
[-167.60366821 -191.81437683]
[-158.32791138 -203.61444092]
[-148.07208252 -214.57344055]
[-136.91213989 -224.61022949]
[-124.93068695 -233.65048218]
[-112.21643829 -241.62727356]
[-98.86352539 -248.48156738]
[-84.97080994 -254.16258240]
[-70.64115143 -258.62826538]
[-55.98064804 -261.84558105]
[-41.09783554 -263.79067993]
[-26.10290909 -264.44915771]
[-11.10688496 -263.81616211]
[3.77920961 -261.89636230]
[18.44516182 -258.70397949]
[32.78238678 -254.26264954]
[46.68473816 -248.60525513]
[60.04928207 -241.77368164]
[72.77706909 -233.81849670]
[84.77387238 -224.79862976]
[95.95086670 -214.78082275]
[106.22529602 -203.83927917]
[115.52109528 -192.05499268]
[123.76943970 -179.51519775]
[130.90925598 -166.31275940]
[136.88769531 -152.54542542]
[141.66049194 -138.31509399]
[145.19229126 -123.72716522]
[147.45695496 -108.88962555]
[148.43772888 -93.91232300]
[148.12733459 -78.90615082]
[146.52807617 -63.98221970]
[143.65177917 -49.25101089]
[139.51977539 -34.82160187]
[134.16262817 -20.80081558]
[127.62001038 -7.29246330]
[119.94035339 5.60344219]
[111.18052673 17.79142380]
[101.40538025 29.18124199]
[90.68729401 39.68857193]
[79.10561371 49.23561859]
[87.61669922 61.58719254]
[96.25582123 73.84955597]
[105.02202606 86.02139282]
[118.26461029 93.06652832]
[133.25730896 93.53457642]
[148.25000000 94.00261688]
[163.24270630 94.47065735]
[178.23539734 94.93869781]
[193.22808838 95.40673828]
[208.22483826 95.71879578]
[223.22402954 95.87483215]
[238.22322083 96.03086853]
[253.22241211 96.18690491]
[264.33657837 84.95077515]
[280.14086914 84.94808960]
[291.25888062 96.18043518]
[291.09448242 111.98387146]
[279.74520874 122.98249054]
[263.94439697 122.65101624]
[253.06637573 111.18609619]
[238.06718445 111.03005981]
[223.06799316 110.87402344]
[208.06880188 110.71798706]
[201.30387878 113.81336212]
[192.76005554 110.39943695]
[177.76734924 109.93139648]
[162.77465820 109.46335602]
[147.78196716 108.99530792]
[132.78926086 108.52726746]
[117.79656982 108.05922699]
[112.46575928 113.33486938]
[125.39869690 120.93350220]
[138.33163452 128.53211975]
[153.04873657 131.43156433]
[163.35165405 142.33340454]
[165.41578674 157.19070435]
[158.47491455 170.48822021]
[145.10556030 177.28973389]
[130.27064514 175.07041931]
[119.47710419 164.65411377]
[116.73149109 149.90872192]
[109.26781464 136.89744568]
[101.80413055 123.88616180]
[96.47332001 129.16180420]
[96.78536987 144.15855408]
[97.09742737 159.15531921]
[97.40948486 174.15206909]
[97.72154236 189.14881897]
[98.03359985 204.14556885]
[98.34565735 219.14233398]
[98.65770721 234.13908386]
[98.96976471 249.13583374]
[101.56076813 268.34356689]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 19]
[11 18]
[12 17]
[21 100]
[22 99]
[24 98]
[25 97]
[101 127]
[102 126]
[103 125]
[104 124]
[105 123]
[106 122]
[107 120]
[108 119]
[109 118]
[110 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
