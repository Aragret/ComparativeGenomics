%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAACAAUCCUAAUCCUAAUACCAACUAUCUCCCUAAUUGAAAACAAAAUACUCAAAUGGGCxxxxxxxxxxUAUCACACAUCAACUGCAACUCCAAAGCCACCCCUCACCCACUAGGAUACCAACAAACCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[73.89384460 479.21154785]
[73.89384460 464.21154785]
[73.89384460 449.21154785]
[73.89384460 434.21154785]
[73.89384460 419.21154785]
[73.89384460 404.21154785]
[73.89384460 389.21154785]
[73.89384460 374.21154785]
[73.89384460 359.21154785]
[73.89384460 344.21154785]
[58.39080811 340.57366943]
[44.18668747 333.35644531]
[32.09501648 322.96875000]
[22.80938911 310.00122070]
[16.86369324 295.19253540]
[14.60140133 279.38757324]
[16.15573692 263.48889160]
[21.44183922 248.40551758]
[30.16137695 235.00068665]
[41.81938934 224.04264832]
[55.75238419 216.16052246]
[71.16608429 211.80819702]
[70.55025482 196.82084656]
[69.93443298 181.83349609]
[69.31861115 166.84614563]
[68.70278168 151.85879517]
[68.08695984 136.87142944]
[56.21013260 127.70950317]
[41.55740738 130.91850281]
[26.90468407 134.12748718]
[17.07418633 146.80586243]
[1.03130877 146.88081360]
[-8.91722775 134.29486084]
[-5.13975668 118.70286560]
[9.46596909 112.06567383]
[23.69568634 119.47476959]
[38.34841156 116.26576996]
[53.00113678 113.05677795]
[54.90506744 105.80246735]
[40.39644241 101.99460602]
[25.88781548 98.18674469]
[11.37925339 94.37864685]
[15.18759346 79.87014771]
[29.69567490 83.67812347]
[44.20429993 87.48597717]
[58.71292496 91.29383850]
[60.61685562 84.03952789]
[49.42855835 74.04843140]
[38.24026108 64.05733490]
[27.05196381 54.06623459]
[12.74225140 59.49676895]
[-2.45066524 57.64370346]
[-15.03556538 48.93285370]
[-22.12053108 35.36591721]
[-22.07748985 20.06046867]
[-14.91633034 6.53359175]
[-2.28263640 -2.10633588]
[12.92046261 -3.87392306]
[27.19940567 1.63700902]
[37.27299500 13.16008854]
[40.82639694 28.04739571]
[37.04306030 42.87793732]
[48.23135757 52.86903381]
[59.41965485 62.86013031]
[70.60794830 72.85122681]
[93.53716278 68.85645294]
[109.53402710 78.40904999]
[119.63945770 67.32391357]
[129.74488831 56.23878098]
[139.85032654 45.15364838]
[130.10519409 33.72405624]
[121.86944580 21.16317368]
[115.27298737 7.66910362]
[110.41984558 -6.54533386]
[107.38655853 -21.25595665]
[106.22097778 -36.23075867]
[106.94147491 -51.23356247]
[109.53668976 -66.02775574]
[113.96569061 -80.38000488]
[120.15863037 -94.06396484]
[128.01783752 -106.86381531]
[137.41935730 -118.57768250]
[148.21490479 -129.02082825]
[160.23423767 -138.02853394]
[173.28779602 -145.45875549]
[187.16967773 -151.19429016]
[201.66098022 -155.14468384]
[216.53312683 -157.24765015]
[231.55157471 -157.47000122]
[246.47946167 -155.80824280]
[261.08135986 -152.28857422]
[275.12695312 -146.96650696]
[288.39474487 -139.92597961]
[300.67547607 -131.27804565]
[311.77545166 -121.15906525]
[321.51962280 -109.72865295]
[329.75430298 -97.16708374]
[336.34963989 -83.67245483]
[341.20159912 -69.45761108]
[344.23364258 -54.74673080]
[345.39794922 -39.77183151]
[344.67620850 -24.76908875]
[342.07974243 -9.97511578]
[337.64953613 4.37676382]
[331.45544434 18.06020164]
[323.59515381 30.85939026]
[314.19265747 42.57246399]
[303.39620972 53.01469803]
[291.37612915 62.02139664]
[278.32192993 69.45051575]
[264.43957520 75.18488312]
[249.94795227 79.13406372]
[235.07562256 81.23577118]
[220.05715942 81.45686340]
[205.12940979 79.79383850]
[190.52781677 76.27294159]
[176.48266602 70.94969940]
[163.21546936 63.90805817]
[150.93547058 55.25908279]
[140.83003235 66.34421539]
[130.72459412 77.42935181]
[120.61916351 88.51448059]
[123.27999115 121.67327881]
[83.07431030 136.25561523]
[83.69013214 151.24296570]
[84.30596161 166.23031616]
[84.92178345 181.21766663]
[85.53761292 196.20501709]
[86.15343475 211.19238281]
[100.05664825 213.70550537]
[113.11789703 219.07577515]
[124.75741577 227.06190491]
[134.45915222 237.30662537]
[141.79362488 249.35255432]
[146.43701172 262.66265869]
[148.18530273 276.64425659]
[146.96343994 290.67529297]
[142.82836914 304.13208008]
[135.96652222 316.41705322]
[126.68534088 326.98526001]
[115.39950562 335.36853027]
[102.61244202 341.19619751]
[88.89384460 344.21154785]
[88.89384460 359.21154785]
[88.89384460 374.21154785]
[88.89384460 389.21154785]
[88.89384460 404.21154785]
[88.89384460 419.21154785]
[88.89384460 434.21154785]
[88.89384460 449.21154785]
[88.89384460 464.21154785]
[88.89384460 479.21154785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[22 129]
[23 128]
[24 127]
[25 126]
[26 125]
[27 124]
[28 38]
[29 37]
[30 36]
[47 65]
[48 64]
[49 63]
[50 62]
[67 122]
[68 121]
[69 120]
[70 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
