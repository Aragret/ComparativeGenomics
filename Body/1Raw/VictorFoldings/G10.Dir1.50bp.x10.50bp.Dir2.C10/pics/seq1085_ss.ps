%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGCCACACCCCCACGGGAAACAGCAGUGAUUAACCUUUAGCAAUAAACGAAAGUUUAACUAxxxxxxxxxxCAAAUCAGCCCAAUUAGGUCUCCACCCCUGACUCCCCUCAGCCAUAGAAGGCCCCACCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[114.30073547 515.50927734]
[116.89173889 496.30157471]
[117.20378876 481.30480957]
[117.51584625 466.30807495]
[117.82790375 451.31130981]
[118.13996124 436.31454468]
[118.45201874 421.31781006]
[118.76407623 406.32104492]
[119.07612610 391.32427979]
[119.38818359 376.32754517]
[119.70024109 361.33078003]
[105.77599335 357.54364014]
[93.16093445 350.51788330]
[82.59606171 340.66098022]
[74.70318604 328.54690552]
[69.94834900 314.88256836]
[68.61431122 300.46667480]
[70.78373718 286.14309692]
[76.33406830 272.75128174]
[84.94448090 261.07730103]
[96.11437988 251.80747986]
[109.19253540 245.48820496]
[123.41503143 242.49363708]
[122.01272583 227.55932617]
[118.60974884 212.95042419]
[115.20677185 198.34153748]
[111.80379486 183.73265076]
[99.06069183 176.10710144]
[95.40147400 161.34008789]
[103.48625183 148.02565002]
[100.08326721 133.41676331]
[96.68029022 118.80786896]
[84.43318176 111.06483459]
[81.14601898 96.95310974]
[88.71081543 84.59511566]
[85.30783844 69.98622131]
[81.90486145 55.37732697]
[68.81010437 50.95843506]
[59.69366074 40.71619797]
[56.86754990 27.40967178]
[60.96833038 14.55295944]
[70.81759644 5.48720169]
[67.71927643 -9.18932438]
[64.62094879 -23.86585045]
[61.52262878 -38.54237366]
[51.00423813 -27.84828949]
[36.06454849 -29.19201469]
[27.62325859 -41.59139633]
[31.85027504 -55.98348999]
[45.65598679 -61.84883881]
[58.94913864 -54.90087509]
[57.39155960 -69.81978607]
[55.83397675 -84.73870087]
[50.20202255 -98.64125824]
[40.93707275 -110.43789673]
[31.67212296 -122.23453522]
[22.40717316 -134.03117371]
[6.99344540 -139.63020325]
[4.40230465 -155.82334900]
[17.29929352 -165.95249939]
[32.41709518 -159.59764099]
[34.20381165 -143.29612732]
[43.46876144 -131.49948120]
[52.73371124 -119.70284271]
[61.99866104 -107.90620422]
[60.30780792 -122.81060028]
[61.79937744 -137.73625183]
[66.40622711 -152.01130676]
[73.92098236 -164.99314880]
[84.00536346 -176.09744263]
[96.20544434 -184.82431030]
[109.97202301 -190.78091431]
[124.68541718 -193.69914246]
[139.68330383 -193.44761658]
[154.29057312 -190.03765869]
[167.84967041 -183.62277222]
[179.75025940 -174.49171448]
[189.45661926 -163.05552673]
[196.53182983 -149.82897949]
[200.65742493 -135.40748596]
[201.64765930 -120.44020844]
[199.45797729 -105.60089111]
[194.18695068 -91.55752563]
[186.07183838 -78.94225311]
[175.47795105 -68.32295990]
[162.88215637 -60.17765427]
[148.85145569 -54.87300110]
[134.01742554 -52.64778519]
[119.04781342 -53.60217285]
[104.61647797 -57.69320297]
[91.37303162 -64.73671722]
[79.91362000 -74.41565704]
[70.75289154 -86.29627991]
[72.31047058 -71.37736511]
[73.86804962 -56.45845413]
[76.19915771 -41.64069748]
[79.29747772 -26.96417046]
[82.39579773 -12.28764629]
[85.49411774 2.38887978]
[100.66605377 8.57900524]
[109.26483917 22.72209358]
[107.74776459 39.37081909]
[96.51374817 51.97434998]
[99.91673279 66.58324432]
[103.31970978 81.19213104]
[115.56681824 88.93516541]
[118.85398102 103.04689026]
[111.28918457 115.40488434]
[114.69216156 130.01377869]
[118.09513855 144.62266541]
[131.23135376 152.99391174]
[134.47434998 167.85789490]
[126.41268921 180.32966614]
[129.81565857 194.93856812]
[133.21864319 209.54745483]
[136.62161255 224.15634155]
[142.10629272 210.19503784]
[152.71565247 199.59118652]
[166.67982483 194.11378479]
[181.66926575 194.67655945]
[195.18339539 201.18565369]
[204.96777344 212.55517578]
[209.39012146 226.88845825]
[207.71270752 241.79437256]
[200.21534729 254.78628540]
[188.14878845 263.69683838]
[173.52600098 267.03958130]
[158.78637695 264.25683594]
[146.38883972 255.81286621]
[138.40205383 243.11761475]
[153.32722473 247.73309326]
[166.54765320 256.03594971]
[177.17179871 267.45950317]
[184.48500061 281.22686768]
[187.99745178 296.40380859]
[187.47709656 311.96206665]
[182.96487427 326.84912109]
[174.77156067 340.05932617]
[163.45645142 350.70178223]
[149.78909302 358.06057739]
[134.69699097 361.64285278]
[134.38493347 376.63958740]
[134.07287598 391.63635254]
[133.76083374 406.63311768]
[133.44877625 421.62985229]
[133.13671875 436.62661743]
[132.82466125 451.62335205]
[132.51260376 466.62011719]
[132.20054626 481.61688232]
[131.88848877 496.61361694]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[11 141]
[23 130]
[24 116]
[25 115]
[26 114]
[27 113]
[30 110]
[31 109]
[32 108]
[35 105]
[36 104]
[37 103]
[42 99]
[43 98]
[44 97]
[45 96]
[51 95]
[52 94]
[53 93]
[54 65]
[55 64]
[56 63]
[57 62]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
