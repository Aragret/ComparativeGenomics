%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACAUAACCAUUCUUAAUUUAACUAUUUAUAUUAUCCUAACUACUACCGCAUUCCUACUACxxxxxxxxxxAGUCUACCCUCCCUUAGCAGGGAACUACUCCCACCCUGGAGCCUCCGUAGACCUAACCAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[88.35120392 274.51617432]
[88.03914642 259.51940918]
[87.72708893 244.52265930]
[87.41503906 229.52590942]
[87.10298157 214.52914429]
[86.79092407 199.53239441]
[86.47886658 184.53564453]
[86.16680908 169.53889465]
[85.85475159 154.54212952]
[77.34366608 142.19056702]
[63.44110870 136.55860901]
[49.53855133 130.92665100]
[42.69578171 144.28607178]
[34.69907379 156.98844910]
[25.61100960 168.93435669]
[15.50271988 180.03030396]
[4.45331573 190.18945312]
[-7.45072460 199.33229065]
[-20.11623383 207.38725281]
[-33.44408417 214.29130554]
[-47.32996750 219.99041748]
[-61.66520309 224.43998718]
[-76.33760071 227.60517883]
[-91.23232269 229.46121216]
[-106.23279572 229.99359131]
[-121.22161865 229.19812012]
[-136.08148193 227.08103943]
[-150.69609070 223.65892029]
[-164.95104980 218.95852661]
[-178.73480225 213.01666260]
[-191.93948364 205.87983704]
[-204.46171570 197.60389709]
[-216.20352173 188.25361633]
[-227.07298279 177.90217590]
[-236.98503113 166.63058472]
[-245.86212158 154.52706909]
[-253.63473511 141.68635559]
[-260.24206543 128.20892334]
[-265.63238525 114.20028687]
[-269.76351929 99.77006531]
[-272.60311890 85.03119659]
[-274.12899780 70.09903717]
[-274.32916260 55.09045410]
[-273.20208740 40.12291336]
[-270.75659180 25.31355667]
[-267.01177979 10.77828789]
[-261.99697876 -3.36913109]
[-255.75144958 -17.01797485]
[-248.32405090 -30.06142235]
[-239.77293396 -42.39738464]
[-230.16502380 -53.92932129]
[-219.57550049 -64.56697083]
[-208.08724976 -74.22708130]
[-195.79017639 -82.83405304]
[-182.78054810 -90.32051086]
[-169.16017151 -96.62786865]
[-155.03562927 -101.70677185]
[-140.51750183 -105.51744843]
[-125.71938324 -108.03009033]
[-110.75710297 -109.22502899]
[-95.74776459 -109.09291840]
[-80.80884552 -107.63477325]
[-66.05725098 -104.86203003]
[-51.60844040 -100.79637146]
[-37.57550430 -95.46962738]
[-24.06826019 -88.92347717]
[-11.19242954 -81.20916748]
[0.95121700 -72.38706207]
[12.26763630 -62.52621841]
[22.66826248 -51.70380783]
[32.07169342 -40.00452805]
[40.40433121 -27.51994705]
[47.60096359 -14.34777546]
[53.60526276 -0.59110457]
[58.37024307 13.64239883]
[61.85860443 28.24133492]
[64.04304504 43.09144592]
[64.90647125 58.07651138]
[64.44213104 73.07924652]
[62.65364456 87.98223114]
[59.55502319 102.66882324]
[55.17050934 117.02409363]
[69.07306671 122.65605164]
[82.97562408 128.28800964]
[72.28862000 115.20350647]
[69.80948639 99.23166656]
[75.49414062 84.88465881]
[87.09096527 75.84871674]
[100.94457245 74.04010773]
[113.12596130 79.23076630]
[124.62776184 69.60224152]
[136.12956238 59.97371292]
[147.63137817 50.34518433]
[159.13317871 40.71665955]
[164.24851990 25.13573265]
[180.35293579 22.04058075]
[190.87957764 34.61523438]
[184.99954224 49.92396164]
[168.76170349 52.21846390]
[157.25990295 61.84698868]
[145.75808716 71.47551727]
[134.25628662 81.10404205]
[122.75448608 90.73256683]
[128.54438782 103.77215576]
[126.29241180 119.96871948]
[141.05847168 122.60758209]
[155.82452393 125.24644470]
[170.59057617 127.88531494]
[185.49247742 129.59800720]
[200.47219849 130.37785339]
[215.45190430 131.15768433]
[227.02388000 120.39361572]
[242.81459045 121.04836273]
[253.45571899 132.73348999]
[252.63406372 148.51640320]
[240.83709717 159.03338623]
[225.06373596 158.04490662]
[214.67207336 146.13740540]
[199.69235229 145.35755920]
[184.71263123 144.57771301]
[193.58016968 156.67593384]
[191.48617554 171.52905273]
[179.61952209 180.70416260]
[164.71755981 178.99205017]
[155.24092102 167.36477661]
[156.57002258 152.42376709]
[167.95172119 142.65136719]
[153.18565369 140.01249695]
[138.41960144 137.37364197]
[123.65354919 134.73477173]
[117.95304108 139.60859680]
[129.64633179 149.00364685]
[144.37371826 151.85041809]
[153.23620605 163.95233154]
[151.50495911 178.85209656]
[140.10372925 188.59951782]
[125.11597443 187.99359131]
[114.53881073 177.35763550]
[114.01570129 162.36753845]
[106.55201721 149.35624695]
[100.85150909 154.23007202]
[101.16356659 169.22683716]
[101.47562408 184.22358704]
[101.78767395 199.22033691]
[102.09973145 214.21708679]
[102.41178894 229.21385193]
[102.72384644 244.21060181]
[103.03590393 259.20736694]
[103.34796143 274.20410156]
[105.93895721 293.41183472]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 84]
[11 83]
[12 82]
[90 103]
[91 102]
[92 101]
[93 100]
[94 99]
[105 130]
[106 129]
[107 128]
[108 127]
[109 120]
[110 119]
[111 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
