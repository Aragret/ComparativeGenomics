%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUGUAAUAAUCUUCUUCAUAGUAAUACCCAUCAUAAUCGGAGGCUUUGGCAACUGACUAGUxxxxxxxxxxAUUAACUAGUUUUGACAACAUUCAAAAAAGAGUAAUAAACUUCGCCUUAAUUUUAAUAAUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[45.79970169 462.51528931]
[45.79970169 447.51528931]
[45.79970169 432.51528931]
[45.79970169 417.51528931]
[45.79970169 402.51528931]
[45.79970169 387.51528931]
[45.79970169 372.51528931]
[45.79970169 357.51528931]
[45.79970169 342.51528931]
[45.79970169 327.51528931]
[31.25730896 323.96463013]
[17.97935486 317.03237915]
[6.73967743 307.11767578]
[-1.80550480 294.79357910]
[-7.15590477 280.77395630]
[-8.99645519 265.87228394]
[-7.21585894 250.95414734]
[-1.91330707 236.88729858]
[6.60703325 224.49092102]
[17.85346603 214.48808289]
[31.17513657 207.46345520]
[45.79970169 203.82922363]
[45.79970169 188.82922363]
[38.01453400 201.65072632]
[27.61664772 212.46202087]
[15.10825062 220.74090576]
[1.09348738 226.08753967]
[-13.75074100 228.24366760]
[-28.70747185 227.10514832]
[-43.05430984 222.72698975]
[-56.09831238 215.32064819]
[-67.20947266 205.24383545]
[-75.85112000 192.98324585]
[-81.60588074 179.13107300]
[-84.19580841 164.35635376]
[-83.49579620 149.37269592]
[-79.53966522 134.90380859]
[-72.51849365 121.64849854]
[-62.77140045 110.24700165]
[-50.76914978 101.25000000]
[-37.09144974 95.09204102]
[-22.39891434 92.07054901]
[-7.40118313 92.33145142]
[7.17736721 95.86215973]
[20.63260651 102.49212646]
[32.31465912 111.90115356]
[41.65929031 123.63477325]
[48.21516418 137.12626648]
[51.66564178 151.72401428]
[51.84361649 166.72747803]
[59.47658539 153.81478882]
[67.10955811 140.90208435]
[74.74252319 127.98938751]
[82.37549591 115.07669067]
[72.23995972 85.97856903]
[102.81681824 61.09481049]
[103.43264771 46.10745621]
[104.04846954 31.12010384]
[96.88426208 17.01391220]
[105.13755798 4.61502504]
[105.75337982 -10.37232780]
[106.36920929 -25.35968208]
[103.60318756 -31.47456169]
[104.28432465 -37.19504547]
[107.33053589 -40.94601822]
[108.56114960 -55.89545441]
[109.79176331 -70.84488678]
[111.02237701 -85.79431915]
[112.25299072 -100.74375916]
[113.48359680 -115.69319153]
[114.71421051 -130.64262390]
[101.17900085 -137.56118774]
[91.32552338 -149.13604736]
[86.65636444 -163.60212708]
[87.88352966 -178.75344849]
[94.81989288 -192.27954102]
[106.40770721 -202.11778259]
[120.87991333 -206.76791382]
[136.02960205 -205.52081299]
[149.54656982 -198.56666565]
[159.36955261 -186.96592712]
[164.00064087 -172.48760986]
[162.73361206 -157.33956909]
[155.76168823 -143.83177185]
[144.14804077 -134.02404785]
[129.66365051 -129.41201782]
[128.43302917 -114.46257782]
[127.20242310 -99.51314545]
[125.97180939 -84.56371307]
[124.74119568 -69.61427307]
[123.51058197 -54.66484070]
[122.27997589 -39.71540451]
[121.35655975 -24.74385643]
[120.74073029 -9.75650311]
[120.12490845 5.23085070]
[127.33316803 18.26504707]
[119.03582001 31.73592949]
[118.41999817 46.72328186]
[117.80416870 61.71063614]
[130.04711914 70.37724304]
[139.99458313 58.07445526]
[154.68354797 60.54097748]
[168.61425781 54.97904205]
[178.33303833 41.77004623]
[194.59962463 43.85092926]
[200.68035889 59.08105469]
[190.31990051 71.79297638]
[174.17619324 68.90975952]
[160.24548340 74.47169495]
[151.29443359 86.37665558]
[135.60906982 84.30796051]
[137.75764465 99.15328217]
[152.69364929 100.53730774]
[167.62966919 101.92133331]
[180.84103394 92.81973267]
[196.15170288 97.61174011]
[201.81660461 112.62135315]
[193.49014282 126.33446503]
[177.55964661 128.23156738]
[166.24563599 116.85734558]
[151.30963135 115.47332001]
[136.37361145 114.08929443]
[122.56356812 125.07965088]
[107.42845917 127.47814941]
[95.28819275 122.70965576]
[87.65522003 135.62236023]
[80.02225494 148.53504944]
[72.38928223 161.44775391]
[64.75630951 174.36044312]
[60.79970169 188.82922363]
[60.79970169 203.82922363]
[75.42427063 207.46345520]
[88.74594116 214.48808289]
[99.99237061 224.49092102]
[108.51271057 236.88729858]
[113.81526184 250.95414734]
[115.59586334 265.87228394]
[113.75531006 280.77395630]
[108.40490723 294.79357910]
[99.85972595 307.11767578]
[88.62004852 317.03237915]
[75.34209442 323.96463013]
[60.79970169 327.51528931]
[60.79970169 342.51528931]
[60.79970169 357.51528931]
[60.79970169 372.51528931]
[60.79970169 387.51528931]
[60.79970169 402.51528931]
[60.79970169 417.51528931]
[60.79970169 432.51528931]
[60.79970169 447.51528931]
[60.79970169 462.51528931]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[22 131]
[23 130]
[50 129]
[51 128]
[52 127]
[53 126]
[54 125]
[56 99]
[57 98]
[58 97]
[60 95]
[61 94]
[62 93]
[65 92]
[66 91]
[67 90]
[68 89]
[69 88]
[70 87]
[71 86]
[100 111]
[102 109]
[103 108]
[112 122]
[113 121]
[114 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
