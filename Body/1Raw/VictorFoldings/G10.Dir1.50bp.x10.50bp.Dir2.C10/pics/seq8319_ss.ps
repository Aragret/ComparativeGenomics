%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACUAAUCACCACCCAACAAUGACUAAUCAAACUAACCUCAAAACAAAUGAUAACCAUACACxxxxxxxxxxUGGCGCCUGCCUGAUCCUCCAAAUCACCACAGGACUAUUCCUAGCCAUGCACUACUCACCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[45.31685638 234.19734192]
[37.65071869 230.81184387]
[30.19310760 226.98884583]
[22.29662514 239.74211121]
[14.40014267 252.49536133]
[13.71367359 268.30166626]
[0.43524319 275.04943848]
[-7.46123934 287.80270386]
[-8.14770889 303.60900879]
[-21.42613983 310.35681152]
[-29.32262230 323.11004639]
[-29.28653145 339.50915527]
[-43.60440445 347.50482178]
[-57.54724121 338.87179565]
[-56.77184296 322.49096680]
[-42.07587814 315.21356201]
[-34.17939758 302.46032715]
[-34.05773544 287.56619263]
[-20.21449661 279.90621948]
[-12.31801414 267.15298462]
[-12.19635391 252.25886536]
[1.64688599 244.59887695]
[9.54336834 231.84562683]
[17.43985176 219.09237671]
[3.07738280 207.72732544]
[-9.73682499 194.64143372]
[-20.79807663 180.04370117]
[-29.92967796 164.16735840]
[-36.98575592 147.26597595]
[-41.85359955 129.60957336]
[-56.67608261 131.91044617]
[-71.49856567 134.21131897]
[-83.92864227 144.90829468]
[-99.31605530 139.23735046]
[-101.83155060 123.03227997]
[-88.88739777 112.96346283]
[-73.79943848 119.38883972]
[-58.97695541 117.08796692]
[-44.15447617 114.78709412]
[-44.76268387 106.55255127]
[-44.90089417 98.29673004]
[-44.56866074 90.04644775]
[-43.76705551 81.82847595]
[-42.49868774 73.66950226]
[-40.76766968 65.59601593]
[-38.57962418 57.63422775]
[-35.94165421 49.80998993]
[-32.86232758 42.14870071]
[-29.35163689 34.67523575]
[-25.42098427 27.41386223]
[-21.08312798 20.38815117]
[-16.35215569 13.62091351]
[-11.24342346 7.13412237]
[-5.77352047 0.94883639]
[0.03979607 -4.91486168]
[6.17765141 -10.43793488]
[12.62011814 -15.60245132]
[4.20670748 -28.02076530]
[-4.20670271 -40.43907928]
[-19.62638855 -44.86772156]
[-25.64463234 -59.73917770]
[-17.64475250 -73.64534760]
[-1.76357353 -75.91860199]
[9.81622505 -64.81509399]
[8.21161175 -48.85248947]
[16.62502289 -36.43417740]
[25.03843117 -24.01586151]
[33.69835663 -28.97044182]
[42.68502045 -33.32070160]
[51.95627213 -37.04514313]
[61.46856308 -40.12521362]
[71.17712402 -42.54538727]
[81.03620911 -44.29324341]
[90.99928284 -45.35953522]
[101.01924133 -45.73822784]
[111.04866028 -45.42655182]
[121.03999329 -44.42499542]
[130.94581604 -42.73732758]
[140.71902466 -40.37057495]
[150.31309509 -37.33499146]
[159.68228149 -33.64402390]
[168.78184509 -29.31424332]
[177.56822205 -24.36526871]
[184.11610413 -37.86065292]
[190.66397095 -51.35603714]
[188.94738770 -67.66509247]
[202.37042236 -77.08603668]
[217.12460327 -69.92740631]
[218.03210449 -53.55338287]
[204.15934753 -44.80816650]
[197.61148071 -31.31278229]
[191.06361389 -17.81739807]
[202.45468140 -8.05812359]
[214.78596497 -16.59858322]
[227.11724854 -25.13904190]
[239.44853210 -33.67950058]
[240.71113586 -49.26602936]
[251.73390198 -60.35803986]
[267.31222534 -61.71822739]
[280.09048462 -52.70434952]
[284.03518677 -37.57248688]
[277.28375244 -23.46743965]
[263.02404785 -17.04918098]
[247.98899841 -21.34821701]
[235.65771484 -12.80775738]
[223.32643127 -4.26729870]
[210.99514771 4.27315998]
[224.12702942 22.67786980]
[234.24526978 42.83930588]
[241.12260437 64.26947021]
[244.61004639 86.45234680]
[244.64001465 108.85636139]
[259.54446411 110.54675293]
[274.44891357 112.23715210]
[289.35336304 113.92755127]
[304.16479492 106.88815308]
[317.51141357 116.41705322]
[315.66336060 132.71174622]
[300.52172852 139.00962830]
[287.66296387 128.83200073]
[272.75851440 127.14160156]
[257.85406494 125.45120239]
[242.94961548 123.76080322]
[241.33703613 131.98460388]
[239.25173950 140.10142517]
[236.70072937 148.08412170]
[233.69252014 155.90600586]
[230.23718262 163.54092407]
[226.34626770 170.96331787]
[222.03279114 178.14839172]
[217.31117249 185.07208252]
[212.19721985 191.71125793]
[206.70802307 198.04371643]
[200.86193848 204.04826355]
[194.67852783 209.70481873]
[188.17846680 214.99447632]
[181.38349915 219.89953613]
[174.31634521 224.40357971]
[167.00064087 228.49157715]
[159.46084595 232.14982605]
[151.72219849 235.36611938]
[143.81056213 238.12966919]
[135.75239563 240.43125916]
[127.57466125 242.26316833]
[119.30470276 243.61927795]
[110.97018433 244.49507141]
[102.59897614 244.88760376]
[94.21907806 244.79554749]
[85.85850525 244.21923828]
[77.54523468 243.16058350]
[69.30706024 241.62313843]
[61.17154312 239.61204529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 24]
[4 23]
[5 22]
[7 20]
[8 19]
[10 17]
[11 16]
[30 39]
[31 38]
[32 37]
[57 67]
[58 66]
[59 65]
[83 92]
[84 91]
[85 90]
[93 107]
[94 106]
[95 105]
[96 104]
[112 123]
[113 122]
[114 121]
[115 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
