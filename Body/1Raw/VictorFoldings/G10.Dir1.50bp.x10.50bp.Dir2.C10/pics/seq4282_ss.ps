%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUGAAUUCGAACAGCAUACCCCCGAUUCCGCUACGACCAACUCAUACACCUCCUAUGAAAxxxxxxxxxxACAAAAAGGAUUAGACUGAACCGAAUUGGUAUAUAGUUUAAACAAAACGAAUGAUUUCGACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[99.31546783 282.21118164]
[99.31546783 267.21118164]
[99.31546783 252.21118164]
[99.31546783 237.21118164]
[99.31546783 222.21118164]
[99.31546783 207.21118164]
[99.31546783 192.21118164]
[99.31546783 177.21118164]
[99.31546783 162.21118164]
[99.31546783 147.21118164]
[74.89997864 137.39035034]
[60.57948303 116.80129242]
[59.94342422 92.96678162]
[71.85290527 73.75126648]
[63.08669662 61.57942581]
[54.32048798 49.40758896]
[45.55428314 37.23575211]
[36.78807449 25.06391525]
[28.02186775 12.89207840]
[10.73490047 10.42263412]
[0.75232506 -3.49254656]
[3.82936954 -19.99678040]
[-5.18816042 -31.98361206]
[-14.20569038 -43.97044373]
[-26.93108368 -36.01143646]
[-40.29356766 -29.17583656]
[-54.19421387 -23.51425362]
[-68.53009796 -19.06860542]
[-83.19509125 -15.87180805]
[-98.08060455 -13.94752789]
[-113.07643890 -13.31001282]
[-128.07156372 -13.96398163]
[-142.95495605 -15.90459442]
[-157.61643982 -19.11748123]
[-171.94743347 -23.57885742]
[-185.84185791 -29.25568771]
[-199.19683838 -36.10594559]
[-211.91348267 -44.07891464]
[-223.89765930 -53.11555862]
[-235.06063843 -63.14897919]
[-245.31974792 -74.10488892]
[-254.59906006 -85.90216827]
[-262.82986450 -98.45347595]
[-269.95120239 -111.66588593]
[-275.91040039 -125.44157410]
[-280.66326904 -139.67855835]
[-284.17468262 -154.27140808]
[-286.41857910 -169.11210632]
[-287.37841797 -184.09077454]
[-287.04702759 -199.09649658]
[-285.42691040 -214.01817322]
[-282.53002930 -228.74534607]
[-278.37783813 -243.16896057]
[-273.00106812 -257.18225098]
[-266.43957520 -270.68142700]
[-258.74191284 -283.56658936]
[-249.96504211 -295.74230957]
[-240.17396545 -307.11843872]
[-229.44119263 -317.61077881]
[-217.84617615 -327.14160156]
[-205.47476196 -335.64038086]
[-192.41853333 -343.04421997]
[-178.77415466 -349.29821777]
[-164.64266968 -354.35614014]
[-150.12869263 -358.18051147]
[-135.33967590 -360.74301147]
[-120.38512421 -362.02471924]
[-105.37574768 -362.01608276]
[-90.42267609 -360.71716309]
[-75.63662720 -358.13763428]
[-61.12705612 -354.29656982]
[-47.00139999 -349.22238159]
[-33.36424255 -342.95266724]
[-20.31654549 -335.53384399]
[-7.95491552 -327.02081299]
[3.62912774 -317.47662354]
[14.34981728 -306.97195435]
[24.12777901 -295.58456421]
[32.89062119 -283.39874268]
[40.57346344 -270.50473022]
[47.11942673 -256.99798584]
[52.48004150 -242.97854614]
[56.61562347 -228.55015564]
[59.49555206 -213.81965637]
[61.09850311 -198.89611816]
[61.41260910 -183.89002991]
[60.43554688 -168.91249084]
[58.17454910 -154.07438660]
[54.64635849 -139.48558044]
[49.87709045 -125.25407410]
[43.90206146 -111.48525238]
[36.76550674 -98.28105164]
[28.52026367 -85.73921967]
[19.22738075 -73.95262909]
[8.95565605 -63.00853729]
[-2.21885753 -52.98797607]
[6.79867220 -41.00114441]
[15.81620216 -29.01431084]
[28.73892212 -29.00457382]
[39.44456100 -21.42410088]
[43.87539673 -8.87038898]
[40.19370270 4.12587166]
[48.95991135 16.29770851]
[57.72612000 28.46954536]
[66.49232483 40.64138031]
[75.25852966 52.81321716]
[84.02474213 64.98505402]
[93.43753052 61.09258652]
[103.78807831 59.75099564]
[114.38039398 61.18123627]
[124.46840668 65.41342926]
[133.30839539 72.27622223]
[140.21348572 81.40060425]
[144.60610962 92.23841095]
[146.06460571 104.09471893]
[144.36012268 116.17228699]
[158.37684631 121.51379395]
[172.39355469 126.85530853]
[186.41026306 132.19682312]
[201.57954407 126.97451019]
[215.04258728 135.69953918]
[216.47169495 151.67881775]
[204.77058411 162.65440369]
[188.91534424 160.20677185]
[181.06875610 146.21353149]
[167.05204773 140.87202454]
[153.03532410 135.53050232]
[139.01861572 130.18899536]
[132.84283447 134.44453430]
[142.58279419 145.85212708]
[152.32275391 157.25971985]
[162.06272888 168.66731262]
[173.76441956 178.05189514]
[173.21969604 193.04200745]
[160.86772156 201.55252075]
[146.66673279 196.72221375]
[142.06539917 182.44685364]
[134.87402344 169.28311157]
[127.68264008 156.11936951]
[120.49125671 142.95562744]
[114.31546783 147.21118164]
[114.31546783 162.21118164]
[114.31546783 177.21118164]
[114.31546783 192.21118164]
[114.31546783 207.21118164]
[114.31546783 222.21118164]
[114.31546783 237.21118164]
[114.31546783 252.21118164]
[114.31546783 267.21118164]
[114.31546783 282.21118164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[14 107]
[15 106]
[16 105]
[17 104]
[18 103]
[19 102]
[22 98]
[23 97]
[24 96]
[116 128]
[117 127]
[118 126]
[119 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
