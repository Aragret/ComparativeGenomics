%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUACCAUCACCCUCUACAUCACCGCCCCGACCUUAGCUCUCACCAUCGCUCUUCUACUAUGAxxxxxxxxxxACUAAUCAUAUUUUAUAUCUUCUUCGAAACCACACUUAUCCCCACCUUGGCUAUCAUCACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[92.50000000 77.50000000]
[92.50000000 62.50000000]
[92.50000000 47.50000000]
[92.50000000 32.50000000]
[92.50000000 17.50000000]
[92.50000000 2.49999952]
[92.50000000 -12.50000000]
[92.50000000 -27.50000000]
[92.50000000 -42.50000000]
[77.51332092 -43.19281387]
[62.57462311 -44.57703018]
[47.71579742 -46.64968491]
[32.96855164 -49.40636444]
[18.36435127 -52.84118271]
[3.93436646 -56.94680786]
[-10.29060841 -61.71448135]
[-24.28021812 -67.13402557]
[-38.00460434 -73.19387817]
[-51.43448257 -79.88110352]
[-64.54119110 -87.18143463]
[-77.29676056 -95.07928467]
[-89.67396545 -103.55780792]
[-101.64640045 -112.59890747]
[-113.18850708 -122.18328857]
[-124.27565765 -132.29049683]
[-134.88420105 -142.89897156]
[-144.99147034 -153.98605347]
[-154.57592773 -165.52810669]
[-163.61709595 -177.50047302]
[-172.09570312 -189.87763977]
[-179.99363708 -202.63314819]
[-187.29403687 -215.73982239]
[-193.98135376 -229.16964722]
[-200.04129028 -242.89399719]
[-205.46092224 -256.88357544]
[-210.22868347 -271.10852051]
[-214.33439636 -285.53848267]
[-217.76930237 -300.14266968]
[-220.52607727 -314.88989258]
[-222.59881592 -329.74871826]
[-223.98312378 -344.68737793]
[-224.67604065 -359.67407227]
[-224.67607117 -374.67675781]
[-223.98321533 -389.66342163]
[-222.59898376 -404.60211182]
[-220.52629089 -419.46093750]
[-217.76957703 -434.20819092]
[-214.33473206 -448.81237793]
[-210.22908020 -463.24237061]
[-205.46138000 -477.46731567]
[-200.04180908 -491.45690918]
[-193.98191833 -505.18130493]
[-187.29466248 -518.61114502]
[-179.99430847 -531.71783447]
[-172.09643555 -544.47338867]
[-163.61788940 -556.85058594]
[-154.57676697 -568.82299805]
[-144.99235535 -580.36511230]
[-134.88511658 -591.45220947]
[-124.27663422 -602.06072998]
[-113.18952179 -612.16796875]
[-101.64745331 -621.75244141]
[-89.67505646 -630.79357910]
[-77.29788971 -639.27215576]
[-64.54235077 -647.17004395]
[-51.43567276 -654.47045898]
[-38.00582123 -661.15771484]
[-24.28145790 -667.21765137]
[-10.29187298 -672.63720703]
[3.93308282 -677.40496826]
[18.36305046 -681.51062012]
[32.96723557 -684.94549561]
[47.71447372 -687.70227051]
[62.57329178 -689.77496338]
[77.51197815 -691.15924072]
[92.49865723 -691.85211182]
[107.50134277 -691.85211182]
[122.48802185 -691.15924072]
[137.42671204 -689.77496338]
[152.28552246 -687.70227051]
[167.03276062 -684.94549561]
[181.63694763 -681.51062012]
[196.06690979 -677.40496826]
[210.29187012 -672.63720703]
[224.28146362 -667.21765137]
[238.00582886 -661.15771484]
[251.43566895 -654.47045898]
[264.54235840 -647.17004395]
[277.29788208 -639.27215576]
[289.67504883 -630.79357910]
[301.64746094 -621.75244141]
[313.18951416 -612.16796875]
[324.27664185 -602.06072998]
[334.88513184 -591.45220947]
[344.99234009 -580.36511230]
[354.57675171 -568.82299805]
[363.61788940 -556.85058594]
[372.09643555 -544.47338867]
[379.99432373 -531.71783447]
[387.29467773 -518.61114502]
[393.98193359 -505.18130493]
[400.04180908 -491.45690918]
[405.46136475 -477.46731567]
[410.22906494 -463.24237061]
[414.33474731 -448.81237793]
[417.76959229 -434.20819092]
[420.52627563 -419.46093750]
[422.59896851 -404.60211182]
[423.98321533 -389.66342163]
[424.67605591 -374.67675781]
[424.67602539 -359.67407227]
[423.98312378 -344.68737793]
[422.59881592 -329.74871826]
[420.52606201 -314.88989258]
[417.76931763 -300.14266968]
[414.33438110 -285.53848267]
[410.22866821 -271.10852051]
[405.46090698 -256.88357544]
[400.04129028 -242.89399719]
[393.98135376 -229.16964722]
[387.29403687 -215.73982239]
[379.99362183 -202.63314819]
[372.09570312 -189.87763977]
[363.61709595 -177.50047302]
[354.57592773 -165.52810669]
[344.99148560 -153.98605347]
[334.88418579 -142.89897156]
[324.27566528 -132.29049683]
[313.18850708 -122.18328857]
[301.64639282 -112.59890747]
[289.67398071 -103.55780792]
[277.29675293 -95.07928467]
[264.54119873 -87.18143463]
[251.43447876 -79.88110352]
[238.00460815 -73.19387817]
[224.28021240 -67.13402557]
[210.29060364 -61.71448135]
[196.06562805 -56.94680786]
[181.63565063 -52.84118271]
[167.03144836 -49.40636444]
[152.28419495 -46.64968491]
[137.42536926 -44.57703018]
[122.48667908 -43.19281387]
[107.50000000 -42.50000000]
[107.50000000 -27.50000000]
[107.50000000 -12.50000000]
[107.50000000 2.49999952]
[107.50000000 17.50000000]
[107.50000000 32.50000000]
[107.50000000 47.50000000]
[107.50000000 62.50000000]
[107.50000000 77.50000000]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 154]
[2 153]
[3 152]
[4 151]
[5 150]
[6 149]
[7 148]
[8 147]
[9 146]
[10 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
