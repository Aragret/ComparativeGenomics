%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGCCCCGACCUUAGCUCUCACCAUCGCUCUUCUACUAUGAACCCCCCUCCCCAUACCCAACCCxxxxxxxxxxGGCGUAAAUCUAACUUUCUUCCCACAACACUUUCUCGGCCUAUCCGGAAUGCCCCGACGUUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[249.82214355 56.63912582]
[235.55630493 61.27437973]
[221.29045105 65.90963745]
[207.02461243 70.54489136]
[192.75875854 75.18014526]
[178.49290466 79.81539917]
[164.22706604 84.45065308]
[149.96121216 89.08591461]
[135.69537354 93.72116852]
[121.42951965 98.35642242]
[107.16367340 102.99167633]
[113.24810028 111.30390167]
[114.23169708 123.02371979]
[108.83057404 135.64151001]
[96.85359955 146.26423645]
[84.12393188 154.19869995]
[71.39427185 162.13316345]
[74.25644684 177.03860474]
[71.53703308 191.97076416]
[63.60380173 204.91017151]
[51.52965927 214.10688782]
[36.94753647 218.31712341]
[21.82954407 216.97148132]
[8.22026539 210.25196838]
[-2.03975415 199.06730652]
[-7.56293249 184.93016052]
[-7.60230494 169.75245667]
[-2.15254641 155.58683777]
[8.04930782 144.34910583]
[21.62354088 137.55906677]
[36.73434830 136.13502502]
[51.33811951 140.26954651]
[63.45981216 149.40348816]
[76.18947601 141.46903992]
[88.91913605 133.53457642]
[87.70835876 126.13294983]
[73.67748260 120.82875061]
[85.28680420 111.32970428]
[84.07602692 103.92808533]
[69.48165131 100.46337128]
[54.88727951 96.99864960]
[41.56605911 105.50280762]
[26.15140915 102.01509857]
[17.78856850 88.60471344]
[21.43906021 73.22779846]
[34.93711472 65.00720978]
[50.27457047 68.82006836]
[58.35199356 82.40428162]
[72.94636536 85.86899567]
[87.54074097 89.33370972]
[102.52841949 88.72583008]
[116.79426575 84.09057617]
[131.06011963 79.45531464]
[145.32595825 74.82006073]
[159.59181213 70.18480682]
[173.85765076 65.54955292]
[188.12350464 60.91429901]
[202.38935852 56.27904510]
[216.65519714 51.64378738]
[230.92105103 47.00853348]
[245.18688965 42.37327957]
[242.19252014 30.08935165]
[240.04537964 17.62957764]
[238.75547791 5.05232000]
[238.32885742 -7.58351183]
[238.76748657 -20.21873665]
[240.06925964 -32.79417419]
[242.22808838 -45.25093460]
[245.23379517 -57.53067398]
[249.07231140 -69.57588959]
[253.72561646 -81.33016968]
[259.17190552 -92.73847961]
[265.38562012 -103.74739075]
[272.33764648 -114.30535889]
[279.99542236 -124.36295319]
[288.32302856 -133.87307739]
[297.28146362 -142.79121399]
[306.82873535 -151.07560730]
[316.92010498 -158.68748474]
[327.50833130 -165.59120178]
[338.54376221 -171.75445557]
[349.97473145 -177.14842224]
[361.74768066 -181.74781799]
[373.80743408 -185.53117371]
[386.09756470 -188.48077393]
[398.56042480 -190.58282471]
[411.13769531 -191.82751465]
[423.77044678 -192.20903015]
[436.39950562 -191.72563171]
[448.96572876 -190.37959290]
[461.41027832 -188.17726135]
[473.67486572 -185.12896729]
[485.70202637 -181.24900818]
[497.43548584 -176.55558777]
[508.82028198 -171.07072449]
[519.80310059 -164.82009888]
[530.33245850 -157.83305359]
[540.35919189 -150.14230347]
[549.83624268 -141.78390503]
[558.71923828 -132.79701233]
[566.96667480 -123.22375488]
[574.53985596 -113.10897064]
[581.40344238 -102.50006104]
[587.52520752 -91.44671631]
[592.87652588 -80.00073242]
[597.43237305 -68.21571350]
[601.17144775 -56.14688110]
[604.07629395 -43.85076141]
[606.13323975 -31.38494873]
[607.33270264 -18.80783653]
[607.66918945 -6.17833185]
[607.14105225 6.44441319]
[605.75079346 19.00127983]
[603.50500488 31.43345833]
[618.02618408 35.19324875]
[632.54730225 38.95303345]
[641.69995117 38.07493210]
[647.32318115 42.93896866]
[661.76513672 46.99228668]
[676.20709229 51.04560089]
[690.84252930 44.47416306]
[705.03881836 51.94718170]
[707.90570068 67.73199463]
[697.24407959 79.71984100]
[681.23254395 78.71467590]
[672.15380859 65.48757172]
[657.71179199 61.43426132]
[643.26983643 57.38094330]
[628.78753662 53.47419357]
[614.26635742 49.71440506]
[599.74523926 45.95461655]
[593.54815674 63.27917099]
[585.65704346 79.90131378]
[576.15008545 95.65586853]
[565.12164307 110.38624573]
[552.68115234 123.94603729]
[538.95220947 136.20045471]
[524.07104492 147.02767944]
[508.18545532 156.32002258]
[491.45318604 163.98507690]
[474.04040527 169.94659424]
[456.12005615 174.14521790]
[437.87017822 176.53913879]
[419.47201538 177.10444641]
[401.10836792 175.83538818]
[382.96166992 172.74447632]
[365.21221924 167.86227417]
[348.03637695 161.23719788]
[331.60482788 152.93492126]
[316.08087158 143.03782654]
[301.61877441 131.64413452]
[288.36230469 118.86694336]
[276.44323730 104.83309937]
[265.98007202 89.68194580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 61]
[2 60]
[3 59]
[4 58]
[5 57]
[6 56]
[7 55]
[8 54]
[9 53]
[10 52]
[11 51]
[15 35]
[16 34]
[17 33]
[39 50]
[40 49]
[41 48]
[114 131]
[115 130]
[116 129]
[118 128]
[119 127]
[120 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
