%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGGGGCCAUCAAUUUCAUCACAACAAUUAUCAAUAUAAAACCCCCUGCCAUAACCCAAUACxxxxxxxxxxUGCACAUCUGUACCCACGCCUUCUUCAAAGCCAUACUAUUUAUGUGCUCCGGGUCCAUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[86.82488251 267.34576416]
[89.41588593 248.13803101]
[89.72793579 233.14126587]
[90.03999329 218.14451599]
[90.35205078 203.14776611]
[90.66410828 188.15101624]
[90.97616577 173.15425110]
[91.28822327 158.15750122]
[91.60027313 143.16075134]
[91.91233063 128.16400146]
[92.22438812 113.16724396]
[86.59243011 99.26468658]
[75.93080902 88.71339417]
[65.26918030 78.16210938]
[54.60755539 67.61081696]
[43.28385544 77.45896912]
[31.25586510 86.43335724]
[18.59084511 94.48378754]
[5.35962725 101.56524658]
[-8.36379433 107.63813019]
[-22.50267029 112.66847992]
[-36.97793198 116.62815094]
[-51.70862579 119.49501038]
[-66.61237335 121.25301361]
[-81.60581970 121.89234161]
[-96.60511780 121.40941620]
[-111.52639008 119.80693054]
[-126.28617859 117.09385681]
[-140.80195618 113.28536224]
[-154.99252319 108.40274048]
[-168.77853394 102.47330475]
[-182.08287048 95.53022003]
[-194.83116150 87.61230469]
[-206.95208740 78.76383972]
[-218.37788391 69.03432465]
[-229.04463196 58.47814941]
[-238.89268494 47.15436554]
[-247.86695862 35.12629318]
[-255.91728210 22.46120453]
[-262.99862671 9.22992516]
[-269.07138062 -4.49355030]
[-274.10162354 -18.63247108]
[-278.06115723 -33.10776901]
[-280.92788696 -47.83848953]
[-282.68576050 -62.74224854]
[-283.32495117 -77.73570251]
[-282.84188843 -92.73500061]
[-281.23928833 -107.65625000]
[-278.52606201 -122.41601562]
[-274.71743774 -136.93174744]
[-269.83471680 -151.12228394]
[-263.90515137 -164.90823364]
[-256.96194458 -178.21252441]
[-249.04391479 -190.96073914]
[-240.19534302 -203.08158875]
[-230.46572876 -214.50729370]
[-219.90945435 -225.17395020]
[-208.58558655 -235.02189636]
[-196.55743408 -243.99607849]
[-183.89227295 -252.04629517]
[-170.66093445 -259.12750244]
[-156.93740845 -265.20016479]
[-142.79844666 -270.23025513]
[-128.32310486 -274.18966675]
[-113.59236908 -277.05627441]
[-98.68859100 -278.81402588]
[-83.69512939 -279.45306396]
[-68.69583893 -278.96987915]
[-53.77460098 -277.36712646]
[-39.01485443 -274.65380859]
[-24.49915314 -270.84506226]
[-10.30867004 -265.96218872]
[3.47723365 -260.03250122]
[16.78146172 -253.08918762]
[29.52960968 -245.17103577]
[41.65038300 -236.32237244]
[53.07600021 -226.59263611]
[63.74255753 -216.03628540]
[73.59040833 -204.71232605]
[82.56447601 -192.68409729]
[90.61457825 -180.01885986]
[97.69569397 -166.78746033]
[103.76821136 -153.06387329]
[108.79817963 -138.92486572]
[112.75746918 -124.44950104]
[115.62393951 -109.71872711]
[117.38155365 -94.81494141]
[118.02048492 -79.82147217]
[117.53715515 -64.82218933]
[115.93428040 -49.90096283]
[113.22081757 -35.14124298]
[109.41193390 -20.62557220]
[104.52893829 -6.43513298]
[98.59914398 7.35071898]
[91.65570068 20.65488625]
[83.73744965 33.40296173]
[74.88867188 45.52365875]
[65.15884399 56.94918823]
[75.82047272 67.50048065]
[86.48209381 78.05177307]
[97.14372253 88.60305786]
[87.59740448 77.03293610]
[85.99385834 62.11889267]
[92.86239624 48.78385162]
[105.93579865 41.42952728]
[120.89872742 42.48347855]
[132.81211853 51.59780884]
[137.74354553 65.76400757]
[134.06524658 80.30590057]
[148.70875549 83.55672455]
[163.35224915 86.80754852]
[178.02877808 89.90586853]
[192.73674011 92.85135651]
[207.44470215 95.79683685]
[222.15266418 98.74231720]
[236.24710083 91.07901764]
[250.96960449 97.45298767]
[255.02632141 112.97466278]
[245.30529785 125.73715210]
[229.26365662 125.95015717]
[219.20718384 113.45027924]
[204.49922180 110.50479889]
[189.79125977 107.55931854]
[175.08329773 104.61383057]
[167.86039734 106.39577484]
[160.10142517 101.45104980]
[145.45793152 98.20022583]
[130.81442261 94.94940186]
[124.91609955 99.58187103]
[136.20845032 109.45520782]
[147.50080872 119.32854462]
[161.63363647 124.35480499]
[169.05740356 137.38890076]
[166.17120361 152.10861206]
[154.37500000 161.37411499]
[139.39054871 160.69114685]
[128.48611450 150.39099121]
[126.95140839 135.46781921]
[120.03543091 122.15731812]
[113.11946106 108.84682465]
[107.22114563 113.47930145]
[106.90908813 128.47605896]
[106.59703064 143.47280884]
[106.28497314 158.46955872]
[105.97291565 173.46630859]
[105.66085815 188.46307373]
[105.34880829 203.45982361]
[105.03675079 218.45657349]
[104.72469330 233.45332336]
[104.41263580 248.45008850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[11 141]
[12 101]
[13 100]
[14 99]
[15 98]
[109 128]
[110 127]
[111 126]
[112 124]
[113 123]
[114 122]
[115 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
