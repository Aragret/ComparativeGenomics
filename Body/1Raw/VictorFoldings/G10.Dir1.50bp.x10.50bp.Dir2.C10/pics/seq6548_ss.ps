%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUCCCACCCUGGAGCCUCCGUAGACCUAACCAUCUUCUCCUUACACCUAGCAGGUGUCUCxxxxxxxxxxACGGGAUCAAACAACCCCCUAGGAAUCACCUCCCAUUCCGAUAAAAUCACCUUCCACCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[161.72192383 144.16561890]
[148.62876892 136.84651184]
[135.53561401 129.52740479]
[122.44245911 122.20830536]
[109.34930420 114.88919830]
[94.55660248 117.37431335]
[84.57387543 128.57008362]
[74.59114838 139.76585388]
[64.60842133 150.96160889]
[54.62569427 162.15737915]
[44.64296722 173.35314941]
[34.66024017 184.54890442]
[24.67751503 195.74467468]
[14.69478798 206.94044495]
[15.84863758 222.70256042]
[5.45594788 234.60917664]
[-10.31748295 235.59631348]
[-22.11355782 225.07832336]
[-22.93387413 209.29533386]
[-12.29175377 197.61111450]
[3.49902225 196.95771790]
[13.48174858 185.76194763]
[23.46447563 174.56617737]
[33.44720078 163.37042236]
[43.42992783 152.17465210]
[53.41265488 140.97888184]
[63.39538193 129.78312683]
[73.37810516 118.58735657]
[83.36083221 107.39158630]
[84.29646301 92.42079926]
[75.78536987 80.06922150]
[58.99243927 72.58742523]
[58.20579910 55.08367920]
[49.43959045 42.91184235]
[40.54724121 30.83185577]
[31.52971268 18.84502220]
[22.51218224 6.85819054]
[9.02778625 13.52206612]
[-5.44769144 17.59352303]
[-20.42086411 18.93531036]
[-35.38166046 17.50319099]
[-49.82070541 13.34739685]
[-63.24664688 6.61087132]
[-75.20290375 -2.47565126]
[-85.28316498 -13.60154533]
[-93.14521790 -26.38691139]
[-98.52254486 -40.39555359]
[-101.23339081 -55.14985657]
[-101.18686676 -70.14706421]
[-98.38602448 -84.87642670]
[-92.92769623 -98.83657837]
[-84.99913788 -111.55261993]
[-74.87160492 -122.59224701]
[-83.88913727 -134.57908630]
[-92.90666962 -146.56591797]
[-101.92419434 -158.55274963]
[-110.94172668 -170.53958130]
[-119.95925903 -182.52641296]
[-134.31301880 -191.54895020]
[-129.61659241 -207.83943176]
[-112.66265106 -207.83621216]
[-107.97242737 -191.54394531]
[-98.95489502 -179.55711365]
[-89.93736267 -167.57028198]
[-80.91983795 -155.58345032]
[-71.90230560 -143.59661865]
[-62.88477707 -131.60978699]
[-49.47046661 -138.28034973]
[-35.05497360 -142.37344360]
[-20.12885094 -143.74822998]
[-5.20029402 -142.35644531]
[9.22213650 -138.24403381]
[22.64685631 -131.54963684]
[34.61600494 -122.49992371]
[44.72106934 -111.40194702]
[52.61681366 -98.63267517]
[58.03309250 -84.62621307]
[60.78407288 -69.85906219]
[60.77462387 -54.83386612]
[58.00360489 -40.06234360]
[52.56394577 -26.04783630]
[44.63953781 -13.26816559]
[34.49901581 -2.15933943]
[43.51654434 9.82749367]
[52.53407669 21.81432533]
[59.11104584 25.29126358]
[61.61142731 34.14563751]
[70.37763977 46.31747437]
[82.30056763 48.58705521]
[89.69670105 58.71208191]
[88.13694763 71.55813599]
[96.64803314 83.90970612]
[106.78364563 84.90913391]
[114.44952393 91.71711731]
[116.66841125 101.79604340]
[129.76156616 109.11515045]
[142.85472107 116.43424988]
[155.94787598 123.75335693]
[169.04103088 131.07246399]
[173.95501709 130.34187317]
[178.47889709 131.32949829]
[182.07118225 133.68194580]
[196.97308350 131.96925354]
[211.87498474 130.25656128]
[226.77688599 128.54386902]
[241.67878723 126.83118439]
[249.18893433 113.25261688]
[263.26025391 106.71219635]
[278.48208618 109.72483826]
[289.00128174 121.13212585]
[290.77301025 136.54771423]
[283.11599731 150.04402161]
[268.97454834 156.43141174]
[253.78630066 153.25381470]
[243.39147949 141.73307800]
[228.48957825 143.44577026]
[213.58767700 145.15846252]
[198.68577576 146.87115479]
[183.78387451 148.58384705]
[197.44621277 154.77580261]
[209.76124573 163.33967590]
[220.32168579 173.99223328]
[228.77828979 186.38116455]
[234.85137939 200.09677124]
[238.34010315 214.68542480]
[239.12907410 229.66465759]
[237.19219971 244.53909302]
[232.59353638 258.81677246]
[225.48518372 272.02554321]
[216.10223389 283.72851562]
[204.75497437 293.53872681]
[191.81869507 301.13165283]
[177.72120667 306.25622559]
[162.92877197 308.74295044]
[147.93058777 308.50958252]
[133.22267151 305.56387329]
[119.29145813 300.00320435]
[106.59765625 292.01147461]
[95.56108856 281.85302734]
[86.54675293 269.86380005]
[79.85277557 256.44027710]
[75.70053101 242.02644348]
[74.22734833 227.09896851]
[75.48194122 212.15151978]
[79.42282867 197.67846680]
[85.91967010 184.15843201]
[94.75760651 172.03858948]
[105.64434814 161.71972656]
[118.21984863 153.54312134]
[132.06820679 147.77920532]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 99]
[2 98]
[3 97]
[4 96]
[5 95]
[6 29]
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[30 92]
[31 91]
[33 88]
[34 87]
[35 85]
[36 84]
[37 83]
[53 67]
[54 66]
[55 65]
[56 64]
[57 63]
[58 62]
[102 119]
[103 118]
[104 117]
[105 116]
[106 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
