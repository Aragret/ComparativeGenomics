%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCCCAUUCUCCUCCUAUCCCUCAACCCCGACAUCAUUACCGGGUUUUCCUCUUGUAAAUxxxxxxxxxxAUUCCCCCCAUCCUUACCACCCUCGUUAACCCUAACAAAAAAAACUCAUACCCCCAUUAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[20.85962868 351.84643555]
[15.95807743 366.02297974]
[11.05652714 380.19955444]
[6.15497637 394.37609863]
[1.25342548 408.55267334]
[6.94651842 423.55160522]
[-1.35417759 437.28033447]
[-17.28107834 439.20733643]
[-28.61643028 427.85440063]
[-26.66471863 411.93051147]
[-12.92313290 403.65112305]
[-8.02158165 389.47454834]
[-3.12003112 375.29800415]
[1.78151977 361.12142944]
[6.68307066 346.94488525]
[-9.96311378 339.99569702]
[-26.09587288 331.92596436]
[-41.63988113 322.77334595]
[-56.52256393 312.58059692]
[-70.67443085 301.39529419]
[-84.02941132 289.26965332]
[-96.52513885 276.26028442]
[-108.10327911 262.42797852]
[-118.70977783 247.83726501]
[-128.29510498 232.55628967]
[-136.81449890 216.65640259]
[-144.22819519 200.21183777]
[-150.50157166 183.29937744]
[-155.60533142 165.99798584]
[-159.51567078 148.38845825]
[-162.21429443 130.55299377]
[-163.68862915 112.57486725]
[-163.93179321 94.53803253]
[-162.94262695 76.52669525]
[-160.72576904 58.62496567]
[-157.29156494 40.91641235]
[-152.65605164 23.48372650]
[-166.88284302 18.72991180]
[-181.10961914 13.97609806]
[-195.33639526 9.22228241]
[-206.78205872 19.46397972]
[-221.81842041 22.59500885]
[-236.40077209 17.77313805]
[-246.60655212 6.29542685]
[-249.69042969 -8.75067711]
[-244.82287598 -23.31784821]
[-233.31323242 -33.48759079]
[-218.25753784 -36.52429581]
[-203.70568848 -31.61110306]
[-193.57208252 -20.06963730]
[-190.58258057 -5.00449610]
[-176.35580444 -0.25068149]
[-162.12902832 4.50313330]
[-147.90223694 9.25694847]
[-142.85905457 -3.48576045]
[-137.16137695 -15.94958019]
[-130.82455444 -28.10092163]
[-123.86568451 -39.90703964]
[-116.30349731 -51.33611298]
[-108.15838623 -62.35734558]
[-99.45230103 -72.94103241]
[-90.20870972 -83.05865479]
[-80.45250702 -92.68294525]
[-70.20999146 -101.78795624]
[-59.50877762 -110.34916687]
[-48.37769318 -118.34349823]
[-36.84673691 -125.74940491]
[-24.94698715 -132.54692078]
[-12.71051311 -138.71774292]
[-0.17028898 -144.24523926]
[12.63988876 -149.11450195]
[25.68549728 -153.31240845]
[38.93137741 -156.82765198]
[52.34183884 -159.65077209]
[65.88072968 -161.77413940]
[79.51157379 -163.19203186]
[93.19763947 -163.90065002]
[106.90203094 -163.89805603]
[120.58782196 -163.18428040]
[134.21812439 -161.76123047]
[147.75622559 -159.63275146]
[161.16561890 -156.80458069]
[174.41017151 -153.28433228]
[187.45419312 -149.08148193]
[200.26252747 -144.20738220]
[212.80065918 -138.67517090]
[225.03480530 -132.49972534]
[236.93199158 -125.69770813]
[248.46014404 -118.28744507]
[259.58819580 -110.28890991]
[270.28619385 -101.72366333]
[280.52526855 -92.61477661]
[290.27783203 -82.98680878]
[299.51760864 -72.86569214]
[308.21969604 -62.27872086]
[316.36062622 -51.25441360]
[323.91851807 -39.82248306]
[330.87292480 -28.01373863]
[337.20513916 -15.86000443]
[342.89813232 -3.39403367]
[347.93649292 9.35057831]
[352.30670166 22.33948708]
[355.99694824 35.53768539]
[358.99728394 48.90960693]
[361.29965210 62.41921234]
[376.20153809 60.70652390]
[391.10345459 58.99383163]
[406.00537109 57.28114319]
[418.84887695 47.08428955]
[433.99990845 53.35952377]
[435.87234497 69.65142059]
[422.54000854 79.20027924]
[407.71804810 72.18304443]
[392.81613159 73.89573669]
[377.91424561 75.60842896]
[363.01232910 77.32111359]
[363.85705566 91.67659760]
[363.91882324 106.05677032]
[363.19741821 120.41897583]
[361.69506836 134.72059631]
[359.41613770 148.91917419]
[356.36746216 162.97261047]
[352.55804443 176.83917236]
[347.99920654 190.47773743]
[342.70446777 203.84780884]
[336.68954468 216.90974426]
[329.97225952 229.62475586]
[322.57260132 241.95513916]
[314.51248169 253.86428833]
[305.81582642 265.31686401]
[296.50845337 276.27890015]
[286.61798096 286.71783447]
[276.17373657 296.60275269]
[265.20672607 305.90423584]
[253.74949646 314.59475708]
[241.83602905 322.64852905]
[229.50169373 330.04159546]
[216.78309631 336.75204468]
[203.71794128 342.75997925]
[190.34503174 348.04757690]
[176.70404053 352.59912109]
[162.83543396 356.40112305]
[148.78038025 359.44229126]
[134.58056641 361.71359253]
[120.27816010 363.20831299]
[105.91556549 363.92202759]
[91.53542328 363.85256958]
[77.18039703 363.00018311]
[62.89308929 361.36737061]
[48.71588516 358.95898438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[37 54]
[38 53]
[39 52]
[40 51]
[105 116]
[106 115]
[107 114]
[108 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
