%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUAAAACCCCCUGCCAUAACCCAAUACCAAACGCCCCUCUUCGUCUGAUCCGUCCUAAUCAxxxxxxxxxxUAGGACUUCUAACAGCCCUAGACCUCAACUACCUAACCAACAAACUUAAAAUAAAAUCCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[4.21307755 276.78146362]
[-3.41989279 289.69415283]
[-3.78168464 305.51123047]
[-16.91877174 312.53021240]
[-24.55174255 325.44293213]
[-32.18471146 338.35562134]
[-39.81768036 351.26831055]
[-47.45065308 364.18099976]
[-55.08362198 377.09371948]
[-49.71609879 391.78125000]
[-55.09387207 406.46502686]
[-68.67772675 414.21182251]
[-84.05377960 411.36383057]
[-93.96192932 399.26580811]
[-93.72384644 383.63003540]
[-83.45195770 371.83926392]
[-67.99632263 369.46075439]
[-60.36334991 356.54803467]
[-52.73038101 343.63534546]
[-45.09740829 330.72265625]
[-37.46443939 317.80993652]
[-29.83147049 304.89724731]
[-30.01563835 290.00378418]
[-16.33259010 282.06118774]
[-8.69962025 269.14849854]
[-22.48995209 259.44601440]
[-35.41884232 248.62219238]
[-47.39536667 236.75315857]
[-58.33530045 223.92236328]
[-68.16170502 210.22006226]
[-76.80546570 195.74261475]
[-84.20580292 180.59182739]
[-90.31066895 164.87425232]
[-95.07712555 148.70045471]
[-98.47166443 132.18414307]
[-100.47039795 115.44149017]
[-101.05928040 98.59024811]
[-100.23416138 81.74891663]
[-98.00084686 65.03593445]
[-94.37504578 48.56885147]
[-89.38225555 32.46347046]
[-103.31296539 26.90153503]
[-117.24368286 21.33959770]
[-130.29670715 29.72996140]
[-145.78660583 28.81192589]
[-157.75718689 18.93849182]
[-161.60552979 3.90619731]
[-155.85186768 -10.50473404]
[-142.70858765 -18.75300598]
[-127.22956848 -17.66698647]
[-115.36679077 -7.66427660]
[-111.68174744 7.40888071]
[-97.75102997 12.97081757]
[-83.82031250 18.53275490]
[-71.78437805 -4.48419571]
[-56.88170242 -25.75751305]
[-39.36097717 -44.93218231]
[-19.51459503 -61.68822479]
[2.32625055 -75.74600983]
[25.79707718 -86.87093353]
[50.50620651 -94.87735748]
[76.04129028 -99.63166046]
[74.81067657 -114.58109283]
[73.58006287 -129.53053284]
[72.34944916 -144.47996521]
[71.11883545 -159.42939758]
[69.88822174 -174.37882996]
[55.40383530 -178.99087524]
[43.79018021 -188.79859924]
[36.81825256 -202.30639648]
[35.55122757 -217.45443726]
[40.18231583 -231.93273926]
[50.00530624 -243.53349304]
[63.52226639 -250.48764038]
[78.67195892 -251.73474121]
[93.14416504 -247.08460999]
[104.73197937 -237.24636841]
[111.66834259 -223.72026062]
[112.89550781 -208.56895447]
[108.22634888 -194.10287476]
[98.37287140 -182.52801514]
[84.83766174 -175.60945129]
[86.06827545 -160.66001892]
[87.29888153 -145.71057129]
[88.52949524 -130.76113892]
[89.76010895 -115.81170654]
[90.99072266 -100.86227417]
[102.04011536 -101.05387115]
[113.08333588 -100.63809967]
[124.08704376 -99.61621857]
[135.01797485 -97.99131775]
[145.84313965 -95.76830292]
[156.52980042 -92.95388794]
[167.04570007 -89.55657196]
[177.35905457 -85.58663177]
[187.43870544 -81.05604553]
[197.25422668 -75.97850800]
[206.77593994 -70.36936188]
[215.97509766 -64.24553680]
[224.82391357 -57.62554169]
[233.29563904 -50.52937698]
[241.36468506 -42.97847366]
[249.00669861 -34.99564743]
[256.19857788 -26.60501289]
[262.91857910 -17.83191490]
[269.14642334 -8.70285702]
[274.86328125 0.75458199]
[280.05191040 10.51183224]
[284.69659424 20.53941727]
[288.78335571 30.80704689]
[292.29980469 41.28370285]
[295.23535156 51.93773270]
[297.58108521 62.73695755]
[299.32995605 73.64875031]
[300.47668457 84.64014435]
[301.01776123 95.67794037]
[300.95159912 106.72879028]
[300.27838135 117.75931549]
[299.00012207 128.73619080]
[297.12072754 139.62626648]
[294.64584351 150.39662170]
[291.58294678 161.01473999]
[287.94128418 171.44853210]
[283.73187256 181.66648865]
[278.96743774 191.63774109]
[273.66235352 201.33216858]
[267.83264160 210.72047424]
[261.49594116 219.77429199]
[254.67135620 228.46629333]
[247.37953186 236.77021790]
[239.64248657 244.66096497]
[231.48359680 252.11470032]
[222.92750549 259.10891724]
[214.00006104 265.62246704]
[204.72824097 271.63571167]
[195.14002991 277.13043213]
[185.26441956 282.09008789]
[175.13124084 286.49963379]
[164.77108765 290.34579468]
[154.21527100 293.61694336]
[143.49566650 296.30319214]
[132.64466858 298.39642334]
[121.69505310 299.89031982]
[110.67990875 300.78036499]
[99.63249207 301.06387329]
[88.58618927 300.73999023]
[77.57436371 299.80969238]
[66.63028717 298.27578735]
[55.78701401 296.14288330]
[45.07730865 293.41748047]
[34.53351593 290.10775757]
[24.18749237 286.22375488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[4 22]
[5 21]
[6 20]
[7 19]
[8 18]
[9 17]
[41 54]
[42 53]
[43 52]
[62 87]
[63 86]
[64 85]
[65 84]
[66 83]
[67 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
