%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUCAUCACUAGACAUCGUACUACACGACACGUACUACGUUGUAGCCCACUUCCACUAUGUxxxxxxxxxxUCGAAACCGCAAACAUAUCAUACACAAACGCCUGAGCCCUAUCUAUUACUCUCAUCGCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[152.50447083 334.22769165]
[151.56884766 319.25689697]
[150.63320923 304.28610229]
[149.69758606 289.31530762]
[148.76194763 274.34451294]
[147.82632446 259.37371826]
[146.89070129 244.40293884]
[142.73280334 229.99072266]
[135.55030823 216.82214355]
[128.36779785 203.65356445]
[121.18528748 190.48497009]
[114.00277710 177.31639099]
[106.82026672 164.14781189]
[99.63775635 150.97923279]
[84.77471161 148.95689392]
[74.33489990 159.72770691]
[70.86511230 175.75556946]
[55.16915512 180.50625610]
[43.39368057 169.09265137]
[47.65229034 153.25610352]
[63.56409073 149.28788757]
[74.00389862 138.51707458]
[70.14186096 132.08787537]
[62.41777420 119.22947693]
[58.55573273 112.80027771]
[44.14351654 116.95816040]
[29.73130035 121.11605072]
[15.31908321 125.27394104]
[6.33646679 138.56649780]
[-9.66736031 139.68769836]
[-20.41563034 127.77743530]
[-17.66319275 111.97225952]
[-3.52147913 104.39653778]
[11.16119576 110.86172485]
[25.57341194 106.70383453]
[39.98563004 102.54594421]
[54.39784622 98.38806152]
[64.51021576 83.05869293]
[78.34092712 75.07426453]
[91.96816254 74.51922607]
[91.65611267 59.52247238]
[91.34405518 44.52571869]
[79.92304993 54.24994659]
[64.95693970 53.24212265]
[54.94280624 42.07444382]
[55.56620026 27.08740425]
[66.47319794 16.78995514]
[81.47129822 17.02851486]
[92.04587555 27.66906357]
[93.60345459 12.75015163]
[95.16103363 -2.16876078]
[96.71861267 -17.08767319]
[82.07098389 -20.40177727]
[67.91815186 -25.42507935]
[54.45878983 -32.08706284]
[41.88185501 -40.29419708]
[30.36390495 -49.93127441]
[20.06663704 -60.86299896]
[11.13460636 -72.93591309]
[3.69320512 -85.98052216]
[-2.15310121 -99.81370544]
[-6.32223988 -114.24127197]
[-8.75568199 -129.06068420]
[-9.41926670 -144.06387329]
[-8.30367756 -159.04025269]
[-5.42457581 -173.77955627]
[-0.82238001 -188.07487488]
[5.43830252 -201.72552490]
[13.26958179 -214.53987122]
[22.56151962 -226.33801270]
[33.18367004 -236.95434570]
[44.98691559 -246.23979187]
[57.80555344 -254.06404114]
[71.45964050 -260.31723022]
[85.75748444 -264.91159058]
[100.49836731 -267.78259277]
[115.47534943 -268.88995361]
[130.47817993 -268.21813965]
[145.29624939 -265.77658081]
[159.72152710 -261.59951782]
[173.55149841 -255.74562073]
[186.59202576 -248.29705811]
[198.66003418 -239.35839844]
[209.58610535 -229.05513000]
[219.21685791 -217.53189087]
[227.41708374 -204.95045471]
[234.07168579 -191.48744202]
[239.08721924 -177.33184814]
[242.39328003 -162.68240356]
[243.94346619 -147.74475098]
[243.71600342 -132.72860718]
[241.71409607 -117.84477234]
[237.96583557 -103.30218506]
[232.52384949 -89.30500031]
[225.46453857 -76.04972076]
[216.88699341 -63.72242355]
[206.91163635 -52.49617767]
[195.67851257 -42.52857208]
[183.34530640 -33.95953751]
[170.08515930 -26.90937233]
[156.08421326 -21.47704887]
[141.53904724 -17.73882866]
[126.65382385 -15.74718952]
[111.63752747 -15.53009224]
[110.07994843 -0.61117989]
[108.52236938 14.30773258]
[106.96478271 29.22664452]
[106.34080505 44.21366119]
[106.65286255 59.21041489]
[106.96492004 74.20716858]
[129.83949280 85.85743713]
[135.87815857 116.10248566]
[112.80634308 143.79672241]
[119.98884583 156.96530151]
[127.17135620 170.13388062]
[134.35386658 183.30245972]
[141.53637695 196.47105408]
[148.71888733 209.63963318]
[155.90139771 222.80821228]
[156.59002686 207.82403564]
[161.22309875 193.55746460]
[169.46960449 181.02770996]
[180.74046326 171.12983704]
[194.23049927 164.57095337]
[208.97599792 161.81958008]
[223.92359924 163.07231140]
[238.00546265 168.23960876]
[250.21562195 176.95237732]
[259.68179321 188.58815002]
[265.72775269 202.31573486]
[267.92156982 217.15443420]
[266.10656738 232.04421997]
[260.41235352 245.92138672]
[251.24571228 257.79458618]
[239.26153564 266.81564331]
[225.31590271 272.34008789]
[210.40507507 273.97326660]
[195.59425354 271.59851074]
[181.94148254 265.38546753]
[170.42208862 255.77799988]
[161.86149597 243.46731567]
[162.79711914 258.43811035]
[163.73274231 273.40890503]
[164.66838074 288.37969971]
[165.60400391 303.35046387]
[166.53962708 318.32125854]
[167.47526550 333.29205322]
[176.99060059 346.64834595]
[169.93614197 361.45263672]
[153.56893921 362.47552490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 147]
[2 146]
[3 145]
[4 144]
[5 143]
[6 142]
[7 141]
[8 119]
[9 118]
[10 117]
[11 116]
[12 115]
[13 114]
[14 113]
[15 22]
[16 21]
[25 37]
[26 36]
[27 35]
[28 34]
[40 110]
[41 109]
[42 108]
[49 107]
[50 106]
[51 105]
[52 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
