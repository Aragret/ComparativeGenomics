%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUCAAAUCAAUUGGCCACCAAUGGUACUGAACCUACGAGUACACCGACUACGGCGGACUAxxxxxxxxxxCACAACCACCCACAGCCUAAUUAUUAGCAUCAUCCCUCUACUAUUUUUUAACCAAAUCAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[190.38148499 378.65649414]
[190.38148499 363.65649414]
[190.38148499 348.65649414]
[190.38148499 333.65649414]
[190.38148499 318.65649414]
[190.38148499 303.65649414]
[190.38148499 288.65649414]
[190.38148499 273.65649414]
[190.38148499 258.65649414]
[190.38148499 243.65650940]
[185.77592468 229.38104248]
[177.00971985 217.20919800]
[168.11737061 205.12921143]
[154.28308105 199.61000061]
[152.16990662 183.93054199]
[143.15237427 171.94371033]
[134.13484192 159.95687866]
[127.55786896 156.47994995]
[125.05748749 147.62556458]
[116.29128265 135.45373535]
[107.52507019 123.28189850]
[98.75886536 111.11006165]
[89.86651611 99.03007507]
[80.84898376 87.04324341]
[71.83145142 75.05641174]
[57.12055588 78.78000641]
[42.14515305 76.59361267]
[29.18276024 68.86122131]
[20.19268417 56.78785324]
[16.51989937 42.23190689]
[18.69388580 27.41910362]
[26.35255051 14.60215664]
[17.33502007 2.61532378]
[8.31749058 -9.37150860]
[-0.70003915 -21.35834122]
[-15.51999092 -14.54480648]
[-31.46734810 -11.14984417]
[-47.76452637 -11.33608437]
[-63.61752701 -15.09161186]
[-78.25461578 -22.23068237]
[-90.96388245 -32.40291214]
[-101.12787628 -45.11046600]
[-108.25361633 -59.73243332]
[-111.99646759 -75.55515289]
[-112.17684174 -91.80705261]
[-108.78878784 -107.69627380]
[-102.00016022 -122.44924927]
[-92.14429474 -135.34837341]
[-101.89194489 -146.74938965]
[-111.63959503 -158.15042114]
[-126.48842621 -163.61145020]
[-128.87828064 -178.31307983]
[-143.72711182 -183.77410889]
[-146.11697388 -198.47573853]
[-155.86462402 -209.87675476]
[-165.61227417 -221.27778625]
[-181.24557495 -226.23077393]
[-184.50808716 -242.30210876]
[-172.04360962 -252.95899963]
[-156.67454529 -247.23852539]
[-154.21125793 -231.02543640]
[-144.46360779 -219.62442017]
[-134.71595764 -208.22338867]
[-120.56433868 -203.57783508]
[-117.47726440 -188.06072998]
[-103.32565308 -183.41517639]
[-100.23857880 -167.89807129]
[-90.49092865 -156.49703979]
[-80.74327087 -145.09602356]
[-68.74721527 -151.85612488]
[-55.69701385 -156.26292419]
[-42.04965591 -158.16032410]
[-28.28336143 -157.48017883]
[-14.88082218 -154.24465942]
[-2.31229639 -148.56558228]
[8.98090553 -140.64051819]
[18.60191345 -130.74595642]
[26.21224022 -119.22761536]
[31.54369736 -106.48838043]
[34.40783691 -92.97421265]
[34.70262527 -79.15855408]
[32.41606140 -65.52571106]
[27.62666130 -52.55389786]
[20.50077629 -40.69845581]
[11.28679371 -30.37587166]
[20.30432320 -18.38903809]
[29.32185364 -6.40220594]
[38.33938217 5.58462667]
[52.77701569 1.77883279]
[67.61198425 3.79603434]
[80.57947540 11.35969734]
[89.68775940 23.34413719]
[93.52407837 37.94195557]
[91.47372437 52.93658829]
[83.81829071 66.03887939]
[92.83581543 78.02571106]
[101.85334778 90.01254272]
[108.87654877 94.08178711]
[110.93070221 102.34385681]
[119.69690704 114.51569366]
[128.46311951 126.68753052]
[137.22932434 138.85935974]
[146.12167358 150.93934631]
[155.13920593 162.92617798]
[164.15673828 174.91302490]
[178.63601685 181.28961182]
[180.10420227 196.11169434]
[187.81579590 201.12997437]
[189.18154907 208.44299316]
[197.94775391 220.61483765]
[197.04960632 205.64175415]
[199.03454590 190.77366638]
[203.82916260 176.56057739]
[211.25605774 163.52827454]
[221.04054260 152.15882874]
[232.82061768 142.87284851]
[246.16055298 136.01380920]
[260.56686401 131.83547974]
[275.50659180 130.49240112]
[290.42715454 132.03425598]
[304.77655029 136.40400696]
[318.02398682 143.44001770]
[329.67938232 152.88201904]
[339.31164551 164.38070679]
[346.56439209 177.51074219]
[351.16934204 191.78639221]
[352.95617676 206.67958069]
[351.85876465 221.63938904]
[347.91772461 236.11239624]
[341.27883911 249.56324768]
[332.18765259 261.49432373]
[320.98052979 271.46429443]
[308.07202148 279.10437012]
[293.93966675 284.13186646]
[279.10620117 286.36087036]
[264.12036133 285.70886230]
[249.53654480 282.20001221]
[235.89419556 275.96411133]
[223.69801331 267.23184204]
[213.39912415 256.32620239]
[205.38148499 243.65650940]
[205.38148499 258.65649414]
[205.38148499 273.65649414]
[205.38148499 288.65649414]
[205.38148499 303.65649414]
[205.38148499 318.65649414]
[205.38148499 333.65649414]
[205.38148499 348.65649414]
[205.38148499 363.65649414]
[205.38148499 378.65649414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 110]
[12 109]
[13 107]
[15 105]
[16 104]
[17 103]
[19 102]
[20 101]
[21 100]
[22 99]
[23 97]
[24 96]
[25 95]
[32 88]
[33 87]
[34 86]
[35 85]
[48 69]
[49 68]
[50 67]
[52 65]
[54 63]
[55 62]
[56 61]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
