%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAUAUACCAAAUCUCUCCCUCACUAAACGUAAGCCUUCUCCUCACUCUCUCAAUCUUAUCxxxxxxxxxxACCAACACACUAACCAUAUACCAAUGAUGGCGCGAUGUAACACGAGAAAGCACAUACCAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 477.15570068]
[92.50000000 462.15570068]
[92.50000000 447.15570068]
[92.50000000 432.15570068]
[92.50000000 417.15570068]
[92.50000000 402.15570068]
[92.50000000 387.15570068]
[92.50000000 372.15570068]
[92.50000000 357.15570068]
[92.50000000 342.15570068]
[77.84561920 339.06619263]
[64.14855957 332.99484253]
[52.00850296 324.20477295]
[41.95753098 313.07824707]
[34.43677902 300.10000610]
[29.77709579 285.83605957]
[28.18446350 270.90917969]
[29.73092079 255.97158813]
[34.35128784 241.67642212]
[41.84592056 228.64932251]
[51.88933182 217.46089172]
[64.04432678 208.60183716]
[77.78102875 202.46133423]
[92.50000000 199.31002808]
[92.50000000 184.31002808]
[92.50000000 169.31002808]
[92.50000000 154.31002808]
[78.66166687 150.50251770]
[66.28570557 143.23396301]
[56.22026062 133.00247192]
[49.15514374 120.50925446]
[45.57454300 106.61048889]
[45.72384262 92.25868988]
[49.59281540 78.43741608]
[56.91630936 66.09387970]
[67.19242859 56.07400894]
[79.71692657 49.06449127]
[93.63147736 45.54569626]
[93.94353485 30.54894447]
[94.25558472 15.55219078]
[91.36415863 9.49024868]
[91.93158722 3.75358415]
[94.90552521 -0.05839780]
[95.84115601 -15.02918911]
[96.77678680 -29.99998093]
[89.91533661 -44.25589752]
[98.43144226 -56.47576904]
[99.36706543 -71.44656372]
[84.56622314 -73.96987915]
[70.11744690 -78.05215454]
[56.18445969 -83.64714050]
[42.92512512 -90.69143677]
[30.48968315 -99.10523224]
[19.01904106 -108.79319000]
[8.64316654 -119.64553070]
[-0.52037215 -131.53929138]
[-8.36774540 -144.33972168]
[-14.81003761 -157.90176392]
[-19.77425003 -172.07174683]
[-23.20413780 -186.68913269]
[-25.06083488 -201.58828735]
[-25.32330513 -216.60038757]
[-23.98857307 -231.55534363]
[-21.07176399 -246.28369141]
[-16.60592651 -260.61856079]
[-10.64166164 -274.39752197]
[-3.24654937 -287.46444702]
[5.49561739 -299.67126465]
[15.48578358 -310.87969971]
[26.61075401 -320.96270752]
[38.74447250 -329.80606079]
[51.74945450 -337.30957031]
[65.47834778 -343.38818359]
[79.77558136 -347.97305298]
[94.47917175 -351.01220703]
[109.42250824 -352.47125244]
[124.43627930 -352.33358765]
[139.35035706 -350.60086060]
[153.99575806 -347.29260254]
[168.20652771 -342.44638062]
[181.82167053 -336.11706543]
[194.68688965 -328.37640381]
[206.65643311 -319.31207275]
[217.59468079 -309.02679443]
[227.37767029 -297.63708496]
[235.89456177 -285.27203369]
[243.04885864 -272.07174683]
[248.75950623 -258.18572998]
[252.96177673 -243.77140808]
[255.60806274 -228.99205017]
[256.66836548 -214.01515198]
[256.13070679 -199.01037598]
[254.00117493 -184.14776611]
[250.30386353 -169.59573364]
[245.08068848 -155.51913452]
[238.39083862 -142.07748413]
[230.31010437 -129.42308044]
[220.93003845 -117.69932556]
[210.35694885 -107.03903961]
[198.71060181 -97.56301880]
[186.12300110 -89.37863159]
[172.73674011 -82.57861328]
[158.70352173 -77.24001312]
[144.18232727 -73.42332458]
[129.33770752 -71.17179871]
[114.33786011 -70.51093292]
[113.40222931 -55.54014206]
[120.33059692 -42.35503769]
[111.74757385 -29.06435204]
[110.81195068 -14.09356117]
[109.87631989 0.87723064]
[109.25234222 15.86424637]
[108.94028473 30.86100006]
[108.62822723 45.85775375]
[123.48450470 50.45903397]
[136.45095825 59.04690170]
[146.48420715 70.93029022]
[152.77682495 85.15292358]
[154.82247925 100.57032013]
[152.45652771 115.94181824]
[145.86938477 130.03047180]
[135.59109497 141.70254517]
[122.44878387 150.01881409]
[107.50000000 154.31002808]
[107.50000000 169.31002808]
[107.50000000 184.31002808]
[107.50000000 199.31002808]
[122.21897125 202.46133423]
[135.95567322 208.60183716]
[148.11067200 217.46089172]
[158.15408325 228.64932251]
[165.64871216 241.67642212]
[170.26907349 255.97158813]
[171.81553650 270.90917969]
[170.22290039 285.83605957]
[165.56321716 300.10000610]
[158.04246521 313.07824707]
[147.99150085 324.20477295]
[135.85144043 332.99484253]
[122.15438080 339.06619263]
[107.50000000 342.15570068]
[107.50000000 357.15570068]
[107.50000000 372.15570068]
[107.50000000 387.15570068]
[107.50000000 402.15570068]
[107.50000000 417.15570068]
[107.50000000 432.15570068]
[107.50000000 447.15570068]
[107.50000000 462.15570068]
[107.50000000 477.15570068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[24 127]
[25 126]
[26 125]
[27 124]
[38 114]
[39 113]
[40 112]
[43 111]
[44 110]
[45 109]
[47 107]
[48 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
