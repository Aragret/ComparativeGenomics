%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACUAGCCCCCAUCUCAAUCAUAUACCAAAUCUCUCCCUCACUAAACGUAAGCCUUCUCCUCxxxxxxxxxxCUGAGCCUUUUACCACUCCAGCCUAGCCCCUACCCCCCAAUUAGGAGGGCACUGGCCCCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 274.09155273]
[92.50000000 259.09155273]
[92.50000000 244.09156799]
[92.50000000 229.09156799]
[92.50000000 214.09156799]
[92.50000000 199.09156799]
[92.50000000 184.09156799]
[92.50000000 169.09156799]
[92.50000000 154.09156799]
[92.50000000 139.09156799]
[73.95446014 130.10034180]
[62.39175797 113.03919220]
[60.91184998 92.48222351]
[69.91150665 73.94077301]
[86.97792053 62.38582993]
[84.82933807 47.54050827]
[82.68075562 32.69518661]
[80.53218079 17.84986305]
[78.23130798 3.02737999]
[75.77837372 -11.77069855]
[60.85658264 -10.19813347]
[45.86783218 -9.51231003]
[30.86477852 -9.71563530]
[15.90011883 -10.80739689]
[1.02641869 -12.78375912]
[-13.70407772 -15.63778019]
[-28.23962975 -19.35943413]
[-42.52917862 -23.93564987]
[-56.52253342 -29.35035324]
[-70.17053986 -35.58452606]
[-83.42525482 -42.61626434]
[-96.24013519 -50.42087555]
[-108.57015228 -58.97094345]
[-120.37199402 -68.23643494]
[-131.60421753 -78.18480682]
[-142.22737122 -88.78110504]
[-152.20413208 -99.98812103]
[-161.49946594 -111.76648712]
[-170.08070374 -124.07482910]
[-177.91770935 -136.86991882]
[-184.98297119 -150.10679626]
[-191.25166321 -163.73898315]
[-196.70175171 -177.71859741]
[-201.31411743 -191.99652100]
[-205.07254028 -206.52259827]
[-207.96382141 -221.24583435]
[-209.97781372 -236.11448669]
[-211.10745239 -251.07632446]
[-211.34873962 -266.07882690]
[-210.70083618 -281.06924438]
[-209.16604614 -295.99499512]
[-206.74972534 -310.80358887]
[-203.46037292 -325.44302368]
[-199.30955505 -339.86187744]
[-194.31184387 -354.00952148]
[-188.48478699 -367.83624268]
[-181.84884644 -381.29348755]
[-174.42735291 -394.33398438]
[-166.24636841 -406.91192627]
[-157.33462524 -418.98312378]
[-147.72341919 -430.50515747]
[-137.44653320 -441.43762207]
[-126.54003143 -451.74203491]
[-115.04225159 -461.38226318]
[-102.99356842 -470.32443237]
[-90.43630219 -478.53710938]
[-77.41456604 -485.99145508]
[-63.97410202 -492.66131592]
[-50.16211319 -498.52322388]
[-36.02711868 -503.55657959]
[-21.61876678 -507.74374390]
[-6.98766899 -511.07000732]
[7.81478167 -513.52368164]
[22.73659134 -515.09606934]
[37.72534561 -515.78179932]
[52.72839737 -515.57830811]
[67.69304657 -514.48645020]
[82.56673431 -512.50994873]
[97.29720306 -509.65579224]
[111.83271790 -505.93402100]
[126.12223053 -501.35766602]
[140.11553955 -495.94284058]
[153.76348877 -489.70855713]
[167.01814270 -482.67669678]
[179.83294678 -474.87197876]
[192.16288757 -466.32180786]
[203.96466064 -457.05621338]
[215.19680786 -447.10772705]
[225.81985474 -436.51135254]
[235.79652405 -425.30422974]
[245.09175110 -413.52578735]
[253.67288208 -401.21737671]
[261.50976562 -388.42221069]
[268.57492065 -375.18527222]
[274.84347534 -361.55303955]
[280.29345703 -347.57339478]
[284.90570068 -333.29541016]
[288.66400146 -318.76928711]
[291.55514526 -304.04605103]
[293.56900024 -289.17736816]
[294.69851685 -274.21551514]
[294.93966675 -259.21301270]
[294.29165649 -244.22259521]
[292.75671387 -229.29687500]
[290.34027100 -214.48831177]
[287.05078125 -199.84889221]
[282.89984131 -185.43006897]
[277.90200806 -171.28247070]
[272.07482910 -157.45579529]
[265.43878174 -143.99861145]
[258.01718140 -130.95817566]
[249.83607483 -118.38031769]
[240.92422485 -106.30920410]
[231.31291199 -94.78723145]
[221.03591919 -83.85487366]
[210.12933350 -73.55053711]
[198.63146973 -63.91041565]
[186.58271790 -54.96836472]
[174.02537537 -46.75579453]
[161.00357056 -39.30155563]
[147.56304932 -32.63182831]
[133.75100708 -26.77004623]
[119.61597443 -21.73679352]
[105.20758057 -17.54975128]
[90.57645416 -14.22362709]
[93.02938080 0.57445210]
[97.25195312 6.69671583]
[95.37750244 15.70128345]
[97.52608490 30.54660606]
[99.67465973 45.39192963]
[101.82324219 60.23725128]
[111.30610657 61.83493042]
[120.12905884 65.66020966]
[127.77713776 71.48980713]
[133.80392456 78.98346710]
[137.85768127 87.70381165]
[139.70178223 97.14185333]
[139.22859192 106.74671173]
[136.46572876 115.95778656]
[131.57446289 124.23744202]
[124.84027863 131.10243225]
[116.65622711 136.15205383]
[107.50000000 139.09156799]
[107.50000000 154.09156799]
[107.50000000 169.09156799]
[107.50000000 184.09156799]
[107.50000000 199.09156799]
[107.50000000 214.09156799]
[107.50000000 229.09156799]
[107.50000000 244.09156799]
[107.50000000 259.09155273]
[107.50000000 274.09155273]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[15 131]
[16 130]
[17 129]
[18 128]
[19 126]
[20 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
