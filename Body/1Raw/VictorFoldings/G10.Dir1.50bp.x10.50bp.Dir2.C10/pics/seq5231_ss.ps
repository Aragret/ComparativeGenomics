%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUACGCAAAAUCUUAGCAUACUCCUCAAUUACCCACAUAGGAUGAAUAAUAGCAGUUCUACxxxxxxxxxxACACUAUGCUUAGGCGCUAUCACCACUCUGUUCGCAGCAGUCUGCGCCCUUACACAAAAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[112.73771667 288.47668457]
[112.73771667 273.47668457]
[112.73771667 258.47668457]
[112.73771667 243.47666931]
[112.73771667 228.47666931]
[112.73771667 213.47666931]
[112.73771667 198.47666931]
[112.73771667 183.47666931]
[112.73771667 168.47666931]
[112.73771667 153.47666931]
[75.75307465 141.64497375]
[60.23479462 111.54069519]
[69.26789856 84.05425262]
[57.76609802 74.42572784]
[46.26429367 64.79720306]
[44.59752655 79.70430756]
[32.01834488 87.87524414]
[17.72111320 83.33771515]
[12.15595150 69.40828705]
[19.39054108 56.26824951]
[34.13634872 53.52173233]
[23.69653511 42.75092316]
[8.53598881 38.22671890]
[5.23376513 23.70278931]
[-5.20604753 12.93198013]
[-15.64585972 2.16117144]
[-26.08567238 -8.60963726]
[-36.52548599 -19.38044548]
[-46.96529770 -30.15125465]
[-66.66371155 -28.11681747]
[-82.13241577 -45.17282104]
[-96.99546814 -47.19515228]
[-111.85851288 -49.21748734]
[-126.72155762 -51.23982239]
[-134.69892883 -38.26749420]
[-147.26661682 -29.66672897]
[-162.24719238 -26.92766380]
[-177.04516602 -30.52486038]
[-189.09671021 -39.83507919]
[-196.31382751 -53.24526978]
[-197.44609070 -68.43203735]
[-192.29734802 -82.76417542]
[-181.75962830 -93.75856781]
[-167.65867615 -99.51035309]
[-152.43756104 -99.02301788]
[-138.73342896 -92.38098145]
[-128.92060852 -80.73501587]
[-124.69922638 -66.10286713]
[-109.83617401 -64.08053589]
[-94.97312927 -62.05820084]
[-80.11008453 -60.03586578]
[-70.60172272 -71.63720703]
[-75.50327301 -85.81376648]
[-90.44437408 -83.95437622]
[-105.44552612 -85.24243164]
[-119.85095215 -89.62164307]
[-133.03089905 -96.90055084]
[-144.40921021 -106.76097107]
[-153.48846436 -118.77183533]
[-159.87174988 -132.40808105]
[-163.28004456 -147.07359314]
[-163.56431580 -162.12725830]
[-160.71215820 -176.91099548]
[-154.84826660 -190.77851868]
[-146.22895813 -203.12361145]
[-135.23103333 -213.40658569]
[-122.33530426 -221.17791748]
[-108.10548401 -226.09788513]
[-93.16365814 -227.95140076]
[-78.16301727 -226.65744019]
[-63.75931549 -222.27256775]
[-50.58222961 -214.98846436]
[-39.20780182 -205.12358093]
[-30.13327217 -193.10914612]
[-23.75534248 -179.47038269]
[-20.35282898 -164.80352783]
[-20.07447243 -149.74975586]
[-22.93244171 -134.96714783]
[-28.80180168 -121.10192108]
[-37.42596436 -108.76022339]
[-48.42792511 -98.48157501]
[-61.32671738 -90.71531677]
[-56.42516708 -76.53875732]
[-34.97606659 -62.55769348]
[-36.19448853 -40.59106827]
[-25.75467682 -29.82025719]
[-15.31486416 -19.04944992]
[-4.87505150 -8.27864075]
[5.56476116 2.49216747]
[16.00457382 13.26297569]
[30.41839409 17.01677895]
[34.46734238 32.31111145]
[44.90715408 43.08192062]
[55.89281845 53.29539871]
[67.39462280 62.92392349]
[78.89642334 72.55245209]
[88.61671448 63.01967621]
[102.48896027 57.30979538]
[118.88632202 57.14430618]
[135.50610352 63.52527618]
[149.68972778 76.48544312]
[163.91651917 71.73162842]
[170.74893188 57.48053360]
[185.68475342 52.31362152]
[199.86280823 59.29632950]
[204.87152100 74.28594208]
[197.73930359 88.38938141]
[182.69757080 93.23933411]
[168.67033386 85.95840454]
[154.44354248 90.71221924]
[154.67756653 98.20856476]
[155.14561462 113.20126343]
[155.37963867 120.69760895]
[169.87522888 124.55477142]
[184.37083435 128.41192627]
[198.86642456 132.26908875]
[213.36201477 136.12625122]
[229.04542542 131.33430481]
[240.85087585 142.71688843]
[236.63394165 158.56459045]
[220.73263550 162.57463074]
[209.50486755 150.62184143]
[195.00926208 146.76467896]
[180.51367188 142.90753174]
[166.01806641 139.05036926]
[151.52247620 135.19320679]
[145.57627869 139.76406860]
[156.44815063 150.09860229]
[167.32000732 160.43315125]
[178.19186401 170.76768494]
[191.97290039 176.69081116]
[198.78540039 190.05455017]
[195.48283386 204.68647766]
[183.59059143 213.82836914]
[168.60144043 213.25779724]
[157.43859863 203.23828125]
[155.25805664 188.39701843]
[148.06666565 175.23329163]
[140.87528992 162.06954956]
[133.68389893 148.90580750]
[127.73771667 153.47666931]
[127.73771667 168.47666931]
[127.73771667 183.47666931]
[127.73771667 198.47666931]
[127.73771667 213.47666931]
[127.73771667 228.47666931]
[127.73771667 243.47666931]
[127.73771667 258.47668457]
[127.73771667 273.47668457]
[127.73771667 288.47668457]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[13 96]
[14 95]
[15 94]
[21 93]
[22 92]
[24 90]
[25 89]
[26 88]
[27 87]
[28 86]
[29 85]
[31 51]
[32 50]
[33 49]
[34 48]
[52 83]
[53 82]
[101 110]
[102 109]
[113 126]
[114 125]
[115 124]
[116 123]
[117 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
