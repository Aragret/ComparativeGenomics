%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGCAGGCACAUACUUCCUAUUCUACACCCUAGUAGGCUCCCUUCCCCUACUCAUCGCACUAxxxxxxxxxxUAAACGCUAAUCCAAGCCUCACCCCACUACUAGGCCUCCUCCUAGCAGCAGCAGGCAAAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[85.47160339 488.26895142]
[88.06260681 469.06121826]
[88.37466431 454.06448364]
[88.68672180 439.06771851]
[88.99877167 424.07095337]
[89.31082916 409.07421875]
[89.62288666 394.07745361]
[89.93494415 379.08068848]
[90.24700165 364.08395386]
[90.55905914 349.08718872]
[90.87110901 334.09045410]
[75.85669708 330.85336304]
[61.75202942 324.76138306]
[49.09442520 316.04467773]
[38.36646271 305.03332520]
[29.97757912 292.14505005]
[24.24843407 277.86917114]
[21.39865875 262.74816895]
[21.53844452 247.35694885]
[24.66426849 232.28111267]
[30.65897560 218.09457397]
[39.29615402 205.33775330]
[50.24869156 194.49700928]
[63.10116577 185.98602295]
[77.36560822 180.13012695]
[92.50000000 177.15376282]
[92.50000000 162.15376282]
[92.50000000 147.15376282]
[78.30194092 142.53140259]
[66.22589111 133.74960327]
[57.45285416 121.66718292]
[52.84081268 107.46577454]
[52.84081268 92.53422546]
[57.45285416 78.33281708]
[66.22589111 66.25039673]
[78.30194092 57.46858978]
[92.50000000 52.84624481]
[92.50000000 37.84624481]
[92.50000000 22.84624481]
[92.50000000 7.84624481]
[92.50000000 -7.15375519]
[92.50000000 -22.15375519]
[91.09769440 -37.08806229]
[88.30537415 -51.82587051]
[85.51304626 -66.56367493]
[82.72072601 -81.30148315]
[79.92839813 -96.03928375]
[64.93370056 -95.15199280]
[49.94864273 -96.18952179]
[35.21930313 -99.13483429]
[20.98754501 -103.93955994]
[7.48706818 -110.52480316]
[-5.06043673 -118.78243256]
[-16.44892883 -128.57684326]
[-26.49139977 -139.74722290]
[-35.02294159 -152.11010742]
[-41.90345764 -165.46252441]
[-47.01996613 -179.58518982]
[-50.28844833 -194.24620056]
[-51.65523148 -209.20481873]
[-51.09787369 -224.21539307]
[-48.62553024 -239.03146362]
[-44.27879333 -253.40971375]
[-38.12903976 -267.11407471]
[-30.27725983 -279.91943359]
[-20.85238266 -291.61560059]
[-10.00917530 -302.01046753]
[2.07430720 -310.93334961]
[15.19964409 -318.23770142]
[29.15130424 -323.80364990]
[43.70019150 -327.53970337]
[58.60739517 -329.38458252]
[73.62812805 -329.30798340]
[88.51573944 -327.31112671]
[103.02575684 -323.42681885]
[116.91991425 -317.71887207]
[129.97004700 -310.28097534]
[141.96188354 -301.23529053]
[152.69848633 -290.73037720]
[162.00355530 -278.93869019]
[169.72430420 -266.05386353]
[175.73393250 -252.28750610]
[179.93377686 -237.86566162]
[182.25485229 -223.02514648]
[182.65905762 -208.00965881]
[181.13973999 -193.06575012]
[177.72187805 -178.43884277]
[172.46156311 -164.36911011]
[165.44520569 -151.08758545]
[156.78797913 -138.81236267]
[146.63209534 -127.74502563]
[135.14427185 -118.06729126]
[122.51318359 -109.93809509]
[108.94623566 -103.49090576]
[94.66620636 -98.83161163]
[97.45852661 -84.09380341]
[100.25085449 -69.35600281]
[103.04317474 -54.61819458]
[105.83550262 -39.88038635]
[113.31525421 -52.88243484]
[126.56826782 -59.90793610]
[141.52735901 -58.80085373]
[153.60177612 -49.90093231]
[159.08602905 -35.93945312]
[156.29707336 -21.20100784]
[146.09080505 -10.20864201]
[131.59939575 -6.33577156]
[117.27008057 -10.77093124]
[107.50000000 -22.15375519]
[107.50000000 -7.15375519]
[107.50000000 7.84624481]
[107.50000000 22.84624481]
[107.50000000 37.84624481]
[107.50000000 52.84624481]
[121.69805908 57.46858978]
[133.77410889 66.25039673]
[142.54714966 78.33281708]
[147.15917969 92.53422546]
[147.15917969 107.46577454]
[142.54714966 121.66718292]
[133.77410889 133.74960327]
[121.69805908 142.53140259]
[107.50000000 147.15376282]
[107.50000000 162.15376282]
[107.50000000 177.15376282]
[121.90578461 179.91470337]
[135.55001831 185.28717041]
[147.96380615 193.08493042]
[158.72088623 203.03837585]
[167.45219421 214.80397034]
[173.85856628 227.97599792]
[177.72096252 242.10061646]
[178.90795898 256.69146729]
[177.38024902 271.24642944]
[173.19192505 285.26492310]
[166.48851013 298.26504517]
[157.50201416 309.80026245]
[146.54283142 319.47463989]
[133.98898315 326.95648193]
[120.27319336 331.98968506]
[105.86786652 334.40249634]
[105.55580902 349.39926147]
[105.24375153 364.39599609]
[104.93169403 379.39276123]
[104.61964417 394.38952637]
[104.30758667 409.38626099]
[103.99552917 424.38302612]
[103.68347168 439.37976074]
[103.37141418 454.37652588]
[103.05935669 469.37329102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[11 141]
[26 125]
[27 124]
[28 123]
[37 114]
[38 113]
[39 112]
[40 111]
[41 110]
[42 109]
[43 99]
[44 98]
[45 97]
[46 96]
[47 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
