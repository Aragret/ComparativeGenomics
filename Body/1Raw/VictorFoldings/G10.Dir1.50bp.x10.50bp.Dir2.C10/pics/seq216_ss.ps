%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAGCCACUUUCCACACAGACAUCAUAACAAAAAAUUUCCACCAAACCCCCCCUCCCCCGCxxxxxxxxxxUAAAAAGAGGCCUAACCCCUGUCUUUAGAUUUACAGUCCAAUGCUUCACUCAGCCAUUUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[102.09175110 298.70031738]
[101.77969360 283.70355225]
[101.46764374 268.70681763]
[101.15558624 253.71005249]
[100.84352875 238.71330261]
[100.53147125 223.71653748]
[100.21941376 208.71978760]
[99.90735626 193.72303772]
[99.59530640 178.72628784]
[96.80297852 163.98847961]
[91.60756683 149.91696167]
[86.41214752 135.84544373]
[80.48794556 98.07328796]
[68.04850769 89.69114685]
[55.60906982 81.30900574]
[39.84096146 80.01384735]
[33.60996246 66.48521423]
[21.17052460 58.10307312]
[8.73108387 49.72092819]
[-3.70835662 41.33878708]
[-13.25905609 52.92065430]
[-23.88299370 63.52666473]
[-35.48097229 73.05779266]
[-47.94470596 81.42504120]
[-61.15781784 88.55029297]
[-74.99694061 94.36701202]
[-89.33285522 98.82089233]
[-104.03170776 101.87035370]
[-118.95626068 103.48691559]
[-133.96716309 103.65547943]
[-148.92425537 102.37448120]
[-163.68788147 99.65588379]
[-178.12019348 95.52506256]
[-192.08645630 90.02058411]
[-205.45623779 83.19385529]
[-218.10473633 75.10860443]
[-229.91381836 65.84033203]
[-240.77325439 55.47557449]
[-250.58163452 44.11110306]
[-259.24737549 31.85303307]
[-266.68957520 18.81581116]
[-272.83874512 5.12116957]
[-277.63748169 -9.10302734]
[-281.04095459 -23.72396660]
[-283.01739502 -38.60513687]
[-283.54833984 -53.60758972]
[-282.62887573 -68.59124756]
[-280.26751709 -83.41621399]
[-276.48638916 -97.94406128]
[-271.32070923 -112.03915405]
[-264.81878662 -125.56987762]
[-257.04129028 -138.40989685]
[-248.06085205 -150.43933105]
[-237.96131897 -161.54585266]
[-226.83699036 -171.62576294]
[-214.79171753 -180.58496094]
[-201.93798828 -188.33978271]
[-188.39581299 -194.81781006]
[-174.29162598 -199.95857239]
[-159.75712585 -203.71408081]
[-144.92802429 -206.04925537]
[-129.94276428 -206.94229126]
[-114.94126892 -206.38484192]
[-100.06361389 -204.38214111]
[-85.44869995 -200.95286560]
[-71.23299408 -196.12904358]
[-57.54922867 -189.95570374]
[-44.52516556 -182.49050903]
[-32.28240967 -173.80313110]
[-20.93527031 -163.97471619]
[-10.58969593 -153.09700012]
[-1.34228361 -141.27156067]
[6.72062492 -128.60882568]
[13.52374649 -115.22700500]
[19.00355911 -101.25105286]
[23.10890198 -86.81147003]
[25.80143929 -72.04306030]
[27.05603218 -57.08373260]
[26.86096764 -42.07315445]
[25.21806717 -27.15147972]
[22.14266968 -12.45803165]
[17.66348839 1.86999929]
[11.82234859 15.69883156]
[4.67378664 28.89934540]
[17.11322784 37.28149033]
[29.55266762 45.66363144]
[41.99210739 54.04577637]
[56.87046051 54.74138260]
[63.99121094 68.86956787]
[76.43064880 77.25170898]
[88.87009430 85.63385010]
[80.92759705 72.90920258]
[82.43612671 57.98524857]
[92.76438904 47.10742950]
[107.59017944 44.82793045]
[120.70912933 52.10068893]
[126.63118744 65.88217163]
[122.87805939 80.40505219]
[111.01917267 89.59214783]
[125.59188080 86.03738403]
[140.16458130 82.48262024]
[154.73728943 78.92786407]
[158.96871948 64.16336060]
[170.02665710 53.50419617]
[184.93653870 49.81762695]
[199.68771362 54.09532928]
[210.31216431 65.18661499]
[213.95196533 80.10798645]
[209.62805176 94.84566498]
[198.50352478 105.43530273]
[183.57081604 109.02832794]
[168.84675598 104.65823364]
[158.29205322 93.50056458]
[143.71934509 97.05532837]
[129.14663696 100.61008453]
[114.57393646 104.16484833]
[111.05136871 110.78614044]
[125.82285309 113.39446259]
[127.90664673 128.24902344]
[114.42296600 134.82096863]
[104.00623322 124.02873230]
[100.48366547 130.65002441]
[105.67908478 144.72154236]
[110.87449646 158.79306030]
[114.04627991 144.13223267]
[121.95956421 131.38938904]
[133.69427490 122.04614258]
[147.88604736 117.18881226]
[162.88481140 117.38215637]
[176.94665527 122.60369873]
[188.43663025 132.24633789]
[196.01881409 145.18891907]
[198.81161499 159.92663574]
[196.49034119 174.74594116]
[189.32485962 187.92379761]
[178.14831543 197.92803955]
[164.26019287 203.59547424]
[149.27523804 204.26715088]
[134.93574524 199.86499023]
[122.90895844 190.90080261]
[114.59205627 178.41423035]
[114.90411377 193.41098022]
[115.21617126 208.40773010]
[115.52822876 223.40447998]
[115.84027863 238.40124512]
[116.15233612 253.39799500]
[116.46439362 268.39474487]
[116.77645111 283.39151001]
[117.08850861 298.38824463]
[119.67950439 317.59597778]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 124]
[11 123]
[12 122]
[13 91]
[14 90]
[15 89]
[17 87]
[18 86]
[19 85]
[20 84]
[99 116]
[100 115]
[101 114]
[102 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
