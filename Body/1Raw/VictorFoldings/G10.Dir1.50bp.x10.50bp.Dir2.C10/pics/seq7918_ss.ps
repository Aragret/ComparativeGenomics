%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCUCUACCCCCUCUAGAGCCCACUGUAAAGCUAACUUAGCAUUAACCUUUUAAGUUAAAGxxxxxxxxxxACGAGAAAACACCCUCAUGUUCAUACACCUAUCCCCCAUUCUCCUCCUAUCCCUCAACCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[24.67012215 205.57589722]
[15.26626492 217.26211548]
[5.86240768 228.94831848]
[-2.92943501 241.10165405]
[-11.08610058 253.69009399]
[-19.24276733 266.27853394]
[-27.39943123 278.86697388]
[-35.55609894 291.45541382]
[-43.71276474 304.04385376]
[-51.86943054 316.63229370]
[-47.10942841 331.52780151]
[-53.08551407 345.97842407]
[-66.97595978 353.16101074]
[-82.22212219 349.68414307]
[-91.62523651 337.18954468]
[-90.74542999 321.57672119]
[-79.99812317 310.21762085]
[-64.45787048 308.47561646]
[-56.30120468 295.88717651]
[-48.14453888 283.29873657]
[-39.98787308 270.71029663]
[-31.83120537 258.12185669]
[-23.67453957 245.53341675]
[-15.51787472 232.94497681]
[-30.51682281 233.12254333]
[-40.16938400 221.64091492]
[-37.41756821 206.89549255]
[-24.27350998 199.66819763]
[-10.34820175 205.24365234]
[-5.82380104 219.54446411]
[3.58005595 207.85824585]
[12.98391342 196.17204285]
[1.94805968 184.89215088]
[-7.63617516 172.35546875]
[-15.62690163 158.74760437]
[-21.90581894 144.26998901]
[-26.37997055 129.13699341]
[-28.98311996 113.57262421]
[-29.67672539 97.80731964]
[-28.45052338 82.07447815]
[-25.32266235 66.60701752]
[-39.56935501 61.91321182]
[-53.81604767 57.21941376]
[-68.06273651 52.52561188]
[-84.99844360 53.31192017]
[-90.44229126 37.25574112]
[-76.52059937 27.57984924]
[-63.36893845 38.27891922]
[-49.12224579 42.97272110]
[-34.87555313 47.66652298]
[-20.62886238 52.36032104]
[-5.08198166 23.98264503]
[17.00562286 0.33659339]
[8.08947277 -11.72583771]
[-0.82667840 -23.78826904]
[-9.74282932 -35.85070038]
[-18.65897942 -47.91313171]
[-34.27699661 -48.69514465]
[-45.70319366 -59.37109756]
[-47.54247284 -74.90013885]
[-38.92637634 -87.94992828]
[-23.92316818 -92.35874939]
[-9.61690044 -86.04489899]
[-2.76255679 -71.98957825]
[-6.59654903 -56.82928467]
[2.31960201 -44.76685333]
[11.23575306 -32.70442200]
[20.15190315 -20.64198875]
[29.06805420 -8.57955742]
[41.41753769 -15.71065712]
[54.47527695 -21.44282913]
[68.08340454 -25.70676994]
[82.07739258 -28.45092964]
[96.28807068 -29.64213371]
[110.54362488 -29.26597786]
[124.67170715 -27.32701111]
[138.50151062 -23.84867668]
[151.86584473 -18.87302399]
[164.60310364 -12.46021175]
[176.55934143 -4.68776703]
[187.58998108 4.35034037]
[197.56166077 14.54484177]
[206.35383606 25.77248573]
[213.86019897 37.89753342]
[227.42208862 31.48855591]
[240.98399353 25.07958031]
[254.54588318 18.67060471]
[268.10778809 12.26162910]
[280.35073853 3.59502196]
[290.90274048 -7.06588697]
[301.45477295 -17.72679520]
[312.00677490 -28.38770485]
[311.67504883 -44.18851089]
[322.67346191 -55.53796768]
[338.47689819 -55.70264053]
[349.70944214 -44.58483505]
[349.70700073 -28.78054428]
[338.47106934 -17.66617775]
[322.66769409 -17.83568954]
[312.11566162 -7.17478085]
[301.56365967 3.48612833]
[291.01165771 14.14703751]
[305.60235596 10.66687870]
[320.54092407 12.02299786]
[334.26641846 18.07369232]
[345.34460449 28.18671608]
[352.61798096 41.30533981]
[355.32644653 56.05878448]
[353.18707275 70.90543365]
[346.42337036 84.29394531]
[335.74206543 94.82532501]
[322.25930786 101.39913177]
[307.38388062 103.32846832]
[292.67019653 100.41172791]
[279.65570068 92.95368195]
[269.70025635 81.73364258]
[263.84414673 67.92400360]
[262.69931030 52.96775436]
[266.38534546 38.42770004]
[274.51675415 25.82352638]
[260.95486450 32.23250198]
[247.39295959 38.64147568]
[233.83106995 45.05045319]
[220.26918030 51.45942688]
[223.98660278 61.94500732]
[226.79174805 72.71058655]
[228.66398621 83.67696381]
[229.58950806 94.76344299]
[229.56152344 105.88845825]
[228.58023071 116.97013855]
[226.65286255 127.92695618]
[223.79357910 138.67829895]
[220.02343750 149.14503479]
[215.37017822 159.25016785]
[209.86802673 168.91934204]
[203.55747986 178.08142090]
[196.48497009 186.66897583]
[188.70251465 194.61883545]
[180.26741028 201.87249756]
[171.24169922 208.37657166]
[161.69178772 214.08323669]
[151.68795776 218.95046997]
[141.30381775 222.94248962]
[130.61575317 226.02990723]
[119.70243835 228.19000244]
[108.64414215 229.40687561]
[97.52224731 229.67158508]
[86.41857910 228.98219299]
[75.41484833 227.34375000]
[64.59201050 224.76832581]
[54.02970123 221.27487183]
[43.80564117 216.88906860]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 32]
[2 31]
[3 30]
[4 24]
[5 23]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[41 51]
[42 50]
[43 49]
[44 48]
[53 69]
[54 68]
[55 67]
[56 66]
[57 65]
[84 124]
[85 123]
[86 122]
[87 121]
[88 120]
[89 102]
[90 101]
[91 100]
[92 99]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
