%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGUUAACAGCUAAGCACCCUAAUCAACUGGCUUCAAUCUACUUCUCCCGCCGCCGGGAAAAAxxxxxxxxxxGCUAACUCAUGCCCCCAUGUCUAACAACAUGGCUUUCUCAACUUUUAAAGGAUAACAGCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[74.89001465 265.15759277]
[74.89001465 250.15757751]
[74.89001465 235.15757751]
[74.89001465 220.15757751]
[74.89001465 205.15757751]
[74.89001465 190.15757751]
[74.89001465 175.15757751]
[74.89001465 160.15757751]
[74.89001465 145.15757751]
[74.89001465 130.15757751]
[66.86301422 117.48606110]
[53.30111694 111.07708740]
[39.73922348 104.66811371]
[26.17732620 98.25913239]
[21.58515930 106.33082581]
[12.11172962 112.10124969]
[-1.31571984 118.78732300]
[-14.74316883 125.47340393]
[-12.73964596 140.48222351]
[-15.72048092 155.32786560]
[-23.36233330 168.40000916]
[-34.83627319 178.28067017]
[-48.89769363 183.89807129]
[-64.02131653 184.64286804]
[-78.56665039 180.43429565]
[-90.95590973 171.72883606]
[-99.84522247 159.47082520]
[-104.27032471 144.98989868]
[-103.75122070 129.85685730]
[-98.34422302 115.71319580]
[-88.63583374 104.09312439]
[-75.67915344 96.25711060]
[-60.87962341 93.05513000]
[-45.84258652 94.83452606]
[-32.19914627 101.40227509]
[-21.42924500 112.04595184]
[-8.00179482 105.35987854]
[5.42565393 98.67379761]
[8.93482113 84.09004974]
[0.01867042 72.02761841]
[-14.04125786 78.46714783]
[-29.12397575 81.85631561]
[-44.57592392 82.05064392]
[-59.72804642 79.04406738]
[-73.92474365 72.96903992]
[-86.55225372 64.09074402]
[-97.06517029 52.79550552]
[-105.01003265 39.57395935]
[-110.04483795 24.99977493]
[-111.95380402 9.70473766]
[-110.65658569 -5.64862633]
[-106.21167755 -20.39575005]
[-98.81376648 -33.89879227]
[-88.78521729 -45.57422256]
[-97.94715118 -57.45104599]
[-107.10908508 -69.32787323]
[-116.27101898 -81.20469666]
[-125.43295288 -93.08152008]
[-140.79737854 -98.81446838]
[-143.24749756 -115.02955627]
[-130.26283264 -125.04608154]
[-115.20091248 -118.55990601]
[-113.55612946 -102.24345398]
[-104.39419556 -90.36663055]
[-95.23226166 -78.48980713]
[-86.07032776 -66.61298370]
[-76.90839386 -54.73616028]
[-63.84375763 -61.18550491]
[-49.76356125 -64.95008087]
[-35.21361923 -65.88192749]
[-20.75835228 -63.94293976]
[-6.95889187 -59.20642090]
[5.64870167 -51.85429764]
[16.57426262 -42.17015076]
[25.39257622 -30.52827072]
[31.75993347 -17.37919044]
[35.42751694 -3.23224854]
[36.25113297 11.36413479]
[34.19687271 25.84372330]
[29.34251404 39.64442444]
[21.87456322 52.23011398]
[12.08110142 63.11146927]
[20.99725342 75.17390442]
[32.58629990 84.69723511]
[46.14819717 91.10621643]
[59.71009445 97.51519012]
[73.27198792 103.92416382]
[60.00660706 96.92205048]
[51.50905228 84.56116486]
[49.72238159 69.66794586]
[55.05513000 55.64789963]
[66.28791809 45.70684814]
[80.85224152 42.11791611]
[95.41782379 45.70175552]
[106.65408325 55.63888168]
[111.99164581 69.65633392]
[125.68226624 63.52716064]
[139.37289429 57.39798737]
[153.06352234 51.26881027]
[166.75415039 45.13963699]
[180.44477844 39.01046371]
[185.84333801 24.15681076]
[200.19895935 17.54684830]
[214.99470520 23.10215378]
[221.45252991 37.52685928]
[215.74110413 52.26304626]
[201.24891663 58.56799316]
[186.57394409 52.70108795]
[172.88331604 58.83026505]
[159.19268799 64.95943451]
[145.50207520 71.08860779]
[131.81144714 77.21778870]
[118.12081909 83.34696198]
[118.89048004 98.32720184]
[133.13717651 103.02100372]
[147.38386536 107.71479797]
[161.63055420 112.40859985]
[173.03294373 102.11875153]
[188.05596924 98.92436218]
[202.65852356 103.68472290]
[212.91259766 115.11930847]
[216.05987549 130.15228271]
[211.25376892 144.73983765]
[199.78709412 154.95800781]
[184.74433899 158.05815125]
[170.17190552 153.20634460]
[159.98973083 141.70770264]
[156.93675232 126.65529633]
[142.69006348 121.96149445]
[128.44337463 117.26769257]
[114.19667816 112.57389069]
[108.12001038 116.96981049]
[118.37232971 127.91924286]
[128.62464905 138.86866760]
[142.19479370 145.26014709]
[146.63583374 159.58764648]
[139.05969238 172.53376770]
[124.39324188 175.67945862]
[112.17430115 166.97901917]
[110.34944153 152.08912659]
[103.15805817 138.92539978]
[95.96667480 125.76165771]
[89.89001465 130.15757751]
[89.89001465 145.15757751]
[89.89001465 160.15757751]
[89.89001465 175.15757751]
[89.89001465 190.15757751]
[89.89001465 205.15757751]
[89.89001465 220.15757751]
[89.89001465 235.15757751]
[89.89001465 250.15757751]
[89.89001465 265.15759277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 87]
[12 86]
[13 85]
[14 84]
[16 38]
[17 37]
[18 36]
[39 83]
[40 82]
[54 67]
[55 66]
[56 65]
[57 64]
[58 63]
[96 113]
[97 112]
[98 111]
[99 110]
[100 109]
[101 108]
[114 131]
[115 130]
[116 129]
[117 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
