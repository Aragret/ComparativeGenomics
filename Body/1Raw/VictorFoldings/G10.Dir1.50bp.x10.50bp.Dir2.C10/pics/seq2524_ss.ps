%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAUUCUCCUCCGCAUAAGCCUGCGUCAGAUUAAAACACUGAACUGACAAUUAACAGCCCAAxxxxxxxxxxAAACCCUCAUUCACACGAGAAAACACCCUCAUGUUCAUACACCUAUCCCCCAUUCUCCUCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[74.82984161 300.00759888]
[74.82984161 285.00759888]
[74.82984161 270.00759888]
[74.82984161 255.00759888]
[74.82984161 240.00759888]
[74.82984161 225.00759888]
[74.82984161 210.00759888]
[74.82984161 195.00759888]
[74.82984161 180.00759888]
[74.82984161 165.00759888]
[59.29294968 128.35704041]
[70.49316406 100.45780945]
[92.11524200 94.86318207]
[81.56323242 84.20227051]
[71.01121521 73.54135895]
[60.45919800 62.88045120]
[49.90718460 52.21954346]
[36.96490860 58.97021866]
[21.97011185 60.50217056]
[7.01402473 56.25024414]
[-5.68818140 46.48059464]
[-19.25007820 52.88957214]
[-32.81197357 59.29854584]
[-46.37387085 65.70751953]
[-51.46632385 80.66889191]
[-65.68320465 87.57220459]
[-80.58989716 82.32185364]
[-87.34251404 68.03278351]
[-81.93486023 53.18243408]
[-67.57518768 46.58126450]
[-52.78284454 52.14562607]
[-39.22095108 45.73665237]
[-25.65905380 39.32767487]
[-12.09715748 32.91870117]
[-13.94048119 18.03239250]
[-28.65600395 15.12491989]
[-43.37152481 12.21744728]
[-58.08704758 9.30997562]
[-68.71080780 20.49654007]
[-83.70141602 24.14143753]
[-98.27542114 19.08159256]
[-107.78230286 6.93158722]
[-109.18846130 -8.43155956]
[-102.04519653 -22.10552216]
[-88.63188934 -29.72698784]
[-73.22868347 -28.86397743]
[-60.75068283 -19.79187012]
[-55.17957687 -5.40554714]
[-40.46405411 -2.49807501]
[-25.74853134 0.40939745]
[-11.03300858 3.31686974]
[-3.06152534 -6.07767344]
[6.83622694 -12.44348907]
[17.63035393 -15.49143696]
[16.09306145 -30.41245461]
[14.55576897 -45.33346939]
[-0.44742969 -46.33946609]
[-15.06476784 -49.86671066]
[-28.87567329 -55.81371307]
[-41.48278046 -64.00937653]
[-52.52336121 -74.21788025]
[-61.67974854 -86.14552307]
[-68.68849945 -99.44911194]
[-73.34795380 -113.74587250]
[-75.52406311 -128.62446594]
[-75.15419769 -143.65679932]
[-72.24900818 -158.41038513]
[-66.89208984 -172.46069336]
[-59.23756027 -185.40350342]
[-49.50565720 -196.86640930]
[-37.97639465 -206.51959229]
[-24.98148537 -214.08532715]
[-10.89482212 -219.34593201]
[3.87829471 -222.15003967]
[18.91281319 -222.41697693]
[33.77616119 -220.13905334]
[48.04068756 -215.38182068]
[61.29597855 -208.28215027]
[73.16064453 -199.04431152]
[83.29332733 -187.93409729]
[91.40248108 -175.27117920]
[97.25478363 -161.41987610]
[100.68186951 -146.77873230]
[101.58512115 -131.76899719]
[99.93855286 -116.82253265]
[95.78954315 -102.36937714]
[89.25746155 -88.82537079]
[80.53025818 -76.58021545]
[69.85902405 -65.98622131]
[57.55079269 -57.34819412]
[43.95970154 -50.91467285]
[29.47678566 -46.87076187]
[31.01407814 -31.94974709]
[32.55137253 -17.02873039]
[50.60040665 -10.49161530]
[63.13032913 4.17641115]
[66.80271912 23.21137047]
[60.56809235 41.66752625]
[71.12010956 52.32843781]
[81.67212677 62.98934555]
[92.22413635 73.65025330]
[102.77615356 84.31116486]
[117.16063690 88.56401062]
[131.81335449 85.35501099]
[146.46607971 82.14601898]
[161.11880493 78.93701935]
[169.43252563 65.49612427]
[184.83430481 61.95203018]
[198.18655396 70.40738678]
[201.56761169 85.84577942]
[192.97155762 99.10788727]
[177.49829102 102.32553101]
[164.32780457 93.58974457]
[149.67507935 96.79874420]
[135.02235413 100.00773621]
[120.36962891 103.21673584]
[119.98480225 110.70685577]
[118.83031464 133.17721558]
[133.07699585 137.87101746]
[147.32369995 142.56481934]
[163.25927734 138.69325256]
[174.38264465 150.74325562]
[169.25102234 166.31883240]
[153.14338684 169.39715576]
[142.62989807 156.81150818]
[128.38320923 152.11770630]
[114.13651276 147.42390442]
[108.05984497 151.81982422]
[118.31216431 162.76925659]
[128.56448364 173.71868896]
[138.81680298 184.66810608]
[149.06912231 195.61753845]
[161.42352295 204.12452698]
[164.44555664 218.81694031]
[156.45159912 231.50933838]
[141.89524841 235.13047791]
[128.88616943 227.66296387]
[124.67204285 213.26663208]
[117.48065948 200.10289001]
[110.28927612 186.93914795]
[103.09789276 173.77540588]
[95.90650940 160.61167908]
[89.82984161 165.00759888]
[89.82984161 180.00759888]
[89.82984161 195.00759888]
[89.82984161 210.00759888]
[89.82984161 225.00759888]
[89.82984161 240.00759888]
[89.82984161 255.00759888]
[89.82984161 270.00759888]
[89.82984161 285.00759888]
[89.82984161 300.00759888]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[13 102]
[14 101]
[15 100]
[16 99]
[17 98]
[21 34]
[22 33]
[23 32]
[24 31]
[35 51]
[36 50]
[37 49]
[38 48]
[54 94]
[55 93]
[56 92]
[103 116]
[104 115]
[105 114]
[106 113]
[118 127]
[119 126]
[120 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
