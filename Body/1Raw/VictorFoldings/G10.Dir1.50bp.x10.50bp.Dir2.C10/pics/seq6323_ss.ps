%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCACAUCUACAACGUUAUCGUCACAGCCCAUGCAUUUGUAAUAAUCUUCUUCAUAGUAAxxxxxxxxxxUCCACUUCAAGUCAACUAGGACUCAUAAUAGUUACAAUCGGCAUCAACCAACCACACCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 289.58297729]
[92.50000000 274.58297729]
[92.50000000 259.58297729]
[92.50000000 244.58297729]
[92.50000000 229.58297729]
[92.50000000 214.58297729]
[92.50000000 199.58297729]
[92.50000000 184.58297729]
[92.50000000 169.58297729]
[92.50000000 154.58297729]
[86.61215973 153.44453430]
[80.88293457 151.67291260]
[75.38018799 149.28912354]
[70.16912079 146.32138062]
[65.31145477 142.80487061]
[60.86476135 138.78125000]
[56.88170242 134.29817200]
[53.40947723 129.40876770]
[39.75323486 135.61416626]
[36.53676987 150.67938232]
[25.19870758 160.84312439]
[10.22700882 162.36373901]
[-2.61551476 154.86656189]
[-16.27175522 161.07197571]
[-29.92799759 167.27737427]
[-39.02033234 180.92514038]
[-55.36625290 179.60494995]
[-62.15047836 164.67491150]
[-52.39397812 151.49375916]
[-36.13340378 153.62113953]
[-22.47716331 147.41572571]
[-8.82092190 141.21032715]
[-6.02157450 126.60547638]
[4.97095966 116.32791901]
[20.08418655 114.47217560]
[33.54782867 121.95793152]
[47.20407104 115.75252533]
[46.15990067 88.30401611]
[58.49811935 63.76264191]
[81.15196228 48.22835159]
[108.49063110 45.56231689]
[112.79821777 31.19413185]
[117.10579681 16.82594681]
[121.41338348 2.45776367]
[112.83570099 -12.75278187]
[117.78413391 -29.14781189]
[132.74441528 -36.76674271]
[136.75215149 -51.22143173]
[140.75988770 -65.67611694]
[144.76763916 -80.13080597]
[148.77537537 -94.58549500]
[152.78311157 -109.04018402]
[156.79084778 -123.49487305]
[143.58341980 -132.14573669]
[133.69985962 -144.43301392]
[128.09436035 -159.15133667]
[127.30223083 -174.86161804]
[131.38873291 -190.03169250]
[139.94393921 -203.18577576]
[152.12379456 -213.04804993]
[166.73339844 -218.66636658]
[182.34422302 -219.50416565]
[186.05038452 -234.03909302]
[181.96267700 -249.32312012]
[192.60472107 -259.74407959]
[196.31088257 -274.27902222]
[200.01704407 -288.81396484]
[203.72320557 -303.34887695]
[190.31665039 -310.22000122]
[178.77552795 -319.90246582]
[169.67874146 -331.91064453]
[163.48257446 -345.64218140]
[160.49781799 -360.40832520]
[160.87419128 -375.46841431]
[164.59283447 -390.06701660]
[171.46719360 -403.47189331]
[181.15245056 -415.01068115]
[193.16282654 -424.10455322]
[206.89587402 -430.29739380]
[221.66273499 -433.27856445]
[236.72273254 -432.89855957]
[251.32043457 -429.17639160]
[264.72366333 -422.29876709]
[276.26007080 -412.61071777]
[285.35104370 -400.59814453]
[291.54055786 -386.86358643]
[294.51815796 -372.09600830]
[294.13449097 -357.03610229]
[290.40878296 -342.43930054]
[283.52792358 -329.03775024]
[273.83706665 -317.50366211]
[261.82229614 -308.41561890]
[248.08624268 -302.22943115]
[233.31794739 -299.25540161]
[218.25813293 -299.64273071]
[214.55197144 -285.10778809]
[210.84580994 -270.57284546]
[207.13964844 -256.03793335]
[211.49244690 -241.79353333]
[200.58532715 -230.33293152]
[196.87916565 -215.79800415]
[209.13703918 -208.46028137]
[218.83435059 -197.94761658]
[225.17488098 -185.10987854]
[227.63432312 -170.98832703]
[226.00354004 -156.73121643]
[220.40635681 -143.50041199]
[211.29022217 -132.37669373]
[199.39041138 -124.27147675]
[185.67074585 -119.85215759]
[171.24554443 -119.48712921]
[167.23780823 -105.03244019]
[163.23005676 -90.57775879]
[159.22232056 -76.12306976]
[155.21458435 -61.66837692]
[151.20683289 -47.21368790]
[147.19909668 -32.75900269]
[155.06712341 -22.50760841]
[155.58166504 -9.39999390]
[148.32913208 1.76372945]
[135.78157043 6.76534843]
[131.47398376 21.13353157]
[127.16639709 35.50171661]
[122.85881042 49.86989975]
[130.16734314 53.89702606]
[136.78385925 58.98170471]
[142.55657959 65.00730133]
[147.35311890 71.83558655]
[151.06343079 79.30993652]
[153.60238647 87.25888824]
[154.91177368 95.50011444]
[154.96154785 103.84455872]
[153.75056458 112.10081482]
[151.30659485 120.07949066]
[147.68571472 127.59756470]
[142.97096252 134.48257446]
[137.27052307 140.57659912]
[130.71511841 145.73983765]
[123.45516205 149.85386658]
[115.65715790 152.82429504]
[107.50000000 154.58297729]
[107.50000000 169.58297729]
[107.50000000 184.58297729]
[107.50000000 199.58297729]
[107.50000000 214.58297729]
[107.50000000 229.58297729]
[107.50000000 244.58297729]
[107.50000000 259.58297729]
[107.50000000 274.58297729]
[107.50000000 289.58297729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[18 37]
[19 36]
[23 32]
[24 31]
[25 30]
[41 124]
[42 123]
[43 122]
[44 121]
[47 117]
[48 116]
[49 115]
[50 114]
[51 113]
[52 112]
[53 111]
[62 101]
[63 100]
[65 98]
[66 97]
[67 96]
[68 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
