%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAACCACCCACAGCCUAAUUAUUAGCAUCAUCCCUCUACUAUUUUUUAACCAAAUCAACAxxxxxxxxxxUUCUUCGAAACCACACUUAUCCCCACCUUGGCUAUCAUCACCCGAUGAGGCAACCAGCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[100.95243073 376.65600586]
[100.95243073 361.65600586]
[100.95243073 346.65600586]
[100.95243073 331.65600586]
[100.95243073 316.65600586]
[100.95243073 301.65600586]
[100.95243073 286.65600586]
[100.95243073 271.65600586]
[100.95243073 256.65600586]
[100.95243073 241.65599060]
[84.80596924 236.26672363]
[71.43463898 225.69345093]
[62.44202805 211.18293762]
[58.91378021 194.45541382]
[61.28660202 177.50059509]
[69.29424286 162.34100342]
[81.99729156 150.79075623]
[97.89332581 144.23843384]
[96.95769501 129.26763916]
[79.22505188 116.93585205]
[75.93775940 97.60194397]
[86.30674744 83.34748077]
[81.40519714 69.17092133]
[76.50364685 54.99436569]
[71.60209656 40.81780624]
[57.09910965 44.67342377]
[42.35337067 47.46010208]
[27.44355392 49.16296768]
[12.44920921 49.77294159]
[-2.54965854 49.28676224]
[-17.47302437 47.70702744]
[-32.24126434 45.04216766]
[-46.77558517 41.30639648]
[-60.99843216 36.51964951]
[-74.83393097 30.70746803]
[-88.20825195 23.90085793]
[-101.05004120 16.13613892]
[-113.29077911 7.45473909]
[-124.86515808 -2.09702277]
[-135.71142578 -12.46818256]
[-145.77169800 -23.60340500]
[-154.99232483 -35.44327927]
[-163.32408142 -47.92463303]
[-170.72251892 -60.98087311]
[-177.14819336 -74.54233551]
[-182.56677246 -88.53666687]
[-186.94938660 -102.88919830]
[-190.27262878 -117.52335358]
[-192.51878357 -132.36105347]
[-193.67584229 -147.32312012]
[-193.73765564 -162.32974243]
[-192.70388794 -177.30082703]
[-190.58006287 -192.15652466]
[-187.37748718 -206.81756592]
[-183.11326599 -221.20571899]
[-177.81015015 -235.24420166]
[-171.49642944 -248.85815430]
[-164.20579529 -261.97488403]
[-155.97714233 -274.52447510]
[-146.85437012 -286.43991089]
[-136.88616943 -297.65762329]
[-126.12571716 -308.11779785]
[-114.63041687 -317.76458740]
[-102.46160889 -326.54650879]
[-89.68422699 -334.41677856]
[-76.36643219 -341.33334351]
[-62.57928848 -347.25930786]
[-48.39635468 -352.16305542]
[-33.89330673 -356.01843262]
[-19.14752197 -358.80487061]
[-4.23767614 -360.50747681]
[10.75667763 -361.11721802]
[25.75553703 -360.63079834]
[40.67887878 -359.05081177]
[55.44707489 -356.38571167]
[69.98133087 -352.64968872]
[84.20410156 -347.86273193]
[98.03950500 -342.05029297]
[111.41371155 -335.24346924]
[124.25537109 -327.47854614]
[136.49597168 -318.79693604]
[148.07019043 -309.24499512]
[158.91629028 -298.87365723]
[168.97637939 -287.73828125]
[178.19680786 -275.89825439]
[186.52836609 -263.41674805]
[193.92658997 -250.36039734]
[200.35203552 -236.79882812]
[205.77038574 -222.80439758]
[210.15277100 -208.45179749]
[213.47576904 -193.81759644]
[215.72167969 -178.97985840]
[216.87849426 -164.01776123]
[216.94006348 -149.01115417]
[215.90605164 -134.04006958]
[213.78196716 -119.18441010]
[210.57916260 -104.52342224]
[206.31469727 -90.13534546]
[201.01135254 -76.09693909]
[194.69740295 -62.48310471]
[187.40655518 -49.36647797]
[179.17770386 -36.81704330]
[170.05473328 -24.90175819]
[160.08634949 -13.68419838]
[149.32571411 -3.22421312]
[137.83026123 6.42238808]
[125.66131592 15.20413589]
[112.88380432 23.07417488]
[99.56589508 29.99051476]
[85.77865601 35.91625595]
[90.68020630 50.09281158]
[95.58175659 64.26937103]
[100.48330688 78.44593048]
[119.73308563 83.86096191]
[128.96408081 105.18968201]
[143.08888245 110.23844147]
[157.21368408 115.28720093]
[171.33848572 120.33595276]
[185.46328735 125.38471222]
[201.49075317 121.91303253]
[212.30917358 134.23754883]
[206.78947449 149.67987061]
[190.60987854 152.35424805]
[180.41453552 139.50950623]
[166.28973389 134.46075439]
[152.16493225 129.41200256]
[138.04013062 124.36324310]
[123.91532135 119.31449127]
[111.92848969 128.33201599]
[112.86412048 143.30281067]
[125.63296509 146.21661377]
[137.18922424 152.35108948]
[146.73750305 161.27601624]
[153.62272644 172.36941528]
[157.37504578 184.86085510]
[157.74188232 197.88496399]
[154.70497131 210.54142761]
[148.48106384 221.95716858]
[139.50651550 231.34658813]
[128.40670776 238.06562805]
[115.95243073 241.65599060]
[115.95243073 256.65600586]
[115.95243073 271.65600586]
[115.95243073 286.65600586]
[115.95243073 301.65600586]
[115.95243073 316.65600586]
[115.95243073 331.65600586]
[115.95243073 346.65600586]
[115.95243073 361.65600586]
[115.95243073 376.65600586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[18 130]
[19 129]
[22 113]
[23 112]
[24 111]
[25 110]
[115 128]
[116 127]
[117 126]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
