%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACAACACUAAAGGACGAACCUGAUCUCUUAUACUAGUAUCCUUAAUCAUUUUUAUUGCCxxxxxxxxxxCAUUAUGUAAAAUCCAUUGUCGCAUCCACCUUUAUUAUCAGUCUCUUCCCCACAACAAUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[90.28240967 405.52673340]
[90.28240967 390.52673340]
[90.28240967 375.52673340]
[90.28240967 360.52673340]
[90.28240967 345.52673340]
[90.28240967 330.52673340]
[90.28240967 315.52673340]
[90.28240967 300.52673340]
[90.28240967 285.52673340]
[90.28240967 270.52673340]
[76.16970062 267.26513672]
[63.13592529 260.92910767]
[51.84172440 251.83602905]
[42.86040115 240.44316101]
[36.64882660 227.32461548]
[33.52417755 213.14239502]
[33.64777374 198.61303711]
[37.01672745 184.47138977]
[43.46392822 171.43341064]
[52.66633606 160.15997314]
[64.16115570 151.22337341]
[77.36910248 145.07821655]
[91.62363434 142.03833008]
[91.93569183 127.04158020]
[92.24774170 112.04483032]
[85.67915344 99.70201111]
[92.75550079 87.64311218]
[93.06755829 72.64636230]
[82.40697479 61.28899765]
[82.93708038 46.08460236]
[93.83028412 35.99135590]
[94.14234161 20.99460220]
[94.45439911 5.99784756]
[94.76645660 -8.99890614]
[95.07850647 -23.99565887]
[80.14106750 -25.44143867]
[65.35575104 -28.01278496]
[50.80725098 -31.69496727]
[36.57889557 -36.46689606]
[22.75218773 -42.30123520]
[9.40632629 -49.16456985]
[-3.38224554 -57.01758194]
[-15.54027367 -65.81529236]
[-26.99811745 -75.50730896]
[-37.69014740 -86.03811646]
[-47.55511856 -97.34739685]
[-56.53652573 -109.37036133]
[-64.58292389 -122.03815460]
[-71.64821625 -135.27819824]
[-77.69194794 -149.01467896]
[-82.67948914 -163.16889954]
[-86.58227539 -177.65977478]
[-89.37794495 -192.40431213]
[-91.05049896 -207.31806946]
[-91.59033966 -222.31559753]
[-90.99438477 -237.31100464]
[-89.26605225 -252.21839905]
[-86.41522980 -266.95239258]
[-82.45825195 -281.42855835]
[-77.41779327 -295.56402588]
[-71.32270813 -309.27777100]
[-64.20792389 -322.49130249]
[-56.11418915 -335.12890625]
[-47.08786011 -347.11816406]
[-37.18064499 -358.39047241]
[-26.44928932 -368.88119507]
[-14.95526409 -378.53027344]
[-2.76440430 -387.28244019]
[10.05345917 -395.08755493]
[23.42490768 -401.90090942]
[37.27334595 -407.68347168]
[51.51945877 -412.40213013]
[66.08163452 -416.02984619]
[80.87646484 -418.54586792]
[95.81921387 -419.93572998]
[110.82427979 -420.19152832]
[125.80570984 -419.31176758]
[140.67770386 -417.30148315]
[155.35507202 -414.17221069]
[169.75373840 -409.94186401]
[183.79122925 -404.63467407]
[197.38713074 -398.28103638]
[210.46357727 -390.91735840]
[222.94566345 -382.58581543]
[234.76190186 -373.33410645]
[245.84458923 -363.21524048]
[256.13024902 -352.28717041]
[265.55999756 -340.61251831]
[274.07977295 -328.25814819]
[281.64077759 -315.29479980]
[288.19976807 -301.79675293]
[293.71908569 -287.84130859]
[298.16717529 -273.50839233]
[301.51852417 -258.88015747]
[303.75396729 -244.04034424]
[304.86068726 -229.07395935]
[304.83233643 -214.06674194]
[303.66909790 -199.10464478]
[301.37759399 -184.27337646]
[297.97100830 -169.65789795]
[293.46878052 -155.34190369]
[287.89678955 -141.40740967]
[281.28686523 -127.93424225]
[273.67691040 -114.99955750]
[265.11053467 -102.67745209]
[255.63674927 -91.03850555]
[245.30987549 -80.14938354]
[234.18902588 -70.07246399]
[222.33793640 -60.86546707]
[209.82444763 -52.58112335]
[196.72027588 -45.26689529]
[183.10046387 -38.96466827]
[169.04302979 -33.71054840]
[154.62847900 -29.53462982]
[139.93939209 -26.46082878]
[125.05991364 -24.50675583]
[110.07526398 -23.68360329]
[109.76320648 -8.68684959]
[109.45114899 6.30990410]
[109.13909149 21.30665779]
[108.82704163 36.30340958]
[119.29095459 46.84106064]
[119.18811798 62.05434799]
[108.06430817 72.95841980]
[107.75225830 87.95516968]
[114.32084656 100.29798889]
[107.24449921 112.35688782]
[106.93244171 127.35363770]
[106.62038422 142.35038757]
[121.66018677 146.34178162]
[135.30747986 153.79881287]
[146.77752686 164.28800964]
[155.41194153 177.20161438]
[160.71643066 191.79292297]
[162.38911438 207.21937561]
[160.33769226 222.59126282]
[154.68455505 237.02301025]
[145.75942993 249.68418884]
[134.08020020 259.84732056]
[120.32288361 266.92971802]
[105.28240967 270.52673340]
[105.28240967 285.52673340]
[105.28240967 300.52673340]
[105.28240967 315.52673340]
[105.28240967 330.52673340]
[105.28240967 345.52673340]
[105.28240967 360.52673340]
[105.28240967 375.52673340]
[105.28240967 390.52673340]
[105.28240967 405.52673340]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[23 129]
[24 128]
[25 127]
[27 125]
[28 124]
[31 121]
[32 120]
[33 119]
[34 118]
[35 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
