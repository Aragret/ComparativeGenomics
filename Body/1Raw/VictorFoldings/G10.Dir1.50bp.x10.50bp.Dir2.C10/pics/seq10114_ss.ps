%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUACUACUCACUCUCACUGCCCAAGAACUAUCAAACUCCUGAGCCAACAACUUAAUAUGAxxxxxxxxxxAAUCUCAAUUACAAUAUAUACACCAACAAACAAUGUUCAACCAGUAACUACUACUAAUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 315.82177734]
[92.50000000 300.82177734]
[92.50000000 285.82177734]
[92.50000000 270.82177734]
[92.50000000 255.82177734]
[92.50000000 240.82177734]
[92.50000000 225.82177734]
[92.50000000 210.82177734]
[92.50000000 195.82177734]
[92.50000000 180.82177734]
[77.77803040 178.06788635]
[63.81266022 172.65594482]
[51.07939148 164.77024841]
[40.01176071 154.67926025]
[30.98659325 142.72656250]
[24.31117439 129.31913757]
[20.21278954 114.91345215]
[18.83097839 100.00000000]
[20.21278954 85.08654785]
[24.31117439 70.68086243]
[30.98659325 57.27343369]
[40.01176071 45.32074356]
[51.07939148 35.22975922]
[63.81266022 27.34405327]
[77.77803040 21.93211937]
[92.50000000 19.17822075]
[92.50000000 4.17822075]
[92.50000000 -10.82177925]
[92.50000000 -25.82177925]
[81.44523621 -31.81415749]
[74.05114746 -41.89522171]
[71.68421173 -54.09736252]
[74.73709869 -66.07147980]
[82.56508636 -75.53917694]
[93.62104034 -80.72632599]
[94.24501038 -95.71334076]
[94.86898804 -110.70035553]
[95.49296570 -125.68737793]
[80.59657288 -127.51596069]
[65.89562225 -130.53729248]
[51.48546600 -134.73176575]
[37.45955276 -140.07218933]
[23.90884781 -146.52391052]
[10.92123699 -154.04510498]
[-1.41904950 -162.58697510]
[-13.03197956 -172.09413147]
[-23.84223747 -182.50492859]
[-33.77971268 -193.75184631]
[-42.77996063 -205.76191711]
[-50.78460312 -218.45726013]
[-57.74172974 -231.75556946]
[-63.60622406 -245.57055664]
[-68.34004211 -259.81265259]
[-71.91249847 -274.38946533]
[-74.30040741 -289.20651245]
[-75.48829651 -304.16763306]
[-75.46844482 -319.17581177]
[-74.24099731 -334.13375854]
[-71.81391144 -348.94439697]
[-68.20291901 -363.51174927]
[-63.43144608 -377.74127197]
[-57.53043747 -391.54071045]
[-50.53816223 -404.82055664]
[-42.49996948 -417.49468994]
[-33.46799469 -429.48092651]
[-23.50080681 -440.70150757]
[-12.66305256 -451.08367920]
[-1.02501953 -460.56008911]
[11.33781528 -469.06930542]
[24.34527206 -476.55612183]
[37.91299057 -482.97198486]
[51.95298004 -488.27526855]
[66.37418365 -492.43164062]
[81.08306885 -495.41406250]
[95.98425293 -497.20324707]
[110.98107910 -497.78756714]
[125.97629547 -497.16326904]
[140.87265015 -495.33435059]
[155.57353210 -492.31268311]
[169.98359680 -488.11788940]
[184.00939941 -482.77716064]
[197.55995178 -476.32516479]
[210.54740906 -468.80368042]
[222.88749695 -460.26153564]
[234.50022888 -450.75411987]
[245.31025696 -440.34307861]
[255.24748230 -429.09594727]
[264.24746704 -417.08566284]
[272.25183105 -404.39013672]
[279.20864868 -391.09170532]
[285.07284546 -377.27658081]
[289.80636597 -363.03436279]
[293.37847900 -348.45745850]
[295.76608276 -333.64038086]
[296.95361328 -318.67922974]
[296.93344116 -303.67105103]
[295.70565796 -288.71313477]
[293.27825928 -273.90252686]
[289.66693115 -259.33529663]
[284.89514160 -245.10586548]
[278.99383545 -231.30656433]
[272.00128174 -218.02687073]
[263.96279907 -205.35290527]
[254.93055725 -193.36688232]
[244.96313477 -182.14651489]
[234.12515259 -171.76458740]
[222.48690796 -162.28842163]
[210.12388611 -153.77947998]
[197.11625671 -146.29295349]
[183.54840088 -139.87739563]
[169.50830078 -134.57440186]
[155.08700562 -130.41836548]
[140.37805176 -127.43624878]
[125.47682953 -125.64739227]
[110.47998810 -125.06340027]
[109.85601044 -110.07638550]
[109.23203278 -95.08936310]
[108.60805511 -80.10234833]
[122.92269135 -69.84764099]
[128.31010437 -52.91907883]
[122.45291138 -35.98167419]
[107.50000000 -25.82177925]
[107.50000000 -10.82177925]
[107.50000000 4.17822075]
[107.50000000 19.17822075]
[122.22196960 21.93211937]
[136.18733215 27.34405327]
[148.92060852 35.22975922]
[159.98823547 45.32074356]
[169.01341248 57.27343369]
[175.68882751 70.68086243]
[179.78721619 85.08654785]
[181.16902161 100.00000000]
[179.78721619 114.91345215]
[175.68882751 129.31913757]
[169.01341248 142.72656250]
[159.98823547 154.67926025]
[148.92060852 164.77024841]
[136.18733215 172.65594482]
[122.22196960 178.06788635]
[107.50000000 180.82177734]
[107.50000000 195.82177734]
[107.50000000 210.82177734]
[107.50000000 225.82177734]
[107.50000000 240.82177734]
[107.50000000 255.82177734]
[107.50000000 270.82177734]
[107.50000000 285.82177734]
[107.50000000 300.82177734]
[107.50000000 315.82177734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[26 125]
[27 124]
[28 123]
[29 122]
[35 118]
[36 117]
[37 116]
[38 115]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
