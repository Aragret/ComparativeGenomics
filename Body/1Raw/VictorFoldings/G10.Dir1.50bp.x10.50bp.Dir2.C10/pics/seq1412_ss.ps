%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAAACCUCAACAGUUAAAUCAACAAAACUGCUCGCCAGAACACUACGAGCCACAGCUUAAAxxxxxxxxxxCACCAUCGCUCUUCUACUAUGAACCCCCCUCCCCAUACCCAACCCCCUGGUCAACCUCAACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[256.15161133 281.85052490]
[245.82069397 270.97521973]
[235.48979187 260.09988403]
[225.15888977 249.22457886]
[214.71688843 238.45590210]
[204.16487122 227.79498291]
[193.61285400 217.13407898]
[183.06083679 206.47317505]
[172.50881958 195.81227112]
[161.95681763 185.15135193]
[151.40480042 174.49044800]
[148.36947632 189.18013000]
[135.08865356 196.15292358]
[121.27331543 190.31027222]
[117.02529907 175.92436218]
[125.45076752 163.51423645]
[140.38839722 162.15399170]
[130.98454285 150.46778870]
[121.58068085 138.78157043]
[97.09432983 145.90733337]
[71.78495789 138.35702515]
[54.01931381 117.60062408]
[39.77262497 122.29441833]
[25.52593040 126.98822021]
[11.27923870 131.68202209]
[8.22626305 146.73443604]
[-1.95591497 158.23307800]
[-16.52833939 163.08488464]
[-31.57110023 159.98474121]
[-43.03777313 149.76657104]
[-47.84387970 135.17900085]
[-44.69659805 120.14603424]
[-34.44253540 108.71144867]
[-19.83998299 103.95109558]
[-4.81695080 107.14547729]
[6.58543825 117.43533325]
[20.83213043 112.74153137]
[35.07882309 108.04772949]
[49.32551575 103.35392761]
[50.55612564 88.40449524]
[37.26878738 81.44413757]
[23.98144341 74.48377991]
[10.69410324 67.52342987]
[-2.59323859 60.56306839]
[-15.15567303 63.65966797]
[-26.09745789 57.54013443]
[-29.78960037 45.98027802]
[-42.93123245 38.74857712]
[-59.30688477 39.62606812]
[-68.02667236 25.73731804]
[-60.12042236 11.36988163]
[-43.72140884 11.30374527]
[-35.69953156 25.60694504]
[-22.55789757 32.83864594]
[-5.08592796 31.50643539]
[4.36711788 47.27573013]
[17.65445900 54.23608398]
[30.94180107 61.19644165]
[44.22914124 68.15679932]
[57.51648331 75.11715698]
[65.12310791 66.99053192]
[74.15872192 60.97164536]
[84.07513428 57.27661896]
[94.30220795 55.98555374]
[94.91803741 40.99819946]
[95.53385925 26.01084518]
[81.12893677 21.52079582]
[68.37747955 13.45465088]
[58.14889908 2.36237431]
[51.14060211 -10.99974442]
[47.83042526 -25.72065163]
[48.44406509 -40.79665375]
[52.93967438 -55.19984436]
[61.01074219 -67.94818878]
[72.10697174 -78.17248535]
[85.47179413 -85.17562103]
[100.19397736 -88.48011017]
[115.26974487 -87.86065674]
[129.67118835 -83.35948181]
[142.41642761 -75.28349304]
[152.63642883 -64.18331909]
[159.63439941 -50.81579590]
[162.93321228 -36.09233475]
[162.30793762 -21.01680946]
[157.80120850 -6.61709499]
[149.72029114 6.12501287]
[138.61618042 16.34073639]
[125.24594879 23.33354950]
[110.52121735 26.62667084]
[109.90538788 41.61402512]
[109.28956604 56.60137939]
[118.06476593 59.46112061]
[126.05874634 64.07398987]
[132.92579651 70.24049377]
[138.36895752 77.69396210]
[142.15284729 86.11207581]
[144.11380005 95.13076782]
[144.16702271 104.36003876]
[142.31024170 113.40075684]
[138.62371826 121.86195374]
[133.26689148 129.37771606]
[142.67074585 141.06391907]
[152.07460022 152.75013733]
[162.06570435 163.93843079]
[172.61772156 174.59933472]
[183.16973877 185.26025391]
[193.72175598 195.92115784]
[204.27375793 206.58206177]
[214.82577515 217.24298096]
[225.37779236 227.90388489]
[233.69320679 231.83450317]
[236.03421021 238.89367676]
[246.36511230 249.76898193]
[256.69601440 260.64431763]
[267.02691650 271.51962280]
[279.40908813 262.99737549]
[292.97201538 256.51715088]
[307.38174438 252.23855591]
[322.28338623 250.26693726]
[337.30999756 250.65084839]
[352.09152222 253.38082886]
[366.26397705 258.38964844]
[379.47833252 265.55398560]
[391.40914917 274.69738770]
[401.76266479 285.59469604]
[410.28387451 297.97756958]
[416.76296997 311.54101562]
[421.04037476 325.95111084]
[423.01077271 340.85290527]
[422.62564087 355.87948608]
[419.89443970 370.66079712]
[414.88442993 384.83282471]
[407.71902466 398.04660034]
[398.57461548 409.97665405]
[387.67645264 420.32928467]
[375.29290771 428.84945679]
[361.72888184 435.32745361]
[347.31845093 439.60366821]
[332.41647339 441.57284546]
[317.38992310 441.18643188]
[302.60885620 438.45404053]
[288.43722534 433.44287109]
[275.22409058 426.27633667]
[263.29476929 417.13098145]
[252.94305420 406.23196411]
[244.42387390 393.84768677]
[237.94702148 380.28314209]
[233.67198181 365.87237549]
[231.70404053 350.97024536]
[232.09167480 335.94372559]
[234.82531738 321.16284180]
[239.83764648 306.99166870]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 115]
[2 114]
[3 113]
[4 112]
[5 110]
[6 109]
[7 108]
[8 107]
[9 106]
[10 105]
[11 104]
[17 103]
[18 102]
[19 101]
[22 39]
[23 38]
[24 37]
[25 36]
[40 60]
[41 59]
[42 58]
[43 57]
[44 56]
[47 54]
[48 53]
[64 91]
[65 90]
[66 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
