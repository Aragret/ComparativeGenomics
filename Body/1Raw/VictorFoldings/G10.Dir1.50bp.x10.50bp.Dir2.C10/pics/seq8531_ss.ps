%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAAUGCCCUAGCCCACUUCUUACCACAAGGCACACCUACACCCCUUAUCCCCAUACUAGUUxxxxxxxxxxCCUACCCCCCAAUUAGGAGGGCACUGGCCCCCAACAGGCAUCACCCCGCUAAAUCCCCUAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[73.13423157 285.00085449]
[73.13423157 270.00085449]
[73.13423157 255.00086975]
[73.13423157 240.00086975]
[73.13423157 225.00086975]
[73.13423157 210.00086975]
[73.13423157 195.00086975]
[73.13423157 180.00086975]
[73.13423157 165.00086975]
[73.13423157 150.00086975]
[63.88691711 126.29603577]
[67.94857788 105.86547852]
[80.23339081 94.58521271]
[93.65683746 94.48410034]
[83.78112793 83.19382477]
[73.90542603 71.90354156]
[64.02971649 60.61326218]
[54.15401077 49.32298279]
[44.27830505 38.03270340]
[38.13098526 46.28660202]
[27.14845848 51.49705124]
[12.80839729 55.89735031]
[-1.53166389 60.29765320]
[-2.59223652 75.43831635]
[-9.05416775 89.17176819]
[-20.04353523 99.64068604]
[-34.07411575 105.42922974]
[-49.24839020 105.75454712]
[-63.51416397 100.57263184]
[-74.94210052 90.58431244]
[-81.98667908 77.14041138]
[-83.69516754 62.05911636]
[-79.83650208 47.38004303]
[-70.93254852 35.08841705]
[-58.18749237 26.84658051]
[-43.32498932 23.76917458]
[-28.35507393 26.27239227]
[-15.30230522 34.01769257]
[-5.93196440 45.95759201]
[8.40809727 41.55728912]
[22.74815750 37.15699005]
[9.14294529 30.84048843]
[8.80052280 15.84439754]
[22.10324287 8.91347694]
[34.19761276 17.78794289]
[31.13921738 3.10304499]
[28.08082199 -11.58185291]
[25.02242661 -26.26675034]
[10.04230404 -25.14829445]
[-4.95564556 -25.99476433]
[-19.71478844 -28.79167747]
[-33.98257446 -33.49117279]
[-47.51486588 -40.01283646]
[-60.08010864 -48.24507904]
[-71.46328735 -58.04702759]
[-81.46962738 -69.25096130]
[-89.92790985 -81.66516876]
[-96.69338989 -95.07722473]
[-101.65031433 -109.25762939]
[-104.71385956 -123.96374512]
[-105.83160400 -138.94392395]
[-104.98442078 -153.94183350]
[-102.18680573 -168.70083618]
[-97.48662567 -182.96839905]
[-90.96431732 -196.50038147]
[-82.73148346 -209.06523132]
[-72.92899323 -220.44793701]
[-61.72457886 -230.45375061]
[-49.30996704 -238.91143799]
[-35.89759064 -245.67628479]
[-21.71694756 -250.63253784]
[-7.01069117 -253.69537354]
[7.96953821 -254.81240845]
[22.96740723 -253.96450806]
[37.72628403 -251.16619873]
[51.99362183 -246.46533203]
[65.52529144 -239.94238281]
[78.08975220 -231.70895386]
[89.47200012 -221.90591431]
[99.47727203 -210.70103455]
[107.93436432 -198.28601074]
[114.69857788 -184.87332153]
[119.65415192 -170.69244385]
[122.71629333 -155.98603821]
[123.83261108 -141.00575256]
[122.98400116 -126.00792694]
[120.18497467 -111.24918365]
[115.48344421 -96.98206329]
[108.95984650 -83.45070648]
[100.72581482 -70.88664246]
[90.92224121 -59.50485992]
[79.71687317 -49.50011826]
[67.30146027 -41.04361343]
[53.88843918 -34.28004456]
[39.70732498 -29.32514572]
[42.76572037 -14.64024830]
[45.82411575 0.04464953]
[48.88251114 14.72954750]
[55.56858444 28.15699577]
[65.44429016 39.44727707]
[75.31999969 50.73755646]
[85.19570160 62.02783585]
[95.07141113 73.31811523]
[104.94712067 84.60839844]
[118.98908997 89.88314056]
[133.85569763 87.88708496]
[148.72229004 85.89102173]
[155.97257996 72.17195892]
[169.91687012 65.36485291]
[185.19326782 68.08718109]
[195.92770386 79.29215240]
[197.99256897 94.67122650]
[190.59388733 108.31083679]
[176.57658386 114.96627808]
[161.33059692 112.07838440]
[150.71835327 100.75762177]
[135.85174561 102.75367737]
[120.98515320 104.74974060]
[118.98908997 119.61633301]
[132.80267334 125.46312714]
[146.02522278 117.34252930]
[161.49299622 118.57840729]
[173.25834656 128.69554138]
[176.79722595 143.80368042]
[170.74890137 158.09344482]
[157.43904114 166.07011414]
[141.98558044 164.66651917]
[130.33067322 154.42234802]
[126.95588684 139.27670288]
[113.14230347 133.42991638]
[106.89028931 137.57266235]
[116.20974731 149.32627869]
[125.52920532 161.07991028]
[134.84866333 172.83352661]
[146.75245667 181.96040344]
[146.23535156 196.95147705]
[133.73094177 205.23640442]
[119.72448730 199.86805725]
[115.96040344 185.34934998]
[108.76902008 172.18560791]
[101.57763672 159.02186584]
[94.38625336 145.85812378]
[88.13423157 150.00086975]
[88.13423157 165.00086975]
[88.13423157 180.00086975]
[88.13423157 195.00086975]
[88.13423157 210.00086975]
[88.13423157 225.00086975]
[88.13423157 240.00086975]
[88.13423157 255.00086975]
[88.13423157 270.00085449]
[88.13423157 285.00085449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[14 104]
[15 103]
[16 102]
[17 101]
[18 100]
[19 99]
[21 41]
[22 40]
[23 39]
[45 98]
[46 97]
[47 96]
[48 95]
[105 118]
[106 117]
[107 116]
[119 130]
[120 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
