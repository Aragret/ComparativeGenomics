%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAGCCACACCCCCACGGGAAACAGCAGUGAUUAACCUUUAGCAAUAAACGAAAGUUUAACUxxxxxxxxxxCUUCACAAAGCGCCUUCCCCCGUAAAUGAUAUCAUCUCAACUUAGUAUUAUACCCACACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[154.61671448 210.53543091]
[147.52030945 223.75062561]
[140.42390442 236.96580505]
[133.32749939 250.18098450]
[126.23110199 263.39617920]
[126.51898193 279.21475220]
[113.68113708 286.76718140]
[113.96901703 302.58575439]
[101.13117218 310.13818359]
[94.03476715 323.35336304]
[91.86827850 340.16830444]
[75.11071014 342.74133301]
[67.99929810 327.35092163]
[80.81958771 316.25695801]
[87.91599274 303.04177856]
[87.12052155 288.16842651]
[100.46595001 279.67077637]
[99.67048645 264.79742432]
[113.01591492 256.29977417]
[120.11231995 243.08457947]
[127.20872498 229.86940002]
[134.30513000 216.65422058]
[141.40153503 203.43902588]
[141.24752808 188.43981934]
[133.88128662 175.37312317]
[126.51505280 162.30642700]
[119.14881134 149.23974609]
[111.78257751 136.17304993]
[100.72463226 138.03672791]
[89.60372925 136.59556580]
[79.38610840 131.97476196]
[70.95954895 124.57581329]
[65.05619812 115.04156494]
[62.18896103 104.20041656]
[62.60697174 92.99431610]
[66.27391052 82.39690399]
[72.87116241 73.32895660]
[64.45775604 60.91064453]
[56.04434204 48.49232864]
[47.63093567 36.07401657]
[33.43062210 42.09910202]
[18.33531570 45.25177765]
[2.91979074 45.41383743]
[-12.22934532 42.58091354]
[-26.53597069 36.86257553]
[-39.45635986 28.47808456]
[-50.49984741 17.74799728]
[-59.24745941 5.08190489]
[-65.36782074 -9.03720188]
[-68.62968445 -24.07135010]
[-68.91069031 -39.44807816]
[-66.20195007 -54.58224487]
[-60.60830307 -68.89827728]
[-52.34427643 -81.85208893]
[-41.72584915 -92.95171356]
[-50.39245605 -105.19467163]
[-59.05906296 -117.43762207]
[-67.72566986 -129.68057251]
[-76.39228058 -141.92353821]
[-91.50837708 -148.28244019]
[-93.29071808 -164.58444214]
[-79.90578461 -174.05943298]
[-65.12284851 -166.96035767]
[-64.14932251 -150.59013367]
[-55.48271561 -138.34718323]
[-46.81610870 -126.10423279]
[-38.14950180 -113.86127472]
[-29.48289299 -101.61832428]
[-16.20323372 -107.69656372]
[-2.02550054 -111.21891785]
[12.56297970 -112.06274414]
[27.06047630 -110.19748688]
[40.96810150 -105.68580627]
[53.80698776 -98.68143463]
[65.13476562 -89.42397308]
[74.56080627 -78.23069000]
[81.75971222 -65.48562622]
[86.48252106 -51.62644577]
[88.56533051 -37.12938690]
[87.93497467 -22.49290657]
[84.61163330 -8.22054577]
[78.70811462 5.19640541]
[70.42611694 17.29581070]
[60.04924774 27.66060638]
[68.46266174 40.07891846]
[76.87606812 52.49723434]
[85.28948212 64.91555023]
[101.56188202 61.98844147]
[117.53929138 66.24068451]
[126.94314575 54.55447388]
[136.34700012 42.86826706]
[141.56634521 26.73771095]
[158.51136780 27.28769875]
[162.67372131 43.72275543]
[148.03321838 52.27212143]
[138.62934875 63.95833206]
[129.22549438 75.64453888]
[137.45039368 93.30775452]
[135.85188293 112.72637177]
[124.84926605 128.80680847]
[132.21551514 141.87350464]
[139.58174133 154.94020081]
[146.94798279 168.00688171]
[154.31422424 181.07357788]
[156.83921814 166.28762817]
[161.12913513 151.91416931]
[167.12135315 138.16304016]
[174.72836304 125.23503113]
[183.83911133 113.31890106]
[194.32058716 102.58862305]
[206.01972961 93.20086670]
[218.76574707 85.29270172]
[232.37252808 78.97959137]
[246.64141846 74.35369873]
[261.36407471 71.48257446]
[276.32553101 70.40814209]
[291.30737305 71.14608002]
[306.09085083 73.68561554]
[320.46008301 77.98967743]
[334.20529175 83.99541473]
[347.12582397 91.61514282]
[359.03298950 100.73761749]
[369.75292969 111.22962952]
[379.12918091 122.93801117]
[387.02481079 135.69180298]
[393.32452393 149.30479431]
[397.93637085 163.57821655]
[400.79299927 178.30369568]
[401.85272217 193.26622009]
[401.10003662 208.24732971]
[398.54595947 223.02827454]
[394.22778320 237.39328003]
[388.20852661 251.13258362]
[380.57608032 264.04559326]
[371.44189453 275.94378662]
[360.93933105 286.65341187]
[349.22174072 296.01812744]
[336.46017456 303.90118408]
[322.84100342 310.18753052]
[308.56304932 314.78533936]
[293.83477783 317.62747192]
[278.87121582 318.67245483]
[263.89083862 317.90505981]
[249.11241150 315.33642578]
[234.75167847 311.00408936]
[221.01829529 304.97131348]
[208.11279297 297.32617188]
[196.22360229 288.18029785]
[185.52432251 277.66720581]
[176.17112732 265.94039917]
[168.30062866 253.17109680]
[162.02769470 239.54574585]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[4 20]
[5 19]
[7 17]
[9 15]
[10 14]
[24 104]
[25 103]
[26 102]
[27 101]
[28 100]
[37 87]
[38 86]
[39 85]
[40 84]
[55 68]
[56 67]
[57 66]
[58 65]
[59 64]
[89 97]
[90 96]
[91 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
