%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUCCCCCAUUAUUCCUAGAACCAGGCGACCUGCGACUCCUUGACGUUGACAAUCGAGUAGUAxxxxxxxxxxUAAUUCCCCCCAUCCUUACCACCCUCGUUAACCCUAACAAAAAAAACUCAUACCCCCAUUAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[247.59286499 177.03379822]
[233.42388916 172.11038208]
[219.25491333 167.18695068]
[205.08593750 162.26351929]
[190.91696167 157.34008789]
[176.74798584 152.41665649]
[162.79017639 157.91024780]
[155.77795410 171.17028809]
[148.76571655 184.43032837]
[141.75349426 197.69036865]
[139.69395447 214.51875305]
[122.95309448 217.19828796]
[115.74395752 201.85342407]
[128.49345398 190.67814636]
[135.50567627 177.41810608]
[142.51791382 164.15806580]
[149.53013611 150.89802551]
[145.47682190 136.45605469]
[132.58895874 128.78120422]
[119.70111084 121.10636902]
[106.81324768 113.43153381]
[91.81401825 113.27952576]
[78.77326965 120.69158936]
[65.73251343 128.10365295]
[54.94995117 141.18695068]
[39.39304352 134.44760132]
[41.56243896 117.63301849]
[58.32044601 115.06289673]
[71.36119843 107.65083313]
[84.40195465 100.23876953]
[80.05657959 85.88127136]
[75.71160126 71.52504730]
[60.74932861 72.58824158]
[45.78705597 73.65143585]
[30.82478142 74.71463776]
[15.45405006 81.86843872]
[4.32477617 69.07877350]
[13.53372860 54.84390259]
[29.76158714 59.75236130]
[44.72386169 58.68916702]
[59.68613434 57.62596893]
[74.64840698 56.56277466]
[79.42799377 42.34463120]
[63.94953156 39.06929398]
[59.47621918 24.86229706]
[48.19444656 14.97687244]
[36.91267395 5.09144831]
[25.63090324 -4.79397631]
[7.51321983 -7.92920256]
[2.46109462 -24.70907211]
[-9.01870823 -34.36381912]
[-20.49851036 -44.01856613]
[-35.86932373 -41.14243317]
[-49.46733856 -48.86434937]
[-54.87198639 -63.53826523]
[-49.53136063 -78.23560333]
[-35.96714401 -86.01673126]
[-20.58393669 -83.20763397]
[-10.64522552 -71.13468933]
[-10.84376335 -55.49836731]
[0.63603896 -45.84362030]
[12.11584187 -36.18887329]
[24.22782135 -36.90871811]
[33.87742233 -28.90808105]
[35.51632690 -16.07574844]
[46.79809952 -6.19032431]
[58.07987213 3.69510007]
[69.36164856 13.58052444]
[84.03315735 16.14879227]
[89.31341553 31.06286049]
[99.90342712 20.43969345]
[113.39749146 13.88910961]
[128.29510498 12.13951874]
[142.93969727 15.38547230]
[155.70278931 23.26602745]
[165.16519165 34.90488434]
[170.27468872 49.00782776]
[170.46311951 64.00664520]
[165.70953369 78.23349762]
[156.54251099 90.10639954]
[143.98141479 98.30509949]
[129.42300415 101.91793823]
[114.48809052 100.54367828]
[127.37594604 108.21851349]
[140.26380920 115.89335632]
[153.15165710 123.56819153]
[171.94285583 122.39868927]
[181.67141724 138.24769592]
[195.84039307 143.17111206]
[210.00936890 148.09454346]
[224.17834473 153.01797485]
[238.34732056 157.94140625]
[252.51629639 162.86482239]
[261.57034302 145.43405151]
[273.33505249 129.70809937]
[287.49713135 116.10452271]
[303.67950439 104.98439789]
[321.45166016 96.64266205]
[340.34082031 91.30035400]
[359.84466553 89.09873962]
[379.44464111 90.09558105]
[398.61984253 94.26358795]
[416.86065674 101.49122620]
[433.68255615 111.58565521]
[448.63873291 124.27787018]
[461.33215332 139.22990417]
[471.42596436 156.04382324]
[478.65255737 174.27226257]
[482.82055664 193.43038940]
[497.78283691 192.36718750]
[512.74511719 191.30400085]
[527.70739746 190.24079895]
[540.98205566 180.61196899]
[555.84594727 187.53997803]
[557.00830078 203.89788818]
[543.27343750 212.85807800]
[528.77056885 205.20307922]
[513.80828857 206.26626587]
[498.84600830 207.32946777]
[483.88375854 208.39265442]
[483.44464111 219.81129456]
[481.92358398 231.13731384]
[479.33416748 242.26841736]
[475.69970703 253.10406494]
[471.05291748 263.54635620]
[465.43557739 273.50097656]
[458.89837646 282.87796021]
[451.50024414 291.59255981]
[443.30789185 299.56604004]
[434.39520264 306.72625732]
[424.84259033 313.00851440]
[414.73623657 318.35595703]
[404.16738892 322.72021484]
[393.23141479 326.06173706]
[382.02700806 328.35028076]
[370.65539551 329.56503296]
[359.21917725 329.69488525]
[347.82165527 328.73861694]
[336.56576538 326.70468140]
[325.55313110 323.61138916]
[314.88330078 319.48651123]
[304.65261841 314.36718750]
[294.95352173 308.29959106]
[285.87365723 301.33834839]
[277.49508667 293.54626465]
[269.89358521 284.99362183]
[263.13781738 275.75756836]
[257.28894043 265.92141724]
[252.39985657 255.57395935]
[248.51481628 244.80856323]
[245.66900635 233.72241211]
[243.88824463 222.41558838]
[243.18872070 210.99015808]
[243.57687378 199.54931641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 93]
[2 92]
[3 91]
[4 90]
[5 89]
[6 88]
[7 17]
[8 16]
[9 15]
[10 14]
[18 86]
[19 85]
[20 84]
[21 83]
[22 30]
[23 29]
[24 28]
[32 42]
[33 41]
[34 40]
[35 39]
[43 70]
[45 68]
[46 67]
[47 66]
[48 65]
[50 62]
[51 61]
[52 60]
[109 120]
[110 119]
[111 118]
[112 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
