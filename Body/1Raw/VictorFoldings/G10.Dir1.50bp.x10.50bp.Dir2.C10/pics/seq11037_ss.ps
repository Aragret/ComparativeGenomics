%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCUCCCUCACCAUUGGCAGCCUAGCAUUAGCAGGAAUACCUUUCCUCACAGGUUUCUACxxxxxxxxxxUUACCGUACAUAGCACAUUACAGUCAAAUCCCUUCUCGUCCCCAUGGAUGACCCCCCUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[220.27923584 503.64727783]
[220.27923584 488.64727783]
[220.27923584 473.64727783]
[220.27923584 458.64727783]
[220.27923584 443.64727783]
[220.27923584 428.64727783]
[220.27923584 413.64727783]
[220.27923584 398.64727783]
[220.27923584 383.64727783]
[220.27923584 368.64727783]
[204.29475403 364.65756226]
[189.85302734 356.70788574]
[177.91700745 345.32229614]
[169.28408813 331.25418091]
[164.53283691 315.43630981]
[163.98429871 298.91909790]
[167.68017578 282.80078125]
[175.37983704 268.15444946]
[186.57589722 255.95654297]
[200.52766418 247.02180481]
[216.31016541 241.94885254]
[215.37454224 226.97807312]
[214.43890381 212.00727844]
[213.50328064 197.03648376]
[208.60173035 182.85992432]
[200.09063721 170.50834656]
[191.45152283 158.24598694]
[182.68531799 146.07414246]
[170.88867188 136.80920410]
[156.98611450 131.17724609]
[143.08355713 125.54528809]
[129.18099976 119.91333008]
[115.27845001 114.28137207]
[97.31317902 125.51942444]
[73.94902039 115.68245697]
[58.95632553 115.21440887]
[44.76897049 123.43943787]
[30.68902016 115.03187561]
[31.20071983 98.64071655]
[45.77767563 91.12776947]
[59.42436981 100.22171783]
[74.41706085 100.68975830]
[78.42480469 86.23506927]
[65.33164978 78.91596222]
[52.23849487 71.59685516]
[39.14533997 64.27775574]
[26.05218697 56.95864868]
[10.28561974 59.92427063]
[-1.76869762 49.33781815]
[-0.86372524 33.32030869]
[12.30632019 24.15900612]
[27.63850594 28.88167763]
[33.37129211 43.86549377]
[46.46444702 51.18459702]
[59.55760193 58.50370407]
[72.65075684 65.82280731]
[85.74391174 73.14191437]
[100.87575531 71.97988129]
[113.42260742 78.13007355]
[120.42401886 88.81290436]
[120.91040802 100.37881470]
[134.81295776 106.01077271]
[148.71551514 111.64273071]
[162.61807251 117.27468872]
[176.52062988 122.90663910]
[167.64599609 110.81363678]
[161.52233887 97.12053680]
[158.42533875 82.44373322]
[158.49440002 67.44389343]
[161.72639465 52.79622650]
[167.97586060 39.16008759]
[176.96147156 27.14930534]
[188.27873230 17.30453682]
[201.41822815 10.06893826]
[215.78846741 5.76821709]
[230.74258423 4.59596872]
[245.60743713 6.60496092]
[259.71389771 11.70475960]
[272.42694092 19.66580009]
[283.17434692 30.12972069]
[291.47229004 42.62549210]
[296.94723511 56.59062576]
[299.35272217 71.39648438]
[298.58053589 86.37659454]
[294.66537476 100.85663605]
[287.78347778 114.18478394]
[278.24465942 125.76109314]
[266.47830200 135.06446838]
[253.01403809 141.67608643]
[238.45797729 145.29837036]
[223.46533203 145.76824951]
[208.71101379 143.06457520]
[194.85714722 137.30793762]
[203.62335205 149.47978210]
[211.22888184 154.65740967]
[212.44221497 161.99726868]
[220.95329285 174.34883118]
[220.15228271 159.37023926]
[222.64179993 144.57826233]
[228.30165100 130.68704224]
[236.85859680 118.36720276]
[247.89953613 108.21350098]
[260.89144897 100.71614075]
[275.20709229 96.23706818]
[290.15536499 94.99253082]
[305.01461792 97.04260254]
[319.06747437 102.28831482]
[331.63546753 110.47641754]
[342.11190796 121.21161652]
[349.99099731 133.97563171]
[354.89230347 148.15226746]
[356.57928467 163.05711365]
[354.97045898 177.97058105]
[350.14349365 192.17269897]
[342.33142090 204.97784424]
[331.91140747 215.76780701]
[319.38647461 224.02165222]
[305.36129761 229.34095764]
[290.51300049 231.46887207]
[275.55841064 230.30268860]
[261.21948242 225.89871216]
[248.18846130 218.46954346]
[237.09445190 208.37384033]
[228.47407532 196.10086060]
[229.40969849 211.07164001]
[230.34532166 226.04243469]
[231.28096008 241.01322937]
[244.71125793 243.21951294]
[257.36996460 248.20120239]
[268.69073486 255.73242188]
[278.16775513 265.47329712]
[285.37829590 276.98535156]
[290.00152588 289.75106812]
[291.83288574 303.19741821]
[290.79306030 316.72137451]
[286.93145752 329.71697998]
[280.42376709 341.60263062]
[271.56417847 351.84695435]
[260.75183105 359.99261475]
[248.47300720 365.67678833]
[235.27923584 368.64727783]
[235.27923584 383.64727783]
[235.27923584 398.64727783]
[235.27923584 413.64727783]
[235.27923584 428.64727783]
[235.27923584 443.64727783]
[235.27923584 458.64727783]
[235.27923584 473.64727783]
[235.27923584 488.64727783]
[235.27923584 503.64727783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[21 127]
[22 126]
[23 125]
[24 124]
[25 97]
[26 96]
[27 94]
[28 93]
[29 65]
[30 64]
[31 63]
[32 62]
[33 61]
[35 42]
[36 41]
[43 57]
[44 56]
[45 55]
[46 54]
[47 53]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
