%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUUCCCCUCCCACUCCCAUACUACUAAUCUCAUCAAUACAACCCCCGCCCAUCCUACCCAxxxxxxxxxxUGAGCACACCAUAUAUUUACAGUAGGAAUAGACGUAGACACACGAGCAUAUUUCACCUCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[77.69316864 115.89072418]
[92.06843567 111.61637878]
[77.65621948 115.77426910]
[63.24399948 119.93215179]
[52.12931824 131.19157410]
[37.75605011 127.28536224]
[23.34383392 131.44325256]
[8.93161774 135.60113525]
[-5.48059893 139.75903320]
[-19.89281464 143.91691589]
[-34.30503082 148.07479858]
[-48.71724701 152.23268127]
[-46.91859818 167.15786743]
[-47.53754807 182.17829895]
[-50.55806351 196.90489197]
[-55.90190506 210.95620728]
[-63.43065262 223.96827698]
[-72.94929504 235.60408020]
[-84.21127319 245.56217957]
[-96.92488098 253.58467102]
[-110.76080322 259.46374512]
[-125.36065674 263.04711914]
[-140.34626770 264.24194336]
[-155.32946777 263.01733398]
[-169.92216492 259.40493774]
[-183.74638367 253.49838257]
[-196.44401550 245.45063782]
[-207.68618774 235.47016907]
[-217.18167114 223.81547546]
[-224.68453979 210.78846741]
[-230.00044250 196.72654724]
[-232.99168396 181.99397278]
[-233.58076477 166.97235107]
[-231.75245667 152.05078125]
[-227.55410767 137.61575317]
[-221.09445190 124.04117584]
[-212.54081726 111.67867279]
[-202.11477661 100.84844971]
[-190.08636475 91.83103943]
[-176.76718140 84.86001587]
[-162.50218201 80.11595154]
[-147.66088867 77.72171783]
[-132.62773132 77.73933411]
[-117.79209900 80.16835022]
[-103.53826904 84.94583893]
[-90.23545074 91.94806671]
[-78.22821045 100.99363708]
[-67.82758331 111.84827423]
[-59.30295181 124.23079681]
[-52.87513351 137.82046509]
[-38.46291733 133.66258240]
[-24.05070305 129.50469971]
[-9.63848591 125.34680939]
[4.77372980 121.18891907]
[19.18594551 117.03103638]
[33.59816360 112.87314606]
[43.68198776 101.91113281]
[59.08611298 105.51993561]
[73.49832916 101.36205292]
[87.91054535 97.20416260]
[82.03087616 82.94382477]
[89.75764465 64.29861450]
[95.24467468 50.33822250]
[100.73170471 36.37783432]
[106.21873474 22.41744423]
[111.70576477 8.45705318]
[117.19280243 -5.50333643]
[104.64671326 -13.82046413]
[94.10826874 -24.56029510]
[86.03636932 -37.25167847]
[80.78179169 -51.33856583]
[78.57193756 -66.20435333]
[79.50099182 -81.19889069]
[83.52592468 -95.66690826]
[90.46846008 -108.97665405]
[100.02297211 -120.54747009]
[111.76995087 -129.87513733]
[125.19442749 -136.55384827]
[139.70851135 -140.29383850]
[154.67718506 -140.93399048]
[169.44604492 -138.44874573]
[174.93307495 -152.40913391]
[171.96319580 -168.53712463]
[184.61927795 -178.96571350]
[199.88183594 -172.96687317]
[202.05006409 -156.71168518]
[188.89346313 -146.92210388]
[183.40643311 -132.96171570]
[195.91500854 -124.72575378]
[206.44184875 -114.06476593]
[214.52508545 -101.44306183]
[219.80935669 -87.41101837]
[222.06138611 -72.58113861]
[221.18034363 -57.60128021]
[217.20231628 -43.12636185]
[210.29882812 -29.78973770]
[200.76948547 -18.17547798]
[189.02894592 -8.79279613]
[175.58886719 -2.05371237]
[161.03564453 1.74502861]
[146.00477600 2.43502760]
[131.15318298 -0.01630474]
[125.66616058 13.94408512]
[120.17913055 27.90447426]
[114.69209290 41.86486435]
[109.20506287 55.82525635]
[103.71803284 69.78564453]
[107.24060059 76.40693665]
[117.65811157 65.61456299]
[131.14138794 72.18734741]
[129.05665588 87.04177094]
[114.28573608 89.64952087]
[117.80830383 96.27081299]
[132.45179749 99.52164459]
[147.09530640 102.77246857]
[160.29067993 94.07432556]
[175.75469971 97.33615112]
[184.31285095 110.62274933]
[180.88771057 126.05142212]
[167.51138306 134.46861267]
[152.11978149 130.88055420]
[143.84448242 117.41596985]
[129.20097351 114.16514587]
[114.55747986 110.91431427]
[129.17395020 114.28456879]
[142.79211426 120.57308960]
[154.83619690 129.51402283]
[164.79696655 140.72932434]
[172.25329590 153.74482727]
[176.88990784 168.01022339]
[178.51078796 182.92239380]
[177.04740906 197.85084534]
[172.56163025 212.16439819]
[165.24310303 225.25787354]
[155.40127563 236.57769775]
[143.45225525 245.64526367]
[129.90121460 252.07717896]
[115.32112885 255.60153198]
[100.32843018 256.06927490]
[85.55699921 253.46069336]
[71.63137054 247.88601685]
[59.14033127 239.58096313]
[48.61198807 228.89666748]
[40.49148560 216.28488159]
[35.12215424 202.27879333]
[32.73101044 187.47061157]
[33.41915131 172.48640442]
[37.15747833 157.95970154]
[43.78794098 144.50469971]
[53.03020477 132.69027710]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 60]
[3 59]
[4 58]
[6 56]
[7 55]
[8 54]
[9 53]
[10 52]
[11 51]
[12 50]
[62 107]
[63 106]
[64 105]
[65 104]
[66 103]
[67 102]
[81 88]
[82 87]
[113 124]
[114 123]
[115 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
