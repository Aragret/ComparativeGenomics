%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAGCGCCUUCCCCCGUAAAUGAUAUCAUCUCAACUUAGUAUUAUACCCACACCCACCCAAxxxxxxxxxxCUCCCCUUUUAUACUAAUAAUCUUAUAGAAAUUUAGGUUAAAUACAGACCAAGAGCCUUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-240.12373352 433.21936035]
[-256.36514282 428.64288330]
[-272.24230957 422.93020630]
[-287.67590332 416.10992432]
[-302.58871460 408.21618652]
[-316.90621948 399.28845215]
[-325.67242432 411.46029663]
[-334.43862915 423.63211060]
[-343.20483398 435.80395508]
[-351.97103882 447.97579956]
[-360.73724365 460.14764404]
[-369.50344849 472.31945801]
[-378.26965332 484.49130249]
[-382.61993408 500.87762451]
[-399.57015991 501.23355103]
[-404.60446167 485.04428101]
[-390.44149780 475.72509766]
[-381.67529297 463.55325317]
[-372.90908813 451.38143921]
[-364.14288330 439.20959473]
[-355.37667847 427.03775024]
[-346.61047363 414.86590576]
[-337.84426880 402.69409180]
[-329.07806396 390.52224731]
[-339.71481323 381.84609985]
[-349.83517456 372.57263184]
[-359.40563965 362.73248291]
[-368.39450073 352.35821533]
[-376.77203369 341.48419189]
[-384.51049805 330.14633179]
[-391.58428955 318.38217163]
[-397.96997070 306.23065186]
[-403.64639282 293.73196411]
[-408.59478760 280.92742920]
[-412.79876709 267.85946655]
[-416.24438477 254.57125854]
[-418.92022705 241.10682678]
[-420.81744385 227.51071167]
[-421.92974854 213.82788086]
[-422.25344849 200.10363770]
[-421.78744507 186.38337708]
[-420.53326416 172.71250916]
[-418.49508667 159.13626099]
[-415.67959595 145.69958496]
[-412.09609985 132.44691467]
[-407.75646973 119.42214203]
[-402.67504883 106.66834259]
[-396.86865234 94.22773743]
[-390.35644531 82.14149475]
[-383.15997314 70.44962311]
[-375.30307007 59.19080734]
[-366.81170654 48.40231705]
[-357.71398926 38.11985779]
[-348.03997803 28.37746429]
[-337.82171631 19.20738220]
[-327.09298706 10.63996601]
[-315.88928223 2.70357609]
[-304.24768066 -4.57551622]
[-292.20669556 -11.17321301]
[-279.80615234 -17.06767082]
[-267.08709717 -22.23937607]
[-254.09159851 -26.67119980]
[-240.86267090 -30.34846687]
[-227.44409180 -33.25899887]
[-213.88023376 -35.39314651]
[-200.21601868 -36.74384689]
[-186.49662781 -37.30660629]
[-172.76747131 -37.07955933]
[-159.07397461 -36.06343842]
[-145.46147156 -34.26159668]
[-131.97499084 -31.67998695]
[-118.65915680 -28.32713890]
[-105.55805206 -24.21413231]
[-92.71501923 -19.35456848]
[-80.17257690 -13.76451588]
[-67.97222137 -7.46246243]
[-56.15433502 -0.46925092]
[-44.75802994 7.19198847]
[-33.82102585 15.49591351]
[-23.37951851 24.41505623]
[-13.46807003 33.91991043]
[-4.11948538 43.97903442]
[4.63529015 54.55914688]
[12.76727772 65.62524414]
[20.24955750 77.14072418]
[27.05735970 89.06747437]
[33.16814423 101.36604309]
[38.56168365 113.99574280]
[52.68648529 108.94698334]
[66.81128693 103.89823151]
[80.93609619 98.84947205]
[87.23012543 85.79836273]
[100.87422943 80.92142487]
[114.01515198 87.02572632]
[128.13995361 81.97696686]
[142.26475525 76.92821503]
[156.38955688 71.87945557]
[160.84718323 57.13375473]
[172.99087524 47.94765854]
[188.03715515 47.67683411]
[200.21203613 56.21559143]
[214.33683777 51.16683578]
[228.46163940 46.11808014]
[241.34150696 35.09332657]
[255.50091553 44.41789627]
[250.46046448 60.60524368]
[233.51039124 60.24288177]
[219.38558960 65.29164124]
[205.26078796 70.34039307]
[201.25709534 84.66200256]
[189.44828796 93.99024200]
[174.23310852 94.58327484]
[161.43830872 86.00425720]
[147.31350708 91.05301666]
[133.18870544 96.10176849]
[119.06390381 101.15052795]
[112.76987457 114.20163727]
[99.12577057 119.07857513]
[85.98484802 112.97427368]
[71.86004639 118.02303314]
[57.73524475 123.07178497]
[43.61043930 128.12054443]
[48.21561050 144.36126709]
[51.66154480 160.88658142]
[53.93105316 177.61386108]
[55.01281357 194.45945740]
[54.90145874 211.33914185]
[53.59757233 228.16853333]
[51.10771179 244.86346436]
[47.44435883 261.34048462]
[42.62586212 277.51721191]
[36.67634583 293.31277466]
[29.62558746 308.64819336]
[21.50887680 323.44680786]
[12.36682034 337.63464355]
[2.24516058 351.14077759]
[-8.80546951 363.89773560]
[-20.72978973 375.84170532]
[-33.46815872 386.91302490]
[-46.95685959 397.05633545]
[-61.12842560 406.22097778]
[-75.91198730 414.36111450]
[-91.23361206 421.43612671]
[-107.01667023 427.41064453]
[-123.18224335 432.25482178]
[-139.64949036 435.94445801]
[-156.33605957 438.46118164]
[-173.15853882 439.79241943]
[-190.03279114 439.93151855]
[-206.87443542 438.87786865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 24]
[7 23]
[8 22]
[9 21]
[10 20]
[11 19]
[12 18]
[13 17]
[88 122]
[89 121]
[90 120]
[91 119]
[94 116]
[95 115]
[96 114]
[97 113]
[101 109]
[102 108]
[103 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
