%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUCCCCUCCCACUCCCAUACUACUAAUCUCAUCAAUACAACCCCCGCCCAUCCUACCCAGxxxxxxxxxxGCGCCUAUAGCACUCGAAUAAUUCUUCUCACCCUAACAGGUCAACCUCGCUUCCCCACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-70.05373383 176.36428833]
[-75.62195587 162.50364685]
[-89.94454956 166.96046448]
[-104.26714325 171.41728210]
[-115.14518738 182.90548706]
[-129.59660339 179.29914856]
[-143.91920471 183.75596619]
[-158.24180603 188.21278381]
[-172.56439209 192.66960144]
[-186.88699341 197.12640381]
[-201.20959473 201.58322144]
[-215.53219604 206.04003906]
[-213.48611450 220.93511963]
[-213.91973877 235.96382141]
[-216.82125854 250.71614075]
[-222.11148071 264.78964233]
[-229.64611816 277.80038452]
[-239.21960449 289.39340210]
[-250.57077026 299.25247192]
[-263.38995361 307.10858154]
[-277.32742310 312.74743652]
[-292.00296021 316.01522827]
[-307.01620483 316.82275391]
[-321.95758057 315.14804077]
[-336.41952515 311.03674316]
[-350.00741577 304.60101318]
[-362.35064697 296.01644897]
[-373.11242676 285.51721191]
[-381.99920654 273.38977051]
[-388.76855469 259.96493530]
[-393.23574829 245.60896301]
[-395.27896118 230.71350098]
[-394.84243774 215.68487549]
[-391.93807983 200.93310547]
[-386.64514160 186.86064148]
[-379.10800171 173.85134888]
[-369.53228760 162.26017761]
[-358.17919922 152.40330505]
[-345.35852051 144.54965210]
[-331.41998291 138.91348267]
[-316.74380493 135.64852905]
[-301.73037720 134.84387207]
[-286.78933716 136.52148438]
[-272.32818604 140.63557434]
[-258.74151611 147.07391357]
[-246.39996338 155.66085815]
[-235.64018250 166.16215515]
[-226.75575256 178.29130554]
[-219.98901367 191.71743774]
[-205.66641235 187.26063538]
[-191.34381104 182.80381775]
[-177.02120972 178.34700012]
[-162.69862366 173.89018250]
[-148.37602234 169.43336487]
[-134.05342102 164.97654724]
[-124.19982910 153.80712891]
[-108.72396088 157.09468079]
[-94.40136719 152.63787842]
[-80.07876587 148.18106079]
[-83.82485962 130.95477295]
[-85.92694855 113.45164490]
[-86.36623383 95.82821655]
[-85.13878632 78.24209595]
[-82.25558472 60.85057068]
[-77.74241638 43.80916595]
[-71.63964081 27.27029228]
[-64.00183868 11.38186455]
[-54.89731598 -3.71402287]
[-44.40749741 -17.88236427]
[-32.62619781 -30.99644470]
[-19.65877914 -42.93898392]
[-5.62121630 -53.60317612]
[9.36095142 -62.89364624]
[25.15373230 -70.72730255]
[41.61588669 -77.03409576]
[58.60018921 -81.75762177]
[75.95474243 -84.85562897]
[93.52433777 -86.30040741]
[111.15184784 -86.07904816]
[128.67962646 -84.19352722]
[145.95091248 -80.66070557]
[162.81124878 -75.51217651]
[179.10983276 -68.79399109]
[186.01683044 -82.10914612]
[182.56069946 -97.77549744]
[192.76586914 -110.15427399]
[208.80381775 -109.74953461]
[218.37159729 -96.87175751]
[214.12963867 -81.39967346]
[199.33200073 -75.20214844]
[192.42498779 -61.88698959]
[200.96984863 -56.69992828]
[209.22436523 -51.06228638]
[217.16482544 -44.99028015]
[224.76838684 -38.50136566]
[232.01318359 -31.61420059]
[238.87838745 -24.34859085]
[245.34425354 -16.72542763]
[251.39219666 -8.76662922]
[257.00482178 -0.49508122]
[262.16601562 8.06543159]
[266.86087036 16.89029503]
[271.07595825 25.95413208]
[274.79913330 35.23088455]
[278.01968384 44.69387436]
[280.72836304 54.31589127]
[282.91735840 64.06926727]
[284.58038330 73.92596436]
[285.71267700 83.85762787]
[286.31097412 93.83571625]
[286.37353516 103.83152008]
[285.90020752 113.81631470]
[300.80209351 115.52900696]
[315.70401001 117.24169159]
[332.12991333 113.04339600]
[340.71130371 127.66517639]
[329.03649902 139.95889282]
[313.99133301 132.14360046]
[299.08941650 130.43090820]
[284.18753052 128.71821594]
[281.29684448 143.37312317]
[277.24212646 157.74954224]
[272.04934692 171.75515747]
[265.75186157 185.30004883]
[258.39013672 198.29722595]
[250.01138306 210.66326904]
[240.66944885 222.31877136]
[230.42431641 233.18887329]
[219.34173584 243.20379639]
[207.49288940 252.29924011]
[194.95384216 260.41677856]
[181.80511475 267.50433350]
[168.13113403 273.51635742]
[154.01969910 278.41427612]
[139.56141663 282.16659546]
[124.84910583 284.74929810]
[109.97724915 286.14572144]
[95.04132843 286.34695435]
[80.13724518 285.35168457]
[65.36069489 283.16632080]
[50.80656433 279.80484009]
[36.56829453 275.28887939]
[22.73730659 269.64743042]
[9.40241051 262.91671753]
[-3.35077524 255.13992310]
[-15.44036388 246.36700439]
[-26.78873062 236.65429688]
[-37.32300949 226.06414795]
[-46.97555923 214.66456604]
[-55.68440628 202.52874756]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 59]
[3 58]
[4 57]
[6 55]
[7 54]
[8 53]
[9 52]
[10 51]
[11 50]
[12 49]
[83 91]
[84 90]
[112 120]
[113 119]
[114 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
