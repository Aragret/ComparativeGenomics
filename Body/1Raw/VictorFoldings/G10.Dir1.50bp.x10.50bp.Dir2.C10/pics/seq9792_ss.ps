%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAGCCUAAUUAUUAGCAUCAUCCCUCUACUAUUUUUUAACCAAAUCAACAACAACCUAUUUxxxxxxxxxxUCCAAGCCUCACCCCACUACUAGGCCUCCUCCUAGCAGCAGCAGGCAAAUCAGCCCAAUUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[99.67963409 275.83035278]
[99.67963409 260.83035278]
[99.67963409 245.83036804]
[99.67963409 230.83036804]
[99.67963409 215.83036804]
[99.67963409 200.83036804]
[99.67963409 185.83036804]
[99.67963409 170.83036804]
[99.67963409 155.83036804]
[99.67963409 140.83036804]
[74.70420074 127.78952789]
[65.85229492 103.48583984]
[74.87255859 81.72221375]
[65.23075104 70.23154449]
[55.58893204 58.74088287]
[45.94712067 47.25021362]
[36.30530548 35.75954819]
[24.13615608 44.54101944]
[11.35846233 52.41076660]
[-1.95960248 59.32680130]
[-15.74697876 65.25222778]
[-29.93010521 70.15542603]
[-44.43330383 74.01023865]
[-59.17919922 76.79608917]
[-74.08911133 78.49813080]
[-89.08348846 79.10726929]
[-104.08232880 78.62025452]
[-119.00560760 77.03968811]
[-133.77369690 74.37400818]
[-148.30781555 70.63742828]
[-162.53039551 65.84989166]
[-176.36557007 60.03693390]
[-189.73950195 53.22957993]
[-202.58087158 45.46414566]
[-214.82112122 36.78206635]
[-226.39497375 27.22966003]
[-237.24066162 16.85789680]
[-247.30030823 5.72211313]
[-256.52026367 -6.11827421]
[-264.85134888 -18.60009193]
[-272.24905396 -31.65674210]
[-278.67395020 -45.21856308]
[-284.09176636 -59.21319580]
[-288.47357178 -73.56597137]
[-291.79602051 -88.20030975]
[-294.04135132 -103.03813171]
[-295.19757080 -118.00026703]
[-295.25854492 -133.00688171]
[-294.22393799 -147.97792053]
[-292.09927368 -162.83351135]
[-288.89590454 -177.49436951]
[-284.63088989 -191.88227844]
[-279.32696533 -205.92047119]
[-273.01251221 -219.53405762]
[-265.72113037 -232.65040588]
[-257.49179077 -245.19950867]
[-248.36834717 -257.11444092]
[-238.39952087 -268.33160400]
[-227.63848877 -278.79116821]
[-216.14265442 -288.43731689]
[-203.97335815 -297.21859741]
[-191.19554138 -305.08813477]
[-177.87736511 -312.00393677]
[-164.08988953 -317.92913818]
[-149.90667725 -322.83212280]
[-135.40341187 -326.68667603]
[-120.65747833 -329.47229004]
[-105.74753571 -331.17410278]
[-90.75315094 -331.78298950]
[-75.75431061 -331.29571533]
[-60.83106232 -329.71490479]
[-46.06301498 -327.04898071]
[-31.52896500 -323.31216431]
[-17.30645943 -318.52438354]
[-3.47138333 -312.71121216]
[9.90244675 -305.90362549]
[22.74367714 -298.13800049]
[34.98379135 -289.45571899]
[46.55747986 -279.90310669]
[57.40299606 -269.53118896]
[67.46247101 -258.39523315]
[76.68223572 -246.55468750]
[85.01309967 -234.07273865]
[92.41059875 -221.01596069]
[98.83528900 -207.45404053]
[104.25286865 -193.45932007]
[108.63443756 -179.10646057]
[111.95663452 -164.47207642]
[114.20170593 -149.63421631]
[115.35769653 -134.67205811]
[115.41843414 -119.66543579]
[114.38358307 -104.69441223]
[112.25867462 -89.83887482]
[109.05504608 -75.17807007]
[104.78978729 -60.79022598]
[99.48565674 -46.75211334]
[93.17095947 -33.13862991]
[85.87937927 -20.02240944]
[77.64981842 -7.47343349]
[68.52619171 4.44134235]
[58.55718231 15.65834713]
[47.79597092 26.11773300]
[57.43778610 37.60839844]
[67.07959747 49.09906769]
[76.72141266 60.58973312]
[86.36322784 72.08039856]
[97.09224701 67.43099213]
[109.36257172 66.97637939]
[121.51540375 71.19691467]
[131.75991821 79.91410065]
[138.43423462 92.26425171]
[140.26568604 106.77461243]
[155.03779602 109.37934113]
[169.80992126 111.98406219]
[178.86793518 110.38779449]
[184.85726929 114.79689789]
[199.57278442 117.70436859]
[214.91181946 111.90384674]
[227.43168640 122.49559784]
[224.25300598 138.58372498]
[208.64575195 143.61816406]
[196.66531372 132.41989136]
[181.94979858 129.51242065]
[167.20520020 126.75617981]
[152.43307495 124.15145874]
[137.66096497 121.54673004]
[131.91563416 126.36763763]
[143.63061523 135.73562622]
[155.34559631 145.10362244]
[167.06057739 154.47160339]
[181.69610596 157.75814819]
[192.39634705 168.27026367]
[195.94192505 182.84519958]
[191.26608276 197.09780884]
[179.77565002 206.73988342]
[164.92771912 208.87043762]
[151.18960571 202.84844971]
[142.69468689 190.48576355]
[141.99911499 175.50067139]
[134.80772400 162.33692932]
[127.61634827 149.17318726]
[120.42496490 136.00946045]
[114.67963409 140.83036804]
[114.67963409 155.83036804]
[114.67963409 170.83036804]
[114.67963409 185.83036804]
[114.67963409 200.83036804]
[114.67963409 215.83036804]
[114.67963409 230.83036804]
[114.67963409 245.83036804]
[114.67963409 260.83035278]
[114.67963409 275.83035278]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[13 106]
[14 105]
[15 104]
[16 103]
[17 102]
[112 126]
[113 125]
[114 124]
[116 123]
[117 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
