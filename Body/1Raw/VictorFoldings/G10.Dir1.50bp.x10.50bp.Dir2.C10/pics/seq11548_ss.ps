%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCCUUAAACACCCCUCCCCACAUCAAGCCCGAAUGAUAUUUCCUAUUCGCCUACACAAUUxxxxxxxxxxGACAUCUGGUUCCUACUUCAGGGUCAUAAAGCCUAAAUAGCCCACACGUUCCCCUUAAAUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-14.75365829 267.86483765]
[-23.66980934 279.92724609]
[-32.58596039 291.98968506]
[-41.50210953 304.05212402]
[-50.41826248 316.11456299]
[-59.33441162 328.17697144]
[-68.25056458 340.23941040]
[-77.16671753 352.30184937]
[-86.08286285 364.36428833]
[-78.91526031 377.83975220]
[-78.31283569 393.09097290]
[-84.39521027 407.08981323]
[-95.95471191 417.05679321]
[-110.69620514 421.01293945]
[-125.69274902 418.17279053]
[-137.96676636 409.10025024]
[-145.08125305 395.59664917]
[-145.62361145 380.34317017]
[-139.48616028 366.36840820]
[-127.88749695 356.44702148]
[-113.13053894 352.54895020]
[-98.14529419 355.44812012]
[-89.22914886 343.38568115]
[-80.31299591 331.32327271]
[-71.39684296 319.26083374]
[-62.48069382 307.19839478]
[-53.56454086 295.13595581]
[-44.64839172 283.07354736]
[-35.73224258 271.01110840]
[-26.81608963 258.94866943]
[-45.49566650 242.04933167]
[-61.94245529 222.97009277]
[-75.90406036 202.00373840]
[-87.16622925 179.47203064]
[-95.55613708 155.72073364]
[-100.94501495 131.11434937]
[-103.25018311 106.03047943]
[-102.43624878 80.85406494]
[-98.51571655 55.97146606]
[-91.54875183 31.76453209]
[-81.64225769 8.60474396]
[-94.78388977 1.37304175]
[-107.92552185 -5.85866070]
[-121.06715393 -13.09036350]
[-134.20878601 -20.32206535]
[-147.30778503 -12.30259991]
[-162.66198730 -11.92307949]
[-176.14118958 -19.28559494]
[-184.11955261 -32.40966415]
[-184.45094299 -47.76498032]
[-177.04621887 -61.22104263]
[-163.89720154 -69.15823364]
[-148.54092407 -69.44149017]
[-135.10813904 -61.99461746]
[-127.21220398 -48.82078934]
[-126.97708130 -33.46369553]
[-113.83544922 -26.23199463]
[-100.69381714 -19.00029182]
[-87.55218506 -11.76858997]
[-74.41055298 -4.53688717]
[-68.30968475 -14.10018826]
[-61.68500900 -23.30839348]
[-54.55715179 -32.13284683]
[-46.94828796 -40.54608536]
[-38.88210678 -48.52192688]
[-30.38370323 -56.03554916]
[-21.47952843 -63.06356812]
[-12.19729233 -69.58410645]
[-2.56588483 -75.57688141]
[7.38472176 -81.02323914]
[17.62355995 -85.90622711]
[28.11876297 -90.21064758]
[38.83766937 -93.92311096]
[49.74692535 -97.03205872]
[60.81257248 -99.52780914]
[72.00017548 -101.40261078]
[83.27491760 -102.65061951]
[94.60171509 -103.26795197]
[105.94530487 -103.25268555]
[117.27040100 -102.60487366]
[128.54174805 -101.32653046]
[139.72425842 -99.42163086]
[150.78315735 -96.89610291]
[161.68399048 -93.75780487]
[172.39286804 -90.01651001]
[182.87646484 -85.68386078]
[193.10211182 -80.77333069]
[203.03802490 -75.30021667]
[212.65327454 -69.28154755]
[221.91792297 -62.73604584]
[230.80316162 -55.68409348]
[239.28131104 -48.14762878]
[247.32600403 -40.15010834]
[254.91218567 -31.71642113]
[262.01626587 -22.87281799]
[268.61614990 -13.64681625]
[274.69125366 -4.06713104]
[280.22271729 5.83642435]
[285.19326782 16.03302956]
[289.58749390 26.49095154]
[293.39172363 37.17764282]
[307.81909180 33.07269669]
[322.24649048 28.96775246]
[333.40243530 17.74922371]
[347.76126099 21.70817375]
[356.79260254 8.44868279]
[372.80044556 7.38625574]
[383.50491333 19.33589554]
[380.69445801 35.13085938]
[366.52505493 42.65460587]
[351.86621094 36.13555908]
[341.74218750 47.06047440]
[326.35140991 43.39513779]
[311.92404175 47.50008392]
[297.49664307 51.60502625]
[300.10903931 63.89772415]
[301.95706177 76.32832336]
[303.03366089 88.84934235]
[303.33471680 101.41294861]
[302.85910034 113.97116089]
[301.60858154 126.47600555]
[299.58801270 138.87973022]
[296.80502319 151.13493347]
[293.27032471 163.19480896]
[288.99737549 175.01330566]
[284.00250244 186.54527283]
[278.30477905 197.74664307]
[271.92599487 208.57466125]
[264.89047241 218.98794556]
[257.22512817 228.94673157]
[248.95922852 238.41297913]
[240.12432861 247.35050964]
[230.75419617 255.72521973]
[220.88461304 263.50506592]
[210.55328369 270.66040039]
[199.79968262 277.16384888]
[188.66485596 282.99057007]
[177.19136047 288.11831665]
[165.42300415 292.52749634]
[153.40475464 296.20126343]
[141.18251038 299.12561035]
[128.80296326 301.28933716]
[116.31340027 302.68417358]
[103.76152039 303.30484009]
[91.19526672 303.14889526]
[78.66265106 302.21701050]
[66.21154022 300.51269531]
[53.88948441 298.04248047]
[41.74356461 294.81579590]
[29.82016945 290.84494019]
[18.16484070 286.14514160]
[6.82210350 280.73428345]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 30]
[2 29]
[3 28]
[4 27]
[5 26]
[6 25]
[7 24]
[8 23]
[9 22]
[41 60]
[42 59]
[43 58]
[44 57]
[45 56]
[101 115]
[102 114]
[103 113]
[105 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
