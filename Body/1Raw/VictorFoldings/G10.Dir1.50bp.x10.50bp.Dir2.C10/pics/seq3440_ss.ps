%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAUAAAACUCUUCACCAAAGAGCCCCUAAAACCCGCCACAUCUACCAUCACCCUCUACAUxxxxxxxxxxACUAACAACAUUUCCCCCGCAUCCCCCUUCCAAACAACAAUCCCCCUCUACCUAAAACUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[170.50245667 63.51725006]
[157.89132690 71.63879395]
[151.38023376 85.03486633]
[135.58859253 86.00170898]
[122.97746277 94.12325287]
[110.36633301 102.24478912]
[98.19449615 111.01100159]
[86.49487305 120.39816284]
[74.79524994 129.78532410]
[63.09562683 139.17248535]
[51.39600372 148.55964661]
[66.25826263 150.58778381]
[76.46870422 161.57627869]
[77.40190125 176.54721069]
[68.63511658 188.71862793]
[54.13977051 192.57675171]
[40.48241043 186.37380981]
[33.84995270 172.91978455]
[37.24717712 158.30917358]
[24.30912209 165.89907837]
[11.37106609 173.48898315]
[-1.56698978 181.07888794]
[-6.98681593 196.17872620]
[-22.21743393 201.21934509]
[-35.57521820 192.33401489]
[-36.81322098 176.33879089]
[-24.98174858 165.50386047]
[-9.15689850 168.14083862]
[3.78115797 160.55093384]
[16.71921349 152.96102905]
[29.65727043 145.37110901]
[42.00884247 136.86003113]
[53.70846558 127.47286224]
[65.40808868 118.08570099]
[77.10771179 108.69853973]
[88.80733490 99.31137848]
[74.51775360 94.74981689]
[68.97601318 80.81105042]
[76.23268890 67.68318939]
[90.98372650 64.96163940]
[102.44731903 74.63562775]
[102.24479675 89.63366699]
[114.85591888 81.51212311]
[127.46704865 73.39057922]
[134.88017273 59.41359711]
[149.76977539 59.02766418]
[162.38090515 50.90612030]
[155.01843262 37.83221817]
[148.44340515 24.34511757]
[142.67889404 10.49219418]
[137.74517822 -3.67789316]
[133.65957642 -18.11537170]
[130.43643188 -32.76952744]
[128.08706665 -47.58889008]
[126.61975098 -62.52140045]
[126.03961945 -77.51461792]
[126.34871674 -92.51586151]
[127.54595947 -107.47245026]
[129.62713623 -122.33184814]
[132.58494568 -137.04185486]
[136.40898132 -151.55081177]
[141.08583069 -165.80773926]
[146.59906006 -179.76257324]
[152.92929077 -193.36628723]
[160.05432129 -206.57109070]
[167.94908142 -219.33062744]
[176.58586121 -231.60005188]
[185.93434143 -243.33628845]
[195.96165466 -254.49809265]
[206.63258362 -265.04626465]
[217.90966797 -274.94378662]
[229.75326538 -284.15582275]
[242.12181091 -292.65008545]
[254.97183228 -300.39666748]
[268.25817871 -307.36843872]
[281.93423462 -313.54086304]
[295.95193481 -318.89227295]
[310.26202393 -323.40383911]
[324.81423950 -327.05975342]
[339.55749512 -329.84716797]
[354.43997192 -331.75628662]
[369.40939331 -332.78039551]
[384.41320801 -332.91589355]
[399.39871216 -332.16232300]
[414.31326294 -330.52233887]
[429.10443115 -328.00167847]
[443.72033691 -324.60919189]
[458.10955811 -320.35681152]
[472.22161865 -315.25949097]
[486.00692749 -309.33508301]
[499.41705322 -302.60446167]
[512.40490723 -295.09118652]
[524.92480469 -286.82174683]
[536.93292236 -277.82510376]
[548.38690186 -268.13290405]
[559.24664307 -257.77920532]
[569.47387695 -246.80032349]
[579.03283691 -235.23484802]
[587.88983154 -223.12342834]
[596.01373291 -210.50857544]
[603.37609863 -197.43460083]
[609.95104980 -183.94744873]
[615.71539307 -170.09446716]
[620.64898682 -155.92434692]
[624.73449707 -141.48683167]
[627.95751953 -126.83264160]
[630.30670166 -112.01325989]
[631.77392578 -97.08073425]
[632.35394287 -82.08751678]
[632.04467773 -67.08627319]
[630.84735107 -52.12969208]
[628.76599121 -37.27031326]
[625.80810547 -22.56033325]
[621.98388672 -8.05141544]
[617.30694580 6.20547390]
[611.79357910 20.16025543]
[605.46325684 33.76391602]
[598.33807373 46.96866608]
[590.44323730 59.72812653]
[581.80633545 71.99748230]
[572.45776367 83.73362732]
[562.43035889 94.89534760]
[551.75933838 105.44343567]
[540.48217773 115.34083557]
[528.63848877 124.55278778]
[516.26983643 133.04692078]
[503.41976929 140.79342651]
[490.13333130 147.76506042]
[476.45724487 153.93736267]
[462.43951416 159.28863525]
[448.12936401 163.80009460]
[433.57711792 167.45588684]
[418.83386230 170.24316406]
[403.95135498 172.15214539]
[388.98190308 173.17613220]
[373.97808838 173.31150818]
[358.99258423 172.55781555]
[344.07806396 170.91769409]
[329.28689575 168.39689636]
[314.67105103 165.00428772]
[300.28186035 160.75178528]
[286.16983032 155.65432739]
[272.38458252 149.72981262]
[258.97451782 142.99905396]
[245.98674011 135.48568726]
[233.46687317 127.21611786]
[221.45889282 118.21937561]
[210.00497437 108.52708435]
[199.14533997 98.17327118]
[188.91815186 87.19430542]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 47]
[2 46]
[4 44]
[5 43]
[6 42]
[7 36]
[8 35]
[9 34]
[10 33]
[11 32]
[19 31]
[20 30]
[21 29]
[22 28]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
