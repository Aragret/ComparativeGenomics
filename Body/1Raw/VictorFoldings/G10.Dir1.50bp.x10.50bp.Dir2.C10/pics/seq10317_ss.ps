%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCCUCAUUACUAUUCUGCCUAGCAAACUCAAACUACGAACGCACUCACAGUCGCAUCAUAAUxxxxxxxxxxCCUACUAAACCCCAUUAAACGCCUGGCAGCCGGAAGCCUAUUCGCAGGAUUUCUCAUUACUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[118.52938843 340.05020142]
[118.52938843 325.05020142]
[118.52938843 310.05020142]
[118.52938843 295.05020142]
[118.52938843 280.05020142]
[118.52938843 265.05020142]
[118.52938843 250.05020142]
[118.52938843 235.05020142]
[118.52938843 220.05020142]
[118.52938843 205.05020142]
[116.55893707 190.18019104]
[112.65218353 175.69787598]
[108.74542999 161.21556091]
[104.83867645 146.73326111]
[93.34035492 146.50869751]
[82.24105835 143.49746704]
[72.20583344 137.88000488]
[63.83594894 129.99285889]
[57.63291931 120.30863190]
[53.96840286 109.40756989]
[53.06197357 97.94283295]
[54.96794128 86.60134888]
[59.57210159 76.06268311]
[66.59859467 66.95826721]
[75.62639618 59.83362579]
[69.99164581 45.93220139]
[64.35688782 32.03078079]
[58.72212982 18.12936020]
[53.08737564 4.22793770]
[38.80855942 -1.99727023]
[33.29214859 -16.17555809]
[39.31492996 -29.74986076]
[33.68017197 -43.65128326]
[19.32579041 -39.26387787]
[4.63981628 -36.16230011]
[-10.26280785 -34.37081528]
[-25.26544762 -33.90345001]
[-40.25068283 -34.76385880]
[-55.10123444 -36.94531250]
[-69.70087433 -40.43073654]
[-83.93534088 -45.19284821]
[-97.69321442 -51.19437790]
[-110.86683655 -58.38835907]
[-123.35309601 -66.71848297]
[-135.05426025 -76.11956024]
[-145.87876892 -86.51800537]
[-155.74189758 -97.83243561]
[-164.56643677 -109.97430420]
[-172.28334045 -122.84858704]
[-178.83221436 -136.35450745]
[-184.16178894 -150.38638306]
[-188.23034668 -164.83436584]
[-191.00607300 -179.58540344]
[-192.46722412 -194.52403259]
[-192.60235596 -209.53334045]
[-191.41043091 -224.49584961]
[-188.90077209 -239.29447937]
[-185.09300232 -253.81338501]
[-180.01695251 -267.93893433]
[-173.71234131 -281.56057739]
[-166.22850037 -294.57171631]
[-157.62400818 -306.87051392]
[-147.96620178 -318.36071777]
[-137.33068848 -328.95239258]
[-125.80068970 -338.56262207]
[-113.46644592 -347.11621094]
[-100.42449188 -354.54623413]
[-86.77690887 -360.79452515]
[-72.63050079 -365.81216431]
[-58.09598541 -369.55990601]
[-43.28712082 -372.00839233]
[-28.31980515 -373.13848877]
[-13.31118202 -372.94134521]
[1.62128341 -371.41848755]
[16.36072350 -368.58184814]
[30.79177856 -364.45361328]
[44.80150223 -359.06610107]
[58.28025436 -352.46148682]
[71.12253571 -344.69143677]
[83.22783661 -335.81680298]
[94.50142670 -325.90701294]
[104.85505676 -315.03964233]
[114.20770264 -303.29971313]
[122.48616028 -290.77914429]
[129.62565613 -277.57592773]
[135.57028198 -263.79336548]
[140.27354431 -249.53935242]
[143.69860840 -234.92543030]
[145.81867981 -220.06599426]
[146.61717224 -205.07733154]
[146.08781433 -190.07675171]
[144.23477173 -175.18165588]
[141.07254028 -160.50862122]
[136.62586975 -146.17248535]
[130.92955017 -132.28546143]
[124.02817535 -118.95621490]
[115.97575378 -106.28908539]
[106.83531189 -94.38320923]
[96.67839050 -83.33175659]
[85.58448029 -73.22122955]
[73.64039612 -64.13076782]
[60.93963623 -56.13149643]
[47.58159637 -49.28603745]
[53.21635056 -35.38461685]
[66.99081421 -29.83486176]
[72.90328979 -15.81711197]
[66.98880005 -1.40681803]
[72.62355042 12.49460411]
[78.25830841 26.39602470]
[83.89306641 40.29744720]
[89.52781677 54.19886780]
[110.34648895 54.17031097]
[129.13365173 63.14026642]
[142.20053101 79.34750366]
[146.98146057 99.60980225]
[161.80848694 101.88121796]
[176.63551331 104.15263367]
[190.36566162 95.85429382]
[205.36363220 101.54996490]
[210.12425232 116.87041473]
[200.99557495 130.06309509]
[184.98036194 131.00772095]
[174.36408997 118.97966003]
[159.53707886 116.70823669]
[144.71005249 114.43682098]
[139.02577209 126.16103363]
[130.34007263 135.87324524]
[119.32099152 142.82650757]
[123.22774506 157.30880737]
[127.13449097 171.79112244]
[131.04124451 186.27343750]
[135.97215271 172.10705566]
[146.15797424 161.09573364]
[159.89796448 155.07806396]
[174.89794922 155.05879211]
[188.65336609 161.04116821]
[198.86743164 172.02629089]
[203.83470154 186.17994690]
[202.72578430 201.13890076]
[195.72583008 214.40542603]
[184.00363159 223.76438904]
[169.51647949 227.65312195]
[154.68328857 225.42230225]
[141.98078918 217.44441223]
[133.52938843 205.05020142]
[133.52938843 220.05020142]
[133.52938843 235.05020142]
[133.52938843 250.05020142]
[133.52938843 265.05020142]
[133.52938843 280.05020142]
[133.52938843 295.05020142]
[133.52938843 310.05020142]
[133.52938843 325.05020142]
[133.52938843 340.05020142]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 154]
[2 153]
[3 152]
[4 151]
[5 150]
[6 149]
[7 148]
[8 147]
[9 146]
[10 145]
[11 131]
[12 130]
[13 129]
[14 128]
[25 111]
[26 110]
[27 109]
[28 108]
[29 107]
[32 104]
[33 103]
[115 125]
[116 124]
[117 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
