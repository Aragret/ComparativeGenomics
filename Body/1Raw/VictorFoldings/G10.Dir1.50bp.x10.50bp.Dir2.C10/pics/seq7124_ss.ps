%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCAAACCUACGCCAAAAUCCAUUUCACUAUCAUAUUCAUCGGCGUAAAUCUAACUUUCUUxxxxxxxxxxUAUUAAAGUUUACCACAACCACCACCCCAUCAUACUCUUUCACCCACAGCACCAAUCCUACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[243.57037354 227.68685913]
[231.98132324 218.16351318]
[220.39227295 208.64018250]
[208.80322266 199.11683655]
[194.05776978 197.01429749]
[188.30804443 182.27485657]
[176.71899414 172.75151062]
[161.97352600 170.64897156]
[156.22380066 155.90953064]
[144.63475037 146.38618469]
[132.02008057 155.84490967]
[117.48450470 161.95346069]
[101.90002441 164.34539795]
[86.20156097 162.87721252]
[71.33087921 157.63697815]
[58.18006516 148.93907166]
[47.53805923 137.30528259]
[40.04327011 123.43353271]
[36.14532471 108.15599060]
[21.14611435 108.30998993]
[6.14690495 108.46398163]
[-8.85230446 108.61798096]
[-23.85151482 108.77198029]
[-38.85072327 108.92597961]
[-53.62284088 111.53070068]
[-67.77015686 116.51602173]
[-81.91747284 121.50134277]
[-90.11544037 135.29165649]
[-106.02750397 137.33753967]
[-117.44730377 126.06953430]
[-115.61454010 110.13151550]
[-101.93515015 101.74975586]
[-86.90279388 107.35402679]
[-72.75547791 102.36870575]
[-58.60816193 97.38338470]
[-73.22965240 94.03494263]
[-85.87538147 85.96738434]
[-95.07428741 74.11917114]
[-99.75628662 59.86859894]
[-99.37673187 44.87340164]
[-93.97977448 30.87794304]
[-84.19322968 19.51029015]
[-71.15554810 12.09281826]
[-56.38338089 9.48838806]
[-41.59514236 11.99996948]
[-28.51112366 19.33539200]
[-18.65336037 30.64134407]
[-13.16858959 44.60262299]
[-12.69484329 59.59513855]
[-17.28723145 73.87483978]
[-26.41152954 85.78060913]
[-39.00471878 93.92676544]
[-24.00551033 93.77276611]
[-9.00630188 93.61877441]
[5.99290800 93.46477509]
[20.99211693 93.31077576]
[35.99132538 93.15678406]
[39.19479370 78.86550903]
[45.54572296 65.66821289]
[54.71536636 54.24804306]
[66.22908020 45.19612503]
[79.49087524 38.98102188]
[93.81428528 35.92444611]
[94.12226105 20.92760658]
[94.43023682 5.93076849]
[94.73822021 -9.06606960]
[95.04619598 -24.06290817]
[95.35417175 -39.05974579]
[81.12934113 -44.24942780]
[69.36190033 -53.77865219]
[61.32830429 -66.61376190]
[57.89997482 -81.36250305]
[59.44878769 -96.42503357]
[65.80673981 -110.16748810]
[76.28417206 -121.09918976]
[89.74457550 -128.03434753]
[104.72785187 -130.22068787]
[119.60873413 -127.42105865]
[132.77305603 -119.93912506]
[142.79286194 -108.58648682]
[148.58125305 -94.59459686]
[149.51037598 -79.48117065]
[145.47943115 -64.88562012]
[136.92565918 -52.39115143]
[124.77691650 -43.35307312]
[110.35101318 -38.75176620]
[110.04303741 -23.75493050]
[109.73505402 -8.75809193]
[109.42707825 6.23874617]
[109.11910248 21.23558426]
[108.81112671 36.23242188]
[122.67936707 39.75395203]
[135.42713928 46.25191116]
[146.42466736 55.40526581]
[155.12860107 66.76180267]
[161.10891724 79.76045227]
[164.07019043 93.75903320]
[163.86611938 108.06594086]
[160.50675964 121.97435760]
[154.15809631 134.79714966]
[165.74713135 144.32048035]
[181.32151794 147.10420227]
[186.24232483 161.16246033]
[197.83137512 170.68580627]
[213.40576172 173.46952820]
[218.32656860 187.52778625]
[229.91561890 197.05113220]
[241.50466919 206.57446289]
[253.09370422 216.09780884]
[264.12277222 205.89617920]
[276.43829346 197.29141235]
[289.81082153 190.44381714]
[303.99121094 185.48097229]
[318.71533203 182.49531555]
[333.70886230 181.54246521]
[348.69247437 182.64016724]
[363.38705444 185.76800537]
[377.51882935 190.86767578]
[390.82455444 197.84419250]
[403.05630493 206.56758118]
[413.98626709 216.87532043]
[423.41082764 228.57540894]
[431.15435791 241.44984436]
[437.07263184 255.25881958]
[441.05538940 269.74508667]
[443.02844238 284.63873291]
[442.95501709 299.66232300]
[440.83651733 314.53598022]
[436.71237183 328.98260498]
[430.65942383 342.73309326]
[422.79043579 355.53125000]
[413.25198364 367.13864136]
[402.22183228 377.33908081]
[389.90536499 385.94250488]
[376.53210449 392.78866577]
[362.35116577 397.74996948]
[347.62673950 400.73403931]
[332.63311768 401.68527222]
[317.64959717 400.58593750]
[302.95538330 397.45651245]
[288.82415771 392.35531616]
[275.51919556 385.37734985]
[263.28836060 376.65264893]
[252.35951233 366.34371948]
[242.93624878 354.64260864]
[235.19410706 341.76733398]
[229.27732849 327.95773315]
[225.29612732 313.47103882]
[223.32469177 298.57717896]
[223.39973450 283.55358887]
[225.51985168 268.68017578]
[229.64556885 254.23397827]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 109]
[2 108]
[3 107]
[4 106]
[6 104]
[7 103]
[9 101]
[10 100]
[19 57]
[20 56]
[21 55]
[22 54]
[23 53]
[24 52]
[25 35]
[26 34]
[27 33]
[63 91]
[64 90]
[65 89]
[66 88]
[67 87]
[68 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
