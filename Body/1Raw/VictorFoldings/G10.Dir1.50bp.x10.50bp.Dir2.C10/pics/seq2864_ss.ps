%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUAAACUACCAAACCUGCAUUAAAAAUUUCGGUUGGGGCGACCUCGGAGCAGAACCCAAxxxxxxxxxxCCCACCAUCAUAGCCACCAUCACCCUCCUUAACCUCUACUUCUACCUACGCCUAAUCUACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[81.86706543 262.27755737]
[81.55500793 247.28080750]
[81.24295044 232.28405762]
[80.93089294 217.28729248]
[80.61884308 202.29054260]
[80.30678558 187.29379272]
[79.99472809 172.29704285]
[79.68267059 157.30027771]
[79.37061310 142.30352783]
[67.10824585 133.66441345]
[52.88146591 138.41822815]
[38.65468979 143.17204285]
[51.89451981 150.22235107]
[57.66696930 164.06716919]
[53.35705185 178.43464661]
[40.91720963 186.81619263]
[25.98281097 185.41488647]
[15.31928253 174.86550903]
[13.75730896 159.94705200]
[22.00480080 147.41748047]
[7.23874569 150.05635071]
[-7.52730989 152.69520569]
[-22.29336548 155.33407593]
[-30.25130844 159.95175171]
[-37.39383316 157.87089539]
[-52.21158981 160.20199585]
[-60.26387787 164.65312195]
[-67.36156464 162.42413330]
[-81.61556244 174.03460693]
[-97.59117889 166.83880615]
[-112.40893555 169.16990662]
[-127.22669220 171.50100708]
[-141.93374634 179.93539429]
[-154.10983276 168.13796997]
[-146.14413452 153.17189026]
[-129.55780029 156.68325806]
[-114.74003601 154.35214233]
[-99.92227936 152.02104187]
[-92.51714325 142.40484619]
[-80.14418793 140.37289429]
[-69.38390350 147.56108093]
[-54.54269409 145.38424683]
[-39.72493744 143.05313110]
[-24.93223000 140.56802368]
[-10.16617393 137.92915344]
[4.59988165 135.29029846]
[19.36593628 132.65142822]
[33.90087509 128.94526672]
[48.12765121 124.19145203]
[62.35443115 119.43763733]
[58.47866821 101.97463989]
[62.16333389 84.81796265]
[72.46102905 71.03144073]
[87.27015686 62.95588684]
[103.75849915 61.81348801]
[118.90341949 67.53008270]
[128.88615417 56.33432007]
[132.29536438 40.88479614]
[146.54055786 36.53464890]
[156.52328491 25.33888435]
[159.81230164 7.25125599]
[176.63099670 2.33891463]
[186.37864685 -9.06210613]
[196.12631226 -20.46312714]
[205.87396240 -31.86414909]
[195.62446594 -42.83811569]
[186.66813660 -54.89067841]
[179.11761475 -67.87026215]
[173.06785583 -81.61363983]
[168.59494019 -95.94796753]
[165.75509644 -110.69297791]
[164.58407593 -125.66323853]
[165.09658813 -140.67048645]
[167.28617859 -155.52597046]
[171.12532043 -170.04289246]
[176.56573486 -184.03868103]
[183.53900146 -197.33731079]
[191.95741272 -209.77154541]
[201.71511841 -221.18501282]
[212.68939209 -231.43417358]
[224.74221802 -240.39013672]
[237.72203064 -247.94027710]
[251.46559143 -253.98962402]
[265.80004883 -258.46212769]
[280.54513550 -261.30151367]
[295.51544189 -262.47207642]
[310.52267456 -261.95913696]
[325.37811279 -259.76910400]
[339.89489746 -255.92951965]
[353.89053345 -250.48869324]
[367.18893433 -243.51502991]
[379.62292480 -235.09623718]
[391.03610229 -225.33819580]
[401.28494263 -214.36361694]
[410.24053955 -202.31051636]
[417.79028320 -189.33047485]
[423.83923340 -175.58673096]
[428.31130981 -161.25213623]
[431.15023804 -146.50695801]
[432.32037354 -131.53663635]
[431.80697632 -116.52941895]
[429.61648560 -101.67405701]
[425.77648926 -87.15736389]
[420.33523560 -73.16190338]
[413.36117554 -59.86369324]
[404.94201660 -47.42995834]
[395.18362427 -36.01707458]
[384.20874023 -25.76856995]
[372.15536499 -16.81332779]
[359.17510986 -9.26396942]
[345.43118286 -3.21543860]
[331.09646606 1.25619936]
[316.35119629 4.09470844]
[301.38082886 5.26439190]
[286.37362671 4.75053883]
[271.51834106 2.55961275]
[257.00177002 -1.28083420]
[243.00646973 -6.72250414]
[229.70846558 -13.69696140]
[217.27497864 -22.11649704]
[207.52732849 -10.71547508]
[197.77967834 0.68554568]
[188.03202820 12.08656693]
[188.65263367 24.20771217]
[180.56880188 33.79262161]
[167.71905518 35.32160950]
[157.73632812 46.51737595]
[155.04113770 61.16610336]
[140.08190918 66.31704712]
[130.09918213 77.51280975]
[134.57315063 84.21128845]
[137.55744934 91.79293823]
[138.87960815 99.92668915]
[138.44068909 108.24831390]
[136.22151184 116.37667847]
[132.28530884 123.93126678]
[126.77651978 130.54991150]
[119.91584778 135.90612793]
[111.99151611 139.72515869]
[103.34724426 141.79776001]
[94.36737061 141.99147034]
[94.67942810 156.98823547]
[94.99147797 171.98498535]
[95.30353546 186.98173523]
[95.61559296 201.97848511]
[95.92765045 216.97525024]
[96.23970795 231.97200012]
[96.55176544 246.96875000]
[96.86381531 261.96551514]
[99.45481873 281.17321777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 50]
[11 49]
[12 48]
[20 47]
[21 46]
[22 45]
[23 44]
[25 43]
[26 42]
[28 41]
[30 38]
[31 37]
[32 36]
[56 130]
[57 129]
[59 127]
[60 126]
[62 123]
[63 122]
[64 121]
[65 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
