%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUCAACUACCUAACCAACAAACUUAAAAUAAAAUCCCCACUAUGCACAUUUUAUUUCUCCxxxxxxxxxxUCCACAUCAAAACCCCCUCCCCAUGCUUACAAGCAAGUACAGCAAUCAACCCUCAACUAUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[87.83306122 101.21773529]
[75.16154480 93.19073486]
[62.49002838 85.16374207]
[49.81851578 77.13674164]
[37.14699936 69.10974884]
[24.47548294 61.08274841]
[11.80396652 53.05575180]
[-0.86754978 45.02875519]
[-13.53906536 37.00175858]
[-26.21058083 28.97476196]
[-35.15539932 41.02455139]
[-44.96569824 52.38083649]
[-55.58790588 62.98159027]
[-66.96400452 72.76891327]
[-79.03185272 81.68935394]
[-91.72554779 89.69418335]
[-104.97576141 96.73968506]
[-118.71011353 102.78738403]
[-132.85360718 107.80423737]
[-147.32897949 111.76286316]
[-162.05718994 114.64162445]
[-176.95777893 116.42479706]
[-191.94937134 117.10265350]
[-206.95007324 116.67149353]
[-221.87797546 115.13365173]
[-236.65153503 112.49755096]
[-251.19007874 108.77757263]
[-265.41418457 103.99404144]
[-279.24615479 98.17308044]
[-292.61047363 91.34648132]
[-305.43411255 83.55153656]
[-317.64706421 74.83081055]
[-329.18261719 65.23194122]
[-339.97775269 54.80734634]
[-349.97354126 43.61396790]
[-359.11535645 31.71294022]
[-367.35327148 19.16926193]
[-374.64230347 6.05144596]
[-380.94265747 -7.56886482]
[-386.21990967 -21.61727905]
[-390.44522095 -36.01707077]
[-393.59552002 -50.68958664]
[-395.65362549 -65.55469513]
[-396.60824585 -80.53120422]
[-396.45422363 -95.53732300]
[-395.19238281 -110.49108124]
[-392.82958984 -125.31081390]
[-389.37878418 -139.91558838]
[-384.85879517 -154.22561646]
[-379.29431152 -168.16275024]
[-372.71572876 -181.65086365]
[-365.15896606 -194.61630249]
[-356.66531372 -206.98825073]
[-347.28115845 -218.69912720]
[-337.05773926 -229.68498230]
[-326.05087280 -239.88578796]
[-314.32073975 -249.24586487]
[-301.93136597 -257.71408081]
[-288.95040894 -265.24417114]
[-275.44879150 -271.79501343]
[-261.50024414 -277.33084106]
[-247.18096924 -281.82138062]
[-232.56913757 -285.24215698]
[-217.74458313 -287.57446289]
[-202.78825378 -288.80557251]
[-187.78186035 -288.92874146]
[-172.80734253 -287.94332886]
[-157.94648743 -285.85467529]
[-143.28048706 -282.67422485]
[-128.88940430 -278.41931152]
[-114.85187531 -273.11318970]
[-101.24454498 -266.78488159]
[-88.14173889 -259.46887207]
[-75.61502075 -251.20518494]
[-63.73281479 -242.03892517]
[-52.56000900 -232.02015686]
[-42.15762711 -221.20361328]
[-32.58249283 -209.64834595]
[-23.88689232 -197.41749573]
[-16.11832237 -184.57785034]
[-9.31921387 -171.19953918]
[-3.52670026 -157.35562134]
[1.22758090 -143.12171936]
[4.91766357 -128.57556152]
[7.52339268 -113.79661560]
[9.03053761 -98.86557770]
[9.43086624 -83.86401367]
[8.72219181 -68.87384796]
[6.90838575 -53.97696304]
[3.99935412 -39.25470734]
[0.01098467 -24.78749847]
[-5.03493881 -10.65435028]
[-11.11085701 3.06754589]
[-18.18358421 16.30324554]
[-5.51206875 24.33024216]
[7.15944719 32.35723877]
[19.83096313 40.38423538]
[32.50247955 48.41123581]
[45.17399597 56.43823242]
[57.84551239 64.46522522]
[70.51702881 72.49222565]
[83.18854523 80.51922607]
[95.86006165 88.54621887]
[103.38476562 88.34517670]
[109.56378174 92.59779358]
[124.56298828 92.75179291]
[139.56219482 92.90579224]
[154.56141663 93.05978394]
[169.56141663 93.05978394]
[184.56062317 92.90579224]
[199.55982971 92.75179291]
[210.43940735 81.28835297]
[226.24026489 80.95903015]
[237.58802795 91.95919037]
[237.75028992 107.76264954]
[226.63075256 118.99348450]
[210.82647705 118.98864746]
[199.71382141 107.75099945]
[184.71461487 107.90499878]
[169.71540833 108.05899811]
[163.01788330 111.29248810]
[154.40740967 108.05899811]
[139.40820312 107.90499878]
[124.40899658 107.75099945]
[109.40978241 107.59700775]
[122.23442078 115.37702179]
[133.19670105 125.61560059]
[141.83311462 137.87986755]
[147.77854919 151.65129089]
[150.78160095 166.34759521]
[150.71531677 181.34745789]
[147.58248901 196.01664734]
[141.51559448 209.73498535]
[132.77111816 221.92245483]
[121.71879578 232.06375122]
[108.82589722 239.73011780]
[94.63754272 244.59742737]
[79.75361633 246.45986938]
[64.80340576 245.23872375]
[50.41900635 240.98561096]
[37.20858383 233.88034058]
[25.73067856 224.22334290]
[16.47057152 212.42289734]
[9.81978226 198.97793579]
[6.05950260 184.45690918]
[5.34871769 169.47375488]
[7.71747923 154.66197205]
[13.06563663 140.64779663]
[21.16707039 128.02374268]
[31.67925262 117.32355499]
[44.15773010 108.99963379]
[58.07491302 103.40392303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 103]
[2 102]
[3 101]
[4 100]
[5 99]
[6 98]
[7 97]
[8 96]
[9 95]
[10 94]
[105 125]
[106 124]
[107 123]
[108 122]
[109 120]
[110 119]
[111 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
