%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGAACUGACAAUUAACAGCCCAAUAUCUACAAUCAACCAACAAGUCAUUAUUACCCUCACUGxxxxxxxxxxCUCUUCCCCACAACAAUAUUCAUGUGCCUAGACCAAGAAGUUAUUAUCUCGAACUGACACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[86.98577118 261.73138428]
[89.57154083 242.52294922]
[89.87952423 227.52610779]
[90.18750000 212.52926636]
[90.49547577 197.53244019]
[90.80345154 182.53559875]
[91.11143494 167.53875732]
[91.41941071 152.54191589]
[91.72738647 137.54508972]
[92.03536224 122.54824829]
[92.34333801 107.55140686]
[89.73861694 92.77928925]
[84.31999207 78.79220581]
[78.90136719 64.80512238]
[73.48274231 50.81803894]
[59.19504166 55.40002060]
[44.66099548 59.12754059]
[29.93165016 61.98750305]
[15.05874825 63.96986771]
[0.09453118 65.06766510]
[-14.90843964 65.27704620]
[-29.89746475 64.59726715]
[-44.81989288 63.03071976]
[-59.62331009 60.58291245]
[-74.25572205 57.26243210]
[-88.66572571 53.08095169]
[-102.80270386 48.05315399]
[-116.61700439 42.19670105]
[-130.06010437 35.53216553]
[-143.08477783 28.08295250]
[-155.64527893 19.87523079]
[-167.69749451 10.93782902]
[-179.19908142 1.30214202]
[-190.10964966 -8.99798489]
[-200.39085388 -19.92637253]
[-210.00660706 -31.44463539]
[-218.92311096 -43.51231003]
[-227.10906982 -56.08701324]
[-234.53570557 -69.12457275]
[-241.17694092 -82.57920074]
[-247.00946045 -96.40362549]
[-252.01275635 -110.54929352]
[-256.16928101 -124.96652222]
[-259.46438599 -139.60466003]
[-261.88656616 -154.41229248]
[-263.42724609 -169.33741760]
[-264.08105469 -184.32759094]
[-263.84570312 -199.33018494]
[-262.72195435 -214.29248047]
[-260.71383667 -229.16192627]
[-257.82836914 -243.88629150]
[-254.07568359 -258.41384888]
[-249.46894836 -272.69360352]
[-244.02436829 -286.67535400]
[-237.76106262 -300.31002808]
[-230.70103455 -313.54968262]
[-222.86907959 -326.34786987]
[-214.29269409 -338.65960693]
[-205.00201416 -350.44161987]
[-195.02967834 -361.65258789]
[-184.41070557 -372.25308228]
[-173.18241882 -382.20587158]
[-161.38421631 -391.47601318]
[-149.05758667 -400.03094482]
[-136.24578857 -407.84063721]
[-122.99384308 -414.87759399]
[-109.34829712 -421.11715698]
[-95.35708618 -426.53738403]
[-81.06934357 -431.11923218]
[-66.53526306 -434.84661865]
[-51.80589294 -437.70645142]
[-36.93297577 -439.68869019]
[-21.96874619 -440.78637695]
[-6.96577454 -440.99560547]
[8.02324390 -440.31570435]
[22.94565964 -438.74902344]
[37.74905777 -436.30108643]
[52.38143539 -432.98046875]
[66.79140472 -428.79885864]
[80.92833710 -423.77096558]
[94.74259186 -417.91436768]
[108.18563080 -411.24972534]
[121.21024323 -403.80038452]
[133.77067566 -395.59255981]
[145.82279968 -386.65505981]
[157.32431030 -377.01925659]
[168.23478699 -366.71905518]
[178.51589966 -355.79055786]
[188.13154602 -344.27221680]
[197.04794312 -332.20446777]
[205.23379517 -319.62969971]
[212.66030884 -306.59207153]
[219.30143738 -293.13739014]
[225.13381958 -279.31289673]
[230.13700867 -265.16720581]
[234.29338074 -250.74993896]
[237.58837891 -236.11177063]
[240.01042175 -221.30410767]
[241.55097961 -206.37896729]
[242.20465088 -191.38879395]
[241.96916199 -176.38619995]
[240.84530640 -161.42391968]
[238.83705139 -146.55448914]
[235.95144653 -131.83015442]
[232.19862366 -117.30261230]
[227.59178162 -103.02291107]
[222.14707947 -89.04120636]
[215.88365173 -75.40660095]
[208.82350159 -62.16698837]
[200.99142456 -49.36888123]
[192.41494751 -37.05722809]
[183.12416077 -25.27527618]
[173.15173340 -14.06441021]
[162.53266907 -3.46400785]
[151.30427551 6.48869514]
[139.50601196 15.75874043]
[127.17929077 24.31356621]
[114.36743164 32.12312317]
[101.11542511 39.15997696]
[87.46982574 45.39941406]
[92.88845062 59.38649750]
[98.30707550 73.37358093]
[103.72570038 87.36066437]
[106.36386108 72.59448242]
[113.16393280 59.22440338]
[123.54350281 48.39553070]
[136.61360168 41.03532410]
[151.25480652 37.77416611]
[166.21313477 38.89136124]
[180.20747375 44.29122925]
[192.03923035 53.51128769]
[200.69506836 65.76186371]
[205.43362427 79.99372864]
[205.84906006 94.98797607]
[201.90580750 109.46038818]
[193.94157410 122.17144775]
[182.63847351 132.03248596]
[168.96459961 138.19894409]
[154.09107971 140.14268494]
[139.29176331 137.69721985]
[125.83418274 131.07199097]
[114.87093353 120.83445740]
[107.34017944 107.85938263]
[107.03220367 122.85622406]
[106.72422791 137.85305786]
[106.41624451 152.84989929]
[106.10826874 167.84674072]
[105.80029297 182.84356689]
[105.49231720 197.84040833]
[105.18433380 212.83724976]
[104.87635803 227.83409119]
[104.56838226 242.83093262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 152]
[3 151]
[4 150]
[5 149]
[6 148]
[7 147]
[8 146]
[9 145]
[10 144]
[11 143]
[12 123]
[13 122]
[14 121]
[15 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
