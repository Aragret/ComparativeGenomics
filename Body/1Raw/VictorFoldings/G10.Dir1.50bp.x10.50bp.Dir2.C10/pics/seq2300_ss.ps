%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGAAAAAACCUUGUAGAGAGAGUAAAAAAUUUAACACCCAUAGUAGGCCUAAAAGCAGCCAxxxxxxxxxxCCUCACAAUCAUGGCAAGCCAACGCCACUUAUCCAGUGAACCACUAUCACGAAAAAAACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[80.31188202 485.46716309]
[82.90288544 466.25942993]
[83.21494293 451.26269531]
[83.52699280 436.26593018]
[83.83905029 421.26916504]
[84.15110779 406.27243042]
[84.46316528 391.27566528]
[84.77522278 376.27890015]
[85.08728027 361.28216553]
[85.39933014 346.28540039]
[85.71138763 331.28866577]
[71.32947540 327.15222168]
[58.49852753 319.42800903]
[48.09629440 308.63735962]
[40.83617783 295.51168823]
[37.21833420 280.94284058]
[37.49520874 265.92242432]
[41.65393066 251.47450256]
[49.41679001 238.58557129]
[60.25975800 228.13731384]
[73.44787598 220.84629822]
[88.08506775 217.21478271]
[88.39712524 202.21803284]
[85.37229156 195.42126465]
[88.87490082 186.91340637]
[89.49887848 171.92639160]
[82.29771423 158.88827515]
[90.60237885 145.42190552]
[91.22635651 130.43489075]
[81.58010864 125.76756287]
[74.04222107 118.15084839]
[69.47548676 108.45656586]
[54.48278809 108.92461395]
[39.49009323 109.39265442]
[24.49739647 109.86069489]
[8.85464001 116.39831543]
[-1.75783479 103.17667389]
[8.00927162 89.31882477]
[24.02935410 94.86799622]
[39.02204895 94.39995575]
[54.01474762 93.93191528]
[69.00744629 93.46387482]
[79.92197418 75.50239563]
[99.67699432 68.32737732]
[103.07997131 53.71848297]
[106.48294830 39.10958862]
[93.40155792 27.45741653]
[88.01316071 10.88139343]
[91.70481110 -6.06234789]
[103.38063049 -18.76387596]
[119.78501129 -23.81367683]
[122.57733917 -38.55148315]
[125.36965942 -53.28928757]
[123.88851166 -62.36993027]
[128.37641907 -68.30324554]
[131.47474670 -82.97977448]
[134.57307434 -97.65629578]
[124.13483429 -105.38084412]
[117.43721008 -116.45115662]
[115.45365143 -129.18946838]
[118.44628143 -141.68093872]
[125.93191528 -152.06150818]
[136.75962830 -158.79600525]
[149.28761292 -160.90525818]
[152.99377441 -175.44020081]
[147.58460999 -193.01065063]
[160.25222778 -205.11567688]
[163.65519714 -219.72456360]
[167.05818176 -234.33346558]
[170.46115112 -248.94235229]
[157.22175598 -256.19638062]
[146.43121338 -266.75415039]
[138.89027405 -279.83227539]
[135.15852356 -294.46020508]
[135.51287842 -309.55249023]
[139.92704773 -323.98916626]
[148.07345581 -336.69894409]
[159.34761047 -346.73867798]
[172.91287231 -353.36334229]
[187.76261902 -356.08132935]
[202.79490662 -354.69097900]
[216.89422607 -349.29544067]
[229.01431274 -340.29513550]
[238.25579834 -328.35787964]
[243.93287659 -314.36956787]
[245.62428284 -299.36816406]
[243.20451355 -284.46691895]
[236.85311890 -270.77157593]
[227.04141235 -259.29843140]
[214.49748230 -250.89888000]
[200.15219116 -246.19619751]
[185.07005310 -245.53938293]
[181.66706848 -230.93048096]
[178.26408386 -216.32159424]
[174.86111450 -201.71269226]
[180.99340820 -191.23881531]
[178.23109436 -179.00816345]
[167.52871704 -171.73403931]
[163.82255554 -157.19911194]
[176.54917908 -145.68228149]
[181.75366211 -129.23336792]
[177.92893982 -112.31916809]
[166.03268433 -99.58029938]
[149.24958801 -94.55797577]
[146.15127563 -79.88144684]
[143.05294800 -65.20492554]
[140.10746765 -50.49696350]
[137.31513977 -35.75915909]
[134.52282715 -21.02135086]
[144.98146057 -13.80911350]
[151.94239807 -3.12556076]
[154.33241272 9.44736671]
[151.75825500 22.03174019]
[144.57090759 32.73413467]
[133.81813049 39.93049622]
[121.09184265 42.51256561]
[117.68886566 57.12145996]
[114.28588867 71.73035431]
[124.42507935 79.83381653]
[130.46276855 91.32363129]
[131.38508606 104.27040100]
[127.03714752 116.50006866]
[118.14907837 125.95901489]
[106.21337891 131.05886841]
[105.58940125 146.04588318]
[112.74593353 160.15597534]
[104.48589325 172.55036926]
[103.86192322 187.53738403]
[103.39387512 202.53007507]
[103.08181763 217.52684021]
[117.55527496 221.76409912]
[130.42868042 229.59741211]
[140.82763672 240.48767090]
[148.04760742 253.68836975]
[151.60173035 268.29678345]
[151.25354004 283.31570435]
[147.03277588 297.72146606]
[139.23294067 310.53375244]
[128.39083862 320.88232422]
[115.24967957 328.06613159]
[100.70814514 331.60070801]
[100.39608765 346.59747314]
[100.08403015 361.59420776]
[99.77197266 376.59097290]
[99.45991516 391.58770752]
[99.14786530 406.58447266]
[98.83580780 421.58123779]
[98.52375031 436.57797241]
[98.21169281 451.57473755]
[97.89963531 466.57150269]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[11 141]
[22 130]
[23 129]
[25 128]
[26 127]
[28 125]
[29 124]
[32 42]
[33 41]
[34 40]
[35 39]
[44 118]
[45 117]
[46 116]
[51 109]
[52 108]
[53 107]
[55 106]
[56 105]
[57 104]
[64 99]
[65 98]
[67 95]
[68 94]
[69 93]
[70 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
