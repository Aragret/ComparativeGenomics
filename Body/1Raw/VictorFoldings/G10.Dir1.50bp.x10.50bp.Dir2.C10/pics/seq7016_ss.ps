%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCGUACUACACGACACGUACUACGUUGUAGCCCACUUCCACUAUGUCCUAUCAAUAGGAGCxxxxxxxxxxAAACAACCCCCUAGGAAUCACCUCCCAUUCCGAUAAAAUCACCUUCCACCCUUACUACACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-19.26305580 190.85528564]
[-25.36146736 182.23661804]
[-38.29952240 189.82653809]
[-51.23757935 197.41644287]
[-64.17563629 205.00634766]
[-77.11369324 212.59625244]
[-85.10182190 226.25276184]
[-99.99459076 226.01898193]
[-112.93264771 233.60888672]
[-125.87070465 241.19879150]
[-138.80876160 248.78871155]
[-140.87559509 252.77490234]
[-143.82781982 255.57765198]
[-147.17094421 257.06271362]
[-150.41883850 257.27508545]
[-153.15309143 256.41998291]
[-166.67727661 262.90814209]
[-180.20147705 269.39630127]
[-193.72566223 275.88446045]
[-196.11668396 279.68505859]
[-199.29167175 282.23269653]
[-202.74667358 283.43472290]
[-206.00099182 283.37640381]
[-208.65469360 282.29696655]
[-222.67140198 287.63845825]
[-236.68812561 292.97998047]
[-250.70483398 298.32150269]
[-263.35256958 309.61181641]
[-277.70288086 300.58383179]
[-273.00030518 284.29513550]
[-256.04635620 284.30477905]
[-242.02963257 278.96325684]
[-228.01292419 273.62176514]
[-213.99620056 268.28024292]
[-200.21382141 262.36029053]
[-186.68963623 255.87211609]
[-173.16545105 249.38395691]
[-159.64125061 242.89578247]
[-146.39866638 235.85064697]
[-133.46061707 228.26074219]
[-120.52256012 220.67083740]
[-107.58450317 213.08093262]
[-100.52178192 199.96730042]
[-84.70359802 199.65820312]
[-71.76554108 192.06829834]
[-58.82748795 184.47837830]
[-45.88943100 176.88847351]
[-32.95137405 169.29856873]
[-44.17901993 141.11897278]
[-49.50471115 111.25617218]
[-48.71043777 80.93260193]
[-41.82871246 51.38955688]
[-29.14124680 23.83637238]
[-11.16739178 -0.59905821]
[11.35709000 -20.91647530]
[3.10480070 -33.44243622]
[-5.14748859 -45.96839905]
[-13.39977741 -58.49436188]
[-21.65206718 -71.02032471]
[-36.54703140 -77.88123322]
[-37.78314972 -94.23372650]
[-24.08880997 -103.25576019]
[-9.55157471 -95.66623688]
[-9.12610531 -79.27261353]
[-0.87381577 -66.74665070]
[7.37847328 -54.22068787]
[15.63076305 -41.69472504]
[23.88305092 -29.16876411]
[32.00149155 -33.62096405]
[40.37927628 -37.56354523]
[48.98444748 -40.98146439]
[57.78419113 -43.86168671]
[66.74494171 -46.19322968]
[75.83252716 -47.96720123]
[85.01228333 -49.17683411]
[94.24920654 -49.81751633]
[103.50806427 -49.88679886]
[112.75353241 -49.38442612]
[121.95037079 -48.31230927]
[131.06347656 -46.67453766]
[140.05812073 -44.47735596]
[148.89999390 -41.72914505]
[157.55534363 -38.44039154]
[165.99119568 -34.62363052]
[174.17535400 -30.29342461]
[182.07661438 -25.46628571]
[189.66484070 -20.16062737]
[196.91108704 -14.39668179]
[203.78771973 -8.19643402]
[210.26850891 -1.58353150]
[216.32875061 5.41680479]
[221.94531250 12.77787590]
[227.09678650 20.47160721]
[231.76351929 28.46865463]
[245.28771973 21.98048973]
[258.81188965 15.49232483]
[272.33609009 9.00415993]
[285.86029053 2.51599455]
[288.52108765 -12.77124786]
[299.68273926 -23.55071831]
[315.05337524 -25.67749023]
[328.72265625 -18.33377838]
[335.43447876 -4.34338617]
[332.60800171 10.91409302]
[321.33007812 21.57184601]
[305.93725586 23.53175163]
[292.34844971 16.04018402]
[278.82424927 22.52834892]
[265.30007935 29.01651382]
[251.77587891 35.50468063]
[238.25169373 41.99284363]
[241.99125671 51.86642075]
[245.02668762 61.97869873]
[247.34291077 72.27952576]
[248.92845154 82.71781921]
[249.77545166 93.24181366]
[249.87969971 103.79933167]
[249.24067688 114.33799744]
[247.86157227 124.80557251]
[245.74919128 135.15013123]
[242.91404724 145.32037354]
[239.37016296 155.26586914]
[235.13514709 164.93728638]
[230.22998047 174.28669739]
[224.67898560 183.26770020]
[218.50970459 191.83576965]
[211.75273132 199.94842529]
[204.44155884 207.56542969]
[196.61245728 214.64900208]
[188.30424500 221.16403198]
[179.55812073 227.07818604]
[170.41746521 232.36215210]
[160.92759705 236.98973083]
[151.13558960 240.93797302]
[141.08999634 244.18727112]
[130.84063721 246.72155762]
[120.43833923 248.52822876]
[109.93468475 249.59832764]
[99.38175964 249.92657471]
[88.83190155 249.51130676]
[78.33742523 248.35461426]
[67.95037842 246.46221924]
[57.72226715 243.84350586]
[47.70381546 240.51145935]
[37.94470215 236.48260498]
[28.49333000 231.77691650]
[19.39656067 226.41773987]
[10.69951248 220.43165588]
[2.44531178 213.84832764]
[-5.32510757 206.70042419]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 48]
[3 47]
[4 46]
[5 45]
[6 44]
[8 42]
[9 41]
[10 40]
[11 39]
[16 38]
[17 37]
[18 36]
[19 35]
[24 34]
[25 33]
[26 32]
[27 31]
[55 68]
[56 67]
[57 66]
[58 65]
[59 64]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
