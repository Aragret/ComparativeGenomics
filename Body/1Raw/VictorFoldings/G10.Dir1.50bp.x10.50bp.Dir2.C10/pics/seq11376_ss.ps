%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACACUCACCAAGACCUCAACCCCUGACCCCCAUGCCUCAGGAUACUCCUCAAUAGCCAUCxxxxxxxxxxAAAUAGGAGAAGGCUUAGAAGAAAACCCCACAAACCCCAUUACUAAACCCACACUCAACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[102.15470886 266.79666138]
[102.15470886 251.79664612]
[102.15470886 236.79664612]
[102.15470886 221.79664612]
[102.15470886 206.79664612]
[102.15470886 191.79664612]
[102.15470886 176.79664612]
[102.15470886 161.79664612]
[102.15470886 146.79664612]
[102.15470886 131.79664612]
[87.04148102 126.79689026]
[77.20536041 115.67102051]
[74.53256989 102.14915466]
[78.71935272 90.13959503]
[67.84052277 79.81238556]
[63.43762589 78.93148804]
[59.92636490 76.87185669]
[57.57281113 74.07138062]
[56.46846008 71.00962067]
[56.53215027 68.14547729]
[46.54942322 56.94971466]
[36.56669617 45.75394821]
[28.46464920 41.39405823]
[26.49571991 34.21987152]
[16.74806786 22.81884956]
[7.00041533 11.41782856]
[-1.20803761 13.55143356]
[-9.62136936 13.06879330]
[-17.43115234 10.04946709]
[-23.89713287 4.81516123]
[-28.41737366 -2.10422707]
[-30.58423233 -10.02412224]
[-45.40198898 -12.35522556]
[-60.21974945 -14.68632984]
[-75.03750610 -17.01743317]
[-89.85526276 -19.34853745]
[-99.44596863 -7.35212088]
[-113.75580597 -1.77321839]
[-128.93550110 -4.11252737]
[-140.90179443 -13.74078465]
[-146.43582153 -28.06803894]
[-144.04893494 -43.24032974]
[-134.38322449 -55.17638397]
[-120.03868866 -60.66547012]
[-104.87395477 -58.23104477]
[-92.96825409 -48.52796173]
[-87.52416229 -34.16629410]
[-72.70640564 -31.83519173]
[-57.88864517 -29.50408745]
[-43.07088470 -27.17298317]
[-28.25312805 -24.84188080]
[-25.94409752 -28.77438545]
[-22.99220467 -32.25038147]
[-19.48569107 -35.16595459]
[-15.52937794 -37.43395233]
[-17.70621490 -52.27515793]
[-19.88305283 -67.11636353]
[-22.05988884 -81.95757294]
[-24.23672676 -96.79877472]
[-39.25001526 -98.10177612]
[-53.55794144 -102.83253479]
[-66.38888550 -110.73591614]
[-77.05090332 -121.38571930]
[-84.96899414 -134.20759583]
[-89.71614838 -148.51008606]
[-91.03636932 -163.52186584]
[-88.85844421 -178.43339539]
[-83.29982758 -192.44047546]
[-74.66029358 -204.78775024]
[-63.40576553 -214.80934143]
[-50.14317703 -221.96479797]
[-35.58776855 -225.86822510]
[-20.52449036 -226.30911255]
[-5.76568890 -223.26371765]
[7.89271212 -216.89624023]
[19.71413422 -207.55006409]
[29.06105995 -195.72926331]
[35.42942429 -182.07127380]
[38.47578812 -167.31266785]
[38.03586197 -152.24935913]
[34.13337708 -137.69369507]
[26.97878456 -124.43064117]
[16.95792389 -113.17546082]
[4.61120844 -104.53513336]
[-9.39552021 -98.97560883]
[-7.21868324 -84.13440704]
[-5.04184628 -69.29319763]
[-2.86500955 -54.45199585]
[-0.68817258 -39.61079025]
[20.11208344 -24.49253464]
[18.40143585 1.67017627]
[28.14908791 13.07119751]
[37.89673996 24.47221756]
[47.76246262 35.77122116]
[57.74518967 46.96698761]
[67.72791290 58.16275406]
[78.16773224 68.93356323]
[89.04655457 79.26076508]
[114.46474457 76.42145538]
[131.86566162 100.49869537]
[146.84538269 99.71884918]
[160.22462463 91.27454376]
[173.33694458 98.33969879]
[188.31666565 97.55985260]
[193.02841187 83.13196564]
[202.63696289 71.38291931]
[215.84284973 63.90166855]
[230.86007690 61.70000076]
[245.65768433 65.07566833]
[258.23443604 73.57213593]
[266.88940430 86.04032898]
[270.45208740 100.79402924]
[268.44067383 115.83792114]
[261.12716675 129.13743591]
[249.50067139 138.89392090]
[235.13357544 143.78790283]
[219.96891785 143.15751648]
[206.05757141 137.08798218]
[195.28096008 126.40019226]
[189.09651184 112.53956604]
[174.11679077 113.31941223]
[161.80899048 121.70793152]
[147.62522888 114.69856262]
[132.64550781 115.47840881]
[146.16532898 121.97568512]
[159.68513489 128.47296143]
[174.66851807 127.76699829]
[188.76353455 132.89831543]
[199.78622437 143.07183838]
[206.02862549 156.71121216]
[206.52352905 171.70303345]
[201.19422913 185.72439575]
[190.86650085 196.60272217]
[177.14057922 202.65245056]
[162.14326477 202.93618774]
[148.19833374 197.40997314]
[137.46653748 186.93006897]
[131.61070251 173.12031555]
[131.53747559 158.12413025]
[124.34609222 144.96038818]
[117.15470886 131.79664612]
[117.15470886 146.79664612]
[117.15470886 161.79664612]
[117.15470886 176.79664612]
[117.15470886 191.79664612]
[117.15470886 206.79664612]
[117.15470886 221.79664612]
[117.15470886 236.79664612]
[117.15470886 251.79664612]
[117.15470886 266.79666138]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[14 98]
[15 97]
[20 96]
[21 95]
[22 94]
[24 93]
[25 92]
[26 91]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[55 89]
[56 88]
[57 87]
[58 86]
[59 85]
[100 124]
[101 123]
[103 121]
[104 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
