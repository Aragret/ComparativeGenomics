%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCAUCCUACCCAGCACACACACACCGCUGCUAACCCCAUACCCCGAACCAACCAAACCCCxxxxxxxxxxCUAAUAGUAGAAGAACCCUCCAUAAACCUGGAGUGACUAUAUGGAUGCCCCCCACCCUACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 425.41000366]
[92.50000000 410.41000366]
[92.50000000 395.41000366]
[92.50000000 380.41000366]
[92.50000000 365.41000366]
[92.50000000 350.41000366]
[92.50000000 335.41000366]
[92.50000000 320.41000366]
[92.50000000 305.41000366]
[92.50000000 290.41000366]
[77.84561920 287.32052612]
[64.14855957 281.24917603]
[52.00850296 272.45910645]
[41.95753098 261.33258057]
[34.43677902 248.35430908]
[29.77709579 234.09037781]
[28.18446350 219.16351318]
[29.73092079 204.22590637]
[34.35128784 189.93074036]
[41.84592056 176.90364075]
[51.88933182 165.71520996]
[64.04432678 156.85615540]
[77.78102875 150.71565247]
[92.50000000 147.56434631]
[92.50000000 132.56434631]
[92.50000000 117.56434631]
[82.32884216 107.24475861]
[82.32884216 92.75524139]
[92.50000000 82.43565369]
[92.50000000 67.43565369]
[91.57658386 52.46410370]
[89.73326111 37.57779694]
[87.88993835 22.69148827]
[78.51540375 9.94673824]
[84.63002777 -3.63489127]
[82.78669739 -18.52119827]
[67.79039001 -17.91277313]
[52.79505539 -18.54482079]
[37.90313339 -20.41302490]
[23.21635056 -23.50462151]
[8.83503628 -27.79849243]
[-5.14257002 -33.26530457]
[-18.62098503 -39.86771774]
[-31.50813866 -47.56062698]
[-43.71599197 -56.29148102]
[-55.16115952 -66.00063324]
[-65.76544952 -76.62177277]
[-75.45642853 -88.08233643]
[-84.16789246 -100.30403137]
[-91.84033966 -113.20337677]
[-98.42134857 -126.69225311]
[-103.86597443 -140.67852783]
[-108.13701630 -155.06663513]
[-111.20529175 -169.75830078]
[-113.04985809 -184.65316772]
[-113.65810394 -199.64949036]
[-113.02587891 -214.64482117]
[-111.15750122 -229.53671265]
[-108.06572723 -244.22346497]
[-103.77168274 -258.60473633]
[-98.30470276 -272.58227539]
[-91.70213318 -286.06060791]
[-84.00907135 -298.94766235]
[-75.27806854 -311.15542603]
[-65.56877899 -322.60046387]
[-54.94751740 -333.20462036]
[-43.48683929 -342.89547729]
[-31.26503754 -351.60678101]
[-18.36560059 -359.27908325]
[-4.87664413 -365.85992432]
[9.10968590 -371.30438232]
[23.49784851 -375.57525635]
[38.18955612 -378.64337158]
[53.08444595 -380.48776245]
[68.08077240 -381.09582520]
[83.07608795 -380.46340942]
[97.96797180 -378.59484863]
[112.65467834 -375.50289917]
[127.03588867 -371.20870972]
[141.01336670 -365.74154663]
[154.49162292 -359.13882446]
[167.37858582 -351.44558716]
[179.58624268 -342.71444702]
[191.03117371 -333.00503540]
[201.63520813 -322.38363647]
[211.32591248 -310.92285156]
[220.03709412 -298.70092773]
[227.70922852 -285.80142212]
[234.28991699 -272.31237793]
[239.73420715 -258.32598877]
[244.00491333 -243.93777466]
[247.07284546 -229.24603271]
[248.91705322 -214.35112000]
[249.52493286 -199.35478210]
[248.89234924 -184.35946655]
[247.02362061 -169.46760559]
[243.93150330 -154.78094482]
[239.63711548 -140.39978027]
[234.16979980 -126.42237091]
[227.56690979 -112.94419098]
[219.87353516 -100.05731201]
[211.14224243 -87.84976959]
[201.43267822 -76.40495300]
[190.81115723 -65.80104065]
[179.35025024 -56.11046982]
[167.12825012 -47.39944077]
[154.22862244 -39.72745514]
[140.73951721 -33.14692688]
[126.75305176 -27.70280647]
[112.36479187 -23.43227959]
[97.67301178 -20.36452293]
[99.51633453 -5.47821569]
[108.75901794 6.20176649]
[102.77624512 20.84816360]
[104.61956787 35.73447037]
[106.46289062 50.62078094]
[116.81590271 39.76651001]
[131.80603027 39.22221375]
[142.91897583 49.29705048]
[143.84268188 64.26858521]
[134.05249023 75.63308716]
[119.10915375 76.93562317]
[107.50000000 67.43565369]
[107.50000000 82.43565369]
[117.67115784 92.75524139]
[117.67115784 107.24475861]
[107.50000000 117.56434631]
[107.50000000 132.56434631]
[107.50000000 147.56434631]
[122.21897125 150.71565247]
[135.95567322 156.85615540]
[148.11067200 165.71520996]
[158.15408325 176.90364075]
[165.64871216 189.93074036]
[170.26907349 204.22590637]
[171.81553650 219.16351318]
[170.22290039 234.09037781]
[165.56321716 248.35430908]
[158.04246521 261.33258057]
[147.99150085 272.45910645]
[135.85144043 281.24917603]
[122.15438080 287.32052612]
[107.50000000 290.41000366]
[107.50000000 305.41000366]
[107.50000000 320.41000366]
[107.50000000 335.41000366]
[107.50000000 350.41000366]
[107.50000000 365.41000366]
[107.50000000 380.41000366]
[107.50000000 395.41000366]
[107.50000000 410.41000366]
[107.50000000 425.41000366]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[24 129]
[25 128]
[26 127]
[29 124]
[30 123]
[31 116]
[32 115]
[33 114]
[35 112]
[36 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
