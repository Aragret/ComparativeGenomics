%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACCUCAACAGUUAAAUCAACAAAACUGCUCGCCAGAACACUACGAGCCACAGCUUAAAAxxxxxxxxxxUAUCUCUCCCAGUCCUAGCUGCUGGCAUCACUAUACUACUAACAGACCGCAACCUCAACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[96.73326111 297.41235352]
[96.73326111 282.41235352]
[96.73326111 267.41235352]
[96.73326111 252.41235352]
[96.73326111 237.41235352]
[96.73326111 222.41235352]
[96.73326111 207.41235352]
[96.73326111 192.41235352]
[96.73326111 177.41235352]
[96.73326111 162.41235352]
[90.51354218 158.22128296]
[83.32215881 171.38500977]
[81.22716522 186.23799133]
[67.52385712 192.33876038]
[55.08446503 183.95654297]
[55.59395599 168.96520996]
[68.57356262 161.44688416]
[78.07409668 149.83914185]
[71.85437775 145.64807129]
[57.95182419 151.28001404]
[44.04926682 156.91197205]
[30.14671135 162.54393005]
[16.24415588 168.17588806]
[14.20017242 183.39816284]
[4.80619097 195.54924011]
[-9.41085434 201.36054993]
[-24.62664986 199.26885986]
[-36.74822235 189.83683777]
[-42.51493073 175.60163879]
[-40.37555695 160.39248657]
[-30.90558434 148.30053711]
[-16.65238762 142.57847595]
[-1.45000529 144.76550293]
[10.61219978 154.27333069]
[24.51475525 148.64137268]
[38.41731262 143.00941467]
[52.31986618 137.37747192]
[66.22242737 131.74551392]
[59.27965546 104.00534058]
[69.90773773 81.20479584]
[56.25149918 74.99938965]
[42.59526062 68.79398346]
[30.22395706 72.58934784]
[18.95568085 67.08980560]
[14.62396526 55.75210190]
[1.09977531 49.26393509]
[-15.20153713 51.05257797]
[-24.68170738 37.67130661]
[-17.58835030 22.88562775]
[-1.21850133 21.90577888]
[7.58794022 35.73974609]
[21.11213112 42.22790909]
[38.48127365 39.92294693]
[48.80066681 55.13774109]
[62.45690536 61.34315109]
[76.11315155 67.54855347]
[89.63733673 61.06039047]
[93.34349823 46.52545547]
[97.04965973 31.99051857]
[100.75582123 17.45558357]
[104.31058502 2.88288045]
[107.71356201 -11.72601223]
[111.11653900 -26.33490372]
[114.51951599 -40.94379807]
[117.92249298 -55.55268860]
[104.17747498 -61.67403412]
[91.83946991 -70.28623962]
[81.35449219 -81.07798767]
[73.10156250 -93.65914917]
[67.37902832 -107.57493591]
[64.39375305 -122.32229614]
[64.25364685 -137.36811829]
[66.96378326 -152.16851807]
[72.42618561 -166.18846130]
[80.44338989 -178.92112732]
[90.72558594 -189.90625000]
[102.90107727 -198.74671936]
[116.52972412 -205.12295532]
[131.11886597 -208.80447388]
[146.14109802 -209.65818787]
[161.05340576 -207.65321350]
[175.31668091 -202.86206055]
[188.41534424 -195.45790100]
[199.87588501 -185.70840454]
[209.28399658 -173.96600342]
[216.29959106 -160.65519714]
[220.66905212 -146.25712585]
[222.23443604 -131.29229736]
[220.93916321 -116.30167389]
[216.83003235 -101.82716370]
[210.05560303 -88.39199829]
[200.86074829 -76.48186493]
[189.57789612 -66.52729797]
[176.61486816 -58.88814545]
[162.44029236 -53.84056854]
[147.56657410 -51.56702805]
[132.53138733 -52.14971161]
[129.12840271 -37.54081726]
[125.72543335 -22.93192673]
[122.32245636 -8.32303429]
[118.91947937 6.28585863]
[120.47517395 13.56084633]
[115.29075623 21.16174507]
[111.58459473 35.69668198]
[107.87843323 50.23161697]
[104.17227173 64.76655579]
[137.67361450 84.03479004]
[136.86640930 128.09928894]
[151.68415833 130.43038940]
[159.27444458 117.28688049]
[171.10261536 107.77588654]
[185.56900024 103.18371582]
[200.71714783 104.13140106]
[214.49839783 110.49079132]
[225.04893494 121.40181732]
[230.94189453 135.38887024]
[231.38031006 150.56028748]
[226.30487061 164.86428833]
[216.40200806 176.36636353]
[203.01098633 183.51095581]
[187.94284058 185.33180237]
[173.23542786 181.58265686]
[160.87776184 172.77058411]
[152.54116821 160.08729553]
[149.35305786 145.24815369]
[134.53530884 142.91705322]
[128.83479309 147.79087830]
[140.72100830 156.94061279]
[152.60722351 166.09036255]
[164.49343872 175.24011230]
[178.05563354 181.64845276]
[184.78347778 195.05502319]
[181.81588745 209.75852966]
[170.41484070 219.50616455]
[155.42878723 220.15261841]
[143.23068237 211.42298889]
[139.00791931 197.02973938]
[131.81654358 183.86599731]
[124.62515259 170.70225525]
[117.43376923 157.53852844]
[111.73326111 162.41235352]
[111.73326111 177.41235352]
[111.73326111 192.41235352]
[111.73326111 207.41235352]
[111.73326111 222.41235352]
[111.73326111 237.41235352]
[111.73326111 252.41235352]
[111.73326111 267.41235352]
[111.73326111 282.41235352]
[111.73326111 297.41235352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[19 38]
[20 37]
[21 36]
[22 35]
[23 34]
[40 56]
[41 55]
[42 54]
[45 52]
[46 51]
[57 106]
[58 105]
[59 104]
[60 103]
[61 101]
[62 100]
[63 99]
[64 98]
[65 97]
[108 126]
[109 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
