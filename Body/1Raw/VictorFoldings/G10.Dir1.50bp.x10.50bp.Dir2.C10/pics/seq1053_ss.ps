%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGCUCAAAACGCUUAGCCUAGCCACACCCCCACGGGAAACAGCAGUGAUUAACCUUUAGCxxxxxxxxxxAUCUCAUCAACAACCGACUAAUCACCACCCAACAAUGACUAAUCAAACUAACCUCAAAACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[108.58835602 323.65002441]
[108.58835602 308.65002441]
[108.58835602 293.65002441]
[108.58835602 278.65002441]
[108.58835602 263.65002441]
[108.58835602 248.65002441]
[108.58835602 233.65002441]
[108.58835602 218.65002441]
[108.58835602 203.65002441]
[108.58835602 188.65002441]
[94.51683807 183.45462036]
[84.76918793 194.85563660]
[75.02153778 206.25665283]
[77.77275085 221.65031433]
[69.94066620 235.18518066]
[55.22334290 240.47048950]
[40.56985855 235.01068115]
[32.89913940 221.38372803]
[35.83306122 206.02383423]
[47.98632050 196.18350220]
[63.62051392 196.50900269]
[73.36816406 185.10798645]
[83.11582184 173.70697021]
[88.74777222 159.80441284]
[89.68340302 144.83361816]
[90.61903381 129.86282349]
[83.78243256 126.77277374]
[77.87750244 122.14466095]
[73.24348450 116.24436951]
[70.14658356 109.41086578]
[68.76472473 102.03672028]
[53.99866486 99.39785767]
[43.49956894 112.13157654]
[28.10618782 117.81834412]
[12.03468895 115.00108337]
[-0.36339921 104.53832245]
[-5.77940035 89.34560394]
[-20.59715843 87.01450348]
[-35.41491699 84.68339539]
[-50.51595306 91.07798767]
[-63.43953705 80.98278809]
[-60.89099884 64.78288269]
[-45.49205017 59.14334106]
[-33.08381271 69.86563873]
[-18.26605415 72.19674683]
[-3.44829631 74.52784729]
[4.44147539 63.33808136]
[16.44711113 56.61916351]
[30.24317551 55.73811340]
[43.12896729 60.92476654]
[52.55720139 71.21550751]
[56.63753128 84.63179779]
[71.40358734 87.27066803]
[87.85417175 67.64184570]
[115.89902496 65.68032074]
[118.69134521 50.94251251]
[121.48367310 36.20470428]
[124.27599335 21.46689987]
[127.06832123 6.72909355]
[129.86064148 -8.00871277]
[132.65296936 -22.74651909]
[118.52188873 -27.87572670]
[105.39665222 -35.20541763]
[93.61724091 -44.54573822]
[83.48875427 -55.65474319]
[75.27355957 -68.24468994]
[69.18444824 -81.98946381]
[65.37912750 -96.53304291]
[63.95618439 -111.49871826]
[64.95246887 -126.49884033]
[68.34217072 -141.14486694]
[74.03749084 -155.05743408]
[81.89090729 -167.87615967]
[91.69900513 -179.26904297]
[103.20771790 -188.94093323]
[116.11894989 -196.64134216]
[130.09826660 -202.17080688]
[144.78356934 -205.38607788]
[159.79447937 -206.20388794]
[174.74217224 -204.60305786]
[189.23947144 -200.62504578]
[202.91084290 -194.37289429]
[215.40219116 -186.00854492]
[226.38995361 -175.74865723]
[235.58952332 -163.85897827]
[242.76258850 -150.64750671]
[247.72337341 -136.45642090]
[250.34338379 -121.65332031]
[250.55473328 -106.62164307]
[248.35194397 -91.75073242]
[243.79209900 -77.42578888]
[236.99330139 -64.01786041]
[228.13165283 -51.87424850]
[217.43669128 -41.30949783]
[205.18544006 -32.59726715]
[191.69523621 -25.96321487]
[177.31552124 -21.57918549]
[162.41874695 -19.55873299]
[147.39077759 -19.95419312]
[144.59844971 -5.21638775]
[141.80612183 9.52141762]
[139.01379395 24.25922394]
[136.22148132 38.99702835]
[133.42915344 53.73483658]
[130.63682556 68.47264099]
[140.15299988 56.87771225]
[145.66027832 42.92529678]
[157.70358276 33.98333359]
[172.65257263 32.74731064]
[186.00099182 39.58981323]
[193.72506714 52.44822311]
[193.49642944 67.44647980]
[185.38401794 80.06348419]
[171.83323669 86.49593353]
[156.92892456 84.80484772]
[142.22296143 87.76024628]
[156.54554749 92.21706390]
[170.86814880 96.67387390]
[186.73731995 92.53848267]
[198.05905151 104.40231323]
[193.18652344 120.06086731]
[177.13217163 123.40597534]
[166.41133118 110.99647522]
[152.08872986 106.53965759]
[137.76614380 102.08283997]
[131.27719116 117.10636902]
[119.58453369 127.14885712]
[105.58982086 130.79844666]
[104.65419769 145.76924133]
[103.71856689 160.74003601]
[106.34429932 145.97163391]
[115.36637878 133.98823547]
[128.83326721 127.38193512]
[143.83192444 127.58175659]
[157.11804199 134.54446411]
[165.81768799 146.76396179]
[168.04905701 161.59706116]
[163.32948303 175.83523560]
[152.67985535 186.39863586]
[138.40377808 191.00230408]
[123.58835602 188.65002441]
[123.58835602 203.65002441]
[123.58835602 218.65002441]
[123.58835602 233.65002441]
[123.58835602 248.65002441]
[123.58835602 263.65002441]
[123.58835602 278.65002441]
[123.58835602 293.65002441]
[123.58835602 308.65002441]
[123.58835602 323.65002441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 23]
[12 22]
[13 21]
[24 130]
[25 129]
[26 128]
[31 53]
[32 52]
[37 46]
[38 45]
[39 44]
[55 105]
[56 104]
[57 103]
[58 102]
[59 101]
[60 100]
[61 99]
[116 125]
[117 124]
[118 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
