%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAACAACGUAAAAAUAAAAUGACAGUUUGAACAUACAAAACCCACCCCAUUCCUCCCCACAxxxxxxxxxxGACUAGUUCCCCUAAUAAUCGGUGCCCCCGAUAUGGCGUUUCCCCGCAUAAACAACAUAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-40.90913391 135.28010559]
[-43.72842026 121.02882385]
[-56.74481583 130.02236938]
[-70.13968658 123.50878906]
[-85.07399750 124.91109467]
[-100.00830078 126.31340027]
[-114.94261169 127.71569824]
[-129.87692261 129.11801147]
[-144.81121826 130.52030945]
[-159.74552917 131.92260742]
[-174.67984009 133.32492065]
[-189.61415100 134.72721863]
[-191.00120544 149.70426941]
[-195.11570740 164.16757202]
[-201.81611633 177.62495422]
[-210.87292480 189.61872864]
[-221.97650146 199.74133301]
[-234.74772644 207.64907837]
[-248.75086975 213.07392883]
[-263.50851440 215.83247375]
[-278.51773071 215.83221436]
[-293.26742554 213.07463074]
[-307.25552368 207.65507507]
[-320.00613403 199.75947571]
[-331.08578491 189.65800476]
[-340.11816406 177.69573975]
[-346.79678345 164.28097534]
[-350.89550781 149.87123108]
[-365.82980347 151.27354431]
[-380.76412964 152.67584229]
[-395.48876953 163.68333435]
[-411.15121460 155.82919312]
[-426.05313110 157.54188538]
[-441.09829712 165.35717773]
[-452.77310181 153.06346130]
[-444.19171143 138.44168091]
[-427.76580811 142.63998413]
[-412.86389160 140.92729187]
[-405.06515503 131.62745667]
[-392.61837769 130.11195374]
[-382.16644287 137.74153137]
[-367.23211670 136.33923340]
[-352.29782104 134.93693542]
[-350.95315552 120.01606750]
[-346.88851929 105.59253693]
[-340.24087524 92.15795135]
[-331.23532104 80.17050171]
[-320.17736816 70.03932953]
[-307.44268799 62.11055374]
[-293.46414185 56.65544128]
[-278.71731567 53.86114502]
[-263.70413208 53.82426834]
[-248.93588257 56.54753494]
[-234.91583252 61.93964005]
[-222.12196350 69.81830597]
[-210.99076843 79.91647339]
[-201.90231323 91.89130402]
[-195.16732788 105.33585358]
[-191.01644897 119.79290771]
[-176.08213806 118.39060974]
[-161.14784241 116.98830414]
[-146.21353149 115.58599854]
[-131.27922058 114.18369293]
[-116.34490967 112.78139496]
[-101.41060638 111.37908936]
[-86.47629547 109.97678375]
[-71.54199219 108.57448578]
[-59.59379196 99.68123627]
[-45.13072205 106.09451294]
[-45.04539871 92.13218689]
[-43.61992645 78.24255371]
[-40.86748123 64.55394745]
[-36.81349182 51.19285202]
[-31.49541855 38.28270340]
[-24.96239281 25.94279099]
[-17.27477837 14.28713036]
[-8.50360584 3.42341280]
[1.27008474 -6.54798698]
[11.95598888 -15.53493786]
[23.45537567 -23.45440483]
[35.66199493 -30.23321724]
[48.46306229 -35.80873871]
[61.74030685 -40.12945938]
[75.37104797 -43.15545654]
[89.22935486 -44.85876846]
[103.18717194 -45.22365952]
[117.11553955 -44.24676132]
[130.88577271 -41.93709564]
[144.37063599 -38.31600189]
[157.44554138 -33.41693878]
[169.98966980 -27.28517342]
[181.88713074 -19.97735786]
[193.02799988 -11.56101322]
[203.30934143 -2.11390209]
[212.63615417 8.27668953]
[220.92227173 19.51475716]
[228.09112549 31.49646759]
[234.07647705 44.11111450]
[248.20127869 39.06235886]
[262.32608032 34.01360321]
[276.45089722 28.96484756]
[290.57568359 23.91609001]
[298.71170044 10.08912182]
[314.61441040 7.97186947]
[326.08465576 19.18850899]
[324.32342529 35.13459396]
[310.68179321 43.57765198]
[295.62445068 38.04089355]
[281.49963379 43.08964920]
[267.37484741 48.13840485]
[253.25004578 53.18716431]
[239.12522888 58.23591995]
[243.71710205 78.89397430]
[245.25863647 100.00000000]
[243.71710205 121.10602570]
[239.12522888 141.76408386]
[253.25004578 146.81283569]
[267.37484741 151.86158752]
[281.55053711 144.87405396]
[296.48809814 150.03588867]
[303.32537842 164.28465271]
[298.00588989 179.16682434]
[283.68563843 185.85305786]
[268.86053467 180.37654114]
[262.32608032 165.98638916]
[248.20127869 160.93763733]
[234.07647705 155.88888550]
[227.82344055 169.00173950]
[220.29187012 181.42440796]
[211.55712891 193.03266907]
[201.70655823 203.71038818]
[190.83871460 213.35076904]
[179.06227112 221.85740662]
[166.49502563 229.14518738]
[153.26269531 235.14125061]
[139.49760437 239.78558350]
[125.33746338 243.03175354]
[110.92388916 244.84729004]
[96.40104675 245.21403503]
[81.91420746 244.12832642]
[67.60826111 241.60101318]
[53.62630844 237.65736389]
[40.10819244 232.33685303]
[27.18912697 225.69267273]
[14.99833202 217.79127502]
[3.65774155 208.71173096]
[-6.71921301 198.54481506]
[-16.02873993 187.39222717]
[-24.17772102 175.36552429]
[-31.08465195 162.58500671]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 69]
[4 67]
[5 66]
[6 65]
[7 64]
[8 63]
[9 62]
[10 61]
[11 60]
[12 59]
[28 43]
[29 42]
[30 41]
[32 38]
[33 37]
[98 112]
[99 111]
[100 110]
[101 109]
[102 108]
[116 127]
[117 126]
[118 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
