%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGUAAUAAUCUUCUUCAUAGUAAUACCCAUCAUAAUCGGAGGCUUUGGCAACUGACUAGUUxxxxxxxxxxUCUGAUUUUUCGGUCACCCUGAAGUUUAUAUUCUUAUCCUACCAGGCUUCGGAAUAAUCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[86.11788177 290.37646484]
[88.70887756 271.16876221]
[89.02093506 256.17199707]
[89.33299255 241.17524719]
[89.64505005 226.17848206]
[89.95709991 211.18173218]
[90.26915741 196.18498230]
[90.58121490 181.18823242]
[90.89327240 166.19146729]
[91.20532990 151.19471741]
[91.51738739 136.19796753]
[70.22196198 109.40720367]
[81.13994598 83.16821289]
[73.41586304 70.30980682]
[65.69177246 57.45140839]
[57.96768951 44.59300613]
[43.97786331 45.55770493]
[31.00429916 40.41205597]
[21.56900597 30.21793175]
[17.47950935 17.01248932]
[19.48276711 3.40124106]
[27.12946320 -7.95602226]
[19.67455292 -20.97233200]
[12.21964359 -33.98863983]
[4.76473331 -47.00495148]
[-2.69017720 -60.02125931]
[-17.67706490 -64.26754761]
[-25.05198288 -77.57413483]
[-20.91143799 -91.83567047]
[-28.36635017 -104.85198212]
[-39.08839417 -107.11542511]
[-46.61394501 -114.77503967]
[-48.60402298 -125.10260773]
[-44.63325882 -134.60339355]
[-51.54025650 -147.91854858]
[-58.44725800 -161.23370361]
[-71.41693878 -160.59133911]
[-83.61440277 -164.90782166]
[-93.22323608 -173.50256348]
[-98.82688904 -185.06074524]
[-99.61746979 -197.83438110]
[-95.51201630 -209.90658569]
[-87.15961456 -219.47930908]
[-93.50674438 -233.07026672]
[-99.85387421 -246.66120911]
[-106.20100403 -260.25216675]
[-112.54813385 -273.84310913]
[-118.89526367 -287.43405151]
[-125.24239349 -301.02502441]
[-140.75051880 -298.59616089]
[-156.30206299 -300.61996460]
[-170.64552307 -306.92532349]
[-182.62887573 -316.99694824]
[-191.29217529 -330.01739502]
[-195.94442749 -344.93344116]
[-196.21870422 -360.54125977]
[-192.10104370 -375.58361816]
[-183.93096924 -388.85104370]
[-172.37344360 -399.27923584]
[-179.00193787 -412.73522949]
[-185.63043213 -426.19119263]
[-192.25894165 -439.64715576]
[-206.18376160 -448.30920410]
[-205.37425232 -464.68835449]
[-190.66316223 -471.93515015]
[-177.18399048 -462.59466553]
[-178.80296326 -446.27563477]
[-172.17446899 -432.81967163]
[-165.54597473 -419.36370850]
[-158.91748047 -405.90774536]
[-144.81741333 -408.65402222]
[-130.47573853 -407.64422607]
[-116.87664032 -402.94125366]
[-104.95501709 -394.86178589]
[-95.53214264 -383.95477295]
[-89.25915527 -370.96423340]
[-86.57202148 -356.77853394]
[-87.66127014 -342.36950684]
[-92.45848083 -328.72604370]
[-100.64054871 -316.78607178]
[-111.65143585 -307.37213135]
[-105.30430603 -293.78118896]
[-98.95717621 -280.19024658]
[-92.61005402 -266.59930420]
[-86.26292419 -253.00834656]
[-79.91579437 -239.41738892]
[-73.56866455 -225.82644653]
[-56.42519379 -224.98635864]
[-41.97311020 -215.56346130]
[-34.20949936 -200.05717468]
[-35.33528137 -182.66372681]
[-45.13210297 -168.14070129]
[-38.22510147 -154.82554626]
[-31.31810379 -141.51039124]
[-14.30773258 -132.39573669]
[-15.35003948 -112.30689240]
[-7.89512920 -99.29058075]
[6.50106621 -95.64569855]
[14.24682713 -82.55151367]
[10.32613182 -67.47617340]
[17.78104210 -54.45986176]
[25.23595238 -41.44355011]
[32.69086456 -28.42724228]
[40.14577484 -15.41093254]
[56.27120972 -15.76010132]
[70.46308136 -7.90053892]
[78.81874084 6.11420584]
[78.98635101 22.52357674]
[70.82609558 36.86891937]
[78.55017853 49.72732162]
[86.27426147 62.58572388]
[93.99835205 75.44412994]
[102.39127350 72.84309387]
[111.80113220 73.24143219]
[121.12385559 76.99979401]
[129.14047241 84.06682587]
[134.67095947 93.94761658]
[136.73452759 105.72901917]
[150.75125122 111.07053375]
[164.76795959 116.41204834]
[181.72190857 116.40238953]
[186.42449951 132.69108582]
[172.07417297 141.71907043]
[159.42643738 130.42875671]
[145.40972900 125.08724976]
[131.39302063 119.74573517]
[125.17330170 123.93680573]
[134.91326904 135.34439087]
[144.65322876 146.75198364]
[154.39318848 158.15957642]
[168.22766113 163.95677185]
[174.84255981 177.41943359]
[170.97805786 191.91307068]
[158.53858948 200.29516602]
[143.65437317 198.43498230]
[133.66043091 187.24922180]
[133.48176575 172.25044250]
[126.56580353 158.93994141]
[119.64982605 145.62944031]
[112.73385620 132.31895447]
[106.51413727 136.51002502]
[106.20207977 151.50677490]
[105.89002228 166.50352478]
[105.57797241 181.50028992]
[105.26591492 196.49703979]
[104.95385742 211.49378967]
[104.64179993 226.49053955]
[104.32974243 241.48730469]
[104.01768494 256.48403931]
[103.70563507 271.48080444]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[11 141]
[13 112]
[14 111]
[15 110]
[16 109]
[22 104]
[23 103]
[24 102]
[25 101]
[26 100]
[29 97]
[30 96]
[34 94]
[35 93]
[36 92]
[43 87]
[44 86]
[45 85]
[46 84]
[47 83]
[48 82]
[49 81]
[59 70]
[60 69]
[61 68]
[62 67]
[118 126]
[119 125]
[120 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
