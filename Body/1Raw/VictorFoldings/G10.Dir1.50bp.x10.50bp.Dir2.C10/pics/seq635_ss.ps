%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUACUAAUCUCAUCAAUACAACCCCCGCCCAUCCUACCCAGCACACACACACCGCUGCUAxxxxxxxxxxCACUGUGAUAUAUAAACUCAGACCCAAACAUUAAUCAGUUCUUCAAAUAUCUACUCAUCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-17.32988739 212.40318298]
[-28.62889290 222.26890564]
[-39.92789841 232.13464355]
[-45.23417282 247.03947449]
[-59.91014481 249.58213806]
[-71.20915222 259.44784546]
[-82.50815582 269.31356812]
[-93.80715942 279.17929077]
[-105.10616302 289.04501343]
[-98.45245361 302.58718872]
[-95.53138733 317.39022827]
[-96.54212952 332.44482422]
[-101.41576385 346.72454834]
[-109.82000732 359.25573730]
[-121.18183136 369.18405151]
[-134.72657776 375.83251953]
[-149.53073120 378.74789429]
[-164.58494568 377.73132324]
[-178.86276245 372.85217285]
[-191.39073181 364.44311523]
[-201.31465149 353.07745361]
[-207.95790100 339.53012085]
[-210.86753845 324.72485352]
[-209.84516907 309.67105103]
[-204.96051025 295.39511108]
[-196.54658508 282.87039185]
[-185.17709351 272.95083618]
[-171.62722778 266.31283569]
[-156.82081604 263.40890503]
[-141.76741028 264.43710327]
[-127.49335480 269.32727051]
[-114.97188568 277.74603271]
[-103.67288208 267.88031006]
[-92.37387848 258.01455688]
[-81.07487488 248.14884949]
[-69.77587128 238.28312683]
[-65.27777100 224.08395386]
[-49.79362106 220.83563232]
[-38.49461746 210.96990967]
[-27.19561005 201.10418701]
[-41.92589569 179.10638428]
[-52.88835144 155.00846863]
[-59.79194260 129.45021057]
[-62.45339966 103.11009979]
[-60.80206299 76.68742371]
[-54.88177490 50.88365173]
[-44.84970474 26.38381195]
[-30.97218132 3.83832598]
[-13.61762524 -16.15427208]
[-23.60035133 -27.35003853]
[-33.58307648 -38.54580307]
[-43.56580353 -49.74156952]
[-58.39916992 -45.96932602]
[-73.28382111 -49.53386307]
[-84.79936218 -59.61606598]
[-90.29961395 -73.89912415]
[-88.52065277 -89.10089874]
[-79.87127686 -101.72812653]
[-66.33905029 -108.87917328]
[-51.03357697 -108.91076660]
[-37.47193909 -101.81565094]
[-28.77050591 -89.22424316]
[-26.92880249 -74.02994537]
[-32.37003708 -59.72429657]
[-22.38731194 -48.52853012]
[-12.40458584 -37.33276367]
[-2.42185926 -26.13699913]
[8.34117985 -34.16199493]
[19.72999382 -41.27103806]
[31.66682625 -47.41559219]
[44.07018280 -52.55371475]
[56.85538483 -56.65031815]
[69.93514252 -59.67743683]
[83.22016144 -61.61440659]
[96.61974335 -62.44800186]
[110.04239655 -62.17253113]
[123.39649200 -60.78987503]
[136.59085083 -58.30947495]
[149.53540039 -54.74826050]
[162.14175415 -50.13054657]
[174.32386780 -44.48786545]
[185.99855042 -37.85873413]
[197.08609009 -30.28841019]
[206.59445190 -41.88975143]
[216.10281372 -53.49109268]
[218.86640930 -69.06906128]
[232.91830444 -74.00801849]
[228.06991577 -88.65372467]
[231.93138123 -103.59001160]
[243.27053833 -114.05076599]
[258.46908569 -116.69799042]
[272.67721558 -110.68698120]
[281.36117554 -97.93581390]
[281.74996948 -82.51335144]
[273.71951294 -69.34083557]
[259.83227539 -62.62157822]
[244.51965332 -64.49966431]
[242.43615723 -49.75149918]
[227.70414734 -43.98273468]
[218.19580078 -32.38139343]
[208.68743896 -20.78005219]
[216.08190918 -13.69155312]
[223.01504517 -6.15120792]
[229.45927429 1.81101608]
[235.38899231 10.16347408]
[240.78062439 18.87297249]
[245.61276245 27.90489388]
[249.86618042 37.22334290]
[253.52398682 46.79129028]
[256.57162476 56.57070160]
[258.99700928 66.52272034]
[260.79049683 76.60778046]
[261.94494629 86.78581238]
[262.45578003 97.01636505]
[262.32095337 107.25877380]
[261.54101562 117.47233582]
[260.11904907 127.61645508]
[258.06072998 137.65081787]
[255.37423706 147.53553772]
[252.07022095 157.23133850]
[248.16183472 166.69969177]
[243.66461182 175.90295410]
[238.59642029 184.80456543]
[232.97740173 193.36912537]
[226.82987976 201.56260681]
[220.17829895 209.35243225]
[213.04908752 216.70767212]
[205.47059631 223.59907532]
[197.47291565 229.99926758]
[189.08786011 235.88279724]
[180.34873962 241.22627258]
[171.29028320 246.00848389]
[161.94850159 250.21040344]
[152.36050415 253.81533813]
[142.56442261 256.80895996]
[132.59916687 259.17938232]
[122.50435638 260.91717529]
[112.32010651 262.01541138]
[102.08689880 262.46975708]
[91.84539032 262.27841187]
[81.63629150 261.44210815]
[71.50017548 259.96417236]
[61.47732544 257.85049438]
[51.60757828 255.10948181]
[41.93015671 251.75201416]
[32.48352432 247.79142761]
[23.30522537 243.24346924]
[14.43173504 238.12622070]
[5.89831972 232.46000671]
[-2.26110530 226.26736450]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 40]
[2 39]
[3 38]
[5 36]
[6 35]
[7 34]
[8 33]
[9 32]
[49 67]
[50 66]
[51 65]
[52 64]
[83 101]
[84 100]
[85 99]
[87 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
