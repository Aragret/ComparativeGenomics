%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAUCAACUGAACGCAAAUCAGCCACUUUAAUUAAGCUAAGCCCUUACUAGACCAAUGGGACxxxxxxxxxxCCCUCCCCAUGCUUACAAGCAAGUACAGCAAUCAACCCUCAACUAUCACACAUCAACUGCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[102.23959351 298.66339111]
[102.23959351 283.66339111]
[102.23959351 268.66339111]
[102.23959351 253.66337585]
[102.23959351 238.66337585]
[102.23959351 223.66337585]
[102.23959351 208.66337585]
[102.23959351 193.66337585]
[102.23959351 178.66337585]
[102.23959351 163.66337585]
[95.63200378 160.11517334]
[88.53559875 173.33035278]
[81.43899536 186.54542542]
[68.22402954 179.44862366]
[75.32041931 166.23396301]
[82.41681671 153.01876831]
[75.80922699 149.47056580]
[63.30519485 157.75604248]
[50.80115891 166.04151917]
[38.29712296 174.32699585]
[36.71477127 189.88430786]
[25.46659088 200.74766541]
[9.86363316 201.78771973]
[-2.72686625 192.51338196]
[-6.36005688 177.30371094]
[0.67954212 163.34025574]
[15.06804752 157.21614075]
[30.01164627 161.82295227]
[42.51568222 153.53749084]
[55.01971817 145.25201416]
[67.52375793 136.96653748]
[57.26012039 109.36267090]
[65.00714111 84.42936707]
[83.74057770 71.45832825]
[79.48773193 57.07384491]
[75.23488617 42.68936539]
[70.98204041 28.30488396]
[63.49163437 41.30080032]
[49.46014404 46.60337830]
[35.24684906 41.80940247]
[27.29341888 29.09158325]
[29.20447159 14.21381855]
[40.11388779 3.91893363]
[55.07735825 2.87272286]
[67.31220245 11.54789257]
[65.16362000 -3.29743052]
[63.01504135 -18.14275360]
[60.41031647 -32.91487122]
[57.35192108 -47.59976578]
[54.29352570 -62.28466415]
[51.23513031 -76.96955872]
[45.45669556 -63.12724686]
[34.62462234 -52.75101471]
[20.54680824 -47.57268143]
[5.57287025 -48.45652390]
[-7.79800797 -55.25502396]
[-17.33419800 -66.83350372]
[-21.44408607 -81.25947571]
[-19.44172668 -96.12522888]
[-11.66131592 -108.94963074]
[0.59857839 -117.59225464]
[15.29175282 -120.61063385]
[29.96588516 -117.50099182]
[42.17182922 -108.78234100]
[49.87141037 -95.91265106]
[50.79482269 -110.88420105]
[51.71823883 -125.85575104]
[52.64165115 -140.82730103]
[53.56506348 -155.79885864]
[39.56528473 -161.56816101]
[28.19899178 -171.57246399]
[20.69911385 -184.72657776]
[17.87918282 -199.60362244]
[20.04508400 -214.58987427]
[26.96187592 -228.05972290]
[37.87927628 -238.55204773]
[51.61304855 -244.92874146]
[66.67345428 -246.49810791]
[81.42685699 -243.08988953]
[94.27291107 -235.07380676]
[103.81817627 -223.31938171]
[109.02725983 -209.10163879]
[109.33510590 -193.96281433]
[104.70833588 -179.54505920]
[95.64881897 -167.41229248]
[83.13925934 -158.88061523]
[68.53661346 -154.87544250]
[67.61319733 -139.90388489]
[66.68978882 -124.93233490]
[65.76637268 -109.96078491]
[64.84295654 -94.98923492]
[65.92002869 -80.02795410]
[68.97842407 -65.34306335]
[72.03681946 -50.65816116]
[75.09521484 -35.97326660]
[77.89030457 -33.72945404]
[79.70909882 -29.99293137]
[79.84956360 -25.25100327]
[77.86036682 -20.29133224]
[80.00894165 -5.44600964]
[82.15752411 9.39931297]
[85.36651611 24.05203819]
[89.61936188 38.43651962]
[93.87221527 52.82099915]
[98.12506104 67.20548248]
[124.36471558 70.44825745]
[143.35697937 94.12383270]
[140.27827454 128.26467896]
[155.23954773 129.34175110]
[162.01878357 115.73622894]
[173.49188232 105.76443481]
[187.90925598 100.94700623]
[203.07237244 102.01855469]
[216.66897583 108.81568909]
[226.62567139 120.30188751]
[231.42413330 134.72558594]
[230.33262634 149.88728333]
[223.51762390 163.47492981]
[212.01832581 173.41650391]
[197.58833313 178.19598389]
[182.42808533 177.08454895]
[168.84941101 170.25166321]
[158.92297363 158.73930359]
[154.16247559 144.30303955]
[139.20120239 143.22596741]
[133.71080017 148.33531189]
[146.32418823 156.45335388]
[158.93756104 164.57139587]
[171.55094910 172.68943787]
[186.36993408 175.01271057]
[198.28807068 184.12084961]
[204.42120361 197.80970764]
[203.28515625 212.76661682]
[195.15483093 225.37208557]
[181.99774170 232.57563782]
[166.99786377 232.63403320]
[153.78507996 225.53314209]
[145.55686951 212.99134827]
[144.30413818 198.04524231]
[137.11276245 184.88150024]
[129.92137146 171.71775818]
[122.72999573 158.55403137]
[117.23959351 163.66337585]
[117.23959351 178.66337585]
[117.23959351 193.66337585]
[117.23959351 208.66337585]
[117.23959351 223.66337585]
[117.23959351 238.66337585]
[117.23959351 253.66337585]
[117.23959351 268.66339111]
[117.23959351 283.66339111]
[117.23959351 298.66339111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[17 31]
[18 30]
[19 29]
[20 28]
[34 105]
[35 104]
[36 103]
[37 102]
[45 101]
[46 100]
[47 99]
[48 95]
[49 94]
[50 93]
[51 92]
[65 91]
[66 90]
[67 89]
[68 88]
[69 87]
[108 125]
[109 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
