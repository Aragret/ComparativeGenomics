%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACACUAGGAAAAAACCUUGUAGAGAGAGUAAAAAAUUUAACACCCAUAGUAGGCCUAAAAxxxxxxxxxxUGAUAUCAAUUGGCUUCCUAGGGUUUAUCGUGUGAGCACACCAUAUAUUUACAGUAGGAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 249.55909729]
[92.50000000 234.55909729]
[92.50000000 219.55909729]
[92.50000000 204.55909729]
[92.50000000 189.55909729]
[92.50000000 174.55909729]
[92.50000000 159.55909729]
[92.50000000 144.55909729]
[92.50000000 129.55909729]
[92.50000000 114.55909729]
[87.01296997 100.59870911]
[76.79949188 89.61304474]
[61.73634338 84.77442169]
[58.73698807 70.18493652]
[48.52350616 59.19926834]
[38.31002808 48.21360397]
[28.09654808 37.22793961]
[17.88306808 26.24227524]
[7.66958809 15.25660992]
[-2.54389167 4.27094555]
[-14.34204102 13.54797173]
[-26.86598969 21.81902122]
[-40.03018570 29.02759171]
[-53.74470139 35.12444305]
[-67.91584778 40.06792831]
[-82.44683075 43.82427216]
[-97.23838043 46.36782074]
[-112.18945312 47.68119431]
[-127.19791412 47.75542068]
[-142.16125488 46.58999634]
[-156.97723389 44.19288254]
[-171.54466248 40.58045197]
[-185.76400757 35.77738190]
[-199.53816223 29.81648445]
[-212.77302551 22.73847771]
[-225.37815857 14.59171200]
[-237.26750183 5.43183899]
[-248.35980225 -4.67856884]
[-258.57931519 -15.67044544]
[-267.85620117 -27.46870613]
[-276.12707520 -39.99275208]
[-283.33551025 -53.15703201]
[-289.43218994 -66.87162018]
[-294.37551880 -81.04283142]
[-298.13168335 -95.57386017]
[-300.67504883 -110.36543274]
[-301.98825073 -125.31652069]
[-302.06228638 -140.32499695]
[-300.89669800 -155.28831482]
[-298.49938965 -170.10426331]
[-294.88681030 -184.67164612]
[-290.08355713 -198.89094543]
[-284.12249756 -212.66502380]
[-277.04434204 -225.89979553]
[-268.89739990 -238.50483704]
[-259.73739624 -250.39407349]
[-249.62686157 -261.48623657]
[-238.63485718 -271.70562744]
[-226.83648682 -280.98236084]
[-214.31234741 -289.25311279]
[-201.14797974 -296.46136475]
[-187.43331909 -302.55789185]
[-173.26205444 -307.50103760]
[-158.73097229 -311.25704956]
[-143.93937683 -313.80023193]
[-128.98826599 -315.11325073]
[-113.97979736 -315.18713379]
[-99.01649475 -314.02133179]
[-84.20056915 -311.62387085]
[-69.63322449 -308.01110840]
[-55.41398621 -303.20770264]
[-41.63997650 -297.24645996]
[-28.40529442 -290.16815186]
[-15.80034065 -282.02108765]
[-3.91122460 -272.86093140]
[7.18083763 -262.75024414]
[17.40007591 -251.75813293]
[26.67667961 -239.95964050]
[34.94728088 -227.43539429]
[42.15538025 -214.27095032]
[48.25174332 -200.55621338]
[53.19472122 -186.38488770]
[56.95054626 -171.85377502]
[59.49356461 -157.06213379]
[60.80640411 -142.11100769]
[60.88009644 -127.10254669]
[59.71413803 -112.13925171]
[57.31649399 -97.32335663]
[53.70354080 -82.75605774]
[48.89996338 -68.53688049]
[42.93857193 -54.76293945]
[35.86009216 -41.52833939]
[27.71287537 -28.92348289]
[18.55257797 -17.03447533]
[8.44177341 -5.94253445]
[18.65525246 5.04313040]
[28.86873245 16.02879524]
[39.08221436 27.01445961]
[49.29569244 38.00012589]
[59.50917053 48.98579025]
[69.72264862 59.97145462]
[84.05525970 64.02430725]
[87.78515625 79.39955902]
[97.99863434 90.38522339]
[108.96302032 78.22402191]
[131.08493042 79.42749023]
[146.01924133 80.82979584]
[160.95355225 82.23209381]
[175.41662598 75.81881714]
[187.36482239 84.71206665]
[202.29911804 86.11437225]
[217.23342896 87.51667023]
[232.16773987 88.91897583]
[246.84049988 81.59490967]
[260.36862183 90.86433411]
[258.83551025 107.19166565]
[243.81831360 113.78073883]
[230.76544189 103.85328674]
[215.83113098 102.45098114]
[200.89682007 101.04867554]
[185.96250916 99.64636993]
[172.56764221 106.15995026]
[159.55123901 97.16640472]
[144.61694336 95.76409912]
[129.68263245 94.36179352]
[124.13697052 99.41111755]
[136.57075500 107.80164337]
[149.00454712 116.19216919]
[161.43833923 124.58269501]
[175.59580994 129.53910828]
[184.59814453 141.53735352]
[185.39802551 156.51600647]
[177.72470093 169.40476990]
[164.17559814 175.84075928]
[149.33712769 173.64537048]
[138.23213196 163.56176758]
[134.61981201 149.00099182]
[127.42842102 135.83724976]
[120.23703766 122.67350769]
[113.04565430 109.50977325]
[107.50000000 114.55909729]
[107.50000000 129.55909729]
[107.50000000 144.55909729]
[107.50000000 159.55909729]
[107.50000000 174.55909729]
[107.50000000 189.55909729]
[107.50000000 204.55909729]
[107.50000000 219.55909729]
[107.50000000 234.55909729]
[107.50000000 249.55909729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 104]
[12 103]
[14 101]
[15 100]
[16 99]
[17 98]
[18 97]
[19 96]
[20 95]
[106 125]
[107 124]
[108 123]
[110 121]
[111 120]
[112 119]
[113 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
