%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUAGACCAAGAAGUUAUUAUCUCGAACUGACACUGAGCCACAACCCAAACAACCCAGCUxxxxxxxxxxACAAUCCCCUAUCUAGGCCUUCUUACGAGCCAAAACCUGCCCCUACUCCUCCUAGACCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[97.42821503 218.52442932]
[96.80423737 203.53741455]
[96.18025970 188.55039978]
[95.55628204 173.56338501]
[94.93230438 158.57637024]
[94.30832672 143.58935547]
[93.68434906 128.60234070]
[93.06037140 113.61531830]
[86.29225159 100.22903442]
[74.59262848 90.84187317]
[62.89300919 81.45471191]
[51.19338608 72.06755066]
[39.49375916 62.68038559]
[27.79413605 53.29322433]
[16.09451294 43.90606308]
[4.39488983 34.51890182]
[-5.92021179 45.42080307]
[-17.08960342 55.44564819]
[-29.03895187 64.52671814]
[-41.68873596 72.60358429]
[-54.95477295 79.62248993]
[-68.74877930 85.53672791]
[-82.97895813 90.30693817]
[-97.55059814 93.90137482]
[-112.36673737 96.29611969]
[-127.32877350 97.47523499]
[-142.33712769 97.43087769]
[-157.29193115 96.16333008]
[-172.09365845 93.68104553]
[-186.64379883 90.00052643]
[-200.84552002 85.14627075]
[-214.60432434 79.15059662]
[-227.82864380 72.05339050]
[-240.43046570 63.90188599]
[-252.32591248 54.75033188]
[-263.43585205 44.65963364]
[-273.68630981 33.69694519]
[-283.00912476 21.93521690]
[-291.34219360 9.45272541]
[-298.63009644 -3.66745925]
[-304.82434082 -17.33802223]
[-309.88366699 -31.46798897]
[-313.77444458 -45.96332550]
[-316.47073364 -60.72756195]
[-317.95465088 -75.66244507]
[-318.21627808 -90.66859436]
[-317.25387573 -105.64612579]
[-315.07388306 -120.49538422]
[-311.69076538 -135.11753845]
[-307.12704468 -149.41526794]
[-301.41311646 -163.29345703]
[-294.58700562 -176.65971375]
[-286.69409180 -189.42509460]
[-277.78695679 -201.50465393]
[-267.92486572 -212.81799316]
[-257.17343140 -223.28984070]
[-245.60421753 -232.85049438]
[-233.29420471 -241.43632507]
[-220.32533264 -248.99018860]
[-206.78388977 -255.46183777]
[-192.76000977 -260.80819702]
[-178.34701538 -264.99368286]
[-163.64080811 -267.99041748]
[-148.73927307 -269.77850342]
[-133.74159241 -270.34600830]
[-118.74754333 -269.68914795]
[-103.85693359 -267.81234741]
[-89.16884613 -264.72802734]
[-74.78103638 -260.45675659]
[-60.78925323 -255.02696228]
[-47.28660965 -248.47476196]
[-34.36296463 -240.84375000]
[-22.10432243 -232.18473816]
[-10.59226799 -222.55534363]
[0.09658917 -212.01963806]
[9.89111614 -200.64773560]
[18.72612953 -188.51533508]
[26.54283333 -175.70315552]
[33.28920746 -162.29646301]
[38.92036057 -148.38449097]
[43.39880753 -134.05981445]
[46.69475174 -119.41777039]
[48.78625870 -104.55579376]
[49.65940857 -89.57278442]
[49.30838776 -74.56846619]
[47.73553848 -59.64268875]
[44.95132065 -44.89477539]
[40.97426987 -30.42287636]
[35.83084869 -16.32330132]
[29.55528450 -2.68988228]
[22.18934631 10.38665199]
[13.78205109 22.81927872]
[25.48167419 32.20643997]
[37.18129730 41.59360123]
[48.88092422 50.98076248]
[60.58054733 60.36792374]
[72.28016663 69.75508881]
[83.97978973 79.14225006]
[95.67942047 88.52941132]
[85.88621521 77.16748810]
[83.88452148 62.30165100]
[90.32363129 48.75403595]
[103.11484528 40.91918945]
[118.10898590 41.33856201]
[130.44227600 49.87611389]
[136.11408997 63.76245880]
[133.28425598 78.49384308]
[148.05030823 81.13270569]
[162.81637573 83.77156830]
[170.40438843 70.64915466]
[182.02491760 60.91575241]
[196.27471924 55.74671936]
[211.43307495 55.76624298]
[225.66950989 60.97196198]
[237.26493835 70.73526001]
[244.81912231 83.87717438]
[247.41989136 98.81076050]
[244.75315857 113.73270416]
[237.14097595 126.84111023]
[225.50253296 136.55308533]
[211.24322510 141.69584656]
[196.08494568 141.64839172]
[181.85810852 136.41644287]
[170.28070068 126.63179016]
[162.75074768 113.47597504]
[160.17750549 98.53762054]
[145.41145325 95.89875793]
[130.64540100 93.25989532]
[124.99589539 98.19275665]
[136.68919373 107.58779907]
[148.38247681 116.98284912]
[162.80740356 121.09645844]
[170.99836731 133.66259766]
[168.93974304 148.52066040]
[157.64076233 158.38641357]
[142.64080811 158.42311096]
[131.29368591 148.61276245]
[129.16238403 133.76486206]
[121.42964172 120.91167450]
[113.69689178 108.05847931]
[108.04738617 112.99134064]
[108.67136383 127.97835541]
[109.29534149 142.96537781]
[109.91931915 157.95239258]
[110.54329681 172.93940735]
[111.16727448 187.92642212]
[111.79125214 202.91343689]
[112.41522980 217.90045166]
[119.11521912 233.47436523]
[106.00469208 244.22380066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 99]
[10 98]
[11 97]
[12 96]
[13 95]
[14 94]
[15 93]
[16 92]
[107 128]
[108 127]
[109 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
