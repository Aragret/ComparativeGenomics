%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGGCCUCCUAUUUAUUCUAGCCACCUCUAGCCUAGCCGUUUACUCAAUCCUCUGAUCAGGxxxxxxxxxxCUCAUUCAACCAAUAGCCCUGGCCGUACGCCUAACCGCUAACAUUACUGCAGGCCACCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[94.25476074 271.65182495]
[94.25476074 256.65182495]
[94.25476074 241.65180969]
[94.25476074 226.65180969]
[94.25476074 211.65180969]
[94.25476074 196.65180969]
[94.25476074 181.65180969]
[94.25476074 166.65180969]
[94.25476074 151.65180969]
[94.25476074 136.65180969]
[71.59296417 113.20973969]
[78.14237976 86.75584412]
[68.15965271 75.56008148]
[58.17692947 64.36431122]
[48.19420242 53.16854477]
[29.30244827 52.85088348]
[16.80540848 39.10601807]
[18.23233986 20.90268517]
[7.79252625 10.13187599]
[-2.64728594 -0.63893265]
[-13.08709812 -11.40974140]
[-23.52691078 -22.18054962]
[-35.18567657 -12.72693729]
[-47.63433838 -4.34073257]
[-60.77546692 2.91243076]
[-74.50621033 8.97578526]
[-88.71910858 13.80187702]
[-103.30292511 17.35293388]
[-118.14351654 19.60116386]
[-133.12472534 20.52897072]
[-148.12931824 20.12909317]
[-163.03985596 18.40466118]
[-177.73962402 15.36917019]
[-192.11360168 11.04637814]
[-206.04927063 5.47011709]
[-219.43757629 -1.31597006]
[-232.17372131 -9.25877190]
[-244.15803528 -18.29612541]
[-255.29673767 -28.35729599]
[-265.50262451 -39.36354446]
[-274.69583130 -51.22872925]
[-282.80441284 -63.85998535]
[-289.76489258 -77.15845490]
[-295.52279663 -91.02005768]
[-300.03308105 -105.33631134]
[-303.26040649 -119.99515533]
[-305.17956543 -134.88188171]
[-305.77551270 -149.87995911]
[-305.04357910 -164.87202454]
[-302.98950195 -179.74072266]
[-299.62933350 -194.36970520]
[-294.98941040 -208.64445496]
[-289.10601807 -222.45327759]
[-282.02523804 -235.68807983]
[-273.80242920 -248.24526978]
[-264.50201416 -260.02661133]
[-254.19671631 -270.93984985]
[-242.96723938 -280.89956665]
[-230.90145874 -289.82788086]
[-218.09379578 -297.65484619]
[-204.64450073 -304.31924438]
[-190.65882874 -309.76889038]
[-176.24624634 -313.96115112]
[-161.51954651 -316.86318970]
[-146.59397888 -318.45233154]
[-131.58638000 -318.71612549]
[-116.61420441 -317.65246582]
[-101.79460907 -315.26974487]
[-87.24359894 -311.58657837]
[-73.07505798 -306.63180542]
[-59.39986420 -300.44415283]
[-46.32505798 -293.07211304]
[-33.95296097 -284.57336426]
[-22.38040924 -275.01440430]
[-11.69797230 -264.47006226]
[-1.98925781 -253.02285767]
[6.66974974 -240.76239014]
[14.21128082 -227.78459167]
[20.57631111 -214.19107056]
[25.71502495 -200.08818054]
[29.58720207 -185.58633423]
[32.16254044 -170.79899597]
[33.42088318 -155.84191895]
[33.35238266 -140.83215332]
[31.95757103 -125.88718414]
[29.24736786 -111.12397766]
[25.24298286 -96.65806580]
[19.97575951 -82.60267639]
[13.48691940 -69.06781006]
[5.82724762 -56.15940094]
[-2.94330740 -43.97847366]
[-12.75610256 -32.62036133]
[-2.31628990 -21.84955406]
[8.12352276 -11.07874489]
[18.56333542 -0.30793655]
[29.00314713 10.46287155]
[40.25405502 8.15905762]
[51.32540512 11.63654041]
[59.40420151 20.13400459]
[62.37880707 31.59963226]
[59.38996887 43.18582153]
[69.37269592 54.38158417]
[79.35542297 65.57735443]
[89.33815002 76.77311707]
[99.74375916 72.13565826]
[112.08148956 72.35028076]
[124.03743744 78.15254974]
[133.06217957 89.16949463]
[136.89668274 103.87274933]
[151.39227295 107.72991180]
[169.01805115 102.50380707]
[180.99064636 115.29665375]
[195.56333923 118.85141754]
[210.13604736 122.40617371]
[221.24365234 111.69989014]
[236.38066101 108.72083282]
[250.71688843 114.41960907]
[259.67770386 126.97776794]
[260.40374756 142.38803101]
[252.66334534 155.73306274]
[238.92642212 162.75448608]
[223.57638550 161.21180725]
[211.51136780 151.59729004]
[206.58128357 136.97888184]
[192.00857544 133.42411804]
[177.43588257 129.86935425]
[166.89877319 135.89236450]
[154.69752502 133.00297546]
[147.53512573 122.22550201]
[133.03952026 118.36834717]
[127.09333038 122.93921661]
[137.96519470 133.27374268]
[148.83705139 143.60827637]
[161.01115417 152.37135315]
[161.24714661 167.36949158]
[149.35478210 176.51124573]
[134.92164612 172.42654419]
[129.58372498 158.40841675]
[122.39233398 145.24468994]
[115.20095062 132.08094788]
[109.25476074 136.65180969]
[109.25476074 151.65180969]
[109.25476074 166.65180969]
[109.25476074 181.65180969]
[109.25476074 196.65180969]
[109.25476074 211.65180969]
[109.25476074 226.65180969]
[109.25476074 241.65180969]
[109.25476074 256.65182495]
[109.25476074 271.65182495]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 104]
[13 103]
[14 102]
[15 101]
[18 96]
[19 95]
[20 94]
[21 93]
[22 92]
[109 130]
[110 129]
[112 126]
[113 125]
[114 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
