%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAUAACGCUCCUCAUACUAGGCCUACUAACCAACACACUAACCAUAUACCAAUGAUGGCGxxxxxxxxxxCUACUAUGCCUAGAAGGAAUAAUACUAUCGCUGUUCAUUAUAGCUACUCUCAUAACCCUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[137.56809998 328.14334106]
[137.25604248 313.14657593]
[136.94400024 298.14984131]
[136.63194275 283.15307617]
[136.31988525 268.15634155]
[136.00782776 253.15957642]
[135.69577026 238.16282654]
[135.38371277 223.16606140]
[135.07165527 208.16931152]
[132.27932739 193.43150330]
[127.08391571 179.35998535]
[121.74240112 165.34327698]
[116.25537109 151.38288879]
[110.19235992 137.66282654]
[103.56385803 124.20686340]
[96.93536377 110.75090027]
[90.16724396 97.36461639]
[83.26024628 84.04946136]
[74.87810516 71.61002350]
[65.13045502 60.20899963]
[55.38280106 48.80797958]
[45.63514709 37.40695572]
[39.44271469 34.80670929]
[36.04840088 30.14731789]
[35.73117065 25.32291412]
[27.91684914 20.46614456]
[26.39924431 13.18311405]
[17.38171387 1.19628155]
[8.36418533 -10.79055119]
[-0.65334487 -22.77738380]
[-9.67087460 -34.76421738]
[-18.68840408 -46.75104904]
[-31.60734558 -39.09832764]
[-45.28975296 -32.91327286]
[-59.56953430 -28.27095985]
[-74.27334595 -25.22774696]
[-89.22269440 -23.82057381]
[-104.23611450 -24.06652069]
[-119.13134766 -25.96260643]
[-133.72758484 -29.48580933]
[-147.84764099 -34.59336472]
[-161.32011414 -41.22327042]
[-173.98146057 -49.29504395]
[-185.67797852 -58.71070480]
[-196.26768494 -69.35594940]
[-205.62203979 -81.10156250]
[-213.62747192 -93.80495453]
[-220.18681335 -107.31192780]
[-225.22044373 -121.45850372]
[-228.66725159 -136.07298279]
[-230.48538208 -150.97792053]
[-230.65280151 -165.99243164]
[-229.16744995 -180.93420410]
[-226.04736328 -195.62190247]
[-221.33041382 -209.87719727]
[-215.07388306 -223.52706909]
[-207.35368347 -236.40580750]
[-198.26354980 -248.35707092]
[-187.91383362 -259.23577881]
[-176.43017578 -268.90991211]
[-163.95195007 -277.26199341]
[-150.63066101 -284.19064331]
[-136.62799072 -289.61178589]
[-122.11393738 -293.45956421]
[-107.26468658 -295.68728638]
[-92.26048279 -296.26794434]
[-77.28347778 -295.19442749]
[-62.51546478 -292.47982788]
[-48.13572311 -288.15707397]
[-34.31880951 -282.27865601]
[-21.23244476 -274.91589355]
[-9.03548622 -266.15817261]
[2.12400436 -256.11184692]
[12.11056232 -244.89881897]
[20.80295944 -232.65522766]
[28.09567833 -219.52969360]
[33.90019226 -205.68156433]
[38.14603806 -191.27893066]
[40.78167725 -176.49662781]
[41.77511597 -161.51408386]
[41.11429214 -146.51319885]
[38.80723190 -131.67607117]
[34.88193512 -117.18278503]
[29.38605499 -103.20928955]
[22.38630676 -89.92521667]
[13.96765804 -77.49181366]
[4.23230600 -66.06000519]
[-6.70157194 -55.76857758]
[2.31595778 -43.78174591]
[11.33348751 -31.79491425]
[20.35101700 -19.80808067]
[29.36854744 -7.82124805]
[38.38607788 4.16558409]
[47.52781296 16.05796432]
[57.03617096 27.65930557]
[66.78382111 39.06032562]
[76.53147125 50.46134567]
[86.27912903 61.86236954]
[85.34160614 46.89169693]
[91.35117340 33.14814758]
[102.97857666 23.67167664]
[117.65193176 20.55838394]
[132.12564087 24.49690628]
[143.19822693 34.61607361]
[148.42056274 48.67762756]
[146.63751221 63.57127380]
[138.24345398 76.00267792]
[125.09509277 83.22212982]
[110.10071564 83.63275146]
[96.57540131 77.14246368]
[103.48239899 90.45761871]
[109.73437500 95.63419342]
[110.39132690 104.12240601]
[117.01982880 117.57836914]
[123.64832306 131.03433228]
[127.47357941 133.38569641]
[130.05412292 136.53401184]
[131.29202271 139.97631836]
[131.26753235 143.23106384]
[130.21575928 145.89585876]
[135.70278931 159.85624695]
[141.79324341 166.75250244]
[141.15544128 174.16456604]
[146.35084534 188.23609924]
[149.52262878 173.57527161]
[157.43591309 160.83242798]
[169.17063904 151.48918152]
[183.36241150 146.63185120]
[198.36116028 146.82519531]
[212.42300415 152.04673767]
[223.91297913 161.68936157]
[231.49516296 174.63195801]
[234.28797913 189.36967468]
[231.96669006 204.18896484]
[224.80122375 217.36682129]
[213.62466431 227.37106323]
[199.73654175 233.03849792]
[184.75158691 233.71017456]
[170.41209412 229.30801392]
[158.38531494 220.34384155]
[150.06840515 207.85725403]
[150.38046265 222.85400391]
[150.69252014 237.85076904]
[151.00457764 252.84751892]
[151.31663513 267.84426880]
[151.62869263 282.84103394]
[151.94075012 297.83776855]
[152.25280762 312.83453369]
[152.56486511 327.83129883]
[155.15585327 347.03900146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 124]
[11 123]
[12 121]
[13 120]
[14 115]
[15 114]
[16 113]
[17 111]
[18 110]
[19 98]
[20 97]
[21 96]
[22 95]
[25 94]
[27 93]
[28 92]
[29 91]
[30 90]
[31 89]
[32 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
