%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGCCUAUAUACCGCCAUCUUCAGCAAACCCUGAUGAAGGCUACAAAGUAAGCGCAAGUACCxxxxxxxxxxCCCAUUCUAAUCGCAAUGGCAUUCCUAAUGCUUACCGAACGAAAAAUUCUAGGCUAUAUACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[209.65156555 425.00418091]
[209.65156555 410.00418091]
[209.65156555 395.00418091]
[209.65156555 380.00418091]
[209.65156555 365.00418091]
[209.65156555 350.00418091]
[209.65156555 335.00418091]
[209.65156555 320.00418091]
[209.65156555 305.00418091]
[209.65156555 290.00418091]
[205.25126648 275.66409302]
[196.83786011 263.24578857]
[188.42445374 250.82748413]
[174.19149780 255.43188477]
[159.22270203 255.83956909]
[144.73091125 252.00892639]
[131.89277649 244.24214172]
[121.75314331 233.16133118]
[115.14007568 219.65876770]
[112.59717560 204.82496643]
[114.33895874 189.86062622]
[120.23274994 175.97950745]
[129.80877686 164.30990601]
[121.39537048 151.89158630]
[112.98195648 139.47328186]
[104.56855011 127.05496216]
[96.15513611 114.63665009]
[82.86779785 107.67629242]
[67.86858368 107.83029175]
[52.86937714 107.98428345]
[37.87016678 108.13828278]
[22.87095642 108.29228210]
[9.15094662 116.17085266]
[-3.65508890 108.56462097]
[-18.65429878 108.71862030]
[-30.86331749 119.12628174]
[-46.58446884 115.92862701]
[-53.75783157 101.57862854]
[-46.88061142 87.08437347]
[-31.22842979 83.56461334]
[-18.80829620 93.71940613]
[-3.80908585 93.56541443]
[8.83808041 85.69785309]
[22.71696091 93.29306793]
[37.71617126 93.13907623]
[52.71537781 92.98507690]
[67.71459198 92.83107758]
[82.71379852 92.67708588]
[87.26108551 78.38294983]
[75.10775757 69.59111023]
[62.95442200 60.79926682]
[46.59505463 59.65773392]
[39.64812469 44.80269241]
[49.26004028 31.51573944]
[65.54288483 33.46535110]
[71.74626160 48.64593506]
[83.89959717 57.43777847]
[96.05293274 66.22962189]
[102.83387756 63.02513123]
[116.39577484 56.61615753]
[123.17671967 53.41166687]
[124.10013580 38.44011688]
[125.02355194 23.46856880]
[110.49213409 19.54137421]
[97.04887390 12.76910782]
[85.24425507 3.42908978]
[75.56167603 -8.09621143]
[68.39763641 -21.33484268]
[64.04548645 -35.74468994]
[62.68345261 -50.73567963]
[64.36730957 -65.69393921]
[69.02809906 -80.00693512]
[76.47496796 -93.08856201]
[86.40296936 -104.40313721]
[98.40556335 -113.48733521]
[111.99124908 -119.96916199]
[126.60369873 -123.58319092]
[141.64454651 -124.18142700]
[156.49786377 -121.73937988]
[170.55543518 -116.35704803]
[183.24160767 -108.25482941]
[194.03689575 -97.76450348]
[202.49922180 -85.31565857]
[208.28205872 -71.41804504]
[211.14863586 -56.64077377]
[210.98152161 -41.58896637]
[207.78759766 -26.87897873]
[201.69763184 -13.11317921]
[192.96101379 -0.85526788]
[181.93550110 9.39280224]
[169.07258606 17.21137810]
[154.89898682 22.28029442]
[139.99510193 24.39198112]
[139.07168579 39.36353302]
[138.14826965 54.33508301]
[134.78150940 95.68318176]
[108.57344818 106.22323608]
[116.98686218 118.64155579]
[125.40026855 131.05986023]
[133.81367493 143.47817993]
[142.22709656 155.89649963]
[156.61557007 151.33013916]
[171.69256592 151.00355530]
[186.23599243 154.93464661]
[199.06947327 162.79658508]
[209.15740967 173.94493103]
[215.68856812 187.47047424]
[218.14137268 202.27331543]
[216.32543945 217.15245056]
[210.39646912 230.90303040]
[200.84275818 242.41406250]
[209.25617981 254.83238220]
[217.66958618 267.25070190]
[217.06837463 252.26275635]
[219.44046021 237.45149231]
[224.69227600 223.40092468]
[232.61677551 210.66505432]
[242.90147400 199.74604797]
[255.14088440 191.07443237]
[268.85238647 184.99212646]
[283.49536133 181.73893738]
[298.49246216 181.44314575]
[313.25231934 184.11642456]
[327.19299316 189.65336609]
[339.76480103 197.83563232]
[350.47204590 208.34062195]
[358.89257812 220.75411987]
[364.69433594 234.58668518]
[367.64855957 249.29287720]
[367.63879395 264.29287720]
[364.66543579 278.99523926]
[358.84570312 292.82022095]
[350.40902710 305.22274780]
[339.68814087 315.71380615]
[327.10568237 323.87973022]
[313.15780640 329.39852905]
[298.39450073 332.05258179]
[283.39779663 331.73730469]
[268.75906372 328.46505737]
[255.05548096 322.36492920]
[242.82737732 313.67739868]
[232.55686951 302.74499512]
[224.65156555 290.00418091]
[224.65156555 305.00418091]
[224.65156555 320.00418091]
[224.65156555 335.00418091]
[224.65156555 350.00418091]
[224.65156555 365.00418091]
[224.65156555 380.00418091]
[224.65156555 395.00418091]
[224.65156555 410.00418091]
[224.65156555 425.00418091]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 113]
[12 112]
[13 111]
[23 101]
[24 100]
[25 99]
[26 98]
[27 97]
[28 48]
[29 47]
[30 46]
[31 45]
[32 44]
[34 42]
[35 41]
[49 58]
[50 57]
[51 56]
[61 95]
[62 94]
[63 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
