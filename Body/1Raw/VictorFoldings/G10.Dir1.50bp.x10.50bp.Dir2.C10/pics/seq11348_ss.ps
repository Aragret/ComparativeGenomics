%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACACUAUUAAAGUUUACCACAACCACCACCCCAUCAUACUCUUUCACCCACAGCACCAAUCxxxxxxxxxxCGCUGUAGUAUAUCCAAAGACAACCAUCAUUCCCCCUAAAUAAAUUAAAAAAACUAUUAAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[98.96714783 110.55619049]
[87.37809753 120.07952881]
[75.78904724 129.60287476]
[64.19999695 139.12620544]
[58.45026779 153.86564636]
[43.70481110 155.96818542]
[32.11576080 165.49153137]
[26.36603165 180.23097229]
[11.62057304 182.33351135]
[0.03152427 191.85685730]
[6.27719021 205.59199524]
[8.75416660 220.47578430]
[7.29356956 235.49340820]
[1.99498439 249.62094116]
[-6.78032255 261.89517212]
[-18.43403625 271.47918701]
[-32.17158508 277.71954346]
[-47.05632401 280.19076538]
[-62.07338333 278.72436523]
[-76.19887543 273.42034912]
[-88.46970367 264.64028931]
[-98.04922485 252.98287964]
[-104.28427887 239.24291992]
[-106.74976349 224.35722351]
[-105.27757263 209.34072876]
[-99.96807861 195.21728516]
[-91.18329620 182.94984436]
[-79.52217865 173.37483215]
[-65.77981567 167.14508057]
[-50.89317322 164.68534851]
[-35.87725067 166.16334534]
[-21.75585747 171.47828674]
[-9.49181366 180.26780701]
[2.09723520 170.74447632]
[7.01803827 156.68620300]
[22.59242439 153.90248108]
[34.18147278 144.37915039]
[39.10227585 130.32087708]
[54.67666245 127.53715515]
[66.26570892 118.01381683]
[77.85475922 108.49047852]
[89.44380951 98.96714783]
[74.70883179 96.15991974]
[70.71900177 81.70027924]
[81.92938995 71.73397827]
[95.82307434 77.39042664]
[91.27578735 63.09629440]
[86.72850037 48.80216217]
[82.18120575 34.50803375]
[77.63391876 20.21390343]
[71.79953766 34.03273392]
[59.50349045 42.62384415]
[44.52105331 43.34948349]
[31.45232010 35.98686218]
[24.30981445 22.79653931]
[25.28651810 7.82837200]
[34.08255005 -4.32192945]
[47.99724579 -9.92382812]
[62.75833893 -7.25736094]
[73.83274078 2.85721278]
[71.98941803 -12.02909470]
[70.14609528 -26.91540337]
[68.30277252 -41.80171204]
[66.45944214 -56.68801880]
[51.60301971 -59.54140472]
[38.35644531 -66.84780121]
[28.01748085 -77.89139557]
[21.59903908 -91.59025574]
[19.72993088 -106.60231018]
[22.59327126 -121.45681763]
[29.90854073 -134.69850159]
[40.95906448 -145.03005981]
[54.66222382 -151.43931580]
[69.67552185 -153.29837036]
[84.52810669 -150.42506409]
[97.76488495 -143.10093689]
[108.08903503 -132.04348755]
[114.48911285 -118.33603668]
[116.33810425 -103.32149506]
[113.45485687 -88.47084045]
[106.12184906 -75.23897552]
[95.05748749 -64.92223358]
[81.34574890 -58.53134155]
[83.18907928 -43.64503479]
[85.03240204 -28.75872612]
[86.87572479 -13.87241936]
[88.71904755 1.01388836]
[91.92804718 15.66661358]
[96.47533417 29.96074295]
[101.02262878 44.25487137]
[105.56991577 58.54900360]
[110.11721039 72.84313202]
[116.82774353 59.42789078]
[124.80878448 46.72737885]
[133.98495483 34.86155701]
[144.26960754 23.94248390]
[155.56558228 14.07329082]
[167.76618958 5.34718943]
[180.75622559 -2.15340757]
[194.41299438 -8.35765934]
[208.60751343 -13.20696831]
[223.20570374 -16.65553474]
[238.06971741 -18.67078972]
[253.05915833 -19.23369789]
[268.03244019 -18.33894348]
[282.84817505 -15.99497890]
[297.36642456 -12.22393990]
[311.45004272 -7.06144238]
[324.96603394 -0.55624545]
[337.78677368 7.23021221]
[349.79113770 16.22439194]
[360.86575317 26.34134293]
[370.90603638 37.48551941]
[379.81716919 49.55166626]
[387.51495361 62.42582321]
[393.92672729 75.98639679]
[398.99191284 90.10531616]
[402.66268921 104.64923859]
[404.90435791 119.48078918]
[405.69573975 134.45989990]
[405.02941895 149.44508362]
[402.91162109 164.29483032]
[399.36239624 178.86888123]
[394.41525269 193.02960205]
[388.11691284 206.64321899]
[380.52685547 219.58119202]
[371.71673584 231.72129822]
[361.76983643 242.94889832]
[350.78005981 253.15794373]
[338.85119629 262.25201416]
[326.09591675 270.14523315]
[312.63467407 276.76303101]
[298.59463501 282.04290771]
[284.10836792 285.93499756]
[269.31271362 288.40255737]
[254.34742737 289.42227173]
[239.35382080 288.98449707]
[224.47349548 287.09338379]
[209.84703064 283.76681519]
[195.61253357 279.03616333]
[181.90444946 272.94610596]
[168.85224915 265.55422974]
[156.57920837 256.93026733]
[145.20124817 247.15571594]
[134.82582092 236.32287598]
[125.55091095 224.53405762]
[117.46413422 211.90060425]
[110.64185333 198.54185486]
[105.14849854 184.58393860]
[101.03596497 170.15872192]
[98.34309387 155.40242004]
[97.09530640 140.45440674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 42]
[2 41]
[3 40]
[4 39]
[6 37]
[7 36]
[9 34]
[10 33]
[46 92]
[47 91]
[48 90]
[49 89]
[50 88]
[60 87]
[61 86]
[62 85]
[63 84]
[64 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
