%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAACACACUAACCAUAUACCAAUGAUGGCGCGAUGUAACACGAGAAAGCACAUACCAAGGxxxxxxxxxxUACACCCUAGUAGGCUCCCUUCCCCUACUCAUCGCACUAAUUUACACUCACAACACCCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[97.89424896 445.20043945]
[97.89424896 430.20043945]
[97.89424896 415.20043945]
[97.89424896 400.20043945]
[97.89424896 385.20043945]
[97.89424896 370.20043945]
[97.89424896 355.20043945]
[97.89424896 340.20043945]
[97.89424896 325.20043945]
[97.89424896 310.20043945]
[82.45712280 307.25650024]
[67.87487793 301.38531494]
[54.69711304 292.80627441]
[43.42082977 281.84088135]
[34.47172928 268.90066528]
[28.18811226 254.47178650]
[24.80810928 239.09671021]
[24.46064949 223.35383606]
[27.16054344 207.83575439]
[32.80786133 193.12695312]
[41.19162750 179.78172302]
[51.99771118 168.30339050]
[64.82058716 159.12519836]
[79.17855072 152.59408569]
[94.53182220 148.95748901]
[93.90784454 133.97047424]
[83.15391541 130.12168884]
[74.24510956 122.97373962]
[68.15719604 113.30950165]
[53.39113998 115.94836426]
[38.62508392 118.58722687]
[26.44259644 129.56535339]
[10.92965794 124.24738312]
[8.04465008 108.10399628]
[20.75542068 97.74212646]
[35.98622131 103.82117462]
[50.75227737 101.18231201]
[65.51833344 98.54344940]
[74.48078918 76.76474762]
[95.32624054 65.80551147]
[96.57311249 50.85742569]
[97.81999207 35.90933990]
[99.06686401 20.96125031]
[100.31373596 6.01316404]
[101.56061554 -8.93492317]
[88.38694763 -14.65283108]
[77.64558411 -24.15262794]
[70.38229370 -36.49166107]
[67.29872131 -50.45174026]
[68.68462372 -64.65939331]
[74.39069366 -77.72100830]
[83.84452057 -88.35951233]
[96.10798645 -95.53926849]
[109.97034454 -98.56684113]
[111.52792358 -113.48575592]
[113.08550262 -128.40466309]
[114.17681885 -143.36491394]
[114.80079651 -158.35192871]
[115.42477417 -173.33894348]
[112.64149475 -182.10850525]
[116.22084045 -188.63031006]
[113.62060547 -197.45588684]
[117.33485413 -203.90180969]
[118.58173370 -218.84989929]
[119.82860565 -233.79798889]
[112.09071350 -244.16999817]
[113.47665405 -256.63186646]
[122.69485474 -264.52694702]
[124.25244141 -279.44586182]
[125.81002045 -294.36474609]
[112.28966522 -301.26144409]
[102.17659760 -312.57916260]
[96.83852386 -326.78723145]
[96.99739075 -341.96417236]
[102.63169098 -356.05740356]
[112.97944641 -367.16091919]
[126.64120483 -373.77310181]
[141.76931763 -374.99966431]
[156.31784058 -370.67477417]
[168.31921387 -361.38327026]
[176.15032959 -348.38180542]
[178.75210571 -333.42871094]
[175.77267456 -318.54626465]
[167.61497498 -305.74719238]
[155.38226318 -296.76245117]
[140.72892761 -292.80718994]
[139.17135620 -277.88827515]
[137.61376953 -262.96936035]
[145.63041687 -247.38945007]
[134.77668762 -232.55110168]
[133.52981567 -217.60302734]
[132.28294373 -202.65493774]
[131.19163513 -187.69468689]
[130.41178894 -172.71496582]
[129.78781128 -157.72795105]
[129.16383362 -142.74093628]
[131.32839966 -139.88049316]
[132.17915344 -135.80889893]
[131.15293884 -131.17216492]
[128.00442505 -126.84708405]
[126.44683838 -111.92817688]
[124.88925934 -97.00926208]
[139.10673523 -90.31455231]
[150.19932556 -79.14530182]
[156.81845093 -64.83345795]
[158.15051270 -49.09457779]
[154.01687622 -33.82217026]
[144.89758301 -20.85991478]
[131.87571716 -11.77907372]
[116.50869751 -7.68804836]
[115.26182556 7.26003885]
[114.01495361 22.20812607]
[112.76807404 37.15621185]
[111.52120209 52.10429764]
[110.27433014 67.05238342]
[120.18225861 72.00386810]
[128.01141357 79.83895111]
[132.95538330 89.75062561]
[134.50494385 100.71798706]
[132.50050354 111.61139679]
[127.14849091 121.30883026]
[119.00019073 128.81144714]
[108.89485931 133.34649658]
[109.51883698 148.33351135]
[123.70156097 150.33695984]
[137.30937195 154.79653931]
[149.92053223 161.57270813]
[161.14440918 170.45413208]
[170.63357544 181.16430664]
[178.09460449 193.37014771]
[183.29713440 206.69232178]
[186.08090210 220.71711731]
[186.36082458 235.00917053]
[184.12945557 249.12510681]
[179.45726013 262.62722778]
[172.49038696 275.09701538]
[163.44604492 286.14831543]
[152.60580444 295.43905640]
[140.30677795 302.68194580]
[126.93112183 307.65344238]
[112.89424896 310.20043945]
[112.89424896 325.20043945]
[112.89424896 340.20043945]
[112.89424896 355.20043945]
[112.89424896 370.20043945]
[112.89424896 385.20043945]
[112.89424896 400.20043945]
[112.89424896 415.20043945]
[112.89424896 430.20043945]
[112.89424896 445.20043945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[25 124]
[26 123]
[29 38]
[30 37]
[31 36]
[40 115]
[41 114]
[42 113]
[43 112]
[44 111]
[45 110]
[54 102]
[55 101]
[56 100]
[57 96]
[58 95]
[59 94]
[61 93]
[63 92]
[64 91]
[65 90]
[68 88]
[69 87]
[70 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
