%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACUAAUCUCAUCAAUACAACCCCCGCCCAUCCUACCCAGCACACACACACCGCUGCUAACxxxxxxxxxxAAAGACGCCCUCGGCUUACUUCUCUUCCUUCUCUCCUUAAUGACAUUAACACUAUUCUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-8.84416866 213.66632080]
[-19.72299385 223.99353027]
[-30.60181808 234.32072449]
[-35.28348541 249.43339539]
[-49.84098053 252.58435059]
[-60.71980667 262.91156006]
[-71.59863281 273.23876953]
[-82.47745514 283.56597900]
[-93.35628510 293.89318848]
[-86.45190430 307.32843018]
[-83.61370850 322.16491699]
[-85.07176971 337.19989014]
[-90.70789337 351.21456909]
[-100.06519318 363.07281494]
[-112.38509369 371.81332397]
[-126.66889954 376.72753906]
[-141.75866699 377.41714478]
[-156.43115234 373.82617188]
[-169.49690247 366.24575806]
[-179.89675903 355.29040527]
[-186.78762817 341.84820557]
[-189.61091614 327.00888062]
[-188.13775635 311.97537231]
[-182.48754883 297.96640015]
[-173.11834717 286.11755371]
[-160.78967285 277.38943481]
[-146.50094604 272.48953247]
[-131.41049194 271.81512451]
[-116.74162292 275.42080688]
[-103.68348694 283.01434326]
[-92.80466461 272.68713379]
[-81.92583466 262.35992432]
[-71.04701233 252.03273010]
[-60.16818619 241.70553589]
[-56.26464844 227.33154297]
[-40.92902374 223.44190979]
[-30.05019951 213.11470032]
[-19.17137337 202.78749084]
[-33.87308884 182.73501587]
[-45.23302460 160.61727905]
[-52.96761703 136.98638916]
[-56.88379288 112.43224335]
[-56.88379288 87.56775665]
[-52.96761703 63.01361084]
[-45.23302460 39.38272858]
[-33.87308884 17.26498985]
[-19.17137337 -2.78749514]
[-30.05019951 -13.11470032]
[-40.92902374 -23.44190407]
[-51.80784988 -33.76911163]
[-66.27631378 -28.77689934]
[-81.40574646 -31.09181213]
[-93.71952057 -40.18189621]
[-100.38801575 -53.95831680]
[-99.87886047 -69.25535583]
[-92.30905914 -82.55786133]
[-79.41809082 -90.80901337]
[-64.16821289 -92.11277008]
[-50.06373215 -86.16952515]
[-40.34575272 -74.34499359]
[-37.24739456 -59.35637665]
[-41.48064423 -44.64793396]
[-30.60181808 -34.32072830]
[-19.72299385 -23.99352455]
[-8.84416866 -13.66632080]
[0.14758261 -21.64119339]
[9.72170734 -28.90661430]
[19.82236671 -35.42020798]
[30.39064980 -41.14398193]
[41.36491776 -46.04455566]
[52.68116760 -50.09334946]
[64.27339172 -53.26674652]
[76.07398987 -55.54623795]
[88.01413727 -56.91852951]
[100.02418518 -57.37561798]
[112.03409576 -56.91483688]
[123.97381592 -55.53887558]
[135.77371216 -53.25575638]
[147.36495972 -50.07879639]
[158.67996216 -46.02652740]
[169.65272522 -41.12258148]
[180.21925354 -35.39555740]
[188.47154236 -47.92152023]
[196.72383118 -60.44748306]
[197.85488892 -76.22820282]
[211.31797791 -82.59960175]
[219.57026672 -95.12556458]
[219.99572754 -111.51918793]
[234.53297424 -119.10871124]
[248.22731018 -110.08667755]
[246.99118042 -93.73418427]
[232.09622192 -86.87326813]
[223.84393311 -74.34731293]
[223.30313110 -59.46252441]
[209.24978638 -52.19519424]
[200.99749756 -39.66923141]
[192.74520874 -27.14326859]
[200.79940796 -20.85762405]
[208.42878723 -14.06263065]
[215.60119629 -6.78692865]
[222.28642273 0.93882060]
[228.45626831 9.08205700]
[234.08474731 17.60846138]
[239.14813232 26.48209953]
[243.62509155 35.66557693]
[247.49674988 45.12018585]
[250.74679565 54.80607986]
[253.36152649 64.68244171]
[255.32991028 74.70764923]
[256.64367676 84.83944702]
[257.29727173 95.03514099]
[257.28796387 105.25176239]
[256.61575317 115.44624329]
[255.28352356 125.57563019]
[253.29684448 135.59722900]
[250.66410828 145.46881104]
[247.39640808 155.14875793]
[261.17877197 161.06872559]
[274.96115112 166.98869324]
[288.74356079 172.90864563]
[302.52593994 178.82861328]
[319.46560669 179.52421570]
[323.48654175 195.99444580]
[308.77310181 204.41766357]
[296.60595703 192.61099243]
[282.82357788 186.69102478]
[269.04119873 180.77107239]
[255.25881958 174.85110474]
[241.47644043 168.93113708]
[235.37196350 180.25904846]
[228.36244202 191.05036926]
[220.49472046 201.23294067]
[211.82139587 210.73870850]
[202.40046692 219.50410461]
[192.29492188 227.47052002]
[181.57231140 234.58470154]
[170.30433655 240.79910278]
[158.56631470 246.07214355]
[146.43675232 250.36859131]
[133.99670410 253.65971375]
[121.32938385 255.92352295]
[108.51944733 257.14483643]
[95.65255737 257.31555176]
[82.81473541 256.43450928]
[70.09181213 254.50755310]
[57.56884003 251.54762268]
[45.32955170 247.57447815]
[33.45577621 242.61470032]
[22.02689743 236.70143127]
[11.11932659 229.87420654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 38]
[2 37]
[3 36]
[5 34]
[6 33]
[7 32]
[8 31]
[9 30]
[47 65]
[48 64]
[49 63]
[50 62]
[82 97]
[83 96]
[84 95]
[86 93]
[87 92]
[117 129]
[118 128]
[119 127]
[120 126]
[121 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
