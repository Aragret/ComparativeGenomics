%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACUCCCACCCUGGAGCCUCCGUAGACCUAACCAUCUUCUCCUUACACCUAGCAGGUGUCUxxxxxxxxxxACCUUUUCCUCCGACCCCCUAACAACCCCCCUCCUAAUACUAACUACCUGACUCCUACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[28.67119217 297.69387817]
[19.21335793 294.02108765]
[9.94379807 289.89614868]
[3.03679991 303.21130371]
[-3.87019873 316.52645874]
[-3.35649276 332.33932495]
[-16.08519936 340.07424927]
[-22.99219894 353.38940430]
[-29.89919662 366.70455933]
[-28.62007332 383.05374146]
[-42.29063416 392.11175537]
[-56.84778214 384.56051636]
[-57.31636810 368.16806030]
[-43.21435165 359.79757690]
[-36.30735397 346.48242188]
[-29.40035629 333.16726685]
[-30.40809631 318.30676270]
[-17.18535423 309.61944580]
[-10.27835560 296.30429077]
[-3.37135720 282.98913574]
[-47.83636093 249.38230896]
[-81.90392303 205.26930237]
[-95.14650726 212.31443787]
[-108.38909149 219.35957336]
[-119.53267670 232.13676453]
[-134.89540100 224.96575928]
[-132.25744629 208.21829224]
[-115.43422699 206.11697388]
[-102.19164276 199.07185364]
[-88.94905853 192.02671814]
[-93.94221497 180.97578430]
[-98.28969574 169.65527344]
[-101.97702789 158.10287476]
[-104.99192047 146.35702515]
[-107.32435608 134.45683289]
[-108.96655273 122.44194031]
[-109.91305542 110.35233307]
[-110.16070557 98.22825623]
[-109.70868683 86.11007690]
[-108.55849457 74.03814697]
[-106.71395874 62.05264282]
[-104.18122864 50.19347763]
[-100.96872711 38.50012970]
[-97.08715057 27.01152992]
[-92.54943085 15.76592445]
[-87.37066650 4.80075502]
[-81.56809998 -5.84747362]
[-75.16104889 -16.14331055]
[-68.17084503 -26.05248070]
[-60.62076569 -35.54199219]
[-52.53594208 -44.58024979]
[-43.94328690 -53.13716888]
[-34.87141037 -61.18425751]
[-25.35051727 -68.69472504]
[-33.86160660 -81.04629517]
[-42.37269974 -93.39787292]
[-50.88378906 -105.74944305]
[-59.39487839 -118.10101318]
[-67.90596771 -130.45259094]
[-81.87197113 -140.06440735]
[-76.50196838 -156.14543152]
[-59.56282806 -155.43695068]
[-55.55439758 -138.96368408]
[-47.04330444 -126.61210632]
[-38.53221512 -114.26052856]
[-30.02112579 -101.90895844]
[-21.51003456 -89.55738831]
[-12.99894524 -77.20581818]
[-4.31510115 -82.45279694]
[4.61184931 -87.27456665]
[13.76110172 -91.65989685]
[23.11133575 -95.59855652]
[32.64075851 -99.08137512]
[42.32715988 -102.10023499]
[52.14797211 -104.64810181]
[62.08030319 -106.71903229]
[72.10100555 -108.30820465]
[82.18672180 -109.41191101]
[92.31395721 -110.02758789]
[102.45910645 -110.15378571]
[112.59851837 -109.79022980]
[122.70857239 -108.93775177]
[132.76570129 -107.59834290]
[142.74647522 -105.77512360]
[152.62762451 -103.47234344]
[162.38613892 -100.69537354]
[171.99923706 -97.45068359]
[181.44456482 -93.74582672]
[190.70007324 -89.58944702]
[199.74420166 -84.99123383]
[208.55587769 -79.96189117]
[217.11456299 -74.51315308]
[225.40031433 -68.65770721]
[233.39382935 -62.40920258]
[241.07646179 -55.78220367]
[248.43031311 -48.79215622]
[255.43824768 -41.45534515]
[262.08392334 -33.78887177]
[268.35186768 -25.81060219]
[274.22747803 -17.53913307]
[279.69705200 -8.99373627]
[284.74783325 -0.19433007]
[289.36804199 8.83858013]
[293.54693604 18.08394241]
[297.27478027 27.52020836]
[300.54287720 37.12539291]
[303.34359741 46.87710190]
[305.67044067 56.75261688]
[307.51794434 66.72891998]
[308.88183594 76.78276062]
[309.75894165 86.89070892]
[310.14718628 97.02921295]
[310.04568481 107.17463684]
[309.45465088 117.30333710]
[308.37551880 127.39171600]
[306.81076050 137.41625977]
[304.76400757 147.35360718]
[302.24005127 157.18058777]
[299.24478149 166.87431335]
[295.78518677 176.41218567]
[291.86929321 185.77198792]
[287.50625610 194.93188477]
[282.70623779 203.87054443]
[277.48040771 212.56713867]
[271.84097290 221.00140381]
[265.80105591 229.15365601]
[259.37475586 237.00492859]
[252.57701111 244.53691101]
[245.42369080 251.73204041]
[237.93145752 258.57354736]
[230.11778259 265.04553223]
[222.00086975 271.13284302]
[213.59962463 276.82135010]
[204.93362427 282.09777832]
[196.02308655 286.94979858]
[186.88877869 291.36614990]
[177.55195618 295.33651733]
[168.03440857 298.85165405]
[158.35830688 301.90338135]
[148.54620361 304.48455811]
[138.62095642 306.58917236]
[128.60569763 308.21234131]
[118.52378845 309.35025024]
[108.39869690 310.00030518]
[98.25403595 310.16091919]
[88.11344910 309.83175659]
[78.00055695 309.01361084]
[67.93893433 307.70834351]
[57.95203781 305.91900635]
[48.06312943 303.64974976]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 20]
[4 19]
[5 18]
[7 16]
[8 15]
[9 14]
[22 30]
[23 29]
[24 28]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[59 63]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
