%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAACAAUGACUAAUCAAACUAACCUCAAAACAAAUGAUAACCAUACACAACACUAAAGGAxxxxxxxxxxAACCACGACCAAUGAUAUGAAAAACCAUCGUUGUAUUUCAACUACAAGAACACCAAUGACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[90.53975677 271.30621338]
[90.53975677 256.30621338]
[90.53975677 241.30622864]
[90.53975677 226.30622864]
[90.53975677 211.30622864]
[90.53975677 196.30622864]
[90.53975677 181.30622864]
[90.53975677 166.30622864]
[90.53975677 151.30622864]
[90.53975677 136.30622864]
[72.75186920 119.45324707]
[70.64382935 97.76850128]
[81.79459381 82.28483582]
[74.61209106 69.11624908]
[67.42958069 55.94766617]
[60.24707031 42.77908325]
[53.06456375 29.61050224]
[45.88205338 16.44191933]
[38.69954300 3.27333736]
[25.05650330 9.52251148]
[11.01077461 14.80476665]
[-3.36921239 19.09436989]
[-18.01339912 22.37042236]
[-32.85044098 24.61696434]
[-47.80804825 25.82304764]
[-62.81335449 25.98279762]
[-77.79325104 25.09543800]
[-92.67475891 23.16528893]
[-107.38537598 20.20175743]
[-121.85343170 16.21927834]
[-136.00843811 11.23725605]
[-149.78143311 5.27996159]
[-163.10531616 -1.62358105]
[-175.91516113 -9.43973827]
[-188.14859009 -18.13043022]
[-199.74597168 -27.65331459]
[-210.65083313 -37.96199799]
[-220.81001282 -49.00625992]
[-230.17404175 -60.73228836]
[-238.69728088 -73.08295441]
[-246.33822632 -85.99809265]
[-253.05963135 -99.41477966]
[-258.82876587 -113.26763916]
[-263.61749268 -127.48919678]
[-267.40252686 -142.01016235]
[-270.16540527 -156.75978088]
[-271.89266968 -171.66619873]
[-272.57589722 -186.65678406]
[-272.21176147 -201.65852356]
[-270.80203247 -216.59832764]
[-268.35360718 -231.40338135]
[-264.87838745 -246.00158691]
[-260.39328003 -260.32180786]
[-254.92019653 -274.29428101]
[-248.48576355 -287.85092163]
[-241.12133789 -300.92572021]
[-232.86279297 -313.45492554]
[-223.75036621 -325.37753296]
[-213.82844543 -336.63543701]
[-203.14540100 -347.17379761]
[-191.75323486 -356.94125366]
[-179.70748901 -365.89025879]
[-167.06683350 -373.97720337]
[-153.89283752 -381.16265869]
[-140.24971008 -387.41162109]
[-126.20391083 -392.69369507]
[-111.82386017 -396.98309326]
[-97.17962646 -400.25891113]
[-82.34255219 -402.50524902]
[-67.38492584 -403.71112061]
[-52.37961578 -403.87066650]
[-37.39973450 -402.98309326]
[-22.51825333 -401.05273438]
[-7.80768013 -398.08898926]
[6.66031647 -394.10629272]
[20.81525040 -389.12405396]
[34.58816147 -383.16656494]
[47.91194153 -376.26284790]
[60.72168732 -368.44650269]
[72.95498657 -359.75564575]
[84.55223083 -350.23257446]
[95.45693970 -339.92373657]
[105.61596680 -328.87933350]
[114.97982025 -317.15316772]
[123.50289154 -304.80239868]
[131.14364624 -291.88714600]
[137.86485291 -278.47036743]
[143.63378906 -264.61740112]
[148.42233276 -250.39578247]
[152.20715332 -235.87477112]
[154.96981812 -221.12510681]
[156.69686890 -206.21867371]
[157.37986755 -191.22805786]
[157.01551819 -176.22633362]
[155.60559082 -161.28656006]
[153.15693665 -146.48153687]
[149.68150330 -131.88337708]
[145.19621277 -117.56322479]
[139.72291565 -103.59082794]
[133.28828430 -90.03427124]
[125.92367554 -76.95959473]
[117.66494751 -64.43050385]
[108.55235291 -52.50802994]
[98.63028717 -41.25026703]
[87.94707489 -30.71205711]
[76.55478668 -20.94474602]
[64.50890350 -11.99591827]
[51.86812592 -3.90917134]
[59.05063629 9.25941086]
[66.23314667 22.42799377]
[73.41565704 35.59657669]
[80.59815979 48.76515961]
[87.78067017 61.93374252]
[94.96318054 75.10232544]
[112.74555206 73.46105957]
[129.76206970 84.66674042]
[136.96742249 106.40689850]
[150.62365723 112.61230469]
[164.27989197 118.81771088]
[177.70993042 111.04506683]
[193.14016724 112.68432617]
[204.63739014 123.10514832]
[207.78067017 138.30052185]
[201.36134338 152.42752075]
[187.84779358 160.05401611]
[172.43623352 158.24746704]
[161.05274963 147.70252991]
[158.07449341 132.47395325]
[144.41824341 126.26854706]
[130.76200867 120.06314087]
[124.45644379 124.12390900]
[133.46589661 136.11682129]
[142.47534180 148.10972595]
[154.98541260 156.38609314]
[154.89294434 171.38580322]
[142.28176880 179.50729370]
[128.58758545 173.38606262]
[126.22808075 158.57293701]
[119.03669739 145.40919495]
[111.84531403 132.24545288]
[105.53975677 136.30622864]
[105.53975677 151.30622864]
[105.53975677 166.30622864]
[105.53975677 181.30622864]
[105.53975677 196.30622864]
[105.53975677 211.30622864]
[105.53975677 226.30622864]
[105.53975677 241.30622864]
[105.53975677 256.30621338]
[105.53975677 271.30621338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[13 114]
[14 113]
[15 112]
[16 111]
[17 110]
[18 109]
[19 108]
[117 130]
[118 129]
[119 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
