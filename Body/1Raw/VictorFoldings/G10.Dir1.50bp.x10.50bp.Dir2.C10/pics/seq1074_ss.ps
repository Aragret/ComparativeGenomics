%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUAGCCACACCCCCACGGGAAACAGCAGUGAUUAACCUUUAGCAAUAAACGAAAGUUUAxxxxxxxxxxAAACAACAAAGCAUAAUAUUUCGCCCACUAAGCCAAUCACUUUAUUGACUCCUAGCCGCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[44.13534164 207.56358337]
[36.41125488 220.42198181]
[28.68717003 233.28039551]
[20.96308517 246.13879395]
[13.23900127 258.99719238]
[12.76537514 274.81130981]
[-0.42101443 281.73724365]
[-0.89463991 297.55136108]
[-14.08102989 304.47726440]
[-21.80511475 317.33566284]
[-29.52919960 330.19406128]
[-32.50230408 346.88528442]
[-49.36426544 348.64898682]
[-55.72687531 332.93423462]
[-42.38760376 322.47000122]
[-34.66351700 309.61157227]
[-26.93943214 296.75317383]
[-27.01828575 281.85879517]
[-13.27941704 274.01315308]
[-13.35826969 259.11874390]
[0.38059872 251.27311707]
[8.10468388 238.41470337]
[15.82876873 225.55630493]
[23.55285263 212.69790649]
[31.27693939 199.83949280]
[20.21788406 191.24472046]
[10.22419834 181.43150330]
[1.42933023 170.53089905]
[-6.04927731 158.68846130]
[-12.11176014 146.06233215]
[-16.67716026 132.82110596]
[-19.68451881 119.14160919]
[-21.09367180 105.20649719]
[-20.88580513 91.20186615]
[-19.06369400 77.31472015]
[-15.65166855 63.73050308]
[-10.69529343 50.63060760]
[-4.26075220 38.18996429]
[3.56603169 26.57469940]
[12.68054390 15.93991756]
[22.96107292 6.42762899]
[34.27033997 -1.83514404]
[46.45732498 -8.73806477]
[59.35928726 -14.18895531]
[72.80394745 -18.11502838]
[86.61177063 -20.46385384]
[100.59837341 -21.20407104]
[114.57698059 -20.32579422]
[128.36093140 -17.84074974]
[141.76617432 -13.78212261]
[154.61369324 -8.20410919]
[166.73193359 -1.18119681]
[175.74946594 -13.16802979]
[184.64181519 -25.24801826]
[193.40802002 -37.41985321]
[202.17422485 -49.59169006]
[210.94042969 -61.76352692]
[219.70663452 -73.93536377]
[228.47283936 -86.10720062]
[237.23904419 -98.27903748]
[243.72721863 -111.80323029]
[247.73495483 -126.25791931]
[251.74269104 -140.71260071]
[255.75044250 -155.16729736]
[259.75817871 -169.62197876]
[261.62579346 -184.50526428]
[261.31372070 -199.50201416]
[261.00167847 -214.49876404]
[260.68963623 -229.49552917]
[246.96388245 -236.26773071]
[237.96693420 -248.64970398]
[235.76618958 -263.79617310]
[240.86738586 -278.22656250]
[252.09828186 -288.62490845]
[266.87811279 -292.60171509]
[281.81057739 -289.24316406]
[293.46432495 -279.32101440]
[299.16137695 -265.11532593]
[297.59262085 -249.89041138]
[289.11853027 -237.14489746]
[275.68637085 -229.80758667]
[275.99844360 -214.81082153]
[276.31048584 -199.81407166]
[276.62255859 -184.81732178]
[284.68432617 -197.46673584]
[296.91156006 -206.15548706]
[311.50888062 -209.60778809]
[326.33288574 -207.31669617]
[339.20687866 -199.61863708]
[348.24053955 -187.64395142]
[352.10739136 -173.15093994]
[350.23965454 -158.26768494]
[342.91156006 -145.17955017]
[331.19915771 -135.80833435]
[316.82223511 -131.53007507]
[301.89178467 -132.97294617]
[288.60015869 -139.92509460]
[278.89898682 -151.36570740]
[274.21286011 -165.61424255]
[270.20513916 -151.15956116]
[266.19738770 -136.70486450]
[262.18963623 -122.25017548]
[258.18191528 -107.79548645]
[269.24908447 -117.92057037]
[282.96749878 -123.98732758]
[297.90435791 -125.36215210]
[312.49969482 -121.90146637]
[325.22915649 -113.96669006]
[334.76330566 -102.38653564]
[340.10638428 -88.37042236]
[340.70040894 -73.38219452]
[336.48327637 -58.98719788]
[327.89544678 -46.68884659]
[315.83386230 -37.77157211]
[301.55816650 -33.16669083]
[286.55935669 -33.35512924]
[272.40386963 -38.31721115]
[260.57012939 -47.53469467]
[252.29399109 -60.04491806]
[248.43984985 -74.54132080]
[249.41088867 -89.51283264]
[240.64468384 -77.34099579]
[231.87847900 -65.16915894]
[223.11227417 -52.99732208]
[214.34605408 -40.82548523]
[205.57984924 -28.65364647]
[196.81364441 -16.48180962]
[195.44789124 -9.16878510]
[187.73629761 -4.15049982]
[178.71876526 7.83633280]
[190.20008850 19.03871346]
[200.10151672 31.65915680]
[208.24964905 45.47661591]
[214.50173950 60.24906540]
[218.74829102 75.71777344]
[220.91494751 91.61178589]
[220.96371460 107.65272522]
[218.89376831 123.55961609]
[214.74136353 139.05386353]
[208.57922363 153.86405945]
[200.51527405 167.73081970]
[190.69078064 180.41123962]
[179.27780151 191.68324280]
[166.47622681 201.34936523]
[152.51031494 209.24034119]
[137.62467957 215.21792603]
[122.08001709 219.17742920]
[106.14862061 221.04948425]
[90.10952759 220.80134583]
[74.24366760 218.43731689]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[3 23]
[4 22]
[5 21]
[7 19]
[9 17]
[10 16]
[11 15]
[52 130]
[53 129]
[54 127]
[55 126]
[56 125]
[57 124]
[58 123]
[59 122]
[60 121]
[61 103]
[62 102]
[63 101]
[64 100]
[65 99]
[66 84]
[67 83]
[68 82]
[69 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
