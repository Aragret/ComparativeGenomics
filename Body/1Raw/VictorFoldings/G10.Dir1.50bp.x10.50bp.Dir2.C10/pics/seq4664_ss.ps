%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGGCCCAACCCGUCAUCUACUCUACCAUCUUUGCAGGCACACUCAUCACAGCGCUAAGCUCxxxxxxxxxxGCAAAUCAGCCCAAUUAGGUCUCCACCCCUGACUCCCCUCAGCCAUAGAAGGCCCCACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[168.17678833 453.84649658]
[168.17678833 438.84649658]
[168.17678833 423.84649658]
[168.17678833 408.84649658]
[168.17678833 393.84649658]
[168.17678833 378.84649658]
[168.17678833 363.84649658]
[168.17678833 348.84649658]
[168.17678833 333.84649658]
[168.17678833 318.84649658]
[165.69166565 304.05377197]
[160.79011536 289.87722778]
[155.88856506 275.70068359]
[140.17382812 275.65084839]
[125.39704132 270.22454834]
[113.34375763 260.05795288]
[105.47705078 246.36116028]
[102.75999451 230.77427673]
[105.53776550 215.17089844]
[113.49391937 201.43298340]
[125.68632507 191.22383118]
[120.49091339 177.15229797]
[115.29549408 163.08078003]
[110.10008240 149.00926208]
[94.50274658 149.73629761]
[79.44067383 145.62054443]
[66.38045502 137.06272888]
[56.59375763 124.89614105]
[51.03350067 110.30541992]
[50.24108887 94.71127319]
[54.29368210 79.63208008]
[62.79667282 66.53610229]
[74.92213440 56.69849396]
[69.43510437 42.73810196]
[63.94807434 28.77771187]
[50.35066605 26.30594444]
[39.84434891 17.49513245]
[35.11708069 4.73960733]
[37.30865479 -8.57611561]
[45.73800659 -18.97525024]
[40.54259109 -33.04676819]
[35.34717560 -47.11828995]
[30.43866920 -51.70240402]
[28.86829185 -57.24904251]
[30.24168205 -61.88469696]
[25.63611794 -76.16015625]
[21.03055382 -90.43562317]
[6.21009731 -87.95128632]
[-8.81414700 -87.65139008]
[-23.72193718 -89.54233551]
[-38.19551086 -93.58380890]
[-51.92636490 -99.68966675]
[-64.62182617 -107.72976685]
[-76.01128387 -117.53273010]
[-85.85198212 -128.88960266]
[-93.93415070 -141.55831909]
[-100.08553314 -155.26882935]
[-104.17500305 -169.72892761]
[-106.11539459 -184.63035583]
[-105.86535645 -199.65551758]
[-103.43020630 -214.48413086]
[-98.86184692 -228.80014038]
[-92.25766754 -242.29838562]
[-83.75843048 -254.69114685]
[-73.54529572 -265.71429443]
[-61.83595657 -275.13284302]
[-48.88000107 -282.74606323]
[-34.95358276 -288.39166260]
[-20.35354614 -291.94931030]
[-5.39109230 -293.34317017]
[9.61485386 -292.54351807]
[24.34444046 -289.56741333]
[38.48370361 -284.47830200]
[51.73126602 -277.38464355]
[63.80475235 -268.43765259]
[74.44681549 -257.82803345]
[83.43062592 -245.78189087]
[90.56468964 -232.55604553]
[95.69693756 -218.43238831]
[98.71797943 -203.71195984]
[99.56343079 -188.70851135]
[98.21525574 -173.74188232]
[94.70219421 -159.13105774]
[89.09913635 -145.18746948]
[81.52550507 -132.20832825]
[72.14273071 -120.47029877]
[61.15081024 -110.22356415]
[48.78403854 -101.68653870]
[35.30601501 -95.04118347]
[39.91157913 -80.76572418]
[44.51714325 -66.49026489]
[49.41869354 -52.31370544]
[54.61410904 -38.24218369]
[59.80952454 -24.17066574]
[75.71916962 -20.24785995]
[86.27940369 -7.50237131]
[87.19449615 9.19026661]
[77.90846252 23.29068184]
[83.39549255 37.25107193]
[88.88253021 51.21146011]
[103.10568237 50.05728912]
[117.07626343 52.96468353]
[129.65812683 59.69720840]
[139.82806396 69.70733643]
[146.75898743 82.18100739]
[149.88726807 96.10379791]
[148.95848083 110.34344482]
[144.04817200 123.74191284]
[135.55566406 135.20957947]
[124.17160034 143.81384277]
[129.36701965 157.88537598]
[134.56243896 171.95689392]
[139.75784302 186.02841187]
[154.11351013 185.63487244]
[167.86563110 189.69715881]
[179.66780090 197.80371094]
[188.36880493 209.14762878]
[193.12493896 222.60710144]
[193.48179626 236.85623169]
[189.41763306 250.49569702]
[181.34420776 262.19021606]
[170.06512451 270.79913330]
[174.96667480 284.97567749]
[179.86822510 299.15222168]
[183.34431458 284.56057739]
[191.52099609 271.98510742]
[203.44754028 262.88800049]
[217.73728943 258.32696533]
[232.72877502 258.83230591]
[246.67895508 264.34524536]
[257.96585083 274.22485352]
[265.27713013 287.32235718]
[267.76272583 302.11499023]
[265.13366699 316.88278198]
[257.69558716 329.90872192]
[246.31333923 339.67828369]
[232.31030273 345.05557251]
[217.31462097 345.41537476]
[203.06980896 340.71582031]
[191.23211670 331.50338745]
[183.17678833 318.84649658]
[183.17678833 333.84649658]
[183.17678833 348.84649658]
[183.17678833 363.84649658]
[183.17678833 378.84649658]
[183.17678833 393.84649658]
[183.17678833 408.84649658]
[183.17678833 423.84649658]
[183.17678833 438.84649658]
[183.17678833 453.84649658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 124]
[12 123]
[13 122]
[21 113]
[22 112]
[23 111]
[24 110]
[33 100]
[34 99]
[35 98]
[40 94]
[41 93]
[42 92]
[45 91]
[46 90]
[47 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
