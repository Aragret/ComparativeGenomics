%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUUAUUUACCGAGAAAGCUCACAAGAACUGCUAACUCAUGCCCCCAUGUCUAACAACAUGGxxxxxxxxxxAUUAAUCAGUUCUUCAAAUAUCUACUCAUCUUCCUAAUUACCAUACUAAUCUUAGUUACCGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[72.80343628 265.13775635]
[72.80343628 250.13775635]
[72.80343628 235.13775635]
[72.80343628 220.13775635]
[72.80343628 205.13775635]
[72.80343628 190.13775635]
[72.80343628 175.13775635]
[72.80343628 160.13775635]
[72.80343628 145.13775635]
[72.80343628 130.13775635]
[73.08910370 114.63598633]
[79.59059143 103.28517151]
[89.46023560 98.09368896]
[78.69155884 87.65167999]
[67.92288208 77.20967102]
[57.15420151 66.76766205]
[46.38552094 56.32565308]
[39.63920212 58.33702850]
[32.68926620 58.27788925]
[26.14898872 56.20602036]
[20.58010292 52.35449600]
[7.58972120 59.85449600]
[-5.40066004 67.35449219]
[-13.12717533 81.81938171]
[-29.52408981 82.08996582]
[-37.72366333 67.88788605]
[-29.29087830 53.82302856]
[-12.90065956 54.36411285]
[0.08972123 46.86411285]
[13.08010197 39.36411285]
[12.84064293 32.55124664]
[14.63881016 25.97559929]
[18.31177711 20.23261642]
[10.94553757 7.16592121]
[3.57929802 -5.90077400]
[-3.78694153 -18.96746826]
[-11.15318108 -32.03416443]
[-18.51942062 -45.10085678]
[-25.88566017 -58.16755295]
[-33.25189972 -71.23424530]
[-49.30482101 -80.19719696]
[-48.51129150 -97.70190430]
[-56.14426041 -110.61460114]
[-63.77723312 -123.52729797]
[-79.48634338 -119.37995148]
[-95.71446991 -119.79627228]
[-111.16378784 -124.73516846]
[-124.60095215 -133.79420471]
[-134.95553589 -146.24232483]
[-141.40531921 -161.07888794]
[-143.44154358 -177.11408997]
[-140.90905762 -193.06436157]
[-134.01811218 -207.65513611]
[-123.32692719 -219.72268677]
[-131.48359680 -232.31112671]
[-139.64025879 -244.89956665]
[-147.79692078 -257.48800659]
[-155.95358276 -270.07644653]
[-164.11026001 -282.66488647]
[-179.61621094 -285.72113037]
[-188.34999084 -298.89294434]
[-185.12997437 -314.36575317]
[-171.86654663 -322.95974731]
[-156.42866516 -319.57632446]
[-147.97535706 -306.22280884]
[-151.52182007 -290.82156372]
[-143.36514282 -278.23312378]
[-135.20848083 -265.64468384]
[-127.05181885 -253.05624390]
[-118.89514923 -240.46780396]
[-110.73848724 -227.87936401]
[-97.62387085 -232.28674316]
[-83.82380676 -233.40547180]
[-70.15089417 -231.16488647]
[-57.41141129 -225.69224548]
[-46.35775375 -217.30555725]
[-37.64400864 -206.49507141]
[-31.78724670 -193.89465332]
[-29.13684845 -180.24461365]
[-29.85365486 -166.34815979]
[-33.90021896 -153.02424622]
[-41.04273224 -141.05915833]
[-50.86453247 -131.16026306]
[-43.23156357 -118.24757385]
[-35.59859467 -105.33487701]
[-23.93051910 -102.00046539]
[-17.47693634 -91.25232697]
[-20.18520546 -78.60048676]
[-12.81896496 -65.53379059]
[-5.45272541 -52.46709824]
[1.91351390 -39.40040207]
[9.27975368 -26.33370781]
[16.64599228 -13.26701355]
[24.01223183 -0.20031835]
[31.37847137 12.86637688]
[53.88402939 21.12837791]
[56.82752991 45.55697250]
[67.59620667 55.99898529]
[78.36489105 66.44099426]
[89.13356781 76.88300323]
[99.90224457 87.32501221]
[91.93823242 74.61381531]
[88.66121674 59.97615051]
[90.44520569 45.08261871]
[97.08659363 31.63300705]
[107.82739258 21.16232300]
[121.44176483 14.86558533]
[136.37590027 13.46143818]
[150.92536926 17.11013603]
[163.42964172 25.39525604]
[172.46159363 37.37121582]
[176.99044800 51.67119980]
[176.49928284 66.66315460]
[171.04417419 80.63605499]
[161.24772644 91.99517059]
[148.22798157 99.44408417]
[133.47090149 102.13265228]
[118.65830231 99.75321960]
[132.47187805 105.60001373]
[146.28546143 111.44680023]
[160.09904480 117.29358673]
[174.65046692 111.12661743]
[189.26904297 117.13268280]
[195.28182983 131.74850464]
[189.12153625 146.30274963]
[174.44297791 152.16067505]
[159.95466614 145.84684753]
[154.25225830 131.10716248]
[140.43867493 125.26038361]
[126.62509155 119.41359711]
[112.81150818 113.56680298]
[106.55949402 117.70954132]
[115.87895203 129.46316528]
[125.19841003 141.21679688]
[138.84948730 147.43356323]
[143.16537476 161.79925537]
[135.20072937 174.51005554]
[120.39099121 176.89154053]
[108.84298706 167.31848145]
[108.43822479 152.32249451]
[101.24684143 139.15875244]
[94.05545807 125.99501801]
[87.80343628 130.13775635]
[87.80343628 145.13775635]
[87.80343628 160.13775635]
[87.80343628 175.13775635]
[87.80343628 190.13775635]
[87.80343628 205.13775635]
[87.80343628 220.13775635]
[87.80343628 235.13775635]
[87.80343628 250.13775635]
[87.80343628 265.13775635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[13 101]
[14 100]
[15 99]
[16 98]
[17 97]
[21 30]
[22 29]
[23 28]
[33 95]
[34 94]
[35 93]
[36 92]
[37 91]
[38 90]
[39 89]
[40 88]
[42 85]
[43 84]
[44 83]
[54 71]
[55 70]
[56 69]
[57 68]
[58 67]
[59 66]
[118 131]
[119 130]
[120 129]
[121 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
