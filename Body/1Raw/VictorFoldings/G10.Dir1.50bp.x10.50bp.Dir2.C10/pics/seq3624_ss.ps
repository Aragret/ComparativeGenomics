%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUACCCAACCCCCUGGUCAACCUCAACCUAGGCCUCCUAUUUAUUCUAGCCACCUCUAGCCUxxxxxxxxxxAUUAACACUAUUCUCACCAGACCUCCUAGGCGACCCAGACAAUUAUACCCUAGCCAACCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-40.46720123 206.40858459]
[-52.79848480 214.94903564]
[-65.12976837 223.48950195]
[-77.46105194 232.02995300]
[-89.79233551 240.57041931]
[-100.23434448 251.33909607]
[-108.39101410 263.92752075]
[-116.54767609 276.51596069]
[-124.70434570 289.10440063]
[-132.86100769 301.69284058]
[-141.01766968 314.28128052]
[-139.08566284 330.20758057]
[-150.43504333 341.54650879]
[-166.35954285 339.59979248]
[-174.64326477 325.86080933]
[-168.93162537 310.86892700]
[-153.60610962 306.12463379]
[-145.44944763 293.53619385]
[-137.29278564 280.94775391]
[-129.13612366 268.35931396]
[-120.97945404 255.77085876]
[-112.82278442 243.18241882]
[-121.98513794 231.30508423]
[-131.14665222 219.42877197]
[-145.39335632 224.12257385]
[-159.64004517 228.81637573]
[-164.24601746 243.63409424]
[-176.70205688 252.88754272]
[-192.21858215 253.01860046]
[-204.82916260 243.97686768]
[-209.68476868 229.23905945]
[-204.91831970 214.47218323]
[-192.36262512 205.35440063]
[-176.84559631 205.39167786]
[-164.33384705 214.56968689]
[-150.08714294 209.87588501]
[-135.84045410 205.18208313]
[-123.78545380 205.12287903]
[-113.39659882 208.26562500]
[-105.42794800 213.81373596]
[-100.35218811 220.81306458]
[-98.33279419 228.23913574]
[-86.00151062 219.69866943]
[-73.67022705 211.15821838]
[-61.33894730 202.61775208]
[-49.00765991 194.07730103]
[-62.36320877 168.49822998]
[-71.36524963 141.08250427]
[-75.77239990 112.56521606]
[-75.46649170 83.71101379]
[-70.45572662 55.29356766]
[-60.87446594 28.07485580]
[-46.97961426 2.78470349]
[-29.14373398 -19.89877510]
[-7.84507084 -39.36735916]
[-16.51167870 -51.61031342]
[-25.17828560 -63.85326767]
[-33.84489441 -76.09622192]
[-49.46325684 -78.51329803]
[-58.73043060 -91.31544495]
[-56.14836502 -106.90737915]
[-43.24895477 -116.03868866]
[-27.68518829 -113.29191589]
[-18.69077492 -100.29668427]
[-21.60194016 -84.76283264]
[-12.93533230 -72.51987457]
[-4.26872444 -60.27692032]
[4.39788294 -48.03396606]
[12.06159019 -52.71102142]
[19.95356178 -56.99168015]
[28.05331230 -60.86483383]
[36.33981705 -64.32042694]
[44.79156494 -67.34947968]
[53.38661957 -69.94414520]
[62.10267258 -72.09768677]
[70.91709137 -73.80450439]
[79.80700684 -75.06017303]
[88.74933624 -75.86142731]
[97.72086334 -76.20619965]
[106.69831848 -76.09358978]
[115.65837860 -75.52388763]
[124.57778931 -74.49857330]
[133.43341064 -73.02030945]
[142.20223999 -71.09293365]
[150.86154175 -68.72144318]
[159.38880920 -65.91199493]
[167.76191711 -62.67189026]
[175.95913696 -59.00952911]
[183.95918274 -54.93442535]
[191.74128723 -50.45715332]
[199.28527832 -45.58933640]
[206.57153320 -40.34360886]
[213.58116150 -34.73358917]
[220.29597473 -28.77383423]
[226.69851685 -22.47982025]
[232.77218628 -15.86788082]
[238.50122070 -8.95518017]
[243.87074280 -1.75966156]
[248.86682129 5.69999743]
[253.47647095 13.40443325]
[257.68774414 21.33364868]
[261.48971558 29.46706009]
[264.87246704 37.78355408]
[279.11917114 33.08975220]
[293.36587524 28.39595413]
[306.51751709 17.69688225]
[320.43920898 27.37277412]
[314.99536133 43.42895126]
[298.05966187 42.64264679]
[283.81295776 47.33644485]
[269.56628418 52.03024673]
[272.30169678 63.04132843]
[274.32287598 74.20561218]
[275.62145996 85.47682190]
[276.19204712 96.80823517]
[276.03225708 108.15287781]
[275.14276123 119.46372986]
[273.52725220 130.69389343]
[271.19241333 141.79682922]
[268.14794922 152.72650146]
[264.40649414 163.43760681]
[259.98348999 173.88574219]
[254.89732361 184.02760315]
[249.16906738 193.82115173]
[242.82246399 203.22578430]
[235.88383484 212.20251465]
[228.38191223 220.71414185]
[220.34782410 228.72537231]
[211.81486511 236.20300293]
[202.81838989 243.11602783]
[193.39570618 249.43580627]
[183.58587646 255.13613892]
[173.42956543 260.19338989]
[162.96885681 264.58657837]
[152.24714661 268.29751587]
[141.30883789 271.31082153]
[130.19929504 273.61401367]
[118.96457672 275.19750977]
[107.65123749 276.05474854]
[96.30618286 276.18222046]
[84.97644806 275.57937622]
[73.70898438 274.24868774]
[62.55049896 272.19567871]
[51.54725647 269.42889404]
[40.74486542 265.95977783]
[30.18810081 261.80270386]
[19.92072678 256.97494507]
[9.98530102 251.49644470]
[0.42301145 245.38996887]
[-8.72650433 238.68081665]
[-17.42531967 231.39678955]
[-25.63737679 223.56808472]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 46]
[2 45]
[3 44]
[4 43]
[5 42]
[6 22]
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[24 37]
[25 36]
[26 35]
[55 68]
[56 67]
[57 66]
[58 65]
[103 111]
[104 110]
[105 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
