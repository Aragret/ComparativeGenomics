%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUACUACUAAUCUCAUCAAUACAACCCCCGCCCAUCCUACCCAGCACACACACACCGCUGCxxxxxxxxxxAGUAAUAAACUUCGCCUUAAUUUUAAUAAUCAACACCCUCCUAGCCUUACUACUAAUAAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-31.93588638 223.37631226]
[-38.51716995 215.93870544]
[-50.40954971 225.08044434]
[-62.30192947 234.22218323]
[-68.52756500 248.76699829]
[-83.33355713 250.38929749]
[-95.22593689 259.53103638]
[-107.11831665 268.67276001]
[-119.01069641 277.81451416]
[-130.90307617 286.95623779]
[-142.79545593 296.09796143]
[-137.15405273 310.10073853]
[-135.50088501 325.10638428]
[-137.95863342 340.00140381]
[-144.34492493 353.68051147]
[-154.18585205 365.12860107]
[-166.75114441 373.49615479]
[-181.10838318 378.16226196]
[-196.19215393 378.78063965]
[-210.88314819 375.30541992]
[-224.09120178 367.99444580]
[-234.83616638 357.39031982]
[-242.32073975 344.27984619]
[-245.98947144 329.63598633]
[-245.57012939 314.54537964]
[-241.09385681 300.12783813]
[-232.89279175 287.45324707]
[-221.57551575 277.46215820]
[-207.98185730 270.89596558]
[-193.12054443 268.24191284]
[-178.09437561 269.69699097]
[-164.01841736 275.15316772]
[-151.93719482 284.20559692]
[-140.04481506 275.06384277]
[-128.15243530 265.92211914]
[-116.26005554 256.78039551]
[-104.36767578 247.63865662]
[-92.47529602 238.49691772]
[-87.10028076 224.60597229]
[-71.44366455 222.32980347]
[-59.55128479 213.18806458]
[-47.65890503 204.04632568]
[-62.85752106 178.14230347]
[-73.55397034 150.07804871]
[-79.45255280 120.62939453]
[-80.39020538 90.61044312]
[-76.34101105 60.85106659]
[-67.41690063 32.17395401]
[-53.86458206 5.37188053]
[-36.05870819 -18.81421852]
[-14.49151993 -39.71572113]
[-23.50905037 -51.70255280]
[-32.52658081 -63.68938828]
[-41.54410934 -75.67621613]
[-56.63970947 -73.15005493]
[-71.17653656 -77.93953705]
[-81.81414032 -88.94407654]
[-86.10807800 -103.63491821]
[-83.07163239 -118.63619995]
[-73.40255737 -130.50074768]
[-59.32273102 -136.50218201]
[-44.06760025 -135.26139832]
[-31.14267731 -127.06352997]
[-23.51802063 -113.79238892]
[-22.94571686 -98.49758148]
[-29.55727768 -84.69374847]
[-20.53974724 -72.70691681]
[-11.52221775 -60.72008514]
[-2.50468755 -48.73324966]
[5.82453823 -54.14205551]
[14.43844032 -59.08491516]
[23.31097984 -63.54689026]
[32.41533661 -67.51448822]
[41.72399139 -70.97572327]
[51.20880508 -73.92012787]
[60.84110260 -76.33879852]
[70.59177399 -78.22442627]
[80.43134308 -79.57131958]
[90.33005524 -80.37539673]
[100.25801086 -80.63423157]
[110.18518066 -80.34703827]
[120.08155823 -79.51468658]
[129.91723633 -78.13969421]
[139.66247559 -76.22621155]
[149.28782654 -73.78003693]
[158.76419067 -70.80854797]
[168.06292725 -67.32073975]
[177.15591431 -63.32714462]
[186.01567078 -58.83984375]
[194.61541748 -53.87239838]
[202.92915344 -48.43981934]
[210.93176270 -42.55853653]
[218.59902954 -36.24632263]
[225.90780640 -29.52225876]
[232.83598328 -22.40667152]
[239.36260986 -14.92107105]
[245.46798706 -7.08808374]
[251.13362122 1.06861198]
[256.34240723 9.52436066]
[261.07861328 18.25360107]
[265.32788086 27.22994614]
[269.07742310 36.42626190]
[272.31585693 45.81475067]
[275.03338623 55.36703491]
[277.22186279 65.05423737]
[278.87460327 74.84706879]
[279.98663330 84.71593475]
[280.55459595 94.63100433]
[280.57678223 104.56230164]
[280.05313110 114.47981262]
[278.98516846 124.35354614]
[277.37619019 134.15367126]
[275.23104858 143.85054016]
[272.55621338 153.41487122]
[269.35974121 162.81773376]
[265.65133667 172.03071594]
[261.44219971 181.02595520]
[256.74505615 189.77626038]
[251.57409668 198.25520325]
[245.94494629 206.43713379]
[239.87464905 214.29731750]
[233.38151550 221.81199646]
[226.48519897 228.95846558]
[219.20654297 235.71511841]
[211.56753540 242.06152344]
[203.59129333 247.97850037]
[195.30191040 253.44816589]
[186.72444153 258.45397949]
[177.88481140 262.98080444]
[168.80975342 267.01498413]
[159.52670288 270.54431152]
[150.06372070 273.55810547]
[140.44938660 276.04727173]
[130.71278381 278.00424194]
[120.88335419 279.42318726]
[110.99079132 280.29974365]
[101.06500244 280.63128662]
[91.13599396 280.41680908]
[81.23377991 279.65695190]
[71.38829803 278.35403442]
[61.62929916 276.51199341]
[51.98628998 274.13638306]
[42.48841858 271.23437500]
[33.16439438 267.81475830]
[24.04240227 263.88787842]
[15.15001678 259.46557617]
[6.51411819 254.56124878]
[-1.83918893 249.18971252]
[-9.88465405 243.36720276]
[-17.59795570 237.11131287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 42]
[3 41]
[4 40]
[6 38]
[7 37]
[8 36]
[9 35]
[10 34]
[11 33]
[51 69]
[52 68]
[53 67]
[54 66]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
