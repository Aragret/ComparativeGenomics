%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUGCCCCCGCUAACCGGCUUUUUGCCCAAAUGGGCCAUUAUCGAAGAAUUCACAAAAAACAAxxxxxxxxxxCCCAUCAUAAUCGGAGGCUUUGGCAACUGACUAGUUCCCCUAAUAAUCGGUGCCCCCGAUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[113.94464874 252.85560608]
[113.94464874 237.85560608]
[113.94464874 222.85560608]
[113.94464874 207.85560608]
[113.94464874 192.85560608]
[113.94464874 177.85560608]
[113.94464874 162.85560608]
[113.94464874 147.85560608]
[113.94464874 132.85560608]
[113.94464874 117.85560608]
[99.57560730 120.04415894]
[88.69230652 113.27965546]
[75.00167847 119.40882874]
[61.31105423 125.53800201]
[47.62042999 131.66717529]
[34.94891357 139.69418335]
[23.55784035 149.45344543]
[12.16676617 159.21272278]
[9.50403023 175.03326416]
[-4.59448004 182.68908691]
[-19.31359482 176.30729675]
[-23.36206818 160.78346252]
[-13.63425827 148.02613831]
[2.40749168 147.82165527]
[13.79856491 138.06237793]
[25.18963814 128.30310059]
[21.98515129 121.52215576]
[15.57617569 107.96025848]
[12.37168789 101.17931366]
[-2.40042853 103.78403473]
[-17.17254448 106.38875580]
[-27.51526451 118.65283966]
[-43.54769135 118.06909180]
[-52.97112656 105.08531189]
[-48.55670929 89.66154480]
[-33.69080734 83.62959290]
[-19.77726746 91.61663818]
[-5.00515127 89.01191711]
[9.76696491 86.40719604]
[35.00079727 98.03016663]
[41.49125671 117.97655487]
[55.18188095 111.84738159]
[68.87250519 105.71820831]
[82.56313324 99.58903503]
[95.49765778 80.46343994]
[120.13116455 89.60710907]
[126.40056610 75.98013306]
[132.66996765 62.35315323]
[138.93937683 48.72617722]
[145.20878601 35.09919739]
[147.20483398 20.23259735]
[144.75190735 5.43451881]
[142.29898071 -9.36356068]
[127.26787567 -9.25317860]
[112.40457153 -11.49566269]
[98.07509613 -16.03578758]
[84.63233185 -22.76175117]
[72.40731812 -31.50792122]
[61.70110321 -42.05891037]
[52.77733612 -54.15489578]
[45.85577393 -67.49800110]
[41.10686493 -81.75964355]
[38.64756012 -96.58860779]
[38.53841782 -111.61972809]
[40.78212738 -126.48284912]
[45.32343674 -140.81195068]
[52.05051041 -154.25415039]
[60.79768753 -166.47845459]
[71.34956360 -177.18379211]
[83.44628143 -186.10656738]
[96.78996277 -193.02702332]
[111.05199432 -197.77474976]
[125.88116455 -200.23283386]
[140.91229248 -200.34074402]
[155.77522278 -198.09580994]
[170.10394287 -193.55331421]
[183.54559326 -186.82513428]
[195.76918030 -178.07695007]
[206.47364807 -167.52418518]
[215.39541626 -155.42672729]
[222.31477356 -142.08248901]
[227.06134033 -127.82006073]
[229.51818848 -112.99068451]
[229.62484741 -97.95954895]
[227.37869263 -83.09680176]
[222.83502197 -68.76845551]
[216.10572815 -55.32735443]
[207.35653687 -43.10450363]
[196.80288696 -32.40089798]
[184.70469666 -23.48012352]
[171.35987854 -16.56186485]
[157.09706116 -11.81648827]
[159.54998779 2.98159051]
[162.00291443 17.77966881]
[176.58227539 13.83738995]
[187.99346924 21.12202454]
[202.57722473 17.61285782]
[217.16098022 14.10369110]
[220.29113770 10.89405632]
[223.92384338 9.07006073]
[227.54895020 8.61687946]
[230.71592712 9.35140705]
[233.08479309 10.95748520]
[247.90727234 8.65661049]
[255.96580505 4.22310925]
[263.05740356 6.46391487]
[277.92401123 4.46785831]
[292.79061890 2.47180104]
[307.65719604 0.47574422]
[320.30429077 -9.96375561]
[335.57202148 -3.97807765]
[337.75427246 12.27522564]
[324.60610962 22.07614899]
[309.65325928 15.34234333]
[294.78668213 17.33839989]
[279.92007446 19.33445740]
[265.05346680 21.33051300]
[250.20814514 23.47909355]
[235.38566589 25.77996826]
[220.67013550 28.68744087]
[206.08639526 32.19660568]
[191.50263977 35.70577621]
[178.40924072 49.39642334]
[158.83576965 41.36860275]
[152.56636047 54.99557877]
[146.29695129 68.62255859]
[140.02754211 82.24954224]
[133.75814819 95.87651825]
[143.34649658 84.34120178]
[156.53329468 77.19220734]
[171.43203735 75.45227814]
[185.91130066 79.37033844]
[197.89964294 88.38586426]
[205.68200684 101.20908356]
[208.14503479 116.00548553]
[204.93635559 130.65827942]
[196.51502991 143.07122803]
[184.08580017 151.46850586]
[169.42683411 154.64880371]
[154.63522339 152.15713501]
[141.82710266 144.34996033]
[132.83479309 132.34419250]
[128.94464111 117.85560608]
[128.94464111 132.85560608]
[128.94464111 147.85560608]
[128.94464111 162.85560608]
[128.94464111 177.85560608]
[128.94464111 192.85560608]
[128.94464111 207.85560608]
[128.94464111 222.85560608]
[128.94464111 237.85560608]
[128.94464111 252.85560608]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[12 44]
[13 43]
[14 42]
[15 41]
[16 26]
[17 25]
[18 24]
[29 39]
[30 38]
[31 37]
[46 128]
[47 127]
[48 126]
[49 125]
[50 124]
[51 94]
[52 93]
[53 92]
[96 122]
[97 121]
[98 120]
[103 119]
[104 118]
[106 117]
[107 116]
[108 115]
[109 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
