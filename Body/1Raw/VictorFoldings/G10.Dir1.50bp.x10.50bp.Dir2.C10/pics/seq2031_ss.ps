%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUGAAAAAUUAUAACCAAGCAUAAUAUAGCAAGGACUAACCCCUAUACCUUCUGCAUAAUxxxxxxxxxxAAUGCAAACAGUACCUAACAAACCCACAGGUCCUAAACUACCAAACCUGCAUUAAAAAUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[96.97048187 273.26882935]
[96.97048187 258.26882935]
[96.97048187 243.26882935]
[96.97048187 228.26882935]
[96.97048187 213.26882935]
[96.97048187 198.26882935]
[96.97048187 183.26882935]
[96.97048187 168.26882935]
[96.97048187 153.26882935]
[96.97048187 138.26882935]
[71.06487274 115.93556976]
[75.51410675 87.09687805]
[64.63528442 76.76967621]
[58.85498047 78.76025391]
[52.81981277 79.22912598]
[46.91976929 78.17626190]
[41.52853775 75.69898987]
[36.97985077 71.98387909]
[23.59356499 78.75199127]
[10.20727921 85.52010345]
[-3.17900562 92.28822327]
[-16.56529045 99.05633545]
[-18.90747833 114.39562225]
[-29.84247017 125.40496826]
[-45.16553497 127.85104370]
[-58.98464203 120.79329681]
[-65.98606873 106.94556427]
[-63.47761536 91.63258362]
[-52.42383575 80.74251556]
[-37.07513809 78.46280670]
[-23.33340454 85.67005157]
[-9.94712067 78.90193939]
[3.43916440 72.13381958]
[16.82544899 65.36570740]
[30.21173477 58.59759140]
[31.59449577 47.00689697]
[38.47388077 37.57661057]
[33.27846527 23.50509071]
[28.08304977 9.43357086]
[16.66412735 5.92525482]
[8.90230846 -2.84499121]
[6.89030170 -14.14488125]
[-6.76593924 -20.35028839]
[-20.42218018 -26.55569458]
[-34.45001602 -19.64527893]
[-49.62549973 -23.41870117]
[-58.78323364 -36.09426498]
[-57.59921265 -51.68695831]
[-46.63249969 -62.83438873]
[-31.06123543 -64.27307892]
[-18.23770142 -55.32372284]
[-14.21677303 -40.21193695]
[-0.56053221 -34.00653076]
[13.09570885 -27.80112267]
[16.11408424 -30.27194786]
[19.53742981 -32.14178467]
[18.91345215 -47.12880325]
[18.28947449 -62.11581802]
[8.06239700 -77.39282227]
[16.72020531 -92.62575531]
[15.78457737 -107.59654236]
[12.10572529 -116.02968597]
[14.98850727 -122.88790894]
[14.36453056 -137.87492371]
[13.74055290 -152.86193848]
[13.11657524 -167.84895325]
[12.49259853 -182.83596802]
[-1.79306042 -188.03100586]
[-12.99985695 -198.30116272]
[-19.41883659 -212.08032227]
[-20.07114983 -227.26725769]
[-14.85732651 -241.54606628]
[-4.57243538 -252.73934937]
[9.21515274 -259.14019775]
[24.40293121 -259.77252197]
[38.67487335 -254.53993225]
[49.85461044 -244.24032593]
[56.23731613 -230.44432068]
[56.84967041 -215.25572205]
[51.59830093 -200.99067688]
[41.28399658 -189.82450867]
[27.47961426 -183.45994568]
[28.10359192 -168.47293091]
[28.72756958 -153.48591614]
[29.35154724 -138.49890137]
[29.97552299 -123.51188660]
[30.75536919 -108.53217316]
[31.69099808 -93.56137848]
[40.57279968 -85.28968811]
[41.43914795 -72.78095245]
[33.27648926 -62.73979568]
[33.90046692 -47.75277710]
[34.52444458 -32.76576233]
[49.11656189 -16.87487221]
[42.15456772 4.23815536]
[47.34998322 18.30967522]
[52.54539871 32.38119507]
[72.93712616 42.59321213]
[74.96248627 65.89084625]
[85.84131622 76.21805573]
[93.65641785 71.48946381]
[103.04206085 69.41303253]
[113.07487488 70.49963379]
[122.67103577 74.93331909]
[130.70275879 82.52351379]
[136.12799072 92.69857788]
[138.11865234 104.54414368]
[152.82661438 107.48962402]
[167.53457642 110.43511200]
[182.24253845 113.38059235]
[196.95050049 116.32607269]
[205.72149658 103.87659454]
[218.80117798 96.07649231]
[233.92343140 94.27717590]
[248.46821594 98.79039764]
[259.91555786 108.83419800]
[266.28216553 122.66844940]
[266.46493530 137.89627075]
[260.43225098 151.87934875]
[249.22927856 162.19503784]
[234.79702759 167.05607605]
[219.63594055 165.62026978]
[206.37278748 158.13636780]
[197.30549622 145.90100098]
[194.00502014 131.03404236]
[179.29705811 128.08854675]
[164.58909607 125.14307404]
[149.88113403 122.19758606]
[135.17317200 119.25210571]
[129.37249756 124.00628662]
[140.86781311 133.64256287]
[152.36311340 143.27883911]
[165.82113647 149.90316772]
[170.45925903 164.16807556]
[163.47050476 177.44050598]
[149.08445740 181.68803406]
[136.00747681 174.34005737]
[132.15391541 159.84211731]
[124.96253967 146.67837524]
[117.77115631 133.51464844]
[111.97048187 138.26882935]
[111.97048187 153.26882935]
[111.97048187 168.26882935]
[111.97048187 183.26882935]
[111.97048187 198.26882935]
[111.97048187 213.26882935]
[111.97048187 228.26882935]
[111.97048187 243.26882935]
[111.97048187 258.26882935]
[111.97048187 273.26882935]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 100]
[13 99]
[18 35]
[19 34]
[20 33]
[21 32]
[22 31]
[37 97]
[38 96]
[39 95]
[42 54]
[43 53]
[44 52]
[56 93]
[57 92]
[58 91]
[60 88]
[61 87]
[63 86]
[64 85]
[65 84]
[66 83]
[67 82]
[107 129]
[108 128]
[109 127]
[110 126]
[111 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
