%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCUACCAUCACCCUCUACAUCACCGCCCCGACCUUAGCUCUCACCAUCGCUCUUCUACUAxxxxxxxxxxCUGCGAGCAGUAGCCCAAACAAUCUCAUAUGAAGUCACCCUAGCCAUCAUUCUACUAUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[93.30932617 121.45173645]
[82.21800995 131.55038452]
[71.12669373 141.64903259]
[60.03537750 151.74768066]
[55.04032516 166.75968933]
[40.42042923 169.60711670]
[29.32911301 179.70576477]
[19.23046303 190.79707336]
[10.21293354 202.78390503]
[1.19540370 214.77073669]
[-7.82212591 226.75756836]
[-3.14478970 241.55291748]
[-8.08915234 256.26116943]
[-20.75400543 265.22671509]
[-36.26945496 265.00213623]
[-48.66949463 255.67375183]
[-53.18605423 240.82853699]
[-48.08242798 226.17478943]
[-35.32106018 217.34715271]
[-19.80895805 217.74005127]
[-10.79142857 205.75321960]
[-1.77389908 193.76637268]
[7.24363089 181.77954102]
[-7.40605211 185.00239563]
[-21.52335739 179.93272400]
[-30.77586365 168.12631226]
[-32.32409286 153.20643616]
[-25.69291687 139.75178528]
[-12.91735649 131.89143372]
[2.08193135 132.03762817]
[14.70185566 140.14549255]
[21.06952286 153.72683716]
[19.23046303 168.61444092]
[30.32177925 158.51579285]
[34.52350616 144.22612000]
[49.93672943 140.65637207]
[61.02804565 130.55772400]
[72.11936188 120.45907593]
[83.21067810 110.36042023]
[68.63558197 113.90536499]
[56.44549179 122.64617920]
[42.05185318 126.86791229]
[27.07171249 126.09629059]
[13.18802071 120.41798401]
[1.96054471 110.47093964]
[-5.34936285 97.37265015]
[-7.92046928 82.59464264]
[-5.46392202 67.79716492]
[1.74429727 54.64263535]
[12.89437962 44.60890961]
[26.73366547 38.82322693]
[41.70737839 37.93557358]
[56.13329315 42.04568481]
[68.39072418 50.69180298]
[77.10261536 62.90257645]
[81.29010010 77.30519104]
[90.56300354 89.09558868]
[88.07788086 74.30287933]
[85.59276581 59.51017380]
[83.10764313 44.71746445]
[68.08669281 43.29147720]
[53.94697952 38.02546310]
[41.65257645 29.27846527]
[32.04172897 17.64686775]
[25.76972580 3.92373395]
[23.26420212 -10.95526981]
[24.69598770 -25.97566986]
[29.96746254 -40.11334991]
[38.71920776 -52.40437698]
[50.35451508 -62.01073074]
[64.08007050 -68.27743530]
[78.96003723 -70.77721405]
[93.97988129 -69.33963013]
[108.11552429 -64.06269836]
[120.40317535 -55.30620575]
[130.00503540 -43.66719055]
[136.26643372 -29.93921661]
[138.76046753 -15.05828190]
[137.31709290 -0.03899259]
[132.03469849 14.09461117]
[123.27346039 26.37887764]
[111.63074493 35.97624588]
[97.90035248 42.23234558]
[100.38546753 57.02505493]
[102.87059021 71.81776428]
[105.35570526 86.61046600]
[119.96459961 90.01344299]
[128.73080444 77.84160614]
[129.83786011 61.47986984]
[144.67822266 54.50164795]
[157.98541260 64.08553314]
[156.07011414 80.37245178]
[140.90264893 86.60781860]
[132.13644409 98.77965546]
[145.66499329 92.30060577]
[159.77294922 87.20496368]
[174.33108521 83.59099579]
[189.18423462 81.49721527]
[204.17410278 80.94593048]
[219.14093018 81.94303131]
[233.92520142 84.47787476]
[248.36933899 88.52346039]
[262.31942749 94.03665924]
[275.62673950 100.95871735]
[288.14950562 109.21586609]
[299.75424194 118.72009277]
[310.31723022 129.37010193]
[319.72595215 141.05239868]
[327.88009644 153.64247131]
[334.69277954 167.00613403]
[340.09136963 181.00097656]
[344.01831055 195.47781372]
[346.43182373 210.28237915]
[347.30612183 225.25686646]
[346.63189697 240.24171448]
[344.41635132 255.07719421]
[340.68307495 269.60519409]
[335.47189331 283.67086792]
[328.83828735 297.12432861]
[320.85302734 309.82217407]
[311.60119629 321.62908936]
[301.18136597 332.41925049]
[289.70458984 342.07760620]
[277.29324341 350.50128174]
[264.07952881 357.60043335]
[250.20433044 363.29946899]
[235.81550598 367.53759766]
[221.06642151 370.26968384]
[206.11424255 371.46658325]
[191.11836243 371.11553955]
[176.23857117 369.22030640]
[161.63346863 365.80111694]
[147.45870972 360.89434814]
[133.86537170 354.55233765]
[120.99832916 346.84265137]
[108.99471283 337.84747314]
[97.98245239 327.66265869]
[88.07891846 316.39678955]
[79.38966370 304.16989136]
[72.00729370 291.11230469]
[66.01048279 277.36318970]
[61.46315002 263.06909180]
[58.41375732 248.38230896]
[56.89480591 233.45941162]
[56.92248535 218.45944214]
[58.49649429 203.54225159]
[61.60006714 188.86683655]
[66.20011902 174.58959961]
[72.24762726 160.86270142]
[79.67813873 147.83244324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[3 37]
[4 36]
[6 34]
[7 33]
[8 23]
[9 22]
[10 21]
[11 20]
[57 86]
[58 85]
[59 84]
[60 83]
[87 94]
[88 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
