%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUAGGAGGCCUGCCCCCGCUAACCGGCUUUUUGCCCAAAUGGGCCAUUAUCGAAGAAUUxxxxxxxxxxGUUGUAGCCCACUUCCACUAUGUCCUAUCAAUAGGAGCUGUAUUUGCCAUCAUAGGAGGCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[39.44178772 209.80337524]
[32.93414688 205.95399475]
[24.16793823 218.12582397]
[15.40173054 230.29766846]
[6.63552380 242.46949768]
[-2.13068342 254.64134216]
[-3.91721773 270.36135864]
[-17.63368797 276.16717529]
[-26.39989471 288.33901978]
[-35.16610336 300.51086426]
[-43.93230820 312.68270874]
[-52.69851685 324.85452271]
[-61.46472549 337.02636719]
[-65.81499481 353.41268921]
[-82.76520538 353.76861572]
[-87.79950714 337.57934570]
[-73.63655853 328.26016235]
[-64.87035370 316.08831787]
[-56.10414505 303.91650391]
[-47.33794022 291.74465942]
[-38.57173157 279.57281494]
[-29.80552483 267.40097046]
[-28.64600945 252.55157471]
[-14.30252075 245.87513733]
[-5.53631306 233.70329285]
[3.22989416 221.53146362]
[11.99610138 209.35961914]
[20.76230812 197.18778992]
[9.67386436 186.97854614]
[-0.10954310 175.51261902]
[-8.44656277 162.95570374]
[-15.21674156 149.48918152]
[-20.32226181 135.30764771]
[-23.68936157 120.61598969]
[-25.26939011 105.62647247]
[-25.03952026 90.55565643]
[-39.90256500 88.53331757]
[-54.76561356 86.51098633]
[-68.35460663 95.03851318]
[-83.44602203 89.59527588]
[-88.46300507 74.35685730]
[-79.55696869 61.01287079]
[-63.55985260 59.79967880]
[-52.74327850 71.64794159]
[-37.88023376 73.67027283]
[-23.01718521 75.69261169]
[-14.45621490 48.77645111]
[-0.08824652 24.45915031]
[19.35775375 3.97445464]
[42.89518356 -11.63833141]
[69.32985687 -21.58708572]
[66.53753662 -36.32489014]
[63.74520874 -51.06269836]
[60.95288467 -65.80050659]
[58.16056061 -80.53830719]
[43.11414337 -80.58157349]
[28.34787560 -83.47187042]
[14.39554691 -89.10472107]
[1.76152337 -97.27649689]
[-9.09748077 -107.69179535]
[-17.78892136 -119.97412109]
[-23.99860573 -133.67945862]
[-27.50205994 -148.31237793]
[-28.17263412 -163.34390259]
[-25.98608971 -178.23066711]
[-21.02146721 -192.43449402]
[-13.45823479 -205.44195557]
[-3.56980014 -216.78282166]
[8.28637791 -226.04714966]
[21.68170547 -232.90000916]
[36.13194656 -237.09368896]
[51.11474228 -238.47659302]
[66.08846283 -236.99871826]
[80.51182556 -232.71350098]
[93.86343384 -225.77584839]
[105.66063690 -216.43655396]
[115.47696686 -205.03320312]
[122.95757294 -191.97805786]
[127.83203888 -177.74302673]
[129.92414856 -162.84271240]
[129.15829468 -147.81573486]
[125.56212616 -133.20532227]
[119.26567078 -119.53962708]
[110.49653625 -107.31266022]
[99.57170868 -96.96641541]
[86.88613129 -88.87490845]
[72.89836884 -83.33063507]
[75.69068909 -68.59282684]
[78.48301697 -53.85502243]
[81.27533722 -39.11721802]
[84.06766510 -24.37940979]
[99.51410675 -25.39474106]
[114.96794891 -24.49914742]
[130.19369507 -21.70627594]
[144.95930481 -17.05869293]
[159.03977966 -10.62721920]
[172.22052002 -2.50986791]
[184.30067444 7.16965866]
[195.09616089 18.26385117]
[204.44244385 30.60364342]
[212.19709778 44.00098419]
[218.24194336 58.25171280]
[222.48487854 73.13864899]
[237.30262756 70.80754852]
[252.12039185 68.47644043]
[266.93814087 66.14533997]
[281.75592041 63.81423569]
[294.16415405 53.09193802]
[309.56307983 58.73147964]
[312.11163330 74.93138885]
[299.18804932 85.02658081]
[284.08700562 78.63199615]
[269.26925659 80.96309662]
[254.45149231 83.29420471]
[239.63374329 85.62530518]
[224.81597900 87.95640564]
[225.31494141 95.50082397]
[225.35830688 103.06159210]
[224.94590759 110.61122894]
[224.07925415 118.12228394]
[222.76148987 125.56745911]
[220.99740601 132.91967773]
[218.79342651 140.15220642]
[216.15754700 147.23876953]
[213.09936523 154.15357971]
[209.62998962 160.87150574]
[205.76205444 167.36813354]
[201.50959778 173.61982727]
[196.88809204 179.60386658]
[191.91432190 185.29850769]
[186.60639954 190.68301392]
[180.98359680 195.73783875]
[175.06637573 200.44459534]
[168.87623596 204.78616333]
[162.43568420 208.74678040]
[155.76814270 212.31202698]
[148.89784241 215.46894836]
[141.84977722 218.20606995]
[134.64955139 220.51342773]
[127.32336426 222.38264465]
[119.89782715 223.80691528]
[112.39995575 224.78108215]
[104.85700226 225.30158997]
[97.29638672 225.36653137]
[89.74559784 224.97569275]
[82.23209381 224.13049316]
[74.78318787 222.83399963]
[67.42596436 221.09091187]
[60.18716431 218.90759277]
[53.09311295 216.29196167]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 28]
[3 27]
[4 26]
[5 25]
[6 24]
[8 22]
[9 21]
[10 20]
[11 19]
[12 18]
[13 17]
[36 46]
[37 45]
[38 44]
[51 91]
[52 90]
[53 89]
[54 88]
[55 87]
[103 116]
[104 115]
[105 114]
[106 113]
[107 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
