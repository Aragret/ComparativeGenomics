%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCAUAACCCUCAACACCCACUCCCUCUUAGCCAAUAUUGUGCCUAUUGCCAUACUAGUCUxxxxxxxxxxCCAAAAAGGCAUAAUUAAACUUUACUUCCUCUCUUUCUUCUUCCCACUCAUCCUAACCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[16.25023270 215.46253967]
[8.50510311 209.42716980]
[-1.70837712 220.41284180]
[-11.92185688 231.39849854]
[-22.13533592 242.38417053]
[-32.34881592 253.36984253]
[-36.07870865 268.74508667]
[-50.41131973 272.79794312]
[-60.62479782 283.78359985]
[-70.83827972 294.76928711]
[-81.05175781 305.75494385]
[-75.04148865 319.74768066]
[-75.24868774 334.97518921]
[-81.63745117 348.79919434]
[-93.10089111 358.82464600]
[-107.65289307 363.31454468]
[-122.77223206 361.49096680]
[-135.83940125 353.66992188]
[-144.59042358 341.20639038]
[-147.50914001 326.25979614]
[-144.08985901 311.41970825]
[-134.92500305 299.25723267]
[-121.60242462 291.87966919]
[-106.43034363 290.56515503]
[-92.03742218 295.54144287]
[-81.82394409 284.55578613]
[-71.61046600 273.57012939]
[-61.39698410 262.58447266]
[-58.39762497 247.99497986]
[-43.33448029 243.15635681]
[-33.12100220 232.17068481]
[-22.90752220 221.18502808]
[-12.69404221 210.19935608]
[-2.48056197 199.21369934]
[-18.05158997 180.05900574]
[-30.08693123 158.50653076]
[-38.22612000 135.20175171]
[-42.22538376 110.84267426]
[-41.96494675 86.15885162]
[-37.45260620 61.88957214]
[-28.82350731 38.76171875]
[-16.33609962 17.46797562]
[-0.36438185 -1.35390496]
[18.61328697 -17.14019775]
[40.02851486 -29.41809845]
[63.23991394 -37.81988144]
[60.14159393 -52.49640656]
[57.04327011 -67.17292786]
[53.94495010 -81.84945679]
[50.84662628 -96.52598572]
[47.74830627 -111.20250702]
[44.64998245 -125.87903595]
[41.55166245 -140.55555725]
[38.45333862 -155.23208618]
[25.83658600 -168.60359192]
[31.85103798 -185.06039429]
[28.44805908 -199.66929626]
[25.04508209 -214.27818298]
[9.96720600 -214.60755920]
[-4.55483437 -218.67710876]
[-17.60817337 -226.23098755]
[-28.37226486 -236.79437256]
[-36.17047119 -249.70323181]
[-40.51259232 -264.14611816]
[-41.12567139 -279.21511841]
[-37.97117996 -293.96301270]
[-31.24740219 -307.46270752]
[-21.37700653 -318.86560059]
[-8.98045349 -327.45489502]
[5.16300058 -332.69070435]
[20.16428566 -334.24383545]
[35.08040619 -332.01672363]
[48.97372818 -326.14932251]
[60.97090149 -317.01046753]
[70.31777191 -305.17462158]
[76.42678833 -291.38583374]
[78.91394043 -276.51086426]
[77.62287140 -261.48474121]
[72.63475037 -247.25205994]
[64.26312256 -234.70747375]
[53.03424454 -224.63954163]
[39.65397263 -217.68116760]
[43.05695343 -203.07226562]
[46.45993042 -188.46337891]
[56.58940125 -181.77748108]
[59.51615143 -169.58514404]
[53.12986755 -158.33039856]
[56.22818756 -143.65388489]
[59.32651138 -128.97735596]
[62.42483139 -114.30082703]
[65.52315521 -99.62430573]
[68.62147522 -84.94777679]
[71.71979523 -70.27125549]
[74.81811523 -55.59472656]
[77.91644287 -40.91820145]
[87.66362000 -42.10361481]
[97.46926117 -42.61563110]
[107.28688812 -42.45183182]
[117.06999207 -41.61298752]
[126.77220154 -40.10307693]
[136.34754944 -37.92925262]
[145.75065613 -35.10181808]
[154.93695068 -31.63416862]
[163.86291504 -27.54273987]
[172.48626709 -22.84691811]
[180.76609802 -17.56895638]
[188.66322327 -11.73386383]
[196.14018250 -5.36929464]
[203.16156006 1.49459374]
[209.69409180 8.82527351]
[215.70680237 16.58800697]
[221.17120361 24.74600983]
[226.06140137 33.26062012]
[230.35424805 42.09149551]
[234.02935791 51.19678116]
[237.06935120 60.53333282]
[239.45979309 70.05690765]
[241.18937683 79.72237396]
[242.24990845 89.48393250]
[242.63633728 99.29532623]
[242.34686279 109.11005402]
[241.38284302 118.88161469]
[239.74884033 128.56369019]
[237.45260620 138.11042786]
[234.50502014 147.47656250]
[230.92004395 156.61770630]
[226.71467590 165.49057007]
[221.90882874 174.05308533]
[216.52529907 182.26467896]
[210.58958435 190.08644104]
[204.12980652 197.48130798]
[197.17658997 204.41423035]
[189.76287842 210.85237122]
[181.92379761 216.76521301]
[173.69651794 222.12472534]
[165.11999512 226.90551758]
[156.23487854 231.08494568]
[147.08329773 234.64318848]
[137.70858765 237.56338501]
[128.15518188 239.83171082]
[118.46836853 241.43740845]
[108.69403076 242.37287903]
[98.87850189 242.63368225]
[89.06827545 242.21856689]
[79.30986023 241.12951660]
[69.64949036 239.37168884]
[60.13294220 236.95343018]
[50.80531311 233.88616943]
[41.71080399 230.18446350]
[32.89251709 225.86582947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 34]
[3 33]
[4 32]
[5 31]
[6 30]
[8 28]
[9 27]
[10 26]
[11 25]
[46 95]
[47 94]
[48 93]
[49 92]
[50 91]
[51 90]
[52 89]
[53 88]
[54 87]
[56 84]
[57 83]
[58 82]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
