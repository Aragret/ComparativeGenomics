%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAACUACCAAACCUGCAUUAAAAAUUUCGGUUGGGGCGACCUCGGAGCAGAACCCAACCUxxxxxxxxxxAUAAUCGCCCACGGGCUUACAUCCUCAUUACUAUUCUGCCUAGCAAACUCAAACUACGAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[93.09820557 423.97967529]
[93.09820557 408.97967529]
[93.09820557 393.97967529]
[93.09820557 378.97967529]
[93.09820557 363.97967529]
[93.09820557 348.97967529]
[93.09820557 333.97967529]
[93.09820557 318.97967529]
[93.09820557 303.97967529]
[93.09820557 288.97967529]
[77.63952637 285.83599854]
[63.15432358 279.57467651]
[50.26419830 270.46194458]
[39.52280045 258.88647461]
[31.39205933 245.34277344]
[26.22230911 230.41003418]
[24.23719978 214.72741699]
[25.52402115 198.96665955]
[30.02986336 183.80332947]
[37.56379700 169.88780212]
[47.80495071 157.81747437]
[60.31619263 148.11100769]
[74.56276703 141.18611145]
[89.93518066 137.34155273]
[89.31120300 122.35453796]
[88.68722534 107.36752319]
[82.48181915 93.71128082]
[71.60298920 83.38407898]
[60.72416687 73.05686951]
[49.84534073 62.72966766]
[34.69932556 71.40476990]
[17.64517593 75.04026031]
[0.31217399 73.29953003]
[-15.64701843 66.35906219]
[-28.71394348 54.89063263]
[-37.64881516 39.99628830]
[-41.60815048 23.10245705]
[-40.22439194 5.82332611]
[-33.63999176 -10.19336987]
[-45.33961487 -19.58053207]
[-57.03923798 -28.96769333]
[-68.73886108 -38.35485458]
[-80.43848419 -47.74201584]
[-92.13810730 -57.12918091]
[-103.83773041 -66.51634216]
[-115.91771698 -75.40869141]
[-128.35716248 -83.79083252]
[-142.48545837 -77.59449768]
[-157.71733093 -80.04270935]
[-169.19233704 -90.35424805]
[-173.24882507 -105.23874664]
[-168.59242249 -119.94661713]
[-156.70893860 -129.78462219]
[-141.39036560 -131.61349487]
[-127.52479553 -124.84965515]
[-119.53668976 -111.65141296]
[-119.97501373 -96.23027802]
[-107.53557587 -87.84812927]
[-104.70617676 -88.29738617]
[-101.52347565 -87.61591339]
[-98.43125916 -85.66141510]
[-95.91703033 -82.45989990]
[-94.45056915 -78.21596527]
[-82.75094604 -68.82880402]
[-71.05132294 -59.44164276]
[-59.35169983 -50.05447769]
[-47.65207672 -40.66731644]
[-35.95245361 -31.28015518]
[-24.25282860 -21.89299393]
[-14.11947060 -29.59054756]
[-2.50311065 -34.80778885]
[9.99921417 -37.27225876]
[22.74395752 -36.85308075]
[35.07418823 -33.56793213]
[46.35345078 -27.58230591]
[55.99863052 -19.20119667]
[63.51007080 -8.85355186]
[68.49748993 2.92967129]
[70.70023346 15.54275990]
[70.00091553 28.33637238]
[66.43162537 40.65097809]
[60.17254639 51.85084152]
[71.05136871 62.17804718]
[81.93019867 72.50524902]
[92.80902100 82.83245850]
[107.71092224 81.11976624]
[115.96321106 68.59380341]
[116.38868713 52.20018005]
[130.92591858 44.61065674]
[144.62025452 53.63269043]
[143.38414001 69.98518372]
[128.48918152 76.84609222]
[120.23688507 89.37205505]
[129.00309753 101.54389191]
[143.49868774 97.68673706]
[157.99429321 93.82957458]
[158.18019104 78.73427582]
[162.43296814 64.24923706]
[170.43702698 51.44932938]
[181.59843445 41.28440857]
[195.08891296 34.50876617]
[209.90740967 31.62520790]
[224.95426941 32.84770966]
[239.11293030 38.08555222]
[251.33271790 46.95005417]
[260.70684814 58.78341293]
[266.53967285 72.70751190]
[268.39840698 87.68909454]
[266.14508057 102.61641693]
[259.94692993 116.38179016]
[250.26385498 127.96371460]
[237.81446838 136.50274658]
[223.52255249 141.36523438]
[208.44866943 142.19033813]
[193.71141052 138.91682434]
[180.40437317 131.78762817]
[169.51502991 121.33178711]
[161.85144043 108.32517242]
[147.35585022 112.18232727]
[132.86026001 116.03948975]
[121.27954865 116.51627350]
[111.21404266 113.18419647]
[103.67424011 106.74354553]
[104.29821777 121.73056030]
[104.92219543 136.71757507]
[119.02663422 138.87005615]
[132.48258972 143.60115051]
[144.82313538 150.74497986]
[155.62037659 160.05201721]
[164.50024414 171.19772339]
[171.15550232 183.79391479]
[175.35638428 197.40226746]
[176.95845032 211.54956055]
[175.90763855 225.74414062]
[172.24201965 239.49301147]
[166.09051514 252.31895447]
[157.66821289 263.77709961]
[147.26902771 273.47033691]
[135.25527954 281.06307983]
[122.04516602 286.29293823]
[108.09820557 288.97967529]
[108.09820557 303.97967529]
[108.09820557 318.97967529]
[108.09820557 333.97967529]
[108.09820557 348.97967529]
[108.09820557 363.97967529]
[108.09820557 378.97967529]
[108.09820557 393.97967529]
[108.09820557 408.97967529]
[108.09820557 423.97967529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[24 125]
[25 124]
[26 123]
[27 85]
[28 84]
[29 83]
[30 82]
[39 69]
[40 68]
[41 67]
[42 66]
[43 65]
[44 64]
[45 63]
[46 58]
[47 57]
[86 93]
[87 92]
[94 120]
[95 119]
[96 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
