%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGGAAUAGACGUAGACACACGAGCAUAUUUCACCUCCGCUACCAUAAUCAUCGCUAUCCCxxxxxxxxxxUUAUUAAUCAUCAUCCUAGCCCUAAGUCUGGCCUAUGAGUGACUACAAAAAGGAUUAGACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[120.46144867 291.41024780]
[120.46144867 276.41024780]
[120.46144867 261.41024780]
[120.46144867 246.41026306]
[120.46144867 231.41026306]
[120.46144867 216.41026306]
[120.46144867 201.41026306]
[120.46144867 186.41026306]
[120.46144867 171.41026306]
[120.46144867 156.41026306]
[116.45370483 141.95556641]
[108.72962189 129.09716797]
[101.00553894 116.23876190]
[89.85977936 112.72338104]
[83.94622803 102.64291382]
[86.31620026 91.19874573]
[78.86128998 78.18243408]
[71.40637970 65.16612244]
[63.95146942 52.14981461]
[56.49655914 39.13350677]
[42.92388153 31.00374222]
[43.31257629 16.11421013]
[35.85766602 3.09790063]
[28.40275574 -9.91840935]
[14.82819557 -3.51751995]
[0.78799099 1.78462625]
[-13.62908840 5.95450687]
[-28.33189201 8.96575928]
[-43.22746277 10.79934406]
[-58.22162628 11.44366837]
[-73.21958160 10.89465904]
[-88.12651062 9.15578747]
[-102.84815216 6.23804712]
[-117.29145050 2.15988541]
[-131.36506653 -3.05291438]
[-144.98004150 -9.36739445]
[-158.05027771 -16.74363136]
[-170.49316406 -25.13499260]
[-182.22999573 -34.48841858]
[-193.18659973 -44.74478149]
[-203.29370117 -55.83922958]
[-212.48738098 -67.70162201]
[-220.70951843 -80.25695801]
[-227.90814209 -93.42585754]
[-234.03771973 -107.12506866]
[-239.05952454 -121.26796722]
[-242.94177246 -135.76515198]
[-245.65994263 -150.52494812]
[-247.19685364 -165.45404053]
[-247.54277039 -180.45805359]
[-246.69552612 -195.44212341]
[-244.66044617 -210.31150818]
[-241.45042419 -224.97219849]
[-237.08575439 -239.33149719]
[-231.59402466 -253.29864502]
[-225.00994873 -266.78530884]
[-217.37516785 -279.70623779]
[-208.73794556 -291.97970581]
[-199.15287781 -303.52816772]
[-188.68058777 -314.27856445]
[-177.38728333 -324.16296387]
[-165.34434509 -333.11883545]
[-152.62792969 -341.08959961]
[-139.31843567 -348.02481079]
[-125.50000763 -353.88067627]
[-111.26000214 -358.62014771]
[-96.68846893 -362.21322632]
[-81.87751770 -364.63726807]
[-66.92079926 -365.87686157]
[-51.91287231 -365.92425537]
[-36.94862747 -364.77908325]
[-22.12266731 -362.44863892]
[-7.52873421 -358.94760132]
[6.74090528 -354.29812622]
[20.59603310 -348.52963257]
[33.94905090 -341.67858887]
[46.71553421 -333.78826904]
[58.81477356 -324.90859985]
[70.17026520 -315.09570312]
[80.71022034 -304.41165161]
[90.36799622 -292.92391968]
[99.08254242 -280.70523071]
[106.79875183 -267.83276367]
[113.46783447 -254.38793945]
[119.04764557 -240.45574951]
[123.50289154 -226.12428284]
[126.80540466 -211.48414612]
[128.93431091 -196.62791443]
[129.87615967 -181.64949036]
[129.62496948 -166.64360046]
[128.18235779 -151.70509338]
[125.55741882 -136.92842102]
[121.76676941 -122.40702820]
[116.83436584 -108.23270416]
[110.79138947 -94.49507141]
[103.67605591 -81.28098297]
[95.53334808 -68.67398071]
[86.41474915 -56.75378418]
[76.37789917 -45.59574509]
[65.48626709 -35.27041245]
[53.80871582 -25.84307098]
[41.41906738 -17.37331963]
[48.87397766 -4.35700989]
[56.32888794 8.65929985]
[69.36833954 15.85804844]
[69.51287079 31.67859459]
[76.96778107 44.69490433]
[84.42269135 57.71121216]
[91.87760162 70.72752380]
[99.33251190 83.74383545]
[114.03336334 91.76754761]
[113.86393738 108.51467896]
[121.58802032 121.37307739]
[129.31210327 134.23147583]
[129.44694519 119.23208618]
[132.85426331 104.62420654]
[139.36956787 91.11306763]
[148.67829895 79.35095215]
[160.33108521 69.90570831]
[173.76533508 63.23331833]
[188.33250427 59.65591049]
[203.32929993 59.34619904]
[218.03173828 62.31912613]
[231.73002625 68.43117523]
[243.76281738 77.38726807]
[253.54924011 88.75502777]
[260.61682129 101.98565674]
[264.62432861 116.44040680]
[265.37832642 131.42144775]
[262.84237671 146.20552063]
[257.13894653 160.07891846]
[248.54338074 172.37184143]
[237.47062683 182.49082947]
[224.45524597 189.94737244]
[210.12561035 194.38148499]
[195.17349243 195.57910156]
[180.32075500 193.48239136]
[166.28443909 188.19259644]
[153.74218750 179.96507263]
[143.29951477 169.19703674]
[135.46144104 156.41026306]
[135.46144104 171.41026306]
[135.46144104 186.41026306]
[135.46144104 201.41026306]
[135.46144104 216.41026306]
[135.46144104 231.41026306]
[135.46144104 246.41026306]
[135.46144104 261.41024780]
[135.46144104 276.41024780]
[135.46144104 291.41024780]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 114]
[12 113]
[13 112]
[16 110]
[17 109]
[18 108]
[19 107]
[20 106]
[22 104]
[23 103]
[24 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
