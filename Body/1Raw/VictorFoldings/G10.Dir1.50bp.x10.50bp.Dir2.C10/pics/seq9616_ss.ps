%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGAAUAAUACUAUCGCUGUUCAUUAUAGCUACUCUCAUAACCCUCAACACCCACUCCCUCUxxxxxxxxxxCCUAUCUAUUACUCUCAUCGCUACCUCCCUGACAAGCGCCUAUAGCACUCGAAUAAUUCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[109.38716125 410.84475708]
[109.38716125 395.84475708]
[109.38716125 380.84475708]
[109.38716125 365.84475708]
[109.38716125 350.84475708]
[109.38716125 335.84475708]
[109.38716125 320.84475708]
[109.38716125 305.84475708]
[109.38716125 290.84475708]
[109.38716125 275.84475708]
[91.44342804 270.81973267]
[75.83073425 260.61926270]
[64.00164795 246.18121338]
[57.06008911 228.83827209]
[55.65827179 210.19485474]
[59.93546295 191.97872925]
[69.50419617 175.88085938]
[83.48535919 163.39848328]
[100.58895111 155.69581604]
[98.41210938 140.85459900]
[96.23527527 126.01339722]
[94.05843353 111.17219543]
[91.41957092 96.40613556]
[88.32125092 81.72961426]
[85.22293091 67.05308533]
[82.12461090 52.37656021]
[69.16539764 43.73384476]
[66.23233032 28.80562210]
[74.55170441 16.50425720]
[71.45337677 1.82773077]
[68.35505676 -12.84879494]
[50.61032867 -19.83571625]
[40.67340469 -35.93833160]
[42.35878372 -54.63551331]
[54.81600952 -68.48020172]
[50.80826950 -82.93489075]
[46.80052948 -97.38957977]
[42.79278946 -111.84426880]
[27.99855804 -109.29292297]
[13.02381039 -108.22730255]
[-1.98262525 -108.65800476]
[-16.87160492 -110.58074188]
[-31.49514961 -113.97640991]
[-45.70792007 -118.81125641]
[-59.36866379 -125.03723145]
[-72.34160614 -132.59245300]
[-84.49781036 -141.40184021]
[-95.71646881 -151.37782288]
[-105.88607025 -162.42127991]
[-114.90554810 -174.42242432]
[-122.68526459 -187.26199341]
[-129.14790344 -200.81237793]
[-134.22921753 -214.93891907]
[-137.87870789 -229.50119019]
[-140.06011963 -244.35447693]
[-140.75175476 -259.35113525]
[-139.94674683 -274.34216309]
[-137.65309143 -289.17852783]
[-133.89360046 -303.71279907]
[-128.70562744 -317.80050659]
[-122.14072418 -331.30163574]
[-114.26415253 -344.08203125]
[-105.15419006 -356.01464844]
[-94.90138245 -366.98086548]
[-83.60762024 -376.87176514]
[-71.38515472 -385.58898926]
[-58.35545731 -393.04589844]
[-44.64803314 -399.16839600]
[-30.39911079 -403.89566040]
[-15.75030994 -407.18066406]
[-0.84721911 -408.99075317]
[14.16204357 -409.30798340]
[29.12830734 -408.12918091]
[43.90282440 -405.46603394]
[58.33875275 -401.34506226]
[72.29262543 -395.80718994]
[85.62575531 -388.90744019]
[98.20561981 -380.71444702]
[109.90720367 -371.30957031]
[120.61420441 -360.78631592]
[130.22019958 -349.24926758]
[138.62973022 -336.81311035]
[145.75921631 -323.60140991]
[151.53779602 -309.74548340]
[155.90803528 -295.38302612]
[158.82649231 -280.65682983]
[160.26417542 -265.71322632]
[160.20678711 -250.70069885]
[158.65490723 -235.76852417]
[155.62394714 -221.06504822]
[151.14404297 -206.73643494]
[145.25971985 -192.92509460]
[138.02944946 -179.76828003]
[129.52508545 -167.39675903]
[119.83116913 -155.93348694]
[109.04403687 -145.49240112]
[97.27089691 -136.17726135]
[84.62876129 -128.08065796]
[71.24327850 -121.28305054]
[57.24747467 -115.85201263]
[61.25521851 -101.39732361]
[65.26295471 -86.94263458]
[69.27069855 -72.48794556]
[80.37505341 -70.59745789]
[89.99953461 -64.64652252]
[96.71368408 -55.47408295]
[99.50255585 -44.40114594]
[97.92000580 -33.04056168]
[92.15953064 -23.06211472]
[83.03158569 -15.94711685]
[86.12990570 -1.27059102]
[89.22822571 13.40593433]
[101.80993652 21.29493141]
[105.16114807 36.13487625]
[96.80113220 49.27824020]
[99.89945221 63.95476532]
[102.99777985 78.63128662]
[106.09609985 93.30781555]
[109.06209564 95.88449097]
[110.85086823 99.77628326]
[110.89285278 104.41485596]
[108.89964294 108.99535370]
[111.07647705 123.83656311]
[113.25331879 138.67776489]
[115.43015289 153.51896667]
[127.09681702 154.38230896]
[138.38478088 157.43370056]
[148.88771057 162.56115723]
[158.22787476 169.57803345]
[166.06985474 178.22972107]
[172.13246155 188.20297241]
[176.19894409 199.13723755]
[178.12463379 210.63764954]
[177.84214783 222.28930664]
[175.36369324 233.67225647]
[170.78065491 244.37663269]
[164.26011658 254.01734924]
[156.03880310 262.24807739]
[146.41455078 268.77355957]
[135.73541260 273.36026001]
[124.38716125 275.84475708]
[124.38716125 290.84475708]
[124.38716125 305.84475708]
[124.38716125 320.84475708]
[124.38716125 335.84475708]
[124.38716125 350.84475708]
[124.38716125 365.84475708]
[124.38716125 380.84475708]
[124.38716125 395.84475708]
[124.38716125 410.84475708]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[19 125]
[20 124]
[21 123]
[22 122]
[23 118]
[24 117]
[25 116]
[26 115]
[29 112]
[30 111]
[31 110]
[35 103]
[36 102]
[37 101]
[38 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
