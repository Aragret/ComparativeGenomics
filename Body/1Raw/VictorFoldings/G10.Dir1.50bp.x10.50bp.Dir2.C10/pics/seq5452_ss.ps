%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAGCUAACAUGACUAACACCCUUAAUUCCAUCCACCCUCCUCUCCCUAGGAGGCCUGCCCxxxxxxxxxxCCCGUAUUUACCCUAUAGCACCCCCUCUACCCCCUCUAGAGCCCACUGUAAAGCUAACUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[288.83221436 293.05157471]
[278.61874390 282.06591797]
[268.40527344 271.08026123]
[258.19180298 260.09460449]
[247.97830200 249.10893250]
[237.31668091 238.55763245]
[226.22537231 228.45898438]
[215.13404846 218.36033630]
[204.04273987 208.26168823]
[192.95141602 198.16304016]
[180.81681824 198.40513611]
[171.48881531 190.02616882]
[170.36151123 177.13496399]
[159.48268127 166.80775452]
[148.60386658 156.48054504]
[137.72503662 146.15335083]
[125.53800201 153.86204529]
[111.85642242 158.41862488]
[97.48097992 159.55639648]
[83.25295258 157.20880127]
[70.00500488 151.51319885]
[58.51243210 142.80293274]
[49.44780731 131.58775330]
[43.34161758 118.52396393]
[40.55120468 104.37612152]
[41.23987198 89.97217560]
[45.36732101 76.15508270]
[52.69200134 63.73344803]
[42.03037262 53.18215561]
[28.56975174 62.20370483]
[13.55160809 68.27505493]
[-2.38648748 71.14078522]
[-18.56838417 70.68151093]
[-34.30804062 66.91886902]
[-48.93859863 60.01449203]
[-61.84065628 50.26306534]
[-72.46846771 38.07977295]
[-80.37304688 23.98259926]
[-85.22112274 8.57031250]
[-86.80920410 -7.50296497]
[-85.07209778 -23.55552292]
[-80.08560181 -38.90696716]
[-72.06319427 -52.90707779]
[-83.36219788 -62.77280045]
[-101.48306274 -65.87347412]
[-106.57009125 -82.64016724]
[-118.07189178 -92.26869965]
[-129.57369995 -101.89722443]
[-141.07550049 -111.52574921]
[-152.57730103 -121.15427399]
[-164.07910156 -130.78280640]
[-179.79754639 -129.13769531]
[-192.02264404 -139.15379333]
[-193.50148010 -154.88874817]
[-183.35667419 -167.00727844]
[-167.60697937 -168.31965637]
[-155.59638977 -158.04730225]
[-154.45057678 -142.28460693]
[-142.94877625 -132.65608215]
[-131.44697571 -123.02754974]
[-119.94517517 -113.39902496]
[-108.44336700 -103.77050018]
[-96.94156647 -94.14197540]
[-84.82752991 -94.88864899]
[-75.15904999 -86.90495300]
[-73.49647522 -74.07180786]
[-62.19746780 -64.20607758]
[-51.32729721 -72.81887054]
[-39.10572815 -79.38220215]
[-25.91496277 -83.68933105]
[-12.16778755 -85.60408783]
[1.70535982 -85.06519318]
[15.26986408 -82.08821106]
[28.10054588 -76.76511383]
[39.79499054 -69.26142883]
[49.98616791 -59.81108856]
[58.35395813 -48.70916367]
[64.63519287 -36.30261612]
[68.63194275 -22.97947693]
[70.21775818 -9.15670586]
[69.34165955 4.73285961]
[66.02976990 18.25405693]
[60.38456345 30.98303223]
[52.58166504 42.52053070]
[63.24328995 53.07181931]
[76.58526611 45.18157196]
[91.51048279 40.99798584]
[107.00972748 40.80393982]
[122.03500366 44.61256027]
[135.57032776 52.16631699]
[146.70050049 62.95444489]
[154.67291260 76.24748230]
[158.94851685 91.14659882]
[159.23818970 106.64435577]
[155.52233887 121.69284058]
[148.05224609 135.27452087]
[158.93106079 145.60173035]
[169.80989075 155.92892456]
[180.68872070 166.25613403]
[198.66491699 170.10792542]
[203.05006409 187.07171631]
[214.14138794 197.17037964]
[225.23269653 207.26902771]
[236.32402039 217.36767578]
[247.41532898 227.46632385]
[251.83560181 228.25543213]
[255.38894653 230.24157715]
[257.80026245 232.99247742]
[258.96807861 236.03060913]
[258.96398926 238.89544678]
[269.17745972 249.88111877]
[279.39093018 260.86679077]
[289.60440063 271.85244751]
[299.81790161 282.83810425]
[312.32583618 274.49859619]
[326.00964355 268.27362061]
[340.51480103 264.32443237]
[355.46563721 262.75332642]
[370.47491455 263.60098267]
[385.15377808 266.84542847]
[399.12207031 272.40267944]
[412.01797485 280.12872314]
[423.50744629 289.82348633]
[433.29287720 301.23583984]
[441.12078857 314.07015991]
[446.78845215 327.99401855]
[450.14904785 342.64672852]
[451.11550903 357.64880371]
[449.66281128 372.61163330]
[445.82858276 387.14761353]
[439.71215820 400.88024902]
[431.47195435 413.45385742]
[421.32141113 424.54269409]
[409.52346802 433.85958862]
[396.38369751 441.16317749]
[382.24243164 446.26428223]
[367.46603394 449.03079224]
[352.43716431 449.39102173]
[337.54516602 447.33566284]
[323.17575073 442.91793823]
[309.70114136 436.25228882]
[297.47033691 427.51135254]
[286.80017090 416.92156982]
[277.96701050 404.75720215]
[271.19967651 391.33340454]
[266.67340088 376.99780273]
[264.50549316 362.12176514]
[264.75207520 347.09060669]
[267.40676880 332.29370117]
[272.40078735 318.11428833]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 114]
[2 113]
[3 112]
[4 111]
[5 110]
[6 105]
[7 104]
[8 103]
[9 102]
[10 101]
[13 99]
[14 98]
[15 97]
[16 96]
[28 85]
[29 84]
[43 67]
[44 66]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
