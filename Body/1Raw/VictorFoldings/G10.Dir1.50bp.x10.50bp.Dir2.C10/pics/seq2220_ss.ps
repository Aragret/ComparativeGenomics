%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUUGCCCACAGAACCCUCUAAAUCCCCUUGUAAAUUUAACUGUUAGUCCAAAGAGGAACAxxxxxxxxxxAUUCCAUCCACCCUCCUCUCCCUAGGAGGCCUGCCCCCGCUAACCGGCUUUUUGCCCAAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-29.91411400 239.12150574]
[-40.57574081 249.67280579]
[-51.23736572 260.22409058]
[-61.89899445 270.77539062]
[-72.11247253 281.76104736]
[-81.86012268 293.16207886]
[-91.60778046 304.56307983]
[-101.35543060 315.96411133]
[-111.10308075 327.36514282]
[-120.85073090 338.76614380]
[-130.59838867 350.16717529]
[-140.34603882 361.56817627]
[-149.97456360 373.07000732]
[-159.48292542 384.67132568]
[-161.60838318 400.93215942]
[-176.85511780 406.97113037]
[-189.53858948 396.57586670]
[-186.61112976 380.44012451]
[-171.08425903 375.16296387]
[-161.57591248 363.56164551]
[-159.75665283 356.34805298]
[-151.74705505 351.82052612]
[-141.99940491 340.41952515]
[-132.25175476 329.01849365]
[-122.50410461 317.61746216]
[-112.75644684 306.21646118]
[-103.00879669 294.81542969]
[-93.26114655 283.41439819]
[-83.51349640 272.01339722]
[-83.63675690 269.15121460]
[-82.59633636 266.06713867]
[-80.30155182 263.21829224]
[-76.83390045 261.08605957]
[-72.45028687 260.11373901]
[-61.78865814 249.56246948]
[-51.12702942 239.01116943]
[-40.46540451 228.45988464]
[-50.92472458 215.99223328]
[-60.28086853 202.67674255]
[-68.46544647 188.61074829]
[-75.41863251 173.89706421]
[-81.08960724 158.64321899]
[-85.43691254 142.96072388]
[-88.42877197 126.96421814]
[-90.04332733 110.77061462]
[-90.26876068 94.49828339]
[-89.10343933 78.26616669]
[-86.55587769 62.19290924]
[-82.64469147 46.39600372]
[-77.39846802 30.99091339]
[-70.85556793 16.09024429]
[-63.06380081 1.80290794]
[-54.08012390 -11.76666069]
[-43.97021103 -24.51927567]
[-32.80794907 -36.36172485]
[-20.67493820 -47.20744324]
[-7.65985680 -56.97715378]
[-15.64977360 -69.67208099]
[-23.63968849 -82.36701202]
[-38.90128708 -87.31304169]
[-44.41468430 -102.37896729]
[-35.95047760 -116.00749207]
[-20.00168037 -117.74398804]
[-8.80284500 -106.25635529]
[-10.94475937 -90.35692596]
[-2.95484352 -77.66200256]
[5.03507280 -64.96707153]
[15.25604916 -70.44334412]
[25.79150963 -75.28710938]
[36.60235596 -79.48039246]
[47.64846802 -83.00762177]
[58.88885880 -85.85571289]
[70.28180695 -88.01409912]
[81.78504181 -89.47476196]
[93.35587311 -90.23229980]
[104.95136261 -90.28388214]
[116.52847290 -89.62932587]
[128.04425049 -88.27105713]
[139.45594788 -86.21411896]
[150.72123718 -83.46614838]
[161.79829407 -80.03733826]
[172.64602661 -75.94040680]
[183.22415161 -71.19056702]
[193.49345398 -65.80544281]
[203.41578674 -59.80502319]
[212.95436096 -53.21156311]
[222.07376099 -46.04954147]
[230.74014282 -38.34553146]
[238.92135620 -30.12812614]
[246.58703613 -21.42781639]
[253.70872498 -12.27688980]
[260.26000977 -2.70930648]
[273.19805908 -10.29921436]
[286.13610840 -17.88912392]
[299.07418823 -25.47903061]
[312.01223755 -33.06893921]
[324.95028687 -40.65884781]
[328.69174194 -56.01388550]
[342.23822021 -64.15443420]
[357.55282593 -60.25085449]
[365.54971313 -46.61906815]
[361.48443604 -31.34657478]
[347.76885986 -23.49427223]
[332.54019165 -27.72079277]
[319.60214233 -20.13088417]
[306.66409302 -12.54097557]
[293.72601318 -4.95106697]
[280.78796387 2.63884115]
[267.84991455 10.22874928]
[276.11651611 27.78200340]
[282.55331421 46.08560181]
[287.09335327 64.94936371]
[289.68951416 84.17730713]
[290.31481934 103.56964111]
[288.96273804 122.92488861]
[285.64736938 142.04194641]
[280.40313721 160.72219849]
[294.41983032 166.06370544]
[308.43655396 171.40521240]
[323.60583496 166.18290710]
[337.06887817 174.90792847]
[338.49798584 190.88720703]
[326.79687500 201.86279297]
[310.94161987 199.41516113]
[303.09503174 185.42193604]
[289.07833862 180.08041382]
[275.06161499 174.73890686]
[268.81661987 187.93986511]
[261.57797241 200.62319946]
[253.38829041 212.71426392]
[244.29574585 224.14189148]
[234.35388184 234.83882141]
[223.62120056 244.74208069]
[212.16087341 253.79339600]
[200.04039001 261.93948364]
[187.33105469 269.13238525]
[174.10768127 275.32974243]
[160.44812012 280.49514771]
[146.43273926 284.59814453]
[132.14407349 287.61456299]
[117.66620636 289.52670288]
[103.08435059 290.32330322]
[88.48434448 289.99963379]
[73.95211029 288.55761719]
[59.57320404 286.00576782]
[45.43224716 282.35906982]
[31.61247826 277.63900757]
[18.19524002 271.87335205]
[5.25950432 265.09606934]
[-7.11858606 257.34701538]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 37]
[2 36]
[3 35]
[4 34]
[5 29]
[6 28]
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[12 22]
[13 20]
[14 19]
[57 67]
[58 66]
[59 65]
[92 109]
[93 108]
[94 107]
[95 106]
[96 105]
[97 104]
[117 127]
[118 126]
[119 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
