%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUUAACAACAUACCCAUGGCCAACCUCCUACUCCUCAUUGUACCCAUUCUAAUCGCAAUGGCxxxxxxxxxxCUGACUAGUUCCCCUAAUAAUCGGUGCCCCCGAUAUGGCGUUUCCCCGCAUAAACAACAUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.69888306 321.20907593]
[92.69888306 306.20907593]
[92.69888306 291.20907593]
[92.69888306 276.20907593]
[92.69888306 261.20907593]
[92.69888306 246.20907593]
[92.69888306 231.20907593]
[92.69888306 216.20907593]
[92.69888306 201.20907593]
[92.69888306 186.20907593]
[92.64458466 175.15754700]
[95.59220123 165.56091309]
[100.77711487 158.14573669]
[107.28255463 153.34239197]
[114.13999939 151.26081848]
[108.15170288 137.50799561]
[90.25605011 137.12620544]
[74.47941589 128.67054749]
[62.50915909 137.71006775]
[50.53890228 146.74958801]
[44.64851379 162.05433655]
[28.40913010 164.33784485]
[18.52643585 151.25105286]
[25.16690063 136.25650024]
[41.49938202 134.77932739]
[53.46964264 125.73979950]
[65.43989563 116.70028687]
[61.84411621 104.17473602]
[62.64634323 91.16799164]
[67.75411987 79.17926788]
[56.98543930 68.73725891]
[44.47670364 77.11045074]
[30.50577927 82.69758606]
[15.68425179 85.25670624]
[0.66038966 84.67834473]
[-13.90919495 80.99021912]
[-27.38825417 74.35589600]
[-39.18868256 65.06753540]
[-48.79617691 53.53306580]
[-55.79265976 40.25821304]
[-59.87446213 25.82436943]
[-60.86550140 10.86310577]
[-58.72488785 -3.97144771]
[-53.54859924 -18.03121185]
[-45.56517029 -30.70246315]
[-56.33384705 -41.14447021]
[-67.10252380 -51.58647919]
[-77.87120819 -62.02848816]
[-88.63988495 -72.47049713]
[-99.40856171 -82.91250610]
[-113.52446747 -77.19752502]
[-128.74426270 -77.72457123]
[-142.43103027 -84.40233612]
[-152.21343994 -96.07385254]
[-156.39663696 -110.71696472]
[-154.25585938 -125.79466248]
[-146.16200256 -138.69464111]
[-133.51739502 -147.18191528]
[-118.51277161 -149.78598022]
[-103.74778748 -146.05570984]
[-91.78055573 -136.63735962]
[-84.68447113 -123.16273499]
[-83.68898010 -107.96639252]
[-88.96655273 -93.68119049]
[-78.19787598 -83.23918152]
[-67.42919922 -72.79716492]
[-56.66051865 -62.35515976]
[-45.89183807 -51.91315079]
[-35.12316132 -41.47114182]
[-22.70376968 -49.84099579]
[-8.81007862 -55.44780350]
[5.95151949 -58.04423141]
[20.93620682 -57.51439285]
[35.48890686 -53.87902069]
[48.97291946 -47.29465485]
[60.79778290 -38.04692078]
[70.44512939 -26.53812408]
[77.49139404 -13.26976299]
[81.62644958 1.17933559]
[82.66719055 16.17826080]
[80.56571198 31.07156944]
[75.41146088 45.20792007]
[67.42744446 57.96857834]
[78.19612885 68.41058350]
[87.77336884 60.16975021]
[100.38031006 55.05598450]
[114.93045044 54.14271545]
[123.84660339 42.08028412]
[132.76275635 30.01785278]
[131.81483459 14.00282955]
[143.84072876 3.38409472]
[159.61518860 6.30743456]
[167.03739929 20.53031349]
[160.41368103 35.14215469]
[144.82518005 38.93400574]
[135.90902710 50.99643707]
[126.99288177 63.05886841]
[131.26310730 69.22451019]
[146.21252441 67.99358368]
[139.80357361 81.55579376]
[144.07379150 87.72143555]
[158.50119019 83.61649323]
[172.92857361 79.51154327]
[187.35595703 75.40660095]
[201.78334045 71.30165863]
[210.81469727 58.04216385]
[226.82254028 56.97973633]
[237.52700806 68.92937469]
[234.71655273 84.72434235]
[220.54711914 92.24808502]
[205.88827515 85.72904205]
[191.46089172 89.83398438]
[177.03350830 93.93892670]
[162.60612488 98.04387665]
[148.17874146 102.14881897]
[137.92004395 120.91419983]
[121.90453339 131.51969910]
[127.89282990 145.27252197]
[138.55374146 155.82453918]
[152.36732483 161.67132568]
[166.18090820 167.51811218]
[180.73233032 161.35115051]
[195.35090637 167.35720825]
[201.36367798 181.97302246]
[195.20339966 196.52728271]
[180.52482605 202.38520813]
[166.03651428 196.07138062]
[160.33412170 181.33169556]
[146.52053833 175.48490906]
[132.70695496 169.63812256]
[126.45493317 173.78086853]
[135.77439880 185.53448486]
[145.09385681 197.28811646]
[154.41331482 209.04173279]
[166.31710815 218.16860962]
[165.79998779 233.15968323]
[153.29559326 241.44461060]
[139.28913879 236.07626343]
[135.52503967 221.55755615]
[128.33366394 208.39381409]
[121.14228058 195.23007202]
[113.95089722 182.06632996]
[107.69888306 186.20907593]
[107.69888306 201.20907593]
[107.69888306 216.20907593]
[107.69888306 231.20907593]
[107.69888306 246.20907593]
[107.69888306 261.20907593]
[107.69888306 276.20907593]
[107.69888306 291.20907593]
[107.69888306 306.20907593]
[107.69888306 321.20907593]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[15 118]
[16 117]
[18 27]
[19 26]
[20 25]
[30 84]
[31 83]
[45 69]
[46 68]
[47 67]
[48 66]
[49 65]
[50 64]
[87 97]
[88 96]
[89 95]
[101 115]
[102 114]
[103 113]
[104 112]
[105 111]
[119 130]
[120 129]
[121 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
