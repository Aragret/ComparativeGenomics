%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAAAAUUAUAACAAACCCUGAGAACCAAAAUGAACGAAAAUCUGUUCGCUUCAUUCAUUGxxxxxxxxxxAGACUACGUACAUAACCUAAACCUACUCCAAUGCUAAAACUAAUCGUCCCAACAAUUAUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[88.52726746 499.49404907]
[88.52726746 484.49404907]
[88.52726746 469.49404907]
[88.52726746 454.49404907]
[88.52726746 439.49404907]
[88.52726746 424.49404907]
[88.52726746 409.49404907]
[88.52726746 394.49404907]
[88.52726746 379.49404907]
[88.52726746 364.49404907]
[74.24225616 361.62033081]
[60.79318619 356.00006104]
[48.70274734 347.84948730]
[38.44122696 337.48336792]
[30.40824318 325.30255127]
[24.91716194 311.77871704]
[22.18289375 297.43594360]
[22.31346703 282.83044434]
[25.30576706 268.52908325]
[31.04558182 255.08726501]
[39.31195831 243.02735901]
[49.78570938 232.81852722]
[62.06173706 224.85833740]
[75.66469574 219.45735168]
[90.06741333 216.82696533]
[90.37947083 201.83021545]
[77.56742096 194.23303223]
[70.22949219 181.15592957]
[70.42371368 166.06193542]
[78.19804382 153.00602722]
[91.55065155 145.54579163]
[91.86270142 130.54902649]
[82.58801270 127.21263123]
[74.60690308 121.07366943]
[68.76055145 112.61618805]
[65.71349335 102.57432556]
[65.88021088 91.86912537]
[69.37401581 81.52414703]
[75.98402405 72.56760406]
[63.54458237 64.18545532]
[51.10514450 55.80331421]
[38.66570282 47.42117310]
[26.22626305 39.03902817]
[13.78682327 30.65688515]
[1.26086092 22.40459633]
[-11.35026741 14.28305340]
[-23.96139526 6.16151142]
[-36.57252502 -1.96003067]
[-51.96381760 1.62934136]
[-65.34087372 -6.78671217]
[-68.76731873 -22.21509552]
[-60.21030426 -35.50242233]
[-44.74655914 -38.76556015]
[-31.55044174 -30.06854248]
[-28.45098114 -14.57115841]
[-15.83985329 -6.44961691]
[-3.22872496 1.67192543]
[9.38240337 9.79346752]
[16.75654411 10.77717972]
[22.16896629 18.21744537]
[34.60840607 26.59958839]
[47.04784775 34.98173141]
[59.48728561 43.36387253]
[71.92672729 51.74601746]
[84.36616516 60.12816238]
[99.07412720 57.18267822]
[107.32641602 44.65671539]
[115.57870483 32.13075256]
[123.83099365 19.60479164]
[132.08328247 7.07883024]
[120.97761536 -3.05085325]
[111.59339905 -14.79321098]
[104.16172791 -27.85907745]
[98.86563110 -41.92669296]
[95.83551788 -56.64963150]
[95.14600372 -71.66532898]
[96.81407928 -86.60400391]
[100.79866028 -101.09777832]
[107.00162506 -114.78973389]
[115.27021790 -127.34269714]
[125.40081787 -138.44754028]
[137.14395142 -147.83078003]
[150.21043396 -155.26136780]
[164.27848816 -160.55630493]
[179.00166321 -163.58520508]
[194.01742554 -164.27348328]
[208.95596313 -162.60417175]
[223.44940186 -158.61839294]
[237.14085388 -152.41430664]
[249.69313049 -144.14468384]
[260.79714966 -134.01316833]
[270.17941284 -122.26925659]
[277.60891724 -109.20216370]
[282.90270996 -95.13367462]
[285.93038940 -80.41023254]
[286.61743164 -65.39442444]
[284.94686890 -50.45602798]
[280.95989990 -35.96290588]
[274.75466919 -22.27197266]
[266.48400879 -9.72037411]
[256.35159302 1.38279223]
[244.60690308 10.76410198]
[231.53919983 18.19253159]
[217.47027588 23.48514938]
[202.74658203 26.51161957]
[187.73072815 27.19741249]
[172.79246521 25.52564049]
[158.29966736 21.53747177]
[144.60925293 15.33111954]
[136.35696411 27.85708237]
[128.10467529 40.38304520]
[119.85237885 52.90900421]
[111.60009003 65.43496704]
[122.90738678 72.53074646]
[130.70697021 83.04850006]
[134.07885742 95.43676758]
[132.73962402 107.94908142]
[127.05696106 118.88993835]
[117.97434998 126.84450531]
[106.85945892 130.86108398]
[106.54740143 145.85784912]
[119.57810974 153.86708069]
[126.80261230 167.23507690]
[126.36877441 182.32408142]
[118.49320984 195.08462524]
[105.37622070 202.14227295]
[105.06416321 217.13902283]
[120.12764740 220.63165283]
[134.13723755 227.16343689]
[146.48744202 236.44949341]
[156.64505005 248.08596802]
[164.17207336 261.56759644]
[168.74472046 276.30960083]
[170.16728210 291.67315674]
[168.38049316 306.99291992]
[163.46400452 321.60601807]
[155.63288879 334.88058472]
[145.22813416 346.24316406]
[132.70188904 355.20343018]
[118.59776306 361.37539673]
[103.52726746 364.49404907]
[103.52726746 379.49404907]
[103.52726746 394.49404907]
[103.52726746 409.49404907]
[103.52726746 424.49404907]
[103.52726746 439.49404907]
[103.52726746 454.49404907]
[103.52726746 469.49404907]
[103.52726746 484.49404907]
[103.52726746 499.49404907]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[25 127]
[26 126]
[31 121]
[32 120]
[39 65]
[40 64]
[41 63]
[42 62]
[43 61]
[44 60]
[45 58]
[46 57]
[47 56]
[48 55]
[66 113]
[67 112]
[68 111]
[69 110]
[70 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
