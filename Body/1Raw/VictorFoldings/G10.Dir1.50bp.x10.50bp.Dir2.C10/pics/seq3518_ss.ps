%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACCCUCUACAUCACCGCCCCGACCUUAGCUCUCACCAUCGCUCUUCUACUAUGAACCCCxxxxxxxxxxUUAAUUCCCCUAAAAAUCUUUGAAAUAGGGCCCGUAUUUACCCUAUAGCACCCCCUCUACCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-4.12529039 244.72055054]
[-13.39023972 256.51718140]
[-22.65518951 268.31384277]
[-31.92013741 280.11047363]
[-34.35905457 295.74255371]
[-48.30516815 300.97277832]
[-57.57011795 312.76940918]
[-60.00903320 328.40151978]
[-73.95514679 333.63174438]
[-66.80253601 347.07644653]
[-65.74322510 362.26846313]
[-70.96076202 376.57571411]
[-81.55115509 387.51934814]
[-95.67957306 393.20333862]
[-110.89817810 392.64291382]
[-124.57024384 385.93511963]
[-134.32701111 374.24215698]
[-138.47805786 359.58990479]
[-136.30419922 344.51693726]
[-128.18206787 331.63473511]
[-115.51885223 323.17526245]
[-100.50855255 320.60412598]
[-85.75178528 324.36679077]
[-83.97555542 309.57846069]
[-69.36675262 303.50448608]
[-60.10180664 291.70782471]
[-58.32558060 276.91952515]
[-43.71677780 270.84552002]
[-34.45182800 259.04888916]
[-25.18688011 247.25224304]
[-15.92193031 235.45559692]
[-36.40555573 214.80261230]
[-53.25815201 191.09364319]
[-66.03112030 164.95983887]
[-74.38446045 137.09683228]
[-78.09579468 108.24633789]
[-77.06633759 79.17633057]
[-71.32350159 50.66064072]
[-85.55027771 45.90682602]
[-99.77705383 41.15300751]
[-111.22272491 51.39470673]
[-126.25908661 54.52573395]
[-140.84144592 49.70386505]
[-151.04721069 38.22615433]
[-154.13108826 23.18004990]
[-149.26353455 8.61287785]
[-137.75389099 -1.55686426]
[-122.69819641 -4.59356833]
[-108.14635468 0.31962404]
[-98.01274109 11.86108875]
[-95.02323914 26.92622948]
[-80.79646301 31.68004417]
[-66.56968689 36.43386078]
[-62.86729431 27.47167397]
[-58.68311691 18.72403908]
[-54.02952957 10.21683025]
[-48.92029953 1.97521591]
[-43.37053680 -5.97642565]
[-37.39666367 -13.61457157]
[-31.01634598 -20.91662788]
[-24.24846268 -27.86099243]
[-17.11303139 -34.42712402]
[-9.63116074 -40.59560013]
[-1.82498348 -46.34816742]
[6.28240824 -51.66781616]
[14.66703224 -56.53880692]
[23.30408478 -60.94673157]
[32.16801453 -64.87854767]
[41.23260498 -68.32262421]
[50.47103882 -71.26878357]
[59.85598373 -73.70829773]
[69.35968781 -75.63394928]
[78.95402527 -77.04005432]
[88.61061859 -77.92243958]
[98.30090332 -78.27851105]
[107.99622345 -78.10720062]
[117.66787720 -77.40901947]
[127.28727722 -76.18603516]
[136.82595825 -74.44186401]
[146.25569153 -72.18166351]
[155.54859924 -69.41212463]
[164.67718506 -66.14143372]
[173.61444092 -62.37927246]
[182.33393860 -58.13676834]
[190.80987549 -53.42646790]
[199.01718140 -48.26230621]
[206.93157959 -42.65956116]
[214.52966309 -36.63480759]
[221.78894043 -30.20586586]
[228.68795776 -23.39175415]
[235.20628357 -16.21262932]
[241.32464600 -8.68972874]
[247.02496338 -0.84530663]
[252.29034424 7.29743242]
[257.10522461 15.71440029]
[261.45535278 24.38069916]
[265.32791138 33.27069092]
[268.71136475 42.35808182]
[271.59573364 51.61598206]
[273.97253418 61.01701355]
[275.83465576 70.53336334]
[277.17666626 80.13687897]
[277.99453735 89.79914856]
[278.28588867 99.49160004]
[278.04983521 109.18555450]
[292.98413086 110.58786011]
[307.91842651 111.99016571]
[322.85275269 113.39246368]
[337.78704834 114.79476929]
[352.72137451 116.19707489]
[361.54510498 103.62579346]
[375.47909546 97.16517639]
[390.77514648 98.55309296]
[403.31869507 107.41619873]
[409.73562622 121.37036896]
[408.29977417 136.66200256]
[399.39736938 149.17771912]
[385.42315674 155.55085754]
[370.13610840 154.06707764]
[357.64837646 145.12550354]
[351.31906128 131.13137817]
[336.38473511 129.72908020]
[321.45043945 128.32676697]
[306.51614380 126.92446899]
[291.58181763 125.52216339]
[276.64752197 124.11986542]
[274.18609619 138.01731873]
[270.63308716 151.67651367]
[266.01074219 165.01187134]
[260.34805298 177.93981934]
[253.68049622 190.37931824]
[246.04983521 202.25242615]
[237.50390625 213.48474121]
[228.09628296 224.00587463]
[217.88589478 233.74987793]
[206.93672180 242.65570068]
[195.31741333 250.66752625]
[183.10076904 257.73513794]
[170.36334229 263.81427002]
[157.18496704 268.86679077]
[143.64820862 272.86105347]
[129.83793640 275.77203369]
[115.84066010 277.58148193]
[101.74411774 278.27807617]
[87.63664246 277.85742188]
[73.60665131 276.32217407]
[59.74205780 273.68191528]
[46.12975693 269.95324707]
[32.85504913 265.15951538]
[20.00112724 259.33078003]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 31]
[2 30]
[3 29]
[4 28]
[6 26]
[7 25]
[9 23]
[38 53]
[39 52]
[40 51]
[105 126]
[106 125]
[107 124]
[108 123]
[109 122]
[110 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
