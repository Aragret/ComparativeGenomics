%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCUCACCCCCACUGAUGUUCGCCGACCGUUGACUAUUCUCUACAAACCACAAAGACAUUxxxxxxxxxxAGCUAUUACCUAAAACAAUUUCACAGCACCAAAUCUCCACCUCCAUCAUCACCUCAACCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 303.76593018]
[92.50000000 288.76593018]
[92.50000000 273.76593018]
[92.50000000 258.76593018]
[92.50000000 243.76591492]
[92.50000000 228.76591492]
[92.50000000 213.76591492]
[92.50000000 198.76591492]
[92.50000000 183.76591492]
[92.50000000 168.76591492]
[78.30578613 165.68380737]
[65.06808472 159.70564270]
[53.37056351 151.09498596]
[43.72898102 140.23150635]
[36.56844330 127.59419250]
[32.20465851 113.74021912]
[30.83003235 99.28042603]
[32.50517654 84.85235596]
[37.15623093 71.09216309]
[44.57812881 58.60654449]
[54.44362259 47.94600296]
[66.31774139 39.58056641]
[79.67694855 33.87908173]
[93.93221283 31.09293175]
[94.24427032 16.09617805]
[94.55632782 1.09942448]
[94.86837769 -13.89732933]
[95.18043518 -28.89408302]
[80.23004150 -30.17650795]
[65.39401245 -32.42398071]
[50.73457718 -35.62707901]
[36.31322098 -39.77236557]
[22.19043350 -44.84245682]
[8.42545223 -50.81607819]
[-4.92398882 -57.66818237]
[-17.80189705 -65.37002563]
[-30.15425682 -73.88930511]
[-41.92925644 -83.19029236]
[-53.07751083 -93.23396301]
[-63.55225754 -103.97819519]
[-73.30956268 -115.37792969]
[-82.30849457 -127.38535309]
[-90.51131439 -139.95008850]
[-97.88362122 -153.01943970]
[-104.39447784 -166.53860474]
[-110.01659393 -180.45085144]
[-114.72637177 -194.69784546]
[-118.50406647 -209.21983337]
[-121.33382416 -223.95588684]
[-123.20378876 -238.84420776]
[-124.10610962 -253.82235718]
[-124.03699493 -268.82748413]
[-122.99674988 -283.79669189]
[-120.98973083 -298.66714478]
[-118.02434540 -313.37652588]
[-114.11304474 -327.86306763]
[-109.27223206 -342.06610107]
[-103.52221680 -355.92596436]
[-96.88710022 -369.38458252]
[-89.39472198 -382.38546753]
[-81.07651520 -394.87411499]
[-71.96735382 -406.79812622]
[-62.10546112 -418.10751343]
[-51.53219223 -428.75479126]
[-40.29189682 -438.69534302]
[-28.43172264 -447.88748169]
[-16.00141335 -456.29263306]
[-3.05310822 -463.87551880]
[10.35888290 -470.60437012]
[24.17830467 -476.45092773]
[38.34719467 -481.39071655]
[52.80612183 -485.40298462]
[67.49443817 -488.47091675]
[82.35054016 -490.58163452]
[97.31211853 -491.72631836]
[112.31640625 -491.90011597]
[127.30047607 -491.10229492]
[142.20149231 -489.33624268]
[156.95692444 -486.60937500]
[171.50491333 -482.93307495]
[185.78440857 -478.32281494]
[199.73554993 -472.79791260]
[213.29980469 -466.38153076]
[226.42027283 -459.10058594]
[239.04193115 -450.98562622]
[251.11184692 -442.07067871]
[262.57937622 -432.39312744]
[273.39642334 -421.99359131]
[283.51763916 -410.91567993]
[292.90054321 -399.20587158]
[301.50579834 -386.91323853]
[309.29730225 -374.08938599]
[316.24237061 -360.78808594]
[322.31188965 -347.06509399]
[327.48037720 -332.97802734]
[331.72616577 -318.58593750]
[335.03146362 -303.94921875]
[337.38238525 -289.12921143]
[338.76910400 -274.18814087]
[339.18572998 -259.18862915]
[338.63058472 -244.19360352]
[337.10598755 -229.26596069]
[334.61831665 -214.46832275]
[331.17800903 -199.86273193]
[326.79949951 -185.51046753]
[321.50112915 -171.47172546]
[315.30517578 -157.80538940]
[308.23754883 -144.56877136]
[300.32797241 -131.81739807]
[291.60958862 -119.60476685]
[282.11892700 -107.98208618]
[271.89587402 -96.99810791]
[260.98324585 -86.69890594]
[249.42684937 -77.12767792]
[237.27513123 -68.32456970]
[224.57907104 -60.32650375]
[211.39192200 -53.16702652]
[197.76899719 -46.87617111]
[183.76744080 -41.48031998]
[169.44596863 -37.00210571]
[154.86465454 -33.46031570]
[140.08467102 -30.86979866]
[125.16799164 -29.24142647]
[110.17719269 -28.58202744]
[109.86513519 -13.58527279]
[109.55307770 1.41148067]
[109.24102020 16.40823364]
[108.92896271 31.40498734]
[123.90063477 35.08650589]
[137.68499756 41.99273300]
[149.59727478 51.78058243]
[159.04571533 63.96383286]
[165.56094360 77.93724823]
[168.81929016 93.00667572]
[168.65892029 108.42350769]
[165.08776855 123.42189026]
[158.28324890 137.25674438]
[148.58340454 149.24078369]
[136.47007751 158.77870178]
[122.54502106 165.39666748]
[107.50000000 168.76591492]
[107.50000000 183.76591492]
[107.50000000 198.76591492]
[107.50000000 213.76591492]
[107.50000000 228.76591492]
[107.50000000 243.76591492]
[107.50000000 258.76593018]
[107.50000000 273.76593018]
[107.50000000 288.76593018]
[107.50000000 303.76593018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[24 128]
[25 127]
[26 126]
[27 125]
[28 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
