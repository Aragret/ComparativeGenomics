%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAGCAAUAAACGAAAGUUUAACUAAGCUAUACUAACCCCAGGGUUGGUCAAUUUCGUGCCAxxxxxxxxxxCCCUAACAAACUAGGAGGCGUCCUUGCCCUAUUACUAUCCAUCCUCAUCCUAGCAAUAAUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[155.41395569 361.78057861]
[155.41395569 346.78057861]
[155.41395569 331.78057861]
[155.41395569 316.78057861]
[155.41395569 301.78057861]
[155.41395569 286.78057861]
[155.41395569 271.78057861]
[155.41395569 256.78057861]
[155.41395569 241.78059387]
[155.41395569 226.78059387]
[151.75524902 212.23364258]
[144.65884399 199.01844788]
[137.56245422 185.80326843]
[124.72460175 178.25085449]
[125.01248169 162.43226624]
[117.91608429 149.21708679]
[110.81967926 136.00190735]
[103.72327423 122.78672028]
[70.88462830 112.87821960]
[74.76854706 68.21290588]
[60.11582565 65.00390625]
[45.46310043 61.79491043]
[30.81037521 58.58591461]
[16.15764999 55.37691879]
[1.50492489 52.16792297]
[-7.61099339 53.39096451]
[-13.41425323 48.73968887]
[-27.99800301 45.23052216]
[-39.42571259 51.29774094]
[-51.52965927 48.03189087]
[-57.92989349 37.72174072]
[-72.43852234 33.91388321]
[-86.94714355 30.10602379]
[-101.45577240 26.29816437]
[-115.96439362 22.49030685]
[-131.27667236 26.47087288]
[-141.62284851 15.75612259]
[-156.13146973 11.94826317]
[-165.98861694 23.60156822]
[-179.92927551 29.81613541]
[-195.18551636 29.35806274]
[-208.72821045 22.31829643]
[-217.86842346 10.09459019]
[-220.79139709 -4.88603115]
[-216.91674805 -19.64915466]
[-207.01379395 -31.26355171]
[-193.04876709 -37.42317581]
[-177.79444885 -36.90502548]
[-164.27958679 -29.81198311]
[-155.18756104 -17.55237770]
[-152.32360840 -2.56036186]
[-137.81498718 1.24749684]
[-123.54046631 -3.00543237]
[-112.15653992 7.98168087]
[-97.64791107 11.78953934]
[-83.13928986 15.59739876]
[-68.63066101 19.40525627]
[-54.12203598 23.21311569]
[-37.50271606 17.65948868]
[-24.48883629 30.64677238]
[-9.90508652 34.15594101]
[4.71392107 37.51519775]
[19.36664581 40.72419357]
[34.01937103 43.93318939]
[48.67209625 47.14218903]
[63.32482147 50.35118484]
[77.97754669 53.56018066]
[66.65704346 43.71913147]
[52.10699081 40.07277298]
[39.96814346 31.26093864]
[31.99368286 18.55629539]
[29.33533478 3.79373550]
[32.37703705 -10.89462948]
[40.67948532 -23.38740158]
[53.04357910 -31.88028908]
[67.68361664 -35.14668655]
[82.48517609 -32.71484375]
[95.31050873 -24.93597794]
[104.30729675 -12.93357086]
[108.17616272 1.55890644]
[106.35833740 16.44834900]
[99.11466980 29.58633614]
[98.60678864 44.57773590]
[106.23976135 31.66503716]
[113.87272644 18.75233841]
[121.50569916 5.83964109]
[117.32994080 -9.40301514]
[125.22789001 -23.09235001]
[140.51383972 -27.10672188]
[154.11891174 -19.06447792]
[157.97145081 -3.73693752]
[149.78581238 9.78234196]
[134.41839600 13.47261143]
[126.78542328 26.38530922]
[119.15245819 39.29800797]
[111.51948547 52.21070480]
[116.62883759 57.70110703]
[131.95689392 74.17230988]
[145.38435364 67.48623657]
[158.81179810 60.80015945]
[172.23924255 54.11408234]
[180.84158325 40.15228271]
[197.22406006 40.89162445]
[204.53378296 55.57154083]
[195.25114441 69.09059143]
[178.92532349 67.54153442]
[165.49787903 74.22760773]
[152.07041931 80.91368103]
[138.64297485 87.59976196]
[131.08061218 106.89561462]
[116.93846130 115.69031525]
[124.03485870 128.90550232]
[131.13127136 142.12068176]
[138.22766113 155.33586121]
[151.57308960 163.83352661]
[150.77763367 178.70686340]
[157.87403870 191.92205811]
[164.97044373 205.13723755]
[165.70706177 190.15533447]
[169.94309998 175.76588440]
[177.44139099 162.77452087]
[187.78213501 151.90856934]
[200.38638306 143.77636719]
[214.54849243 138.83320618]
[229.47557068 137.35585022]
[244.33189392 139.42700195]
[258.28570557 144.93070984]
[270.55581665 153.55883789]
[280.45523071 164.82832336]
[287.42974854 178.10823059]
[291.08889771 192.65509033]
[291.22778320 207.65443420]
[287.83862305 222.26655579]
[281.11120605 235.67332458]
[271.42214966 247.12419128]
[259.31390381 255.97804260]
[245.46440125 261.73916626]
[230.64897156 264.08505249]
[215.69709778 262.88436890]
[201.44589233 258.20428467]
[188.69322205 250.30686951]
[178.15304565 239.63426208]
[170.41395569 226.78059387]
[170.41395569 241.78059387]
[170.41395569 256.78057861]
[170.41395569 271.78057861]
[170.41395569 286.78057861]
[170.41395569 301.78057861]
[170.41395569 316.78057861]
[170.41395569 331.78057861]
[170.41395569 346.78057861]
[170.41395569 361.78057861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 118]
[12 117]
[13 116]
[15 114]
[16 113]
[17 112]
[18 111]
[20 67]
[21 66]
[22 65]
[23 64]
[24 63]
[25 62]
[27 61]
[28 60]
[31 58]
[32 57]
[33 56]
[34 55]
[35 54]
[37 52]
[38 51]
[83 96]
[84 95]
[85 94]
[86 93]
[98 109]
[99 108]
[100 107]
[101 106]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
