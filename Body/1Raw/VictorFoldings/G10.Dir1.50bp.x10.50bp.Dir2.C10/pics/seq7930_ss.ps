%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUACCCCCUCUAGAGCCCACUGUAAAGCUAACUUAGCAUUAACCUUUUAAGUUAAAGAUUAAxxxxxxxxxxCAUUGCCCCCACAAUCCUAGGCCUACCCGCCGCAGUACUGAUCAUUCUAUUUCCCCCUCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[21.39881516 235.10008240]
[13.24214935 247.68852234]
[5.08548355 260.27697754]
[-2.14621878 273.41860962]
[-8.41562366 287.04556274]
[-14.68502903 300.67254639]
[-20.95443535 314.29953003]
[-27.22383881 327.92651367]
[-25.17276382 344.19689941]
[-38.39954376 353.89144897]
[-53.29759598 347.03726196]
[-54.54108810 330.68530273]
[-40.85081863 321.65710449]
[-34.58141327 308.03012085]
[-28.31200790 294.40313721]
[-22.04260254 280.77618408]
[-15.77319813 267.14920044]
[-29.96737099 271.99948120]
[-44.01977921 266.75259399]
[-51.56166458 253.78649902]
[-49.17492676 238.97760010]
[-37.94127655 229.03752136]
[-22.95196915 228.47125244]
[-11.00038052 237.53544617]
[-7.50295544 252.12030029]
[0.65371007 239.53186035]
[8.81037617 226.94342041]
[-4.86796618 215.90034485]
[-17.21970749 203.39109802]
[-28.08859634 189.57394409]
[-37.33713913 174.62365723]
[-44.84833908 158.72937012]
[-50.52717972 142.09213257]
[-54.30182266 124.92243195]
[-56.12451553 107.43745422]
[-55.97220230 89.85839844]
[-70.87664795 88.16799927]
[-85.78109741 86.47760010]
[-100.68554688 84.78720093]
[-117.10515594 89.01006317]
[-125.70838928 74.40113831]
[-114.05200195 62.08996964]
[-98.99514771 69.88275146]
[-84.09069824 71.57315063]
[-69.18624878 73.26354980]
[-54.28180313 74.95394897]
[-42.65774918 36.13336945]
[-21.44447517 1.60579717]
[-32.63277054 -8.38529968]
[-43.82106781 -18.37639618]
[-55.00936508 -28.36749458]
[-66.19766235 -38.35858917]
[-81.64704132 -35.93976974]
[-95.00996399 -44.06173325]
[-99.97686768 -58.88954163]
[-94.20252991 -73.42195892]
[-80.41341400 -80.79721069]
[-65.12033081 -77.53294373]
[-55.54418945 -65.17043304]
[-56.20656586 -49.54688644]
[-45.01826859 -39.55578995]
[-33.82997131 -29.56469345]
[-22.64167404 -19.57359695]
[-11.45337772 -9.58249950]
[-3.82543230 -16.83518028]
[4.27334499 -23.55803108]
[12.80622768 -29.72056770]
[21.73451996 -35.29484177]
[31.01773262 -40.25557709]
[40.61376953 -44.58027267]
[50.47911453 -48.24932098]
[60.56902695 -51.24608231]
[70.83775330 -53.55696869]
[81.23872375 -55.17150116]
[91.72477722 -56.08235168]
[102.24835205 -56.28539276]
[112.76173401 -55.77970886]
[123.21724701 -54.56758881]
[133.56747437 -52.65452576]
[143.76547241 -50.04920197]
[153.76499939 -46.76342773]
[163.52072144 -42.81210709]
[172.98837280 -38.21315765]
[180.62135315 -51.12585449]
[188.25431824 -64.03855133]
[195.88728333 -76.95124817]
[191.71153259 -92.19390869]
[199.60948181 -105.88323975]
[214.89543152 -109.89761353]
[228.50050354 -101.85536957]
[232.35304260 -86.52783203]
[224.16740417 -73.00855255]
[208.79998779 -69.31828308]
[201.16702271 -56.40558243]
[193.53404236 -43.49288559]
[185.90107727 -30.58018494]
[200.96612549 -19.31479836]
[214.56871033 -6.32116795]
[226.51179504 8.21249676]
[236.62239075 24.07567787]
[244.75404358 41.03860474]
[258.90136719 36.05328369]
[273.04867554 31.06796074]
[279.64764404 16.70728111]
[294.49716187 11.29734898]
[308.78726196 18.04778290]
[314.03991699 32.95366669]
[307.13876343 47.17160797]
[292.17819214 52.26634979]
[278.03399658 45.21527863]
[263.88668823 50.20059967]
[249.73936462 55.18592072]
[252.04447937 63.76939392]
[253.85798645 72.47000885]
[255.17402649 81.25964355]
[255.98834229 90.10986328]
[256.29830933 98.99206543]
[256.10293579 107.87751770]
[255.40281677 116.73751068]
[254.20024109 125.54338074]
[252.49909973 134.26666260]
[250.30488586 142.87915039]
[247.62469482 151.35299683]
[244.46717834 159.66081238]
[240.84257507 167.77572632]
[236.76258850 175.67149353]
[232.24040222 183.32260132]
[227.29064941 190.70429993]
[221.92933655 197.79272461]
[216.17378235 204.56497192]
[210.04261780 210.99911499]
[203.55563354 217.07437134]
[196.73384094 222.77110291]
[189.59928894 228.07087708]
[182.17501831 232.95655823]
[174.48506165 237.41235352]
[166.55427551 241.42385864]
[158.40830994 244.97810364]
[150.07348633 248.06358337]
[141.57675171 250.67034912]
[132.94560242 252.78994751]
[124.20792389 254.41552734]
[115.39197540 255.54185486]
[106.52625275 256.16525269]
[97.63944244 256.28375244]
[88.76025391 255.89691162]
[79.91741180 255.00602722]
[71.13950348 253.61396790]
[62.45490265 251.72523499]
[53.89170074 249.34591675]
[45.47758102 246.48373413]
[37.23974228 243.14793396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[4 17]
[5 16]
[6 15]
[7 14]
[8 13]
[36 46]
[37 45]
[38 44]
[39 43]
[48 64]
[49 63]
[50 62]
[51 61]
[52 60]
[83 96]
[84 95]
[85 94]
[86 93]
[101 112]
[102 111]
[103 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
