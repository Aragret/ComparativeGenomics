%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUCCUAGUCCUCAUCGCCCUCCCAUCCCUACGCAUCCUUUACAUAACAGACGAGGUCAACGxxxxxxxxxxUGAGAACCAAAAUGAACGAAAAUCUGUUCGCUUCAUUCAUUGCCCCCACAAUCCUAGGCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-11.50747299 262.89785767]
[-24.23010254 253.41613770]
[-34.10580826 264.70642090]
[-43.98151398 275.99670410]
[-53.85721970 287.28698730]
[-63.73292923 298.57723999]
[-73.60863495 309.86752319]
[-83.48433685 321.15780640]
[-86.74635315 336.63909912]
[-100.94949341 341.12463379]
[-110.82519531 352.41491699]
[-120.70090485 363.70520020]
[-115.66941071 378.21655273]
[-118.58345032 393.29647827]
[-128.65914917 404.88851929]
[-143.18621826 409.87451172]
[-158.25692749 406.91320801]
[-169.81733704 396.80123901]
[-174.75776672 382.25860596]
[-171.74925232 367.19726562]
[-161.60107422 355.66857910]
[-147.04302979 350.77377319]
[-131.99118042 353.82949829]
[-122.11547852 342.53921509]
[-112.23976898 331.24893188]
[-109.68413544 316.57519531]
[-94.77462006 311.28210449]
[-84.89891052 299.99182129]
[-75.02320862 288.70153809]
[-65.14749908 277.41125488]
[-55.27179718 266.12100220]
[-45.39608765 254.83070374]
[-35.52038193 243.54042053]
[-45.08674622 233.86360168]
[-53.96376038 223.55075073]
[-62.10924530 212.65087891]
[-69.48450470 201.21577454]
[-76.05448914 189.29974365]
[-81.78798676 176.95944214]
[-86.65776062 164.25347900]
[-90.64066315 151.24223328]
[-93.71778107 137.98750305]
[-95.87448120 124.55229950]
[-97.10053253 111.00043488]
[-97.39009094 97.39630127]
[-96.74179840 83.80454254]
[-95.15872955 70.28973389]
[-92.64839935 56.91608429]
[-89.22274017 43.74714279]
[-84.89802551 30.84547234]
[-79.69480896 18.27237701]
[-73.63780975 6.08759308]
[-66.75580597 -5.65098524]
[-59.08149338 -16.88758469]
[-50.65134048 -27.56881714]
[-41.50539398 -37.64393234]
[-31.68711853 -47.06505966]
[-21.24315643 -55.78743744]
[-10.22313404 -63.76962280]
[-18.11961555 -76.52288055]
[-26.01609802 -89.27613831]
[-39.49502945 -99.55985260]
[-33.34454727 -115.35883331]
[-16.46036911 -113.82231140]
[-13.26284122 -97.17262268]
[-5.36635923 -84.41936493]
[2.53012347 -71.66610718]
[15.99053764 -78.63941193]
[29.94636726 -84.55924988]
[44.31531525 -89.39071655]
[59.01264191 -93.10532379]
[73.95168304 -95.68115234]
[89.04432678 -97.10302734]
[104.20158386 -97.36254883]
[119.33406067 -96.45819855]
[134.35252380 -94.39530182]
[149.16839600 -91.18602753]
[163.69432068 -86.84930420]
[177.84463501 -81.41069794]
[191.53588867 -74.90228271]
[204.68733215 -67.36244965]
[217.22143555 -58.83565521]
[229.06425476 -49.37218094]
[240.14596558 -39.02783585]
[250.40119934 -27.86362267]
[259.76950073 -15.94538021]
[268.19564819 -3.34338951]
[275.62988281 9.86803246]
[282.02841187 23.61097527]
[296.07040405 18.33623505]
[310.11236572 13.06149292]
[324.04309082 7.49955559]
[337.85665894 1.65276754]
[351.67025757 -4.19402075]
[365.48382568 -10.04080868]
[379.29742432 -15.88759708]
[393.11099243 -21.73438454]
[406.86383057 -27.72268105]
[420.55444336 -33.85185623]
[434.24508667 -39.98102951]
[447.93569946 -46.11020279]
[453.33425903 -60.96385574]
[467.68991089 -67.57382202]
[482.48565674 -62.01851273]
[488.94345093 -47.59380722]
[483.23202515 -32.85762024]
[468.73986816 -26.55267334]
[454.06488037 -32.41957855]
[440.37426758 -26.29040337]
[426.68362427 -20.16123009]
[412.99301147 -14.03205585]
[408.14321899 -8.39363098]
[398.95779419 -7.92080212]
[385.14419556 -2.07401395]
[371.33062744 3.77277422]
[357.51702881 9.61956215]
[343.70346069 15.46635056]
[329.88986206 21.31313896]
[327.28048706 25.38012505]
[322.06045532 27.81710434]
[315.38711548 27.10346985]
[301.34512329 32.37821198]
[287.30316162 37.65295410]
[291.70541382 52.89725113]
[294.86911011 68.44586945]
[296.77383423 84.19834137]
[297.40725708 100.05290222]
[296.76531982 115.90711975]
[294.85217285 131.65856934]
[291.68011475 147.20549011]
[287.26971436 162.44743347]
[281.64944458 177.28591919]
[274.85556030 191.62509155]
[266.93203735 205.37229919]
[257.93002319 218.43875122]
[247.90766907 230.74000549]
[236.92974854 242.19660950]
[225.06716919 252.73451233]
[212.39657593 262.28567505]
[198.99983215 270.78836060]
[184.96348572 278.18765259]
[170.37821960 284.43572998]
[155.33827209 289.49221802]
[139.94081116 293.32449341]
[124.28529358 295.90777588]
[108.47287750 297.22534180]
[92.60572815 297.26873779]
[76.78634644 296.03762817]
[61.11694336 293.54000854]
[45.69874573 289.79199219]
[30.63137245 284.81781006]
[16.01216125 278.64956665]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 33]
[3 32]
[4 31]
[5 30]
[6 29]
[7 28]
[8 27]
[10 25]
[11 24]
[12 23]
[59 67]
[60 66]
[61 65]
[89 123]
[90 122]
[91 121]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[98 111]
[99 110]
[100 109]
[101 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
