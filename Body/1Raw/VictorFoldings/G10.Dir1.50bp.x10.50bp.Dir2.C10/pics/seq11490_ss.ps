%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGACGCCUCAACCGCCUUUUCAUCAAUCGCCCACAUCACUCGAGACGUAAAUUAUGGCUGAxxxxxxxxxxUCACUCGAGACGUAAAUUAUGGCUGAAUCAUCCGCUACCUUCACGCCAAUGGCGCCUCAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[86.69287872 273.68981934]
[89.28387451 254.48208618]
[89.59593201 239.48533630]
[89.90798950 224.48857117]
[90.22003937 209.49182129]
[90.53209686 194.49507141]
[90.84415436 179.49832153]
[91.15621185 164.50155640]
[91.46826935 149.50480652]
[91.78032684 134.50805664]
[92.09237671 119.51129913]
[85.32426453 106.12501526]
[73.06189728 97.48590088]
[60.79953003 88.84678650]
[45.06177902 87.22386932]
[39.11357498 73.56853485]
[26.85120964 64.92942047]
[14.58884048 56.29030609]
[0.48691487 64.08179474]
[-16.13549042 63.70059967]
[-30.74516106 54.73295212]
[-39.09898376 39.17597198]
[-38.47030640 21.01312256]
[-52.79290390 16.55630875]
[-67.11550140 12.09949207]
[-81.61109924 8.24233246]
[-96.25460052 4.99150705]
[-110.89810181 1.74068117]
[-126.04712677 6.30329514]
[-136.79507446 -4.00839186]
[-151.94410706 0.55422205]
[-162.69206238 -9.75746536]
[-177.33555603 -13.00829124]
[-183.84725952 -11.36351013]
[-189.36080933 -13.04637814]
[-192.51458740 -16.71095848]
[-207.01019287 -20.56811714]
[-221.50578308 -24.42527580]
[-231.81729126 -13.11459732]
[-246.20796204 -7.90238428]
[-261.37094116 -9.98636723]
[-273.82186890 -18.88766098]
[-280.69961548 -32.56081390]
[-280.42373657 -47.86383438]
[-273.05761719 -61.28020477]
[-260.29394531 -69.72693634]
[-245.06570435 -71.26303101]
[-230.87225342 -65.53551483]
[-220.97512817 -53.86051559]
[-217.64862061 -38.92087173]
[-203.15303040 -35.06371307]
[-188.65744019 -31.20655441]
[-174.08473206 -27.65179253]
[-159.44122314 -24.40096664]
[-145.33959961 -29.19610214]
[-133.54425049 -18.65189362]
[-119.44261932 -23.44702911]
[-107.64727783 -12.90282059]
[-93.00377655 -9.65199471]
[-78.36027527 -6.40116882]
[-75.89131165 -7.85429096]
[-72.67990875 -8.38428497]
[-69.08704376 -7.69638729]
[-65.57595062 -5.63646793]
[-62.65868378 -2.22310519]
[-48.33608627 2.23371053]
[-34.01348877 6.69052601]
[-21.93350220 -2.20182347]
[-21.93350220 -17.20182419]
[-21.93350220 -32.20182419]
[-35.27463150 -39.81167603]
[-43.00959778 -53.08065796]
[-43.05774307 -68.43947601]
[-35.40610886 -81.75668335]
[-22.11294746 -89.45001984]
[-6.75405598 -89.45001984]
[6.53910398 -81.75668335]
[14.19073772 -68.43947601]
[14.14259529 -53.08065796]
[6.40762615 -39.81167603]
[-6.93350220 -32.20182419]
[-6.93350220 -17.20182419]
[-6.93350220 -2.20182347]
[9.57119083 2.36130309]
[21.44631004 13.83949661]
[26.20091057 29.01991844]
[23.22795677 44.02793884]
[35.49032593 52.66705322]
[47.75269318 61.30617142]
[62.61335373 62.31115341]
[69.43864441 76.58441162]
[81.70101166 85.22353363]
[93.96337891 93.86264801]
[94.04903412 89.42116547]
[96.15872192 84.81124115]
[100.32629395 80.80661774]
[106.31752777 78.17042542]
[113.64254761 77.56829071]
[121.59497070 79.48836517]
[129.31481934 84.17625427]
[144.30752563 84.64429474]
[159.30021667 85.11233521]
[174.29290771 85.58037567]
[189.28967285 85.89243317]
[204.28886414 86.04846954]
[219.28804016 86.20450592]
[234.28723145 86.36054230]
[241.00611877 72.65582275]
[253.01118469 63.23027039]
[267.91882324 59.95532990]
[282.76910400 63.48124313]
[294.61349487 73.10794067]
[301.10028076 86.92403412]
[300.94149780 102.18632507]
[294.16870117 115.86447906]
[282.12658691 125.24268341]
[267.20617676 128.45889282]
[252.36990356 124.87452698]
[240.56352234 115.20126343]
[234.13119507 101.35973358]
[219.13200378 101.20369720]
[204.13282776 101.04766083]
[189.13363647 100.89162445]
[182.36869812 103.98699951]
[173.82487488 100.57307434]
[158.83218384 100.10503387]
[143.83947754 99.63698578]
[128.84678650 99.16894531]
[123.40737152 104.33255005]
[136.34031677 111.93117523]
[149.27323914 119.52980042]
[163.34989929 124.71128845]
[171.08267212 137.56446838]
[169.06568909 152.42825317]
[158.18734741 162.75595093]
[143.23892212 163.99882507]
[130.80436707 155.60943604]
[126.36048889 141.28074646]
[119.44451904 127.97025299]
[112.52854919 114.65975189]
[107.08913422 119.82335663]
[106.77707672 134.82011414]
[106.46501923 149.81686401]
[106.15296173 164.81361389]
[105.84091187 179.81037903]
[105.52885437 194.80712891]
[105.21679688 209.80387878]
[104.90473938 224.80062866]
[104.59268188 239.79737854]
[104.28062439 254.79414368]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[11 141]
[12 93]
[13 92]
[14 91]
[16 89]
[17 88]
[18 87]
[23 67]
[24 66]
[25 65]
[26 60]
[27 59]
[28 58]
[30 56]
[32 54]
[33 53]
[36 52]
[37 51]
[38 50]
[68 83]
[69 82]
[70 81]
[100 128]
[101 127]
[102 126]
[103 125]
[104 123]
[105 122]
[106 121]
[107 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
