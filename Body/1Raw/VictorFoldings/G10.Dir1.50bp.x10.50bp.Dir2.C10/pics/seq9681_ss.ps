%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUAGCCCUACUAGUCUCAAUCUCCAACACAUAUGGCCUAGACUACGUACAUAACCUAAAxxxxxxxxxxACAAUCCCCUAUCUAGGCCUUCUUACGAGCCAAAACCUGCCCCUACUCCUCCUAGACCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[116.00164795 473.16619873]
[116.00164795 458.16619873]
[116.00164795 443.16619873]
[116.00164795 428.16619873]
[116.00164795 413.16619873]
[116.00164795 398.16619873]
[116.00164795 383.16619873]
[116.00164795 368.16619873]
[116.00164795 353.16619873]
[116.00164795 338.16619873]
[100.94326782 334.82531738]
[86.99294281 328.22839355]
[74.84531403 318.70050049]
[65.10600281 306.71276855]
[58.26143646 292.85900879]
[54.65454483 277.82635498]
[54.46758270 262.36123657]
[57.71292496 247.23220825]
[64.23228455 233.19180298]
[73.70446014 220.93911743]
[85.66112518 211.08499146]
[99.51000214 204.12152100]
[114.56420135 200.39755249]
[114.25214386 185.40080261]
[113.94008636 170.40403748]
[111.30122375 155.63798523]
[106.39967346 141.46142578]
[101.49812317 127.28487396]
[78.18783569 120.91271973]
[67.04595947 96.79508209]
[52.05326462 97.26312256]
[45.42420578 111.05856323]
[33.13648605 120.18383789]
[18.01373863 122.54201508]
[3.53105307 117.59121704]
[-6.98355150 106.46908569]
[-11.11389637 91.73142242]
[-7.91085958 76.76482391]
[1.88952553 65.00849915]
[16.03520203 59.16398239]
[31.27559662 60.57428741]
[44.10857773 68.91533661]
[51.58522034 82.27042389]
[66.57791901 81.80238342]
[76.20644379 70.30058289]
[74.02960968 55.45937729]
[71.85276794 40.61817169]
[69.67593384 25.77696419]
[67.49909973 10.93575954]
[65.32225800 -3.90544629]
[63.14542389 -18.74665260]
[60.96858597 -33.58785629]
[45.93901825 -33.70006943]
[31.10274124 -36.10533142]
[16.80753326 -40.74725723]
[3.38849759 -47.51703644]
[-8.83980656 -56.25597000]
[-19.59072876 -66.75921631]
[-28.61225319 -78.78054810]
[-35.69290161 -92.03818512]
[-40.66669083 -106.22133636]
[-43.41703415 -120.99753571]
[-43.87945557 -136.02040100]
[-42.04311371 -150.93778992]
[-37.95106125 -165.39999390]
[-31.69921303 -179.06802368]
[-23.43412971 -191.62145996]
[-13.34955120 -202.76603699]
[-1.68187690 -212.24052429]
[11.29538631 -219.82281494]
[25.27803421 -225.33515930]
[39.93829346 -228.64836121]
[54.93250275 -229.68473816]
[69.90917969 -228.41999817]
[84.51725006 -224.88380432]
[98.41427612 -219.15902710]
[111.27449799 -211.37988281]
[122.79644775 -201.72869873]
[132.71003723 -190.43174744]
[140.78288269 -177.75382996]
[146.82572937 -163.99212646]
[150.69694519 -149.46923828]
[152.30575562 -134.52561951]
[151.61447144 -119.51153564]
[148.63929749 -104.77896118]
[143.44996643 -90.67324066]
[136.16812134 -77.52503967]
[126.96446991 -65.64257050]
[116.05474854 -55.30436325]
[103.69470215 -46.75277328]
[90.17407227 -40.18825531]
[75.80979156 -35.76469421]
[77.98662567 -20.92348862]
[80.16346741 -6.08228302]
[82.34030151 8.75892258]
[84.51713562 23.60012817]
[86.69397736 38.44133377]
[88.87081146 53.28253937]
[91.04765320 68.12374115]
[102.48371124 67.70880127]
[113.12256622 71.18361664]
[121.71331787 77.95781708]
[127.30916595 87.06471252]
[129.37062073 97.29628754]
[127.81396484 107.36226654]
[123.00113678 116.05269623]
[115.67467499 122.38332367]
[120.57622528 136.55987549]
[125.47778320 150.73643494]
[129.09225464 136.17843628]
[137.63867188 123.85127258]
[150.00405884 115.36026764]
[164.57814026 111.81115723]
[179.46299744 113.66612244]
[192.72026062 120.68360901]
[202.62347412 131.94975281]
[207.88302612 145.99743652]
[207.81396484 160.99726868]
[202.42529297 174.99592590]
[192.41874695 186.17041016]
[179.09744263 193.06552124]
[164.19612122 194.78335571]
[149.65534973 191.10020447]
[137.36866760 182.49569702]
[128.93684387 170.09197998]
[129.24890137 185.08874512]
[129.56095886 200.08549500]
[143.89607239 202.90747070]
[157.32002258 208.65888977]
[169.24168396 217.08372498]
[179.13665771 227.80827332]
[186.57032776 240.35775757]
[191.21697998 254.17730713]
[192.87406921 268.65652466]
[191.47102356 283.15649414]
[187.07225037 297.03778076]
[179.87420654 309.68890381]
[170.19660950 320.55307007]
[158.46823120 329.15270996]
[145.20793152 335.11059570]
[131.00164795 338.16619873]
[131.00164795 353.16619873]
[131.00164795 368.16619873]
[131.00164795 383.16619873]
[131.00164795 398.16619873]
[131.00164795 413.16619873]
[131.00164795 428.16619873]
[131.00164795 443.16619873]
[131.00164795 458.16619873]
[131.00164795 473.16619873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[23 127]
[24 126]
[25 125]
[26 109]
[27 108]
[28 107]
[30 44]
[31 43]
[45 99]
[46 98]
[47 97]
[48 96]
[49 95]
[50 94]
[51 93]
[52 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
