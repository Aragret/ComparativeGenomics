%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAUGUCUCCAUACCCAUUACAAUCUCCAGCAUUCCCCCUCAAACCUAAGAAAUAUGUCUGxxxxxxxxxxUCAACUACCUAACCAACAAACUUAAAAUAAAAUCCCCACUAUGCACAUUUUAUUUCUCCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[188.94117737 58.87393570]
[175.84802246 66.19303894]
[162.75488281 73.51214600]
[149.66172791 80.83125305]
[136.56857300 88.15036011]
[123.47541046 95.46945953]
[110.38225555 102.78856659]
[98.88045502 112.41709137]
[89.37209320 124.01843262]
[79.86373901 135.61978149]
[70.35537720 147.22111511]
[60.84701920 158.82246399]
[51.33866119 170.42379761]
[41.83030319 182.02514648]
[39.70484161 198.28596497]
[24.45810509 204.32493591]
[11.77463150 193.92967224]
[14.70209026 177.79393005]
[30.22896194 172.51678467]
[39.73731995 160.91543579]
[49.24567795 149.31410217]
[58.75403595 137.71275330]
[68.26239777 126.11141968]
[77.77075195 114.51007843]
[87.27911377 102.90873718]
[73.09080505 107.77616119]
[58.09447861 108.10814667]
[43.70466232 103.87338257]
[31.27867889 95.47130585]
[21.98860359 83.69444275]
[16.71072388 69.65364075]
[15.94287395 54.67330933]
[19.75748253 40.16645813]
[27.79473495 27.50144386]
[39.29652023 17.87289429]
[53.17793274 12.18902302]
[68.12960815 10.98595905]
[82.74123383 14.37718201]
[95.63456726 22.04281425]
[105.59345245 33.25979614]
[111.67850494 46.97008896]
[113.31576538 61.88046646]
[110.35079956 76.58451080]
[103.06314850 89.69541168]
[116.15630341 82.37631226]
[129.24946594 75.05720520]
[142.34262085 67.73809814]
[155.43577576 60.41899109]
[168.52893066 53.09988785]
[181.62208557 45.78078079]
[175.11264038 32.26160812]
[169.43948364 18.37074089]
[164.62373352 4.15985203]
[160.68328857 -10.31819248]
[157.63281250 -25.00953293]
[155.48365784 -39.85951614]
[154.24383545 -54.81290054]
[153.91792297 -69.81405640]
[154.50714111 -84.80717468]
[156.00932312 -99.73648834]
[158.41885376 -114.54644775]
[161.72679138 -129.18197632]
[165.92080688 -143.58860779]
[170.98530579 -157.71275330]
[176.90145874 -171.50187683]
[183.64724731 -184.90467834]
[191.19758606 -197.87130737]
[199.52436829 -210.35351562]
[208.59664917 -222.30487061]
[218.38064575 -233.68090820]
[228.83996582 -244.43930054]
[239.93571472 -254.54005432]
[251.62661743 -263.94558716]
[263.86917114 -272.62088013]
[276.61782837 -280.53369141]
[289.82516479 -287.65457153]
[303.44207764 -293.95700073]
[317.41787720 -299.41760254]
[331.70056152 -304.01602173]
[346.23703003 -307.73513794]
[360.97320557 -310.56115723]
[375.85424805 -312.48352051]
[390.82479858 -313.49508667]
[405.82916260 -313.59213257]
[420.81155396 -312.77426147]
[435.71621704 -311.04452515]
[450.48770142 -308.40933228]
[465.07107544 -304.87854004]
[479.41204834 -300.46524048]
[493.45730591 -295.18585205]
[507.15457153 -289.06005859]
[520.45288086 -282.11059570]
[533.30285645 -274.36334229]
[545.65655518 -265.84710693]
[557.46813965 -256.59356689]
[568.69360352 -246.63717651]
[579.29119873 -236.01495361]
[589.22149658 -224.76640320]
[598.44757080 -212.93339539]
[606.93511963 -200.55992126]
[614.65252686 -187.69203186]
[621.57110596 -174.37760925]
[627.66510010 -160.66615295]
[632.91186523 -146.60867310]
[637.29187012 -132.25749207]
[640.78881836 -117.66598511]
[643.38970947 -102.88842010]
[645.08483887 -87.97978973]
[645.86791992 -72.99554443]
[645.73608398 -57.99142838]
[644.68975830 -43.02326202]
[642.73284912 -28.14672279]
[639.87261963 -13.41715813]
[636.11975098 1.11063981]
[631.48822021 15.38262558]
[625.99517822 29.34570694]
[619.66113281 42.94793701]
[612.50964355 56.13871765]
[604.56726074 68.86898041]
[595.86358643 81.09135437]
[586.43090820 92.76039124]
[576.30444336 103.83266449]
[565.52178955 114.26699066]
[554.12310791 124.02455902]
[542.15069580 133.06906128]
[529.64923096 141.36685181]
[516.66510010 148.88706970]
[503.24667358 155.60173035]
[489.44384766 161.48585510]
[475.30798340 166.51756287]
[460.89163208 170.67813110]
[446.24847412 173.95207214]
[431.43295288 176.32722473]
[416.50021362 177.79473877]
[401.50576782 178.34916687]
[386.50540161 177.98843384]
[371.55493164 176.71389771]
[356.70999146 174.53027344]
[342.02575684 171.44570923]
[327.55691528 167.47167969]
[313.35723877 162.62294006]
[299.47958374 156.91757202]
[285.97555542 150.37675476]
[272.89538574 143.02485657]
[260.28778076 134.88920593]
[248.19958496 126.00007629]
[236.67579651 116.39053345]
[225.75929260 106.09632874]
[215.49066162 95.15575409]
[205.90812683 83.60951996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 50]
[2 49]
[3 48]
[4 47]
[5 46]
[6 45]
[7 44]
[8 25]
[9 24]
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
