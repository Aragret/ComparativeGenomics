%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAGCCCCCAUCGCUGGGUCAAUAGUACUUGCCGCAGUACUCUUAAAACUAGGCGGCUAUGxxxxxxxxxxCAAAAUUCAGAAUAAUAACACACCCGACCACACCGCUAACAAUCAAUACUAAACCCCCAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[35.02153778 354.48107910]
[22.38613510 350.91613770]
[9.94466114 346.72424316]
[-2.27179861 341.91589355]
[-14.23271942 336.50308228]
[-21.13971901 349.81823730]
[-28.04671669 363.13339233]
[-34.95371628 376.44854736]
[-41.86071396 389.76370239]
[-40.58158875 406.11288452]
[-54.25215149 415.17089844]
[-68.80929565 407.61965942]
[-69.27788544 391.22720337]
[-55.17586899 382.85671997]
[-48.26887131 369.54156494]
[-41.36187363 356.22640991]
[-34.45487213 342.91122437]
[-27.54787445 329.59606934]
[-44.58944702 319.26403809]
[-60.79855347 307.66955566]
[-76.08186340 294.87945557]
[-90.35138702 280.96731567]
[-103.52497101 266.01327515]
[-115.52676392 250.10342407]
[-126.28766632 233.32934570]
[-135.74572754 215.78762817]
[-143.84648132 197.57926941]
[-150.54330444 178.80909729]
[-155.79762268 159.58518982]
[-159.57920837 140.01821899]
[-161.86625671 120.22084808]
[-162.64562988 100.30705261]
[-161.91282654 80.39149475]
[-159.67205811 60.58882523]
[-155.93624878 41.01306915]
[-150.72688293 21.77692604]
[-144.07397461 2.99115062]
[-136.01580811 -15.23609924]
[-126.59879303 -32.79988098]
[-115.87714386 -49.59907150]
[-127.95713043 -58.49142075]
[-140.03712463 -67.38376617]
[-152.11711121 -76.27612305]
[-164.19709778 -85.16847229]
[-176.45945740 -93.80758667]
[-188.89889526 -102.18972778]
[-201.33834839 -110.57186890]
[-215.46664429 -104.37553406]
[-230.69851685 -106.82374573]
[-242.17350769 -117.13528442]
[-246.23001099 -132.01979065]
[-241.57360840 -146.72766113]
[-229.69012451 -156.56565857]
[-214.37155151 -158.39453125]
[-200.50598145 -151.63069153]
[-192.51786804 -138.43244934]
[-192.95620728 -123.01131439]
[-180.51675415 -114.62916565]
[-168.07731628 -106.24702454]
[-163.24261475 -106.28163147]
[-158.34863281 -103.23529816]
[-155.30474854 -97.24845886]
[-143.22476196 -88.35610962]
[-131.14477539 -79.46376038]
[-119.06478119 -70.57141113]
[-106.98479462 -61.67905807]
[-98.64699554 -71.82022858]
[-89.81285858 -81.53208923]
[-80.50444794 -90.79036713]
[-70.74502563 -99.57193756]
[-60.55897903 -107.85484314]
[-49.97175217 -115.61840057]
[-39.00980377 -122.84320831]
[-27.70052147 -129.51121521]
[-16.07216263 -135.60575867]
[-4.15378332 -141.11161804]
[8.02483654 -146.01502991]
[20.43326950 -150.30372620]
[33.04050827 -153.96702576]
[45.81505585 -156.99574280]
[58.72498703 -159.38233948]
[71.73805237 -161.12081909]
[84.82173157 -162.20686340]
[97.94333649 -162.63775635]
[111.07008362 -162.41241455]
[124.16916656 -161.53140259]
[137.20785522 -159.99691772]
[150.15359497 -157.81280518]
[162.97399902 -154.98449707]
[175.63705444 -151.51910400]
[188.11112976 -147.42524719]
[200.36505127 -142.71316528]
[212.36819458 -137.39462280]
[224.09057617 -131.48294067]
[235.50289917 -124.99285889]
[246.57664490 -117.94061279]
[257.28414917 -110.34380341]
[267.59866333 -102.22143555]
[277.49441528 -93.59378052]
[286.94668579 -84.48241425]
[295.93182373 -74.91009521]
[304.42739868 -64.90074158]
[312.41220093 -54.47936249]
[319.86627197 -43.67199707]
[326.77096558 -32.50564957]
[333.10906982 -21.00821877]
[338.86468506 -9.20843410]
[344.02349854 2.86422133]
[348.57257080 15.17958260]
[352.50054932 27.70687675]
[355.79763794 40.41480637]
[358.45556641 53.27161407]
[360.46771240 66.24518585]
[361.82907104 79.30309296]
[362.53619385 92.41271210]
[362.58734131 105.54129028]
[361.98239136 118.65602112]
[360.72283936 131.72413635]
[358.81182861 144.71299744]
[356.25418091 157.59011841]
[353.05621338 170.32336426]
[349.22595215 182.88087463]
[344.77297974 195.23132324]
[339.70843506 207.34381104]
[334.04492188 219.18807983]
[327.79663086 230.73454285]
[320.97915649 241.95436096]
[313.60952759 252.81948853]
[305.70617676 263.30276489]
[297.28884888 273.37802124]
[288.37854004 283.02005005]
[278.99758911 292.20480347]
[269.16937256 300.90930176]
[258.91845703 309.11181641]
[248.27046204 316.79180908]
[237.25199890 323.93014526]
[225.89059448 330.50894165]
[214.21464539 336.51181030]
[202.25331116 341.92370605]
[190.03648376 346.73114014]
[177.59468079 350.92205811]
[164.95901489 354.48605347]
[152.16102600 357.41415405]
[139.23271179 359.69909668]
[126.20637512 361.33511353]
[113.11455536 362.31817627]
[99.98995972 362.64581299]
[86.86539459 362.31716919]
[73.77365112 361.33312988]
[60.74743652 359.69607544]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 18]
[6 17]
[7 16]
[8 15]
[9 14]
[40 66]
[41 65]
[42 64]
[43 63]
[44 62]
[45 59]
[46 58]
[47 57]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
