%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUGACUCGCCACACUCCACGGAAGCAAUAUGAAAUGAUCUGCUGCAGUGCUCUGAGCCCUxxxxxxxxxxGGCCUCCUCCUAGCAGCAGCAGGCAAAUCAGCCCAAUUAGGUCUCCACCCCUGACUCCCCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[204.61511230 356.26687622]
[203.67947388 341.29608154]
[202.74385071 326.32531738]
[201.80822754 311.35452271]
[200.87258911 296.38372803]
[199.93696594 281.41293335]
[199.00134277 266.44213867]
[194.09979248 252.26557922]
[185.58869934 239.91400146]
[177.07760620 227.56243896]
[168.56651306 215.21086121]
[160.05541992 202.85928345]
[151.54432678 190.50772095]
[143.03324890 178.15614319]
[128.16369629 177.96980286]
[116.11257935 168.95678711]
[111.62699890 154.40573120]
[116.62742615 139.83515930]
[108.11633301 127.48358154]
[99.60523987 115.13201141]
[100.25515747 130.11791992]
[97.93197632 144.93692017]
[92.72724152 159.00500488]
[84.84608459 171.76773071]
[74.59909058 182.72213745]
[62.39009476 191.43652344]
[48.70024872 197.56744385]
[34.06906509 200.87327576]
[19.07316208 201.22373962]
[4.30351734 198.60504150]
[-9.65779781 193.12036133]
[-22.26057243 184.98587036]
[-33.00813293 174.52212524]
[-41.47692108 162.14151001]
[-47.33318710 148.33193970]
[-50.34613037 133.63764954]
[-50.39701843 118.63773346]
[-47.48384094 103.92333984]
[-41.72140884 90.07435608]
[-33.33681488 77.63656616]
[-22.66049576 67.10014343]
[-10.11320210 58.88032532]
[3.81057930 53.30104828]
[18.56211662 50.58219528]
[33.56005478 50.83091354]
[48.21332932 54.03740311]
[61.94445419 60.07529449]
[74.21229553 68.70663452]
[84.53337860 79.59127045]
[92.50000000 92.29831696]
[92.50000000 77.29831696]
[92.50000000 62.29832077]
[92.50000000 47.29832077]
[92.50000000 32.29832077]
[92.50000000 17.29832077]
[89.48308563 11.29784393]
[89.93104553 5.55061579]
[92.82504272 1.67758965]
[93.44902039 -13.30942631]
[94.07299805 -28.29644203]
[94.69697571 -43.28345871]
[84.27497101 -54.86014557]
[85.12126923 -70.05022430]
[96.22209167 -79.91466522]
[96.84606934 -94.90167999]
[96.84606934 -109.90167999]
[96.22209167 -124.88869476]
[95.59812164 -139.87571716]
[81.56262207 -145.87301636]
[71.52567291 -157.37181091]
[67.48011780 -172.08901978]
[70.22920227 -187.10252380]
[79.22709656 -199.43138123]
[92.68725586 -206.62768555]
[107.93716431 -207.26260376]
[121.94893646 -201.21008301]
[131.94052124 -189.67184448]
[135.92808533 -174.93882751]
[133.11990356 -159.93626404]
[124.07353210 -147.64292908]
[110.58513641 -140.49969482]
[111.20911407 -125.51267242]
[111.83309174 -110.52565765]
[113.87222290 -108.51338196]
[115.21018982 -105.54625702]
[115.46930695 -101.89731598]
[114.38151550 -97.97459412]
[111.83309174 -94.27770233]
[111.20911407 -79.29068756]
[121.45153809 -68.53762817]
[121.03223419 -53.32977295]
[109.68399048 -42.65948105]
[109.06001282 -27.67246437]
[108.43603516 -12.68544960]
[107.81205750 2.30156708]
[107.50000000 17.29832077]
[107.50000000 32.29832077]
[107.50000000 47.29832077]
[107.50000000 62.29832077]
[107.50000000 77.29831696]
[107.50000000 92.29831696]
[111.95681763 106.62091827]
[120.46790314 118.97248840]
[128.97898865 131.32406616]
[144.37509155 131.84002686]
[156.37496948 141.21321106]
[160.50575256 155.68388367]
[155.38481140 169.64505005]
[163.89590454 181.99662781]
[172.40699768 194.34820557]
[180.91809082 206.69976807]
[189.42918396 219.05134583]
[197.94026184 231.40292358]
[206.45135498 243.75448608]
[205.65034485 228.77589417]
[208.13984680 213.98391724]
[213.79971313 200.09269714]
[222.35665894 187.77285767]
[233.39759827 177.61915588]
[246.38949585 170.12179565]
[260.70513916 165.64273071]
[275.65344238 164.39817810]
[290.51269531 166.44825745]
[304.56552124 171.69396973]
[317.13354492 179.88208008]
[327.60995483 190.61726379]
[335.48904419 203.38128662]
[340.39038086 217.55792236]
[342.07733154 232.46276855]
[340.46850586 247.37623596]
[335.64154053 261.57836914]
[327.82946777 274.38351440]
[317.40945435 285.17346191]
[304.88452148 293.42730713]
[290.85937500 298.74661255]
[276.01107788 300.87451172]
[261.05645752 299.70834351]
[246.71752930 295.30435181]
[233.68652344 287.87518311]
[222.59251404 277.77951050]
[213.97212219 265.50650024]
[214.90776062 280.47729492]
[215.84338379 295.44808960]
[216.77900696 310.41888428]
[217.71464539 325.38967896]
[218.65026855 340.36047363]
[219.58589172 355.33126831]
[229.10122681 368.68756104]
[222.04678345 383.49182129]
[205.67956543 384.51473999]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 147]
[2 146]
[3 145]
[4 144]
[5 143]
[6 142]
[7 141]
[8 114]
[9 113]
[10 112]
[11 111]
[12 110]
[13 109]
[14 108]
[18 104]
[19 103]
[20 102]
[50 101]
[51 100]
[52 99]
[53 98]
[54 97]
[55 96]
[58 95]
[59 94]
[60 93]
[61 92]
[64 89]
[65 88]
[66 83]
[67 82]
[68 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
