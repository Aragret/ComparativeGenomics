%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCACCCAAGAACAGGGUUUGUUAAGAUGGCAGAGCCCGGUAAUCGCAUAAAACUUAAAACUxxxxxxxxxxUUCUAAUUUAAACUAUUCUCUGUUCUUUCAUGGGGAAGCAGAUUUGGGUACCACCCAAGUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[338.92010498 545.17712402]
[338.92010498 530.17712402]
[338.92010498 515.17712402]
[338.92010498 500.17712402]
[338.92010498 485.17712402]
[338.92010498 470.17712402]
[338.92010498 455.17712402]
[338.92010498 440.17712402]
[338.92010498 425.17712402]
[338.92010498 410.17712402]
[336.77151489 395.33181763]
[332.51867676 380.94732666]
[328.26580811 366.56283569]
[322.56115723 352.68997192]
[315.46475220 339.47479248]
[308.36834717 326.25961304]
[301.27194214 313.04440308]
[293.63897705 300.13171387]
[285.48229980 287.54327393]
[277.32565308 274.95483398]
[269.16897583 262.36639404]
[261.01232910 249.77796936]
[252.85565186 237.18952942]
[244.69898987 224.60108948]
[235.90715027 212.44775391]
[226.50328064 200.76153564]
[217.09942627 189.07533264]
[207.69557190 177.38912964]
[198.29171753 165.70291138]
[188.88786316 154.01670837]
[177.10571289 144.73332214]
[163.54382324 138.32434082]
[149.98193359 131.91537476]
[136.42002869 125.50639343]
[122.85813141 119.09741974]
[105.15330505 131.83480835]
[81.74316406 129.52355957]
[64.51410675 111.08056641]
[49.69161987 108.77969360]
[34.86914062 106.47882080]
[18.28999710 110.02400970]
[10.29378891 95.07419586]
[22.44578934 83.25196075]
[37.17001343 91.65634155]
[51.99249649 93.95721436]
[66.81497955 96.25808716]
[71.80030060 82.11077118]
[58.80992126 74.61077118]
[43.00373840 77.35742950]
[31.09741020 66.60480499]
[32.22445297 50.60139084]
[45.52029800 41.62363434]
[60.78550720 46.55850601]
[66.30992126 61.62039185]
[79.30030060 69.12039185]
[89.39058685 65.33528137]
[99.87733459 64.67198944]
[109.84005737 67.03267670]
[118.44882202 72.06066895]
[125.03333282 79.18418884]
[129.13461304 87.67739868]
[130.53536987 96.73244476]
[129.26710510 105.53552246]
[142.82901001 111.94449615]
[156.39089966 118.35347748]
[169.95280457 124.76245117]
[183.51469421 131.17143250]
[175.18936157 118.69389343]
[170.30841064 104.51023102]
[169.19235229 89.55181122]
[171.91448975 74.80088043]
[178.29605103 61.22605896]
[187.91799927 49.71875381]
[200.14849854 41.03459167]
[214.18444824 35.74381638]
[229.10415649 34.19385529]
[243.92791748 36.48648453]
[257.68231201 42.47115326]
[269.46417236 51.75488281]
[278.49984741 63.72805023]
[284.19598389 77.60443878]
[286.17855835 92.47283936]
[284.31735229 107.35692596]
[278.73461914 121.27931976]
[269.79693604 133.32580566]
[258.09121704 142.70535278]
[244.38609314 148.80204773]
[229.58152771 151.21554565]
[214.64967346 149.78735352]
[200.57406616 144.61285400]
[209.97792053 156.29905701]
[219.38177490 167.98527527]
[228.78564453 179.67147827]
[238.18949890 191.35768127]
[247.59335327 203.04389954]
[252.11817932 188.74263000]
[266.04367065 183.16766357]
[279.18746948 190.39543152]
[281.93878174 205.14094543]
[272.28579712 216.62223816]
[257.28741455 216.44441223]
[265.44409180 229.03285217]
[273.60076904 241.62129211]
[281.75741577 254.20973206]
[289.91409302 266.79818726]
[298.07073975 279.38662720]
[306.22741699 291.97506714]
[310.29492188 293.86053467]
[313.22259521 296.68054199]
[314.85482788 299.94894409]
[315.21459961 303.18002319]
[314.48712158 305.94802856]
[321.58352661 319.16320801]
[328.67993164 332.37838745]
[335.77633667 345.59356689]
[338.44342041 330.83258057]
[348.02960205 319.29547119]
[362.05239868 313.96994019]
[376.88037109 316.23510742]
[388.67361450 325.50439453]
[394.37802124 339.37738037]
[392.51641846 354.26141357]
[383.57083130 366.30203247]
[369.85791016 372.38116455]
[354.92883301 370.92449951]
[342.65029907 362.30999756]
[346.90313721 376.69448853]
[351.15600586 391.07894897]
[355.56311035 376.74099731]
[365.04013062 365.11404419]
[378.19482422 357.90612793]
[393.09472656 356.17611694]
[407.55099487 360.17819214]
[419.43994141 369.32437134]
[427.01504517 382.27111816]
[429.16348267 397.11645508]
[425.56967163 411.67956543]
[416.76153564 423.82110596]
[404.03298950 431.75738525]
[389.25396729 434.32257080]
[374.59552002 431.13983154]
[362.21102905 422.67672729]
[353.92010498 410.17712402]
[353.92010498 425.17712402]
[353.92010498 440.17712402]
[353.92010498 455.17712402]
[353.92010498 470.17712402]
[353.92010498 485.17712402]
[353.92010498 500.17712402]
[353.92010498 515.17712402]
[353.92010498 530.17712402]
[353.92010498 545.17712402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 128]
[12 127]
[13 126]
[14 115]
[15 114]
[16 113]
[17 112]
[18 107]
[19 106]
[20 105]
[21 104]
[22 103]
[23 102]
[24 101]
[25 95]
[26 94]
[27 93]
[28 92]
[29 91]
[30 90]
[31 67]
[32 66]
[33 65]
[34 64]
[35 63]
[38 46]
[39 45]
[40 44]
[47 55]
[48 54]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
