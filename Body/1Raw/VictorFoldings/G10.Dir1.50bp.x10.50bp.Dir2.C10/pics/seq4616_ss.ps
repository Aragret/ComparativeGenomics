%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCAUCCUAAAGUAAGGUCAGCUAAAUAAGCUAUCGGGCCCAUACCCCGAAAAUGUUGGUxxxxxxxxxxACGUUAUCGUCACAGCCCAUGCAUUUGUAAUAAUCUUCUUCAUAGUAAUACCCAUCAUAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-73.03378296 169.81375122]
[-87.15858459 174.86250305]
[-101.28338623 179.91125488]
[-115.40818787 184.96002197]
[-125.79891968 196.89077759]
[-140.38784790 193.88871765]
[-150.77857971 205.81948853]
[-165.36750793 202.81742859]
[-179.49230957 207.86618042]
[-193.61712646 212.91494751]
[-207.74192810 217.96369934]
[-221.86672974 223.01245117]
[-235.99153137 228.06120300]
[-250.06304932 233.25662231]
[-264.07977295 238.59814453]
[-277.09606934 246.05305481]
[-288.79568481 255.44021606]
[-300.49533081 264.82736206]
[-301.96878052 280.56283569]
[-314.19049072 290.58309937]
[-329.90948486 288.94332886]
[-339.79998779 276.61639404]
[-337.99411011 260.91561890]
[-325.56329346 251.15599060]
[-309.88247681 253.12774658]
[-298.18286133 243.74058533]
[-286.48324585 234.35342407]
[-289.22674561 227.37322998]
[-294.71377563 213.41284180]
[-297.45730591 206.43264771]
[-312.41754150 207.52395630]
[-327.37780762 208.61526489]
[-342.33804321 209.70657349]
[-353.87258911 220.85708618]
[-369.76287842 218.64842224]
[-377.81924438 204.77490234]
[-371.86154175 189.87910461]
[-356.45999146 185.38778687]
[-343.42935181 194.74632263]
[-328.46911621 193.65501404]
[-313.50885010 192.56370544]
[-298.54861450 191.47239685]
[-269.42126465 224.58142090]
[-255.40455627 219.23991394]
[-250.24078369 213.88444519]
[-241.04028320 213.93640137]
[-226.91548157 208.88764954]
[-212.79067993 203.83889771]
[-198.66587830 198.79013062]
[-184.54107666 193.74137878]
[-170.41627502 188.69262695]
[-161.03584290 177.12297058]
[-145.43661499 179.76391602]
[-136.05618286 168.19427490]
[-120.45694733 170.83520508]
[-106.33214569 165.78645325]
[-92.20734406 160.73770142]
[-78.08253479 155.68894958]
[-82.66986847 138.03112793]
[-85.51080322 120.00971985]
[-86.57818604 101.79701996]
[-85.86180115 83.56713104]
[-83.36850739 65.49434662]
[-79.12213135 47.75145340]
[-73.16327667 30.50807571]
[-65.54891205 13.92906857]
[-56.35183716 -1.82706559]
[-45.65997314 -16.60969162]
[-33.57554245 -30.27748299]
[-20.21407700 -42.69976807]
[-5.70331526 -53.75778961]
[9.81801224 -63.34582138]
[26.20151520 -71.37220764]
[43.29056168 -77.76020050]
[60.92177200 -82.44873810]
[78.92658997 -85.39299011]
[97.13287354 -86.56481171]
[115.36656952 -85.95299530]
[133.45335388 -83.56340027]
[151.22032166 -79.41886139]
[168.49758911 -73.55900574]
[174.56059265 -87.27906036]
[180.62361145 -100.99911499]
[178.32719421 -117.23667908]
[191.40614319 -127.12976837]
[206.40596008 -120.50122070]
[207.89610291 -104.16991425]
[194.34365845 -94.93610382]
[188.28065491 -81.21604919]
[182.21763611 -67.49599457]
[197.27450562 -59.22411346]
[211.50675964 -49.60244751]
[224.79373169 -38.71256256]
[237.02278137 -26.64677048]
[248.09027100 -13.50735950]
[260.35263062 -22.14647675]
[266.74545288 -37.24826813]
[283.05139160 -38.99402618]
[292.49633789 -25.58786774]
[285.36413574 -10.82089710]
[268.99176025 -9.88410759]
[256.72937012 -1.24499154]
[263.12283325 9.41530228]
[268.79229736 20.47763824]
[273.71261597 31.89292145]
[277.86193848 43.61048126]
[281.22186279 55.57831955]
[283.77746582 67.74330902]
[285.51739502 80.05146790]
[286.43395996 92.44816589]
[286.52304077 104.87837982]
[285.78430176 117.28694153]
[284.22100830 129.61877441]
[281.84005737 141.81915283]
[278.65206909 153.83392334]
[274.67114258 165.60977173]
[269.91497803 177.09442139]
[264.40469360 188.23689270]
[258.16470337 198.98774719]
[251.22274780 209.29925537]
[243.60961914 219.12567139]
[235.35910034 228.42337036]
[226.50782776 237.15107727]
[217.09506226 245.27008057]
[207.16259766 252.74430847]
[196.75451660 259.54061890]
[185.91700745 265.62884521]
[174.69816589 270.98196411]
[163.14779663 275.57620239]
[151.31715393 279.39117432]
[139.25874329 282.40997314]
[127.02610779 284.61917114]
[114.67350769 286.00897217]
[102.25579071 286.57321167]
[89.82805634 286.30935669]
[77.44547272 285.21862793]
[65.16298676 283.30584717]
[53.03512573 280.57946777]
[41.11570740 277.05166626]
[29.45763206 272.73800659]
[18.11264801 267.65771484]
[7.13110447 261.83331299]
[-3.43825817 255.29061890]
[-13.54852962 248.05870056]
[-23.15483856 240.16966248]
[-32.21454620 231.65850830]
[-40.68744659 222.56300354]
[-48.53593445 212.92353821]
[-55.72517014 202.78288269]
[-62.22325516 192.18603516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 58]
[2 57]
[3 56]
[4 55]
[6 53]
[8 51]
[9 50]
[10 49]
[11 48]
[12 47]
[13 46]
[14 44]
[15 43]
[16 27]
[17 26]
[18 25]
[30 42]
[31 41]
[32 40]
[33 39]
[81 90]
[82 89]
[83 88]
[95 102]
[96 101]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
