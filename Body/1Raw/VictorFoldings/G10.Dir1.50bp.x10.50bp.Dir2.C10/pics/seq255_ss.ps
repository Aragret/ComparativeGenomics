%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAACAAAAAAUUUCCACCAAACCCCCCCUCCCCCGCUUCUGGCCACAGCACUUAAACACAxxxxxxxxxxCCUGCCCCCGCUAACCGGCUUUUUGCCCAAAUGGGCCAUUAUCGAAGAAUUCACAAAAAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-25.03856659 209.94004822]
[-36.73818970 219.32720947]
[-48.43781281 228.71437073]
[-60.03915405 238.22273254]
[-71.54096222 247.85125732]
[-83.04276276 257.47979736]
[-94.54456329 267.10830688]
[-106.04637146 276.73684692]
[-117.54817200 286.36535645]
[-129.04997253 295.99389648]
[-140.55177307 305.62240601]
[-134.68174744 319.55203247]
[-133.17999268 334.59317017]
[-136.18005371 349.40841675]
[-143.41514587 362.68035889]
[-154.24194336 373.22891235]
[-167.69773865 380.11608887]
[-182.58604431 382.72946167]
[-197.58300781 380.83670044]
[-211.35510254 374.60604858]
[-222.67771912 364.59158325]
[-230.54408264 351.68377686]
[-234.25468445 337.03033447]
[-233.47961426 321.93429565]
[-228.28778076 307.73794556]
[-219.14082336 295.70364380]
[-206.85209656 286.90145874]
[-192.51431274 282.11404419]
[-177.40235901 281.76715088]
[-162.85998535 285.89157104]
[-150.18031311 294.12060547]
[-138.67849731 284.49209595]
[-127.17669678 274.86355591]
[-115.67489624 265.23504639]
[-104.17309570 255.60650635]
[-92.67128754 245.97798157]
[-81.16948700 236.34945679]
[-69.66767883 226.72093201]
[-66.53738403 219.97209167]
[-57.82497787 217.01475525]
[-46.12535095 207.62759399]
[-34.42572784 198.24043274]
[-49.64859009 172.98463440]
[-60.17715073 145.43940735]
[-65.68112946 116.46878815]
[-65.98789215 86.98156738]
[-61.08779526 57.90271378]
[-51.13455963 30.14440536]
[-36.44040680 4.57738924]
[-48.33278656 -4.56434488]
[-60.22516632 -13.70607948]
[-76.54439545 -15.32312298]
[-83.05615997 -30.37400246]
[-73.06171417 -43.37565994]
[-56.84249115 -40.95310974]
[-51.08343124 -25.59845924]
[-39.19105148 -16.45672417]
[-27.29867172 -7.31499052]
[-21.57341576 -13.76011372]
[-15.52223492 -19.90025902]
[-9.16135120 -25.71896553]
[-2.50781870 -31.20063210]
[4.42052603 -36.33056641]
[11.60510921 -41.09501266]
[19.02666855 -45.48119736]
[26.66530991 -49.47736359]
[34.50055313 -53.07279587]
[42.51139069 -56.25785828]
[50.67635345 -59.02401352]
[58.97354126 -61.36383820]
[67.38072205 -63.27106857]
[75.87535095 -64.74058533]
[84.43465424 -65.76844788]
[93.03568268 -66.35190582]
[101.65538788 -66.48939514]
[110.27065277 -66.18054199]
[118.85838318 -65.42617798]
[127.39555359 -64.22832489]
[135.85928345 -62.59019089]
[144.22688293 -60.51617432]
[152.47590637 -58.01182938]
[160.58424377 -55.08387375]
[168.53016663 -51.74015427]
[176.29237366 -47.98963547]
[183.85005188 -43.84237671]
[191.18292236 -39.30948639]
[198.27134705 -34.40312576]
[205.09632874 -29.13644600]
[215.07905579 -40.33221054]
[225.06178284 -51.52797699]
[225.58358765 -67.56254578]
[238.53086853 -77.03605652]
[253.97157288 -72.68125153]
[260.06091309 -57.83876038]
[252.12765503 -43.89447021]
[236.25753784 -41.54524994]
[226.27481079 -30.34948540]
[216.29208374 -19.15372086]
[226.65533447 -8.07351303]
[235.96697998 3.90401649]
[244.14971924 16.67941856]
[251.13558960 30.14662170]
[256.86660767 44.19380951]
[261.29516602 58.70434952]
[264.38452148 73.55776215]
[279.28640747 71.84506989]
[294.18832397 70.13238525]
[309.09020996 68.41969299]
[321.93374634 58.22283936]
[337.08477783 64.49806976]
[338.95721436 80.78997040]
[325.62487793 90.33882904]
[310.80291748 83.32159424]
[295.90100098 85.03428650]
[280.99911499 86.74697113]
[266.09719849 88.45966339]
[266.49761963 99.96523285]
[266.10198975 111.47097778]
[264.91223145 122.92186737]
[262.93402100 134.26316833]
[260.17678833 145.44065857]
[256.65374756 156.40089417]
[252.38172913 167.09147644]
[247.38116455 177.46127319]
[241.67596436 187.46073914]
[235.29339600 197.04203796]
[228.26397705 206.15936279]
[220.62132263 214.76914978]
[212.40196228 222.83020020]
[203.64518738 230.30400085]
[194.39289856 237.15480042]
[184.68930054 243.34985352]
[174.58079529 248.85954285]
[164.11570740 253.65753174]
[153.34408569 257.72085571]
[142.31741333 261.03012085]
[131.08842468 263.56945801]
[119.71080017 265.32678223]
[108.23893738 266.29364014]
[96.72768402 266.46545410]
[85.23207092 265.84140015]
[73.80706787 264.42440796]
[62.50729370 262.22131348]
[51.38677597 259.24261475]
[40.49868393 255.50257874]
[29.89506912 251.01905823]
[19.62663269 245.81350708]
[9.74246883 239.91081238]
[0.28983304 233.33920288]
[-8.68608093 226.13006592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 42]
[2 41]
[3 40]
[4 38]
[5 37]
[6 36]
[7 35]
[8 34]
[9 33]
[10 32]
[11 31]
[49 58]
[50 57]
[51 56]
[88 98]
[89 97]
[90 96]
[105 116]
[106 115]
[107 114]
[108 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
