%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUUACUAACAUUAACGAAAAUAACCCCACCCUACUAAACCCCAUUAAACGCCUGGCAGCCxxxxxxxxxxCUAAACCCCAUUAAACGCCUGGCAGCCGGAAGCCUAUUCGCAGGAUUUCUCAUUACUAACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[83.42997742 484.14682007]
[83.42997742 469.14682007]
[83.42997742 454.14682007]
[83.42997742 439.14682007]
[83.42997742 424.14682007]
[83.42997742 409.14682007]
[83.42997742 394.14682007]
[83.42997742 379.14682007]
[83.42997742 364.14682007]
[83.42997742 349.14682007]
[68.77560425 346.05734253]
[55.07853699 339.98596191]
[42.93848038 331.19589233]
[32.88750839 320.06939697]
[25.36675835 307.09112549]
[20.70707321 292.82717896]
[19.11444283 277.90029907]
[20.66090012 262.96270752]
[25.28126717 248.66754150]
[32.77589798 235.64044189]
[42.81930923 224.45201111]
[54.97430420 215.59295654]
[68.71100616 209.45245361]
[83.42997742 206.30114746]
[83.42997742 191.30114746]
[82.50656128 176.32960510]
[80.66323853 161.44329834]
[78.81991577 146.55699158]
[76.97659302 131.67068481]
[66.75788116 120.68987274]
[52.04236221 117.78240204]
[37.32683945 114.87493134]
[30.52426147 128.35185242]
[20.33705902 139.49293518]
[7.52119255 147.47140503]
[-6.97231817 151.69523621]
[-22.06795692 151.85098267]
[-36.64552689 147.92707825]
[-49.62327957 140.21470642]
[-60.03817368 129.28619385]
[-67.11735535 115.95248413]
[-70.33551025 101.20304108]
[-69.45381927 86.13237000]
[-64.53771973 71.85881042]
[-55.95200729 59.44155884]
[-44.33380890 49.80205536]
[-30.54526711 43.65561295]
[-15.60958481 41.45834732]
[-0.63508940 43.37330246]
[13.26701355 49.25837708]
[25.06509399 58.67686081]
[33.88365936 70.92984009]
[39.06830978 85.10806274]
[40.23431015 100.15940857]
[54.94983292 103.06687927]
[69.66535950 105.97434998]
[70.34745026 95.51901245]
[74.41921234 86.20984650]
[81.19853973 79.07238007]
[89.72022247 74.81221771]
[98.86912537 73.74774933]
[102.52783203 59.20079803]
[106.18653870 44.65384674]
[102.04898071 29.38324547]
[112.65694427 18.92761040]
[116.31565094 4.38065672]
[119.97435760 -10.16629696]
[106.37405396 -16.60973549]
[94.29230499 -25.58289528]
[84.19350433 -36.74087524]
[76.46582794 -49.65479279]
[71.40630341 -63.82826996]
[69.20941162 -78.71651459]
[69.95957947 -93.74726868]
[73.62799072 -108.34278107]
[80.07363129 -121.94204712]
[89.04874420 -134.02233887]
[100.20835876 -144.11932373]
[113.12352753 -151.84490967]
[127.29782104 -156.90214539]
[142.18641663 -159.09663391]
[157.21705627 -158.34402466]
[171.81196594 -154.67326355]
[185.41018677 -148.22541809]
[197.48902893 -139.24835205]
[207.58421326 -128.08709717]
[215.30770874 -115.17067719]
[220.36265564 -100.99556732]
[222.55473328 -86.10661316]
[221.79968262 -71.07610321]
[218.12655640 -56.48177719]
[211.67651367 -42.88460159]
[202.69749451 -30.80721283]
[191.53460693 -20.71383476]
[178.61694336 -12.99242973]
[164.44100952 -7.93978834]
[149.55169678 -5.75012064]
[134.52131653 -6.50759172]
[130.86260986 8.03936291]
[127.20390320 22.58631706]
[131.60314941 36.81641769]
[120.73348999 48.31254959]
[117.07479095 62.85950470]
[113.41608429 77.40645599]
[119.05107880 81.90260315]
[123.25216675 87.76087952]
[137.96769714 84.85340881]
[148.05642700 72.37955475]
[164.09745789 72.63401031]
[173.78549194 85.42156982]
[169.68867493 100.93271637]
[154.94975281 107.26862335]
[140.87516785 99.56893158]
[126.15963745 102.47640228]
[123.67170715 113.87182617]
[116.26589966 123.52037048]
[105.01557922 129.33143616]
[91.86289978 129.82736206]
[93.70622253 144.71366882]
[95.54954529 159.59997559]
[97.39287567 174.48628235]
[107.74588776 163.63200378]
[122.73600769 163.08770752]
[133.84895325 173.16255188]
[134.77265930 188.13407898]
[124.98246765 199.49859619]
[110.03913116 200.80111694]
[98.42997742 191.30114746]
[98.42997742 206.30114746]
[113.14894867 209.45245361]
[126.88565063 215.59295654]
[139.04064941 224.45201111]
[149.08406067 235.64044189]
[156.57868958 248.66754150]
[161.19905090 262.96270752]
[162.74551392 277.90029907]
[161.15287781 292.82717896]
[156.49319458 307.09112549]
[148.97244263 320.06939697]
[138.92147827 331.19589233]
[126.78141785 339.98596191]
[113.08435822 346.05734253]
[98.42997742 349.14682007]
[98.42997742 364.14682007]
[98.42997742 379.14682007]
[98.42997742 394.14682007]
[98.42997742 409.14682007]
[98.42997742 424.14682007]
[98.42997742 439.14682007]
[98.42997742 454.14682007]
[98.42997742 469.14682007]
[98.42997742 484.14682007]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[4 149]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[24 129]
[25 128]
[26 121]
[27 120]
[28 119]
[29 118]
[30 56]
[31 55]
[32 54]
[61 104]
[62 103]
[63 102]
[65 100]
[66 99]
[67 98]
[106 114]
[107 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
