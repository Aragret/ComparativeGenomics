%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCCUACCCCUCACAAUCAUGGCAAGCCAACGCCACUUAUCCAGUGAACCACUAUCACGAAxxxxxxxxxxCCAAAAAGGCAUAAUUAAACUUUACUUCCUCUCUUUCUUCUUCCCACUCAUCCUAACCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[29.87423706 270.94287109]
[20.49638367 266.78808594]
[11.36353779 262.11929321]
[10.88991165 277.93341064]
[-2.29647827 284.85934448]
[-10.02056313 297.71774292]
[-17.74464798 310.57614136]
[-25.46873283 323.43453979]
[-33.19281769 336.29296875]
[-40.91690445 349.15136719]
[-48.64098740 362.00976562]
[-51.61408997 378.70098877]
[-68.47605133 380.46466064]
[-74.83866119 364.74990845]
[-61.49938965 354.28567505]
[-53.77530670 341.42727661]
[-46.05121994 328.56887817]
[-38.32713699 315.71047974]
[-30.60305023 302.85205078]
[-22.87896538 289.99365234]
[-15.15488052 277.13525391]
[-15.23373318 262.24087524]
[-1.49486506 254.39521790]
[-23.35073662 237.56340027]
[-42.45701599 217.66516113]
[-58.38780594 195.14407349]
[-70.78799438 170.50215149]
[-79.38117981 144.28866577]
[-83.97579956 117.08795166]
[-98.95551300 117.86779785]
[-113.93522644 118.64764404]
[-128.91494751 119.42749023]
[-137.25743103 132.51116943]
[-151.70932007 138.16114807]
[-166.71357727 134.20491028]
[-176.50076294 122.16369629]
[-177.30747986 106.66760254]
[-168.82356262 93.67520142]
[-154.31121826 88.18231964]
[-139.35076904 92.30109406]
[-129.69479370 104.44776917]
[-114.71507263 103.66793060]
[-99.73535919 102.88808441]
[-84.75564575 102.10823822]
[-84.04919434 83.72160339]
[-81.51747894 65.49639893]
[-77.18559265 47.61338425]
[-71.09651184 30.24990082]
[-63.31061172 13.57814884]
[-53.90511322 -2.23653078]
[-42.97329330 -17.03730011]
[-30.62356377 -30.67737770]
[-16.97840309 -43.02148819]
[-25.99593163 -55.00831985]
[-35.01346207 -66.99515533]
[-44.03099060 -78.98198700]
[-59.65504837 -79.63229370]
[-71.17084503 -90.21154022]
[-73.14097595 -105.72451782]
[-64.63520813 -118.84648132]
[-49.66970444 -123.38163757]
[-35.31071472 -117.18862915]
[-28.33811760 -103.19159698]
[-32.04415894 -87.99951172]
[-23.02663040 -76.01268005]
[-14.00909996 -64.02584839]
[-4.99157000 -52.03901672]
[6.55012703 -59.39326859]
[18.60451317 -65.87304688]
[31.10545731 -71.44280243]
[43.98437500 -76.07198334]
[57.17060471 -79.73518372]
[70.59181213 -82.41230774]
[84.17435455 -84.08867645]
[97.84372711 -84.75508881]
[111.52492523 -84.40788269]
[125.14289856 -83.04897308]
[138.62292480 -80.68580627]
[151.89106750 -77.33135986]
[164.87451172 -73.00402069]
[177.50204468 -67.72753906]
[189.70437622 -61.53085709]
[201.41456604 -54.44797897]
[212.56837463 -46.51776123]
[223.10459900 -37.78370667]
[233.54441833 -48.55451584]
[243.98422241 -59.32532501]
[254.42404175 -70.09613037]
[249.58261108 -84.61574554]
[252.05477905 -99.72027588]
[261.27246094 -111.93882751]
[275.11749268 -118.46365356]
[290.40841675 -117.79539490]
[303.63146973 -110.08763123]
[311.74807739 -97.11152649]
[312.89312744 -81.84891510]
[306.80346680 -67.80701447]
[294.87847900 -58.21256638]
[279.85845947 -55.27029800]
[265.19485474 -59.65632248]
[254.75503540 -48.88551331]
[244.31521606 -38.11470413]
[233.87541199 -27.34389496]
[240.73565674 -19.71870804]
[247.16218567 -11.72458267]
[253.13522339 -3.38615656]
[258.63632202 5.27087450]
[263.64855957 14.21983242]
[268.15649414 23.43313980]
[272.14620972 32.88240051]
[275.60543823 42.53850174]
[278.52349854 52.37167740]
[280.89138794 62.35163498]
[282.70184326 72.44760895]
[283.94924927 82.62849426]
[284.62979126 92.86290741]
[284.74133301 103.11932373]
[284.28356934 113.36611938]
[283.25793457 123.57173157]
[281.66751099 133.70469666]
[279.51727295 143.73379517]
[276.81378174 153.62811279]
[273.56542969 163.35717773]
[269.78219604 172.89099121]
[265.47573853 182.20018005]
[260.65936279 191.25604248]
[255.34785461 200.03068542]
[249.55761719 208.49707031]
[243.30648804 216.62908936]
[236.61372375 224.40170288]
[229.49996948 231.79093933]
[221.98712158 238.77403259]
[214.09835815 245.32946777]
[205.85797119 251.43705750]
[197.29136658 257.07794189]
[188.42494202 262.23477173]
[179.28601074 266.89163208]
[169.90275574 271.03421021]
[160.30407715 274.64968872]
[150.51954651 277.72695923]
[140.57934570 280.25650024]
[130.51408386 282.23059082]
[120.35478210 283.64306641]
[110.13275909 284.48962402]
[99.87950897 284.76763916]
[89.62663269 284.47625732]
[79.40571594 283.61636353]
[69.24827576 282.19061279]
[59.18559647 280.20343018]
[49.24869537 277.66091919]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 23]
[5 21]
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[11 15]
[29 44]
[30 43]
[31 42]
[32 41]
[53 67]
[54 66]
[55 65]
[56 64]
[85 103]
[86 102]
[87 101]
[88 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
