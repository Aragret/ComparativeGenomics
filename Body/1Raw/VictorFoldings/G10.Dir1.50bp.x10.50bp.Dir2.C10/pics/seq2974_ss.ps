%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGUUACCCUAGGGAUAACAGCGCAAUCCUAUUCUAGAGUCCAUAUCAACAAUAGGGUUUAxxxxxxxxxxCCCAUCGUCCUAGAAUUAAUUCCCCUAAAAAUCUUUGAAAUAGGGCCCGUAUUUACCCUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 262.96691895]
[92.50000000 247.96693420]
[92.50000000 232.96693420]
[92.50000000 217.96693420]
[92.50000000 202.96693420]
[92.50000000 187.96693420]
[92.50000000 172.96693420]
[92.50000000 157.96693420]
[92.50000000 142.96693420]
[92.50000000 127.96692657]
[88.29631042 126.48439026]
[84.36998749 124.37420654]
[73.27867126 134.47285461]
[62.18735886 144.57150269]
[51.09604263 154.67015076]
[46.10099030 169.68214417]
[31.48109245 172.52957153]
[20.38977814 182.62823486]
[12.74864769 197.76260376]
[-3.90955067 194.60971069]
[-5.49131727 177.72970581]
[10.29112816 171.53691101]
[21.38244438 161.43826294]
[25.58416939 147.14859009]
[40.99739456 143.57884216]
[52.08870697 133.48019409]
[63.18002319 123.38153839]
[74.27133942 113.28289032]
[74.72573853 85.87162781]
[97.83728027 71.12576294]
[100.62960052 56.38795471]
[103.42192841 41.65014648]
[92.53950500 23.52944756]
[101.08039856 4.83583784]
[96.17884827 -9.34072018]
[91.27729797 -23.51727867]
[78.53253174 -27.99260712]
[70.82188416 -38.84497452]
[70.79072571 -51.96264648]
[78.22549438 -62.53246307]
[73.61993408 -76.80792236]
[69.01436615 -91.08338165]
[64.40879822 -105.35884857]
[59.80323792 -119.63430786]
[55.19767380 -133.90975952]
[50.59210968 -148.18522644]
[35.79040909 -145.60534668]
[20.77370453 -145.11064148]
[5.83430052 -146.71075439]
[-8.73700237 -150.37452698]
[-22.65657043 -156.03065491]
[-35.65345383 -163.56904602]
[-47.47466660 -172.84292603]
[-57.89010239 -183.67181396]
[-66.69702148 -195.84490967]
[-73.72399902 -209.12525940]
[-78.83425140 -223.25436401]
[-81.92830658 -237.95718384]
[-82.94593048 -252.94754028]
[-81.86732483 -267.93362427]
[-78.71347809 -282.62374878]
[-73.54578400 -296.73193359]
[-66.46483612 -309.98358154]
[-57.60845947 -322.12072754]
[-47.14905167 -332.90716553]
[-35.29020691 -342.13287354]
[-22.26276207 -349.61831665]
[-8.32029724 -355.21777344]
[6.26579142 -358.82223511]
[21.21158028 -360.36154175]
[36.22614670 -359.80575562]
[51.01723099 -357.16567993]
[65.29691315 -352.49270630]
[78.78723907 -345.87777710]
[91.22561646 -337.44967651]
[102.36992645 -327.37243652]
[112.00324249 -315.84225464]
[119.93804932 -303.08352661]
[126.01989746 -289.34463501]
[130.13040161 -274.89300537]
[132.18952942 -260.00991821]
[132.15722656 -244.98509216]
[130.03411865 -230.11100769]
[125.86151886 -215.67716980]
[119.72065735 -201.96455383]
[111.73105621 -189.24006653]
[102.04825592 -177.75140381]
[90.86071777 -167.72218323]
[78.38621521 -159.34765625]
[64.86756897 -152.79078674]
[69.47313690 -138.51533508]
[74.07869720 -124.23986816]
[78.68426514 -109.96440887]
[83.28982544 -95.68894958]
[87.89539337 -81.41349030]
[92.50095367 -67.13803101]
[107.76522064 -60.14801788]
[113.39138031 -43.97302628]
[105.45385742 -28.41882896]
[110.35540771 -14.24227142]
[115.25695801 -0.06571315]
[127.73212433 4.16392231]
[135.47738647 14.81899166]
[150.47007751 15.28703403]
[165.46276855 15.75507641]
[180.45547485 16.22311783]
[195.44816589 16.69116020]
[202.03538513 2.96059656]
[213.64204407 -6.89868593]
[228.25720215 -11.17850590]
[243.34870911 -9.13735962]
[256.30187988 -1.12888813]
[264.87246704 11.45939350]
[267.57559204 26.44648933]
[263.94290161 41.23579407]
[254.60380554 53.26496887]
[241.17634583 60.44989014]
[225.98689270 61.54572678]
[211.66714478 56.36261368]
[200.69807434 45.79856491]
[194.98011780 31.68385696]
[179.98742676 31.21581459]
[164.99473572 30.74777222]
[150.00202942 30.27972984]
[135.00933838 29.81168747]
[131.34510803 36.47492599]
[125.51657867 41.58126068]
[118.15973663 44.44247055]
[115.36740875 59.18027878]
[112.57508850 73.91808319]
[117.98515320 77.30785370]
[122.52085876 81.80082703]
[125.96170044 87.17855835]
[128.14039612 93.17961884]
[128.95101929 99.51225281]
[128.35417175 105.86859894]
[126.37886047 111.93964386]
[123.12112427 117.43022919]
[118.73933411 122.07343292]
[113.44652557 125.64351654]
[107.50000000 127.96692657]
[107.50000000 142.96693420]
[107.50000000 157.96693420]
[107.50000000 172.96693420]
[107.50000000 187.96693420]
[107.50000000 202.96693420]
[107.50000000 217.96693420]
[107.50000000 232.96693420]
[107.50000000 247.96693420]
[107.50000000 262.96691895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[12 28]
[13 27]
[14 26]
[15 25]
[17 23]
[18 22]
[30 130]
[31 129]
[32 128]
[34 101]
[35 100]
[36 99]
[40 96]
[41 95]
[42 94]
[43 93]
[44 92]
[45 91]
[46 90]
[103 125]
[104 124]
[105 123]
[106 122]
[107 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
