%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUCAGCCUAUAUACCGCCAUCUUCAGCAAACCCUGAUGAAGGCUACAAAGUAAGCGCAAGxxxxxxxxxxUCACUAUCAUAUUCAUCGGCGUAAAUCUAACUUUCUUCCCACAACACUUUCUCGGCCUAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 271.84014893]
[92.50000000 256.84014893]
[92.50000000 241.84013367]
[92.50000000 226.84013367]
[92.50000000 211.84013367]
[92.50000000 196.84013367]
[92.50000000 181.84013367]
[92.50000000 166.84013367]
[92.50000000 151.84013367]
[92.50000000 136.84013367]
[83.50817871 133.78558350]
[75.56860352 128.57537842]
[69.18783569 121.54196930]
[64.77300262 113.13409424]
[49.95524216 115.46519470]
[35.13748550 117.79630280]
[20.31972504 120.12740326]
[5.50196791 122.45850372]
[18.74544334 129.50196838]
[27.30454063 141.82032776]
[29.28606224 156.68887329]
[24.25171661 170.81881714]
[13.31505489 181.08474731]
[-1.10483503 185.21594238]
[-15.81840706 182.29861450]
[-27.57115364 172.97804260]
[-33.76347733 159.31587219]
[-33.02568817 144.33401489]
[-25.52098465 131.34635925]
[-12.90746307 123.22497559]
[-27.86771202 122.13366699]
[-42.19423294 128.84643555]
[-54.32485580 120.20368958]
[-69.28510284 119.11237335]
[-84.24535370 118.02106476]
[-99.20560455 116.92975616]
[-110.99899292 127.45075989]
[-126.77267456 126.46764374]
[-137.16839600 114.56368256]
[-136.01856995 98.80127716]
[-124.00536346 88.53198242]
[-108.25599670 89.84839630]
[-98.11428833 101.96950531]
[-83.15404510 103.06081390]
[-68.19379425 104.15213013]
[-53.23354340 105.24343872]
[-39.97708130 98.45259857]
[-26.77640152 107.17341614]
[-11.81615257 108.26472473]
[3.17086387 107.64074707]
[17.98862267 105.30964661]
[32.80638123 102.97853851]
[47.62413788 100.64743805]
[62.44189453 98.31633759]
[72.14006805 74.75579071]
[94.63347626 62.78916550]
[119.59156799 67.91236877]
[129.80505371 56.92670059]
[140.01852417 45.94103622]
[150.23200989 34.95537186]
[160.44549561 23.96970558]
[169.71043396 12.17306614]
[177.96272278 -0.35289550]
[186.21501160 -12.87885761]
[173.99401855 -54.71376801]
[178.59959412 -68.98922729]
[183.20515442 -83.26469421]
[170.01654053 -90.50740814]
[158.43711853 -100.11540222]
[148.88549805 -111.74136353]
[141.70693970 -124.96501160]
[137.16096497 -139.30831909]
[135.41188049 -154.25279236]
[136.52294922 -169.25819397]
[140.45399475 -183.78208923]
[147.06289673 -197.29943848]
[156.11076355 -209.32160950]
[167.27050781 -219.41401672]
[180.13871765 -227.21180725]
[194.25022888 -232.43309021]
[209.09489441 -234.88914490]
[224.13610840 -234.49118042]
[238.83013916 -231.25357056]
[252.64579773 -225.29335022]
[265.08364868 -216.82598877]
[275.69409180 -206.15757751]
[284.09356689 -193.67378235]
[289.97842407 -179.82585144]
[293.13592529 -165.11441040]
[293.45193481 -150.07124329]
[290.91503906 -135.24017334]
[285.61694336 -121.15732574]
[277.74914551 -108.33178711]
[267.59609985 -97.22718811]
[255.52482605 -88.24496460]
[241.97166443 -81.70980072]
[227.42655945 -77.85795593]
[212.41532898 -76.82865906]
[197.48060608 -78.65912628]
[192.87504578 -64.38366699]
[188.26948547 -50.10820389]
[193.26084900 -44.51032257]
[208.23493958 -27.71667290]
[222.94290161 -30.66215515]
[237.65086365 -33.60763931]
[246.20448303 -46.89714813]
[261.66738892 -50.16423416]
[274.86572266 -41.47058487]
[277.96914673 -25.97399330]
[269.13644409 -12.86831093]
[253.60791016 -9.92890644]
[240.59634399 -18.89967728]
[225.88838196 -15.95419407]
[211.18041992 -13.00871181]
[198.74098206 -4.62656832]
[190.48869324 7.89939356]
[182.23640442 20.42535591]
[196.82797241 16.94888496]
[210.73712158 22.56456947]
[218.82466125 35.19752502]
[218.10243225 50.18012619]
[208.83726501 61.97660446]
[194.45248413 66.22838593]
[180.26293945 61.36453247]
[171.51141357 49.18213654]
[171.43115234 34.18318558]
[161.21766663 45.16884995]
[151.00419617 56.15451431]
[140.79071045 67.14018250]
[130.57723999 78.12584686]
[134.01525879 83.98726654]
[136.34204102 90.37181091]
[137.48155212 97.07089996]
[137.39656067 103.86568451]
[136.08984375 110.53417969]
[133.60411072 116.85852814]
[130.02053833 122.63212585]
[125.45623016 127.66633606]
[120.06027985 131.79672241]
[114.00897217 134.88832092]
[107.50000000 136.84013367]
[107.50000000 151.84013367]
[107.50000000 166.84013367]
[107.50000000 181.84013367]
[107.50000000 196.84013367]
[107.50000000 211.84013367]
[107.50000000 226.84013367]
[107.50000000 241.84013367]
[107.50000000 256.84014893]
[107.50000000 271.84014893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[14 54]
[15 53]
[16 52]
[17 51]
[18 50]
[30 49]
[31 48]
[33 46]
[34 45]
[35 44]
[36 43]
[57 130]
[58 129]
[59 128]
[60 127]
[61 126]
[62 117]
[63 116]
[64 115]
[65 101]
[66 100]
[67 99]
[103 114]
[104 113]
[105 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
