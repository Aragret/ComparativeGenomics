%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUUACCUCCCUCUCUCCUACUCCUGCUCGCAUCUGCUAUAGUGGAGGCCGGAGCAGGAACAGxxxxxxxxxxUGCACACUACUAUAACCACCCUAACCCUGACUUCCCUAAUUCCCCCCAUCCUUACCACCCUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[295.65942383 391.60809326]
[286.96875000 387.52502441]
[279.68923950 400.64019775]
[272.40969849 413.75540161]
[265.13015747 426.87060547]
[257.85064697 439.98580933]
[250.57110596 453.10101318]
[243.29158020 466.21621704]
[236.01205444 479.33142090]
[228.73251343 492.44659424]
[229.55035400 508.82534790]
[215.62992859 517.49450684]
[201.29138184 509.53594971]
[201.28498840 493.13677979]
[215.61732483 485.16708374]
[222.89685059 472.05187988]
[230.17637634 458.93667603]
[237.45590210 445.82147217]
[244.73544312 432.70626831]
[252.01496887 419.59109497]
[259.29449463 406.47589111]
[266.57403564 393.36068726]
[273.85354614 380.24548340]
[247.97135925 361.13717651]
[225.85971069 337.76385498]
[208.21176147 310.85647583]
[195.58102417 281.25680542]
[188.36405945 249.89103699]
[186.78796387 217.74087524]
[190.90330505 185.81282043]
[200.58242798 155.10659790]
[186.98423767 148.77497864]
[173.38606262 142.44335938]
[159.78787231 136.11174011]
[146.18969727 129.78012085]
[132.59150696 123.44850159]
[118.99332428 117.11688232]
[105.39514160 110.78526306]
[91.67143250 104.73053741]
[77.82782745 98.95519257]
[62.11251068 100.78262329]
[53.34545898 88.74152374]
[39.50185394 82.96617889]
[25.65824890 77.19083405]
[11.81464386 71.41548920]
[-2.02896190 65.64015198]
[-18.21506119 68.27495575]
[-28.37896347 55.40533829]
[-22.06491470 40.27044678]
[-5.76827049 38.43976974]
[3.74638152 51.79654312]
[17.58998680 57.57188797]
[31.43359184 63.34722900]
[45.27719879 69.12257385]
[59.12080383 74.89791870]
[73.84593201 72.65740204]
[83.60316467 85.11158752]
[97.44676971 90.88693237]
[102.68547058 90.02607727]
[108.02397156 92.19438934]
[111.72676086 97.18708038]
[125.32494354 103.51869965]
[138.92312622 109.85031891]
[152.52131653 116.18193817]
[166.11949158 122.51355743]
[179.71768188 128.84516907]
[193.31585693 135.17678833]
[206.91404724 141.50840759]
[211.55160522 133.09132385]
[216.62699890 124.93090057]
[222.12609863 117.04987335]
[228.03353882 109.47023010]
[234.33283997 102.21309662]
[241.00642395 95.29872131]
[248.03567505 88.74636841]
[255.40097046 82.57431793]
[263.08175659 76.79977417]
[271.05664062 71.43883514]
[279.30334473 66.50643921]
[287.79885864 62.01633835]
[296.51950073 57.98104858]
[305.44091797 54.41181946]
[314.53823853 51.31859207]
[323.78610229 48.70998764]
[333.15869141 46.59326935]
[342.62988281 44.97433472]
[352.17321777 43.85768890]
[361.76211548 43.24643326]
[371.36984253 43.14226913]
[380.96954346 43.54547501]
[390.53448486 44.45491409]
[400.03799438 45.86804199]
[409.45358276 47.78091049]
[418.75491333 50.18816757]
[427.91613770 53.08309555]
[436.91165161 56.45761108]
[445.71636963 60.30229187]
[454.30575562 64.60639954]
[462.65585327 69.35793304]
[470.74337769 74.54362488]
[478.54580688 80.14900208]
[486.04132080 86.15842438]
[493.20904541 92.55511475]
[500.02902222 99.32124329]
[506.48220825 106.43791199]
[512.55065918 113.88527679]
[518.21734619 121.64256287]
[523.46661377 129.68811035]
[528.28369141 137.99949646]
[532.65527344 146.55351257]
[536.56909180 155.32632446]
[540.01428223 164.29342651]
[542.98120117 173.42982483]
[545.46166992 182.71003723]
[547.44866943 192.10815430]
[548.93676758 201.59799194]
[549.92175293 211.15306091]
[550.40093994 220.74671936]
[550.37292480 230.35218811]
[549.83789062 239.94270325]
[548.79724121 249.49150085]
[547.25396729 258.97195435]
[545.21234131 268.35763550]
[542.67810059 277.62234497]
[539.65826416 286.74023438]
[536.16137695 295.68591309]
[532.19708252 304.43441772]
[527.77648926 312.96136475]
[522.91192627 321.24291992]
[517.61700439 329.25607300]
[511.90646362 336.97842407]
[505.79626465 344.38845825]
[499.30343628 351.46548462]
[492.44610596 358.18981934]
[485.24340820 364.54269409]
[477.71545410 370.50637817]
[469.88317871 376.06427002]
[461.76852417 381.20086670]
[453.39407349 385.90185547]
[444.78317261 390.15411377]
[435.95989990 393.94580078]
[426.94885254 397.26638794]
[417.77511597 400.10656738]
[408.46435547 402.45843506]
[399.04248047 404.31546021]
[389.53579712 405.67248535]
[379.97082520 406.52569580]
[370.37423706 406.87274170]
[360.77279663 406.71267700]
[351.19329834 406.04592896]
[341.66244507 404.87438965]
[332.20684814 403.20132446]
[322.85281372 401.03143311]
[313.62649536 398.37075806]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 23]
[3 22]
[4 21]
[5 20]
[6 19]
[7 18]
[8 17]
[9 16]
[10 15]
[31 68]
[32 67]
[33 66]
[34 65]
[35 64]
[36 63]
[37 62]
[38 61]
[39 58]
[40 57]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
