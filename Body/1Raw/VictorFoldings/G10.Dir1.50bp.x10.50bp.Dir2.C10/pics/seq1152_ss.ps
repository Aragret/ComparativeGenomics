%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAAGCUAUACUAACCCCAGGGUUGGUCAAUUUCGUGCCAGCCACCGCGGUCACACGAUUAACxxxxxxxxxxCAACCAACCACACCUAGCAUUCCUGCACAUCUGUACCCACGCCUUCUUCAAAGCCAUACUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[151.00901794 460.86056519]
[150.70103455 445.86373901]
[150.39305115 430.86688232]
[150.08508301 415.87005615]
[149.77709961 400.87322998]
[149.46911621 385.87637329]
[149.16114807 370.87954712]
[148.85316467 355.88269043]
[148.54519653 340.88586426]
[146.39660645 326.04055786]
[142.44000244 311.57177734]
[138.48338318 297.10299683]
[134.52677917 282.63424683]
[119.56818390 283.29925537]
[104.82958984 280.61746216]
[91.05075073 274.72012329]
[78.92397308 265.90011597]
[69.05934143 254.59713745]
[61.95401001 241.37596130]
[57.96716690 226.89814758]
[57.30186081 211.88893127]
[59.99467468 197.10093689]
[65.91371155 183.27636719]
[74.76508331 171.10984802]
[86.10746765 161.21345520]
[99.37412262 154.08592224]
[95.41751862 139.61715698]
[91.46090698 125.14839172]
[73.86058807 92.83721924]
[64.21877289 81.34655762]
[54.57696152 69.85588837]
[44.93514633 58.36522293]
[35.29333496 46.87455750]
[25.65151978 35.38388824]
[16.00970650 23.89322281]
[11.74132633 22.52187347]
[8.48931313 20.08302879]
[6.46779490 17.03997040]
[5.71367645 13.87760830]
[6.09548330 11.04119301]
[-4.45653152 0.38028395]
[-16.60986519 -8.41155815]
[-28.76319695 -17.20340157]
[-40.91653061 -25.99524307]
[-53.06986237 -34.78708649]
[-65.48818207 -43.20049667]
[-78.15969086 -51.22749329]
[-87.14415741 -53.19603729]
[-91.00661469 -59.55163956]
[-103.51065063 -67.83711243]
[-119.90309143 -68.30605316]
[-127.45403290 -82.86335754]
[-118.39572144 -96.53372955]
[-102.04656219 -95.25425720]
[-95.22517395 -80.34114838]
[-82.72113800 -72.05567169]
[-70.13269806 -63.89900970]
[-57.46118164 -55.87201309]
[-53.90456390 -56.31664658]
[-49.95594788 -55.02126312]
[-46.45388031 -51.82108307]
[-44.27802277 -46.94041824]
[-32.12468719 -38.14857864]
[-19.97135544 -29.35673332]
[-7.81802225 -20.56489182]
[4.33531094 -11.77304935]
[-1.23693693 -25.69964409]
[-1.80472827 -40.68889236]
[2.69798684 -54.99712753]
[11.74741650 -66.95989990]
[24.29085732 -75.18559265]
[38.86915588 -78.71733856]
[53.78644562 -77.14429474]
[67.30742645 -70.64944458]
[77.85923004 -59.98832703]
[84.21438599 -46.40112686]
[85.63360596 -31.46841812]
[81.95180511 -16.92729187]
[73.59726715 -4.46929312]
[61.54187012 4.45636559]
[47.18798828 8.81137848]
[32.20538712 8.08913612]
[18.33843613 2.37458539]
[27.50037193 14.25140858]
[37.14218521 25.74207497]
[46.78400040 37.23274231]
[56.42581558 48.72340775]
[66.06762695 60.21407700]
[75.70944214 71.70474243]
[85.35125732 83.19541168]
[77.51023865 70.40798187]
[79.13743591 55.49649811]
[89.55190277 44.70118332]
[104.39535522 42.53969574]
[117.45603943 49.91658401]
[123.26828003 63.74473953]
[119.39974213 78.23730469]
[107.46815491 87.32977295]
[120.60978699 80.09806824]
[133.75141907 72.86637115]
[141.77330017 58.56316757]
[158.17230225 58.62930679]
[166.07855225 72.99674225]
[157.35876465 86.88549042]
[140.98312378 86.00800323]
[127.84148407 93.23970032]
[114.69985199 100.47140503]
[129.66818237 101.44554138]
[137.54307556 114.21215057]
[131.69631958 128.02574158]
[117.04906464 131.25961304]
[105.92967224 121.19178009]
[109.88628387 135.66055298]
[113.84289551 150.12931824]
[128.89039612 149.51408386]
[143.69038391 152.26162720]
[157.50115967 158.23098755]
[169.63137817 167.11982727]
[179.47456360 178.47975159]
[186.53948975 191.73892212]
[190.47468567 206.23086548]
[191.08587646 221.22792053]
[188.34562683 235.97781372]
[182.39453125 249.74137878]
[173.53399658 261.82965088]
[162.21101379 271.63821411]
[148.99554443 278.67764282]
[152.95216370 293.14639282]
[156.90876770 307.61517334]
[160.86537170 322.08392334]
[166.04530334 308.00671387]
[176.73710632 297.48599243]
[190.89605713 292.53381348]
[205.81436157 294.09722900]
[218.63899231 301.87725830]
[226.91732788 314.38601685]
[229.06620789 329.23129272]
[224.67465210 343.57403564]
[214.58253479 354.67129517]
[200.71989441 360.40081787]
[185.73786926 359.66683960]
[172.50164795 352.60974121]
[163.54202271 340.57788086]
[163.85000610 355.57473755]
[164.15798950 370.57156372]
[164.46595764 385.56838989]
[164.77394104 400.56524658]
[165.08190918 415.56207275]
[165.38989258 430.55892944]
[165.69787598 445.55575562]
[166.00584412 460.55258179]
[168.59162903 479.76101685]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 151]
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 130]
[11 129]
[12 128]
[13 127]
[26 114]
[27 113]
[28 112]
[29 90]
[30 89]
[31 88]
[32 87]
[33 86]
[34 85]
[35 84]
[40 83]
[41 66]
[42 65]
[43 64]
[44 63]
[45 62]
[46 58]
[47 57]
[49 56]
[50 55]
[98 107]
[99 106]
[100 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
