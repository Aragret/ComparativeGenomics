%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCUUAUCACCUUUCAUGAUCACGCCCUCAUAAUCAUUUUCCUUAUCUGCUUCCUAGUCCUGUxxxxxxxxxxUAAUUGGAAGCGCCACCCUAGCAAUAUCAACCAUUAACCUUCCCUCUACACUUAUCAUCUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[199.28770447 159.26257324]
[186.00035095 152.30221558]
[172.71301270 145.34185791]
[157.84861755 146.28997803]
[149.21440125 133.03250122]
[135.92706299 126.07214355]
[121.00604248 127.60943604]
[109.41699982 137.13276672]
[97.82794952 146.65611267]
[86.23889923 156.17944336]
[74.64984894 165.70278931]
[73.28504181 183.11325073]
[60.03110504 193.96058655]
[43.36355972 191.93670654]
[31.97248650 201.69598389]
[20.58141327 211.45526123]
[9.19034004 221.21452332]
[9.53179359 236.84838867]
[-0.29615021 249.01167297]
[-15.65303612 251.96125793]
[-29.28781319 244.30444336]
[-34.76255798 229.65652466]
[-29.49225807 214.93382263]
[-15.96539402 207.08793640]
[-0.56893492 209.82345581]
[10.82213879 200.06417847]
[22.21321297 190.30490112]
[33.60428619 180.54563904]
[32.79448700 167.65002441]
[39.67898560 156.48614502]
[51.92403412 151.26695251]
[65.12651062 154.11373901]
[76.71556091 144.59039307]
[88.30461121 135.06706238]
[99.89366150 125.54372406]
[111.48270416 116.02038574]
[92.39073944 117.17838287]
[82.25199127 102.04920197]
[68.00529480 97.35540009]
[53.75860596 92.66160583]
[39.51191330 87.96780396]
[27.59397507 97.76403809]
[12.26907539 99.53913879]
[-1.57266724 92.72667694]
[-9.51440334 79.50047302]
[-9.02195263 64.08097076]
[-0.25245553 51.38847733]
[13.99577427 45.47311783]
[29.17617798 48.22246170]
[40.44474411 58.75920486]
[44.20571518 73.72110748]
[58.45240402 78.41490936]
[72.69909668 83.10871124]
[86.94579315 87.80251312]
[107.56007385 82.79991913]
[119.65251160 101.51137543]
[118.42189789 86.56194305]
[117.19128418 71.61251068]
[115.96067047 56.66307449]
[114.73005676 41.71363831]
[113.49944305 26.76420593]
[112.26883698 11.81477070]
[97.38365936 9.42836475]
[83.50239563 3.54839945]
[71.43208313 -5.48327065]
[61.87448120 -17.14155769]
[55.38524628 -30.74866104]
[52.34166336 -45.51348495]
[52.92067337 -60.57762146]
[57.08861923 -75.06526184]
[64.60317993 -88.13410950]
[75.02747345 -99.02436066]
[87.75543213 -107.10287476]
[102.04708862 -111.89997101]
[117.07152557 -113.13675690]
[131.95526123 -110.74132538]
[145.83294678 -104.85295105]
[157.89778137 -95.81396484]
[167.44831848 -84.14988708]
[173.92929077 -70.53884888]
[176.96392822 -55.77218246]
[176.37579346 -40.70840073]
[172.19905090 -26.22329140]
[164.67657471 -13.15900135]
[154.24568176 -2.27506971]
[141.51283264 5.79572535]
[127.21826935 10.58415794]
[128.44888306 25.53359222]
[129.67948914 40.48302841]
[130.91011047 55.43246078]
[132.14071655 70.38189697]
[133.37133789 85.33132935]
[134.60194397 100.28076172]
[142.88742065 112.78479767]
[156.17475891 119.74515533]
[171.98956299 119.29489136]
[179.67337036 132.05451965]
[192.96070862 139.01487732]
[206.24806213 145.97523499]
[214.66059875 133.53701782]
[224.41290283 122.11894226]
[235.38233948 111.86460114]
[247.43093872 102.90293884]
[260.40716553 95.34667969]
[274.14788818 89.29083252]
[288.48022461 84.81156921]
[303.22396851 81.96520996]
[318.19372559 80.78755951]
[333.20120239 81.29342651]
[348.05764771 83.47644043]
[362.57626343 87.30916595]
[376.57446289 92.74338531]
[389.87615967 99.71076202]
[402.31411743 108.12368011]
[413.73190308 117.87632751]
[423.98593140 128.84606934]
[432.94723511 140.89492798]
[440.50311279 153.87139893]
[446.55853271 167.61227417]
[451.03738403 181.94476318]
[453.88330078 196.68859863]
[455.06048584 211.65837097]
[454.55419922 226.66583252]
[452.37072754 241.52221680]
[448.53756714 256.04074097]
[443.10293579 270.03875732]
[436.13516235 283.34027100]
[427.72186279 295.77795410]
[417.96887207 307.19546509]
[406.99884033 317.44915771]
[394.94970703 326.41009521]
[381.97299194 333.96557617]
[368.23193359 340.02059937]
[353.89932251 344.49902344]
[339.15539551 347.34448242]
[324.18557739 348.52124023]
[309.17816162 348.01446533]
[294.32180786 345.83056641]
[279.80343628 341.99697876]
[265.80557251 336.56192017]
[252.50427246 329.59375000]
[240.06681824 321.18008423]
[228.64961243 311.42675781]
[218.39625549 300.45639038]
[209.43566895 288.40701294]
[201.88056946 275.43008423]
[195.82595825 261.68884277]
[191.34797668 247.35609436]
[188.50294495 232.61209106]
[187.32664490 217.64224243]
[187.83384705 202.63481140]
[190.01820374 187.77854919]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 99]
[2 98]
[3 97]
[5 95]
[6 94]
[7 36]
[8 35]
[9 34]
[10 33]
[11 32]
[14 28]
[15 27]
[16 26]
[17 25]
[38 54]
[39 53]
[40 52]
[41 51]
[56 93]
[57 92]
[58 91]
[59 90]
[60 89]
[61 88]
[62 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
