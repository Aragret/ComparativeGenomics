%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAUUACUACCACUGACAUGACUUUCCAAAAAACACAUAAUUUGAAUCAACACAACCACCCAxxxxxxxxxxUAAACCCCAUUAAACGCCUGGCAGCCGGAAGCCUAUUCGCAGGAUUUCUCAUUACUAACACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[73.94060516 264.01043701]
[73.94060516 249.01045227]
[73.94060516 234.01045227]
[73.94060516 219.01045227]
[73.94060516 204.01045227]
[73.94060516 189.01045227]
[73.94060516 174.01045227]
[73.94060516 159.01045227]
[73.94060516 144.01045227]
[73.94060516 129.01045227]
[58.95764542 129.72532654]
[46.03306961 122.11248016]
[39.39393616 108.66175842]
[41.21162033 93.77230072]
[50.89163589 82.31379700]
[65.26806641 78.03382874]
[79.63901520 82.33218384]
[89.30439758 93.80313110]
[81.84948730 80.78681946]
[65.73659515 71.93500519]
[66.40767670 54.42644882]
[58.68358994 41.56804657]
[50.95950699 28.70964432]
[37.22063828 20.86400414]
[37.29949188 5.96960735]
[29.57540512 -6.88879490]
[16.10025215 -0.27864757]
[2.11305761 5.16490412]
[-12.28539562 9.40263844]
[-26.99136543 12.40402126]
[-41.89889145 14.14742851]
[-56.90056610 14.62029743]
[-71.88829803 13.81922245]
[-86.75409698 11.74997330]
[-101.39086151 8.42746067]
[-115.69312286 3.87562418]
[-129.55783081 -1.87274063]
[-142.88508606 -8.77621555]
[-155.57887268 -16.78506088]
[-167.54772949 -25.84156990]
[-178.70541382 -35.88048935]
[-188.97154236 -46.82949066]
[-198.27212524 -58.60968399]
[-206.54016113 -71.13618469]
[-213.71609497 -84.31874847]
[-219.74819946 -98.06238556]
[-224.59303284 -112.26806641]
[-228.21566772 -126.83345032]
[-230.59001160 -141.65357971]
[-231.69894409 -156.62168884]
[-231.53450012 -171.62991333]
[-230.09785461 -186.57011414]
[-227.39935303 -201.33467102]
[-223.45843506 -215.81718445]
[-218.30351257 -229.91329956]
[-211.97171021 -243.52145386]
[-204.50866699 -256.54360962]
[-195.96812439 -268.88595581]
[-186.41165161 -280.45953369]
[-175.90809631 -291.18096924]
[-164.53311157 -300.97299194]
[-152.36869812 -309.76507568]
[-139.50247192 -317.49386597]
[-126.02714539 -324.10363770]
[-112.03981018 -329.54684448]
[-97.64125061 -333.78421021]
[-82.93520355 -336.78521729]
[-68.02763367 -338.52822876]
[-53.02594376 -339.00070190]
[-38.03823471 -338.19924927]
[-23.17248535 -336.12960815]
[-8.53581047 -332.80673218]
[5.76633120 -328.25451660]
[19.63089180 -322.50579834]
[32.95797348 -315.60198975]
[45.65155411 -307.59280396]
[57.62017441 -298.53598022]
[68.77760315 -288.49676514]
[79.04343414 -277.54751587]
[88.34371948 -265.76708984]
[96.61144257 -253.24035645]
[103.78702545 -240.05761719]
[109.81877899 -226.31382751]
[114.66323853 -212.10801697]
[118.28549957 -197.54254150]
[120.65946198 -182.72235107]
[121.76801300 -167.75421143]
[121.60318756 -152.74598694]
[120.16614532 -137.80581665]
[117.46726227 -123.04134369]
[113.52597809 -108.55893707]
[108.37068939 -94.46295166]
[102.03853607 -80.85494995]
[94.57514954 -67.83297729]
[86.03429413 -55.49086761]
[76.47752380 -43.91754150]
[65.97367859 -33.19638443]
[54.59845734 -23.40464783]
[42.43380737 -14.61287975]
[50.15789413 -1.75447750]
[63.34428406 5.17144394]
[63.81790924 20.98555946]
[71.54199219 33.84395981]
[79.26607513 46.70236588]
[90.95909119 49.95518112]
[97.48797607 60.65997314]
[94.86579895 73.33190918]
[102.32070923 86.34822083]
[114.58307648 94.98733521]
[129.34913635 97.62620544]
[144.29524231 92.43736267]
[155.46284485 102.29302216]
[170.22889709 104.93188477]
[184.99494934 107.57075500]
[197.81707764 98.33123779]
[213.40341187 100.94695282]
[222.50683594 113.86604309]
[219.72648621 129.42384338]
[206.71186829 138.39018250]
[191.18432617 135.44549561]
[182.35609436 122.33680725]
[167.59004211 119.69794464]
[152.82397461 117.05908203]
[138.93402100 122.43666840]
[126.71026611 112.39225769]
[111.94420624 109.75339508]
[106.19330597 114.56765747]
[117.88660431 123.96269989]
[129.57989502 133.35774231]
[141.27319336 142.75279236]
[154.87947083 149.06700134]
[161.62265015 162.46585083]
[158.58685303 177.15544128]
[147.08482361 186.78369141]
[132.09025574 187.18716431]
[120.08708954 178.19137573]
[116.26565552 163.68739319]
[109.07427216 150.52366638]
[101.88288879 137.35992432]
[94.69150543 124.19618225]
[88.94060516 129.01045227]
[88.94060516 144.01045227]
[88.94060516 159.01045227]
[88.94060516 174.01045227]
[88.94060516 189.01045227]
[88.94060516 204.01045227]
[88.94060516 219.01045227]
[88.94060516 234.01045227]
[88.94060516 249.01045227]
[88.94060516 264.01043701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[18 108]
[19 107]
[21 104]
[22 103]
[23 102]
[25 100]
[26 99]
[109 126]
[110 125]
[112 123]
[113 122]
[114 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
