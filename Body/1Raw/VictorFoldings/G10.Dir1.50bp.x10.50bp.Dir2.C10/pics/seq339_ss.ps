%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCCCGCUUCUGGCCACAGCACUUAAACACAUCUCUGCCAAACCCCAAAAACAAAGAACCxxxxxxxxxxACCAAGACCCUACUUCUAACCUCCCUGUUCUUAUGAAUUCGAACAGCAUACCCCCGAUUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[27.93215370 303.86163330]
[30.08507156 319.53567505]
[18.22835922 328.55053711]
[12.74132824 342.51092529]
[7.25429630 356.47131348]
[1.76726508 370.43170166]
[-3.71976638 384.39208984]
[-3.88647056 401.34521484]
[-20.22321129 405.87811279]
[-29.10142899 391.43466187]
[-17.68015671 378.90505981]
[-12.19312477 364.94467163]
[-6.70609331 350.98428345]
[-1.21906185 337.02389526]
[4.26796961 323.06350708]
[1.72258389 308.38800049]
[13.97176456 298.37460327]
[-22.27660942 278.33050537]
[-54.03779221 251.74221802]
[-80.14624023 219.58541870]
[-92.92359924 227.44285583]
[-105.70095062 235.30027771]
[-113.02328491 249.97390747]
[-129.40638733 250.69917297]
[-137.99673462 236.72999573]
[-129.95730591 222.43666077]
[-113.55838013 222.52291870]
[-100.78102112 214.66549683]
[-88.00366211 206.80805969]
[-93.00075531 197.48872375]
[-97.53623199 187.93621826]
[-101.59926605 178.17338562]
[-105.18012238 168.22358704]
[-108.27024841 158.11061096]
[-110.86225128 147.85865784]
[-112.94992828 137.49223328]
[-114.52828979 127.03614807]
[-115.59355927 116.51539612]
[-116.14318848 105.95513916]
[-116.17585754 95.38064575]
[-115.69149780 84.81719208]
[-114.69126892 74.29006195]
[-113.17755127 63.82441330]
[-111.15397644 53.44528961]
[-108.62537384 43.17751312]
[-105.59780121 33.04564285]
[-102.07849121 23.07390404]
[-98.07586670 13.28615379]
[-93.59950256 3.70579863]
[-88.66010284 -5.64424753]
[-83.26947784 -14.74162197]
[-77.44052124 -23.56456566]
[-71.18717957 -32.09197617]
[-64.52440643 -40.30346298]
[-57.46813202 -48.17937851]
[-50.03524017 -55.70089340]
[-42.24350357 -62.85001373]
[-34.11156082 -69.60964203]
[-25.65886116 -75.96360779]
[-16.90562057 -81.89672089]
[-7.87277269 -87.39479065]
[1.41807628 -92.44465637]
[10.94470596 -97.03424835]
[20.68433189 -101.15259552]
[30.61365891 -104.78983307]
[40.70893860 -107.93727875]
[50.94602585 -110.58738708]
[61.30043411 -112.73383331]
[71.74740601 -114.37148285]
[82.26194763 -115.49640656]
[92.81891632 -116.10593414]
[103.39305878 -116.19858551]
[113.95908356 -115.77415466]
[124.49172211 -114.83364868]
[134.96578979 -113.37932587]
[145.35621643 -111.41464996]
[155.63816833 -108.94433594]
[165.78706360 -105.97428131]
[175.77859497 -102.51159668]
[185.58889771 -98.56455231]
[195.19448853 -94.14260864]
[204.57240295 -89.25631714]
[213.70021057 -83.91738129]
[222.55607605 -78.13857269]
[231.11882019 -71.93370056]
[239.36796570 -65.31761169]
[247.28378296 -58.30612564]
[254.84733582 -50.91601562]
[262.04052734 -43.16495895]
[268.84619141 -35.07149124]
[275.24798584 -26.65496826]
[281.23065186 -17.93552208]
[286.77987671 -8.93400764]
[291.88235474 0.32804713]
[296.52593994 9.82849026]
[300.69946289 19.54459763]
[304.39294434 29.45313263]
[307.59762573 39.53039551]
[310.30575562 49.75228882]
[312.51089478 60.09435654]
[314.20776367 70.53186798]
[315.39233398 81.03985596]
[316.06170654 91.59320068]
[316.21435547 102.16664124]
[315.84985352 112.73490906]
[330.78417969 114.13721466]
[345.71847534 115.53951263]
[360.65277100 116.94181824]
[375.58709717 118.34412384]
[390.52139282 119.74642944]
[399.34515381 107.17514801]
[413.27914429 100.71453094]
[428.57519531 102.10244751]
[441.11874390 110.96555328]
[447.53564453 124.91972351]
[446.09979248 140.21134949]
[437.19741821 152.72706604]
[423.22320557 159.10020447]
[407.93615723 157.61642456]
[395.44839478 148.67485046]
[389.11911011 134.68074036]
[374.18478394 133.27842712]
[359.25048828 131.87612915]
[344.31616211 130.47381592]
[329.38186646 129.07151794]
[314.44757080 127.66921997]
[312.04870605 142.29295349]
[308.65380859 156.71801758]
[304.27880859 170.87667847]
[298.94430542 184.70242310]
[292.67532349 198.13031006]
[285.50131226 211.09724426]
[277.45599365 223.54235840]
[268.57711792 235.40716553]
[258.90640259 246.63594055]
[248.48927307 257.17593384]
[237.37467957 266.97766113]
[225.61480713 275.99505615]
[213.26490784 284.18579102]
[200.38298035 291.51135254]
[187.02952576 297.93737793]
[173.26728821 303.43362427]
[159.16090393 307.97433472]
[144.77664185 311.53814697]
[130.18203735 314.10833740]
[115.44567871 315.67285156]
[100.63676453 316.22427368]
[85.82485199 315.76007080]
[71.07952881 314.28240967]
[56.47005081 311.79821777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[3 15]
[4 14]
[5 13]
[6 12]
[7 11]
[20 29]
[21 28]
[22 27]
[105 126]
[106 125]
[107 124]
[108 123]
[109 122]
[110 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
