%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACUAAUACUAACAUCUCAGACGCUCAGGAAAUAGAAACCGUCUGAACUAUCCUGCCCGCCxxxxxxxxxxAUACUAGUAUAUCGCUCACACCUCAUAUCCUCCCUACUAUGCCUAGAAGGAAUAAUACUACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[77.08444977 292.89459229]
[77.08444977 277.89459229]
[77.08444977 262.89459229]
[77.08444977 247.89459229]
[77.08444977 232.89459229]
[77.08444977 217.89459229]
[77.08444977 202.89459229]
[77.08444977 187.89459229]
[77.08444977 172.89459229]
[77.08444977 157.89459229]
[86.95822906 98.68130493]
[73.71564484 91.63616943]
[60.47305679 84.59104156]
[47.23047256 77.54590607]
[31.41311836 77.89508820]
[23.81100845 65.08660889]
[10.56842232 58.04147339]
[0.87318444 69.55586243]
[-10.99968147 78.79911804]
[-24.52971077 85.36914062]
[-39.12443542 88.98091888]
[-54.14532089 89.47895813]
[-68.93571472 86.84391022]
[-82.84955597 81.19335175]
[-95.27956390 72.77652740]
[-105.68377686 61.96335602]
[-113.60918427 49.22816849]
[-118.71141052 35.12892151]
[-120.76973724 20.28272629]
[-119.69659424 5.33885479]
[-115.54130554 -9.04965973]
[-128.78388977 -16.09479523]
[-143.72955322 -11.70561600]
[-157.05906677 -19.03903008]
[-161.15136719 -33.31448364]
[-174.39395142 -40.35961914]
[-187.63653564 -47.40475464]
[-200.87911987 -54.44989014]
[-214.12170410 -61.49502563]
[-220.83613586 -61.64985275]
[-225.69961548 -64.74466705]
[-227.75964355 -69.11865997]
[-240.69769287 -76.70856476]
[-253.63575745 -84.29847717]
[-266.27725220 -75.74539948]
[-281.37915039 -73.53278351]
[-295.94293213 -78.09994507]
[-307.07696533 -88.54006958]
[-312.57055664 -102.78026581]
[-311.33297729 -117.99312592]
[-303.60992432 -131.15812683]
[-290.93484497 -139.66136169]
[-275.82437134 -141.81448364]
[-261.27868652 -137.19000244]
[-250.18583679 -126.70611572]
[-244.74836731 -112.44440460]
[-246.04583740 -97.23653412]
[-233.10778809 -89.64662170]
[-220.16973877 -82.05671692]
[-207.07658386 -74.73760986]
[-193.83398438 -67.69247437]
[-180.59140015 -60.64733887]
[-167.34881592 -53.60220718]
[-154.10623169 -46.55707169]
[-139.98083496 -51.14059830]
[-126.45060730 -44.18447495]
[-121.73876190 -29.33737946]
[-108.49617767 -22.29224586]
[-98.88584900 -33.77864456]
[-87.09263611 -43.01937866]
[-73.63053894 -49.60861206]
[-59.08691025 -53.25614929]
[-44.09688187 -53.80018616]
[-29.31558228 -51.21451569]
[-15.38953590 -45.60976028]
[-2.92836666 -37.22865677]
[7.52188253 -26.43552971]
[15.50267696 -13.70045948]
[20.66310883 0.42118505]
[22.77532959 15.31297302]
[21.74460411 30.32431412]
[17.61355782 44.79888916]
[30.85614395 51.84402084]
[45.72629929 50.99092102]
[54.27560806 64.30331421]
[67.51819611 71.34844971]
[80.76078033 78.39358521]
[94.00336456 85.43872070]
[108.97415161 84.50309753]
[121.23652649 75.86397552]
[133.49888611 67.22486115]
[145.76126099 58.58574677]
[143.20411682 43.53836060]
[147.43727112 28.87401199]
[157.62023926 17.50431633]
[171.73117065 11.68673325]
[186.96833801 12.57635021]
[200.30639648 19.99653244]
[209.09704590 32.47399521]
[211.59492493 47.53133392]
[207.30404663 62.17889786]
[197.07638550 73.50840759]
[182.94265747 79.27037811]
[167.70910645 78.32076263]
[154.40037537 70.84811401]
[142.13800049 79.48722839]
[129.87564087 88.12634277]
[117.61327362 96.76546478]
[118.62443542 104.19698334]
[133.48751831 102.17488098]
[135.50939941 117.03798676]
[120.64677429 119.06003571]
[121.65794373 126.49155426]
[135.78274536 131.54031372]
[149.90754700 136.58906555]
[165.50677490 133.94812012]
[174.88720703 145.51777649]
[189.01200867 150.56652832]
[203.13681030 155.61529541]
[219.16427612 152.14360046]
[229.98269653 164.46813965]
[224.46299744 179.91044617]
[208.28340149 182.58482361]
[198.08805847 169.74009705]
[183.96325684 164.69132996]
[169.83845520 159.64257812]
[155.24952698 162.64463806]
[144.85879517 150.71386719]
[130.73399353 145.66511536]
[116.60918427 140.61636353]
[110.47799683 144.93591309]
[120.45317841 156.13841248]
[130.42835999 167.34089661]
[142.76910400 175.86767578]
[142.83740234 190.86752319]
[130.57479858 199.50631714]
[116.47340393 194.39256287]
[112.59839630 179.90251160]
[105.40701294 166.73876953]
[98.21562958 153.57502747]
[92.08444977 157.89459229]
[92.08444977 172.89459229]
[92.08444977 187.89459229]
[92.08444977 202.89459229]
[92.08444977 217.89459229]
[92.08444977 232.89459229]
[92.08444977 247.89459229]
[92.08444977 262.89459229]
[92.08444977 277.89459229]
[92.08444977 292.89459229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 88]
[12 87]
[13 86]
[14 85]
[16 83]
[17 82]
[31 68]
[32 67]
[35 64]
[36 63]
[37 62]
[38 61]
[39 60]
[42 59]
[43 58]
[44 57]
[89 108]
[90 107]
[91 106]
[92 105]
[113 130]
[114 129]
[115 128]
[117 126]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
