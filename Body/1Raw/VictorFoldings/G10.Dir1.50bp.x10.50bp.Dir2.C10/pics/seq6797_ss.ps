%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCGCCGGAGGAGGAGACCCCAUUCUAUACCAACACCUAUUCUGAUUUUUCGGUCACCCUxxxxxxxxxxUGAACGAAAAUCUGUUCGCUUCAUUCAUUGCCCCCACAAUCCUAGGCCUACCCGCCGCAGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[123.72838593 302.10745239]
[123.10440826 287.12042236]
[122.48043060 272.13342285]
[121.85645294 257.14639282]
[121.23247528 242.15937805]
[120.60849762 227.17236328]
[119.98451996 212.18534851]
[119.36054230 197.19833374]
[116.87541962 182.40562439]
[112.56784058 168.03742981]
[108.26025391 153.66925049]
[103.95266724 139.30107117]
[85.46752167 136.72879028]
[70.22677612 125.95674896]
[61.63296509 109.38979340]
[61.60467911 90.72655487]
[70.14822388 74.13362885]
[60.88327789 62.33698654]
[51.61832809 50.54034805]
[42.35337830 38.74370956]
[32.96621704 27.04408455]
[23.45785713 15.44274330]
[13.94949913 3.84140158]
[-0.78250366 -1.92736387]
[-2.86599708 -16.67552757]
[-12.37435532 -28.27686882]
[-21.88271332 -39.87820816]
[-19.98934364 -24.99818420]
[-21.07265854 -10.03735447]
[-25.08996964 4.41467667]
[-31.88295174 17.78835869]
[-41.18389511 29.55663872]
[-52.62625885 39.25573349]
[-65.75909424 46.50339890]
[-80.06484222 51.01400757]
[-94.97971344 52.60980225]
[-109.91591644 51.22788620]
[-124.28482819 46.92272568]
[-137.52017212 39.86398315]
[-149.10032654 30.32984352]
[-158.56895447 18.69604492]
[-165.55287170 5.42107201]
[-169.77684021 -8.97191238]
[-171.07441711 -23.91568375]
[-169.39445496 -38.82131195]
[-164.80316162 -53.10136795]
[-157.48147583 -66.19307709]
[-147.71795654 -77.58050537]
[-135.89735413 -86.81487274]
[-122.48554230 -93.53224945]
[-108.01106262 -97.46791840]
[-93.04435730 -98.46675873]
[-78.17525482 -96.48942566]
[-63.98974991 -91.61383057]
[-51.04688644 -84.03211975]
[-39.85673904 -74.04309845]
[-30.86141586 -62.04224777]
[-32.10829163 -76.99033356]
[-33.35516739 -91.93842316]
[-34.60203934 -106.88651276]
[-35.84891510 -121.83459473]
[-37.09579086 -136.78268433]
[-45.95344925 -149.89193726]
[-39.30088043 -163.21832275]
[-40.54775620 -178.16641235]
[-41.79463196 -193.11450195]
[-56.28403091 -197.71076965]
[-67.90834808 -207.50585938]
[-74.89496613 -221.00605774]
[-76.17846680 -236.15270996]
[-71.56313324 -250.63606262]
[-61.75276947 -262.24746704]
[-48.24338150 -269.21633911]
[-33.09505463 -270.47991943]
[-18.61779785 -265.84552002]
[-7.01928806 -256.01989746]
[-0.06821524 -242.50134277]
[1.17543399 -227.35137939]
[-3.47798824 -212.88023376]
[-13.31886864 -201.29464722]
[-26.84654427 -194.36137390]
[-25.59967041 -179.41328430]
[-24.35279465 -164.46519470]
[-15.58431911 -152.42514038]
[-22.14770317 -138.02955627]
[-20.90082741 -123.08147430]
[-19.65395355 -108.13338470]
[-18.40707779 -93.18529510]
[-17.16020393 -78.23721313]
[-15.91333008 -63.28912354]
[-10.28137302 -49.38656998]
[-0.77301443 -37.78522873]
[8.73534393 -26.18388557]
[22.78724670 -21.24492645]
[25.55084038 -5.66695690]
[35.05920029 5.93438435]
[44.56755829 17.53572655]
[51.28347015 20.73606110]
[54.15001678 29.47875786]
[63.41496658 41.27539825]
[72.67991638 53.07203674]
[81.94486237 64.86867523]
[95.98777008 60.70496750]
[110.58238220 61.94463348]
[123.72183228 68.41722107]
[133.59934998 79.23268127]
[138.85668945 92.90382385]
[153.85586548 93.05986023]
[168.85505676 93.21589661]
[183.85424805 93.37193298]
[194.96842957 82.13579559]
[210.77270508 82.13311005]
[221.89071655 93.36545563]
[221.72630310 109.16889191]
[210.37704468 120.16751099]
[194.57623291 119.83603668]
[183.69821167 108.37111664]
[168.69902039 108.21508026]
[153.69982910 108.05904388]
[138.70065308 107.90300751]
[136.69848633 114.60886383]
[133.54429626 120.85612488]
[129.33709717 126.44867706]
[124.20895386 131.21096802]
[118.32085419 134.99348450]
[122.62844086 149.36166382]
[126.93601990 163.72985840]
[131.24360657 178.09803772]
[136.11141968 163.90985107]
[146.56726074 153.15460205]
[160.61238098 147.88824463]
[175.56192017 149.11749268]
[188.55813599 156.60737610]
[197.11666870 168.92613220]
[199.60147095 183.71888733]
[195.53753662 198.15788269]
[185.70175171 209.48295593]
[171.97428894 215.52919006]
[156.97932434 215.14082336]
[143.58326721 208.39205933]
[134.34756470 196.57435608]
[134.97154236 211.56137085]
[135.59552002 226.54838562]
[136.21948242 241.53540039]
[136.84346008 256.52243042]
[137.46743774 271.50942993]
[138.09141541 286.49645996]
[138.71539307 301.48345947]
[145.41539001 317.05737305]
[132.30485535 327.80679321]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 128]
[10 127]
[11 126]
[12 125]
[17 102]
[18 101]
[19 100]
[20 99]
[21 97]
[22 96]
[23 95]
[25 93]
[26 92]
[27 91]
[57 90]
[58 89]
[59 88]
[60 87]
[61 86]
[62 85]
[64 83]
[65 82]
[66 81]
[107 120]
[108 119]
[109 118]
[110 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
