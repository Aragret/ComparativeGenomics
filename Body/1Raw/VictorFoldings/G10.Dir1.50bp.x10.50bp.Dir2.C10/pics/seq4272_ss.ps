%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUAACCUCCCUGUUCUUAUGAAUUCGAACAGCAUACCCCCGAUUCCGCUACGACCAACUCAxxxxxxxxxxAAAAAUUUUGGUGCAACUCCAAAUAAAAGUAAUAACCAUGCACACUACUAUAACCACCCUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[120.65052795 117.02315521]
[114.01584625 102.95490265]
[104.82120514 113.48818970]
[91.03291321 111.16989899]
[76.90810394 116.21865845]
[63.00555038 121.85061646]
[49.34930801 128.05601501]
[35.69306946 134.26142883]
[22.03682709 140.46684265]
[8.38058662 146.67224121]
[-5.27565479 152.87765503]
[-18.93189621 159.08305359]
[-19.57637024 168.90939331]
[-23.76453781 177.75749207]
[-30.87070656 184.40550232]
[-39.86963272 187.95288086]
[-49.48431396 187.94223022]
[-58.36717606 184.41783142]
[-65.28894043 177.91345215]
[-79.41374207 182.96220398]
[-93.53855133 188.01095581]
[-107.66335297 193.05972290]
[-121.78815460 198.10847473]
[-135.91296387 203.15722656]
[-138.58839417 218.28131104]
[-148.47970581 230.03108215]
[-162.92619324 235.24595642]
[-178.04180908 232.52311707]
[-189.76052856 222.59501648]
[-194.93008423 208.13226318]
[-192.15988159 193.02526855]
[-182.19509888 181.33772278]
[-167.71621704 176.21351624]
[-152.61796570 179.03106689]
[-140.96171570 189.03242493]
[-126.83690643 183.98367310]
[-112.71210480 178.93492126]
[-98.58730316 173.88615417]
[-84.46250153 168.83740234]
[-70.33769989 163.78865051]
[-63.29161835 144.66041565]
[-44.20547485 136.71235657]
[-25.13730240 145.42681885]
[-11.48106194 139.22140503]
[2.17517900 133.01600647]
[15.83141994 126.81059265]
[29.48766136 120.60518646]
[43.14390182 114.39978027]
[56.80014420 108.19437408]
[57.89957428 105.54888916]
[60.14725876 103.19476318]
[63.43193817 101.58456421]
[67.47608948 101.11992645]
[71.85935211 102.09385681]
[85.98415375 97.04509735]
[95.17879486 86.51181030]
[108.96708679 88.83010101]
[105.39082336 74.78209686]
[103.12098694 60.46533203]
[102.17671204 46.00101852]
[102.56590271 31.51162720]
[104.28517151 17.11982155]
[107.31988525 2.94743872]
[111.64425659 -10.88555622]
[117.22158813 -24.26207542]
[124.00458527 -37.06890488]
[131.93572998 -49.19765854]
[140.94783020 -60.54570389]
[150.96447754 -71.01702118]
[161.90083313 -80.52301788]
[173.66424561 -88.98327637]
[186.15507507 -96.32624817]
[199.26750183 -102.48984528]
[212.89050293 -107.42195892]
[226.90870667 -111.08091736]
[241.20338440 -113.43583679]
[255.65353394 -114.46685791]
[270.13681030 -114.16534424]
[284.53054810 -112.53393555]
[298.71298218 -109.58654022]
[312.56396484 -105.34819031]
[325.96630859 -99.85485077]
[338.80657959 -93.15312195]
[350.97610474 -85.29981232]
[362.37191772 -76.36148834]
[372.89755249 -66.41389465]
[382.46398926 -55.54130936]
[390.99029541 -43.83584595]
[398.40435791 -31.39665604]
[404.64349365 -18.32909775]
[409.65493774 -4.74384165]
[424.15054321 -8.60100079]
[438.64611816 -12.45816040]
[453.14172363 -16.31531906]
[467.63732910 -20.17247963]
[481.76211548 -25.22123528]
[495.41836548 -31.42664337]
[509.07461548 -37.63204956]
[511.19723511 -52.91269302]
[521.26153564 -64.60511780]
[536.05609131 -68.97831726]
[550.85998535 -64.63681793]
[560.94934082 -52.96597672]
[563.10467529 -37.68991470]
[556.63824463 -23.68317223]
[543.61346436 -15.41524410]
[528.18646240 -15.52440071]
[515.28002930 -23.97580910]
[501.62377930 -17.77040100]
[487.96752930 -11.56499481]
[502.16857910 -6.73486614]
[510.94903564 5.42670441]
[511.06466675 20.42625809]
[502.47277832 32.72175980]
[488.34786987 37.77026749]
[473.90884399 33.70645142]
[464.49063110 22.03182030]
[463.57305908 7.05991173]
[471.49447632 -5.67688274]
[456.99887085 -1.81972337]
[442.50329590 2.03743601]
[428.00769043 5.89459562]
[413.51208496 9.75175476]
[416.03939819 25.08203125]
[417.04272461 40.58739090]
[416.51217651 56.11670685]
[414.45278931 71.51860809]
[410.88458252 86.64293671]
[405.84216309 101.34226227]
[399.37460327 115.47325134]
[391.54483032 128.89811707]
[382.42907715 141.48596191]
[372.11608887 153.11398315]
[360.70629883 163.66880798]
[348.31085205 173.04742432]
[335.05050659 181.15834045]
[321.05444336 187.92240906]
[306.45904541 193.27357483]
[291.40655518 197.15957642]
[276.04364014 199.54243469]
[260.52005005 200.39878845]
[244.98709106 199.72018433]
[229.59616089 197.51312256]
[214.49729919 193.79899597]
[199.83772278 188.61389160]
[185.76036072 182.00825500]
[172.40248108 174.04637146]
[159.89433289 164.80572510]
[148.35791016 154.37632751]
[137.90574646 142.85971069]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 57]
[4 55]
[5 54]
[6 49]
[7 48]
[8 47]
[9 46]
[10 45]
[11 44]
[12 43]
[19 40]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 110]
[97 109]
[98 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
