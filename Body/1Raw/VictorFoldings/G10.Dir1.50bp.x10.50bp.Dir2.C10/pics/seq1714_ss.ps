%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCUCAAGUAUACUUCAAAGGACAUUUAACUAAAACCCCUACGCAUUUAUAUAGAGGAGACxxxxxxxxxxUCCACAUCAAAACCCCCUCCCCAUGCUUACAAGCAAGUACAGCAAUCAACCCUCAACUAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[215.92834473 183.57832336]
[203.31721497 175.45678711]
[190.70608521 167.33523560]
[178.09495544 159.21369934]
[165.48382568 151.09214783]
[152.87269592 142.97061157]
[140.26158142 134.84907532]
[127.65044403 126.72752380]
[115.03932190 118.60598755]
[102.42819214 110.48444366]
[88.10559082 106.02762604]
[73.11289978 105.55958557]
[58.12020111 105.09154510]
[43.12750626 104.62349701]
[33.17179871 112.89016724]
[20.65472984 112.15399170]
[12.29109287 103.35871124]
[-2.68862200 102.57886505]
[-17.66833687 101.79901886]
[-32.64805222 101.01918030]
[-47.62776566 100.23933411]
[-54.43173981 114.77350616]
[-66.25484467 125.56784821]
[-81.27436066 130.99813843]
[-97.19001770 130.26402283]
[-111.57627869 123.50687408]
[-122.25195312 111.78370667]
[-127.61093140 96.90196991]
[-142.60362244 96.43392944]
[-157.59632874 95.96588135]
[-166.31671143 106.28153229]
[-179.20344543 109.62219238]
[-191.47230530 104.98008728]
[-198.70172119 94.26876831]
[-213.68144226 93.48892212]
[-228.66114807 92.70907593]
[-241.49426270 102.33667755]
[-256.98593140 98.16674805]
[-263.25222778 83.39810944]
[-255.48623657 69.35998535]
[-239.64532471 66.82123566]
[-227.88130188 77.72936249]
[-212.90159607 78.50920868]
[-197.92187500 79.28905487]
[-185.95446777 67.51454926]
[-168.83630371 68.01712799]
[-157.12828064 80.97319031]
[-142.13558960 81.44123077]
[-127.14288330 81.90927124]
[-121.84480286 68.87876129]
[-112.38918304 58.42419815]
[-99.90151215 51.82047653]
[-85.87863159 49.88231659]
[-72.00936890 52.86380768]
[-59.97111893 60.42529297]
[-51.22697067 71.67195129]
[-46.84791946 85.25962067]
[-31.86820602 86.03945923]
[-16.88849068 86.81930542]
[-1.90877676 87.59915161]
[13.07093716 88.37899780]
[28.21298599 79.56320190]
[43.59554672 89.63080597]
[58.58824158 90.09884644]
[73.58094025 90.56688690]
[88.57363129 91.03492737]
[76.03602600 82.80035400]
[65.59941101 72.02644348]
[57.76764679 59.23334122]
[52.91883469 45.03865814]
[51.28705597 30.12767982]
[52.95108795 15.22026539]
[57.83060074 1.03610694]
[65.69002533 -11.74002266]
[76.14991760 -22.49132729]
[88.70532227 -30.69876099]
[102.75007629 -35.96609116]
[117.60615540 -38.03902435]
[132.55633545 -36.81748581]
[146.87886047 -32.36045074]
[159.88227844 -24.88308907]
[170.93884277 -14.74638939]
[179.51472473 -2.43972421]
[185.19595337 11.44277382]
[187.70822144 26.23089409]
[186.93025208 41.21070480]
[182.89961243 55.65902328]
[175.81086731 68.87832642]
[166.00627136 80.23040771]
[153.95915222 89.16723633]
[140.25111389 95.25735474]
[125.54393768 98.20674896]
[110.54972839 97.87331390]
[123.16085815 105.99485779]
[135.77198792 114.11640167]
[148.38311768 122.23793793]
[160.99424744 130.35948181]
[173.60537720 138.48101807]
[186.21650696 146.60256958]
[198.82763672 154.72410583]
[211.43875122 162.84565735]
[224.04988098 170.96719360]
[232.02745056 171.08311462]
[237.88027954 175.27084351]
[252.87297058 175.73889160]
[267.86566162 176.20693970]
[282.85836792 176.67497253]
[297.85513306 176.98703003]
[312.85430908 177.14306641]
[327.85348511 177.29910278]
[338.96768188 166.06297302]
[354.77197266 166.06028748]
[365.88995361 177.29263306]
[365.72555542 193.09606934]
[354.37628174 204.09468079]
[338.57546997 203.76321411]
[327.69744873 192.29829407]
[312.69827271 192.14225769]
[297.69909668 191.98622131]
[290.93414307 195.08158875]
[282.39031982 191.66767883]
[267.39764404 191.19963074]
[252.40493774 190.73158264]
[237.41224670 190.26354980]
[250.05480957 198.33605957]
[260.70559692 208.89828491]
[268.88336182 221.47302246]
[274.21865845 235.49211121]
[276.47036743 250.32214355]
[275.53680420 265.29306030]
[271.46011353 279.72845459]
[264.42449951 292.97610474]
[254.74786377 304.43746948]
[242.86738586 313.59466553]
[229.31987000 320.03396606]
[214.71740723 323.46447754]
[199.71978760 323.73114014]
[185.00460815 320.82192993]
[171.23674011 314.86828613]
[159.03823853 306.13922119]
[148.96026611 295.02911377]
[141.45816040 282.03994751]
[136.87088013 267.75860596]
[135.40568542 252.83032227]
[137.12876892 237.92962646]
[141.96231079 223.72973633]
[149.68788147 210.87222290]
[159.95645142 199.93803406]
[172.30406189 191.42120361]
[186.17282104 185.70651245]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 102]
[2 101]
[3 100]
[4 99]
[5 98]
[6 97]
[7 96]
[8 95]
[9 94]
[10 93]
[11 66]
[12 65]
[13 64]
[14 63]
[17 61]
[18 60]
[19 59]
[20 58]
[21 57]
[28 49]
[29 48]
[30 47]
[34 44]
[35 43]
[36 42]
[104 124]
[105 123]
[106 122]
[107 121]
[108 119]
[109 118]
[110 117]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
