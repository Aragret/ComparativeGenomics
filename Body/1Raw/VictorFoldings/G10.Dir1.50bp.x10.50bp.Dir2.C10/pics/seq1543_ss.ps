%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGAUCAACCUCACCACCUCUUGCUCAGCCUAUAUACCGCCAUCUUCAGCAAACCCUGAUGAxxxxxxxxxxCCUCCCUGACAAGCGCCUAUAGCACUCGAAUAAUUCUUCUCACCCUAACAGGUCAACCUCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[222.76463318 460.37728882]
[225.35563660 441.16955566]
[225.66769409 426.17279053]
[225.97975159 411.17605591]
[226.29180908 396.17929077]
[226.60386658 381.18255615]
[226.91590881 366.18579102]
[227.22796631 351.18902588]
[227.54002380 336.19229126]
[227.85208130 321.19552612]
[228.16413879 306.19876099]
[224.00625610 291.78656006]
[215.75396729 279.26058960]
[201.24336243 285.29501343]
[185.83621216 288.41467285]
[170.11215210 288.50039673]
[154.66308594 285.54727173]
[140.07092285 279.66473389]
[126.88561249 271.07263184]
[115.60445404 260.09295654]
[106.65332031 247.13780212]
[100.37059784 232.69386292]
[96.99437714 217.30418396]
[96.65345001 201.54771423]
[99.36238861 186.01756287]
[105.02090454 171.29866028]
[113.41761780 157.94569397]
[124.23789978 146.46224976]
[115.47169495 134.29040527]
[106.70548248 122.11857605]
[97.93927765 109.94673920]
[91.00225830 105.73226929]
[89.12042236 97.42925262]
[80.60933685 85.07768250]
[72.09824371 72.72610474]
[63.58715439 60.37453461]
[49.43610382 66.51102448]
[34.36754990 69.78278351]
[18.95515060 70.06709290]
[3.78530574 67.35493469]
[-10.56516933 61.75127411]
[-23.55096626 53.47097015]
[-34.67901230 42.83056259]
[-43.52718353 30.23616409]
[-49.76032639 16.16796494]
[-53.14294434 1.16191161]
[-53.54810333 -14.21069431]
[-50.96219254 -29.36495781]
[-45.48535538 -43.72463989]
[-37.32764816 -56.74406815]
[-26.80095291 -67.92887878]
[-35.56715775 -80.10071564]
[-49.91064835 -86.77716064]
[-51.07016373 -101.62656403]
[-59.83637238 -113.79840088]
[-68.60257721 -125.97023773]
[-77.36878967 -138.14207458]
[-93.00634766 -140.43164062]
[-102.37767029 -153.15776062]
[-99.92289734 -168.77023315]
[-87.09841919 -178.00648499]
[-71.51275635 -175.38679504]
[-62.41262054 -162.46537781]
[-65.19695282 -146.90827942]
[-56.43074036 -134.73645020]
[-47.66453552 -122.56460571]
[-38.89832687 -110.39276886]
[-25.18185616 -104.58693695]
[-23.39532280 -88.86692810]
[-14.62911606 -76.69509125]
[-1.39816928 -82.88195038]
[12.75180054 -86.51985168]
[27.33434868 -87.48214722]
[41.84786606 -85.73420715]
[55.79283905 -81.33466339]
[68.68903351 -74.43340302]
[80.09204102 -65.26654053]
[89.60858917 -54.14825439]
[96.91010284 -41.46007919]
[101.74405670 -27.63778496]
[103.94269562 -13.15642071]
[103.42887115 1.48601651]
[100.21872711 15.78570366]
[94.42122650 29.25033188]
[86.23442841 41.41604996]
[75.93872833 51.86344528]
[84.44981384 64.21501923]
[92.96090698 76.56658936]
[101.47200012 88.91815948]
[110.11111450 101.18053436]
[118.87731934 113.35237122]
[127.64353180 125.52420807]
[136.40972900 137.69604492]
[149.35542297 131.56639099]
[163.17227173 127.80405426]
[177.43132019 126.52452087]
[191.69010925 127.76624298]
[205.50640869 131.48944092]
[218.45191956 137.57737732]
[230.12559509 145.84007263]
[240.16600037 156.02017212]
[248.26255798 167.80096436]
[254.16514587 180.81626892]
[257.69177246 194.66181946]
[258.73428345 208.90774536]
[257.26159668 223.11206055]
[253.32061768 236.83419800]
[247.03483582 249.64883423]
[238.60038757 261.15896606]
[228.27992249 271.00830078]
[236.53221130 283.53427124]
[236.19419861 268.53808594]
[238.82518005 253.77061462]
[244.32145691 239.81385803]
[252.46641541 227.21784973]
[262.93908691 216.47898865]
[275.32672119 208.02049255]
[289.14117432 202.17568970]
[303.83795166 199.17495728]
[318.83789062 199.13653564]
[333.54986572 202.06193542]
[347.39407349 207.83587646]
[359.82489014 216.23080444]
[370.35241699 226.91586304]
[378.56182861 239.46998596]
[384.12951660 253.39839172]
[386.83612061 268.15219116]
[386.57495117 283.14990234]
[383.35629272 297.80050659]
[377.30697632 311.52661133]
[368.66546631 323.78729248]
[357.77224731 334.09933472]
[345.05667114 342.05633545]
[331.01983643 347.34472656]
[316.21493530 349.75610352]
[301.22540283 349.19543457]
[286.64199829 345.68478394]
[273.03945923 339.36254883]
[260.95385742 330.47787476]
[250.86143494 319.38085938]
[243.16088867 306.51083374]
[242.84883118 321.50759888]
[242.53678894 336.50433350]
[242.22473145 351.50109863]
[241.91267395 366.49783325]
[241.60061646 381.49459839]
[241.28855896 396.49136353]
[240.97650146 411.48809814]
[240.66444397 426.48486328]
[240.35238647 441.48162842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[11 141]
[12 111]
[13 110]
[28 93]
[29 92]
[30 91]
[31 90]
[33 89]
[34 88]
[35 87]
[36 86]
[51 70]
[52 69]
[54 67]
[55 66]
[56 65]
[57 64]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
