%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGACCACGAUCAAAAGGAACAAGCAUCAAGCACGCAGCAAUGCAGCUCAAAACGCUUAGCCUxxxxxxxxxxUGACUCCUACCCCUCACAAUCAUGGCAAGCCAACGCCACUUAUCCAGUGAACCACUAUCACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[103.58708954 552.78094482]
[103.58708954 537.78094482]
[103.58708954 522.78094482]
[103.58708954 507.78094482]
[103.58708954 492.78094482]
[103.58708954 477.78094482]
[103.58708954 462.78094482]
[103.58708954 447.78094482]
[103.58708954 432.78094482]
[103.58708954 417.78094482]
[87.44062042 412.39169312]
[74.06929779 401.81842041]
[65.07668304 387.30789185]
[61.54843903 370.58038330]
[63.92125702 353.62554932]
[71.92890167 338.46597290]
[84.63195038 326.91571045]
[100.52798462 320.36340332]
[99.59235382 305.39260864]
[98.65672302 290.42181396]
[87.87078094 283.30422974]
[83.10130310 271.08428955]
[86.30773163 258.16351318]
[96.53210449 249.33628845]
[95.90812683 234.34927368]
[95.28414917 219.36225891]
[86.57635498 210.90757751]
[85.97042084 198.38352966]
[94.34020233 188.51435852]
[94.02815247 173.51760864]
[93.71609497 158.52085876]
[77.79425049 154.50762939]
[63.60063934 146.25218201]
[52.23993301 134.39700317]
[44.59630966 119.86475372]
[41.26465988 103.78647614]
[42.50428391 87.41349792]
[28.37948036 82.36473846]
[14.25467682 77.31598663]
[2.24167967 82.12657166]
[-9.44474697 77.58274078]
[-14.70391846 66.64434814]
[-28.72063065 61.30283737]
[-42.73734283 55.96132660]
[-58.83356094 59.09882355]
[-69.39324188 46.55190277]
[-63.55348969 31.22775841]
[-47.32174301 28.89055824]
[-37.39583206 41.94461060]
[-23.37911797 47.28612518]
[-9.36240578 52.62763596]
[7.75502396 48.88684082]
[19.30343246 63.19118118]
[33.42823410 68.23993683]
[47.55303955 73.28869629]
[53.95162201 63.34315109]
[62.20927048 54.87751770]
[71.99260712 48.23357010]
[82.90665436 43.67953110]
[94.51079559 41.39926529]
[106.33654785 41.48482513]
[117.90647888 43.93275833]
[124.25360870 30.34180641]
[130.60073853 16.75085640]
[136.94786072 3.15990496]
[137.75625610 -6.00515699]
[143.57101440 -10.64565372]
[150.19950867 -24.10161972]
[156.82801819 -37.55758667]
[144.69415283 -46.44242477]
[134.28759766 -57.29944229]
[125.92459869 -69.79869843]
[119.85930634 -83.56035614]
[116.27602386 -98.16622162]
[115.28365326 -113.17243195]
[116.91234589 -128.12297058]
[121.11261749 -142.56349182]
[127.75681305 -156.05519104]
[136.64303589 -168.18804932]
[147.50122070 -178.59336853]
[160.00143433 -186.95494080]
[173.76377869 -193.01867676]
[188.37004089 -196.60031128]
[203.37637329 -197.59097290]
[218.32672119 -195.96058655]
[232.76676941 -191.75868225]
[246.25770569 -185.11294556]
[258.38955688 -176.22535706]
[268.79364014 -165.36598206]
[277.15380859 -152.86482239]
[283.21597290 -139.10179138]
[286.79595947 -124.49511719]
[287.78491211 -109.48868561]
[286.15283203 -94.53852081]
[281.94927979 -80.09893799]
[275.30203247 -66.60875702]
[266.41305542 -54.47791290]
[255.55250549 -44.07505417]
[243.05041504 -35.71631241]
[229.28668213 -29.65569878]
[214.67959595 -26.07739067]
[199.67304993 -25.09012604]
[184.72308350 -26.72390747]
[170.28398132 -30.92908669]
[163.65548706 -17.47312164]
[157.02697754 -4.01715565]
[150.53881836 9.50703430]
[144.19168091 23.09798622]
[137.84455872 36.68893433]
[131.49742126 50.27988815]
[143.61088562 60.47445679]
[152.56869507 73.52906036]
[157.72267151 88.49908447]
[158.69989014 104.30130005]
[155.42962646 119.79227448]
[148.14852905 133.85110474]
[137.38343811 145.46049500]
[123.91331482 153.78039551]
[108.71284485 158.20880127]
[109.02490234 173.20555115]
[109.33695984 188.20230103]
[119.24400330 203.68876648]
[110.27116394 218.73828125]
[110.89514160 233.72529602]
[111.51911926 248.71231079]
[124.59627533 260.28494263]
[125.27689362 277.39694214]
[113.62751770 289.48617554]
[114.56314850 304.45697021]
[115.49877167 319.42776489]
[128.26762390 322.34158325]
[139.82386780 328.47604370]
[149.37214661 337.40097046]
[156.25738525 348.49438477]
[160.00968933 360.98580933]
[160.37654114 374.00991821]
[157.33963013 386.66638184]
[151.11572266 398.08212280]
[142.14117432 407.47155762]
[131.04136658 414.19058228]
[118.58708954 417.78094482]
[118.58708954 432.78094482]
[118.58708954 447.78094482]
[118.58708954 462.78094482]
[118.58708954 477.78094482]
[118.58708954 492.78094482]
[118.58708954 507.78094482]
[118.58708954 522.78094482]
[118.58708954 537.78094482]
[118.58708954 552.78094482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[18 130]
[19 129]
[20 128]
[24 125]
[25 124]
[26 123]
[29 121]
[30 120]
[31 119]
[37 55]
[38 54]
[39 53]
[42 51]
[43 50]
[44 49]
[62 110]
[63 109]
[64 108]
[65 107]
[67 106]
[68 105]
[69 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
