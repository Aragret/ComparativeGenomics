%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCCCUCCCCCGCUUCUGGCCACAGCACUUAAACACAUCUCUGCCAAACCCCAAAAACAAAGxxxxxxxxxxUUCCUCCCUGUACGAAAGGACAAGAGAAAUAAGGCCUACUUCACAAAGCGCCUUCCCCCGCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[109.55303192 532.11596680]
[109.24097443 517.11926270]
[108.92891693 502.12246704]
[108.61685944 487.12573242]
[108.30480957 472.12896729]
[107.99275208 457.13223267]
[107.68069458 442.13546753]
[107.36863708 427.13870239]
[107.05657959 412.14196777]
[91.99539185 408.20693970]
[78.63378143 400.19180298]
[68.05213928 388.73510742]
[61.10873032 374.75408936]
[58.37009430 359.37124634]
[60.06482697 343.82412720]
[66.06452179 329.36584473]
[75.89346313 317.16403198]
[88.76632690 308.20660400]
[103.65093994 303.22164917]
[103.02696228 288.23464966]
[102.40298462 273.24761963]
[101.77900696 258.26062012]
[101.15502930 243.27359009]
[90.96225739 229.02201843]
[99.54770660 212.76564026]
[98.61207581 197.79484558]
[84.46195984 193.03002930]
[73.18357849 183.18403625]
[66.51605988 169.73379517]
[65.50333405 154.71507263]
[70.33078766 140.41439819]
[80.29229736 129.02091980]
[93.89334106 122.29133606]
[92.95771027 107.32054138]
[89.33159637 100.05863190]
[92.16164398 92.02917480]
[91.53766632 77.04216003]
[90.91368866 62.05514526]
[90.28971100 47.06813049]
[81.42427063 42.78137207]
[74.79602814 35.57748413]
[71.30251312 26.49513435]
[71.39344025 16.82268333]
[75.01328278 7.91544008]
[81.61502075 1.00575984]
[90.24239349 -2.96742940]
[90.86637115 -17.95444489]
[91.49034882 -32.94146347]
[92.11432648 -47.92847824]
[92.73830414 -62.91549301]
[93.20634460 -77.90818787]
[84.92272949 -65.40292358]
[74.39829254 -54.71479034]
[62.02235413 -46.23916626]
[48.25273132 -40.28958511]
[33.59879303 -37.08613205]
[18.60262108 -36.74731064]
[3.81895423 -39.28565979]
[-10.20532608 -44.60727310]
[-22.95143127 -52.51529312]
[-33.94785309 -62.71718979]
[-42.78781128 -74.83557129]
[-49.14429855 -88.42214966]
[-52.78216934 -102.97432709]
[-53.56685638 -117.95378876]
[-51.46932983 -132.80641174]
[-46.56718063 -146.98275757]
[-39.04175186 -159.95841980]
[-29.17142487 -171.25340271]
[-17.32132339 -180.44987488]
[-3.92981124 -187.20764160]
[10.50773144 -191.27671814]
[25.45722771 -192.50657654]
[40.36566544 -190.85173035]
[54.68154526 -186.37338257]
[67.87528992 -179.23719788]
[79.45883942 -169.70716858]
[89.00369263 -158.13583374]
[96.15675354 -144.95123291]
[100.65343475 -130.64111328]
[102.32736969 -115.73480225]
[101.11782074 -100.79022217]
[110.13534546 -112.77705383]
[119.15287781 -124.76388550]
[128.17041016 -136.75071716]
[121.55884552 -150.55455017]
[122.13114929 -165.84936523]
[129.75581360 -179.12049866]
[142.68072510 -187.31835938]
[157.93586731 -188.55914307]
[172.01568604 -182.55772400]
[181.68476868 -170.69317627]
[184.72120667 -155.69189453]
[180.42727661 -141.00105286]
[169.78967285 -129.99650574]
[155.25283813 -125.20702362]
[140.15724182 -127.73319244]
[131.13970947 -115.74636078]
[122.12217712 -103.75952148]
[113.10465240 -91.77268982]
[108.20310211 -77.59613037]
[111.22793579 -70.79936981]
[107.72531891 -62.29151535]
[107.10134125 -47.30450058]
[106.47736359 -32.31748581]
[105.85338593 -17.33046913]
[105.22940826 -2.34345222]
[120.31262207 11.36907482]
[120.51301575 32.04302979]
[105.27672577 46.44415283]
[105.90070343 61.43116760]
[106.52468109 76.41818237]
[107.14865875 91.40519714]
[107.92850494 106.38491821]
[108.86412811 121.35570526]
[123.19721985 126.33950043]
[134.49980164 136.40403748]
[141.07022095 149.99238586]
[141.93531799 165.02032471]
[136.99433899 179.19606018]
[127.02962494 190.36968994]
[113.58287048 196.85922241]
[114.51849365 211.83001709]
[123.67968750 220.96929932]
[124.11691284 233.50036621]
[116.14205170 242.64961243]
[116.76602936 257.63662720]
[117.39000702 272.62365723]
[118.01397705 287.61065674]
[118.63795471 302.59768677]
[132.74687195 305.88406372]
[145.50785828 312.71533203]
[156.04859924 322.61737061]
[163.65037537 334.90637207]
[167.79710388 348.73602295]
[168.21041870 363.15591431]
[164.86827087 377.17672729]
[158.00604248 389.83822632]
[148.10000610 400.27484131]
[135.83421326 407.77511597]
[122.05333710 411.82989502]
[122.36539459 426.82666016]
[122.67744446 441.82342529]
[122.98950195 456.82015991]
[123.30155945 471.81692505]
[123.61361694 486.81365967]
[123.92567444 501.81042480]
[124.23773193 516.80718994]
[124.54978180 531.80395508]
[127.14078522 551.01165771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[19 130]
[20 129]
[21 128]
[22 127]
[23 126]
[25 123]
[26 122]
[33 115]
[34 114]
[36 113]
[37 112]
[38 111]
[39 110]
[46 107]
[47 106]
[48 105]
[49 104]
[50 103]
[51 101]
[82 100]
[83 99]
[84 98]
[85 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
