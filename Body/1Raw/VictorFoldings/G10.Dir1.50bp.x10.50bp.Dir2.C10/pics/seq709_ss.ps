%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCACACACCGCUGCUAACCCCAUACCCCGAACCAACCAAACCCCAAAGACACCCCCCACAGxxxxxxxxxxCCACUAUGCACAUUUUAUUUCUCCAACAUACUCGGAUUCUACCCUAGCAUCACACACCGCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 294.13595581]
[92.50000000 279.13595581]
[92.50000000 264.13595581]
[92.50000000 249.13594055]
[92.50000000 234.13594055]
[92.50000000 219.13594055]
[92.50000000 204.13594055]
[92.50000000 189.13594055]
[92.50000000 174.13594055]
[92.50000000 159.13594055]
[77.50680542 155.20295715]
[64.03453064 147.53729248]
[52.99413681 136.65731812]
[45.13214111 123.29866791]
[40.98014832 108.36463165]
[40.81890869 92.86501312]
[44.65931702 77.84783173]
[52.24169922 64.32852173]
[63.05335999 53.22120667]
[76.36324310 45.27693939]
[91.27137756 41.03288269]
[90.95932007 26.03612900]
[90.64726257 11.03937531]
[90.33520508 -3.95737815]
[90.02314758 -18.95413208]
[75.98566437 -22.53330803]
[63.36954498 -29.62858963]
[53.03709030 -39.74777985]
[45.69261932 -52.19225311]
[41.83448792 -66.10518646]
[41.72125244 -80.53055573]
[45.35436630 -94.47881317]
[52.47851562 -106.99478912]
[62.59953308 -117.22308350]
[75.01869965 -124.46654510]
[88.88095093 -128.23376465]
[88.88095093 -143.23376465]
[88.88095093 -158.23376465]
[88.88095093 -173.23376465]
[73.92586517 -174.50625610]
[59.13256836 -177.04244995]
[44.60765457 -180.82406616]
[30.45577431 -185.82388306]
[16.77889252 -192.00585938]
[3.67555690 -199.32543945]
[-8.75982380 -207.72991943]
[-20.43765068 -217.15870667]
[-31.27378273 -227.54389954]
[-41.19014740 -238.81063843]
[-50.11528778 -250.87777710]
[-57.98490524 -263.65835571]
[-64.74229431 -277.06027222]
[-70.33876801 -290.98696899]
[-74.73400116 -305.33813477]
[-77.89632416 -320.01034546]
[-79.80296326 -334.89788818]
[-80.44016266 -349.89346313]
[-79.80335236 -364.88906860]
[-77.89710236 -379.77667236]
[-74.73515320 -394.44894409]
[-70.34028625 -408.80020142]
[-64.74417877 -422.72708130]
[-57.98713303 -436.12918091]
[-50.11784744 -448.90994263]
[-41.19301605 -460.97729492]
[-31.27694321 -472.24432373]
[-20.44108009 -482.62976074]
[-8.76349545 -492.05886841]
[3.67166805 -500.46365356]
[16.77481651 -507.78359985]
[30.45153618 -513.96594238]
[44.60328674 -518.96612549]
[59.12810516 -522.74810791]
[73.92133331 -525.28466797]
[88.87638855 -526.55755615]
[103.88551331 -526.55755615]
[118.84056854 -525.28466797]
[133.63378906 -522.74810791]
[148.15861511 -518.96612549]
[162.31036377 -513.96594238]
[175.98709106 -507.78359985]
[189.09024048 -500.46365356]
[201.52539062 -492.05886841]
[213.20298767 -482.62976074]
[224.03884888 -472.24432373]
[233.95491028 -460.97729492]
[242.87974548 -448.90994263]
[250.74903870 -436.12918091]
[257.50607300 -422.72708130]
[263.10220337 -408.80020142]
[267.49703979 -394.44894409]
[270.65899658 -379.77667236]
[272.56524658 -364.88906860]
[273.20205688 -349.89346313]
[272.56484985 -334.89788818]
[270.65823364 -320.01034546]
[267.49591064 -305.33813477]
[263.10067749 -290.98696899]
[257.50421143 -277.06027222]
[250.74681091 -263.65835571]
[242.87719727 -250.87777710]
[233.95204163 -238.81063843]
[224.03569031 -227.54389954]
[213.19955444 -217.15870667]
[201.52172852 -207.72991943]
[189.08634949 -199.32543945]
[175.98300171 -192.00585938]
[162.30612183 -185.82388306]
[148.15425110 -180.82406616]
[133.62933350 -177.04244995]
[118.83603668 -174.50625610]
[103.88095093 -173.23376465]
[103.88095093 -158.23376465]
[103.88095093 -143.23376465]
[103.88095093 -128.23376465]
[118.85701752 -123.98626709]
[132.04899597 -115.69487762]
[142.38999939 -104.02052307]
[149.04104614 -89.89810181]
[151.45907593 -74.46162415]
[149.44126892 -58.95312881]
[143.14208984 -44.62278748]
[133.06143188 -32.62809753]
[120.00499725 -23.94038963]
[105.01990509 -19.26618767]
[105.33196259 -4.26943445]
[105.64401245 10.72731972]
[105.95606995 25.72407341]
[106.26812744 40.72082520]
[120.31987762 43.96061707]
[133.18246460 50.47996140]
[144.10313416 59.89733505]
[152.44277954 71.66161346]
[157.71336365 85.08431244]
[159.60641479 99.37991333]
[158.01116943 113.71180725]
[153.02098083 127.24124908]
[144.92787170 139.17646790]
[134.20549011 148.81900024]
[121.48130798 155.60452271]
[107.50000000 159.13594055]
[107.50000000 174.13594055]
[107.50000000 189.13594055]
[107.50000000 204.13594055]
[107.50000000 219.13594055]
[107.50000000 234.13594055]
[107.50000000 249.13594055]
[107.50000000 264.13595581]
[107.50000000 279.13595581]
[107.50000000 294.13595581]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[21 129]
[22 128]
[23 127]
[24 126]
[25 125]
[36 115]
[37 114]
[38 113]
[39 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
