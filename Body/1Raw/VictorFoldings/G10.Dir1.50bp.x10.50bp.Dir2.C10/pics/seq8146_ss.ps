%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAAAGCCCAUAAAAAUAAAAAAUUAUAACAAACCCUGAGAACCAAAAUGAACGAAAAUCUxxxxxxxxxxAAUCAAUACUAAACCCCCAUAAAUAGGAGAAGGCUUAGAAGAAAACCCCACAAACCCCAUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 242.72087097]
[92.50000000 227.72087097]
[92.50000000 212.72087097]
[92.50000000 197.72087097]
[92.50000000 182.72087097]
[92.50000000 167.72087097]
[92.50000000 152.72087097]
[92.50000000 137.72087097]
[92.50000000 122.72086334]
[92.50000000 107.72086334]
[89.09702301 93.11197662]
[76.05786896 84.15144348]
[77.37454987 69.31514740]
[70.74604797 55.85918427]
[64.11754608 42.40321732]
[57.48905182 28.94725227]
[50.86055374 15.49128723]
[36.99494171 21.22775841]
[22.78383446 26.04508972]
[8.28808498 29.92265320]
[-6.43023348 32.84384155]
[-21.30809402 34.79615021]
[-36.28178787 35.77121735]
[-51.28719330 35.76486206]
[-66.26005554 34.77711868]
[-81.13626099 32.81221390]
[-95.85209656 29.87856483]
[-110.34455872 25.98872948]
[-124.55158234 21.15936661]
[-138.41233826 15.41115570]
[-151.86744690 8.76871395]
[-164.85932922 1.26048326]
[-177.33232117 -7.08138323]
[-189.23301697 -16.22116470]
[-200.51045227 -26.11972427]
[-211.11636353 -36.73467255]
[-221.00529480 -48.02055359]
[-230.13493347 -59.92904282]
[-238.46615601 -72.40914154]
[-245.96331787 -85.40740967]
[-252.59428406 -98.86818695]
[-258.33065796 -112.73383331]
[-263.14791870 -126.94496918]
[-267.02539062 -141.44073486]
[-269.94650269 -156.15907288]
[-271.89871216 -171.03694153]
[-272.87368774 -186.01065063]
[-272.86724854 -201.01605225]
[-271.87942505 -215.98890686]
[-269.91442871 -230.86509705]
[-266.98068237 -245.58091736]
[-263.09075928 -260.07336426]
[-258.26132202 -274.28036499]
[-252.51303101 -288.14108276]
[-245.87051392 -301.59616089]
[-238.36219788 -314.58798218]
[-230.02026367 -327.06091309]
[-220.88040161 -338.96157837]
[-210.98178101 -350.23895264]
[-200.36677551 -360.84478760]
[-189.08084106 -370.73367310]
[-177.17228699 -379.86322021]
[-164.69213867 -388.19436646]
[-151.69383240 -395.69146729]
[-138.23301697 -402.32235718]
[-124.36733246 -408.05865479]
[-110.15617371 -412.87582397]
[-95.66037750 -416.75320435]
[-80.94202423 -419.67422485]
[-66.06414032 -421.62634277]
[-51.09043503 -422.60125732]
[-36.08502960 -422.59472656]
[-21.11217690 -421.60678101]
[-6.23599720 -419.64172363]
[8.47980785 -416.70788574]
[22.97222328 -412.81787109]
[37.17918777 -407.98834229]
[51.03987122 -402.23999023]
[64.49491119 -395.59738159]
[77.48669434 -388.08898926]
[89.95958710 -379.74697876]
[101.86017609 -370.60705566]
[113.13750458 -360.70837402]
[123.74328613 -350.09329224]
[133.63209534 -338.80728149]
[142.76158142 -326.89871216]
[151.09266663 -314.41848755]
[158.58966064 -301.42013550]
[165.22047424 -287.95928955]
[170.95669556 -274.09356689]
[175.77377319 -259.88238525]
[179.65107727 -245.38656616]
[182.57200623 -230.66819763]
[184.52404785 -215.79029846]
[185.49885559 -200.81658936]
[185.49223328 -185.81118774]
[184.50422668 -170.83833313]
[182.53906250 -155.96217346]
[179.60514832 -141.24638367]
[175.71505737 -126.75399017]
[170.88543701 -112.54705048]
[165.13699341 -98.68640900]
[158.49430847 -85.23140717]
[150.98583984 -72.23966217]
[142.64375305 -59.76682281]
[133.50376892 -47.86628342]
[123.60501099 -36.58901215]
[112.98987579 -25.98329926]
[101.70381927 -16.09456062]
[89.79516602 -6.96513939]
[77.31491852 1.36586857]
[64.31652069 8.86278915]
[70.94501495 22.31875420]
[77.57351685 35.77471924]
[84.20201111 49.23068619]
[90.83051300 62.68664932]
[103.39554596 70.68472290]
[102.55298615 86.48347473]
[103.85474396 71.54006958]
[108.91052246 57.41777802]
[117.38851929 45.04346466]
[128.73229980 35.22925949]
[142.19737244 28.61928558]
[156.90000916 25.64735413]
[171.87527466 26.50851631]
[186.14031982 31.14625549]
[198.75891113 39.25619125]
[208.90289307 50.30606461]
[215.90649414 63.57065964]
[219.31007385 78.17941284]
[218.89025879 93.17353058]
[214.67459106 107.56895447]
[206.93974304 120.42088318]
[196.19335938 130.88584900]
[183.14074707 138.27700806]
[168.63854980 142.10929871]
[153.63856506 142.13117981]
[139.12525940 138.34121704]
[126.05113983 130.98817444]
[115.27426910 120.55461121]
[107.50000000 107.72086334]
[107.50000000 122.72086334]
[107.50000000 137.72087097]
[107.50000000 152.72087097]
[107.50000000 167.72087097]
[107.50000000 182.72087097]
[107.50000000 197.72087097]
[107.50000000 212.72087097]
[107.50000000 227.72087097]
[107.50000000 242.72087097]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 118]
[13 116]
[14 115]
[15 114]
[16 113]
[17 112]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
