%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGGCAUAAAACUUAAAACUUUACAGUCAGAGGUUCAAUUCCUCUUCUUAACAACAUACCCAUxxxxxxxxxxUUCUAGCCACCUCUAGCCUAGCCGUUUACUCAAUCCUCUGAUCAGGGUGAGCAUCAAACUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[68.57061005 286.08932495]
[71.16160583 266.88159180]
[71.47366333 251.88484192]
[71.78572083 236.88807678]
[72.09777832 221.89132690]
[72.40983582 206.89457703]
[72.72189331 191.89782715]
[73.03394318 176.90106201]
[73.34600067 161.90431213]
[73.65805817 146.90756226]
[73.97011566 131.91081238]
[67.27696991 128.52674866]
[53.89068604 121.75863647]
[47.19754410 118.37458038]
[35.30516434 127.51631165]
[23.41278458 136.65805054]
[11.52040577 145.79977417]
[12.91977882 161.16354370]
[5.77047014 174.83435059]
[-7.64620161 182.44989014]
[-23.04902458 181.58007812]
[-35.52301407 172.50245667]
[-41.08776855 158.11367798]
[-37.96759033 143.00514221]
[-27.15811920 131.99792480]
[-12.10861874 128.60438538]
[2.37867117 133.90739441]
[14.27105141 124.76567078]
[26.16343117 115.62393188]
[38.05580902 106.48220062]
[53.56410599 83.73939514]
[74.27001190 74.65175629]
[92.06225586 78.37378693]
[100.88800049 90.08456421]
[102.13487244 75.13648224]
[103.38175201 60.18839264]
[104.62862396 45.24030685]
[105.87549591 30.29221916]
[107.12237549 15.34413147]
[108.36924744 0.39604494]
[93.56659698 -2.08205891]
[79.01914215 -5.77410126]
[64.82626343 -10.65486145]
[51.08491898 -16.69099808]
[37.88897324 -23.84127808]
[25.32856750 -32.05685806]
[13.48950386 -41.28161240]
[2.45265770 -51.45252991]
[-7.70657730 -62.50012970]
[-16.91880226 -74.34894562]
[-25.12108803 -86.91803741]
[-32.25740051 -100.12154388]
[-38.27899551 -113.86927032]
[-43.14473724 -128.06730652]
[-46.82138824 -142.61865234]
[-49.28382874 -157.42391968]
[-50.51523972 -172.38195801]
[-50.50720978 -187.39060974]
[-49.25979614 -202.34733582]
[-46.78151703 -217.14994812]
[-43.08929825 -231.69735718]
[-38.20837021 -245.89018250]
[-32.17206955 -259.63143921]
[-25.02163315 -272.82730103]
[-16.80590439 -285.38763428]
[-7.58100748 -297.22656250]
[2.59004188 -308.26330566]
[13.63776398 -318.42239380]
[25.48669052 -327.63449097]
[38.05587769 -335.83660889]
[51.25946808 -342.97277832]
[65.00726318 -348.99420166]
[79.20535278 -353.85977173]
[93.75675201 -357.53625488]
[108.56204224 -359.99853516]
[123.52010345 -361.22976685]
[138.52874756 -361.22155762]
[153.48545837 -359.97396851]
[168.28805542 -357.49551392]
[182.83541870 -353.80310059]
[197.02816772 -348.92202759]
[210.76937866 -342.88555908]
[223.96514893 -335.73495483]
[236.52536011 -327.51907349]
[248.36421204 -318.29403687]
[259.40081787 -308.12286377]
[269.55978394 -297.07501221]
[278.77172852 -285.22598267]
[286.97372437 -272.65667725]
[294.10971069 -259.45300293]
[300.13098145 -245.70515442]
[304.99636841 -231.50700378]
[308.67266846 -216.95556641]
[311.13476562 -202.15023804]
[312.36581421 -187.19216919]
[312.35745239 -172.18351746]
[311.10968018 -157.22682190]
[308.63104248 -142.42425537]
[304.93847656 -127.87693787]
[300.05722046 -113.68424225]
[294.02056885 -99.94310760]
[286.86981201 -86.74741364]
[278.65380859 -74.18730164]
[269.42861938 -62.34857178]
[259.25729370 -51.31208801]
[248.20933533 -41.15324783]
[236.36019897 -31.94144821]
[223.79081726 -23.73961258]
[210.58705139 -16.60376930]
[196.83911133 -10.58266640]
[182.64089966 -5.71743250]
[168.08943176 -2.04130387]
[153.28407288 0.42060792]
[138.32597351 1.65148509]
[123.31733704 1.64291954]
[122.07045746 16.59100723]
[120.82358551 31.53909302]
[119.57671356 46.48717880]
[118.32983398 61.43526840]
[117.08296204 76.38335419]
[115.83609009 91.33144379]
[122.74308777 104.64659882]
[135.68113708 112.23650360]
[148.61920166 119.82641602]
[165.34045410 122.62572479]
[167.27943420 139.46842957]
[151.63171387 145.99417114]
[141.02928162 132.76446533]
[128.09123230 125.17456055]
[115.15317535 117.58465576]
[108.60659790 121.24420929]
[116.32201385 134.10781860]
[124.03742981 146.97142029]
[136.54988098 155.24418640]
[135.99130249 170.23379517]
[122.89785767 177.55238342]
[109.83734131 170.17520142]
[109.34539032 155.18431091]
[102.42942047 141.87380981]
[95.51344299 128.56330872]
[88.96686554 132.22286987]
[88.65481567 147.21961975]
[88.34275818 162.21636963]
[88.03070068 177.21311951]
[87.71864319 192.20988464]
[87.40658569 207.20663452]
[87.09452820 222.20338440]
[86.78247070 237.20013428]
[86.47042084 252.19689941]
[86.15836334 267.19363403]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 150]
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[8 144]
[9 143]
[10 142]
[11 141]
[14 30]
[15 29]
[16 28]
[17 27]
[34 121]
[35 120]
[36 119]
[37 118]
[38 117]
[39 116]
[40 115]
[122 130]
[123 129]
[124 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
