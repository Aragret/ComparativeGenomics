%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAAAGCCCCCGCACCAAUAGGAUCCUCCCGAAUCAACCCUGACCCCUCUCCUUCAUAAAUxxxxxxxxxxCAAGCAAGUACAGCAAUCAACCCUCAACUAUCACACAUCAACUGCAACUCCAAAGCCACCCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[-6.90778017 292.53585815]
[-14.63186455 305.39425659]
[-15.10549068 321.20837402]
[-28.29187965 328.13427734]
[-28.76550674 343.94839478]
[-41.95189667 350.87432861]
[-49.67597961 363.73272705]
[-57.40006638 376.59112549]
[-65.12415314 389.44952393]
[-72.84823608 402.30792236]
[-80.57231903 415.16635132]
[-83.54542542 431.85757446]
[-100.40738678 433.62124634]
[-106.76999664 417.90649414]
[-93.43072510 407.44226074]
[-85.70663452 394.58386230]
[-77.98255157 381.72543335]
[-70.25846863 368.86703491]
[-62.53438187 356.00863647]
[-54.81029892 343.15023804]
[-54.88915253 328.25582886]
[-41.15028381 320.41021729]
[-41.22913742 305.51580811]
[-27.49026680 297.67016602]
[-19.76618195 284.81176758]
[-47.86631393 263.20196533]
[-72.13528442 237.36364746]
[-91.94428253 207.96629333]
[-106.78006744 175.77156067]
[-116.25825500 141.61361694]
[-131.07601929 143.94471741]
[-145.89376831 146.27581787]
[-160.60083008 154.71020508]
[-172.77691650 142.91279602]
[-164.81121826 127.94669342]
[-148.22488403 131.45806885]
[-133.40711975 129.12695312]
[-118.58936310 126.79585266]
[-120.16609192 105.12055206]
[-119.59875488 83.39537811]
[-116.89288330 61.83191299]
[-112.07482910 40.64014053]
[-105.19151306 20.02643585]
[-118.97389221 14.10647297]
[-132.75627136 8.18650913]
[-148.96907043 10.65171337]
[-158.99768066 -2.32361412]
[-152.52551270 -17.39156723]
[-136.21060181 -19.05152893]
[-126.83631134 -5.59587193]
[-113.05392456 0.32409117]
[-99.27154541 6.24405432]
[-94.56462860 -3.16943383]
[-89.41333771 -12.34729099]
[-83.82944489 -21.26855469]
[-77.82569885 -29.91284943]
[-71.41580963 -38.26043320]
[-64.61441803 -46.29224396]
[-57.43706131 -53.98992920]
[-49.90013123 -61.33591461]
[-42.02083969 -68.31342316]
[-33.81718063 -74.90651703]
[-25.30789757 -81.10012817]
[-16.51241684 -86.88012695]
[-7.45083332 -92.23330688]
[1.85616112 -97.14743805]
[11.38730907 -101.61130524]
[21.12084007 -105.61470032]
[31.03452682 -109.14849091]
[41.10572433 -112.20459747]
[51.31143570 -114.77604675]
[61.62834167 -116.85696411]
[72.03289032 -118.44259644]
[82.50131226 -119.52931976]
[93.00970459 -120.11465454]
[103.53405762 -120.19726562]
[114.05033875 -119.77696228]
[124.53453064 -118.85470581]
[134.96269226 -117.43260193]
[145.31098938 -115.51390076]
[155.55580139 -113.10297394]
[165.67373657 -110.20534515]
[175.64167786 -106.82761383]
[185.43685913 -102.97750854]
[195.03691101 -98.66381836]
[204.41989136 -93.89639282]
[213.56439209 -88.68612671]
[222.44952393 -83.04491425]
[231.05499268 -76.98563385]
[239.36112976 -70.52214050]
[247.34898376 -63.66918182]
[255.00030518 -56.44241714]
[262.29763794 -48.85834885]
[269.22424316 -40.93429947]
[275.76440430 -32.68836975]
[281.90310669 -24.13938522]
[287.62637329 -15.30687714]
[292.92108154 -6.21101665]
[297.77520752 3.12742186]
[302.17761230 12.68710995]
[306.11825562 22.44621468]
[309.58816528 32.38244629]
[312.57934570 42.47311020]
[315.08505249 52.69516373]
[317.09951782 63.02525330]
[318.61813354 73.43979645]
[319.63742065 83.91499329]
[320.15509033 94.42693329]
[320.16995239 104.95159912]
[319.68194580 115.46495819]
[318.69223022 125.94300079]
[317.20300293 136.36178589]
[315.21771240 146.69752502]
[312.74090576 156.92660522]
[309.77816772 167.02566528]
[306.33636475 176.97166443]
[302.42327881 186.74185181]
[298.04785156 196.31391907]
[293.22012329 205.66603088]
[287.95108032 214.77679443]
[282.25280762 223.62542725]
[276.13824463 232.19169617]
[269.62139893 240.45606995]
[262.71716309 248.39962769]
[255.44128418 256.00427246]
[247.81039429 263.25259399]
[239.84191895 270.12808228]
[231.55406189 276.61499023]
[222.96572876 282.69854736]
[214.09655762 288.36480713]
[204.96679688 293.60086060]
[195.59730530 298.39477539]
[186.00947571 302.73553467]
[176.22520447 306.61328125]
[166.26683044 310.01913452]
[156.15711975 312.94531250]
[145.91914368 315.38513184]
[135.57630920 317.33303833]
[125.15219879 318.78457642]
[114.67065430 319.73641968]
[104.15560150 320.18640137]
[93.63105774 320.13351440]
[83.12105560 319.57785034]
[72.64961243 318.52066040]
[62.24062729 316.96441650]
[51.91788483 314.91262817]
[41.70495987 312.36999512]
[31.62517357 309.34231567]
[21.70155144 305.83654785]
[11.95675850 301.86062622]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 25]
[2 24]
[4 22]
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[11 15]
[30 38]
[31 37]
[32 36]
[43 52]
[44 51]
[45 50]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
