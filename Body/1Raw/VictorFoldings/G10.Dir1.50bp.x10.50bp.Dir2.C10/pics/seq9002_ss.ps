%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:34:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGAGAAGUUUUUUUCUUCGCAGGAUUUUUCUGAGCCUUUUACCACUCCAGCCUAGCCCCUACxxxxxxxxxxACCUUUAUUAUCAGUCUCUUCCCCACAACAAUAUUCAUGUGCCUAGACCAAGAAGUUAUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[106.42706299 267.78869629]
[106.11500549 252.79194641]
[105.80294800 237.79519653]
[105.49089813 222.79844666]
[105.17884064 207.80168152]
[104.86678314 192.80493164]
[104.55472565 177.80818176]
[104.24266815 162.81143188]
[103.93061066 147.81466675]
[90.02806091 142.18270874]
[85.66180420 157.38951111]
[71.17301178 160.84263611]
[60.51138687 171.39392090]
[49.84975815 181.94522095]
[39.18813324 192.49650574]
[40.65023041 208.06558228]
[31.72016335 220.90255737]
[16.61443710 224.94619751]
[2.46551275 218.28723145]
[-4.04591942 204.06979370]
[0.15463923 189.00695801]
[13.08381367 180.21090698]
[28.63684273 181.83488464]
[39.29846954 171.28358459]
[49.96009445 160.73229980]
[60.62172318 150.18099976]
[64.22537994 135.72891235]
[79.47676849 131.52108765]
[68.86320496 101.95800018]
[83.98233795 81.08883667]
[78.20606232 67.24562073]
[72.42979431 53.40240479]
[57.23244095 52.50688934]
[43.98495102 45.13186264]
[35.28882599 32.78692245]
[32.82510376 17.95145416]
[37.02960968 3.57677031]
[47.01699829 -7.50102568]
[41.24072647 -21.34424400]
[35.46445465 -35.18746185]
[29.68818283 -49.03067780]
[15.22176266 -44.99306488]
[0.36880875 -42.76385498]
[-14.64551258 -42.37684250]
[-29.59358788 -43.83789444]
[-44.24880600 -47.12485886]
[-58.38900375 -52.18790817]
[-71.79981232 -58.95029068]
[-84.27793121 -67.30948639]
[-95.63419342 -77.13877869]
[-105.69644165 -88.28914642]
[-114.31213379 -100.59156036]
[-121.35066223 -113.85951996]
[-126.70532227 -127.89188385]
[-130.29493713 -142.47592163]
[-132.06509399 -157.39056396]
[-131.98895264 -172.40966797]
[-130.06765747 -187.30558777]
[-126.33035278 -201.85247803]
[-120.83369446 -215.82983398]
[-113.66099548 -229.02574158]
[-104.92100525 -241.24017334]
[-94.74621582 -252.28794861]
[-83.29087830 -262.00158691]
[-70.72863770 -270.23382568]
[-57.24995422 -276.85989380]
[-43.05915070 -281.77929688]
[-28.37135506 -284.91751099]
[-13.40923405 -286.22692871]
[1.60039103 -285.68768311]
[16.42997932 -283.30798340]
[30.85471535 -279.12390137]
[44.65592575 -273.19885254]
[57.62438965 -265.62268066]
[69.56350708 -256.51019287]
[80.29228210 -245.99958801]
[89.64806366 -234.25016785]
[97.48903656 -221.44006348]
[103.69631958 -207.76345825]
[108.17581940 -193.42771912]
[110.85962677 -178.65013123]
[111.70704651 -163.65475464]
[110.70524597 -148.66889954]
[107.86940765 -133.91973877]
[103.24251556 -119.63087463]
[96.89472198 -106.01892853]
[88.92224884 -93.29025269]
[79.44596100 -81.63780212]
[68.60951996 -71.23822784]
[56.57719421 -62.24918747]
[43.53139877 -54.80694962]
[49.30767059 -40.96373367]
[55.08394623 -27.12051582]
[60.86021805 -13.27729797]
[75.75936127 -12.58374882]
[88.93405914 -5.46077681]
[97.74571228 6.72593021]
[100.40316772 21.59058952]
[96.32660675 36.19430923]
[86.27301025 47.62613297]
[92.04927826 61.46934891]
[97.82555389 75.31256866]
[125.62841034 82.20903778]
[133.95013428 116.19168091]
[148.94282532 115.72364044]
[163.93553162 115.25559998]
[178.92822266 114.78755951]
[186.11808777 101.21547699]
[199.13925171 93.07024384]
[214.48908997 92.54288483]
[228.03857422 99.77526093]
[236.14294434 112.82189178]
[236.62219238 128.17330933]
[229.34738159 141.70004272]
[216.27540588 149.76348877]
[200.92256165 150.19461060]
[187.41868591 142.87744141]
[179.39627075 129.78025818]
[164.40356445 130.24829102]
[149.41087341 130.71633911]
[134.41818237 131.18437195]
[147.79989624 137.96151733]
[161.18161011 144.73864746]
[174.56333923 151.51579285]
[189.56159973 151.28808594]
[203.67449951 156.37005615]
[215.08447266 166.10722351]
[222.32209778 179.24559021]
[224.45530701 194.09313965]
[221.20933533 208.73771667]
[213.00224304 221.29333496]
[200.89097595 230.14302063]
[186.43527222 234.14707947]
[171.49679565 232.78984070]
[157.99940491 226.24609375]
[147.68136597 215.35858154]
[141.87147522 201.52944946]
[141.31842041 186.53646851]
[133.85473633 173.52517700]
[126.39105225 160.51390076]
[118.92736816 147.50260925]
[119.23942566 162.49937439]
[119.55148315 177.49612427]
[119.86353302 192.49287415]
[120.17559052 207.48962402]
[120.48764801 222.48638916]
[120.79970551 237.48313904]
[121.11176300 252.47988892]
[121.42382050 267.47665405]
[124.01481628 286.68435669]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 28]
[12 26]
[13 25]
[14 24]
[15 23]
[30 102]
[31 101]
[32 100]
[38 94]
[39 93]
[40 92]
[41 91]
[104 121]
[105 120]
[106 119]
[107 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
