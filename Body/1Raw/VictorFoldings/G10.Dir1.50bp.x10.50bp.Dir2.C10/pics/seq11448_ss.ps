%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGCAUCAUUAUUCUCGCACGGACUACAACCACGACCAAUGAUAUGAAAAACCAUCGUUGUAUxxxxxxxxxxGUAGACAGUCCCACCCUCACACGAUUCUUUACCUUUCACUUCAUCUUGCCCUUCAUUAUUCCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[78.51750183 428.84716797]
[78.51750183 413.84716797]
[78.51750183 398.84716797]
[78.51750183 383.84716797]
[78.51750183 368.84716797]
[78.51750183 353.84716797]
[78.51750183 338.84716797]
[78.51750183 323.84716797]
[78.51750183 308.84716797]
[78.51750183 293.84716797]
[64.79612732 290.83093262]
[52.00676346 285.00131226]
[40.71940994 276.61526489]
[31.43774033 266.04364014]
[24.57662773 253.75492859]
[20.44358826 240.29447937]
[19.22501373 226.26023865]
[20.97776031 212.27629089]
[25.62649727 198.96496582]
[32.96695328 186.91928101]
[42.67488098 176.67643738]
[54.32038116 168.69387817]
[67.38693237 163.32888794]
[81.29432678 160.82257080]
[81.91830444 145.83555603]
[82.54228210 130.84854126]
[71.34651184 120.86581421]
[56.52875900 123.19691467]
[51.66891861 137.71037292]
[40.61297989 148.29455566]
[25.90151787 152.51728821]
[10.91511536 149.40820312]
[-0.90246028 139.68177795]
[-6.83561659 125.57305145]
[-5.52095795 110.32410431]
[2.73941636 97.43904114]
[16.04733276 89.87876129]
[31.34473038 89.38054657]
[45.11637878 96.05889130]
[54.19765472 108.37915802]
[69.01541138 106.04805756]
[70.19816589 94.62619781]
[75.27410889 84.85494232]
[83.22997284 77.94242859]
[92.72668457 74.59902954]
[102.31651306 74.97209167]
[108.09278870 61.12887192]
[113.86905670 47.28565598]
[119.64533234 33.44244003]
[113.87815094 18.97255898]
[119.93331146 5.01585340]
[133.76367188 -0.39309865]
[139.53994751 -14.23631668]
[145.31622314 -28.07953453]
[151.09248352 -41.92275238]
[156.86875916 -55.76596832]
[162.06417847 -69.83748627]
[166.66973877 -84.11295319]
[159.71971130 -98.05335236]
[164.59376526 -112.46509552]
[177.92665100 -119.00497437]
[182.53221130 -133.28042603]
[187.13777161 -147.55589294]
[191.74333191 -161.83135986]
[196.34890747 -176.10681152]
[198.98776245 -190.87286377]
[199.61174011 -205.85989380]
[200.23571777 -220.84690857]
[186.21008301 -226.59645081]
[174.99884033 -236.79859924]
[167.95581055 -250.22140503]
[165.93147278 -265.24398804]
[169.17027283 -280.05227661]
[177.28111267 -292.85815430]
[189.28456116 -302.11520386]
[203.73115540 -306.70559692]
[218.87640381 -306.07501221]
[232.89141846 -300.29965210]
[244.08383179 -290.07684326]
[251.10211182 -276.64108276]
[253.09877014 -261.61480713]
[249.83268738 -246.81250000]
[241.69825745 -234.02160645]
[229.67776489 -224.78669739]
[215.22273254 -220.22293091]
[214.59875488 -205.23591614]
[213.97477722 -190.24888611]
[222.99029541 -202.23724365]
[236.04711914 -209.62095642]
[250.96710205 -211.16825867]
[265.26126099 -206.62101746]
[276.54498291 -196.73782349]
[282.93591309 -183.16740417]
[283.36788940 -168.17362976]
[277.76882935 -154.25778198]
[267.07284546 -143.74133301]
[253.06419373 -138.37869263]
[238.07987976 -139.06442261]
[224.61961365 -145.68417358]
[214.92884827 -157.13359070]
[210.62435913 -171.50125122]
[206.01879883 -157.22578430]
[201.41323853 -142.95033264]
[196.80767822 -128.67486572]
[192.20210266 -114.39940643]
[199.19914246 -101.30066681]
[194.73181152 -86.75771332]
[180.94520569 -79.50738525]
[176.33964539 -65.23192596]
[177.55558777 -62.63792801]
[177.78303528 -59.39104462]
[176.76226807 -55.87822342]
[174.38311768 -52.57508087]
[170.71197510 -49.98969650]
[164.93571472 -36.14648056]
[159.15943909 -22.30326080]
[153.38316345 -8.46004391]
[147.60688782 5.38317394]
[153.49089050 19.01820946]
[147.83012390 33.13948822]
[133.48855591 39.21871185]
[127.71228027 53.06192780]
[121.93600464 66.90514374]
[116.15972900 80.74836731]
[127.26578522 99.12862396]
[120.31806946 121.28329468]
[97.52929688 131.47251892]
[96.90531921 146.45953369]
[96.28134155 161.44654846]
[111.69022369 165.80615234]
[125.61717224 173.69358826]
[137.26853943 184.65481567]
[145.98147583 198.06076050]
[151.26158142 213.14344788]
[152.81097412 229.03993225]
[150.54512024 244.84173584]
[144.59736633 259.64672852]
[135.31120300 272.61065674]
[123.22033691 282.99523926]
[109.01806641 290.21026611]
[93.51750183 293.84716797]
[93.51750183 308.84716797]
[93.51750183 323.84716797]
[93.51750183 338.84716797]
[93.51750183 353.84716797]
[93.51750183 368.84716797]
[93.51750183 383.84716797]
[93.51750183 398.84716797]
[93.51750183 413.84716797]
[93.51750183 428.84716797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[24 129]
[25 128]
[26 127]
[27 41]
[28 40]
[46 124]
[47 123]
[48 122]
[49 121]
[52 118]
[53 117]
[54 116]
[55 115]
[56 114]
[57 109]
[58 108]
[61 105]
[62 104]
[63 103]
[64 102]
[65 101]
[66 87]
[67 86]
[68 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
