%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Fri May 22 11:35:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGGGGGUCCACUUCAAGUCAACUAGGACUCAUAAUAGUUACAAUCGGCAUCAACCAACCACACCUAxxxxxxxxxxAUUGUACGGUACCAUAAAUACUUGACCACCUGUAGUACAUAAAAACCCAAUCCACAUCAACCCCCCCCCC\
) } def
/len { sequence length } bind def

/coor [
[227.66419983 474.57586670]
[227.66419983 459.57586670]
[227.66419983 444.57586670]
[227.66419983 429.57586670]
[227.66419983 414.57586670]
[227.66419983 399.57586670]
[227.66419983 384.57586670]
[227.66419983 369.57586670]
[227.66419983 354.57586670]
[227.66419983 339.57586670]
[224.41337585 324.93237305]
[210.36997986 320.10342407]
[203.73947144 306.41067505]
[208.89973450 291.71343994]
[202.55261230 278.12246704]
[196.20547485 264.53152466]
[188.75056458 251.51521301]
[180.23948669 239.16365051]
[171.72839355 226.81207275]
[163.21730042 214.46049500]
[154.70620728 202.10893250]
[146.19511414 189.75735474]
[131.61166382 192.95927429]
[116.87345123 190.32670593]
[104.23182678 182.23016357]
[95.62995911 169.87719727]
[92.40420532 155.13243103]
[95.07653809 140.23606873]
[103.27038574 127.46357727]
[94.75930023 115.11200714]
[81.30332947 108.48350525]
[66.32361603 109.26335144]
[51.34390259 110.04319763]
[40.95222473 121.95069885]
[25.17888069 122.93917847]
[13.38191032 112.42218781]
[12.56025028 96.63927460]
[23.20137596 84.95415497]
[38.99209595 84.29940796]
[50.56405640 95.06348419]
[65.54376984 94.28363800]
[80.52348328 93.50379181]
[88.11339569 80.56573486]
[81.48489380 67.10977173]
[74.85639954 53.65380478]
[68.22789764 40.19784164]
[61.59939957 26.74187469]
[54.97090149 13.28590870]
[40.48495865 17.34448814]
[25.49987984 18.67193794]
[10.52605820 17.22304726]
[-3.92650771 13.04716587]
[-17.36556816 6.28652096]
[-29.33339310 -2.82862115]
[-39.42236328 -13.98780251]
[-47.28884888 -26.81094551]
[-52.66492844 -40.86130142]
[-55.36748505 -55.66031265]
[-55.30447769 -70.70394135]
[-52.47805023 -85.47979736]
[-46.98447037 -99.48462677]
[-39.01084518 -112.24142456]
[-28.82875443 -123.31570435]
[-16.78499603 -132.33027649]
[-3.28977680 -138.97811890]
[11.19726086 -143.03279114]
[26.18269539 -144.35620117]
[41.15612793 -142.90327454]
[55.60756683 -138.72349548]
[69.04479980 -131.95922852]
[81.01016998 -122.84085846]
[91.09613037 -111.67896271]
[98.95915985 -98.85369873]
[104.33145142 -84.80189514]
[107.03002167 -70.00215149]
[106.96295929 -54.95854187]
[104.13255310 -40.18344879]
[98.63519287 -26.18010139]
[90.65812683 -13.42545223]
[80.47305298 -2.35391688]
[68.42686462 6.65741062]
[75.05536652 20.11337662]
[81.68386078 33.56933975]
[88.31236267 47.02530670]
[94.94086456 60.48127365]
[101.56935883 73.93724060]
[109.88499451 78.81758118]
[114.99391937 85.81465149]
[116.62075806 93.33802795]
[115.17141724 99.92816162]
[111.58748627 104.51763153]
[107.11087036 106.60091400]
[115.62195587 118.95248413]
[130.47502136 115.84406281]
[145.34651184 118.65151215]
[157.97602844 126.91643524]
[166.45608521 139.35333252]
[169.52018738 154.04945374]
[166.73188782 168.75900269]
[158.54669189 181.24626160]
[167.05778503 193.59783936]
[175.56887817 205.94940186]
[184.07995605 218.30097961]
[192.59104919 230.65255737]
[201.10214233 243.00411987]
[203.35862732 228.17481995]
[213.78582764 217.39179993]
[228.53109741 214.63919067]
[242.14636230 220.93400574]
[249.60104370 233.95043945]
[248.14079285 248.87919617]
[238.30513000 260.20437622]
[223.72814941 263.74157715]
[209.79643250 258.18438721]
[216.14355469 271.77536011]
[222.49069214 285.36630249]
[237.07273865 290.84365845]
[243.31602478 304.71725464]
[238.00431824 318.58523560]
[239.62625122 303.67318726]
[245.14018250 289.72338867]
[254.15217590 277.73242188]
[266.01846313 268.55685425]
[279.89135742 262.85217285]
[294.77975464 261.02590942]
[309.62011719 263.20855713]
[323.35223389 269.24417114]
[334.99517822 278.70156860]
[343.71713257 290.90515137]
[348.89505005 304.98312378]
[350.15902710 319.92974854]
[347.41879272 334.67733765]
[340.87008667 348.17230225]
[330.98071289 359.45062256]
[318.45715332 367.70660400]
[304.19409180 372.35040283]
[289.21044922 373.05032349]
[274.57656860 369.75637817]
[261.33792114 362.70385742]
[250.44023132 352.39654541]
[242.66419983 339.57586670]
[242.66419983 354.57586670]
[242.66419983 369.57586670]
[242.66419983 384.57586670]
[242.66419983 399.57586670]
[242.66419983 414.57586670]
[242.66419983 429.57586670]
[242.66419983 444.57586670]
[242.66419983 459.57586670]
[242.66419983 474.57586670]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 150]
[2 149]
[3 148]
[4 147]
[5 146]
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 119]
[14 116]
[15 115]
[16 114]
[17 105]
[18 104]
[19 103]
[20 102]
[21 101]
[22 100]
[29 93]
[30 92]
[31 42]
[32 41]
[33 40]
[43 86]
[44 85]
[45 84]
[46 83]
[47 82]
[48 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
